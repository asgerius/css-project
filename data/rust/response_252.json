[{"tags": ["types", "rust", "slice"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1573085554, "post_id": 58740117, "comment_id": 103770273, "body": "You have an early return in your function: <code>if item == b&#39; &#39; { return i; }</code> \u2014 are you familiar with what the <code>return</code> keyword means?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573085560, "post_id": 58740117, "comment_id": 103770274, "body": "It&#39;s hard to answer multiple questions made in one post. Please separate them into multiple questions so that we can help you better and so that your questions will help others in the future that have one of the same questions as you!"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1573088322, "post_id": 58740117, "comment_id": 103770869, "body": "is <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b16ef94f0350493785bc8e6e6929e0f1\" rel=\"nofollow noreferrer\">this</a> more clear ?"}, {"owner": {"reputation": 11, "user_id": 8332986, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-5qLKRFTrXpw/AAAAAAAAAAI/AAAAAAAABC8/zZe96Np48_w/photo.jpg?sz=128", "display_name": "nhy", "link": "https://stackoverflow.com/users/8332986/nhy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573100292, "post_id": 58740117, "comment_id": 103773251, "body": "@Shepmaster ok, after review the question. I don&#39;t know how and why i even make this post. It&#39;s all because return keyword. I think i got it now. Thank you so much"}, {"owner": {"reputation": 11, "user_id": 8332986, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-5qLKRFTrXpw/AAAAAAAAAAI/AAAAAAAABC8/zZe96Np48_w/photo.jpg?sz=128", "display_name": "nhy", "link": "https://stackoverflow.com/users/8332986/nhy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1573100350, "post_id": 58740117, "comment_id": 103773257, "body": "@Stargateur thank you for your help, this&#39;s so clear."}], "owner": {"reputation": 11, "user_id": 8332986, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-5qLKRFTrXpw/AAAAAAAAAAI/AAAAAAAABC8/zZe96Np48_w/photo.jpg?sz=128", "display_name": "nhy", "link": "https://stackoverflow.com/users/8332986/nhy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 84, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1573085314, "creation_date": 1573084795, "last_edit_date": 1573085314, "question_id": 58740117, "link": "https://stackoverflow.com/questions/58740117/why-does-iterating-through-a-string-not-execute-code-after-the-loop", "title": "Why does iterating through a string not execute code after the loop?", "body": "<p>I'm reading about the <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html\" rel=\"nofollow noreferrer\">slice type</a>. I'm confused about the part of the example in the function <code>first_word</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut s = String::from(\"hello world\");\n\n    let word = first_word(&amp;s); // word will get the value 5\n\n    s.clear(); // this empties the String, making it equal to \"\"\n\n    // word still has the value 5 here, but there's no more string that\n    // we could meaningfully use the value 5 with. word is now totally invalid!\n    println!(\"|{}| - {}\", s, word)\n}\n\nfn first_word(s: &amp;String) -&gt; usize {\n    let bytes = s.as_bytes();\n    println!(\"head {}\", s.len());\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        println!(\"index: {} - item: {} - length: {}\", i, item, s.len());\n        if item == b' ' {\n            return i;\n        }\n    }\n    println!(\"tail {}\", s.len());\n    s.len()\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>head 11\nindex: 0 - item: 104 - length: 11\nindex: 1 - item: 101 - length: 11\nindex: 2 - item: 108 - length: 11\nindex: 3 - item: 108 - length: 11\nindex: 4 - item: 111 - length: 11\nindex: 5 - item: 32 - length: 11\n|| - 5\n</code></pre>\n\n<ol>\n<li>What happened with <code>s.len()</code>, why does it return 5 instead of the whole string \"hello world\" like the loop part?</li>\n<li><p>Where's the result of the:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"tail {}\", s.len());\n</code></pre></li>\n</ol>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1573085832, "post_id": 58740016, "comment_id": 103770330, "body": "Why have you chosen to take <code>self</code> instead of <code>&amp;self</code>? See <a href=\"https://stackoverflow.com/q/36531671/155423\">When would an implementation want to take ownership of self in Rust?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573085859, "post_id": 58740016, "comment_id": 103770332, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/41664099/155423\">How to prevent a value from being moved?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58740016/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573085966, "post_id": 58740016, "comment_id": 103770359, "body": "How does this question differ from <a href=\"https://stackoverflow.com/q/54993331/155423\">Option&lt;Receiver&gt; Moved in Previous Loop Iteration</a>; <a href=\"https://stackoverflow.com/q/58730100/155423\">Value moved here, in previous iteration of loop</a>; <a href=\"https://stackoverflow.com/q/49309847/155423\">How can I solve \u201cuse of moved value\u201d and \u201cwhich does not implement the <code>Copy</code> trait\u201d?</a>; etc.?"}, {"owner": {"reputation": 181, "user_id": 694705, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/K5AND.jpg?s=128&g=1", "display_name": "glasfl&#252;gel", "link": "https://stackoverflow.com/users/694705/glasfl%c3%bcgel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573115439, "post_id": 58740016, "comment_id": 103778365, "body": "hello @Shepmaster, I really don&#39;t know why I didn&#39;t use &amp;self, because I thought I don&#39;t want to change anything on the parser object. When I use &amp;self, I&#39;m facing other problems which I can&#39;t follow."}, {"owner": {"reputation": 14078, "user_id": 442006, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/745d0832184e9df52e3d6d9e4bdbad52?s=128&d=identicon&r=PG", "display_name": "Roger Dahl", "link": "https://stackoverflow.com/users/442006/roger-dahl"}, "edited": false, "score": 0, "creation_date": 1613335981, "post_id": 58740016, "comment_id": 117037877, "body": "To anyone learning Rust after learning other programming languages: Assignment (<code>=</code>) in Rust is a different beast altogether. It transfers responsibility for the lifetime of the object along with the object, making the previous name you had for it obsolete and unusable."}], "answers": [{"comments": [{"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 1, "creation_date": 1573206529, "post_id": 58744921, "comment_id": 103814322, "body": "You might want to read the Rust book, especially chapters 5.2 and 5.3 on when to use <code>self&#47;&amp;self&#47;&amp;mut self</code>."}, {"owner": {"reputation": 1150, "user_id": 5132605, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/d687ef4dccd887f6685bf5d0df90f90a?s=128&d=identicon&r=PG&f=1", "display_name": "VocoJax", "link": "https://stackoverflow.com/users/5132605/vocojax"}, "edited": false, "score": 1, "creation_date": 1575145549, "post_id": 58744921, "comment_id": 104469558, "body": "Have you tried borrowing a mutable reference to self? <code>&amp;mut self</code>. Declaring this in the function definition will guarantee that your function will not own self. Had this problem in one of my mods. I declared a struct, then called a function on it every loop, and got this same error."}], "tags": [], "owner": {"reputation": 181, "user_id": 694705, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/K5AND.jpg?s=128&g=1", "display_name": "glasfl&#252;gel", "link": "https://stackoverflow.com/users/694705/glasfl%c3%bcgel"}, "is_accepted": false, "score": 1, "last_activity_date": 1573116315, "creation_date": 1573116315, "answer_id": 58744921, "question_id": 58740016, "link": "https://stackoverflow.com/questions/58740016/rust-tells-value-moved-here-in-previous-iteration-of-loop/58744921#58744921", "title": "Rust tells &#39;&#39;value moved here, in previous iteration of loop&quot;", "body": "<p>OK, changed the function's signature to</p>\n\n<pre><code>fn run&lt;'a&gt;(&amp;self, s: &amp;'a str) -&gt; (bool, &amp;'a str)\n</code></pre>\n\n<p>now and needed some other lines to be fixed.</p>\n\n<p>Works now, but I don't know why.</p>\n"}], "owner": {"reputation": 181, "user_id": 694705, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/K5AND.jpg?s=128&g=1", "display_name": "glasfl&#252;gel", "link": "https://stackoverflow.com/users/694705/glasfl%c3%bcgel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 537, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1573116315, "creation_date": 1573083991, "last_edit_date": 1573085711, "question_id": 58740016, "link": "https://stackoverflow.com/questions/58740016/rust-tells-value-moved-here-in-previous-iteration-of-loop", "title": "Rust tells &#39;&#39;value moved here, in previous iteration of loop&quot;", "body": "<p>I'm implementing a parser combinator library:</p>\n\n<pre><code>#[derive(Debug)]\nenum Parser {\n    Char(char),\n    Positive(Box&lt;Parser&gt;),\n}\n\nimpl Parser {\n    fn run(self, s: &amp;str) -&gt; (bool, &amp;str) {\n        match self {\n            Parser::Char(ch) =&gt; {\n                if s[0..1].chars().next().unwrap() == ch {\n                    (true, &amp;s[1..])\n                } else {\n                    (false, s)\n                }\n            }\n\n            Parser::Positive(parser) =&gt; {\n                //println!(\"{:?}\", parser);\n                let mut s = s;\n                let mut res = (false, s);\n                let parser = *parser;\n\n                loop {\n                    let ret = parser.run(s);\n                    if !ret.0 {\n                        break;\n                    }\n\n                    res = ret;\n                    s = res.1\n                }\n\n                res\n            }\n            _ =&gt; (false, s),\n        }\n    }\n}\n\npub fn run() {\n    let x = Parser::Positive(Box::new(Parser::Char('a')));\n    let ret = x.run(\"aaa\");\n\n    println!(\"{} {}\", ret.0, ret.1);\n}\n</code></pre>\n\n<p>I'm getting the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `parser`\n  --&gt; src/lib.rs:25:31\n   |\n22 |                 let parser = *parser;\n   |                     ------ move occurs because `parser` has type `Parser`, which does not implement the `Copy` trait\n...\n25 |                     let ret = parser.run(s);\n   |                               ^^^^^^ value moved here, in previous iteration of loop\n</code></pre>\n\n<p>I have no idea why this happens. I've tried to add the <code>Copy</code> trait to the <code>Parser</code> enum, but this causes other errors. Why can't I call <code>parser.run()</code> in a loop, or even twice? A single call compiles and runs perfectly.</p>\n\n<p>Would it be better to use a struct instead of an enum?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1573104088, "last_edit_date": 1573104088, "creation_date": 1573077383, "answer_id": 58739076, "question_id": 58739075, "link": "https://stackoverflow.com/questions/58739075/how-do-i-import-multiple-versions-of-the-same-crate/58739076#58739076", "title": "How do I import multiple versions of the same crate?", "body": "<p>As of <a href=\"https://github.com/rust-lang/rust/blob/1.31.0/RELEASES.md#cargo\" rel=\"noreferrer\">Rust 1.31</a>, you can use the <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html?highlight=rename,depende#renaming-dependencies-in-cargotoml\" rel=\"noreferrer\">rename-dependency</a> Cargo feature: </p>\n\n<pre><code>[dependencies]\nfutures-01 = { package = \"futures\", version = \"0.1.0\" }\nfutures-03 = { package = \"futures\", version = \"0.3.0\" }\n</code></pre>\n\n<p>You can choose whatever name you want for the key. The <code>package</code> attribute needs to be the official name of the crate. </p>\n\n<p>Within your code, you can access version 0.1.x using the crate name <code>futures_01</code>, and version 0.3.x via <code>futures_03</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/50999616/155423\">How to idiomatically alias a crate in Rust 2018?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a></li>\n</ul>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 631, "favorite_count": 0, "accepted_answer_id": 58739076, "answer_count": 1, "score": 2, "last_activity_date": 1573104088, "creation_date": 1573077383, "question_id": 58739075, "link": "https://stackoverflow.com/questions/58739075/how-do-i-import-multiple-versions-of-the-same-crate", "title": "How do I import multiple versions of the same crate?", "body": "<p>As discussed in <a href=\"https://stackoverflow.com/q/51714866/155423\">Is it documented that Cargo can download and bundle multiple versions of the same crate?</a>, it's possible for Cargo to pull in multiple versions of the same crate for a single program. How do I access both of these versions concurrently?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573067614, "post_id": 58737024, "comment_id": 103764158, "body": "Why do you believe that <code>enumerate</code> will not work outside of a <code>for</code> loop?"}, {"owner": {"reputation": 3359, "user_id": 5950725, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/6uR5y.jpg?s=128&g=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/5950725/tom"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573067682, "post_id": 58737024, "comment_id": 103764185, "body": "As soon as I posted it I realized the answer"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1573067691, "post_id": 58737024, "comment_id": 103764191, "body": "<code>enumerate</code> is not magical nor tied to <code>for</code>. It&#39;s just a function which returns an iterator over tuples. See <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumer&zwnj;&#8203;ate</a>"}, {"owner": {"reputation": 3359, "user_id": 5950725, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/6uR5y.jpg?s=128&g=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/5950725/tom"}, "edited": false, "score": 0, "creation_date": 1573285336, "post_id": 58737024, "comment_id": 103839742, "body": "Who deleted my comment here?"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1573067774, "post_id": 58737046, "comment_id": 103764230, "body": "Hint: if you plan on self-answering your question, in <a href=\"https://stackoverflow.com/questions/ask\">the &quot;asking&quot; form</a>, there is a &quot;answer your own question&quot; checkbox at the bottom. That way, your answer appears the exact same moment your question is posted."}, {"owner": {"reputation": 3359, "user_id": 5950725, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/6uR5y.jpg?s=128&g=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/5950725/tom"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1573067820, "post_id": 58737046, "comment_id": 103764247, "body": "Thanks Lukas. I realized like 5 seconds after I posted"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1573067850, "post_id": 58737046, "comment_id": 103764265, "body": "Ah ok, I understand :D"}], "tags": [], "owner": {"reputation": 3359, "user_id": 5950725, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/6uR5y.jpg?s=128&g=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/5950725/tom"}, "is_accepted": false, "score": 2, "last_activity_date": 1573067524, "creation_date": 1573067524, "answer_id": 58737046, "question_id": 58737024, "link": "https://stackoverflow.com/questions/58737024/how-to-get-the-index-of-the-current-element-being-processed-in-the-iteration-wit/58737046#58737046", "title": "How to get the index of the current element being processed in the iteration without a for loop?", "body": "<p>You can simply use <code>enumerate</code>: </p>\n\n<pre><code>fn main() {\n    let v = vec![1; 10]\n        .iter()\n        .enumerate()\n        .map(|(i, x)| i + x)\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    print!(\"v{:?}\", v);\n}\n</code></pre>\n\n<p>The reason for this is because the for loop takes an enumerator:\nIn slightly more abstract terms:</p>\n\n<pre><code>for var in expression {\n    code\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/1.1.0/book/for-loops.html\" rel=\"nofollow noreferrer\">The expression is an iterator.</a> </p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 6, "last_activity_date": 1573067528, "creation_date": 1573067528, "answer_id": 58737050, "question_id": 58737024, "link": "https://stackoverflow.com/questions/58737024/how-to-get-the-index-of-the-current-element-being-processed-in-the-iteration-wit/58737050#58737050", "title": "How to get the index of the current element being processed in the iteration without a for loop?", "body": "<p>You can also use <code>enumerate</code>! </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let v = vec![1; 10]\n    .iter()\n    .enumerate()\n    .map(|(i, &amp;x)| x + i)\n    .collect::&lt;Vec&lt;_&gt;&gt;();\n\nprintln!(\"v{:?}\", v);   // prints v[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n</code></pre>\n\n<hr>\n\n<p>Let's see how this works. <a href=\"https://doc.rust-lang.org/stable/core/iter/trait.Iterator.html#method.enumerate\" rel=\"noreferrer\"><code>Iterator::enumerate</code></a> returns <a href=\"https://doc.rust-lang.org/stable/core/iter/struct.Enumerate.html\" rel=\"noreferrer\"><code>Enumerate&lt;Self&gt;</code></a>. That type also implements <code>Iterator</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;I&gt; Iterator for Enumerate&lt;I&gt;\nwhere\n    I: Iterator,\n{\n    type Item = (usize, &lt;I as Iterator&gt;::Item);\n    // ...\n}\n</code></pre>\n\n<p>As you can see, the new iterator yields tuples of the index and the original \nvalue. </p>\n"}], "owner": {"reputation": 3359, "user_id": 5950725, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/6uR5y.jpg?s=128&g=1", "display_name": "Tom", "link": "https://stackoverflow.com/users/5950725/tom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1678, "favorite_count": 0, "accepted_answer_id": 58737050, "answer_count": 2, "score": 3, "last_activity_date": 1573067910, "creation_date": 1573067410, "last_edit_date": 1573067910, "question_id": 58737024, "link": "https://stackoverflow.com/questions/58737024/how-to-get-the-index-of-the-current-element-being-processed-in-the-iteration-wit", "title": "How to get the index of the current element being processed in the iteration without a for loop?", "body": "<p>I have read <a href=\"https://stackoverflow.com/questions/28991050/how-to-iterate-a-vect-with-the-indexed-position\">How to iterate a Vec&lt;T&gt; with the indexed position?</a> where the answer is to use <code>enumerate</code> in a <code>for</code>-loop.</p>\n\n<p>But if I don't use a <code>for</code>-loop like this:</p>\n\n<pre><code>fn main() {\n    let v = vec![1; 10]\n        .iter()\n        .map(|&amp;x| x + 1  /* + index */ ) // &lt;--\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    print!(\"v{:?}\", v);\n}\n</code></pre>\n\n<p>How could I get the index in the above closure?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1573066965, "post_id": 58736827, "comment_id": 103763897, "body": "I don&#39;t understand your question. Can you improve with more example and more explanation of what you want?"}], "answers": [{"comments": [{"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 0, "creation_date": 1573069584, "post_id": 58736952, "comment_id": 103764948, "body": "Thanks @Shepmaster for the concise and timely answer, it worked out pretty well!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1573067079, "creation_date": 1573067079, "answer_id": 58736952, "question_id": 58736827, "link": "https://stackoverflow.com/questions/58736827/is-it-possible-to-pass-a-tuple-struct-constructor-to-a-function-to-return-differ/58736952#58736952", "title": "Is it possible to pass a tuple struct constructor to a function to return different types of values?", "body": "<p>Tuple struct constructors are functions. You can pass functions and closures as arguments to other functions.</p>\n\n<pre><code>pub struct String10(String);\npub struct String20(String);\n\nimpl String10 {\n    pub fn create(field_name: &amp;str, s: &amp;str) -&gt; String10 {\n        create_string(field_name, String10, 10, s)\n    }\n}\n\nimpl String20 {\n    pub fn create(field_name: &amp;str, s: &amp;str) -&gt; String20 {\n        create_string(field_name, String20, 20, s)\n    }\n}\n\npub fn create_string&lt;T&gt;(\n    _field_name: &amp;str,\n    ctor: impl FnOnce(String) -&gt; T,\n    _max_len: u32,\n    s: &amp;str,\n) -&gt; T {\n    ctor(s.to_string())\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/36390665/155423\">In Rust how do you pass a function as a parameter?</a></li>\n</ul>\n"}], "owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 207, "favorite_count": 1, "accepted_answer_id": 58736952, "answer_count": 1, "score": 2, "last_activity_date": 1573067129, "creation_date": 1573066582, "last_edit_date": 1573067129, "question_id": 58736827, "link": "https://stackoverflow.com/questions/58736827/is-it-possible-to-pass-a-tuple-struct-constructor-to-a-function-to-return-differ", "title": "Is it possible to pass a tuple struct constructor to a function to return different types of values?", "body": "<p>Is it possible to pass different struct constructors to a function so that it could return different values created with those constructors?</p>\n\n<p>For example, I might pass <code>String10</code> or <code>String20</code> to <code>createString</code> and it should create a different type of value based on the constructor passed in.</p>\n\n<p>I don't know how to set the type for <code>ctor</code> nor the return type. I tried a generic <code>&lt;T&gt;</code> without success. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct String10(String);\npub struct String20(String);\n\nimpl String10 {\n    pub fn create(fieldName: &amp;str, str: &amp;str) -&gt; String10 {\n        // Failed to pass `String10` as a constructor to createString\n        createString(fieldName, String10, 10, str)\n    }\n}\n\nimpl String20 {\n    // same failure here\n    pub fn create(fieldName: &amp;str, str: &amp;str) -&gt; String10 {\n        createString(fieldName, String20, 20, str)\n    }\n}\n\n// Not sure what's the type for ctor and the return type?\npub fn createString&lt;T&gt;(fieldName: &amp;str, ctor: T, maxLen: u32, str: &amp;str) -&gt; T {\n    ctor(str);\n}\n</code></pre>\n"}, {"tags": ["rust", "iterator", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573059369, "post_id": 58735031, "comment_id": 103760277, "body": "You deleted your previous question before I could reply to your comment, but I still believe this is a duplicate of <a href=\"https://stackoverflow.com/q/29760668/155423\">Conditionally iterate over one of several possible iterators</a>. Yes, that question asks specifically about an iterator, but the question and answer can be extended to any trait."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573059557, "post_id": 58735031, "comment_id": 103760384, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8c191eb1cb008a37cc6f63b71528a799\" rel=\"nofollow noreferrer\">The duplicates applied to your case</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1573059594, "post_id": 58735031, "comment_id": 103760402, "body": "As already suggested, voting as a duplicate of <a href=\"https://stackoverflow.com/questions/52001592/why-can-impl-trait-not-be-used-to-return-multiple-conditional-types\">Why can impl trait not be used to return multiple / conditional types?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573059620, "post_id": 58735031, "comment_id": 103760420, "body": "See also <a href=\"https://stackoverflow.com/q/52001592/155423\">Why can impl trait not be used to return multiple / conditional types?</a>; <a href=\"https://stackoverflow.com/q/39482131/155423\">Using impl Trait in Trait definition</a>"}, {"owner": {"reputation": 504, "user_id": 5589076, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wtm43.png?s=128&g=1", "display_name": "malinator", "link": "https://stackoverflow.com/users/5589076/malinator"}, "edited": false, "score": 0, "creation_date": 1573059980, "post_id": 58735031, "comment_id": 103760605, "body": "<a href=\"https://stackoverflow.com/questions/52001592/why-can-impl-trait-not-be-used-to-return-multiple-conditional-types\" title=\"why can impl trait not be used to return multiple conditional types\">stackoverflow.com/questions/52001592/&hellip;</a> does solve my problem and I will mark this as duplicate. Is a level of indirection the only way to achieve this, then?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573060105, "post_id": 58735031, "comment_id": 103760682, "body": "For now, yes. See <a href=\"https://stackoverflow.com/a/39490692/155423\">Is it possible to use <code>impl Trait</code> as a function&#39;s return type in a trait definition?</a> for a nightly-only solution that may be what you want."}], "owner": {"reputation": 504, "user_id": 5589076, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wtm43.png?s=128&g=1", "display_name": "malinator", "link": "https://stackoverflow.com/users/5589076/malinator"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 36, "favorite_count": 0, "closed_date": 1573060047, "answer_count": 0, "score": 0, "last_activity_date": 1573059418, "creation_date": 1573059238, "last_edit_date": 1573059418, "question_id": 58735031, "link": "https://stackoverflow.com/questions/58735031/is-it-possible-to-return-a-trait-from-a-trait-that-depends-on-the-arguments", "closed_reason": "Duplicate", "title": "Is it possible to return a trait from a trait that depends on the arguments?", "body": "<p>I have two operators over an <code>Iterator</code> (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e31f7a5e1abc21eed8b2b76fc8607b3b\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre><code>fn begins_with&lt;'a, I&gt;(lines: I, query: &amp;'a str) -&gt; impl Iterator&lt;Item = String&gt; + 'a\nwhere\n    I: Iterator&lt;Item = String&gt; + 'a,\n{\n    // Some whatever filtering\n    lines.filter(move |line| line.starts_with(&amp;query))\n}\n\nfn whatever&lt;'a, I&gt;(lines: I, query: &amp;'a str) -&gt; impl Iterator&lt;Item = String&gt; + 'a\nwhere\n    I: Iterator&lt;Item = String&gt; + 'a,\n{\n    // Some whatever operation\n    let mut sorted: Vec&lt;String&gt; = lines.collect();\n    sorted.sort_unstable();\n    sorted.into_iter().map(|s| s.to_lowercase())\n}\n</code></pre>\n\n<p>I would like to be able to use one or the other and apply them on an iterator of <code>String</code></p>\n\n<p>One possibility is to use an <code>enum</code> like so (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a130c43cedbfe961aff5ebf0da348203\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>pub enum Operator {\n    BeginsWith,\n    Whatever,\n}\n\nfn operate&lt;'a, I&gt;(operator: Operator, lines: I, query: &amp;'a str) -&gt; impl Iterator&lt;Item = String&gt; + 'a\nwhere\n    I: Iterator&lt;Item = String&gt; + 'a,\n{\n    match operator {\n        Operator::BeginsWith =&gt; begins_with(lines, query),\n        Operator::Whatever =&gt; whatever(lines, query),\n    }\n}\n</code></pre>\n\n<p>But I get the following error (which is fair)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: match arms have incompatible types\n  --&gt; src/lib.rs:30:31\n   |\n28 | /     match operator {\n29 | |         Operator::BeginsWith =&gt; begins_with(lines, query),\n   | |                                 ------------------------- this is found to be of type `impl std::iter::Iterator`\n30 | |         Operator::Whatever =&gt; whatever(lines, query),\n   | |                               ^^^^^^^^^^^^^^^^^^^^^^ expected opaque type, found a different opaque type\n31 | |     }\n   | |_____- `match` arms have incompatible types\n   |\n   = note: expected type `impl std::iter::Iterator` (opaque type)\n              found type `impl std::iter::Iterator` (opaque type)\n</code></pre>\n\n<p>Another approach would be to make a trait and have implementations of it (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f37a94cd572b36522ee0136b7aeda26e\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>pub trait Operator {\n    pub fn operate&lt;'a, I&gt;(lines: I, query: &amp;'a str) -&gt; impl Iterator&lt;Item = String&gt; + 'a\nwhere\n    I: Iterator&lt;Item = String&gt; + 'a;\n}\n</code></pre>\n\n<p>But this is not allowed in Rust.</p>\n\n<p>What mechanisms does Rust provide for me to return an <code>Iterator</code> that depends on the arguments passed into the method implemented from a trait?</p>\n"}, {"tags": ["xpath", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1573054962, "creation_date": 1573054962, "answer_id": 58733813, "question_id": 58733477, "link": "https://stackoverflow.com/questions/58733477/how-do-i-iterate-all-attributes-of-the-nodes-i-extracted-with-sxd-xpath/58733813#58733813", "title": "How do I iterate all attributes of the nodes I extracted with sxd_xpath?", "body": "<p>The straight-forward thing you can do is select the attributes directly in the XPath using <code>//Node[@name=\"somenodename\"]/@*</code>:</p>\n\n<pre><code>let value = evaluate_xpath(&amp;document, r#\"//Node[@name=\"somenodename\"]/@*\"#)\n    .expect(\"XPath evaluation failed\");\n\nif let Value::Nodeset(nodes) = value {\n    for node in nodes.document_order() {\n        if let Node::Attribute(attr) = node {\n            println!(\"{}\", attr.value());\n        }\n    }\n}\n</code></pre>\n\n<p>If you need to iterate on the elements for whatever reason, you need to check if each node in the nodeset is an element, then get the attributes of the nodeset:</p>\n\n<pre><code>let value = evaluate_xpath(&amp;document, r#\"//Node[@name=\"somenodename\"]\"#)\n    .expect(\"XPath evaluation failed\");\n\nif let Value::Nodeset(nodes) = value {\n    for node in nodes.document_order() {\n        if let Node::Element(elem) = node {\n            for attr in elem.attributes() {\n                println!(\"{}\", attr.value());\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>You can also make use of Rust's iterator chaining and some conversion methods on <code>Node</code>:</p>\n\n<pre><code>let value = evaluate_xpath(&amp;document, r#\"//Node[@name=\"somenodename\"]\"#)\n    .expect(\"XPath evaluation failed\");\n\nif let Value::Nodeset(nodes) = value {\n    for attr in nodes\n        .document_order()\n        .into_iter()\n        .flat_map(|n| n.element())\n        .flat_map(|e| e.attributes())\n    {\n        println!(\"{}\", attr.value());\n    }\n}\n</code></pre>\n\n<p>Complete setup:</p>\n\n<pre><code>use sxd_document::parser; // 0.3.2\nuse sxd_xpath::{evaluate_xpath, Value}; // 0.4.2\n\nfn main() {\n    let content = r#\"&lt;?xml version=\"1.0\"?&gt;\n    &lt;foo&gt;\n      &lt;Node name=\"somenodename\" id=\"1\" /&gt;\n      &lt;bar&gt;\n        &lt;Node name=\"somenodename\" id=\"2\" /&gt;\n      &lt;/bar&gt;\n    &lt;/foo&gt;\n    \"#;\n\n    let package = parser::parse(&amp;content).expect(\"unable to parse\");\n    let document = package.as_document();\n\n    // Various methods here\n}\n</code></pre>\n\n<p>Disclaimer: I am the primary author of SXD-Document and SXD-XPath.</p>\n"}], "owner": {"reputation": 235, "user_id": 987472, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/426a6ef43afaea0aacf8dd62b90d42ac?s=128&d=identicon&r=PG", "display_name": "angelodiego", "link": "https://stackoverflow.com/users/987472/angelodiego"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 58733813, "answer_count": 1, "score": 0, "last_activity_date": 1573054962, "creation_date": 1573053905, "last_edit_date": 1573054211, "question_id": 58733477, "link": "https://stackoverflow.com/questions/58733477/how-do-i-iterate-all-attributes-of-the-nodes-i-extracted-with-sxd-xpath", "title": "How do I iterate all attributes of the nodes I extracted with sxd_xpath?", "body": "<p>I'm trying to iterate all the attributes of the nodes I extracted with sxd_xpath but I cannot figure out how</p>\n\n<pre><code>extern crate sxd_document;\nextern crate sxd_xpath;\n\nuse std::fs;\nuse sxd_document::parser;\nuse sxd_xpath::{evaluate_xpath, Value};\n\nfn main() {\n    let content =\n        fs::read_to_string(\"C:/afile.xml\").expect(\"Something went wrong reading the file\");\n    let package = parser::parse(&amp;content);\n    match package {\n        Ok(package) =&gt; {\n            let document = package.as_document();\n            let value = evaluate_xpath(&amp;document, \"//Node[@name=\\\"somenodename\\\"]\")\n                .expect(\"XPath evaluation failed\");\n\n            if let Value::Nodeset(nodes) = value {\n                for node in nodes.document_order() {\n                    //how to get all the attributes of all the nodes i'm parsing?\n                }\n            }\n        }\n        Err(err) =&gt; {\n            println!(\"{:?}\", err);\n        }\n    }\n}\n</code></pre>\n\n<p>I tried reading the documentation but I cannot see a way to do that</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 11, "creation_date": 1573051778, "post_id": 58732657, "comment_id": 103755769, "body": "Do you have 137 billion gigabytes of memory? Because that&#39;s how much you&#39;d need for that array."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 8, "creation_date": 1573051848, "post_id": 58732657, "comment_id": 103755803, "body": "As the error suggests, the limit is of the &quot;current architecture&quot;, not Rust. The default stack size is 2 MB, so you will get a stack overflow as soon as you run code that tries to instantiate an array of more than 2 million elements (actually 250,000 <code>u64</code>s). You will <b>never</b> be able to allocate as much as you are trying, even if you used (for example) a <code>Vec</code> to put it on the heap."}, {"owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "edited": false, "score": 0, "creation_date": 1573053288, "post_id": 58732657, "comment_id": 103756685, "body": "I think the problem here is that you are specifying the <i>actual</i> size in memory that the OS will reserve for the array, not the <i>maximum size</i> \ud83d\ude04. You might want to try a <code>Vec</code> if you don&#39;t know how long the array is going to be at compile time."}, {"owner": {"reputation": 5335, "user_id": 6920962, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e62cd73355fc90d37429f9443df38da?s=128&d=identicon&r=PG&f=1", "display_name": "user28434", "link": "https://stackoverflow.com/users/6920962/user28434"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1573053594, "post_id": 58732657, "comment_id": 103756908, "body": "@interjay, technically you could be required to have this amount of memory to host this array. But in reality using virtual memory tricks (like not actually initializing pages, until it&#39;s actually required; or swapping, but again, there&#39;re no known large storage devices for this) you may have it. And it will work, until it won&#39;t. Which is not <code>rust</code> way of doing thing, obviously."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 5335, "user_id": 6920962, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e62cd73355fc90d37429f9443df38da?s=128&d=identicon&r=PG&f=1", "display_name": "user28434", "link": "https://stackoverflow.com/users/6920962/user28434"}, "edited": false, "score": 4, "creation_date": 1573054844, "post_id": 58732657, "comment_id": 103757690, "body": "@user28434 even using virtual memory tricks, you can&#39;t declare an array of this size because you can&#39;t address it, even with 64-bits pointers."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1573060057, "post_id": 58733086, "comment_id": 103760649, "body": "&quot;On 64-bit Linux, with Rust 1.38, it appears that the maximum size is 2\u2074\u2077 - 1:&quot; while you will be able to <i>compile</i> such a program, it will immediately segfault on any real machine because that&#39;s still a petabyte of memory."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1573063917, "post_id": 58733086, "comment_id": 103762515, "body": "<a href=\"https://doc.rust-lang.org/nomicon/vec-alloc.html\" rel=\"nofollow noreferrer\">This Nomicon chapter</a> mentions &quot;As such we must limit all allocations to <code>isize::MAX</code> elements&quot;. There are some more subtle limits in place, I think. That chapter mentions a lot of details about allocation limits."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1573064659, "post_id": 58733086, "comment_id": 103762867, "body": "FWIW, The reason it&#39;s 2^47 instead of 2^48 is because the address space is discontinuous, not related to the <code>isize</code>/<code>usize</code> issue (which would only be a concern if you could use the whole address space). <a href=\"https://en.m.wikipedia.org/wiki/X86-64#Virtual_address_space_details\" rel=\"nofollow noreferrer\">Canonical form addresses</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1573064079, "last_edit_date": 1573064079, "creation_date": 1573052742, "answer_id": 58733086, "question_id": 58732657, "link": "https://stackoverflow.com/questions/58732657/how-many-elements-can-a-rust-array-have/58733086#58733086", "title": "How many elements can a Rust array have?", "body": "<p>Array length is <a href=\"https://doc.rust-lang.org/stable/reference/types/numeric.html#machine-dependent-integer-types\" rel=\"nofollow noreferrer\">constrained by the <code>isize</code> type</a>, which is a platform-sized integer:</p>\n\n<blockquote>\n  <p>The <code>isize</code> type is a signed integer type with the same number of bits as the platform's pointer type. The theoretical upper bound on object and array size is the maximum <code>isize</code> value. This ensures that <code>isize</code> can be used to calculate differences between pointers into an object or array and can address every byte within an object along with one byte past the end.</p>\n</blockquote>\n\n<ul>\n<li>16-bit platforms: A maximum value of 2<sup>15</sup> - 1</li>\n<li>32-bit platforms: A maximum value of 2<sup>31</sup> - 1</li>\n<li>64-bit platforms: A maximum value of 2<sup>63</sup> - 1</li>\n</ul>\n\n<pre><code>fn main() {\n    let x = [(); std::isize::MAX];\n    println!(\"Hello, world! {}\", x.len());\n}\n</code></pre>\n\n<p>Your specific error is because constructing an array of that many elements when the element has a non-zero size would require an outrageous amount of memory, more than a given platform would actually support. </p>\n\n<p>An array's size is computed by the size of an element multiplied by the element count. Your array has elements of type <code>u64</code> (8 bytes) and attempts to have 2<sup>64</sup> - 1 elements, totaling 147.6 exabytes.</p>\n\n<p>On 64-bit Linux, with Rust 1.38, it appears that the maximum size is 2<sup>47</sup> - 1:</p>\n\n<pre><code>[0u8; (1usize &lt;&lt; 47) - 1];\n</code></pre>\n"}], "owner": {"reputation": 667, "user_id": 8448348, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/855c234f7351c596287c174e0a08cc22?s=128&d=identicon&r=PG&f=1", "display_name": "HelloWorld", "link": "https://stackoverflow.com/users/8448348/helloworld"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 742, "favorite_count": 0, "closed_date": 1573099124, "accepted_answer_id": 58733086, "answer_count": 1, "score": 5, "last_activity_date": 1573064079, "creation_date": 1573051495, "last_edit_date": 1573052515, "question_id": 58732657, "link": "https://stackoverflow.com/questions/58732657/how-many-elements-can-a-rust-array-have", "closed_reason": "Duplicate", "title": "How many elements can a Rust array have?", "body": "<p>This code gave me an error:</p>\n\n<pre><code>fn main() {\n    let x = [0 as u64; std::u64::MAX as usize];\n    println!(\"Hello, world! {}\", std::u64::MAX);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the type `[u64; 18446744073709551615]` is too big for the current architecture\n --&gt; src/main.rs:2:9\n  |\n2 |     let x = [0 as u64; std::u64::MAX as usize];\n  |         ^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1460, "user_id": 2655102, "user_type": "registered", "accept_rate": 22, "profile_image": "https://www.gravatar.com/avatar/a14dc4fa847dd6fe776da0cc90cce8cf?s=128&d=identicon&r=PG", "display_name": "Renkai", "link": "https://stackoverflow.com/users/2655102/renkai"}, "reply_to_user": {"reputation": 574, "user_id": 1545888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/CSfE8.png?s=128&g=1", "display_name": "Sty", "link": "https://stackoverflow.com/users/1545888/sty"}, "edited": false, "score": 0, "creation_date": 1573043385, "post_id": 58730100, "comment_id": 103750958, "body": "@Sty I want to change the value of left, right in loop,so ref will not compile,too."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1573050220, "post_id": 58730100, "comment_id": 103754846, "body": "Obligatory: <a href=\"https://rust-unofficial.github.io/too-many-lists/index.html\" rel=\"nofollow noreferrer\">Learn Rust With Entirely Too Many Linked Lists</a>"}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 3, "last_activity_date": 1573043696, "creation_date": 1573043696, "answer_id": 58730314, "question_id": 58730100, "link": "https://stackoverflow.com/questions/58730100/value-moved-here-in-previous-iteration-of-loop/58730314#58730314", "title": "Value moved here, in previous iteration of loop", "body": "<p>You're not borrowing the nodes, you're moving them.</p>\n\n<p>In order to use references, you should replace</p>\n\n<pre><code>let mut left = l1;\nlet mut right = l2;\n</code></pre>\n\n<p>with</p>\n\n<pre><code>let mut left = &amp;l1;\nlet mut right = &amp;l2;\n</code></pre>\n\n<p>and then later</p>\n\n<pre><code>right = rightN.next;\n</code></pre>\n\n<p>with</p>\n\n<pre><code>right = &amp;rightN.next;\n</code></pre>\n\n<p>etc.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dc3682a8c8b5cb2f0c65b8814004c569\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 1460, "user_id": 2655102, "user_type": "registered", "accept_rate": 22, "profile_image": "https://www.gravatar.com/avatar/a14dc4fa847dd6fe776da0cc90cce8cf?s=128&d=identicon&r=PG", "display_name": "Renkai", "link": "https://stackoverflow.com/users/2655102/renkai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1568, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1573046618, "creation_date": 1573042935, "last_edit_date": 1573046618, "question_id": 58730100, "link": "https://stackoverflow.com/questions/58730100/value-moved-here-in-previous-iteration-of-loop", "title": "Value moved here, in previous iteration of loop", "body": "<p>This is what I wrote for <a href=\"https://leetcode.com/problems/add-two-numbers/\" rel=\"nofollow noreferrer\">LeetCode: Add Two Numbers</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//2. Add Two Numbers\n// Definition for singly-linked list.\n#[derive(PartialEq, Eq, Clone, Debug)]\npub struct ListNode {\n    pub val: i32,\n    pub next: Option&lt;Box&lt;ListNode&gt;&gt;,\n}\n\nimpl ListNode {\n    #[inline]\n    fn new(val: i32) -&gt; Self {\n        ListNode { next: None, val }\n    }\n}\n\nstruct Solution;\n\nimpl Solution {\n    pub fn list_to_num(ls: &amp;Option&lt;Box&lt;ListNode&gt;&gt;) -&gt; i64 {\n        let mut vec = vec![];\n        let mut head = ls;\n\n        while let Some(node) = head {\n            vec.push(node.val);\n            head = &amp;node.next;\n        }\n\n        vec.reverse();\n\n        let mut num = 0i64;\n\n        for x in vec {\n            num *= 10;\n            num += x as i64;\n        }\n\n        num\n    }\n\n    pub fn num_to_list(num: i64) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n        let num_str = num.to_string();\n        let vec = num_str\n            .chars()\n            .map(|x| x.to_digit(10).unwrap() as i32)\n            .collect::&lt;Vec&lt;_&gt;&gt;();\n\n        let mut res = None;\n        for x in vec {\n            let mut one = ListNode::new(x);\n            one.next = res;\n            res = Some(Box::new(one));\n        }\n\n        res\n    }\n\n    pub fn add_two_numbers(\n        l1: Option&lt;Box&lt;ListNode&gt;&gt;,\n        l2: Option&lt;Box&lt;ListNode&gt;&gt;,\n    ) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n        let mut vec = vec![] as Vec&lt;i32&gt;;\n        let mut step = 0;\n        let mut left = l1;\n        let mut right = l2;\n        loop {\n            match (left, right) {\n                (None, None) =&gt; {\n                    if step != 0 {\n                        vec.push(step);\n                    }\n                    break;\n                }\n                (Some(leftN), None) =&gt; {\n                    let curr = leftN.val + step;\n                    if curr &gt;= 10 {\n                        vec.push(curr - 10);\n                        step = 1\n                    } else {\n                        vec.push(curr);\n                        step = 0\n                    }\n                    left = leftN.next\n                }\n                (None, Some(rightN)) =&gt; {\n                    let curr = rightN.val + step;\n                    if curr &gt;= 10 {\n                        vec.push(curr - 10);\n                        step = 1\n                    } else {\n                        vec.push(curr);\n                        step = 0\n                    }\n                    right = rightN.next\n                }\n                (Some(leftN), Some(rightN)) =&gt; {\n                    let curr = leftN.val + rightN.val + step;\n                    if curr &gt;= 10 {\n                        vec.push(curr - 10);\n                        step = 1\n                    } else {\n                        vec.push(curr);\n                        step = 0\n                    }\n                    right = rightN.next;\n                    left = leftN.next\n                }\n            }\n        }\n\n        vec.reverse();\n\n        let mut res = None;\n\n        for x in vec {\n            let mut next = ListNode::new(x);\n            next.next = res;\n            res = Some(Box::new(next));\n        }\n        res\n    }\n}\n\nfn main() {\n    let list1 = Solution::num_to_list(9);\n    let list2 = Solution::num_to_list(991);\n    println!(\"list1 {:?}\", list1);\n    println!(\"list2 {:?}\", list2);\n    let res = Solution::add_two_numbers(list1, list2);\n    println!(\"summed {:#?}\", res);\n}\n</code></pre>\n\n<p>I get a compile error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `left`\n  --&gt; src/main.rs:66:20\n   |\n63 |         let mut left = l1;\n   |             -------- move occurs because `left` has type `std::option::Option&lt;std::boxed::Box&lt;ListNode&gt;&gt;`, which does not implement the `Copy` trait\n...\n66 |             match (left, right) {\n   |                    ^^^^ value moved here, in previous iteration of loop\n\nerror[E0382]: use of moved value: `right`\n  --&gt; src/main.rs:66:26\n   |\n64 |         let mut right = l2;\n   |             --------- move occurs because `right` has type `std::option::Option&lt;std::boxed::Box&lt;ListNode&gt;&gt;`, which does not implement the `Copy` trait\n65 |         loop {\n66 |             match (left, right) {\n   |                          ^^^^^ value moved here, in previous iteration of loop\n</code></pre>\n\n<p>I think each iteration is independent, and if the value is borrowed by a previous iteration, it should be returned in \"this\" iteration.</p>\n\n<p>If I replace <code>match (left, right) {</code> with <code>match (left.clone(), right.clone()) {</code>, the code compiles, but it might consume more memory than necessary. What is the better way to make it compile and be memory economical?</p>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1573036311, "post_id": 58727457, "comment_id": 103747190, "body": "I&#39;d say there&#39;s an inversion of dependency here: it&#39;s reasonable for your examples to depend on your library, but why would your library depends on the examples?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1573037507, "post_id": 58727457, "comment_id": 103747832, "body": "From <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#examples\" rel=\"nofollow noreferrer\">the documentation</a>: &quot;Files located under examples are example <b>uses</b> of the functionality provided by the library&quot; (emphasy mine). Examples use the library, not the reverse."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1573037654, "post_id": 58727457, "comment_id": 103747913, "body": "@Jmb I don&#39;t think there&#39;s another answer that what you said. You should transmute your comment into an answer"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573046492, "post_id": 58731082, "comment_id": 103752723, "body": "See also <a href=\"https://stackoverflow.com/a/44002428/155423\">How can I use a module from outside the src folder in a binary project, such as for integration tests or benchmarks?</a>; <a href=\"https://stackoverflow.com/a/58715429/155423\">How to import a module from a directory outside of the <code>src</code> directory?</a>."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1573046183, "creation_date": 1573046183, "answer_id": 58731082, "question_id": 58727457, "link": "https://stackoverflow.com/questions/58727457/how-do-i-use-code-from-a-librarys-example-in-the-library-itself/58731082#58731082", "title": "How do I use code from a library&#39;s example in the library itself?", "body": "<p>I'd say there's an inversion of dependency here: it's reasonable for your examples to depend on your library, but why would your library depend on the examples? As pointed out by Denys S\u00e9guret, <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#examples\" rel=\"nofollow noreferrer\">the documentation</a> states:</p>\n\n<blockquote>\n  <p>Files located under examples are example <strong>uses</strong> of the functionality provided by the library</p>\n</blockquote>\n\n<p>so examples use the library, not the reverse.</p>\n"}], "owner": {"reputation": 133, "user_id": 10671679, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c086dbf7713aa48a259a3d979f9442d6?s=128&d=identicon&r=PG&f=1", "display_name": "theBigCheese88", "link": "https://stackoverflow.com/users/10671679/thebigcheese88"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 58731082, "answer_count": 1, "score": -1, "last_activity_date": 1573046201, "creation_date": 1573034336, "last_edit_date": 1573046201, "question_id": 58727457, "link": "https://stackoverflow.com/questions/58727457/how-do-i-use-code-from-a-librarys-example-in-the-library-itself", "title": "How do I use code from a library&#39;s example in the library itself?", "body": "<pre class=\"lang-none prettyprint-override\"><code>\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n\u2502    \u2514\u2500\u2500 model.rs\n\u2514\u2500\u2500 examples\n    \u2514\u2500\u2500 client\n           \u2514\u2500\u2500mod.rs\n</code></pre>\n\n<p>I want to use a struct called <code>Client</code> that exists in <code>examples &gt; client &gt; mod.rs</code> in my <code>model.rs</code> file. My package name is <code>CratesTest</code> in the <code>Cargo.toml</code>.</p>\n\n<p>I tried this in my <code>model.rs</code>:</p>\n\n<pre><code>extern crate CratesTest;\n\nfn main() {\n    CratesTest::Client::new(/*snip*/)\n}\n</code></pre>\n\n<p>I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0433]: failed to resolve: could not find `Client` in `CratesTest`\nlet client = CratesTest::Client::new(...\n                         ^^^^^^ could not find `Client` in `CratesTest`            \n</code></pre>\n\n<p>I also tried using <code>mod client;</code> but it doesn't bring it into scope.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573046014, "post_id": 58725427, "comment_id": 103752415, "body": "See also <a href=\"https://stackoverflow.com/q/36672845/155423\">In Rust, is a vector an Iterator?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1573029488, "post_id": 58725677, "comment_id": 103743467, "body": "Great answer! Only thing I&#39;m wondering right now: why does <code>xs.zip(ys)</code> work in Scala then? Is an iterator (state) automatically created in Scala? Or does its &quot;list type&quot; always contain an iterator state? Whatever solution Scala uses: why does Rust not use it?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1573029674, "post_id": 58725677, "comment_id": 103743561, "body": "Scala defines an Iterable trait for collections that may return a new iterator, yes. I&#39;m not totally clear as to why it&#39;s not possible in rust to have a transparent iter() of self."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 5, "creation_date": 1573031520, "post_id": 58725677, "comment_id": 103744464, "body": "@DenysS&#233;guret Because in Rust, the distinction between <code>iter()</code>, <code>into_iter()</code> and <code>iter_mut()</code> is important."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1573031946, "post_id": 58725677, "comment_id": 103744689, "body": "yes that would probably be messy if we&#39;d have a mutable vec."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1573035467, "post_id": 58725677, "comment_id": 103746693, "body": "In Scala, <code>zip</code> is implemented through an extension trait (<a href=\"https://www.scala-lang.org/api/2.13.1/scala/collection/IterableOps.html\" rel=\"nofollow noreferrer\"><code>IterableOps</code></a>) which <code>Vector</code> implements. A similar approach would be doable for Rust."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1573035529, "post_id": 58725677, "comment_id": 103746724, "body": "@Jmb but then, supposing you add the zip function and other ones to IntoIterator, how would you choose to call, for example, the iter() and iter_mut() functions of slices when starting your iteration chain ? It looks doable, yes, but it would probably be messy and hard to follow."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1573035571, "post_id": 58725677, "comment_id": 103746757, "body": "Note that Scala&#39;s <code>Iterable</code> trait is more or less equivalent to Rust&#39;s <code>IntoIterator</code> trait."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1573035853, "post_id": 58725677, "comment_id": 103746916, "body": "@DenysS&#233;guret you&#39;re right. I&#39;d say to only enable it for immutable iteration (using <code>iter</code>) and require an explicit call to <code>iter_mut</code> for mutable iteration."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1573035937, "post_id": 58725677, "comment_id": 103746958, "body": "Note that the same argument can be made for <code>ys</code> in <code>xs.iter().zip (ys)</code>: how do you choose to use <code>ys.iter()</code> or <code>ys.iter_mut()</code>?"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 2, "creation_date": 1573036060, "post_id": 58725677, "comment_id": 103747031, "body": "For <code>ys</code>, we use <code>into_iter</code>. The reason is simple: <code>ys</code> is consumed, so other iterator kinds make no sense."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1573052892, "post_id": 58725677, "comment_id": 103756405, "body": "I don&#39;t know Scala, but I guess that a vector is an iterator because all the items are immutable reference types since it is functional. It does not have all the Rust ownership gymnastic."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1573053004, "post_id": 58725677, "comment_id": 103756480, "body": "@FrenchBoiethios in Scala a vector isn&#39;t an iterator, it&#39;s an Iterable, which produces iterators on demand. The difference with Rust is that there doesn&#39;t need to be several types of iterators."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 14, "last_activity_date": 1573110100, "last_edit_date": 1573110100, "creation_date": 1573028060, "answer_id": 58725677, "question_id": 58725427, "link": "https://stackoverflow.com/questions/58725427/why-doesnt-vec-implement-the-iterator-trait/58725677#58725677", "title": "Why doesn&#39;t Vec implement the Iterator trait?", "body": "<p>An iterator has an iteration state. It must know what will be the next element to give you.</p>\n\n<p>So a vector by itself isn't an iterator, and the distinction is important. You can have two iterators over the same vector, for example, each with its specific iteration state.</p>\n\n<p>But a vector can provide you an iterator, that's why it implements <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a>, which lets you write this:</p>\n\n<pre><code>let v = vec![1, 4];\nfor a in v {\n    dbg!(a);\n}\n</code></pre>\n\n<p>Many functions take an <code>IntoIterator</code> when an iterator is needed, and that's the case for <code>zip</code>, which is why</p>\n\n<pre><code>let rx = xs.iter().zip(ys.iter());\n</code></pre>\n\n<p>can be replaced with</p>\n\n<pre><code>let rx = xs.iter().zip(ys);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1573050774, "post_id": 58730199, "comment_id": 103755180, "body": "<code>into_iter()</code> is the one that consumes the vector; <code>drain</code> is different in that it only <i>empties</i> the vector."}], "tags": [], "owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "is_accepted": false, "score": 4, "last_activity_date": 1573128374, "last_edit_date": 1573128374, "creation_date": 1573043297, "answer_id": 58730199, "question_id": 58725427, "link": "https://stackoverflow.com/questions/58725427/why-doesnt-vec-implement-the-iterator-trait/58730199#58730199", "title": "Why doesn&#39;t Vec implement the Iterator trait?", "body": "<blockquote>\n  <p>What is the design reason for <code>Vec</code> not implementing the <code>Iterator</code> trait?</p>\n</blockquote>\n\n<p>Which of the three iterators should it implement? There are three different kinds of iterator you can get from a <code>Vec</code>:</p>\n\n<ol>\n<li><code>vec.iter()</code> gives <code>Iterator&lt;Item = &amp;T&gt;</code>,</li>\n<li><code>vec.iter_mut()</code> gives <code>Iterator&lt;Item = &amp;mut T&gt;</code> and modifies the vector and</li>\n<li><code>vec.into_iter()</code> gives <code>Iterator&lt;Item = T&gt;</code> and consumes the vector in the process.</li>\n</ol>\n\n<blockquote>\n  <p>compared to Scala:</p>\n</blockquote>\n\n<p>In Scala it does not implement <code>Iterator</code> directly either, because <code>Iterator</code> needs the next item pointer that the vector itself does not have. However since Scala does not have move semantics, it only has one way to create an iterator from a vector, so it can do the conversion implicitly. Rust has three methods, so it must ask you which one you want.</p>\n"}], "owner": {"reputation": 123, "user_id": 9750674, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/664f8858b035ddbdaaa184c92a1fa662?s=128&d=identicon&r=PG&f=1", "display_name": "sge", "link": "https://stackoverflow.com/users/9750674/sge"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 351, "favorite_count": 0, "accepted_answer_id": 58725677, "answer_count": 2, "score": 8, "last_activity_date": 1573128374, "creation_date": 1573026882, "last_edit_date": 1573041438, "question_id": 58725427, "link": "https://stackoverflow.com/questions/58725427/why-doesnt-vec-implement-the-iterator-trait", "title": "Why doesn&#39;t Vec implement the Iterator trait?", "body": "<p>What is the design reason for <code>Vec</code> not implementing the <code>Iterator</code> trait? Having to always call <code>iter()</code> on all vectors and slices makes for longer lines of code.</p>\n\n<p>Example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let rx = xs.iter().zip(ys.iter());\n</code></pre>\n\n<p>compared to Scala:</p>\n\n<pre class=\"lang-scala prettyprint-override\"><code>val rx = xs.zip(ys)\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573007633, "post_id": 58722076, "comment_id": 103736987, "body": "Please don&#39;t ignore warnings from the compiler. Address them."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573007480, "post_id": 58722230, "comment_id": 103736946, "body": "And you shouldn&#39;t call the module <code>Link</code> in the first place..."}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 1, "last_activity_date": 1573007495, "last_edit_date": 1573007495, "creation_date": 1573007241, "answer_id": 58722230, "question_id": 58722076, "link": "https://stackoverflow.com/questions/58722076/how-to-call-an-associated-function-of-a-struct-with-a-generic-type/58722230#58722230", "title": "How to call an associated function of a struct with a generic type?", "body": "<p>Two small mistakes are compounding here to make the error message not very helpful.</p>\n\n<ol>\n<li><p>You've forgotten the <code>pub</code> on <code>trait Link</code>, so it is entirely inaccessible outside of the <code>Link</code> module. e.g. <code>pub trait Link { /* ... */ }</code></p></li>\n<li><p>You need to <code>use</code> the <code>Link</code> trait in the <code>tests</code> module for its methods to be available there. (Once you add the <code>pub</code>, the compiler error will tell you this nicely). e.g. <code>use super::Link::Link;</code></p></li>\n</ol>\n\n<p>Here's a working version of your code:</p>\n\n<pre><code>mod Link {\n    use std::cell::RefCell;\n    use std::collections::VecDeque;\n    use std::fmt::Debug;\n    use std::rc::Rc;\n    pub trait Link {\n        type Node;\n        type Value;\n        fn new(data: &amp;mut VecDeque&lt;Self::Value&gt;) -&gt; Self;\n    }\n\n    #[derive(Debug)]\n    pub struct Node&lt;T&gt; {\n        pub value: T,\n        pub next: RefCell&lt;Option&lt;Rc&lt;Node&lt;T&gt;&gt;&gt;&gt;,\n    }\n\n    #[derive(Debug)]\n    pub struct SinglLink&lt;T&gt; {\n        pub header: RefCell&lt;Option&lt;Rc&lt;Node&lt;T&gt;&gt;&gt;&gt;,\n        pub len: i32,\n    }\n\n    impl&lt;T: Copy&gt; Link for SinglLink&lt;T&gt; {\n        type Node = Node&lt;T&gt;;\n        type Value = T;\n        fn new(data: &amp;mut VecDeque&lt;Self::Value&gt;) -&gt; Self {\n            SinglLink {\n                header: RefCell::new(None),\n                len: 0,\n            }\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::Link::SinglLink;\n    use super::Link::Link;\n    use super::*;\n    use std::cell::RefCell;\n    use std::collections::VecDeque;\n\n    #[test]\n    fn it_works() {\n        let mut data: VecDeque&lt;i32&gt; = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10].into_iter().collect();\n        let single: SinglLink&lt;i32&gt; = SinglLink::new(&amp;mut data);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=591415e1dbd788668839f73262f02124\" rel=\"nofollow noreferrer\">Rust Playground</a>)</p>\n"}], "owner": {"reputation": 45, "user_id": 2110184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd2fff6940d2486d6ff2ba103e4754ad?s=128&d=identicon&r=PG", "display_name": "user2110184", "link": "https://stackoverflow.com/users/2110184/user2110184"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 572, "favorite_count": 0, "accepted_answer_id": 58722230, "answer_count": 1, "score": 0, "last_activity_date": 1573008089, "creation_date": 1573005837, "last_edit_date": 1573008089, "question_id": 58722076, "link": "https://stackoverflow.com/questions/58722076/how-to-call-an-associated-function-of-a-struct-with-a-generic-type", "title": "How to call an associated function of a struct with a generic type?", "body": "<p>I tried to create a <code>Link</code> trait and a struct <code>SinglLink</code> with a generic type which implements <code>Link</code>, but when I call the associated function of the struct, I get an error. Should I use a macro like <code>vec!</code>?</p>\n\n<pre><code>mod Link {\n    use std::cell::RefCell;\n    use std::collections::VecDeque;\n    use std::fmt::Debug;\n    use std::rc::Rc;\n\n    trait Link {\n        type Node;\n        type Value;\n        fn new(data: &amp;mut VecDeque&lt;Self::Value&gt;) -&gt; Self;\n    }\n\n    #[derive(Debug)]\n    pub struct Node&lt;T&gt; {\n        pub value: T,\n        pub next: RefCell&lt;Option&lt;Rc&lt;Node&lt;T&gt;&gt;&gt;&gt;,\n    }\n\n    #[derive(Debug)]\n    pub struct SinglLink&lt;T&gt; {\n        pub header: RefCell&lt;Option&lt;Rc&lt;Node&lt;T&gt;&gt;&gt;&gt;,\n        pub len: i32,\n    }\n\n    impl&lt;T: Copy&gt; Link for SinglLink&lt;T&gt; {\n        type Node = Node&lt;T&gt;;\n        type Value = T;\n        fn new(data: &amp;mut VecDeque&lt;Self::Value&gt;) -&gt; Self {\n            SinglLink {\n                header: RefCell::new(None),\n                len: 0,\n            }\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::Link::SinglLink;\n    use super::*;\n    use std::cell::RefCell;\n    use std::collections::VecDeque;\n\n    #[test]\n    fn it_works() {\n        let mut data: VecDeque&lt;i32&gt; = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10].into_iter().collect();\n        let single: SinglLink&lt;i32&gt; = SinglLink::new(&amp;mut data);\n    }\n}\n</code></pre>\n\n<p>The error message: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no function or associated item named `new` found for type `Link::SinglLink&lt;_&gt;` in the current scope\n  --&gt; src/lib.rs:47:49\n   |\n20 |     pub struct SinglLink&lt;T&gt; {\n   |     ----------------------- function or associated item `new` not found for this\n...\n47 |         let single: SinglLink&lt;i32&gt; = SinglLink::new(&amp;mut data);\n   |                                                 ^^^ function or associated item not found in `Link::SinglLink&lt;_&gt;`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `new`, perhaps you need to implement it:\n           candidate #1: `Link::Link`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573003524, "post_id": 58721780, "comment_id": 103736173, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/49703990/155423\">Can&#39;t borrow mutably within two different closures in the same scope</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58721780/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 3483, "user_id": 2668666, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/3QEDd.jpg?s=128&g=1", "display_name": "jmrah", "link": "https://stackoverflow.com/users/2668666/jmrah"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573003819, "post_id": 58721780, "comment_id": 103736242, "body": "I will take a look at that answer and get back.  Thanks."}, {"owner": {"reputation": 3483, "user_id": 2668666, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/3QEDd.jpg?s=128&g=1", "display_name": "jmrah", "link": "https://stackoverflow.com/users/2668666/jmrah"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573005254, "post_id": 58721780, "comment_id": 103736509, "body": "I had a look at the linked question Shepmaster, and tbh, for a Rust new-born like me, I found it hard to grok, and couldn&#39;t apply the insight from that question to this one.  I&#39;m no further in understanding why my code won&#39;t compile :(."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573007070, "post_id": 58721780, "comment_id": 103736871, "body": "How about <a href=\"https://stackoverflow.com/q/38423607/155423\">How do I modify a variable that&#39;s defined outside of a closure from inside of a closure?</a> or <a href=\"https://stackoverflow.com/q/36511683/155423\">Rust Inspect Iterator: cannot borrow <code>*</code> as immutable because it is also borrowed as mutable</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573007144, "post_id": 58721780, "comment_id": 103736886, "body": "The <a href=\"https://stackoverflow.com/a/58721953/155423\">answer posted</a> is an application of <a href=\"https://stackoverflow.com/a/49709386/155423\">the first solution I linked</a> (&#39;&quot;promote&quot; the data to an argument of the function and the closures&#39;)."}], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 4934640, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2f69527ae459cbbda0ab5c2e08686a50?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/4934640/user"}, "edited": false, "score": 1, "creation_date": 1583848574, "post_id": 58721953, "comment_id": 107245827, "body": "Can you explain how you solve the problem, i.e., what are you doing here?"}], "tags": [], "owner": {"reputation": 29, "user_id": 6343270, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c1146373f6da1e7ae421c064412ae2?s=128&d=identicon&r=PG&f=1", "display_name": "D.8Ge", "link": "https://stackoverflow.com/users/6343270/d-8ge"}, "is_accepted": false, "score": 0, "last_activity_date": 1573028571, "last_edit_date": 1573028571, "creation_date": 1573004991, "answer_id": 58721953, "question_id": 58721780, "link": "https://stackoverflow.com/questions/58721780/cannot-borrow-x-as-immutable-because-it-is-also-borrowed-as-mutable-in-a-mutable/58721953#58721953", "title": "Cannot borrow X as immutable because it is also borrowed as mutable in a mutable closure", "body": "<p>You can try this:</p>\n\n<pre><code>fn main() {\n    let mut s = String::new();\n\n    let mut push_if = |b, some_str, string: &amp;mut String| {\n        if b {\n            string.push_str(some_str);\n        }\n    };\n\n    push_if(s.is_empty(), \"Foo\", &amp;mut s);\n    println!(\"{}\", s);\n}\n</code></pre>\n"}], "owner": {"reputation": 3483, "user_id": 2668666, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/3QEDd.jpg?s=128&g=1", "display_name": "jmrah", "link": "https://stackoverflow.com/users/2668666/jmrah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1573028571, "creation_date": 1573003326, "last_edit_date": 1573005127, "question_id": 58721780, "link": "https://stackoverflow.com/questions/58721780/cannot-borrow-x-as-immutable-because-it-is-also-borrowed-as-mutable-in-a-mutable", "title": "Cannot borrow X as immutable because it is also borrowed as mutable in a mutable closure", "body": "<p>Here is my code, and the compiler error beneath.</p>\n\n<pre><code>fn main() {\n    let mut s = String::new();\n    let mut push_if = |b, some_str| {\n        if b {\n            s.push_str(some_str);\n        }\n    };\n    push_if(s.is_empty(), \"Foo\");\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `s` as immutable because it is also borrowed as mutable\n --&gt; src/main.rs:8:13\n  |\n3 |     let mut push_if = |b, some_str| {\n  |                       ------------- mutable borrow occurs here\n4 |         if b {\n5 |             s.push_str(some_str);\n  |             - first borrow occurs due to use of `s` in closure\n...\n8 |     push_if(s.is_empty(), \"Foo\");\n  |     ------- ^ immutable borrow occurs here\n  |     |\n  |     mutable borrow later used by call\n</code></pre>\n\n<p>Why is the compiler complaining about <code>s.is_empty()</code> being an immutable borrow? \n I'm just trying to return a bool, which doesn't seem like I'm borrowing anything.  What changes do I need to make to compile the program successfully?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5489, "user_id": 3670132, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1c25213978ce9fc6a9b8b60f5d780b4?s=128&d=identicon&r=PG", "display_name": "Seblor", "link": "https://stackoverflow.com/users/3670132/seblor"}, "edited": false, "score": 0, "creation_date": 1572976322, "post_id": 58716770, "comment_id": 103726856, "body": "I know very little of Rust (I don&#39;t know why SO put that question in my home page), but aren&#39;t you supposed to use <code>&amp;mut x</code> instead of <code>$x</code> for mutable references ?"}, {"owner": {"reputation": 9, "user_id": 12323498, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mAB4NyNAj64qd33lbT06Jq6p07ybWFRv_MU-OigSA=k-s128", "display_name": "Monther Enayah", "link": "https://stackoverflow.com/users/12323498/monther-enayah"}, "reply_to_user": {"reputation": 5489, "user_id": 3670132, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1c25213978ce9fc6a9b8b60f5d780b4?s=128&d=identicon&r=PG", "display_name": "Seblor", "link": "https://stackoverflow.com/users/3670132/seblor"}, "edited": false, "score": 0, "creation_date": 1572976547, "post_id": 58716770, "comment_id": 103726947, "body": "x has been declared as a mut so adding &amp;mut x might show an error of mutable variable twice. (Not sure why OS placed the question in your home page thou)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1572976584, "post_id": 58716770, "comment_id": 103726964, "body": "Welcome to Stack Overflow! It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/58716770/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572976732, "post_id": 58716770, "comment_id": 103727031, "body": "Welcome to Stack Overflow! It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/46157422/155423\">How does assigning to a borrowed variable violate the rules of references?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58716770/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572976756, "post_id": 58716770, "comment_id": 103727044, "body": "See also <a href=\"https://stackoverflow.com/q/47133648/155423\">Cannot assign to <code>self.x</code> because it is borrowed</a>; <a href=\"https://stackoverflow.com/q/40309585/155423\">Cannot assign to variable because it is borrowed</a>; etc."}], "answers": [{"tags": [], "owner": {"reputation": 9, "user_id": 12323498, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mAB4NyNAj64qd33lbT06Jq6p07ybWFRv_MU-OigSA=k-s128", "display_name": "Monther Enayah", "link": "https://stackoverflow.com/users/12323498/monther-enayah"}, "is_accepted": false, "score": -4, "last_activity_date": 1572998756, "last_edit_date": 1572998756, "creation_date": 1572982180, "answer_id": 58718185, "question_id": 58716770, "link": "https://stackoverflow.com/questions/58716770/cannot-assign-to-x-because-it-is-borrowed/58718185#58718185", "title": "Cannot assign to `x` because it is borrowed", "body": "<p>Found a solution that involves leaking the memory of the <code>String</code> in <a href=\"https://stackoverflow.com/a/30527289/12323498\">https://stackoverflow.com/a/30527289/12323498</a></p>\n\n<p>But, is there a better way to achieve this without leaking the memory?</p>\n\n<pre><code>fn string_to_static_str(s: String) -&gt; &amp;'static str {\n    Box::leak(s.into_boxed_str())\n}\n</code></pre>\n\n<p>and the code look like this now</p>\n\n<pre><code>let mut s = String::new();\n    for ts in test_list {\n        s = format!(r\"\\*START TIME*{:?}\\S*\\s+(?P&lt;Value&gt;[a-zA-Z0-9_\\-\\.]+)\", ts);\n        let s: &amp;'static str = string_to_static_str(s);\n        core_regex_dict.push(s);  \n    }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": -1, "last_activity_date": 1573026335, "creation_date": 1573026335, "answer_id": 58725301, "question_id": 58716770, "link": "https://stackoverflow.com/questions/58716770/cannot-assign-to-x-because-it-is-borrowed/58725301#58725301", "title": "Cannot assign to `x` because it is borrowed", "body": "<p>It's hard to answer your question because you didn't give us enough information. In particular, we need to know how <code>core_regex_dict</code> is defined. I'm assuming that <code>core_regex_dict</code> has type <code>Vec&lt;&amp;str&gt;</code>. You need to change that to <code>Vec&lt;String&gt;</code>:</p>\n\n<pre><code>let core_regex_dict = Vec::new(); // No need to specify the item type, it will be inferred.\n// No need to declare `x` before the loop unless you need to use the \n// last value afterward...\nfor ts in test_list {\n    let x = format!(r\"\\*START TIME*{:?}\\S*\\s+(?P&lt;Value&gt;[a-zA-Z0-9_\\-\\.]+)\", ts);\n    core_regex_dict.push (x);  // No `&amp;` -&gt; we push the String itself instead of a reference\n}\n</code></pre>\n"}], "owner": {"reputation": 9, "user_id": 12323498, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mAB4NyNAj64qd33lbT06Jq6p07ybWFRv_MU-OigSA=k-s128", "display_name": "Monther Enayah", "link": "https://stackoverflow.com/users/12323498/monther-enayah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 204, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1573026335, "creation_date": 1572975853, "last_edit_date": 1572976655, "question_id": 58716770, "link": "https://stackoverflow.com/questions/58716770/cannot-assign-to-x-because-it-is-borrowed", "title": "Cannot assign to `x` because it is borrowed", "body": "<p>Getting the below error when trying to push more elements to a vector. How to overcome this error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `x` because it is borrowed\n\nx = format!(r\"\\*START TIME*{:?}\\S*\\s+(?P&lt;Value&gt;[a-zA-Z0-9_\\-\\.]+)\", ts);\n   |         ^^ assignment to borrowed `x` occurs here\n76 |         core_regex_dict.push(&amp;x);\n   |         ---------------      --- borrow of `x` occurs here\n   |         |\n   |         borrow later used here\n</code></pre>\n\n<p>Code:</p>\n\n<pre><code>let mut x = String::new();  \n    for ts in test_list {\n        x = format!(r\"\\*START TIME*{:?}\\S*\\s+(?P&lt;Value&gt;[a-zA-Z0-9_\\-\\.]+)\", ts);\n        core_regex_dict.push(&amp;x);  \n    }\n</code></pre>\n"}, {"tags": ["module", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 42740, "user_id": 1031569, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/MTZr2.png?s=128&g=1", "display_name": "Reactgular", "link": "https://stackoverflow.com/users/1031569/reactgular"}, "edited": false, "score": 2, "creation_date": 1572973610, "post_id": 58715214, "comment_id": 103725650, "body": "It sounds like you could use workspaces. <a href=\"https://learning-rust.github.io/docs/d5.workspaces.html\" rel=\"nofollow noreferrer\">learning-rust.github.io/docs/d5.workspaces.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1572970744, "creation_date": 1572970744, "answer_id": 58715429, "question_id": 58715214, "link": "https://stackoverflow.com/questions/58715214/how-to-import-a-module-from-a-directory-outside-of-the-src-directory/58715429#58715429", "title": "How to import a module from a directory outside of the `src` directory?", "body": "<p><strong>Don't</strong>. Put all of your source code into the <code>src</code> directory. Don't fight these idioms and conventions, it's simply not worth it.</p>\n\n<hr>\n\n<p>Here's a literal answer, but <em>don't actually use this</em>!</p>\n\n<p><strong>Layout</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 bad_location.rs\n\u2514\u2500\u2500 src\n \u00a0\u00a0 \u2514\u2500\u2500 main.rs\n</code></pre>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>#[path = \"../bad_location.rs\"]\nmod bad_location;\n\nfn main() {\n    println!(\"Was this a bad idea? {}\", bad_location::dont_do_this());\n}\n</code></pre>\n\n<p><strong>badlocation.rs</strong></p>\n\n<pre><code>pub fn dont_do_this() -&gt; bool {\n    true\n}\n</code></pre>\n\n<p>The key is the <code>#[path]</code> annotation.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43998085/155423\">How can I use a module from outside the src folder in a binary project, such as for integration tests or benchmarks?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47649318/155423\">How do I tell Cargo to run files from a directory other than &quot;src&quot;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30677258/155423\">How do I import from a sibling module?</a></li>\n</ul>\n"}], "owner": {"reputation": 23, "user_id": 7089860, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4203fe6ff09ab7df58fcd3c539742db?s=128&d=identicon&r=PG&f=1", "display_name": "noob", "link": "https://stackoverflow.com/users/7089860/noob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 1, "accepted_answer_id": 58715429, "answer_count": 1, "score": 0, "last_activity_date": 1572970762, "creation_date": 1572969942, "last_edit_date": 1572970762, "question_id": 58715214, "link": "https://stackoverflow.com/questions/58715214/how-to-import-a-module-from-a-directory-outside-of-the-src-directory", "title": "How to import a module from a directory outside of the `src` directory?", "body": "<p>I'm stuck when learning how to access a module. I'm trying to insert a folder other than <code>src</code> into <code>src</code>. It's not working and it gives me an error. Here this is my project tree.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ Project1\n.\n|-- src\n|       |-- main.rs\n|   |--FolderinSrcFolder \n|       |--folderinsrcmodule.rs    \n|\n|--anothersrc\n|   |--mod.rs\n|\n|-- rootmodule.rs\n|-- Cargo.toml\n|-- Cargo.lock\n</code></pre>\n\n<p>How can I access <code>anothersrc/mod.rs</code> <code>src/main.rs</code>? How can I access <code>rootmodule.rs</code> from <code>src/main.rs</code>?</p>\n\n<p>I already read the Rust documentation.</p>\n"}, {"tags": ["enums", "rust"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 11, "last_activity_date": 1573037238, "last_edit_date": 1573037238, "creation_date": 1572972252, "answer_id": 58715842, "question_id": 58715081, "link": "https://stackoverflow.com/questions/58715081/how-to-ensure-every-enum-variant-can-be-returned-from-a-specific-function-at-com/58715842#58715842", "title": "How to ensure every enum variant can be returned from a specific function at compile time?", "body": "<p>While there is certainly a complicated \u2014 and fragile \u2014 way to inspect your code with procedural macros, a much better path is to use tests. Tests are more robust, much faster to write, and will verify the circumstances in which each variant is returned, not just that it appears somewhere.</p>\n\n<p>If you are concerned that the tests might continue to pass after you add new variants to the enum, you can use a macro to ensure that all cases are tested:</p>\n\n<pre><code>#[derive(PartialEq, Debug)]\nenum Operation {\n    Add,\n    Subtract,\n}\n\nimpl Operation {\n    fn from(s: &amp;str) -&gt; Result&lt;Self, &amp;str&gt; {\n        match s {\n            \"+\" =&gt; Ok(Self::Add),\n            \"-\" =&gt; Ok(Self::Subtract),\n            _ =&gt; Err(\"Invalid operation\"),\n        }\n    }\n}\n\nmacro_rules! ensure_mapping {\n    ($($str: literal =&gt; $variant: path),+ $(,)?) =&gt; {\n        // assert that the given strings produce the expected variants\n        $(assert_eq!(Operation::from($str), Ok($variant));)+\n\n        // this generated fn will never be called but will produce a \n        // non-exhaustive pattern error if you've missed a variant\n        fn check_all_covered(op: Operation) {\n            match op {\n                $($variant =&gt; {})+\n            };\n        }\n    }\n}\n\n#[test]\nfn all_variants_are_returned_by_from() {\n   ensure_mapping! {\n      \"+\" =&gt; Operation::Add,\n       \"-\" =&gt; Operation::Subtract,\n   }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1573037300, "post_id": 58715864, "comment_id": 103747699, "body": "I&#39;ll leave my answer, but this is definitely better!"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 12, "last_activity_date": 1573035301, "last_edit_date": 1573035301, "creation_date": 1572972321, "answer_id": 58715864, "question_id": 58715081, "link": "https://stackoverflow.com/questions/58715081/how-to-ensure-every-enum-variant-can-be-returned-from-a-specific-function-at-com/58715864#58715864", "title": "How to ensure every enum variant can be returned from a specific function at compile time?", "body": "<p>A solution would be to generate the whole enumeration, variants and translation arms with a macro:</p>\n\n<pre><code>macro_rules! operations {\n    (\n        $($name:ident: $chr:expr)*\n    ) =&gt; {\n        #[derive(Debug)]\n        pub enum Operation {\n            $($name,)*\n        }\n        impl Operation {\n            fn from(s: &amp;str) -&gt; Result&lt;Self, &amp;str&gt; {\n                match s {\n                    $($chr =&gt; Ok(Self::$name),)*\n                    _ =&gt; Err(\"Invalid operation\"),\n                }\n            }\n        }\n    }\n}\n\noperations! {\n    Add: \"+\"\n    Subtract: \"-\"\n}\n</code></pre>\n\n<p>This way adding a variant is trivial and you can't forget a parsing. It's also a very DRY solution.</p>\n\n<p>It's easy to extend this construct with other functions (for example the inverse translation) that you'll surely need later and you won't have to duplicate the parsing char.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a35d55ccc0127db5eb1b0203c141c2b8\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9363390"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1279, "favorite_count": 1, "answer_count": 2, "score": 8, "last_activity_date": 1585320007, "creation_date": 1572969552, "last_edit_date": 1585320007, "question_id": 58715081, "link": "https://stackoverflow.com/questions/58715081/how-to-ensure-every-enum-variant-can-be-returned-from-a-specific-function-at-com", "title": "How to ensure every enum variant can be returned from a specific function at compile time?", "body": "<p>I have an enum:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Operation {\n    Add,\n    Subtract,\n}\n\nimpl Operation {\n    fn from(s: &amp;str) -&gt; Result&lt;Self, &amp;str&gt; {\n        match s {\n            \"+\" =&gt; Ok(Self::Add),\n            \"-\" =&gt; Ok(Self::Subtract),\n            _ =&gt; Err(\"Invalid operation\"),\n        }\n    }\n}\n</code></pre>\n\n<p>I want to ensure at compile time that every enum variant is handled in the <code>from</code> function.</p>\n\n<p>Why do I need this? For example, I might add a <code>Product</code> operation and forget to handle this case in the <code>from</code> function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Operation {\n    // ...\n    Product,\n}\n\nimpl Operation {\n    fn from(s: &amp;str) -&gt; Result&lt;Self, &amp;str&gt; {\n        // No changes, I forgot to add a match arm for `Product`.\n        match s {\n            \"+\" =&gt; Ok(Self::Add),\n            \"-\" =&gt; Ok(Self::Subtract),\n            _ =&gt; Err(\"Invalid operation\"),\n        }\n    }\n}\n</code></pre>\n\n<p>Is it possible to guarantee that match expression returns every variant of an enum? If not, what is the best way to mimic this behaviour?</p>\n"}, {"tags": ["rust", "rust-macros", "rust-decl-macros"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572968488, "post_id": 58713749, "comment_id": 103722733, "body": "TIL you can use a <code>ty</code> variable where a trait is required: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0e16b9b4294bb480961284173247f7fb\" rel=\"nofollow noreferrer\">playground</a>. I would have expected that to fail, like <code>impl dyn Trait for i32 {}</code> does. I wonder if this will change when bare trait syntax is dropped."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572968773, "post_id": 58713749, "comment_id": 103722919, "body": "Yeah, I assume that it&#39;s the duality of <code>SomeTraitName</code> being either a trait <i>or</i> a type that allows that."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1572968735, "last_edit_date": 1572968735, "creation_date": 1572964998, "answer_id": 58713749, "question_id": 58713564, "link": "https://stackoverflow.com/questions/58713564/how-to-match-a-trait-in-a-rust-macro/58713749#58713749", "title": "How to match a trait in a Rust macro?", "body": "<p>You can use the <code>ty</code> or <code>path</code> <a href=\"https://doc.rust-lang.org/reference/macros-by-example.html#metavariables\" rel=\"nofollow noreferrer\">metavariables</a>, depending on what you want to do:</p>\n\n<pre><code>macro_rules! my_test_macro {\n    ($t1:ty, $t2:path) =&gt; {};\n}\n\nfn main() {\n    my_test_macro!(Trait1, Trait2&lt;Test1, Test2 = Test3&gt;);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41603424/155423\">Rust macro accepting type with generic parameters</a></li>\n<li><a href=\"https://stackoverflow.com/q/37824384/155423\">Is it possible to write a Rust macro &quot;has_trait!(&lt;type&gt;,&lt;ident&gt;|&lt;expr&gt;)&quot;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/51579647/155423\">How to match trait bounds in a macro?</a></li>\n<li><a href=\"https://stackoverflow.com/q/50650070/155423\">What does &quot;dyn&quot; mean in a type?</a></li>\n</ul>\n"}], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 305, "favorite_count": 1, "accepted_answer_id": 58713749, "answer_count": 1, "score": 1, "last_activity_date": 1572979923, "creation_date": 1572964402, "last_edit_date": 1572979923, "question_id": 58713564, "link": "https://stackoverflow.com/questions/58713564/how-to-match-a-trait-in-a-rust-macro", "title": "How to match a trait in a Rust macro?", "body": "<p>My goal is to take as input trait type.</p>\n\n<pre><code>my_test_macro!(Trait1, Trait2&lt;Test1, Test2=Test3&gt;)\n</code></pre>\n\n<p>What I tried so far was writing parser like this.</p>\n\n<pre><code>$( $ty:ident &lt; $( $N:ident $(: $b0:ident $(+$b:ident)* )? ),*  $($tname:ident=$ttype:ident),* &gt; )+*\n</code></pre>\n\n<p>But it created local ambiguity.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: local ambiguity: multiple parsing options: built-in NTs ident ('N') or ident ('tname').\n</code></pre>\n"}, {"tags": ["rust", "libsodium", "nearprotocol"], "answers": [{"tags": [], "owner": {"reputation": 1378, "user_id": 953439, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LgYlS.jpg?s=128&g=1", "display_name": "Frank Denis", "link": "https://stackoverflow.com/users/953439/frank-denis"}, "is_accepted": false, "score": 2, "last_activity_date": 1573146002, "creation_date": 1573146002, "answer_id": 58753669, "question_id": 58711179, "link": "https://stackoverflow.com/questions/58711179/cargo-test-does-not-work-anymore-because-of-libsodium-failing-on-pwhash-argon2i/58753669#58753669", "title": "Cargo test does not work anymore because of Libsodium failing on: pwhash_argon2i and pwhash_argon2id", "body": "<p>It was a bug in Xcode 11: <a href=\"https://github.com/jedisct1/libsodium/issues/881\" rel=\"nofollow noreferrer\">https://github.com/jedisct1/libsodium/issues/881</a></p>\n\n<p>But the stable version of libsodium has had a workaround since August (right after the first Xcode beta with the bug was released).</p>\n"}], "owner": {"reputation": 879, "user_id": 5719266, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cfc99bd4bbd454be135e46b37a0274b2?s=128&d=identicon&r=PG&f=1", "display_name": "jasper", "link": "https://stackoverflow.com/users/5719266/jasper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1573276841, "creation_date": 1572956180, "last_edit_date": 1573276841, "question_id": 58711179, "link": "https://stackoverflow.com/questions/58711179/cargo-test-does-not-work-anymore-because-of-libsodium-failing-on-pwhash-argon2i", "title": "Cargo test does not work anymore because of Libsodium failing on: pwhash_argon2i and pwhash_argon2id", "body": "<p>I just updated my near-bindgen version and when trying to run tests using: \n<code>cargo test --package my-package</code></p>\n\n<p>I get the following error caused by Libsodium: </p>\n\n<pre><code>make[4]: *** [test-suite.log] Error 1\nmake[3]: *** [check-TESTS] Error 2\nmake[2]: *** [check-am] Error 2\nmake[1]: *** [check-recursive] Error 1\nmake: *** [check-recursive] Error 1 \n</code></pre>\n\n<p>In the Libsodium testsuite summary you see that the following steps fail.</p>\n\n<pre><code>FAIL: pwhash_argon2i\nFAIL: pwhash_argon2id\n</code></pre>\n\n<p>This happens on MacOS <code>Catalina V10.15</code>, <code>v10.15.1</code> and <code>rustup 1.20.2</code> and only when trying to run the <code>cargo test</code> command. Deploying and building works perfectly fine.</p>\n\n<p>UPDATE: looks like common issue: </p>\n\n<ul>\n<li><a href=\"https://github.com/jedisct1/libsodium/issues/848\" rel=\"nofollow noreferrer\">https://github.com/jedisct1/libsodium/issues/848</a></li>\n<li><a href=\"https://github.com/jedisct1/libsodium/issues/878\" rel=\"nofollow noreferrer\">https://github.com/jedisct1/libsodium/issues/878</a></li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572954281, "post_id": 58710449, "comment_id": 103715052, "body": "That said, I suspect this is an XY problem in that you&#39;re trying to write a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6e6626073599ceab8c80a0145c1f40d5\" rel=\"nofollow noreferrer\">provided method of the trait</a> when really you just want to implement it <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=173a4b274942e7684184f5d306ab6dda\" rel=\"nofollow noreferrer\">for <code>[u8]</code> alone</a>."}, {"owner": {"reputation": 47, "user_id": 3630178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7e9f52a8a0a712df5a5587fb5a53401?s=128&d=identicon&r=PG&f=1", "display_name": "Johnny Marcove", "link": "https://stackoverflow.com/users/3630178/johnny-marcove"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572954591, "post_id": 58710449, "comment_id": 103715221, "body": "@trentcl: is it possible to implement the trait for several kind of types without implementor ? check the following playground : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3f7ba1000bb371d5380fd249cebd2283\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572954844, "post_id": 58710449, "comment_id": 103715340, "body": "Sure, if they have some commonality, like implementing a common trait. <code>String</code> and <code>&amp;[u8]</code> both implement <code>AsRef&lt;[u8]&gt;</code>, so you can use that to get an indexable byte slice: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bfd417e8659dd6bb46160c210d3ad448\" rel=\"nofollow noreferrer\">playground</a>"}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1572957227, "creation_date": 1572957227, "answer_id": 58711461, "question_id": 58710449, "link": "https://stackoverflow.com/questions/58710449/how-do-i-write-a-trait-method-that-knows-the-implementor-is-u8/58711461#58711461", "title": "How do I write a trait method that knows the implementor is [u8]?", "body": "<p>There are two places you can write the body of a trait method:</p>\n\n<ul>\n<li>inside the trait itself, as a <em>provided method</em></li>\n<li>inside an <code>impl</code> block.</li>\n</ul>\n\n<p>If a method is not provided, it is <em>required</em>, which means all implementors have to write their own body in the appropriate <code>impl</code> block.</p>\n\n<p>Provided methods can only use properties that are common to <em>all</em> the implementors of the trait, which means you can only use other trait methods or methods of supertraits (like <code>: Debug</code>). But methods in an <code>impl</code> block may use properties that are specific to the type implementing the trait. You want to use something specific to <code>[u8]</code> -- indexing via <code>[..]</code> -- so <code>xor</code> should be a required method:</p>\n\n<pre><code>pub trait Xor {\n    fn xor(&amp;self, key_bytes: &amp;[u8]) -&gt; &amp;[u8];\n}\n\nimpl Xor for [u8] {\n    fn xor(&amp;self, key_bytes: &amp;[u8]) -&gt; &amp;[u8] {\n        for n in &amp;self[..] {\n            dbg!(n);\n        }\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<p>Provided methods are usually for conveniences that only use other methods of the same trait, like most of the methods on <code>Iterator</code> (see <a href=\"https://stackoverflow.com/questions/40516692/why-dont-we-implement-all-the-functions-from-iterator-to-implement-an-iterator/40516724\">Why don&#39;t we implement all the functions from Iterator to implement an iterator?</a>).</p>\n\n<blockquote>\n  <p>is it possible to implement the trait for several kind of types [without writing multiple <code>impl</code> blocks]?</p>\n</blockquote>\n\n<p>Yes, if there is a trait that exposes the functionality you would use to write <code>Xor</code>, you may use that trait to write a generic <code>impl</code>. For example, <code>String</code> and <code>[u8]</code> both implement <code>AsRef&lt;[u8]&gt;</code>, so you can use that to write an <code>impl</code> that applies to both:</p>\n\n<pre><code>impl&lt;T: ?Sized + AsRef&lt;[u8]&gt;&gt; Xor for T {\n    fn xor(&amp;self, key_bytes: &amp;[u8]) -&gt; &amp;[u8] {\n        for n in &amp;self.as_ref()[..] {\n            dbg!(n);\n        }\n        unimplemented!()\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bfd417e8659dd6bb46160c210d3ad448\" rel=\"noreferrer\">Playground link.</a></p>\n\n<h2>See also</h2>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/44642662/how-does-rust-know-which-trait-methods-are-required-or-provided\">How does Rust know which trait methods are required or provided?</a> for more on provided and required trait functions</li>\n<li><a href=\"https://stackoverflow.com/questions/30333607/what-does-the-question-mark-mean-in-a-type-parameter-bound\">What does the question mark mean in a type parameter bound?</a> for what <code>?Sized</code> means</li>\n</ul>\n"}], "owner": {"reputation": 47, "user_id": 3630178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7e9f52a8a0a712df5a5587fb5a53401?s=128&d=identicon&r=PG&f=1", "display_name": "Johnny Marcove", "link": "https://stackoverflow.com/users/3630178/johnny-marcove"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 1, "accepted_answer_id": 58711461, "answer_count": 1, "score": 1, "last_activity_date": 1572964815, "creation_date": 1572953469, "last_edit_date": 1572964815, "question_id": 58710449, "link": "https://stackoverflow.com/questions/58710449/how-do-i-write-a-trait-method-that-knows-the-implementor-is-u8", "title": "How do I write a trait method that knows the implementor is [u8]?", "body": "<p>I'm implementing a trait for <code>&amp;[u8]</code> but I cannot use <code>self</code> in the trait implementation. I assume that the trait can not detect the type and I should use a <code>where</code> clause, but I don't know how can I use it without an implementor.</p>\n\n<pre><code>use std::fmt::Debug;\n\npub trait Xor: Debug {\n    fn xor(&amp;self, key_bytes: &amp;[u8]) -&gt; &amp;[u8] {\n        for n in &amp;self[..] {\n            dbg!(n);\n        }\n        unimplemented!()\n    }\n}\n\nimpl Xor for [u8] {}\n\nfn main() {\n    let xa = b\"1234\";\n    xa.xor(b\"123\");\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ece590b3cd3ed65f3a840d013ce8a00e\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0608]: cannot index into a value of type `&amp;Self`\n --&gt; src/main.rs:5:19\n  |\n5 |         for n in &amp;self[..] {\n  |                   ^^^^^^^^\n</code></pre>\n"}, {"tags": ["c", "rust", "ffi"], "comments": [{"owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1572950269, "post_id": 58708760, "comment_id": 103712976, "body": "yes I did, But There is no detailed resources available."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1572950802, "post_id": 58708760, "comment_id": 103713250, "body": "@ganesh <a href=\"https://doc.rust-lang.org/nomicon/ffi.html\" rel=\"nofollow noreferrer\">there is this resource</a>. Not sure how you missed it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572961801, "post_id": 58708760, "comment_id": 103718762, "body": "And the <a href=\"http://jakegoulding.com/rust-ffi-omnibus/\" rel=\"nofollow noreferrer\">Rust FFI Omnibus</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572961951, "post_id": 58708760, "comment_id": 103718854, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/57353387/155423\">How to call C function in Rust</a>; <a href=\"https://stackoverflow.com/q/24105186/155423\">Can I call C or C++ functions from Rust code?</a>; etc. If not, please <b><a href=\"https://stackoverflow.com/posts/58708760/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1573134154, "post_id": 58733475, "comment_id": 103788335, "body": "Is Rust-Bindgen really works smoothly in Rust stable version? Because I am getting continues errors in all steps. How about Rust nightly version? which is preferred?"}, {"owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "reply_to_user": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1573209194, "post_id": 58733475, "comment_id": 103815620, "body": "It has worked for me in the past with stable Rust. What error are you getting?"}, {"owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1573210699, "post_id": 58733475, "comment_id": 103816377, "body": "error: failed to run custom build command for `bindgen-tutorial-bzip2-sys v0.1.0 (C:\\Users\\Hegde\\Desktop\\bindgen-tutorial-bzip2-sys).                               --- stderr wrapper.h:1:10: fatal error: &#39;bzlib.h&#39; file not found wrapper.h:1:10: fatal error: &#39;bzlib.h&#39; file not found, err: true"}, {"owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "reply_to_user": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1573223758, "post_id": 58733475, "comment_id": 103822868, "body": "Make sure you have the bzip library in your include path, and I would open another question if you need further help. Hope this helps"}, {"owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1573480521, "post_id": 58733475, "comment_id": 103885357, "body": "Thank you @Coder256 for your help, I was tried adding libraries but Error is remain same, Today once again I cloned it from official bindgen website but its doesn&#39;t change anything. If possible please open question."}, {"owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "reply_to_user": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1573573120, "post_id": 58733475, "comment_id": 103920840, "body": "@ganesh I meant to just ask another question with the &quot;Ask Question&quot; button. Make sure to paste the error message and your code (also highlight it and click the <code>{}</code> button so it will look better). If you comment a link to the new question here I would be glad to help."}, {"owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1573629958, "post_id": 58733475, "comment_id": 103939532, "body": "Thank you, error got solved yesterday. Latest version of clang 0.51.1 has regression on that we need to to downgrade the version to 0.46.0"}], "tags": [], "owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "is_accepted": true, "score": 0, "last_activity_date": 1573053901, "creation_date": 1573053901, "answer_id": 58733475, "question_id": 58708760, "link": "https://stackoverflow.com/questions/58708760/how-to-wrap-existing-c-functions-with-rust-or-how-to-call-c-functions-from-rust/58733475#58733475", "title": "How to wrap existing C functions with Rust or how to call C functions from Rust?", "body": "<p>If you're trying to call C code from Rust, you need to create FFI bindings as some people have mentioned in the comments.</p>\n\n<p>However, it is usually best to do this via <a href=\"https://rust-lang.github.io/rust-bindgen/introduction.html\" rel=\"nofollow noreferrer\"><code>rust-bindgen</code></a>, which automatically generates the bindings and includes tests to make sure that the results are properly sized, aligned, etc. It is very easy to create a type with an incorrect size, which will give you no warning at compile-time and can cause undefined behavior unless you generate tests for them with <code>bindgen</code>.</p>\n"}], "owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 337, "favorite_count": 0, "accepted_answer_id": 58733475, "answer_count": 1, "score": 0, "last_activity_date": 1573053901, "creation_date": 1572947740, "last_edit_date": 1572961900, "question_id": 58708760, "link": "https://stackoverflow.com/questions/58708760/how-to-wrap-existing-c-functions-with-rust-or-how-to-call-c-functions-from-rust", "title": "How to wrap existing C functions with Rust or how to call C functions from Rust?", "body": "<p>I have existing C code and its header and I need to call the C code from Rust. I tried it many ways and referred to documents but I didn't understand how to apply that to my code. I'm facing difficulties converting C functions into Rust. Please help me with some examples so that I can understand easily.</p>\n\n<p>I tried to use the examples given in the Rust book and other website examples, but no resource has more details on this. </p>\n\n<p>C_code.h</p>\n\n<pre><code>void ifx_vec_init_r(ifx_Vector_R_t* vector,\n                    ifx_Float_t* d,\n                    uint32_t length);\n\nvoid ifx_vec_init_c(ifx_Vector_C_t* vector,\n                    ifx_Complex_t* d,\n                    uint32_t length);\n\nvoid ifx_vec_rawview_r(ifx_Vector_R_t* vector,\n                       ifx_Float_t* d,\n                       uint32_t length,\n                       uint32_t stride);\n\nvoid ifx_vec_sub_r(const ifx_Vector_R_t* v1,\n                   const ifx_Vector_R_t* v2,\n                   ifx_Vector_R_t* result);\n</code></pre>\n\n<p>I want to call all above functions in Rust, but I am not able to understand how to start or how to change. What and all we to take care to wrap this C code? What are the ways available?</p>\n"}, {"tags": ["rust", "async-await"], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1572950870, "post_id": 58709332, "comment_id": 103713285, "body": "Full <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=7b42663108c1c18359c19c1fce16267d\" rel=\"nofollow noreferrer\">example</a> with executor"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1572962879, "post_id": 58709332, "comment_id": 103719362, "body": "See also <a href=\"https://stackoverflow.com/q/52001592/155423\">Why can impl trait not be used to return multiple / conditional types?</a>; <a href=\"https://stackoverflow.com/q/27957103/155423\">How do I create a heterogeneous collection of objects?</a>; <a href=\"https://stackoverflow.com/q/28932450/155423\">How can I have a collection of objects that differ by their associated type?</a>."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 9, "last_activity_date": 1601300190, "last_edit_date": 1601300190, "creation_date": 1572949583, "answer_id": 58709332, "question_id": 58704424, "link": "https://stackoverflow.com/questions/58704424/how-can-i-put-an-async-function-into-a-map-in-rust/58709332#58709332", "title": "How can I put an async function into a map in Rust?", "body": "<p>This happens because <code>impl Future</code> is a concrete unique type while <code>dyn Future</code> is an abstract type. <code>HashMap</code> expects the abstract type since it can only hold instances of a single type.</p>\n<p>If we can box the return type of the async functions, we will able to add these futures into a <code>HashMap</code>.</p>\n<p>First we need to change the type of <code>CalcFn</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>type CalcFn = Box&lt;dyn Fn(i32, i32) -&gt; Pin&lt;Box&lt;dyn Future&lt;Output = i32&gt;&gt;&gt;&gt;;\n</code></pre>\n<p>Then this can do the trick:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let mut map: HashMap&lt;&amp;str, CalcFn&gt; = Default::default();\nmap.insert(&quot;add&quot;, Box::new(|a, b| Box::pin(add(a, b))));\nmap.insert(&quot;sub&quot;, Box::new(|a, b| Box::pin(sub(a, b))));\n\nprintln!(&quot;map size: {}&quot;, map.len());\n\n//map.get(&quot;add&quot;).unwrap()(2, 3).await\n</code></pre>\n<p>This <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=b4581103ebb8afcecceaa66b329a9530\" rel=\"nofollow noreferrer\">complete example</a>\nsimplified <code>Future</code>'s <code>Item</code> type, using an <code>i32</code> instead of a <code>Result</code>. Please also check the <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=c52134926772edf1607f6484906331e5\" rel=\"nofollow noreferrer\">full code for your case</a>.</p>\n<p>You can also use types from the futures crate like <a href=\"https://docs.rs/futures/0.3.5/futures/future/type.LocalBoxFuture.html\" rel=\"nofollow noreferrer\"><code>LocalBoxFuture</code></a> and <a href=\"https://docs.rs/futures/0.3.5/futures/future/type.BoxFuture.html\" rel=\"nofollow noreferrer\"><code>BoxFuture</code></a> created by the <a href=\"https://docs.rs/futures/0.3.5/futures/future/trait.FutureExt.html#method.boxed\" rel=\"nofollow noreferrer\"><code>FutureExt::boxed</code></a> and <a href=\"https://docs.rs/futures/0.3.5/futures/future/trait.FutureExt.html#method.boxed_local\" rel=\"nofollow noreferrer\"><code>FutureExt::boxed_local</code></a> methods respectively:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::{FutureExt, LocalBoxFuture}; // 0.3.5\nuse std::collections::HashMap;\n\ntype BoxedResult&lt;T&gt; = Result&lt;T, Box&lt;dyn std::error::Error + Send + Sync&gt;&gt;;\ntype CalcFn = Box&lt;dyn Fn(i32, i32) -&gt; LocalBoxFuture&lt;'static, BoxedResult&lt;i32&gt;&gt;&gt;;\n\nasync fn add(a: i32, b: i32) -&gt; BoxedResult&lt;i32&gt; {\n    Ok(a + b)\n}\n\nasync fn sub(a: i32, b: i32) -&gt; BoxedResult&lt;i32&gt; {\n    Ok(a - b)\n}\n\nasync fn example() {\n    let mut map: HashMap&lt;&amp;str, CalcFn&gt; = Default::default();\n    map.insert(&quot;add&quot;, Box::new(|a, b| add(a, b).boxed()));\n    map.insert(&quot;sub&quot;, Box::new(|a, b| sub(a, b).boxed()));\n\n    println!(&quot;map size: {}&quot;, map.len());\n\n    //map.get(&quot;add&quot;).unwrap()(2, 3).await\n}\n</code></pre>\n"}], "owner": {"reputation": 685, "user_id": 6048574, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/959c13b271fe9dcc816858f51abdb5ed?s=128&d=identicon&r=PG&f=1", "display_name": "Ukonn Ra", "link": "https://stackoverflow.com/users/6048574/ukonn-ra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3084, "favorite_count": 4, "accepted_answer_id": 58709332, "answer_count": 1, "score": 14, "last_activity_date": 1601300190, "creation_date": 1572927339, "last_edit_date": 1572962109, "question_id": 58704424, "link": "https://stackoverflow.com/questions/58704424/how-can-i-put-an-async-function-into-a-map-in-rust", "title": "How can I put an async function into a map in Rust?", "body": "<p>I cannot handle async functions when writing an async router for <code>hyper</code>.</p>\n\n<p>This code:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::future::Future;\n\ntype BoxedResult&lt;T&gt; = Result&lt;T, Box&lt;dyn std::error::Error + Send + Sync&gt;&gt;;\ntype CalcFn = Box&lt;dyn Fn(i32, i32) -&gt; dyn Future&lt;Output = BoxedResult&lt;i32&gt;&gt;&gt;;\n\nasync fn add(a: i32, b: i32) -&gt; BoxedResult&lt;i32&gt; {\n    Ok(a + b)\n}\n\nasync fn sub(a: i32, b: i32) -&gt; BoxedResult&lt;i32&gt; {\n    Ok(a - b)\n}\n\nfn main() {\n    let mut map: HashMap&lt;&amp;str, CalcFn&gt; = Default::default();\n    map.insert(\"add\", Box::new(add));\n    map.insert(\"sub\", Box::new(sub));\n\n    println!(\"map size: {}\", map.len());\n}\n</code></pre>\n\n<p>Generates the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;fn(i32, i32) -&gt; impl std::future::Future {add} as std::ops::FnOnce&lt;(i32, i32)&gt;&gt;::Output == dyn std::future::Future&lt;Output = std::result::Result&lt;i32, std::boxed::Box&lt;dyn std::error::Error + std::marker::Send + std::marker::Sync&gt;&gt;&gt;`\n  --&gt; src/main.rs:17:23\n   |\n17 |     map.insert(\"add\", Box::new(add));\n   |                       ^^^^^^^^^^^^^ expected opaque type, found trait std::future::Future\n   |\n   = note: expected type `impl std::future::Future`\n              found type `dyn std::future::Future&lt;Output = std::result::Result&lt;i32, std::boxed::Box&lt;dyn std::error::Error + std::marker::Send + std::marker::Sync&gt;&gt;&gt;`\n   = note: required for the cast to the object type `dyn std::ops::Fn(i32, i32) -&gt; dyn std::future::Future&lt;Output = std::result::Result&lt;i32, std::boxed::Box&lt;dyn std::error::Error + std::marker::Send + std::marker::Sync&gt;&gt;&gt;`\n\nerror[E0271]: type mismatch resolving `&lt;fn(i32, i32) -&gt; impl std::future::Future {sub} as std::ops::FnOnce&lt;(i32, i32)&gt;&gt;::Output == dyn std::future::Future&lt;Output = std::result::Result&lt;i32, std::boxed::Box&lt;dyn std::error::Error + std::marker::Send + std::marker::Sync&gt;&gt;&gt;`\n  --&gt; src/main.rs:18:23\n   |\n18 |     map.insert(\"sub\", Box::new(sub));\n   |                       ^^^^^^^^^^^^^ expected opaque type, found trait std::future::Future\n   |\n   = note: expected type `impl std::future::Future`\n              found type `dyn std::future::Future&lt;Output = std::result::Result&lt;i32, std::boxed::Box&lt;dyn std::error::Error + std::marker::Send + std::marker::Sync&gt;&gt;&gt;`\n   = note: required for the cast to the object type `dyn std::ops::Fn(i32, i32) -&gt; dyn std::future::Future&lt;Output = std::result::Result&lt;i32, std::boxed::Box&lt;dyn std::error::Error + std::marker::Send + std::marker::Sync&gt;&gt;&gt;`\n</code></pre>\n\n<p>It seems there is a conflict between <code>impl Future</code> and <code>dyn Future</code>, but I have no idea how to handle it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 5, "creation_date": 1572902321, "post_id": 58701001, "comment_id": 103698255, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/48308759/how-do-i-convert-a-vect-to-a-vecu-without-copying-the-vector\">How do I convert a Vec&lt;T&gt; to a Vec&lt;U&gt; without copying the vector?</a> (See especially Sven Marnach&#39;s answer, which addresses your case specifically.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1572903064, "post_id": 58701001, "comment_id": 103698541, "body": "<i>I know that it is possible to achieve a copy-free conversion by using [...] <code>std::mem::transmute</code></i> \u2014  This is <a href=\"https://doc.rust-lang.org/std/mem/fn.transmute.html#alternatives\" rel=\"nofollow noreferrer\">not true</a>; it is undefined behavior to transmute a <code>Vec</code> as it is <code>repr(Rust)</code>:"}, {"owner": {"reputation": 9436, "user_id": 1984384, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/e61d31a5f0fa86bf2f1824f0da4cfa49?s=128&d=identicon&r=PG", "display_name": "Tim Bodeit", "link": "https://stackoverflow.com/users/1984384/tim-bodeit"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572905922, "post_id": 58701001, "comment_id": 103699584, "body": "@trentcl: Yes, that question sufficiently matches mine. The remarks on <code>repr(transparent)</code> were especially valuable to me."}, {"owner": {"reputation": 9436, "user_id": 1984384, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/e61d31a5f0fa86bf2f1824f0da4cfa49?s=128&d=identicon&r=PG", "display_name": "Tim Bodeit", "link": "https://stackoverflow.com/users/1984384/tim-bodeit"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572906513, "post_id": 58701001, "comment_id": 103699782, "body": "@Shepmaster: I was aware of the fact, that doing so is &quot;Undefined Behavior, and a bad idea&quot;. Both <code>convert_unsafe</code> and <code>convert_transmute</code> were based on the <code>Turning a Vec&lt;&amp;T&gt; into a Vec&lt;Option&lt;&amp;T&gt;&gt;</code> example from the page that you had linked. I&#39;m sorry for not expressing myself more clearly. I was trying to give an example of what I want to avoid \u2013 not imply that such a bad practice would be sound. Thank you for your update on Sven Marnach&#39;s anwer."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1572906875, "post_id": 58701001, "comment_id": 103699897, "body": "@TimBodeit Great! I&#39;d like to raise a minor clarification wrt Shepmaster&#39;s comment: <code>convert_transmute</code> is <i>always</i> UB, but <code>convert_unsafe</code> may be sound when <code>Asdf</code> is <code>repr(transparent)</code>. They are both solutions that use <code>unsafe</code>, but they are not both &quot;equally unsafe&quot; because one is <i>always</i> wrong whereas the other is only <i>sometimes</i> wrong."}], "owner": {"reputation": 9436, "user_id": 1984384, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/e61d31a5f0fa86bf2f1824f0da4cfa49?s=128&d=identicon&r=PG", "display_name": "Tim Bodeit", "link": "https://stackoverflow.com/users/1984384/tim-bodeit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1572903073, "answer_count": 0, "score": 3, "last_activity_date": 1572902349, "creation_date": 1572901372, "last_edit_date": 1592644375, "question_id": 58701001, "link": "https://stackoverflow.com/questions/58701001/is-there-any-way-to-safely-cast-from-vect-to-vecnewtypeoft-without-copying-t", "closed_reason": "Duplicate", "title": "Is there any way to safely cast from Vec&lt;T&gt; to Vec&lt;NewtypeOfT&gt; without copying the content of the vector?", "body": "<p>For a <code>struct Asdf(i32);</code> using the <a href=\"https://doc.rust-lang.org/reference/type-layout.html#the-default-representation\" rel=\"nofollow noreferrer\">default</a> representation the memory size and alignment seem to be the same as for a raw <code>i32</code> primitive.</p>\n<p>Is there a way to cast from <code>Vec&lt;Asdf&gt;</code> to <code>Vec&lt;i32&gt;</code> that doesn't require any assumptions on memory equality of <code>Asdf</code> and <code>i32</code>? An ideal solution would be where the compiler and optimizer detect that a conversion can be made as a zero-cost cast at compile time and fall back to a copy or throw a compiler error when this is no longer the case (for example if someone were to add a second parameter to <code>Asdf</code>).</p>\n<h3>Approaches tried:</h3>\n<p><strong>Safe, copy based solution</strong></p>\n<p>When mapping over <code>IntoIter</code>, the optimizer at <code>opt-level = 3</code> does not get rid of the copy.</p>\n<pre><code>fn convert(from: Vec&lt;i32&gt;) -&gt; Vec&lt;Asdf&gt; {\n    from.into_iter().map(|p| Asdf(p)).collect()\n}\n</code></pre>\n<p><strong>Unsafe solutions</strong></p>\n<p>I know that it is possible to achieve a copy-free conversion by using <code>Vec::from_raw_parts</code> or <code>std::mem::transmute</code>. Is there any way to do this without <code>unsafe</code> code?</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn convert_unsafe(v_orig: Vec&lt;i32&gt;) -&gt; Vec&lt;Asdf&gt; {\n    let mut v_orig = v_orig;\n    let v_from_raw = unsafe {\n        Vec::from_raw_parts(\n            v_orig.as_mut_ptr() as *mut Asdf,\n            v_orig.len(),\n            v_orig.capacity(),\n        )\n    };\n    std::mem::forget(v_orig);\n    v_from_raw\n}\n\nfn convert_transmute(v_orig: Vec&lt;i32&gt;) -&gt; Vec&lt;Asdf&gt; {\n    unsafe { std::mem::transmute::&lt;Vec&lt;i32&gt;, Vec&lt;Asdf&gt;&gt;(v_orig) }\n}\n</code></pre>\n"}, {"tags": ["asynchronous", "rust", "async-await", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 2880, "user_id": 1658328, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/ad0dd54bf3ca15b434e10db088fb2bc6?s=128&d=identicon&r=PG", "display_name": "peku33", "link": "https://stackoverflow.com/users/1658328/peku33"}, "edited": false, "score": 0, "creation_date": 1572982862, "post_id": 58701620, "comment_id": 103729682, "body": "Is there any way to allow passing a variable to <code>get_weather()</code> by reference? I want to pass it to <code>get_weather_stream()</code> and then to <code>get_weather()</code> in each iteration. Of course the resulting Stream should be lifetime dependent on that variable."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2880, "user_id": 1658328, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/ad0dd54bf3ca15b434e10db088fb2bc6?s=128&d=identicon&r=PG", "display_name": "peku33", "link": "https://stackoverflow.com/users/1658328/peku33"}, "edited": false, "score": 0, "creation_date": 1572983241, "post_id": 58701620, "comment_id": 103729835, "body": "@peku33 I don&#39;t see immediately why it wouldn&#39;t work. Perhaps you should try it and report back!"}, {"owner": {"reputation": 2880, "user_id": 1658328, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/ad0dd54bf3ca15b434e10db088fb2bc6?s=128&d=identicon&r=PG", "display_name": "peku33", "link": "https://stackoverflow.com/users/1658328/peku33"}, "edited": false, "score": 0, "creation_date": 1573066171, "post_id": 58701620, "comment_id": 103763556, "body": "In the first step I added <code>&lt;&#39;a&gt;(arg: &amp;&#39;a i32)</code> to both functions. I also added <code>+ &#39;a</code> to <code>get_weather_stream</code> return. However I get <code>closure may outlive current function</code>. I would like not to use Arc, Rc, etc if possible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2880, "user_id": 1658328, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/ad0dd54bf3ca15b434e10db088fb2bc6?s=128&d=identicon&r=PG", "display_name": "peku33", "link": "https://stackoverflow.com/users/1658328/peku33"}, "edited": false, "score": 0, "creation_date": 1573094028, "post_id": 58701620, "comment_id": 103772043, "body": "@peku33 <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c1bc55fa074cd53da526172c72afc733\" rel=\"nofollow noreferrer\">seems to work</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1582742606, "last_edit_date": 1582742606, "creation_date": 1572904408, "answer_id": 58701620, "question_id": 58700741, "link": "https://stackoverflow.com/questions/58700741/is-there-any-way-to-create-a-async-stream-generator-that-yields-the-result-of-re/58701620#58701620", "title": "Is there any way to create a async stream generator that yields the result of repeatedly calling a function?", "body": "<p>Use <a href=\"https://docs.rs/futures/0.3.4/futures/stream/fn.unfold.html\" rel=\"nofollow noreferrer\"><code>stream::unfold</code></a> to go from the \"world of futures\" to the \"world of streams\". We don't need any extra state, so we use the empty tuple:</p>\n\n<pre><code>use futures::StreamExt; // 0.3.4\nuse std::time::Duration;\nuse tokio::time; // 0.2.11\n\nstruct Weather;\n\nasync fn get_weather() -&gt; Weather {\n    Weather\n}\n\nconst BETWEEN: Duration = Duration::from_secs(1);\n\nfn get_weather_stream() -&gt; impl futures::Stream&lt;Item = Weather&gt; {\n    futures::stream::unfold((), |_| async {\n        time::delay_for(BETWEEN).await;\n        let weather = get_weather().await;\n        Some((weather, ()))\n    })\n}\n\n#[tokio::main]\nasync fn main() {\n    get_weather_stream()\n        .take(3)\n        .for_each(|_v| async {\n            println!(\"Got the weather\");\n        })\n        .await;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>% time ./target/debug/example\n\nGot the weather\nGot the weather\nGot the weather\n\nreal    3.085   3085495us\nuser    0.004   3928us\nsys     0.003   3151us\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51114794/155423\">How do I convert an iterator into a stream on success or an empty stream on failure?</a></li>\n<li><a href=\"https://stackoverflow.com/q/50850309/155423\">How do I iterate over a Vec of functions returning Futures in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/56719990/155423\">Creating a stream of values while calling async fns?</a></li>\n</ul>\n"}], "owner": {"reputation": 2880, "user_id": 1658328, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/ad0dd54bf3ca15b434e10db088fb2bc6?s=128&d=identicon&r=PG", "display_name": "peku33", "link": "https://stackoverflow.com/users/1658328/peku33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 982, "favorite_count": 4, "accepted_answer_id": 58701620, "answer_count": 1, "score": 3, "last_activity_date": 1582742606, "creation_date": 1572900031, "last_edit_date": 1572924799, "question_id": 58700741, "link": "https://stackoverflow.com/questions/58700741/is-there-any-way-to-create-a-async-stream-generator-that-yields-the-result-of-re", "title": "Is there any way to create a async stream generator that yields the result of repeatedly calling a function?", "body": "<p>I want to build a program that collects weather updates and represents them as a stream. I want to call <code>get_weather()</code> in an infinite loop, with 60 seconds delay between <strong>finish</strong> and <strong>start</strong>.</p>\n\n<p>A simplified version would look like this:</p>\n\n<pre><code>async fn get_weather() -&gt; Weather { /* ... */ }\n\nfn get_weather_stream() -&gt; impl futures::Stream&lt;Item = Weather&gt; {\n    loop {\n        tokio::timer::delay_for(std::time::Duration::from_secs(60)).await;\n        let weather = get_weather().await;\n        yield weather; // This is not supported\n        // Note: waiting for get_weather() stops the timer and avoids overflows.\n    }\n}\n</code></pre>\n\n<p>Is there any way to do this easily?</p>\n\n<p>Using <code>tokio::timer::Interval</code> will not work when <code>get_weather()</code> takes more than 60 seconds:</p>\n\n<pre><code>fn get_weather_stream() -&gt; impl futures::Stream&lt;Item = Weather&gt; {\n    tokio::timer::Interval::new_with_delay(std::time::Duration::from_secs(60))\n        .then(|| get_weather())\n}\n</code></pre>\n\n<p>If that happens, the next function will start immediately. I want to keep exactly 60 seconds between the previous <code>get_weather()</code> start and the next <code>get_weather()</code> start.</p>\n"}, {"tags": ["reference", "rust", "paho"], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 12322066, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-NnpkOWOMzBI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdPAh1DGO2dO01bF6gOyUnFVQR3qQ/photo.jpg?sz=128", "display_name": "Blopa", "link": "https://stackoverflow.com/users/12322066/blopa"}, "is_accepted": false, "score": 0, "last_activity_date": 1572892548, "creation_date": 1572892548, "answer_id": 58699249, "question_id": 58698889, "link": "https://stackoverflow.com/questions/58698889/borrowed-and-captured-variable-in-rust/58699249#58699249", "title": "Borrowed and captured variable in RUST", "body": "<p>The devil is in the details: I found the <em>issue</em>, which is the <code>_cli</code>. I replaced it with <code>cli: &amp;mqtt::AsyncClient</code> and I could send the reference to my nested functions. Maybe there are better solutions for this, and it would be a pleasure to see them.</p>\n"}], "owner": {"reputation": 11, "user_id": 12322066, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-NnpkOWOMzBI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdPAh1DGO2dO01bF6gOyUnFVQR3qQ/photo.jpg?sz=128", "display_name": "Blopa", "link": "https://stackoverflow.com/users/12322066/blopa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1572892548, "creation_date": 1572890820, "question_id": 58698889, "link": "https://stackoverflow.com/questions/58698889/borrowed-and-captured-variable-in-rust", "title": "Borrowed and captured variable in RUST", "body": "<p>I am working with <code>paho_mqtt</code>, and I want to send messages on topics according to those received. I divided my code into nested functions, and I use the variable <code>cli</code> (cf code below). I think I need to use references to have a working code, but I still don't figure how. Thank you for your help.</p>\n\n<p><em>Code:</em></p>\n\n<pre><code>fn publish_fail_msg(cli: mqtt::AsyncClient, topic: String){\n        let msg = mqtt::Message::new(topic, \"Fail\", QOS[0]);\n        cli.publish(msg);\n}\n\nfn manage_msgs(cli: mqtt::AsyncClient, msg: mqtt::Message){\n        let topic = msg.topic();\n        let payload_str = msg.payload_str();\n\n        match topic {\n                \"main\"  =&gt; publish_new_topic(cli, payload_str.to_string()),\n                _       =&gt; publish_fail_msg(cli, topic.to_string()),\n        }\n}\n\nfn main() -&gt; mqtt::AsyncClient {\n        // Create the client connection\n        let mut cli = mqtt::AsyncClient::new(create_opts).unwrap_or_else(|e| {\n                println!(\"Error creating the client: {:?}\", e);\n                process::exit(1);\n        });\n\n        // Attach a closure to the client to receive callback on incoming messages.\n        cli.set_message_callback(|_cli, msg| {\n                if let Some(msg) = msg {\n                        manage_msgs(cli, msg);\n                }\n        });\n\n        cli\n}\n</code></pre>\n\n<p><em>Error:</em></p>\n\n<pre><code>error[E0507]: cannot move out of captured variable in an `FnMut` closure\n   --&gt; src/main.rs:230:25\n    |\n212 |     let mut cli = mqtt::AsyncClient::new(create_opts).unwrap_or_else(|e| {\n    |         ------- captured outer variable\n...\n230 |             manage_msgs(cli, msg);\n    |                         ^^^ cannot move out of captured variable in an `FnMut` closure\n\nerror[E0505]: cannot move out of `cli` because it is borrowed\n   --&gt; src/main.rs:228:30\n    |\n228 |     cli.set_message_callback(|_cli, msg| {\n    |     --- -------------------- ^^^^^^^^^^^ move out of `cli` occurs here\n    |     |   |\n    |     |   borrow later used by call\n    |     borrow of `cli` occurs here\n229 |         if let Some(msg) = msg {\n230 |             manage_msgs(cli, msg);\n    |                         --- move occurs due to use in closure\n\nerror[E0382]: borrow of moved value: `cli`\n   --&gt; src/main.rs:248:5\n    |\n212 |     let mut cli = mqtt::AsyncClient::new(create_opts).unwrap_or_else(|e| {\n    |         ------- move occurs because `cli` has type `mqtt::AsyncClient`, which does not implement the `Copy` trait\n...\n228 |     cli.set_message_callback(|_cli, msg| {\n    |                              ----------- value moved into closure here\n229 |         if let Some(msg) = msg {\n230 |             manage_msgs(cli, msg);\n    |                         --- variable moved due to use in closure\n...\n248 |     cli.connect_with_callbacks(conn_opts, on_connect_success, on_connect_failure);\n    |     ^^^ value borrowed here after move\n\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1572882177, "post_id": 58696545, "comment_id": 103689820, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/29401626/155423\">How do I return a reference to something inside a RefCell without breaking encapsulation?</a> and <a href=\"https://stackoverflow.com/q/54012660/155423\">Unwrap and access T from an Option&lt;Rc&lt;RefCell&lt;T&gt;&gt;&gt;</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58696545/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 74, "user_id": 6231350, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5npvf.jpg?s=128&g=1", "display_name": "Archeus", "link": "https://stackoverflow.com/users/6231350/archeus"}, "edited": false, "score": 0, "creation_date": 1573616087, "post_id": 58822755, "comment_id": 103935760, "body": "Thanks for your answer. I visit the link you provided and find <a href=\"https://github.com/rust-lang/rust/issues/27746#issuecomment-172899746\" rel=\"nofollow noreferrer\">unsafe code</a> maybe the correct solution for me. Although it&#39;s really difficult to understand."}], "tags": [], "owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "is_accepted": true, "score": 2, "last_activity_date": 1573575851, "creation_date": 1573575851, "answer_id": 58822755, "question_id": 58696545, "link": "https://stackoverflow.com/questions/58696545/how-to-invoke-get-function-on-refhashmapk-v-and-return-optionreft/58822755#58822755", "title": "How to invoke get function on Ref&lt;HashMap&lt;K, V&gt;&gt; and return Option&lt;Ref&lt;T&gt;&gt;?", "body": "<p>It looks like there was a method to do exactly what you are hoping for, but <a href=\"https://github.com/rust-lang/rust/issues/27746\" rel=\"nofollow noreferrer\">it was removed</a>. However, I think this is a use case that they might not have considered, so it might not be a bad idea to try pinging the issue.</p>\n\n<p>Otherwise, here is a somewhat inefficient solution that will work:</p>\n\n<pre><code>use std::cell::{RefCell, RefMut};\nuse std::collections::HashMap;\n\nstruct Foo&lt;T&gt; {\n    data: HashMap&lt;u32, RefCell&lt;HashMap&lt;u32, T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    fn get_entry(&amp;self, k: u32, k2: u32) -&gt; Option&lt;RefMut&lt;T&gt;&gt; {\n        self.data\n            .get(&amp;k)\n            .map(|inner| inner.borrow_mut())\n            .filter(|x| x.contains_key(&amp;k2))\n            .map(|x| RefMut::map(x, |y| y.get_mut(&amp;k2).unwrap()))\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 74, "user_id": 6231350, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5npvf.jpg?s=128&g=1", "display_name": "Archeus", "link": "https://stackoverflow.com/users/6231350/archeus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 58822755, "answer_count": 1, "score": 1, "last_activity_date": 1573575851, "creation_date": 1572881625, "last_edit_date": 1573017003, "question_id": 58696545, "link": "https://stackoverflow.com/questions/58696545/how-to-invoke-get-function-on-refhashmapk-v-and-return-optionreft", "title": "How to invoke get function on Ref&lt;HashMap&lt;K, V&gt;&gt; and return Option&lt;Ref&lt;T&gt;&gt;?", "body": "<p>I have data that can be divided into several categories and each category can divided into several sub-types. I save the data as <code>HashMap&lt;Type1, HashMap&lt;Type2, Data&gt;&gt;</code>. </p>\n\n<p>I need to get a mutable reference of different categories at the same time, so the definition becomes <code>HashMap&lt;Type1, RefCell&lt;HashMap&lt;Type2, Data&gt;&gt;&gt;</code>. </p>\n\n<p>How do I implement the <code>get</code> function?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::{RefCell, RefMut};\nuse std::collections::HashMap;\n\nstruct Foo&lt;T&gt; {\n    data: HashMap&lt;u32, RefCell&lt;HashMap&lt;u32, T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    fn get_mut(&amp;self, k: u32, k2: u32) -&gt; Option&lt;RefMut&lt;T&gt;&gt; {\n        unimplemented!() // Help me &gt;_&lt;\n    }\n}\n</code></pre>\n\n<p>The key question is when I call <code>HashMap::get_mut</code> function on <code>RefMut&lt;HashMap&lt;K,V&gt;&gt;</code>, it sees that there is not way to return <code>Option&lt;RefMut&lt;V&gt;&gt;</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::RefMut;\nuse std::collections::HashMap;\n\n//I can check twice if the map contains k, but it's inefficient.\nfn get_mut&lt;V&gt;(map: RefMut&lt;HashMap&lt;u32, V&gt;&gt;, k: u32) -&gt; Option&lt;RefMut&lt;V&gt;&gt; {\n    if map.contains_key(&amp;k) {\n        Some(RefMut::map(map, |map| map.get_mut(&amp;k).unwrap()))\n    } else {\n        None\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "documentation", "openapi", "openapi-generator"], "answers": [{"comments": [{"owner": {"reputation": 1679, "user_id": 267874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/007a9c64b82a001443ff463ef326366b?s=128&d=identicon&r=PG", "display_name": "Paul-Sebastian Manole", "link": "https://stackoverflow.com/users/267874/paul-sebastian-manole"}, "edited": false, "score": 1, "creation_date": 1592341520, "post_id": 58715349, "comment_id": 110390711, "body": "also worth mentioning that both of them provide VERY old dependencies, including futures 0.1 and very old OpenSSL. They in dire need of upgrading."}, {"owner": {"reputation": 720, "user_id": 1877617, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/fe56abf859f5212b2d2123405c502785?s=128&d=identicon&r=PG", "display_name": "ThePedestrian", "link": "https://stackoverflow.com/users/1877617/thepedestrian"}, "reply_to_user": {"reputation": 1679, "user_id": 267874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/007a9c64b82a001443ff463ef326366b?s=128&d=identicon&r=PG", "display_name": "Paul-Sebastian Manole", "link": "https://stackoverflow.com/users/267874/paul-sebastian-manole"}, "edited": false, "score": 0, "creation_date": 1601666973, "post_id": 58715349, "comment_id": 113487216, "body": "+1 to @Paul-SebastianManole comment. Recently tried generating stubs and was hit with a whole array of OpenSSL and other issues. Had to resort to using older machines. Also the code that is generated is very low-level using Hyper."}, {"owner": {"reputation": 1679, "user_id": 267874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/007a9c64b82a001443ff463ef326366b?s=128&d=identicon&r=PG", "display_name": "Paul-Sebastian Manole", "link": "https://stackoverflow.com/users/267874/paul-sebastian-manole"}, "edited": false, "score": 0, "creation_date": 1601680028, "post_id": 58715349, "comment_id": 113490693, "body": "I think the community is building around other libraries like paperclip for OpenAPI and Rust. There are also other efforts around popular libs and frameworks like one for Rocket or Actix. Just search by keywords on lib.rs."}], "tags": [], "owner": {"reputation": 7509, "user_id": 677735, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Pyjch.png?s=128&g=1", "display_name": "William Cheng", "link": "https://stackoverflow.com/users/677735/william-cheng"}, "is_accepted": true, "score": 1, "last_activity_date": 1573032994, "last_edit_date": 1573032994, "creation_date": 1572970437, "answer_id": 58715349, "question_id": 58694154, "link": "https://stackoverflow.com/questions/58694154/open-api-generator-what-is-the-difference-between-rust-and-rust-server-clients/58715349#58715349", "title": "Open API Generator. What is the difference between rust and rust-server clients?", "body": "<p>I think <code>rust</code> client generator was created first. For your feedback on the <code>rust</code> client generator, please let us know via github.com/OpenAPITools/openapi-generator/issues/new. <code>rust</code> client supports multiple libraries that you want to try:</p>\n\n<pre><code>library\n    library template (sub-template) to use. (Default: hyper)\n        hyper - HTTP client: Hyper.\n        reqwest - HTTP client: Reqwest.\n</code></pre>\n\n<p><code>rust-server</code> generator comes with both server and client generators. There were discussions to consolidate the client part of <code>rust-server</code> into <code>rust</code> client generator but no one has time to perform the consolidation.</p>\n"}], "owner": {"reputation": 133, "user_id": 10671679, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c086dbf7713aa48a259a3d979f9442d6?s=128&d=identicon&r=PG&f=1", "display_name": "theBigCheese88", "link": "https://stackoverflow.com/users/10671679/thebigcheese88"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 683, "favorite_count": 0, "accepted_answer_id": 58715349, "answer_count": 1, "score": 1, "last_activity_date": 1573032994, "creation_date": 1572873127, "question_id": 58694154, "link": "https://stackoverflow.com/questions/58694154/open-api-generator-what-is-the-difference-between-rust-and-rust-server-clients", "title": "Open API Generator. What is the difference between rust and rust-server clients?", "body": "<p><a href=\"https://github.com/OpenAPITools/openapi-generator\" rel=\"nofollow noreferrer\">https://github.com/OpenAPITools/openapi-generator</a></p>\n\n<p>Generating a 'rust' client stub.</p>\n\n<p>Generating a 'rust-server' client stub.</p>\n\n<p>What's the difference between them. I feel like the 'rust' client is outdated, it doesn't have any examples and the code generated is lacking in certain areas compared to 'rust-server'. Is the reason for the 'rust' client to allow users to customise the client more or has it just been abandoned? If it is still being supported then when would you use one over the other?</p>\n\n<p>Also the 'rust' client's README talks about itself being a server which only adds to the confusion...</p>\n"}, {"tags": ["rust", "optional"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 6, "creation_date": 1572873403, "post_id": 58693667, "comment_id": 103685219, "body": "Please note that the standard structs are documented: <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/option/enum.Option.html</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1572874762, "post_id": 58693667, "comment_id": 103685886, "body": "Note to close voters: while the question shows no research effort, that is not grounds for closing. Downvote, instead, and move on, or merely ignore it. <a href=\"https://meta.stackoverflow.com/questions/260828/do-we-need-a-close-reason-for-zero-effort-questions\">Relevant Meta link.</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1021, "user_id": 4268228, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-N62Hd0-L7ig/AAAAAAAAAAI/AAAAAAAAAGs/FJcyhG4ARPw/photo.jpg?sz=128", "display_name": "Shankar Shastri", "link": "https://stackoverflow.com/users/4268228/shankar-shastri"}, "is_accepted": true, "score": 6, "last_activity_date": 1572877206, "last_edit_date": 1572877206, "creation_date": 1572872623, "answer_id": 58694024, "question_id": 58693667, "link": "https://stackoverflow.com/questions/58693667/whats-the-equivalent-of-scalas-getorelse-in-rust/58694024#58694024", "title": "What&#39;s the equivalent of Scala&#39;s getOrElse in Rust?", "body": "<p>You can use either <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or\" rel=\"nofollow noreferrer\"><code>unwrap_or</code></a> or <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or_else\" rel=\"nofollow noreferrer\"><code>unwrap_or_else</code></a></p>\n\n<ul>\n<li><code>unwrap_or</code> is eagerly evaluated</li>\n<li><code>unwrap_or_else</code> is lazily evaluated</li>\n</ul>\n"}], "owner": {"reputation": 1460, "user_id": 2655102, "user_type": "registered", "accept_rate": 22, "profile_image": "https://www.gravatar.com/avatar/a14dc4fa847dd6fe776da0cc90cce8cf?s=128&d=identicon&r=PG", "display_name": "Renkai", "link": "https://stackoverflow.com/users/2655102/renkai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 1, "accepted_answer_id": 58694024, "answer_count": 1, "score": -4, "last_activity_date": 1572877944, "creation_date": 1572871225, "last_edit_date": 1572877944, "question_id": 58693667, "link": "https://stackoverflow.com/questions/58693667/whats-the-equivalent-of-scalas-getorelse-in-rust", "title": "What&#39;s the equivalent of Scala&#39;s getOrElse in Rust?", "body": "<p>In Scala, I can use <code>getOrElse</code> as a convenient way to get a default value from <code>Option</code>, what's the equivalent of this in Rust?</p>\n\n<pre class=\"lang-scala prettyprint-override\"><code>val threeOpt = Some(3)\nval shouldBeThree = threeOpt.getOrElse(-1) // got 3\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 21, "user_id": 12319618, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mAWFtM1G-rN4PGlyv9lTd9VT1chuZdLk7luyKMP=k-s128", "display_name": "sharperguy", "link": "https://stackoverflow.com/users/12319618/sharperguy"}, "is_accepted": false, "score": 1, "last_activity_date": 1572865214, "creation_date": 1572865214, "answer_id": 58692054, "question_id": 58691171, "link": "https://stackoverflow.com/questions/58691171/getting-a-stack-trace-from-ioresult/58692054#58692054", "title": "Getting a stack trace from io::Result()?", "body": "<p>Of course after searching for some time and eventually asking a question, I find the solution 30 minutes later:</p>\n\n<p>Enter the <a href=\"https://crates.io/crates/error-chain\" rel=\"nofollow noreferrer\">error_chain</a> crate:</p>\n\n<p>So the resulting code would have to look something like:</p>\n\n<pre><code>#![recursion_limit = \"1024\"]\n\n#[macro_use]\nextern crate error_chain;\n\nmod errors {\n    error_chain!{}\n}\n\nuse errors::*;\n\nfn func2(param: u32) -&gt; Result&lt;u32&gt; {\n    perform_io1(param).chain_err(|| \"failed to perform io1\")?;\n    perform_io2(param + 10).chain_err(|| \"failed  to perform io2\")\n}\n\nfn func1(param: String) -&gt; Result&lt;u32&gt; {\n    let v = perform_io3(param).chain_err(|| \"failed to perform io3\")?;\n    perform_io4(v).chain_err(|| \"failed to perform io4\")?;\n    let v2 = func2(v * 3).chain_err(|| \"func2 failed\")?;\n    perform_io5().chain_err(|| \"failed to perform io5\")\n}\n\nfn main() {\n    if let Err(ref e) = run() {\n        use std::io::Write;\n        let stderr = &amp;mut ::std::io::stderr();\n        let errmsg = \"Error writing to stderr\";\n\n        writeln!(stderr, \"error: {}\", e).expect(errmsg);\n\n        for e in e.iter().skip(1) {\n            writeln!(stderr, \"caused by: {}\", e).expect(errmsg);\n        }\n\n        if let Some(backtrace) = e.backtrace() {\n            writeln!(stderr, \"backtrace: {:?}\", backtrace).expect(errmsg);\n        }\n\n        ::std::process::exit(1);\n    }\n}\n\nfn run() -&gt; Result&lt;()&gt; {\n    use std::fs::File;\n\n    // This operation will fail\n    func1(\"test\".to_string()).\n        .chain_err(|| \"func1 failed\")?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>Based on: <a href=\"https://github.com/rust-lang-nursery/error-chain/blob/master/examples/quickstart.rs\" rel=\"nofollow noreferrer\">the template recommended by Brian Anderson</a></p>\n\n<p>Of course the error messages should be made to look nicer in a real world example.</p>\n"}], "owner": {"reputation": 21, "user_id": 12319618, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mAWFtM1G-rN4PGlyv9lTd9VT1chuZdLk7luyKMP=k-s128", "display_name": "sharperguy", "link": "https://stackoverflow.com/users/12319618/sharperguy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 252, "favorite_count": 0, "closed_date": 1572865232, "answer_count": 1, "score": 1, "last_activity_date": 1572865214, "creation_date": 1572862185, "question_id": 58691171, "link": "https://stackoverflow.com/questions/58691171/getting-a-stack-trace-from-ioresult", "closed_reason": "Duplicate", "title": "Getting a stack trace from io::Result()?", "body": "<p>In rust, if there is a deep tree of functions all calling IO operations that return the type io::Result, and use the question mark operator for error handling, how can you get a stack trace to see which IO operation failed?</p>\n\n<p>E.g:</p>\n\n<pre><code>fn func2(param: u32) -&gt; io::Result&lt;u32&gt; {\n    perform_io1(param)?;\n    perform_io2(param + 10)   \n}\n\nfn func1(param: String) -&gt; io::Result&lt;u32&gt; {\n    let v = perform_io3(param)?;\n    perform_io4(v)?;\n    let v2 = func2(v * 3)?;\n    perform_io5()\n}\n\nfn main() {\n    func1(\"test\".to_string()).\n        expect(\"func1 failed\");\n}\n</code></pre>\n\n<p>When run, if one of the IO operations in func1() or func2() fails, there will be an error like:</p>\n\n<pre><code>thread 'main' panicked at 'func1 failed: Os { code: 16, kind: Other, message: \"Device or resource busy\" }', src/libcore/result.rs:1084:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n\n<p>If executed with 'RUST_BACKTRACE=1', the backtrace isn't much more helpful:</p>\n\n<pre><code>   &lt;snip&gt;\n   8: rust_begin_unwind\n             at src/libstd/panicking.rs:311\n   9: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:85\n  10: core::result::unwrap_failed\n             at src/libcore/result.rs:1084\n  11: core::result::Result&lt;T,E&gt;::expect\n             at /rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libcore/result.rs:879\n  12: example::main\n             at src/main.rs:14\n  13: std::rt::lang_start::{{closure}}\n             at /rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/rt.rs:64\n  14: std::rt::lang_start_internal::{{closure}}\n             at src/libstd/rt.rs:49\n  &lt;snip&gt;\n</code></pre>\n\n<p>The problem with this is it doesn't tell you which of the io operations caused the failure. \"Device or resource busy\" could potentially be caused by any of the IO operations.</p>\n\n<p>What would be great is to get something like:</p>\n\n<pre><code>    thread 'main' panicked at 'func1 failed: Os { code: 16, kind: Other, message: \"Device or resource busy\" }', \n    - src/libcore/result.rs:1084:5\n    - src/main.rs:3 - perform_io2(param + 10)\n    - src/main.rs:9 - func2(v * 3)\n    - src/main.rs:14 - func1(\"test\".to_string())\n</code></pre>\n\n<p>Of course, this would mean that the ? operator would need to encapsulate the failure into each io:Err that was passed down until it got passed to expect().</p>\n\n<p>What's the cleanest way to achieve this in Rust? Ideally one wouldn't have to add match expressions to the result of every io operation in order to log the result and pass it back. Or simply use unwrap() instead of ? (which would prevent handling the error more gracefully in main()).</p>\n"}, {"tags": ["generics", "types", "rust"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 3, "creation_date": 1572861793, "post_id": 58690903, "comment_id": 103679650, "body": "Your specific example can be handled by <code>std::mem::size_of_val(&amp;arr)</code>. And I would bet there&#39;s a better alternative for most other examples you can think of."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 1, "creation_date": 1572861864, "post_id": 58690903, "comment_id": 103679704, "body": "@BenjaminLindley this should be the answer. As Rust infers the type when it&#39;s possible, there&#39;s no point in a vague question, there are only rare specific cases to handle, like this one."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1572867754, "creation_date": 1572867754, "answer_id": 58692733, "question_id": 58690903, "link": "https://stackoverflow.com/questions/58690903/how-to-get-the-type-of-a-variable-so-i-can-call-a-turbofish-function/58692733#58692733", "title": "How to get the type of a variable so I can call a turbofish function?", "body": "<p>For your particular example, there is already a function in <code>std</code> to get the size of a type, based on its value; <code>std::mem::size_of_val</code>:</p>\n\n<pre><code>println!(\"size_of arr: {}\", std::mem::size_of_val(&amp;arr));\n</code></pre>\n\n<p>In general, if you want to bind a type variable to a type, you probably need to do it in the body of a function. For example, if <code>size_of_val</code> did not exist, you could do:</p>\n\n<pre><code>fn main() {\n    fn size_of_val&lt;T&gt;(_: &amp;T) -&gt; usize {\n        std::mem::size_of::&lt;T&gt;()\n    }\n    let arr = [0u8; 4];\n    println!(\"size_of arr: {}\", size_of_val(&amp;arr));\n}\n</code></pre>\n"}], "owner": {"reputation": 772, "user_id": 2177445, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70a2a5ad356c78484d79a3ad4b99209f?s=128&d=identicon&r=PG", "display_name": "likebike", "link": "https://stackoverflow.com/users/2177445/likebike"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 58692733, "answer_count": 1, "score": 0, "last_activity_date": 1572867805, "creation_date": 1572861293, "last_edit_date": 1572867805, "question_id": 58690903, "link": "https://stackoverflow.com/questions/58690903/how-to-get-the-type-of-a-variable-so-i-can-call-a-turbofish-function", "title": "How to get the type of a variable so I can call a turbofish function?", "body": "<p>Sometimes I have a variable, and I want to call a 'turbofish' function with the variable's type.  For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let arr = [0u8; 4];\n    println!(\"size_of arr: {}\", std::mem::size_of::&lt; TYPE_OF(arr) &gt;());\n}\n</code></pre>\n\n<p>Of course, <code>TYPE_OF()</code> doesn't exist.  So I end up having to hard-code the type manually:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"size_of arr: {}\", std::mem::size_of::&lt; [u8;4] &gt;());\n</code></pre>\n\n<p>It sure would be nice if I could get the type of a variable (at compile-time, not runtime) so I didn't need to hard-code the type myself.</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1572851089, "post_id": 58688434, "comment_id": 103675239, "body": "Hi there! &quot;<i>the compiler says &#39;overflow evaluating the requirement&#39;</i>&quot; -&gt; what compiler version are you using? Because your solution <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=39e327fe692793fb587aa6828e78feca\" rel=\"nofollow noreferrer\">works on the current stable</a>. And I&#39;d say that this is also <i>the</i> solution to your problem basically. Please also provide the full error message if using a newer compiler (<code>rustup update</code>) doesn&#39;t solve your problem."}, {"owner": {"reputation": 701, "user_id": 10005095, "user_type": "registered", "profile_image": "https://graph.facebook.com/144174703037393/picture?type=large", "display_name": "Evian", "link": "https://stackoverflow.com/users/10005095/evian"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1572855573, "post_id": 58688434, "comment_id": 103676851, "body": "@LukasKalbertodt My rust version is 1.38.0, and <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d935729cdf82ad3e0822a4b72e04fc0e\" rel=\"nofollow noreferrer\">rust playground</a>&#39;s wrong output is the same as mine. Maybe the problem is how I call the function."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1572856771, "creation_date": 1572856771, "answer_id": 58689727, "question_id": 58688434, "link": "https://stackoverflow.com/questions/58688434/rust-how-to-call-and-pass-a-closure-in-an-iteration/58689727#58689727", "title": "Rust -- How to call and pass a closure in an iteration?", "body": "<p>Remove the <code>&amp;mut</code> when recursing:</p>\n\n<pre><code>fn foo&lt;F&gt;(callback: &amp;mut F)\n    where F: FnMut(MyStruct)\n{\n    let my_struct = MyStruct;\n    callback(my_struct);\n    for _ in 0..3 { // some conditions\n        foo(callback);      // &lt;- HERE\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=55e55336b624613c9cea675179d627fa\" rel=\"nofollow noreferrer\">Playground</a> (note: this overflows the stack when run due to the infinite recursion of <code>foo</code>. I assume that your real code uses a loop condition that causes the recursion to terminate\u2026)</p>\n"}], "owner": {"reputation": 701, "user_id": 10005095, "user_type": "registered", "profile_image": "https://graph.facebook.com/144174703037393/picture?type=large", "display_name": "Evian", "link": "https://stackoverflow.com/users/10005095/evian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 58689727, "answer_count": 1, "score": 0, "last_activity_date": 1572856771, "creation_date": 1572850105, "question_id": 58688434, "link": "https://stackoverflow.com/questions/58688434/rust-how-to-call-and-pass-a-closure-in-an-iteration", "title": "Rust -- How to call and pass a closure in an iteration?", "body": "<p>I have an iteration:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo&lt;F&gt;(mut callback: F)\n    where F: FnMut(MyStruct)\n{\n    // produce an instance of MyStruct\n    callback(my_struct);\n    for ... { // some conditions\n        foo(callback)\n    }\n}\n</code></pre>\n\n<p>And the closure may be:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let my_vec = vec![];\nlet mut callback = |my_struct: MyStruct| {my_vec.push(my_struct);};\nfoo(callback);\n</code></pre>\n\n<p>In my <code>for</code> loop, the ownership of <code>callback</code> is moved, so the code above doesn't work. I try to replace the parameter to <code>mut callback: &amp;mut F</code>, and use <code>foo(&amp;mut callback)</code>, which still doesn't work, and the compiler says \"overflow evaluating the requirement\".</p>\n"}, {"tags": ["rust", "lifetime"], "owner": {"reputation": 127, "user_id": 6594209, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-gaPy4wJyvRQ/AAAAAAAAAAI/AAAAAAAAAXc/StWEaj0UKb0/photo.jpg?sz=128", "display_name": "Janosch Gr&#228;f", "link": "https://stackoverflow.com/users/6594209/janosch-gr%c3%a4f"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1572832926, "creation_date": 1572832926, "question_id": 58686341, "link": "https://stackoverflow.com/questions/58686341/how-to-defer-lifetime-checking-to-runtime", "title": "How to defer lifetime checking to runtime", "body": "<p>I'm trying to pass a non-static closure into tokio. Obviously this doesn't work. Is there a way to make sure the lifetimes are appropriate at runtime? Here's what I tried:</p>\n\n<h1>Attempt with <code>Arc</code></h1>\n\n<p>In order to not pass the closure directly into tokio, I put it into the struct that manages our timers:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Delays&lt;'l, K: Eq + Hash + Debug + Copy + Send&gt; = HashMap&lt;K, Box&lt;dyn FnOnce() + 'l + Send&gt;&gt;;\n\npub struct Timers&lt;'l, K: Eq + Hash + Debug + Clone + Send&gt; {\n    delays: Arc&lt;Mutex&lt;Delays&lt;'l, K&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>The <code>impl</code> for that struct lets us easily add and remove timers. My plan was to somehow pass a static closure into tokio, by only moving a <code>Weak</code> reference\nto the mutexed hashmap:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// remember handler function\n        delays.insert(key.clone(), Box::new(func));\n\n        // create a weak reference to the delay map to pass into the closure\n        let weak_handlers = Arc::downgrade(&amp;self.delays);\n\n        // task that runs after a delay\n        let task = Delay::new(Instant::now() + delay)\n            .map_err(|e| warn!(\"Tokio timer error: {}\", e)) // Map the error type to ()\n            .and_then(move |_| {\n                // get the handler from the table, of which we have only a weak ref.\n                let handler = Weak::upgrade(&amp;weak_handlers)\n                    .ok_or(())? // If the Arc dropped, return an error and thus aborting the future\n                    .lock()\n                    .remove(&amp;key)\n                    .ok_or(())?; // If the handler isn't there anymore, we can abort aswell.\n\n                // call the handler\n                handler();\n\n                Ok(())\n            });\n</code></pre>\n\n<p>So with the <code>Weak</code> we make sure that we abort, if the hash table was dropped.</p>\n\n<p>It's important to know that the lifetime <code>'l</code> is the same as that of the <code>Timers</code> struct, but how can I tell the compiler? Also, I think the real problem is that <code>Weak&lt;T&gt;: 'static</code> is not satisfied.</p>\n\n<h1>Writing it myself using <code>unsafe</code></h1>\n\n<p>I tried building something similar to <a href=\"https://github.com/dureuill/sc\" rel=\"nofollow noreferrer\">Sc</a> to achieve this. First, is Sc going to work here? I read the code and understand it. I can't see any obvious problems - though it was kind of hard to come to the conclusion that the <code>map</code> method is actually safe, because the reference will definitely be dropped at the end of the <code>map</code> and not stored somewhere.</p>\n\n<p>So I tried to adapt Sc for my needs. This is only a rough outline and I know there are some issues with this, but I believe something like this should be possible:</p>\n\n<ul>\n<li>Have a <code>struct Doa&lt;T&gt;</code> that will own <code>T</code></li>\n<li><code>Doa::ref(&amp;self) -&gt; DoaRef&lt;T&gt;</code> will produce a opaque object that internally contain a <code>*const u8</code> to the owned object.</li>\n<li><ul>\n<li><code>DoaRef</code> doesn't contain references with non-static lifetimes and thus can be passed to tokio.</li>\n</ul></li>\n<li>Have <code>impl&lt;T&gt; Drop for Doa&lt;T&gt;</code> that sets that <code>*const u8</code> to <code>null</code></li>\n<li>So the <code>DoaRef</code> can now check if the value still exists and get a reference to it.</li>\n</ul>\n\n<p>I also tried to make sure that the lifetime of <code>&amp;self</code> in <code>ref</code> must be longer than the lifetimes of references in <code>T</code>, to ensure this works only if <code>Doa</code> really lives longer than the object the pointer points to.</p>\n\n<pre><code>struct Doa&lt;'t, T: 'l&gt; { ... }\npub fn ref(&amp;'s self) -&gt; DoaRef&lt;T&gt; where 't: 'a\n</code></pre>\n\n<p>But then <code>T</code> is lifetime-contrained and since <code>DoaRef</code> is parameterized over it <code>DoaRef: 'static</code> doesn't hold anymore.</p>\n\n<p>Or is there some crate, or maybe even something in <code>std</code> that can do this?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": false, "score": 0, "last_activity_date": 1572832073, "creation_date": 1572832073, "answer_id": 58686269, "question_id": 58686238, "link": "https://stackoverflow.com/questions/58686238/when-is-a-temporary-value-created/58686269#58686269", "title": "When is a temporary value created?", "body": "<p><code>Dummy {}</code> is constant, so it can have static lifetime. If you tried to return a mutable reference to it, or if the result weren\u2019t constant, it wouldn\u2019t work.</p>\n\n<pre><code>struct Dummy {\n    foo: u32,\n}\n\n// nope\nfn dummy_ref&lt;'a&gt;(foo: u32) -&gt; &amp;'a Dummy {\n    &amp;Dummy { foo }\n}\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 11455422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da5327bb3e49a138f36f7e957990914a?s=128&d=identicon&r=PG&f=1", "display_name": "fluxus", "link": "https://stackoverflow.com/users/11455422/fluxus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "closed_date": 1572943683, "answer_count": 1, "score": 0, "last_activity_date": 1572832073, "creation_date": 1572831718, "question_id": 58686238, "link": "https://stackoverflow.com/questions/58686238/when-is-a-temporary-value-created", "closed_reason": "Duplicate", "title": "When is a temporary value created?", "body": "<p>this question is probably trivial but I haven't found any good documentation about temporary values in rust yet:</p>\n\n<p>Why is no temporary value created when directly returning a reference to a newly constructed struct in contrast to creating the struct with new()? AFAIK both functions do the same by creating and returning a reference to a newly created struct instance.</p>\n\n<pre><code>struct Dummy {}\n\nimpl Dummy {\n    fn new() -&gt; Self {\n        Dummy {}\n    }\n}\n\n// why does this work and why won't there be a temporary value?\nfn dummy_ref&lt;'a&gt;() -&gt; &amp;'a Dummy {\n    &amp;Dummy {}\n}\n\n// why will there be a temp val in this case?\nfn dummy_ref_with_new&lt;'a&gt;() -&gt; &amp;'a Dummy {\n    &amp;Dummy::new() // &lt;- this fails\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572831881, "post_id": 58685861, "comment_id": 103671363, "body": "&quot;Is there a way to clone a &amp;[u32] to [u32]?&quot; a slice can&#39;t be build like this you need a reference somewhere"}, {"owner": {"reputation": 1665, "user_id": 1792831, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gPL8D.png?s=128&g=1", "display_name": "xx1xx", "link": "https://stackoverflow.com/users/1792831/xx1xx"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572842551, "post_id": 58685861, "comment_id": 103673114, "body": "@Stargateur <b>&amp;[u32]</b> = a reference to a <i>u32</i> array? Surely there must be a way to create a new u32 array that has the values (not a reference) to the elements?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1572845294, "post_id": 58685861, "comment_id": 103673664, "body": "as I said <code>[u32]</code> is a slice NOT an array. An array is <code>[u32; 42]</code>. Be sure to use exact term. You can construct an array, but not a slice (without the reference), you can construct a reference to a slice but not a slice alone. I give it to you slice and slice can refer to <code>&amp;[u32]</code> or <code>[u32]</code> but you can construct a <code>&amp;[u32]</code> but not a <code>[u32]</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572872421, "post_id": 58685861, "comment_id": 103684737, "body": "You may <a href=\"https://stackoverflow.com/questions/47980023/how-to-convert-from-u8-to-vecu8\">construct a <code>Vec&lt;u32&gt;</code> using the <code>to_vec</code> method on slices</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1665, "user_id": 1792831, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gPL8D.png?s=128&g=1", "display_name": "xx1xx", "link": "https://stackoverflow.com/users/1792831/xx1xx"}, "edited": false, "score": 0, "creation_date": 1572842276, "post_id": 58685921, "comment_id": 103673083, "body": "Thanks! <b>copied</b> seems like a good choice:  <i>This is useful when you have an iterator over &amp;T, but you need an iterator over T.</i>"}, {"owner": {"reputation": 1665, "user_id": 1792831, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gPL8D.png?s=128&g=1", "display_name": "xx1xx", "link": "https://stackoverflow.com/users/1792831/xx1xx"}, "edited": false, "score": 0, "creation_date": 1572842854, "post_id": 58685921, "comment_id": 103673187, "body": "why do we still have to use the reference symbol in <i>filter</i> <code>.filter(|&amp;x| x != 0)</code> ?"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 1665, "user_id": 1792831, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gPL8D.png?s=128&g=1", "display_name": "xx1xx", "link": "https://stackoverflow.com/users/1792831/xx1xx"}, "edited": false, "score": 1, "creation_date": 1572847036, "post_id": 58685921, "comment_id": 103674053, "body": "@xx1xx: Because <code>filter</code> can\u2019t take ownership of the values in the iterator it\u2019s testing. It still has to pass them through."}], "tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": true, "score": 1, "last_activity_date": 1572827857, "creation_date": 1572827857, "answer_id": 58685921, "question_id": 58685861, "link": "https://stackoverflow.com/questions/58685861/can-i-filter-out-specific-a-number-from-a-u32-and-convert-it-to-a-vecu32/58685921#58685921", "title": "Can I filter out specific a number from a &amp;[u32] and convert it to a Vec&lt;u32&gt;?", "body": "<p>There\u2019s <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.copied\" rel=\"nofollow noreferrer\"><code>Iterator.copied()</code></a>, at least?</p>\n\n<pre><code>let factors4: Vec&lt;u32&gt; = factors\n    .iter()\n    .copied()\n    .filter(|&amp;x| x != 0)\n    .collect();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1572908971, "last_edit_date": 1572908971, "creation_date": 1572872398, "answer_id": 58693961, "question_id": 58685861, "link": "https://stackoverflow.com/questions/58685861/can-i-filter-out-specific-a-number-from-a-u32-and-convert-it-to-a-vecu32/58693961#58693961", "title": "Can I filter out specific a number from a &amp;[u32] and convert it to a Vec&lt;u32&gt;?", "body": "<p>You may use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter_map\" rel=\"nofollow noreferrer\"><code>filter_map</code></a> to <code>filter</code> and <code>map</code> in a single step.</p>\n\n<pre><code>fn make_vec_of_nonzero(factors: &amp;[u32]) -&gt; Vec&lt;u32&gt; {\n    factors\n        .iter()\n        .filter_map(|&amp;x| if x == 0 { None } else { Some(x) })\n        .collect()\n}\n</code></pre>\n"}], "owner": {"reputation": 1665, "user_id": 1792831, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gPL8D.png?s=128&g=1", "display_name": "xx1xx", "link": "https://stackoverflow.com/users/1792831/xx1xx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 199, "favorite_count": 0, "accepted_answer_id": 58685921, "answer_count": 2, "score": 1, "last_activity_date": 1593021370, "creation_date": 1572827211, "last_edit_date": 1593021370, "question_id": 58685861, "link": "https://stackoverflow.com/questions/58685861/can-i-filter-out-specific-a-number-from-a-u32-and-convert-it-to-a-vecu32", "title": "Can I filter out specific a number from a &amp;[u32] and convert it to a Vec&lt;u32&gt;?", "body": "<p>Given a <code>&amp;[u32]</code> I want to filter out the number <code>0</code>. This could be any number or any other rule or condition.</p>\n<p>Here are a few versions that work, but I feel like this could be done simpler:</p>\n<pre><code>fn test(factors: &amp;[u32]) {\n    let factors1 = factors\n        .iter()\n        .map(|&amp;x| x as u32)\n        .filter(|x| *x != 0)\n        .collect::&lt;Vec&lt;u32&gt;&gt;();\n\n    let factors1 = factors\n        .iter()\n        .map(|&amp;x| x as u32)\n        .filter(|&amp;x| x != 0)\n        .collect::&lt;Vec&lt;u32&gt;&gt;();\n\n    let factors2 = factors\n        .iter()\n        .filter(|x| **x != 0)\n        .collect::&lt;Vec&lt;&amp;u32&gt;&gt;();\n\n    let factors3 = factors\n        .iter()\n        .filter(|&amp;&amp;x| x != 0)\n        .collect::&lt;Vec&lt;&amp;u32&gt;&gt;();\n}\n</code></pre>\n<p>I was expecting something simpler like this (which doesn't work):</p>\n<pre><code>let factors4 = factors.iter().filter(|x| x != 0).collect();\n</code></pre>\n<p>Things that would be helpful are:</p>\n<ul>\n<li>Is it possible to clone or convert a <code>&amp;u32</code> to <code>u32</code>?</li>\n<li>Is there a way to clone a <code>&amp;[u32]</code> to <code>[u32]</code>?</li>\n</ul>\n"}, {"tags": ["rust", "iterator", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 9283875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04584a79391fa676da3ad61fe283349d?s=128&d=identicon&r=PG&f=1", "display_name": "nevenoomo", "link": "https://stackoverflow.com/users/9283875/nevenoomo"}, "edited": false, "score": 0, "creation_date": 1572876877, "post_id": 58685952, "comment_id": 103686973, "body": "Thank you for an elaborate and complete answer. I highly appreciate it. I have edited the question to eliminate mentioned bugs."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 1, "last_activity_date": 1572828247, "creation_date": 1572828247, "answer_id": 58685952, "question_id": 58685160, "link": "https://stackoverflow.com/questions/58685160/how-to-implement-an-iterator-over-chunks-of-an-array-in-a-struct/58685952#58685952", "title": "How to implement an iterator over chunks of an array in a struct?", "body": "<p>When you return a reference from a function, its lifetime needs to be tied to something else. Otherwise, the compiler wouldn't know how long the reference is valid (the exception to this is a <code>'static</code> lifetime, which lasts for the duration of the whole program).</p>\n\n<p>So we need an existing reference to the slices. One standard way to do this is to tie the reference to the iterator itself. For example,</p>\n\n<pre><code>struct Iter&lt;'a&gt; {\n    slice: &amp;'a [u8; 100],\n    num: usize,\n}\n</code></pre>\n\n<p>Then what you have works almost verbatim. (I've changed the names of the types and fields to be a little more informative).</p>\n\n<pre><code>impl&lt;'a&gt; Iterator for Iter&lt;'a&gt; {\n    type Item = &amp;'a [u8];\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.num &gt;= 100 {\n            return None;\n        }\n\n        let res = &amp;self.slice[10 * self.num..10 * (self.num + 1)];\n        self.num += 1;\n        Some(res)\n    }\n}\n</code></pre>\n\n<p>Now, you probably still have an actual <code>[u8; 100]</code> somewhere, not just a reference. If you still want to work with that, what you'll want is a separate struct that has a method to convert into <code>A</code>. For example</p>\n\n<pre><code>struct Data {\n    array: [u8; 100],\n}\n\nimpl Data {\n    fn iter&lt;'a&gt;(&amp;'a self) -&gt; Iter&lt;'a&gt; {\n        Iter {\n            slice: &amp;self.array,\n            num: 0,\n        }\n    }\n}\n</code></pre>\n\n<p>Thanks to lifetime elision, the lifetimes on <code>iter</code> can be left out:</p>\n\n<pre><code>impl Data {\n    fn iter(&amp;self) -&gt; Iter {\n        Iter {\n            slice: &amp;self.array,\n            num: 0,\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=39bf22aa566116ccac73b714a521dd5a\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>Just a few notes. There was one compiler error with <code>[0u8; 100]</code>. This may have been a typo for <code>[u8; 100]</code>, but just in case, here's why we can't do that. In the fields for a struct definition, only the types are specified. There aren't default values for the fields or anything like that. If you're trying to have a default for the struct, consider using the <a href=\"https://doc.rust-lang.org/stable/std/default/trait.Default.html\" rel=\"nofollow noreferrer\"><code>Default</code> trait</a>.</p>\n\n<p>Second, you're probably aware of this, but there's already <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.chunks\" rel=\"nofollow noreferrer\">an implementation</a> of a chunk iterator for slices. If <code>slice</code> is a slice (or can be deref coerced into a slice - vectors and arrays are prime examples), then <code>slice.chunks(n)</code> is an iterator over chunks of that slice with length <code>n</code>. I gave an example of this in the code linked above. Interestingly, that implementation uses a very similar idea: slice.chunks(n) returns a new struct with a lifetime parameter and implements <code>Iterator</code>. This is almost exactly the same as our <code>Data::iter</code>.</p>\n\n<p>Finally, your implementation of <code>next</code> has a bug in it that causes an out-of-bounds panic when run. See if you can spot it!</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1572880761, "creation_date": 1572880761, "answer_id": 58696309, "question_id": 58685160, "link": "https://stackoverflow.com/questions/58685160/how-to-implement-an-iterator-over-chunks-of-an-array-in-a-struct/58696309#58696309", "title": "How to implement an iterator over chunks of an array in a struct?", "body": "<p>I wouldn't implement my own. Instead, I'd reuse the existing <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.chunks\" rel=\"nofollow noreferrer\"><code>chunks</code></a> iterator and <a href=\"https://stackoverflow.com/q/30218886/155423\">implement <code>IntoIterator</code> for a reference to the type</a>:</p>\n\n<pre><code>struct A {\n    a: [u8; 100],\n    num: usize,\n}\n\nimpl&lt;'a&gt; IntoIterator for &amp;'a A {\n    type Item = &amp;'a [u8];\n    type IntoIter = std::slice::Chunks&lt;'a, u8&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.a.chunks(self.num)\n    }\n}\n</code></pre>\n\n<pre><code>fn example(a: A) {\n    for chunk in &amp;a {\n        println!(\"{}\", chunk.iter().sum::&lt;u8&gt;())\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 9283875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04584a79391fa676da3ad61fe283349d?s=128&d=identicon&r=PG&f=1", "display_name": "nevenoomo", "link": "https://stackoverflow.com/users/9283875/nevenoomo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 494, "favorite_count": 0, "accepted_answer_id": 58685952, "answer_count": 2, "score": 1, "last_activity_date": 1572880761, "creation_date": 1572819761, "last_edit_date": 1572876758, "question_id": 58685160, "link": "https://stackoverflow.com/questions/58685160/how-to-implement-an-iterator-over-chunks-of-an-array-in-a-struct", "title": "How to implement an iterator over chunks of an array in a struct?", "body": "<p>I want to implement an iterator for the struct with an array as one of its fields. The iterator should return a slice of that array, but this requires a lifetime parameter. Where should that parameter go?</p>\n\n<p>The Rust version is 1.37.0</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A {\n    a: [u8; 100],\n    num: usize,\n}\n\nimpl Iterator for A {\n    type Item = &amp;[u8]; // this requires a lifetime parameter, but there is none declared\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n         if self.num &gt;= 10 {\n             return None;\n         }\n\n         let res = &amp;self.a[10*self.num..10*(self.num+1)];\n         self.num += 1;\n         Some(res)\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "traits", "trait-objects"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1572808703, "post_id": 58683548, "comment_id": 103666829, "body": "<code>Box&lt;dyn Model&gt;</code> and <code>Box&lt;User&gt;</code> are unrelated types. In fact, the types have different sizes, so you cannot convert a collection of one into a collection of the other at zero cost."}], "answers": [{"comments": [{"owner": {"reputation": 1966, "user_id": 612758, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/97d4d4ce8c458300c845c85a4b5e1ae5?s=128&d=identicon&r=PG", "display_name": "maackle", "link": "https://stackoverflow.com/users/612758/maackle"}, "edited": false, "score": 0, "creation_date": 1588183669, "post_id": 58683859, "comment_id": 108805345, "body": "That <code>.map</code> line could also simply be: <code>.map(Box::&lt;dyn Model&gt;::from)</code>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1572810682, "last_edit_date": 1572810682, "creation_date": 1572809282, "answer_id": 58683859, "question_id": 58683548, "link": "https://stackoverflow.com/questions/58683548/how-to-coerce-a-vec-of-structs-to-a-vec-of-trait-objects/58683859#58683859", "title": "How to coerce a Vec of structs to a Vec of trait objects?", "body": "<p>The types <code>Box&lt;dyn Model&gt;</code> and <code>Box&lt;User&gt;</code> are not interchangeable. Collections containing one cannot be directly transformed into the other, even with unsafe code. These types are different and have different representations in memory. They even have different sizes:</p>\n\n<pre><code>println!(\"{}\", std::mem::size_of::&lt;Box&lt;User&gt;&gt;());      // 8\nprintln!(\"{}\", std::mem::size_of::&lt;Box&lt;dyn Model&gt;&gt;()); // 16\n</code></pre>\n\n<p>The only way to convert from <code>Vec&lt;Box&lt;User&gt;&gt;</code> to <code>Vec&lt;Box&lt;dyn Model&gt;&gt;</code> is on an item-by-item basis. Each item needs to be coerced like this:</p>\n\n<pre><code>let model: Box&lt;dyn Model&gt; = user;\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>let model = Box::&lt;dyn Model&gt;::from(user);\n</code></pre>\n\n<p>Resulting in this ugly thing:</p>\n\n<pre><code>tables.insert(\n    \"users\".to_string(),\n    users\n        .iter()\n        .map(|user| Box::&lt;dyn Model&gt;::from(user))\n        .collect()\n);\n</code></pre>\n\n<p>If you don't need the original vector after this, you avoid cloning by making it mutable and draining instead:</p>\n\n<pre><code>tables.insert(\n    \"users\".to_string(),\n    users\n        .drain(..)\n        .map(|user| Box::&lt;dyn Model&gt;::from(user))\n        .collect(),\n);\n</code></pre>\n"}], "owner": {"reputation": 73, "user_id": 1021391, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a3ce6b0f498a0056cf5699f2daaa8e9b?s=128&d=identicon&r=PG", "display_name": "birwin93", "link": "https://stackoverflow.com/users/1021391/birwin93"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1002, "favorite_count": 0, "accepted_answer_id": 58683859, "answer_count": 1, "score": 2, "last_activity_date": 1572863043, "creation_date": 1572807142, "last_edit_date": 1572863043, "question_id": 58683548, "link": "https://stackoverflow.com/questions/58683548/how-to-coerce-a-vec-of-structs-to-a-vec-of-trait-objects", "title": "How to coerce a Vec of structs to a Vec of trait objects?", "body": "<p>Trying to create a DB struct that is a <code>HashMap</code> of vectors. Each <code>Vec</code> contains <code>Box&lt;dyn Model&gt;</code>. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\ntrait Model {\n    fn id(&amp;self) -&gt; i32;\n}\n\nstruct User;\nstruct Message;\n\nimpl Model for User {\n    fn id(&amp;self) -&gt; i32 { 4 }\n}\n\nimpl Model for Message {\n    fn id(&amp;self) -&gt; i32 { 3 }\n}\n\nstruct DB {\n    users: Vec&lt;Box&lt;User&gt;&gt;,\n    messages: Vec&lt;Box&lt;Message&gt;&gt;,\n    tables: HashMap&lt;String, Vec&lt;Box&lt;dyn Model&gt;&gt;&gt;,\n}\n\nimpl DB {\n    fn new() -&gt; Self {\n        let users: Vec&lt;Box&lt;User&gt;&gt; = Vec::new();\n        let messages: Vec&lt;Box&lt;Message&gt;&gt; = Vec::new();\n        let mut tables: HashMap&lt;String, Vec&lt;Box&lt;dyn Model&gt;&gt;&gt; = HashMap::new();\n        tables.insert(\"users\".to_string(), users);\n        tables.insert(\"messages\".to_string(), messages);\n        Self {\n            users,\n            messages,\n            tables,\n        }\n    }\n}\n\n</code></pre>\n\n<p>The compiler produces the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling playground v0.0.1 (/playground)\nerror[E0308]: mismatched types\n  --&gt; src/lib.rs:37:44\n   |\n37 |         tables.insert(\"users\".to_string(), users);\n   |                                            ^^^^^ expected trait Model, found struct `User`\n   |\n   = note: expected type `std::vec::Vec&lt;std::boxed::Box&lt;dyn Model&gt;&gt;`\n              found type `std::vec::Vec&lt;std::boxed::Box&lt;User&gt;&gt;`\n\nerror[E0308]: mismatched types\n  --&gt; src/lib.rs:38:47\n   |\n38 |         tables.insert(\"messages\".to_string(), messages);\n   |                                               ^^^^^^^^ expected trait Model, found struct `Message`\n   |\n   = note: expected type `std::vec::Vec&lt;std::boxed::Box&lt;dyn Model&gt;&gt;`\n              found type `std::vec::Vec&lt;std::boxed::Box&lt;Message&gt;&gt;`\n</code></pre>\n\n<p>Why can't the compiler infer that <code>User</code> and <code>Message</code> implement <code>Model</code>?</p>\n"}, {"tags": ["reference", "rust", "tree"], "answers": [{"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1572809370, "post_id": 58683565, "comment_id": 103667007, "body": "There are other solutions, like using arenas to store the nodes and use indexes or ids as &quot;pointers&quot; (look for example for id-arena)."}, {"owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "edited": false, "score": 0, "creation_date": 1572811228, "post_id": 58683565, "comment_id": 103667454, "body": "So every time I want to use it, I should pass the full rc&lt;refcell&lt;..&gt;&gt; to the function and then use <code>borrow_mut()</code> to extract and access its elements?"}, {"owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "edited": false, "score": 1, "creation_date": 1572815885, "post_id": 58683565, "comment_id": 103668643, "body": "It depends on what you want to do. Normally a node is represented as <code>let node: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;</code>. And when you pass the reference to the function, you probably need to clone it so that the current reference is not moved. i.e. <code>somefun(node.clone())</code>. And to access its elements, use <code>borrow</code> (immutable) or <code>borrow_mut</code> (mutable)."}, {"owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "edited": false, "score": 0, "creation_date": 1572828264, "post_id": 58683565, "comment_id": 103670758, "body": "@Psidom I got it working after some grinding! Thank you. Just one more thing, why do you like to use option on the &lt;Rc&lt;RefCell? In your use case it can be passed as None? Because I did not need it yet."}, {"owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "edited": false, "score": 0, "creation_date": 1572838197, "post_id": 58683565, "comment_id": 103672448, "body": "Use <code>Option</code> here b/c the parent can be None, and btw <code>None</code> by itself is of type <code>Option</code> so if a value can be <code>None</code>, then its type must be <code>Option</code>."}], "tags": [], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "is_accepted": true, "score": 1, "last_activity_date": 1572808476, "last_edit_date": 1572808476, "creation_date": 1572807246, "answer_id": 58683565, "question_id": 58683326, "link": "https://stackoverflow.com/questions/58683326/how-to-have-multiple-references-for-a-single-node-in-a-tree-structure-using-rust/58683565#58683565", "title": "How to have multiple references for a single node in a tree structure using Rust", "body": "<p>I've been meddling with trees in Rust for quite a bit recently. To work with trees in rust, you will need <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code> (A single-threaded reference-counting pointer)</a> so that you can have multiple ownership. And you'll also need <code>RefCell</code> to enable interior mutability since multiple mutable references are not allowed by the compiler. With <code>Rc</code> and <code>RefCell</code>, you can define your <em>TreeNode</em> as following:</p>\n\n<pre><code>use std::rc::Rc;\nuse std::cell::RefCell;\n\npub struct TreeNode {\n    pub children: Vec&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n    pub parent: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n    pub value: f32,\n}\n</code></pre>\n\n<p>And here is one way to create two nodes that references each other:</p>\n\n<pre><code>impl TreeNode {\n  #[inline]\n  pub fn new(value: f32) -&gt; Self {\n    TreeNode {\n      value,\n      children: vec![],\n      parent: None\n    }\n  }\n}\n\nlet mut root_nd = Rc::new(RefCell::new(TreeNode::new(5.0)));\nlet mut child_nd = Rc::new(RefCell::new(TreeNode::new(2.0)));\n\nchild_nd.borrow_mut().parent = Some(root_nd.clone());  // use Rc::clone to create a new reference to root_nd\nroot_nd.borrow_mut().children.push(child_nd.clone());\n</code></pre>\n\n<p>Since we use <code>Rc::clone</code> to create a new reference to the node, <code>root_nd</code> and <code>child_nd</code> are not consumed and can still be accessed in later program.</p>\n\n<p>More examples on Trees in Rust:</p>\n\n<ul>\n<li><p><a href=\"https://github.com/leopsidom/leetcode-rust/blob/master/95.unique-binary-search-trees-ii.rs\" rel=\"nofollow noreferrer\">leetcode 95 Unique Binary Search\nTrees</a></p></li>\n<li><p><a href=\"https://github.com/leopsidom/leetcode-rust/blob/master/94.binary-tree-inorder-traversal.rs\" rel=\"nofollow noreferrer\">leetcode 94 Binary Tree Inorder\nTraversal</a></p></li>\n<li><p><a href=\"https://github.com/leopsidom/leetcode-rust/blob/master/100.same-tree.rs\" rel=\"nofollow noreferrer\">leetcode 100 Is Same\nTree</a></p></li>\n</ul>\n"}], "owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 381, "favorite_count": 0, "accepted_answer_id": 58683565, "answer_count": 1, "score": 0, "last_activity_date": 1572808476, "creation_date": 1572805630, "question_id": 58683326, "link": "https://stackoverflow.com/questions/58683326/how-to-have-multiple-references-for-a-single-node-in-a-tree-structure-using-rust", "title": "How to have multiple references for a single node in a tree structure using Rust", "body": "<p>Trying to create a tree in rust with the following struct:</p>\n\n<pre><code>pub struct Node{\n    pub children: Vec&lt;Box&lt;Node&gt;&gt;,\n    pub parent: Option&lt;Box&lt;Node&gt;&gt;,\n    pub value: f32,\n    //.....\n}\n</code></pre>\n\n<p>To build a new node the following function is used:</p>\n\n<pre><code>pub fn build_node(parent: Option&lt;Box&lt;Node&gt;&gt;)-&gt; Node{\n    Node{\n        children: vec![],\n        parent,\n        value: 0.0,\n\n    }\n}\n</code></pre>\n\n<p>When trying to add nodes, for example with:</p>\n\n<pre><code>let mut root_nd = tree::build_node(None, 5, state);\nlet mut next_nd = tree::build_node(Some(Box::new(root_nd)), 2);\nroot_nd.children.push(Box::new(next_nd));\n</code></pre>\n\n<p>There will be errors, because I am borrowing for example <code>root_nd</code> and then trying to add <code>next_nd</code> to the <code>root.children</code> list, and even if there wasnt this error I would still need to have a reference for <code>next_nd</code> after adding it to the children of <code>root_nd</code>. I know that in rust it is not possible to have several mutable references simultaneously for the same element. So the question is how is it possible to make a tree-like data structure, with bi-directional references in rust? In my head this is a conflict since rust does not want multiple references but I need a node in the middle of the tree to be referenced by both his parent node and his children nodes.</p>\n"}, {"tags": ["mongodb", "rust", "mongodb-atlas"], "comments": [{"owner": {"reputation": 2346, "user_id": 993328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3012905df3539f948994f218db07423?s=128&d=identicon&r=PG", "display_name": "GaurangDhorda", "link": "https://stackoverflow.com/users/993328/gaurangdhorda"}, "edited": false, "score": 0, "creation_date": 1572805367, "post_id": 58682911, "comment_id": 103665930, "body": "Copy exact Mongodb Atlas connection string from Atlas connect with... And replace user name and password with. And white list all IP address in Atlas security tab too."}], "answers": [{"tags": [], "owner": {"reputation": 21, "user_id": 12480084, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-IsCcON_EP6k/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdWNwhwlprCe8-KODn5wa8LREjk2g/photo.jpg?sz=128", "display_name": "Youngchan Lee", "link": "https://stackoverflow.com/users/12480084/youngchan-lee"}, "is_accepted": false, "score": 2, "last_activity_date": 1575468410, "creation_date": 1575468410, "answer_id": 59177897, "question_id": 58682911, "link": "https://stackoverflow.com/questions/58682911/unable-to-connect-to-mongodb-atlas-dbs-in-rust/59177897#59177897", "title": "Unable to connect to MongoDB Atlas DBs in rust", "body": "<p>I ran into a similar issue before and fixed it by using the <code>with_unauthenticated_ssl</code> option.\n(It seems like MongoDB Atlas requires an SSL connection.)</p>\n\n<p>First, edit <code>Cargo.toml</code> to enable <code>\"ssl\"</code> feature of <code>mongodb</code></p>\n\n<pre><code>mongodb = { version = \"0.4.0\", features = [\"ssl\"] }\n</code></pre>\n\n<p>and then use the <code>with_unauthenticated_ssl</code> option to create a client.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use mongodb::{Bson, bson, doc};\nuse mongodb::{Client, ClientOptions, ThreadedClient};\nuse mongodb::db::ThreadedDatabase;\n\nfn main() {\n    let mongodb_uri = String::from(\"mongodb://cluster0-kbbbhky.mongodb.net:2017, \\\n        cluster0-shard-00-00-kbbbhky.mongodb.net:27017, \\\n        cluster0-shard-00-00-kbbbhky.mongodb.net:27017/\"\n    );\n    // Define options\n    let opts = ClientOptions::with_unauthenticated_ssl(None, false);\n    // Initialize with options\n    let client = Client::with_uri_and_options(&amp;mongodb_uri, opts)    \n        .expect(\"Failed to initialize client.\");\n    client.db(\"admin\").auth(\"username\",\"password\").unwrap();\n    let coll = client.db(\"gigs_core\").collection(\"events\");\n    let cursor = coll.find(None, None).unwrap();\n    for result in cursor{\n        if let Ok(item) = result {\n            if let Some(&amp;Bson::String(ref name)) = item.get(\"name\"){\n                println!(\"name : {}\",name);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Also, your <code>mongodb_uri</code> doesn't look right. You should check that too.</p>\n\n<p>Reference: <a href=\"https://medium.com/@shnarazk/connecting-mongodb-atlas-from-rust-programs-65e4cbcbd964\" rel=\"nofollow noreferrer\">https://medium.com/@shnarazk/connecting-mongodb-atlas-from-rust-programs-65e4cbcbd964</a></p>\n\n<p>(The reference says you need to enable <code>\"ssh\"</code> feature, but it's a typo. <code>mongodb</code> crate doesn't have such a feature.)</p>\n"}], "owner": {"reputation": 835, "user_id": 1345402, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e68c0b4e50e5e2792849a92ae5dab2c?s=128&d=identicon&r=PG", "display_name": "punkdata", "link": "https://stackoverflow.com/users/1345402/punkdata"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 342, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1575468410, "creation_date": 1572803049, "last_edit_date": 1572811051, "question_id": 58682911, "link": "https://stackoverflow.com/questions/58682911/unable-to-connect-to-mongodb-atlas-dbs-in-rust", "title": "Unable to connect to MongoDB Atlas DBs in rust", "body": "<p>I'm a n00b to <a href=\"https://doc.rust-lang.org/\" rel=\"nofollow noreferrer\">rust</a> and I'm trying to connect to a database on a MongoDB Atlas MongoDB version 4.0 cluster using <a href=\"https://docs.rs/mongodb/0.4.0/mongodb/index.html\" rel=\"nofollow noreferrer\">the mongodb rust crate v0.4.0</a> with no luck. </p>\n\n<p>In Atlas I've given firewall access and can connect from my home IP so it's def not a permission/access issue. I searched for the error but didn't find much help out there on this topic. Looks like the mongodb rust driver is still young and not fully baked.</p>\n\n<p>The err I get is:</p>\n\n<p><code>thread 'main' panicked at 'called Result::unwrap() on an Err value: OperationError(\"No servers available for the provided ReadPreference.\")'</code></p>\n\n<p>Backtrace details below:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>Running `target/debug/gigs-core`\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: OperationError(\"No servers available for the provided ReadPreference.\")', src/libcore/result.rs:1165:5\nstack backtrace:\n   0: backtrace::backtrace::libunwind::trace\n             at /Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\n   1: backtrace::backtrace::trace_unsynchronized\n             at /Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\n   2: std::sys_common::backtrace::_print_fmt\n             at src/libstd/sys_common/backtrace.rs:77\n   3: &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt\n             at src/libstd/sys_common/backtrace.rs:61\n   4: core::fmt::write\n             at src/libcore/fmt/mod.rs:1028\n   5: std::io::Write::write_fmt\n             at src/libstd/io/mod.rs:1412\n   6: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:65\n   7: std::sys_common::backtrace::print\n             at src/libstd/sys_common/backtrace.rs:50\n   8: std::panicking::default_hook::{{closure}}\n             at src/libstd/panicking.rs:188\n   9: std::panicking::default_hook\n             at src/libstd/panicking.rs:205\n  10: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:464\n  11: std::panicking::continue_panic_fmt\n             at src/libstd/panicking.rs:373\n  12: rust_begin_unwind\n             at src/libstd/panicking.rs:302\n  13: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:139\n  14: core::result::unwrap_failed\n             at src/libcore/result.rs:1165\n  15: core::result::Result&lt;T,E&gt;::unwrap\n             at /rustc/91fd6283e658e2c7aab2d3f5206fc1891f486af2/src/libcore/result.rs:933\n  16: gigs_core::main\n             at src/main.rs:12\n  17: std::rt::lang_start::{{closure}}\n             at /rustc/91fd6283e658e2c7aab2d3f5206fc1891f486af2/src/libstd/rt.rs:61\n  18: std::rt::lang_start_internal::{{closure}}\n             at src/libstd/rt.rs:48\n  19: std::panicking::try::do_call\n             at src/libstd/panicking.rs:287\n  20: __rust_maybe_catch_panic\n             at src/libpanic_unwind/lib.rs:83\n  21: std::panicking::try\n             at src/libstd/panicking.rs:265\n  22: std::panic::catch_unwind\n             at src/libstd/panic.rs:396\n  23: std::rt::lang_start_internal\n             at src/libstd/rt.rs:47\n  24: std::rt::lang_start\n             at /rustc/91fd6283e658e2c7aab2d3f5206fc1891f486af2/src/libstd/rt.rs:61\n  25: gigs_core::main\n</code></pre>\n\n<p>Here is the code I'm running with the cred obviously extracted:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use mongodb::{Bson, bson, doc};\nuse mongodb::{Client, ThreadedClient};\nuse mongodb::db::ThreadedDatabase;\n\nfn main() {\n    let mongodb_uri = String::from(\"mongodb://cluster0-kbbbhky.mongodb.net:2017, \\\n        cluster0-shard-00-00-kbbbhky.mongodb.net:27017, \\\n        cluster0-shard-00-00-kbbbhky.mongodb.net:27017/\"\n    );\n    let client = Client::with_uri(&amp;mongodb_uri)    \n        .expect(\"Failed to initialize client.\");\n    client.db(\"admin\").auth(\"username\",\"password\").unwrap();\n    let coll = client.db(\"gigs_core\").collection(\"events\");\n    let cursor = coll.find(None, None).unwrap();\n    for result in cursor{\n        if let Ok(item) = result {\n            if let Some(&amp;Bson::String(ref name)) = item.get(\"name\"){\n                println!(\"name : {}\",name);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Anyone out there have any advise on connecting to a MongoDB Atlas DB using rust?</p>\n"}, {"tags": ["generics", "struct", "rust", "traits", "associated-types"], "answers": [{"comments": [{"owner": {"reputation": 897, "user_id": 4528728, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/48b7aeab16c3e50657c88ac3542a502b?s=128&d=identicon&r=PG&f=1", "display_name": "Slim Shady", "link": "https://stackoverflow.com/users/4528728/slim-shady"}, "edited": false, "score": 0, "creation_date": 1572819311, "post_id": 58681952, "comment_id": 103669363, "body": "But then if i need to call <code>a_or_b.a()</code> i need to write repetitive match arms, which i guess i can use a macro ?"}], "tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 2, "last_activity_date": 1572796987, "creation_date": 1572796987, "answer_id": 58681952, "question_id": 58681475, "link": "https://stackoverflow.com/questions/58681475/returning-a-trait-with-an-associated-type/58681952#58681952", "title": "Returning a trait with an associated type", "body": "<p>I believe there's a misconception here; <code>dyn AB&lt;Prop = A&gt;</code> and <code>dyn AB&lt;Prop = B&gt;</code> are different types, the first is a dynamic <code>AB&lt;Prop = A&gt;</code> and the second is a dynamic <code>AB&lt;Prop = B&gt;</code>. What this means is that you cannot leave generic types and associated types up to the dynamic aspect. </p>\n\n<p>This is different than when the associated type is not mentioned:</p>\n\n<pre><code>fn foo&lt;T: AB&gt;() {\n    let my_fn: fn(&amp;T, T::Prop) = T::b;\n}\n</code></pre>\n\n<p>Where we access the <code>T::Prop</code> instead of assigning it. </p>\n\n<hr>\n\n<p>All types must be concrete, and <code>dyn AB&lt;Prop = A&gt;</code> on one branch, and <code>dyn AB&lt;Prop = B&gt;</code> on another branch is not concrete, but could be should you package it up under an enum:</p>\n\n<pre><code>enum AOrB {\n    A(Box&lt;dyn AB&lt;Prop = A&gt;&gt;),\n    B(Box&lt;dyn AB&lt;Prop = B&gt;&gt;),\n}\n</code></pre>\n"}], "owner": {"reputation": 897, "user_id": 4528728, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/48b7aeab16c3e50657c88ac3542a502b?s=128&d=identicon&r=PG&f=1", "display_name": "Slim Shady", "link": "https://stackoverflow.com/users/4528728/slim-shady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 294, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1572796987, "creation_date": 1572793783, "question_id": 58681475, "link": "https://stackoverflow.com/questions/58681475/returning-a-trait-with-an-associated-type", "title": "Returning a trait with an associated type", "body": "<pre><code>struct A;\nstruct PropA;\n\nstruct B;\nstruct PropB;\n\ntrait AB{\n    type prop;\n    fn a(&amp;self) -&gt; ();\n    fn b(&amp;self, p: Self::prop) -&gt; ();\n}\n\nimpl AB for A{\n    type prop = PropA;\n    fn a(&amp;self)-&gt;(){}\n    fn b(&amp;self, p: Self::prop) -&gt; (){}\n}\nimpl AB for B{\n    type prop = PropB;\n    fn a(&amp;self)-&gt;(){}\n    fn b(&amp;self, p: Self::prop) -&gt; (){}\n}\n\nfn get_a_or_b(s: &amp;str) -&gt; Option&lt;Box&lt;dyn AB&lt;prop=_&gt;&gt;&gt;{\n    match s{\n        \"a\" =&gt; Some(Box::new(A)),\n        \"b\" =&gt; Some(Box::new(B)),\n        _=&gt; None\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8bc7292a013a11bca64104ae54180f67\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>I am returning two different structs <code>A</code>&amp;<code>B</code> based on a string input. </p>\n\n<p>I get <code>the type placeholder '_' is not allowed within types on item signatures</code> when specifying associated type as placeholder.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1572794753, "post_id": 58681418, "comment_id": 103662821, "body": "Greetings. I voted to close your question as a duplicate as a <i>very</i> similar question exists and highlights clearly the compiler&#39;s dereference algorithm. Rust isn&#39;t like C, in that the compiler will actively assist you by dereferencing as many times as needed."}, {"owner": {"reputation": 41, "user_id": 12316135, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LeX0HDZqH4g/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc_kuNzCJgF62n2kHH1S0ybMs7MVQ/photo.jpg?sz=128", "display_name": "Axel Schafers", "link": "https://stackoverflow.com/users/12316135/axel-schafers"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1572795069, "post_id": 58681418, "comment_id": 103662938, "body": "Thx Jonathon Reinhart I have my answer."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1572795404, "post_id": 58681418, "comment_id": 103663038, "body": "(I forgot the link to the question: <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">What are rust&#39;s exact auto-dereferencing rules?</a>)"}], "owner": {"reputation": 41, "user_id": 12316135, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LeX0HDZqH4g/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc_kuNzCJgF62n2kHH1S0ybMs7MVQ/photo.jpg?sz=128", "display_name": "Axel Schafers", "link": "https://stackoverflow.com/users/12316135/axel-schafers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 59, "favorite_count": 0, "closed_date": 1572796095, "answer_count": 0, "score": 3, "last_activity_date": 1572793570, "creation_date": 1572793366, "last_edit_date": 1572793570, "question_id": 58681418, "link": "https://stackoverflow.com/questions/58681418/rust-crazy-pointer-ref", "closed_reason": "Duplicate", "title": "Rust crazy pointer ref", "body": "<p>I think ref pointer is strange in rust and if some one less newest than me can explain how it's deeply working.</p>\n\n<pre><code>fn functionc(var: &amp;i32, opinion: &amp;str) {\n    // {:p} print the address\n    println!(\"Ma value: address - {:p}  &amp;   value - {:?} - {}\", var, var, opinion);\n}\n\nfn main() {\n    let n = 55;\n    let i = 33;\n    let i2 = &amp;i;\n    let i3 = &amp;i2;\n    let i4 = &amp;i3;\n    let i5 = &amp;i4;\n\n    functionc(&amp;n, \"normal\");\n    functionc(&amp;i, \"normal\");\n\n    functionc(i2, \"normal\");\n\n    functionc(*i3, \"normal\"); // Good way\n    functionc(&amp;i3, \"strange\"); // Hum shouldn't work\n\n    functionc(**i4, \"normal\");\n    functionc(***i5, \"normal\");\n\n    // functionc(****i5); Generate error: It's normal\n\n\n    functionc(&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;i3, \"strange\"); // Hum OK why not ;)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1c9ff70edd88186f6e43fba957403a5f\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1c9ff70edd88186f6e43fba957403a5f</a></p>\n\n<p>I expected error on <code>functionc(&amp;i3, \"strange\");</code></p>\n\n<p>But it works.</p>\n\n<p>Who do magic:</p>\n\n<p><code>let i3 = &amp;i2;</code></p>\n\n<p>or</p>\n\n<p><code>functionc(&amp;i3, \"strange\");</code></p>\n\n<p>or</p>\n\n<p><code>println!({:p});</code></p>\n"}, {"tags": ["generics", "design-patterns", "rust", "traits", "higher-kinded-types"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1572793659, "post_id": 58681190, "comment_id": 103662523, "body": "I don&#39;t actually get the real purpose of doing this but are you looking a solution like this : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2ef22ce0777f9b8107a71af9969ae333\" rel=\"nofollow noreferrer\">Playground</a>?"}, {"owner": {"reputation": 377, "user_id": 4183550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-XPi65j6sWQQ/AAAAAAAAAAI/AAAAAAAAAEg/fKumkAmyHbg/photo.jpg?sz=128", "display_name": "ionree", "link": "https://stackoverflow.com/users/4183550/ionree"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1572794178, "post_id": 58681190, "comment_id": 103662665, "body": "My concrete use case is that I have a bunch of structs (representing numerical integrators and implementing an <code>Integrator</code> trait) storing a closure (the function being integrated), and want to be able to create new instances of those structs but storing a different closure (create a new integrator of the same algorithm type, but over a new equation). I don&#39;t think your solution would work here."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1572797380, "post_id": 58681190, "comment_id": 103663604, "body": "This sounds like a custom <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e8aa5e77d3f2abbd11c9b7b3fef3b56f\" rel=\"nofollow noreferrer\"><code>Into</code></a> trait. Take a look at the <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\">std <code>Into</code></a>."}], "owner": {"reputation": 377, "user_id": 4183550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-XPi65j6sWQQ/AAAAAAAAAAI/AAAAAAAAAEg/fKumkAmyHbg/photo.jpg?sz=128", "display_name": "ionree", "link": "https://stackoverflow.com/users/4183550/ionree"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 382, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1572791882, "creation_date": 1572791882, "question_id": 58681190, "link": "https://stackoverflow.com/questions/58681190/construct-generic-struct-from-a-trait-function-in-rust", "title": "Construct generic Struct from a Trait function in Rust", "body": "<p>I want to write a trait that allows me to construct new structs of the implementing type, but with different type parameters. For example, say I hav some struct</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Generic&lt;T&gt; {\n    t: T,\n}\n</code></pre>\n\n<p>and I want a trait <code>Constructable</code> that lets me call <code>Generic::new_from_q::&lt;Q&gt;(q as Q)</code>, i.e. my trait would look like this (in pseudo-rust):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Constructable {\n    fn new_from_q&lt;Q&gt;(q: Q) -&gt; Self&lt;Q&gt;; // Self&lt;Q&gt; would be e.g. Generic&lt;Q&gt;\n}\n\nimpl&lt;T&gt; Constructable for Generic&lt;T&gt; {\n    type T = T;\n    fn new_from_q&lt;Q&gt;(q: Q) -&gt; Generic&lt;Q&gt; {\n        Generic { t: q }\n    }\n}\n</code></pre>\n\n<p>Of course this makes no sense since the trait cannot guarantee that <code>Self</code> will be able to take the type parameter <code>Q</code>. The closest I have come to implementing the desired constructor behaviour is this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Constructable {\n    type T;\n    fn new_from_q&lt;Q&gt;(q: Q) -&gt; impl Constructable&lt;T = Q&gt;; // currently invalid\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=aa81dd1ab4e9092f179d4d982aa1ddbd\" rel=\"nofollow noreferrer\">playground link</a>) which is currently not possible due to the limitations of the <code>impl Trait</code> syntax (see <a href=\"https://github.com/rust-lang/rust/issues/34511\" rel=\"nofollow noreferrer\">#34511</a>), which is (I think)</p>\n\n<ul>\n<li>not allowed in traits</li>\n<li>not able to take values for associated types</li>\n</ul>\n\n<p>So, how do I work around these limitations? Is there some common programming pattern to allow me to do this (I would like to avoid dynamic trait objects)?</p>\n"}, {"tags": ["rust", "webassembly", "rust-diesel", "wasm-bindgen", "wasm-pack"], "answers": [{"comments": [{"owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "edited": false, "score": 1, "creation_date": 1572872819, "post_id": 58687274, "comment_id": 103684926, "body": "Unfortunately, that didn&#39;t help. Moreover, the <code>-L</code> option that leads to the PostgreSQL directory existed from the very start via the <code>PQ_LIB_DIR</code> but <code>lld</code> continue failing. Somewhere I have seen the idea that <code>libpq</code> should be WASM-complied as well; otherwise, the linker would be unable to find it. Probably, it is an answer."}, {"owner": {"reputation": 2953, "user_id": 4489164, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/k8AP8.png?s=128&g=1", "display_name": "Dickens A S", "link": "https://stackoverflow.com/users/4489164/dickens-a-s"}, "reply_to_user": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "edited": false, "score": 0, "creation_date": 1572939021, "post_id": 58687274, "comment_id": 103707256, "body": "yes, if you wanted run something browser then it needs to be embedded in the wasm binary distribution as static library"}], "tags": [], "owner": {"reputation": 2953, "user_id": 4489164, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/k8AP8.png?s=128&g=1", "display_name": "Dickens A S", "link": "https://stackoverflow.com/users/4489164/dickens-a-s"}, "is_accepted": false, "score": 0, "last_activity_date": 1573283518, "last_edit_date": 1573283518, "creation_date": 1572842368, "answer_id": 58687274, "question_id": 58681067, "link": "https://stackoverflow.com/questions/58681067/how-can-i-link-a-rust-wasm-application-with-libpq-via-wasm-pack/58687274#58687274", "title": "How can I link a Rust Wasm application with libpq via wasm-pack?", "body": "<p>libpq is available inside the postgreSQL installation binary</p>\n\n<p>For example, <a href=\"https://www.enterprisedb.com/download-postgresql-binaries\" rel=\"nofollow noreferrer\">PosgreSQL Binary Download Site</a> if open the zip distribution <code>postgresql-12.0-1-windows-x64-binaries.zip</code> you can see these 2 files:</p>\n\n<ul>\n<li><code>pgsql\\lib\\libpq.dll</code></li>\n<li><code>pgsql\\lib\\libpq.lib</code></li>\n</ul>\n\n<p>You need to specify the LD_LIBRARY_PATH or you can specify the -L in the compiler arguments to tell the folder path which will auto pick those files</p>\n\n<p>If you have used the installer the same file should be there inside the installation folder</p>\n\n<p>You can also refer this stackoverflow link <a href=\"https://stackoverflow.com/questions/26246849/how-to-i-tell-rust-where-to-look-for-a-static-library\">How to I tell Rust where to look for a static library?</a></p>\n\n<p>--EDIT--</p>\n\n<p>To combine a C library inside a web assemble distribution, we can use this guide - <br/><a href=\"http://try%20this%20guide%20to%20combine%20a%20c%20library%20inside%20wasm%20https://developer.mozilla.org/en-US/docs/WebAssembly/existing_C_to_wasm\" rel=\"nofollow noreferrer\">Compiling an Existing C Module to WebAssembly</a></p>\n"}, {"tags": [], "owner": {"reputation": 1710, "user_id": 3898725, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/074CQ.jpg?s=128&g=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/3898725/michael"}, "is_accepted": false, "score": 1, "last_activity_date": 1578991508, "creation_date": 1578991508, "answer_id": 59730194, "question_id": 58681067, "link": "https://stackoverflow.com/questions/58681067/how-can-i-link-a-rust-wasm-application-with-libpq-via-wasm-pack/59730194#59730194", "title": "How can I link a Rust Wasm application with libpq via wasm-pack?", "body": "<p>It's not possible to link to a system library from WebAssembly. You have to use an implementation written in pure Rust code to make it work. You also could use a JavaScript library. But it always has to be inside of the JavaScript runtime environment.</p>\n"}], "owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 411, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1578991508, "creation_date": 1572790960, "last_edit_date": 1572885590, "question_id": 58681067, "link": "https://stackoverflow.com/questions/58681067/how-can-i-link-a-rust-wasm-application-with-libpq-via-wasm-pack", "title": "How can I link a Rust Wasm application with libpq via wasm-pack?", "body": "<p>I'm trying to create a NodeJS application with a Wasm database layer. I use Rust, Diesel as a database driver and <code>wasm-pack</code> as a WebAssembly compiler. </p>\n\n<p>When I try to build my service with <code>wasm-pack</code>, it fails trying to link the <code>libpq</code> library. The <code>PQ_LIB_DIR</code> environment variable is set, and the <code>diesel-cli</code> works without any issue, but when I try to compile my service it fails with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `rust-lld` failed: exit code: 1\n  = note: rust-lld: error: unable to find library -llibpq\n</code></pre>\n\n<p>How can I fix it?</p>\n\n<p>My system:</p>\n\n<ul>\n<li><strong>OS</strong>: Windows 10</li>\n<li><strong>Rust</strong>: 1.38.0</li>\n<li><strong>wasm-pack</strong>: 0.8.1</li>\n<li><strong>diesel</strong>: 1.4.0</li>\n<li><strong>PostgreSQL</strong>: 12</li>\n</ul>\n"}, {"tags": ["c++", "memory-management", "rust", "memory-alignment"], "comments": [{"owner": {"reputation": 188064, "user_id": 635608, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oIJia.png?s=128&g=1", "display_name": "Mat", "link": "https://stackoverflow.com/users/635608/mat"}, "edited": false, "score": 3, "creation_date": 1572789022, "post_id": 58680689, "comment_id": 103661318, "body": "<a href=\"https://en.cppreference.com/w/cpp/memory/align\" rel=\"nofollow noreferrer\">en.cppreference.com/w/cpp/memory/align</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572790013, "post_id": 58680689, "comment_id": 103661556, "body": "Bump allocation presumes that a contiguous block of memory has been reserved for allocation in advance. If your memory is segmented, that most likely means that the whole block has to be in the same segment. But that doesn&#39;t have any bearing on this code."}], "owner": {"reputation": 557, "user_id": 6092128, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b27efed6963e85eed7bbd5d338c2ef79?s=128&d=identicon&r=PG&f=1", "display_name": "aaalex88", "link": "https://stackoverflow.com/users/6092128/aaalex88"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 92, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1572788174, "creation_date": 1572788174, "question_id": 58680689, "link": "https://stackoverflow.com/questions/58680689/working-with-pointer-as-usize-and-manual-alignment", "title": "Working with pointer as usize and manual alignment", "body": "<p>I found this code in the article <a href=\"https://fitzgeraldnick.com/2019/11/01/always-bump-downwards.html\" rel=\"nofollow noreferrer\">https://fitzgeraldnick.com/2019/11/01/always-bump-downwards.html</a> :</p>\n\n<pre><code>let ptr = self.ptr as usize;\n\n// Round the bump pointer up to the requested\n// alignment. See the footnote for details.\nlet aligned = (ptr + align - 1) &amp; !(align - 1);\n\nlet new_ptr = aligned + size;\n// ...\nself.ptr = new_ptr as *mut u8;\n</code></pre>\n\n<p>This unsafe code allocates dynamic storage for objects and does manual address alignment, using integer representation of memory address. I doubt if the code is correct for different architectures, for example on computers with segmented memory model. So I have questions:</p>\n\n<ol>\n<li><p>Is this code surely correct in Rust, and if so, what kind of processor architectures Rust assumes, and is there any formal definition of it?</p></li>\n<li><p>Is it possible to do the same in C++ without violaton of the C++ Standard? Namely, having pointer to free space with unknown alignment cast it to size_t/uintptr_t and align it manually?</p></li>\n</ol>\n"}, {"tags": ["tcp", "rust"], "answers": [{"comments": [{"owner": {"reputation": 143, "user_id": 10409835, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-8fvwiOypBpc/AAAAAAAAAAI/AAAAAAAAAAc/yhoOiR7NEH4/photo.jpg?sz=128", "display_name": "0poss", "link": "https://stackoverflow.com/users/10409835/0poss"}, "edited": false, "score": 0, "creation_date": 1572732593, "post_id": 58675512, "comment_id": 103652587, "body": "Thanks for the answer but <code>stream.read()</code> still returns Ok(0), even though if created a vector with <code>Vec::with_capacity(1024)</code>. I&#39;ve printed it&#39;s len before and after the read... <code>0</code> for both. The capacity remains <code>1024</code>"}, {"owner": {"reputation": 143, "user_id": 10409835, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-8fvwiOypBpc/AAAAAAAAAAI/AAAAAAAAAAc/yhoOiR7NEH4/photo.jpg?sz=128", "display_name": "0poss", "link": "https://stackoverflow.com/users/10409835/0poss"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572732719, "post_id": 58675512, "comment_id": 103652611, "body": "@Stargateur yes, I was just giving details"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 143, "user_id": 10409835, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-8fvwiOypBpc/AAAAAAAAAAI/AAAAAAAAAAc/yhoOiR7NEH4/photo.jpg?sz=128", "display_name": "0poss", "link": "https://stackoverflow.com/users/10409835/0poss"}, "edited": false, "score": 0, "creation_date": 1572732733, "post_id": 58675512, "comment_id": 103652613, "body": "@EconoMix What is your actual <code>TcpStream</code>? As in, are you certain the issue is on the rust side?"}, {"owner": {"reputation": 143, "user_id": 10409835, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-8fvwiOypBpc/AAAAAAAAAAI/AAAAAAAAAAc/yhoOiR7NEH4/photo.jpg?sz=128", "display_name": "0poss", "link": "https://stackoverflow.com/users/10409835/0poss"}, "edited": false, "score": 0, "creation_date": 1572733038, "post_id": 58675512, "comment_id": 103652688, "body": "@S&#233;bastienRenauld the <code>TcpStream</code> is from <code>TcpListener::incoming()</code> I&#39;m sure the issue is on my side, I think there is something I am not seeing or understanding about TcpStream that is different from, for example, python sockets"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 143, "user_id": 10409835, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-8fvwiOypBpc/AAAAAAAAAAI/AAAAAAAAAAc/yhoOiR7NEH4/photo.jpg?sz=128", "display_name": "0poss", "link": "https://stackoverflow.com/users/10409835/0poss"}, "edited": false, "score": 1, "creation_date": 1572733310, "post_id": 58675512, "comment_id": 103652747, "body": "@EconoMix I forgot a crucial step, which Stargateur reminded me of. You actually need to use that capacity as well (i.e. <code>resize()</code>)...or, once again, use an array from the get-go (I almost never read into <code>Vec</code>s)."}, {"owner": {"reputation": 143, "user_id": 10409835, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-8fvwiOypBpc/AAAAAAAAAAI/AAAAAAAAAAc/yhoOiR7NEH4/photo.jpg?sz=128", "display_name": "0poss", "link": "https://stackoverflow.com/users/10409835/0poss"}, "edited": false, "score": 0, "creation_date": 1572733325, "post_id": 58675512, "comment_id": 103652754, "body": "Solved it, thanks I created the vector with <code>vec![0; 1024]</code> I guess it just needed to be initialized"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 4, "last_activity_date": 1572733428, "last_edit_date": 1572733428, "creation_date": 1572730452, "answer_id": 58675512, "question_id": 58675405, "link": "https://stackoverflow.com/questions/58675405/misunderstanding-of-how-the-read-trait-works-for-tcpstreams/58675512#58675512", "title": "Misunderstanding of how the Read trait works for TcpStreams", "body": "<p>You're getting caught with your pants down by an underlying technicality of <code>Vec</code> more than by <code>std::io::Read</code>, although they both interact in this particular case.</p>\n\n<p>The definition and documentation of <code>Read</code> states:</p>\n\n<blockquote>\n  <p>If the return value of this method is Ok(n), then it <strong>must be guaranteed that 0 &lt;= n &lt;= buf.len()</strong>. A nonzero n value indicates that the buffer buf has been filled in with n bytes of data from this source. If n is 0, then it can indicate one of two scenarios:</p>\n</blockquote>\n\n<p>The important part is bolded.</p>\n\n<p>When you define a new <code>Vec</code> the way you did, it starts with a capacity of <em>zero</em>. This means that the underlying slice (that you will use as a buffer) has a length of zero. As a result, since it must be guaranteed that <code>0 &lt;= n &lt;= buf.len()</code> and since <code>buf.len()</code> is zero, your <code>read()</code> call immediately returns with 0 bytes read.</p>\n\n<p>To \"fix\" this, you can either assign a default set of elements to your <code>Vec</code> (<code>Vec::new().resize(1024, 0)</code>), or just use an array from the get-go (<code>let mut buffer:[u8; 1024] = [0; 1024]</code>)</p>\n"}], "owner": {"reputation": 143, "user_id": 10409835, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-8fvwiOypBpc/AAAAAAAAAAI/AAAAAAAAAAc/yhoOiR7NEH4/photo.jpg?sz=128", "display_name": "0poss", "link": "https://stackoverflow.com/users/10409835/0poss"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 58675512, "answer_count": 1, "score": 0, "last_activity_date": 1572733428, "creation_date": 1572729657, "question_id": 58675405, "link": "https://stackoverflow.com/questions/58675405/misunderstanding-of-how-the-read-trait-works-for-tcpstreams", "title": "Misunderstanding of how the Read trait works for TcpStreams", "body": "<p>My goal is to read some bytes from a TcpStream in order to parse the data in each message and build a struct from it.</p>\n\n<pre><code>loop {\n    let mut buf: Vec&lt;u8&gt; = Vec::new();\n    let len = stream.read(&amp;mut buf)?;\n    if 0 == len {\n        //Disconnected\n    }\n    println!(\"read() -&gt; {}\", len);\n}\n</code></pre>\n\n<p>Like in Python, I thought the <code>stream.read()</code> would block until it received some data.\nSo I've set up a server that calls the loop you see above for each incoming connection. I've then tried to connect to the server with netcat; netcat connects successfully to the server and blocks on the <code>stream.read()</code>, which is what I want; but as soon as I send some data, <code>read()</code> returns <code>0</code>.\nI've also tried doing something similar with <code>stream.read_to_end()</code> but it only appears to only return when the connection is closed.</p>\n\n<p>How can I read from the TcpStream, message per message, knowing that each message can have a different, unknown, size ?</p>\n"}, {"tags": ["rust", "clone"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1572725821, "post_id": 58674830, "comment_id": 103651173, "body": "Second one is much safer, first one may cause panic due to <code>unwrap()</code>, but yes if you think on happy path they do the same"}], "answers": [{"comments": [{"owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "edited": false, "score": 0, "creation_date": 1572725696, "post_id": 58674899, "comment_id": 103651144, "body": "Ok, thanks for the answer. This makes sense. A following up question would be: is <code>x.clone()</code> equivalent to <code>Rc::clone(&amp;x)</code> in this context?"}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "edited": false, "score": 1, "creation_date": 1572725841, "post_id": 58674899, "comment_id": 103651176, "body": "@Psidom It should be. <code>Rc::clone(&amp;x)</code> is just the <code>Clone</code> implementation on <code>Rc&lt;T&gt;</code> (applied to a temporary reference - which is what <code>x.clone()</code> does too)."}, {"owner": {"reputation": 357, "user_id": 4710226, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/02919bc0a37c77caf6287b4d294dfbf3?s=128&d=identicon&r=PG&f=1", "display_name": "ebk", "link": "https://stackoverflow.com/users/4710226/ebk"}, "edited": false, "score": 0, "creation_date": 1617838269, "post_id": 58674899, "comment_id": 118422791, "body": "<a href=\"https://doc.rust-lang.org/stable/book/ch15-04-rc.html#using-rct-to-share-data\" rel=\"nofollow noreferrer\">The book</a> talks a little bit about <code>Rc::clone(&amp;x)</code> and <code>x.clone()</code> (in the last paragraph of that section). Simply put, the former one is just used to distinguish clones that increase the reference count from deep-copy ones."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 5, "last_activity_date": 1592339777, "last_edit_date": 1592339777, "creation_date": 1572725474, "answer_id": 58674899, "question_id": 58674830, "link": "https://stackoverflow.com/questions/58674830/how-to-clone-an-option-of-rc-in-rust/58674899#58674899", "title": "How to clone an Option of Rc in Rust?", "body": "<p>There's a <a href=\"https://github.com/rust-lang/rust/blob/1.44.0/src/libcore/option.rs#L1275-L1283\" rel=\"nofollow noreferrer\">generic implementation</a></p>\n\n<pre><code>impl&lt;T: Clone&gt; Clone for Option&lt;T&gt; {\n    #[inline]\n    fn clone(&amp;self) -&gt; Self {\n        match self {\n            Some(x) =&gt; Some(x.clone()),\n            None =&gt; None,\n        }\n    }\n    // ...\n}\n</code></pre>\n\n<p>So if <code>x</code> is <code>Option&lt;Rc&lt;T&gt;&gt;</code>, <code>x.clone()</code> will simply defer to the <code>Clone</code> implementation on <code>Rc&lt;T&gt;</code>.</p>\n"}], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 890, "favorite_count": 0, "accepted_answer_id": 58674899, "answer_count": 1, "score": 4, "last_activity_date": 1592339777, "creation_date": 1572724914, "question_id": 58674830, "link": "https://stackoverflow.com/questions/58674830/how-to-clone-an-option-of-rc-in-rust", "title": "How to clone an Option of Rc in Rust?", "body": "<p>Say I have an Option of Rc:</p>\n\n<pre><code>let x = Some(Rc::new(3));\n</code></pre>\n\n<p>If I need to make a clone, I can do:</p>\n\n<pre><code>let y = Some(Rc::clone(&amp;x.unwrap()));\n</code></pre>\n\n<p>But it seems there's also a short cut:</p>\n\n<pre><code>let y = x.clone();\n</code></pre>\n\n<p>Are there any difference between these options? Or they are internally doing the same thing. Rust newbie here, thanks for any clarification.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1572763610, "post_id": 58674720, "comment_id": 103656424, "body": "It seems that HRTB and supertraits don&#39;t work well together because you have to rewrite the bound: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d1a5d43accf410ebe5cd7ab3786966d7\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1572774368, "post_id": 58674720, "comment_id": 103658080, "body": "@FrenchBoiethios that is exactly the thing I wanted to avoid by defining the trait <code>RealComplex</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1572774940, "post_id": 58674720, "comment_id": 103658199, "body": "@Unlikus I know, just saying. That seems to be at least a limitation, or a bug."}, {"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1572775772, "post_id": 58674720, "comment_id": 103658389, "body": "@FrenchBoiethios so I should add it to the issue tracker on github.com?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1572900871, "post_id": 58674720, "comment_id": 103697743, "body": "I would ask in the forum before"}], "owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 66, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1572774912, "creation_date": 1572723946, "last_edit_date": 1572774912, "question_id": 58674720, "link": "https://stackoverflow.com/questions/58674720/unusable-trait-with-where-clause", "title": "Unusable Trait with where clause", "body": "<p>I have the following Code in Rust</p>\n\n<pre><code>use num_complex::Complex64;\n\npub trait RealComplex where Self : std::iter::Sum, for&lt;'a,'b&gt; &amp;'a Self : std::ops::Mul&lt;&amp;'b Complex64, Output=Complex64&gt; {}\n\nimpl RealComplex for f64 {}\nimpl RealComplex for Complex64 {}\n\nstruct A&lt;T&gt; {\n    a : T\n}\n\nimpl&lt;T : RealComplex&gt; A&lt;T&gt; {\n    fn get(self) -&gt; T {\n        self.T\n    }\n}\n</code></pre>\n\n<p>Link in Playground : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=410e0410353bc2fbcefcdce3dcaf2621\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=410e0410353bc2fbcefcdce3dcaf2621</a></p>\n\n<p>The Trait <code>RealComplex</code> should mean that the Type implement <code>std::iter::Sum</code> and that I can multiply the Reference of this Type by a Reference of <code>Complex64</code>.</p>\n\n<p>But it seems I am unable to use this trait at all, without the compiler complaining.</p>\n\n<p>What I want to accomplish: I want a generic Matrix Type which implements just Matrix-Vector Multiplication like this:</p>\n\n<pre><code>struct SparseMatrix&lt;T&gt; {\n    data : Vec&lt;Vec&lt;T&gt;&gt;\n}\n\nimpl&lt;T : RealComplex&gt; SparseMatrix&lt;T&gt; {\n    fn multByVec(&amp;self, &amp;[Complex64]) -&gt; Vec&lt;Complex64&gt; {\n       ...\n    }\n}\n</code></pre>\n\n<p>This should be generic over <code>f64</code> and <code>Complex64</code></p>\n"}, {"tags": ["compiler-errors", "rust"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1572713576, "post_id": 58673177, "comment_id": 103648242, "body": "Type ascription is like <code>config: Config</code>. It&#39;s used when declaring a variable (<code>let config: Config = ...</code>, but it&#39;s still experimental in most other cases, like reassignment (<code>config: Config = ...</code>)."}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 3, "last_activity_date": 1572721518, "creation_date": 1572721518, "answer_id": 58674373, "question_id": 58673177, "link": "https://stackoverflow.com/questions/58673177/why-does-a-temporary-variable-suppress-the-type-ascription-is-experimental-err/58674373#58674373", "title": "Why does a temporary variable suppress the &quot;type ascription is experimental&quot; error?", "body": "<p>To expand my comment into an answer, type ascription is when the type of a variable is explicitly notated using a colon. An example of this is in your code already: <code>config: Config</code>, meaning that <code>config</code> has type <code>Config</code>. Most of the time, Rust is able to deduce the type of a variable based on its value, so type ascription isn't needed. In fact, except for a few special instances, type ascription isn't even allowed in the language yet (see <a href=\"https://github.com/rust-lang/rust/issues/23416\" rel=\"nofollow noreferrer\">this issue</a>).</p>\n\n<p>The main place where type ascription is allowed right now is when declaring variables. This is when you say something like <code>let x: u32 = 7;</code> or <code>let mut s: String = \"abc\".to_string();</code>. Similarly, when defining a struct, you use type ascription to describe its fields:</p>\n\n<pre><code>struct Foo {\n    bar: Vec&lt;i32&gt;,\n    baz: String,\n}\n</code></pre>\n\n<p>The other main place that type ascription can (or must) be used is in function and closure arguments. For example</p>\n\n<pre><code>fn add_one(x: u64) -&gt; u64 {\n    x + 1\n}\n</code></pre>\n\n<p>or <code>let f = |t: String| t + \"123\"</code>. With closures, the type of the variable can often be inferred based on how the closure is used, but sometimes it's helpful to the compiler or to readers to explicitly state the type of the arguments.</p>\n\n<p>In your particular case, you're using type ascription for a reassignment operation, which doesn't fall into any of the categories where type ascription is allowed right now. <code>config: Config = serde_json::from_str(&amp;json)?;</code> could probably be changed to <code>config = serde_json::from_str(&amp;json)?;</code> without any problems, since the compiler already knows that <code>config</code> has type <code>Config</code>. Reassignment very rarely needs type ascription since it can't change the type of the variable.</p>\n"}], "owner": {"reputation": 42740, "user_id": 1031569, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/MTZr2.png?s=128&g=1", "display_name": "Reactgular", "link": "https://stackoverflow.com/users/1031569/reactgular"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 58674373, "answer_count": 1, "score": 0, "last_activity_date": 1572721518, "creation_date": 1572713195, "question_id": 58673177, "link": "https://stackoverflow.com/questions/58673177/why-does-a-temporary-variable-suppress-the-type-ascription-is-experimental-err", "title": "Why does a temporary variable suppress the &quot;type ascription is experimental&quot; error?", "body": "<p>I am using the Serde JSON crate to deserialize a JSON file to a struct, and one of the properties is optional. When the property is missing a default value (from the command line) it is substituted. This leads me to modifying my code which raises the following error, and was difficult to figure out how to fix it.</p>\n\n<p>My problem is that I'm getting the <code>type ascription is experimental error</code> unless I assign the value to a temporary variable, and I don't understand why. I'll show the code and obmit the struct for <code>Config</code> as I don't think that part matters.</p>\n\n<p>Here is the code that works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    pub fn new(file_name: &amp;str, param_urls: &amp;[String]) -&gt; Result&lt;Config, io::Error&gt; {\n        let mut config: Config = Config {\n            queue: None\n        };\n        if Path::new(file_name).exists() {\n            let json = read_to_string(file_name)?;\n            let c: Config = serde_json::from_str(&amp;json)?;\n            config = c;\n            // ^^^^^^^ must use temporary c variable\n        }\n        if config.queue.is_none() {\n            config.queue = Some(param_urls.to_vec());\n        }\n        Ok(Config {\n            queue: None\n        })\n    }\n</code></pre>\n\n<p>The above took me awhile to figure out, and I don't understand why it fixes the error, but here is the original source code that raises the error.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    pub fn new(file_name: &amp;str, param_urls: &amp;[String]) -&gt; Result&lt;Config, io::Error&gt; {\n        let mut config: Config = Config {\n            queue: None\n        };\n        if Path::new(file_name).exists() {\n            let json = read_to_string(file_name)?;\n            config: Config = serde_json::from_str(&amp;json)?;\n            // ^^^^^^^^^^^ ERROR! type ascription is experimental error\n        }\n        if config.queue.is_none() {\n            config.queue = Some(param_urls.to_vec());\n        }\n        Ok(Config {\n            queue: None\n        })\n    }\n</code></pre>\n\n<p>As a new Rust programmer coming from other languages. I simply don't understand this error, and I've Googled it without really any clear explanation. From my perspective, coming from other languages I see no difference here and don't understand what the problem was that was fixed or why.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1572717945, "post_id": 58672902, "comment_id": 103649367, "body": "Where did you find <code>impl&lt;T&gt; Borrow&lt;T&gt; for T where T: ?Sized</code>, it seems to me that rather <code>impl&lt;T&gt; Borrow&lt;T&gt; for &amp;T where T: ?Sized</code> is correct. Yet this does not explain your error message, maybe you should reveal more of your code."}, {"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "reply_to_user": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1572720891, "post_id": 58672902, "comment_id": 103650121, "body": "<a href=\"https://doc.rust-lang.org/src/core/borrow.rs.html#213-215\" rel=\"nofollow noreferrer\">doc.rust-lang.org/src/core/borrow.rs.html#213-215</a>"}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 1, "last_activity_date": 1572735165, "creation_date": 1572735165, "answer_id": 58675977, "question_id": 58672902, "link": "https://stackoverflow.com/questions/58672902/why-is-stdborrowborrow-not-implementet-for-every-type/58675977#58675977", "title": "Why is std::borrow::Borrow not implementet for every Type?", "body": "<p>The important thing to recognize is that in the blanket <code>impl</code> there is only one <code>T</code> and it has to represent the <em>same</em> type in both places:</p>\n\n<pre><code>impl&lt;T&gt; Borrow&lt;T&gt; for T\n    where T: ?Sized\n</code></pre>\n\n<p>implements <em>for each type <code>T</code>, only the specific trait <code>Borrow&lt;T&gt;</code></em>. <code>i64</code> implements <code>Borrow&lt;i64&gt;</code>, <code>String</code> implements <code>Borrow&lt;String&gt;</code>, etc. When we instantiate this with <code>T = &amp;num_complex::Complex&lt;f64&gt;</code>, what trait is implemented?</p>\n\n<pre><code>impl Borrow&lt;&amp;num_complex::Complex&lt;f64&gt;&gt; for &amp;num_complex::Complex&lt;f64&gt;  // (not compilable code, just illustrative)\n</code></pre>\n\n<p>In words, you can borrow a <code>&amp;Complex&lt;f64&gt;</code> <em>as</em> a <code>&amp;Complex&lt;f64&gt;</code>, but you can't borrow it as any arbitrary <code>T</code> (which wouldn't make much sense, anyway).</p>\n\n<p>You're using this in some generic code where <code>T</code> can be anything, so the blanket <code>impl</code> of <code>Borrow&lt;T&gt; for T</code> doesn't apply. You can probably fix this by adding a trait bound:</p>\n\n<pre><code>where num_complex::Complex&lt;f64&gt;: Borrow&lt;T&gt;\n</code></pre>\n\n<p>which means that <code>Complex&lt;f64&gt;</code> itself implements <code>Borrow&lt;T&gt;</code>, or</p>\n\n<pre><code>where for&lt;'a&gt; &amp;'a num_complex::Complex&lt;f64&gt;: Borrow&lt;T&gt;\n</code></pre>\n\n<p>which means that any reference to <code>Complex&lt;f64&gt;</code> implements <code>Borrow&lt;T&gt;</code>. Depending on your actual code either or both of these may work due to autoref/autoderef.</p>\n"}], "owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 58675977, "answer_count": 1, "score": 0, "last_activity_date": 1572735165, "creation_date": 1572711435, "last_edit_date": 1572715697, "question_id": 58672902, "link": "https://stackoverflow.com/questions/58672902/why-is-stdborrowborrow-not-implementet-for-every-type", "title": "Why is std::borrow::Borrow not implementet for every Type?", "body": "<p>On the documentation it is stated that</p>\n\n<pre><code>impl&lt;T&gt; Borrow&lt;T&gt; for T where\n    T: ?Sized, \n</code></pre>\n\n<p>I would read this: </p>\n\n<blockquote>\n  <p>This Trait is implemented for every Type, even unsized ones.</p>\n</blockquote>\n\n<p>Is this correct?</p>\n\n<p>I got the error message:\nthe trait <code>std::borrow::Borrow&lt;T&gt;</code> is not implemented for <code>&amp;num_complex::Complex&lt;f64&gt;</code></p>\n\n<p>which I can't make sense of.</p>\n\n<p>(I do not want to post the whole code, I just want some clarification about which types implement std::borror::Borrow)</p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 2, "creation_date": 1572705597, "post_id": 58671898, "comment_id": 103645953, "body": "I&#39;m not familiar with diesel myself, but I&#39;d assume that the examples are just showing a potentially more efficient way to insert data: If you already have <code>String</code> instances elsewhere in memory, you can simply pass slices of them instead of cloning them."}], "answers": [{"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 1, "last_activity_date": 1572748059, "creation_date": 1572748059, "answer_id": 58676956, "question_id": 58671898, "link": "https://stackoverflow.com/questions/58671898/what-is-the-benefit-of-a-specifying-a-lifetime-parameter-for-diesel-insertable/58676956#58676956", "title": "What is the benefit of a specifying a lifetime parameter for Diesel &quot;insertable&quot; structs", "body": "<p>The key difference between the examples you have shown is not that there is a lifetime annotation: it is that in one case, the values to be inserted are owned by the <code>Insertable</code> structure while in the other they are not.</p>\n\n<p>In this case:</p>\n\n<pre><code>#[derive(Insertable)]\n#[table_name=\"users\"]\npub struct NewUser&lt;'a&gt; {\n    pub first_name: &amp;'a str,\n    pub last_name: &amp;'a str,\n    pub email: Option&lt;&amp;'a str&gt;,\n }\n</code></pre>\n\n<p>the requirement to annotate with a lifetime is a consequence of the fact that the fields are string slices, which are references to strings that are owned by some other structure or variable. The <code>NewUser</code> struct cannot last any longer than the variable(s) that do own the strings. It is essentially a view of these other variables, which allows you to insert their contents into the database without making any copies of the data.</p>\n\n<p>On the other hand:</p>\n\n<pre><code>#[derive(Insertable)]\n#[table_name = \"users\"]\npub struct CreateUser {\n    first_name: String,\n    last_name: String,\n    role: i16,\n}\n</code></pre>\n\n<p>This structure owns the strings, so lifetimes do not come into it.</p>\n\n<p>In terms of which would be the best approach - it depends on the data structures of the whole program. If the fields to be inserted already exist in other data structures that the program is maintaining, then it might be appropriate to use the first form as you could avoid making unnecessary copies of the values.</p>\n\n<p>On the other hand perhaps the program does not have any separate data structure in which it can keep the values, or perhaps lifetime issues make it necessary for the <code>Insertable</code> to own the values that are to be inserted, even if that does make a copy necessary.</p>\n"}], "owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 58676956, "answer_count": 1, "score": 1, "last_activity_date": 1572748059, "creation_date": 1572704001, "question_id": 58671898, "link": "https://stackoverflow.com/questions/58671898/what-is-the-benefit-of-a-specifying-a-lifetime-parameter-for-diesel-insertable", "title": "What is the benefit of a specifying a lifetime parameter for Diesel &quot;insertable&quot; structs", "body": "<p>From the diesel.rs docs I am seeing examples such as:</p>\n\n<pre><code>#[derive(Insertable)]\n#[table_name=\"users\"]\npub struct NewUser&lt;'a&gt; {\n    pub first_name: &amp;'a str,\n    pub last_name: &amp;'a str,\n    pub email: Option&lt;&amp;'a str&gt;,\n }\n</code></pre>\n\n<p>And </p>\n\n<pre><code>#[derive(Insertable)]\n#[table_name=\"posts\"]\npub struct NewPost&lt;'a&gt; {\n    pub title: &amp;'a str,\n    pub body: &amp;'a str,\n}\n</code></pre>\n\n<p>In fact every official example specifies a lifetime parameter for Insertable's. However, \"in the wild\" when I'm reading real-life examples on github every Insertable struct I am seeing omits a lifetime parameter and instead defines similar structs:</p>\n\n<pre><code>#[derive(Insertable)]\n#[table_name = \"users\"]\npub struct CreateUser {\n    first_name: String,\n    last_name: String,\n    role: i16,\n}\n</code></pre>\n\n<p>Is there a benefit to one approach over the other in terms of database performance? Can I run into problems if I do it one way or the other?</p>\n"}, {"tags": ["rust", "compiler-warnings"], "answers": [{"tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 4, "last_activity_date": 1572702699, "creation_date": 1572702699, "answer_id": 58671724, "question_id": 58671430, "link": "https://stackoverflow.com/questions/58671430/how-to-allow-dead-code-and-unused-imports-for-dev-builds-only/58671724#58671724", "title": "How to allow dead_code and unused_imports for dev builds only?", "body": "<p><code>dev</code> isn't a supported predicate for conditional compilation, so your examples will never include the affected code. As far as I know, the best way to detect debug mode is instead with <code>#[cfg(debug_assertions)]</code>. With my testing, <code>#![cfg_attr(debug_assertions, allow(dead_code, unused_imports))]</code> seems to work to disable the lints for debug builds but enable them in release builds.</p>\n\n<p>You can see a list of supported predicates <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html\" rel=\"nofollow noreferrer\">in the Rust reference</a>.</p>\n"}], "owner": {"reputation": 42740, "user_id": 1031569, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/MTZr2.png?s=128&g=1", "display_name": "Reactgular", "link": "https://stackoverflow.com/users/1031569/reactgular"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2791, "favorite_count": 0, "accepted_answer_id": 58671724, "answer_count": 1, "score": 4, "last_activity_date": 1572702699, "creation_date": 1572700199, "question_id": 58671430, "link": "https://stackoverflow.com/questions/58671430/how-to-allow-dead-code-and-unused-imports-for-dev-builds-only", "title": "How to allow dead_code and unused_imports for dev builds only?", "body": "<p>The unused imports and dead code warnings are the most common that I've found while learning Rust, and they get annoying after awhile (a very short while, like a few seconds). Especially when they are mixed with compiler errors, because it makes the console difficult to read.</p>\n\n<p>I was able to turn off these warnings:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![allow(unused_imports)]\n#![allow(dead_code)]\n</code></pre>\n\n<p>This will disable the warnings for all builds, but I want the warnings enabled for release builds.</p>\n\n<p>I tried disabling them like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![cfg(dev)]\n#![allow(unused_imports)]\n#![allow(dead_code)]\n</code></pre>\n\n<p>But, this removed the entire Rust file from release builds (not what I want).</p>\n\n<p>I tried to configure using <code>cfg_attr</code> but it had no effect for either builds.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![cfg_attr(dev, allow(unused_imports))]\n#![cfg_attr(dev, allow(dead_code))]\n</code></pre>\n\n<p>I have Googled and read all the related questions on StackOverflow but can't figure this out.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 463, "user_id": 8810495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96ef3013f2e4c3796fe182b8216afc07?s=128&d=identicon&r=PG&f=1", "display_name": "octano", "link": "https://stackoverflow.com/users/8810495/octano"}, "edited": false, "score": 0, "creation_date": 1572687984, "post_id": 58669887, "comment_id": 103641740, "body": "Thanks Dai, I think this is to get the max value, what about the min value ? Because in return I have <code>Some(8)</code> when I actually need to get only <code>8</code>when I do a <code>println!(&quot;{:#?}&quot;, maxValue);</code> since <code>println!(&quot;{}&quot;, maxValue);</code> returns an error."}], "tags": [], "owner": {"reputation": 109956, "user_id": 159145, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/r8ryC.png?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/159145/dai"}, "is_accepted": true, "score": 25, "last_activity_date": 1572689344, "last_edit_date": 1572689344, "creation_date": 1572687771, "answer_id": 58669887, "question_id": 58669865, "link": "https://stackoverflow.com/questions/58669865/how-to-get-the-minimum-value-of-a-vector-in-rust/58669887#58669887", "title": "How to get the minimum value of a vector in Rust?", "body": "<pre><code>let minValue = vec.iter().min();\nmatch minValue {\n    Some(min) =&gt; println!( \"Min value: {}\", min ),\n    None      =&gt; println!( \"Vector is empty\" ),\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.min\" rel=\"noreferrer\">https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.min</a></p>\n\n<blockquote>\n<pre><code>fn min(self) -&gt; Option&lt;Self::Item&gt;\nwhere\n    Self::Item: Ord, \n</code></pre>\n  \n  <p>Returns the minimum element of an iterator.</p>\n  \n  <p>If several elements are equally minimum, the first element is returned. If the iterator is empty, None is returned.</p>\n</blockquote>\n\n<p>I found this Gist which has some common C#/.NET Linq operations expressed in Swift and Rust, which is handy: <a href=\"https://gist.github.com/leonardo-m/6e9315a57fe9caa893472c2935e9d589\" rel=\"noreferrer\">https://gist.github.com/leonardo-m/6e9315a57fe9caa893472c2935e9d589</a></p>\n"}, {"comments": [{"owner": {"reputation": 109956, "user_id": 159145, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/r8ryC.png?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/159145/dai"}, "reply_to_user": {"reputation": 9070, "user_id": 6817835, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/8GBAa.jpg?s=128&g=1", "display_name": "gold_cy", "link": "https://stackoverflow.com/users/6817835/gold-cy"}, "edited": false, "score": 0, "creation_date": 1572695519, "post_id": 58670121, "comment_id": 103643402, "body": "@aws_apprentice When blandger replied my answer didn&#39;t include the <code>match</code> part. This was just bad timing."}, {"owner": {"reputation": 42740, "user_id": 1031569, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/MTZr2.png?s=128&g=1", "display_name": "Reactgular", "link": "https://stackoverflow.com/users/1031569/reactgular"}, "edited": false, "score": 0, "creation_date": 1572697174, "post_id": 58670121, "comment_id": 103643798, "body": "There are no rules on this site for duplicate answers. You&#39;re welcome to expand your answer to attract up votes, and the key is to post correct answers."}, {"owner": {"reputation": 573, "user_id": 564413, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86687090f229c02fb7196df64e51b8cd?s=128&d=identicon&r=PG", "display_name": "blandger", "link": "https://stackoverflow.com/users/564413/blandger"}, "edited": false, "score": 0, "creation_date": 1572712678, "post_id": 58670121, "comment_id": 103647958, "body": "Yes, the duplicate reason is timing issue, I posted answer and Dai is updated his answer soon."}], "tags": [], "owner": {"reputation": 573, "user_id": 564413, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86687090f229c02fb7196df64e51b8cd?s=128&d=identicon&r=PG", "display_name": "blandger", "link": "https://stackoverflow.com/users/564413/blandger"}, "is_accepted": false, "score": 4, "last_activity_date": 1572689749, "creation_date": 1572689749, "answer_id": 58670121, "question_id": 58669865, "link": "https://stackoverflow.com/questions/58669865/how-to-get-the-minimum-value-of-a-vector-in-rust/58670121#58670121", "title": "How to get the minimum value of a vector in Rust?", "body": "<p>Hi @octano As Dai has already answered, min/max return Option&lt;> value, so you can only match it as in example:</p>\n\n<pre><code>fn main() {\n    let vec_to_check = vec![5, 6, 8, 4, 2, 7];\n    let min_value = vec_to_check.iter().min();\n    match min_value {\n        None =&gt; println!(\"Min value was not found\"),\n        Some(i) =&gt; println!(\"Min Value = {}\", i)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=276212e20fb404f3d8c23153a185f31a\" rel=\"nofollow noreferrer\">Play ground example for Iter.min()</a></p>\n"}, {"tags": [], "owner": {"reputation": 110, "user_id": 5200516, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06fb1b7ab4eae5b26dfc33ea79a53a6f?s=128&d=identicon&r=PG&f=1", "display_name": "thouger", "link": "https://stackoverflow.com/users/5200516/thouger"}, "is_accepted": false, "score": 1, "last_activity_date": 1615303796, "creation_date": 1615303796, "answer_id": 66549876, "question_id": 58669865, "link": "https://stackoverflow.com/questions/58669865/how-to-get-the-minimum-value-of-a-vector-in-rust/66549876#66549876", "title": "How to get the minimum value of a vector in Rust?", "body": "<pre><code>let mut v = vec![5, 6, 8, 4, 2, 7];\nlet minValue = *v.iter().min().unwrap();\n</code></pre>\n"}], "owner": {"reputation": 463, "user_id": 8810495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96ef3013f2e4c3796fe182b8216afc07?s=128&d=identicon&r=PG&f=1", "display_name": "octano", "link": "https://stackoverflow.com/users/8810495/octano"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11446, "favorite_count": 1, "accepted_answer_id": 58669887, "answer_count": 3, "score": 16, "last_activity_date": 1615303796, "creation_date": 1572687578, "question_id": 58669865, "link": "https://stackoverflow.com/questions/58669865/how-to-get-the-minimum-value-of-a-vector-in-rust", "title": "How to get the minimum value of a vector in Rust?", "body": "<p>I'm trying to display the min value of a vector in Rust and can't find a good way to do so.</p>\n\n<p>Here is how I created my vector of <code>i32</code> :</p>\n\n<pre><code>let mut v = vec![5, 6, 8, 4, 2, 7];\n</code></pre>\n\n<p>My goal here is to get the min value of that vector without having to sort it.</p>\n\n<p>What is the best way to get the min value of an <code>i32</code> vector in Rust ?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572692712, "post_id": 58669482, "comment_id": 103642766, "body": "What do you mean by &quot;okay&quot;? Did you try it?"}, {"owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572699542, "post_id": 58669482, "comment_id": 103644430, "body": "@trentcl I meant &quot;okay&quot; as &quot;intended/designed to work with no trouble&quot;. Sorry for ambiguity."}, {"owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572699633, "post_id": 58669482, "comment_id": 103644465, "body": "I tried to use single <code>~&#47;.build</code> directory to build several project and it&#39;s working well so far. But working for a few cases doesn&#39;t mean it would work well for every cases. Therefore, I am asking for original design intention of this flag if used with single shared build directory."}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1572703058, "post_id": 58669482, "comment_id": 103645355, "body": "If the goal is just to speed up compilation with cached build artifacts, <a href=\"https://github.com/mozilla/sccache\" rel=\"nofollow noreferrer\">sccache</a> would probably be a better option."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 2, "creation_date": 1572707612, "post_id": 58669482, "comment_id": 103646508, "body": "I&#39;m with @apemanzilla on this one. You&#39;re trying to solve a problem with a false solution, and creating two more problems along the way. In particular, it will no longer be possible for you to build two projects with the same dependencies concurrently."}], "answers": [{"comments": [{"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1596407038, "post_id": 58880993, "comment_id": 111794738, "body": "Why is sccache better? With a shared target directory I would expect any time any project tries to build a crate cargo checks if it&#39;s already in the target directory, and if it is then cargo does nothing. If using sccache instead, than cargo will think it does need to build, and start triggering a bunch of builds that will so happen to be very quickly satisfied by the cache, but I assume involve copying out of the cache and into your project specific target directory. That both sounds slower and like it would use more disk space. Is some part of this incorrect? Is it not ideal to just do both?"}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1596407140, "post_id": 58880993, "comment_id": 111794770, "body": "I got here because I am trying to understand: why isn&#39;t a single shared target folder the default? Unlike sccache it would require no user setup and it seems like it would be purely better."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1596458936, "post_id": 58880993, "comment_id": 111808897, "body": "@JosephGarvin as mentioned <a href=\"https://stackoverflow.com/questions/58669482/is-it-okay-to-use-a-single-shared-directory-as-cargos-target-directory-for-all/58880993#comment103646508_58669482\">in the comments</a>, create project A and B that have dependency C, but use different target features for C. Then build A, B, A. Does A rebuild? Then try cleaning your target and build B, A, B. Then try cleaning and building A and B concurrently."}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1596489071, "post_id": 58880993, "comment_id": 111822350, "body": "Ah, so a shared target directory is not smart enough to separate crates by feature flags? If it were, would the scenario still workout as I describe? I&#39;m trying to understand if &quot;try changing cargo to put a feature hash in the directory name&quot; is the best way to go or if there is 0 perf advantage that would have over sccache (I suspect it would still avoid copying). The linked issue seems to be about it used to be the case that you couldn&#39;t run two cargo instances period."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1596458684, "last_edit_date": 1596458684, "creation_date": 1573834841, "answer_id": 58880993, "question_id": 58669482, "link": "https://stackoverflow.com/questions/58669482/is-it-okay-to-use-a-single-shared-directory-as-cargos-target-directory-for-all/58880993#58880993", "title": "Is it okay to use a single shared directory as Cargo&#39;s target directory for all projects?", "body": "<p>Yes, this is intended to be safe.</p>\n<p>I agree with the comments that there are probably better methods of achieving your goal. <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-workspace-section\" rel=\"nofollow noreferrer\">Workspaces</a> are a simple solution for a small group of crates, and <a href=\"https://github.com/mozilla/sccache\" rel=\"nofollow noreferrer\">sccache</a> is a more principled caching mechanism.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/2486\" rel=\"nofollow noreferrer\">Fix running Cargo concurrently (PR #2486)</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/pull/1657\" rel=\"nofollow noreferrer\">Allow specifying a custom output directory (PR #1657)</a></li>\n<li><a href=\"https://stackoverflow.com/q/37471391/155423\">Can I prevent cargo from rebuilding libraries with every new project?</a></li>\n</ul>\n"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 552, "favorite_count": 0, "accepted_answer_id": 58880993, "answer_count": 1, "score": 3, "last_activity_date": 1596458684, "creation_date": 1572683717, "last_edit_date": 1573871284, "question_id": 58669482, "link": "https://stackoverflow.com/questions/58669482/is-it-okay-to-use-a-single-shared-directory-as-cargos-target-directory-for-all", "title": "Is it okay to use a single shared directory as Cargo&#39;s target directory for all projects?", "body": "<p>Cargo has the <code>--target-dir</code> flag which specifies a directory to store temporary or cached build artifacts. You also can set it user-wide in the <code>~/.cargo/config</code> file. I'd like to set it to single shared directory to make maintenance easier.</p>\n\n<p>I saw some artifact directories are suffixed with some unique(?) hashes in the target-dir which looks safe, but the final products are not suffixed with hashes, which doesn't seem to be safe for name clashes. I'm not sure on this as I am not an expert on Cargo.</p>\n\n<p>I tried setting <code>~/.cargo/config</code> to </p>\n\n<pre><code>[build]\ntarget-dir = \"./.build\"\n</code></pre>\n\n<p>My original intention was to use the project's local <code>./.build</code> directory, but somehow Cargo places all build files into <code>~/.build</code> directory. I got curious what would happen I put all build files from every project into a single shared build directory.</p>\n\n<p>It has worked well with several different projects so far, but working for a few samples doesn't mean it's designed or guaranteed to work with every case. </p>\n\n<p>In my case, I am using <strong>single shared build directory for all projects of all workspaces of a user</strong>. Not only projects in a workspace. Literally every project in every workspace of a user. As far as I know, Cargo is designed to work with  a local <code>target</code> directory. If it is designed to work with only local directory, a shared build directory  is likely to cause some issues. </p>\n\n<ul>\n<li>Rust/Cargo 1.38.0.</li>\n</ul>\n"}, {"tags": ["rust", "closures", "actix-web"], "answers": [{"comments": [{"owner": {"reputation": 6165, "user_id": 102834, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6afb1a1f7f5fc5fff8b898309c317945?s=128&d=identicon&r=PG", "display_name": "FireAphis", "link": "https://stackoverflow.com/users/102834/fireaphis"}, "edited": false, "score": 0, "creation_date": 1572720226, "post_id": 58673920, "comment_id": 103649959, "body": "You, sir, are my hero!"}], "tags": [], "owner": {"reputation": 183, "user_id": 5019531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21b6a4e99e6e1b47d32090ad238de5de?s=128&d=identicon&r=PG&f=1", "display_name": "Pavel Arnold", "link": "https://stackoverflow.com/users/5019531/pavel-arnold"}, "is_accepted": true, "score": 1, "last_activity_date": 1572718403, "creation_date": 1572718403, "answer_id": 58673920, "question_id": 58669035, "link": "https://stackoverflow.com/questions/58669035/returning-closure-from-function-inconsitent-with-defining-in-place/58673920#58673920", "title": "Returning closure from function inconsitent with defining in place", "body": "<p>Then using <code>impl Trait</code> as return type all other type information other then that value implements <code>Trait</code> get erased.</p>\n\n<p>In this particular case closure <code>move || get_user(&amp;my_own_conf_clone)</code> implements <code>Fn() -&gt; String</code> and <code>Clone</code>, but after returning <code>Clone</code> get erased.</p>\n\n<p>But since <code>Factory</code> implemented for <code>Fn() -&gt; String + Clone</code>, and not for <code>Fn() -&gt; String</code> return value no longer implement factory.</p>\n\n<p>This can be fixed by changing <code>gen_get_user</code> to</p>\n\n<pre><code>fn gen_get_user(conf: &amp;Config) -&gt; impl Fn() -&gt; String + Clone{\n    let my_own_conf_clone = conf.clone();\n    move || get_user(&amp;my_own_conf_clone)\n}\n</code></pre>\n"}], "owner": {"reputation": 6165, "user_id": 102834, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6afb1a1f7f5fc5fff8b898309c317945?s=128&d=identicon&r=PG", "display_name": "FireAphis", "link": "https://stackoverflow.com/users/102834/fireaphis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 0, "accepted_answer_id": 58673920, "answer_count": 1, "score": 1, "last_activity_date": 1572718403, "creation_date": 1572679145, "question_id": 58669035, "link": "https://stackoverflow.com/questions/58669035/returning-closure-from-function-inconsitent-with-defining-in-place", "title": "Returning closure from function inconsitent with defining in place", "body": "<p>While trying to implement a simple web server application using <a href=\"https://actix.rs/docs/getting-started/\" rel=\"nofollow noreferrer\">actix-web</a>, I encountered apparently inconsistent behavior of Rust closures that do not know how to explain.</p>\n\n<p>I had the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_web::{web, App, HttpServer};\n\n#[derive(Clone)]\nstruct Config {\n    val1: String,\n    val2: String,\n    val3: String,\n}\n\nfn main() {\n    let conf = Config {\n        val1: \"just\".to_string(),\n        val2: \"some\".to_string(),\n        val3: \"data\".to_string(),\n    };\n\n    HttpServer::new(move ||\n        App::new().configure(create_config(&amp;conf))\n    )\n        .bind(\"127.0.0.1:8088\")\n        .unwrap()\n        .run()\n        .unwrap();\n}\n\nfn create_config&lt;'a&gt;(conf: &amp;'a Config) -&gt; impl FnOnce(&amp;mut web::ServiceConfig) + 'a {\n    move |app: &amp;mut web::ServiceConfig| {\n        // Have to clone config because web::get().to by definition requires\n        // its argument to have static lifetime, which is longer than 'a\n        let my_own_conf_clone = conf.clone();\n        app.service(\n            web::scope(\"/user\")\n                .route(\"\", web::get().to(move || get_user(&amp;my_own_conf_clone)))\n        );\n    }\n}\n\nfn get_user(conf: &amp;Config) -&gt; String {\n    println!(\"Config {} is {} here!\", conf.val3, conf.val1);\n    \"User McUser\".to_string()\n}\n</code></pre>\n\n<p>This code works. Notice the closure I pass to <code>web::get().to</code>. I used it to pass the <code>Config</code> object down to <code>get_user</code> and still present <code>web::get().to</code> with a function that has no arguments, as it requires. At this point I decided to move the closure generation to a separate function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn create_config&lt;'a&gt;(conf: &amp;'a Config) -&gt; impl FnOnce(&amp;mut web::ServiceConfig) + 'a {\n    move |app: &amp;mut web::ServiceConfig| {\n        app.service(\n            web::scope(\"/user\")\n                .route(\"\", web::get().to(gen_get_user(conf)))\n        );\n    }\n}\n\nfn gen_get_user(conf: &amp;Config) -&gt; impl Fn() -&gt; String {\n    let my_own_conf_clone = conf.clone();\n    move || get_user(&amp;my_own_conf_clone)\n}\n\nfn get_user(conf: &amp;Config) -&gt; String {\n    println!(\"Config {} is {} here!\", conf.val3, conf.val1);\n    \"User McUser\".to_string()\n}\n</code></pre>\n\n<p>This code fails to compile with the following error:</p>\n\n<pre><code>error[E0277]: the trait bound `impl std::ops::Fn&lt;()&gt;: actix_web::handler::Factory&lt;_, _&gt;` is not satisfied\n  --&gt; src/main.rs:30:39\n   |\n30 |       .route(\"\", web::get().to(gen_get_user(conf)))\n   |                             ^^ the trait `actix_web::handler::Factory&lt;_, _&gt;` is not implemented for `impl std::ops::Fn&lt;()&gt;`\n\n</code></pre>\n\n<p>Why does it fail in the second case but not in first? Why was the trait <code>Factory</code> satisfied in the first case but isn't in the second? May be it's the factory's (its sources are <a href=\"https://docs.rs/actix-web/1.0.8/src/actix_web/handler.rs.html\" rel=\"nofollow noreferrer\">here</a>) fault? Is there a different way to return a closure, that would work in this situation? Any other approaches you could suggest? (Notice that <code>Factory</code> is not public so I cannot implement it directly myself)</p>\n\n<p>If you wish to fool around with the code, I have it here: <a href=\"https://github.com/yanivmo/rust-closure-experiments\" rel=\"nofollow noreferrer\">https://github.com/yanivmo/rust-closure-experiments</a>\nNotice that you can move between the commits to see the code in its working or failing states.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 2, "creation_date": 1572678351, "post_id": 58668949, "comment_id": 103640223, "body": "<code>&amp;x</code> on the left side of binding <b>removes</b> one layer of reference, so here simply <code>Some(x)</code> will work."}, {"owner": {"reputation": 61, "user_id": 8199590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24b352e350c7b225a2c9deddf8c1a34c?s=128&d=identicon&r=PG&f=1", "display_name": "ji chengde", "link": "https://stackoverflow.com/users/8199590/ji-chengde"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1572682603, "post_id": 58668949, "comment_id": 103640823, "body": "@edwardw I see, apprently i have mixed up pattern matching and reference delaration, thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 3, "last_activity_date": 1593018583, "last_edit_date": 1593018583, "creation_date": 1572679326, "answer_id": 58669067, "question_id": 58668949, "link": "https://stackoverflow.com/questions/58668949/how-to-match-against-somet/58669067#58669067", "title": "How to match against Some(&amp;T)?", "body": "<blockquote>\n<p>I thought <code>std::Vec&lt;T&gt;::get</code> returns <code>Some(&amp;T)</code> on success</p>\n</blockquote>\n<p>Yes, you get an <code>Option</code> over a reference. Said otherwise, <code>x</code>, in <code>Some(x)</code> is a reference over the <code>Foo</code> instance.</p>\n<p>But you <em>do want</em> a reference: the only way to print the element without removing it from the vector is to pass a reference to <code>println</code>, not the element itself. That's why</p>\n<pre><code>Some(x) =&gt; println!(&quot;ref {:?}&quot;, x),\n</code></pre>\n<p>is the right way.</p>\n<p>When you do</p>\n<pre><code>Some(&amp;x) =&gt; println!(&quot;ref {:?}&quot;, x),\n</code></pre>\n<p>on the other way, as <code>&amp;x</code> is the reference over the Foo instance, <code>x</code> is the <code>Foo</code> instance, and thus you'd be moving it out of the vector when matching, which you can't do with a shared reference you got with <code>get</code> (and something you certainly don't want to do anyway).</p>\n"}], "owner": {"reputation": 61, "user_id": 8199590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24b352e350c7b225a2c9deddf8c1a34c?s=128&d=identicon&r=PG&f=1", "display_name": "ji chengde", "link": "https://stackoverflow.com/users/8199590/ji-chengde"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "closed_date": 1593018612, "answer_count": 1, "score": 0, "last_activity_date": 1593018627, "creation_date": 1572678190, "last_edit_date": 1593018552, "question_id": 58668949, "link": "https://stackoverflow.com/questions/58668949/how-to-match-against-somet", "closed_reason": "Duplicate", "title": "How to match against Some(&amp;T)?", "body": "<p>The following code won't compile:</p>\n<pre><code>#[derive(Debug)]\nstruct Foo {\n    x: i32,\n}\n\npub fn main() {\n    let a = vec![Foo { x: 1 }, Foo { x: 2 }];\n    match a.get(0) {\n        Some(&amp;x) =&gt; println!(&quot;ref {:?}&quot;, x),\n        None =&gt; {}\n    }\n}\n</code></pre>\n<p>Throws this error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of a shared reference\n --&gt; src/main.rs:8:11\n  |\n8 |     match a.get(0) {\n  |           ^^^^^^^^\n9 |         Some(&amp;x) =&gt; println!(&quot;ref {:?}&quot;, x),\n  |               -\n  |               |\n  |               data moved here\n  |               move occurs because `x` has type `Foo`, which does not implement the `Copy` trait\n</code></pre>\n<p>I thought <code>std::Vec&lt;T&gt;::get</code> returns <code>Some(&amp;T)</code> on success. Doesn't that mean an ampersand should be used in pattern matching?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1572678043, "post_id": 58668873, "comment_id": 103640185, "body": "That snippet is intended to show what <code>Iterator</code>\u2019s <code>any</code> looks like (\u201cits signature\u201d). It doesn\u2019t go in your code."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 12311225, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Daiajo Tibdixious", "link": "https://stackoverflow.com/users/12311225/daiajo-tibdixious"}, "edited": false, "score": 0, "creation_date": 1572768610, "post_id": 58669081, "comment_id": 103657114, "body": "Thanks, removing the Iterator stuff made it work. I never would have guessed to do that."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": false, "score": 2, "last_activity_date": 1572679540, "creation_date": 1572679540, "answer_id": 58669081, "question_id": 58668873, "link": "https://stackoverflow.com/questions/58668873/rust-by-example-closure-iterator-any-gives-e0308/58669081#58669081", "title": "rust by example: closure iterator any gives E0308", "body": "<p>In the example, the part with the trait,</p>\n\n<pre><code>pub trait Iterator {\n    // The type being iterated over.\n    type Item;\n\n    // `any` takes `&amp;mut self` meaning the caller may be borrowed\n    // and modified, but not consumed.\n    fn any&lt;F&gt;(&amp;mut self, f: F) -&gt; bool\n    where\n        // `FnMut` meaning any captured variable may at most be\n        // modified, not consumed. `Self::Item` states it takes\n        // arguments to the closure by value.\n        F: FnMut(Self::Item) -&gt; bool,\n    {}\n}\n</code></pre>\n\n<p>is simply showing you the <em>signature</em> of the method. Specifically, it's telling you what arguments it takes, what generic types it uses, and what type it returns. It's not meant to be executed, and indeed is the source of the compile error you're seeing.</p>\n\n<p>The specific error is saying that that <code>any</code> should return <code>bool</code> but right now it's returning <code>()</code> (the unit type which has a unique element). The reason for this is all in the little <code>{}</code> near the end. This is actually an empty function body which will implicitly return <code>()</code> if it doesn't have a return statement or anything else that might return.</p>\n\n<p>If you just want to make the example compile, you could simply remove that chunk (the whole <code>pub trait ...</code> block) since it's not really part of the example. Even if you fix it and keep it in, the <code>any</code> used in the rest of the example won't be this one anyway, but rather the <code>any</code> method defined on the real <code>Iterator</code> trait in the standard library.</p>\n"}], "owner": {"reputation": 1, "user_id": 12311225, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Daiajo Tibdixious", "link": "https://stackoverflow.com/users/12311225/daiajo-tibdixious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1572679540, "creation_date": 1572677319, "question_id": 58668873, "link": "https://stackoverflow.com/questions/58668873/rust-by-example-closure-iterator-any-gives-e0308", "title": "rust by example: closure iterator any gives E0308", "body": "<p>I've been trying the Rust by Example book code, but am stumped on <a href=\"https://doc.rust-lang.org/stable/rust-by-example/fn/closures/closure_examples/iter_any.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/stable/rust-by-example/fn/closures/closure_examples/iter_any.html</a></p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; Function.rs:81:95\n81 |         fn any &lt; F &gt;  ( &amp; mut self , mut f: F ) -&gt; bool where F: FnMut ( Self::Item ) -&gt; bool {}\n   |                                                                                               ^^ expected bool, found ()\n</code></pre>\n\n<p>The full snippet I'm using is:</p>\n\n<pre><code>fn closure_iterator_any ( v1a: i32 , v1b: i32 , v1c: i32 , v2a: i32 , v2b: i32 , v2c: i32 )\n  {\n    pub trait Iterator\n      {\n        type Item ; // type of item being iterated over\n        fn any &lt; F &gt;  ( &amp; mut self , mut f: F ) -&gt; bool where F: FnMut ( Self::Item ) -&gt; bool {}\n      }\n    let vec1 = vec! [ v1a , v1b , v1c ] ;\n    let vec2 = vec! [ v2a , v2b , v2c ] ;\n    println! ( \"2 in vector 1: {}\" , vec1 . iter () . any ( |&amp;x| x == 2 ) ) ; // iter returns &amp;i32\n    println! ( \"2 in vector 2: {}\" , vec2 . into_iter () . any ( |x| x == 2 ) ) ; // into returns i32\n\n    let array1 = [ v1a , v1b , v1c ] ;\n    let array2 = [ v2a , v2b , v2c ] ;\n    println! ( \"2 in array 1: {}\" , array1 . iter () . any ( |&amp;x| x == 2 ) ) ;\n    println! ( \"2 in array 2: {}\" , array2 . into_iter () . any ( |&amp;x| x == 2 ) ) ;\n\n  }\n</code></pre>\n\n<p>I know there is excessive whitespace, when learning a new language I like to know where I can put space and where I can't. I don't really understand closures yet either.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572663915, "post_id": 58667821, "comment_id": 103638668, "body": "If this were to compile, and <code>self.handles</code> contained the same index twice, you could use this iterator to get two <code>&amp;mut</code> references to the same element."}], "owner": {"reputation": 13, "user_id": 6272198, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Z8q.png?s=128&g=1", "display_name": "kooparse", "link": "https://stackoverflow.com/users/6272198/kooparse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 244, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1572662121, "creation_date": 1572662121, "question_id": 58667821, "link": "https://stackoverflow.com/questions/58667821/how-to-return-an-iterator-trait-with-mutable-ref-as-item", "title": "How to return an Iterator trait with mutable ref as Item?", "body": "<p>I am trying to return an <code>Iterator</code> trait with a mutable ref as <code>item</code>. And I can't figure out why I am having this compiler error \n<code>cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements</code> and also <code>expected &amp;mut T, found &amp;mut T</code> for this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn iter_mut(&amp;mut self) -&gt; impl Iterator&lt;Item = &amp;mut T&gt; {\n    self.handles\n        .iter_mut()\n        .filter(|h| h.is_dirty == false)\n        .map(move |h| &amp;mut self.data[h.value])\n}\n</code></pre>\n\n<p>Also the immutable version of it works well without any compiler errors:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn iter(&amp;self) -&gt; impl Iterator&lt;Item = &amp;T&gt; {\n    self.handles\n        .iter()\n        .filter(|h| h.is_dirty == false)\n        .map(move |h| &amp;self.data[h.value])\n}\n</code></pre>\n\n<p>I tried to clarify the compiler with some lifetimes, but I keep having this error. </p>\n\n<p>I setup a playground here <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3e399936f341d26c742a5e7e0bac4d89\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3e399936f341d26c742a5e7e0bac4d89</a> (L138).<br></p>\n\n<p>Also, I tried to implement the <code>iter_mut()</code> method myself (as <a href=\"https://doc.rust-lang.org/src/core/slice/mod.rs.html#560\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/src/core/slice/mod.rs.html#560</a>) but without success. Same error, and even if I bypass this error, <code>handles</code> is scoped so the lifetime would not follow.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn iter_mut(&amp;mut self) -&gt; IterMut&lt;'_, &amp;T&gt; {\n    let handles: Vec&lt;&amp;T&gt; = self.handles\n        .iter()\n        .filter(|h| h.is_dirty == false)\n        .map(move |h| &amp;self.data[h.value])\n        .collect();\n\n    unsafe {\n        let ptr = handles.as_mut_ptr();\n        let end = ptr.add(handles.len());\n\n        IterMut {\n            ptr,\n            end,\n            _marker: marker::PhantomData\n        }\n\n    }\n}\n</code></pre>\n\n<p>If one of you have any idea for this error, don't hesitate! :)\nThanks!</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572735476, "post_id": 58667800, "comment_id": 103653126, "body": "To clarify the last point: no, you can&#39;t write a regular function that takes its parameters by implicit reference; that&#39;s only possible with the <code>format!</code>/<code>println!</code> family because they are macros."}], "owner": {"reputation": 61, "user_id": 8199590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24b352e350c7b225a2c9deddf8c1a34c?s=128&d=identicon&r=PG&f=1", "display_name": "ji chengde", "link": "https://stackoverflow.com/users/8199590/ji-chengde"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 34, "favorite_count": 0, "closed_date": 1572669771, "answer_count": 0, "score": 1, "last_activity_date": 1572662611, "creation_date": 1572661850, "last_edit_date": 1572662611, "question_id": 58667800, "link": "https://stackoverflow.com/questions/58667800/how-does-rusts-println-deal-with-arguments-ownerships", "closed_reason": "Duplicate", "title": "how does rust&#39;s println deal with arguments&#39; ownerships?", "body": "<p>The question arises from following code:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Foo {\n  x: i32,\n}\n\npub fn main() {\n  let a = vec![Foo{x:1}, Foo{x:2}];\n  println!(\"{:?}\", a[1]);\n  println!(\"{:?}\", &amp;a[1]);\n  println!(\"{:?}\", *(&amp;a[1]));\n}\n</code></pre>\n\n<p>After <code>cargo run</code>, the code outputs:</p>\n\n<pre><code>Foo { x: 2 }\nFoo { x: 2 }\nFoo { x: 2 }\n</code></pre>\n\n<p>Which caused me wondering:</p>\n\n<ol>\n<li>Why <code>println!(\"{:?}\", a[1])</code> won't take ownership of 2nd element?</li>\n<li>What are differences between passing by reference and by value under this circumstance?</li>\n<li>Is it possible to implement similar functions capable of accepting parameters by value(without taking ownership) and by reference, without resorting to macro system?</li>\n</ol>\n"}, {"tags": ["rust", "serde"], "answers": [{"comments": [{"owner": {"reputation": 5962, "user_id": 3873510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/YpJMi.jpg?s=128&g=1", "display_name": "Paul Razvan Berg", "link": "https://stackoverflow.com/users/3873510/paul-razvan-berg"}, "edited": false, "score": 0, "creation_date": 1611007695, "post_id": 58668200, "comment_id": 116307903, "body": "Hey @otolock, I am also facing trouble with <code>OpenOptions</code>. Could you shed more light on in what circumstances did the file pointer end up at the end of the file?"}], "tags": [], "owner": {"reputation": 470, "user_id": 1442743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/30f300466169a5ea004f07177794cbe9?s=128&d=identicon&r=PG&f=1", "display_name": "otolock", "link": "https://stackoverflow.com/users/1442743/otolock"}, "is_accepted": false, "score": 2, "last_activity_date": 1572668214, "creation_date": 1572668214, "answer_id": 58668200, "question_id": 58667628, "link": "https://stackoverflow.com/questions/58667628/writing-to-file-with-appendfalse-doesnt-work-as-expected/58668200#58668200", "title": "Writing to file with Append(false) doesn&#39;t work as expected", "body": "<p>Members of the Rust Discord community pointed out that by using <code>OpenOptions</code>, the file pointer was ending up at the end of the file when I wrote to it. They suggested I use fs::read and fs::write, and that worked. I then added some code to handle cases where the file did not already exist. </p>\n\n<p>The <code>main()</code> function would then need to look something like this: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() -&gt; std::io::Result&lt;()&gt; {\n    let f = File::open(\"books.json\");\n\n    let _ = match f {\n        Ok(file) =&gt; file,\n        Err(error) =&gt; match error.kind() {\n            ErrorKind::NotFound =&gt; match File::create(\"books.json\") {\n                Ok(fc) =&gt; fc,\n                Err(e) =&gt; panic!(\"Problem creating the file: {:?}\", e),\n            },\n        },\n    };\n\n    let data = fs::read_to_string(\"books.json\").expect(\"Unable to read file\");\n\n    let mut bookshelf: Vec&lt;Book&gt; = Vec::new();\n    if fs::metadata(\"books.json\").unwrap().len() != 0 {\n        bookshelf = serde_json::from_str(&amp;data)?;\n    }\n\n    let book = Book {\n        title: \"The Institute\".to_string(),\n        author: \"Stephen King\".to_string(),\n        isbn: \"9781982110567\".to_string(),\n        pub_year: 2019,\n    };\n\n    bookshelf.push(book);\n\n    let json: String = serde_json::to_string(&amp;bookshelf)?;\n\n    fs::write(\"books.json\", &amp;json).expect(\"Unable to write file\");\n\n    println!(\"{}\", &amp;json);\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 470, "user_id": 1442743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/30f300466169a5ea004f07177794cbe9?s=128&d=identicon&r=PG&f=1", "display_name": "otolock", "link": "https://stackoverflow.com/users/1442743/otolock"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 573, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1572668214, "creation_date": 1572659295, "question_id": 58667628, "link": "https://stackoverflow.com/questions/58667628/writing-to-file-with-appendfalse-doesnt-work-as-expected", "title": "Writing to file with Append(false) doesn&#39;t work as expected", "body": "<p>I am learning to program with Rust and decided to build a CLI to manage my personal library. I'm still working on a quick proof of concept before going further so I have the barebones of what I need to work. </p>\n\n<p>I am saving data to a file called \"books.json\" using <code>std::fs</code> and <code>serde_json</code>. The program works great the first time I run it, but on the second run, instead of overwriting the file, it is appending the data (for test purposes, it would add the same book twice). </p>\n\n<p>Here's the code I have written so far. By using <code>OpenOptions.append(false)</code>, shouldn't the file be overwritten when I write to it? </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::{Deserialize, Serialize};\nuse serde_json::Error;\nuse std::fs;\nuse std::fs::File;\nuse std::io::Read;\nuse std::io::Write;\n\n#[derive(Serialize, Deserialize)]\nstruct Book {\n    title: String,\n    author: String,\n    isbn: String,\n    pub_year: usize,\n}\n\nfn main() -&gt; Result&lt;(), serde_json::Error&gt; {\n    let mut file = fs::OpenOptions::new()\n        .read(true)\n        .write(true)\n        .append(false)\n        .create(true)\n        .open(\"books.json\")\n        .expect(\"Unable to open\");\n    let mut data = String::new();\n    file.read_to_string(&amp;mut data);\n\n    let mut bookshelf: Vec&lt;Book&gt; = Vec::new();\n    if file.metadata().unwrap().len() != 0 {\n        bookshelf = serde_json::from_str(&amp;data)?;\n    }\n\n    let book = Book {\n        title: \"The Institute\".to_string(),\n        author: \"Stephen King\".to_string(),\n        isbn: \"9781982110567\".to_string(),\n        pub_year: 2019,\n    };\n\n    bookshelf.push(book);\n\n    let j: String = serde_json::to_string(&amp;bookshelf)?;\n\n    file.write_all(j.as_bytes()).expect(\"Unable to write data\");\n\n    Ok(())\n}\n</code></pre>\n\n<p>books.json after running the program twice: </p>\n\n<pre><code>[{\"title\":\"The Institute\",\"author\":\"Stephen King\",\"isbn\":\"9781982110567\",\"pub_year\":2019}]\n[{\"title\":\"The Institute\",\"author\":\"Stephen King\",\"isbn\":\"9781982110567\",\"pub_year\":2019},\n{\"title\":\"The Institute\",\"author\":\"Stephen King\",\"isbn\":\"9781982110567\",\"pub_year\":2019}]%\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572657206, "post_id": 58667272, "comment_id": 103637852, "body": "If the example compiled, what would you expect <code>get_foo_by_id(4)</code> to return?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572657481, "post_id": 58667272, "comment_id": 103637895, "body": "<a href=\"https://users.rust-lang.org/t/need-help-getting-item-struct-by-id-from-list-and-return-that-item-beginner/34236\" rel=\"nofollow noreferrer\">This question was also posted to users.rust-lang.org.</a>"}], "owner": {"reputation": 112, "user_id": 3320856, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/e548252f240deaf5ad8f4c0e4aa0ac1a?s=128&d=identicon&r=PG&f=1", "display_name": "Hannes", "link": "https://stackoverflow.com/users/3320856/hannes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 32, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1572654393, "creation_date": 1572654393, "question_id": 58667272, "link": "https://stackoverflow.com/questions/58667272/need-help-getting-item-struct-by-id-from-list-and-return-that-item-beginner", "title": "Need help getting item (struct) by id from list and return that item. (beginner)", "body": "<p>I want to create a list containing structs. Then get specific item from list and return in a function. What am I doing wrong. Im very new to this language but I have tried to look at the documentation but I would love a helping hand. Anyone know how to do this?</p>\n\n<pre><code>struct Foo{\n    id: u8,\n    name: String\n}\n\nfn get_foo_by_id(id: u8) -&gt; Foo {\n\n    let mut foo_1 = Attraction {\n        id: 2,\n        name: String::from(\"Foo 1\"),        \n    };\n\n    let mut foo_2 = Attraction {\n        id: 2,\n        name: String::from(\"Foo 2\"),        \n    };\n\n    let mut foo_3 = Attraction {\n        id: 3,\n        name: String::from(\"Foo 3\"),        \n    };\n\n    let mut listOfFoos: Vec&lt;Foo&gt; = Vec::new();\n    listOfFoos.push(foo_1);\n    listOfFoos.push(foo_2);\n    listOfFoos.push(foo_3);\n\n    let mut iter = listOfFoos.into_iter().find(|a| a.id == id);\n    println!(\"{}\",iter.name); //Error: no field `name` on type `std::option::Option&lt;Attraction&gt;`\n    iter //Error: ^^^^ expected struct `Foo`, found enum `std::option::Option`\n}\n</code></pre>\n"}, {"tags": ["rust", "static-variables", "variable-declaration"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1572648429, "post_id": 58666642, "comment_id": 103636345, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/30145814/how-do-i-declare-a-static-mutable-variable-without-assignment\">How do I declare a static mutable variable without assignment?</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1572648464, "post_id": 58666642, "comment_id": 103636350, "body": "You need to make the variable global. If you declare it within a function, it is accessible only by that function by design."}, {"owner": {"reputation": 2347, "user_id": 6039980, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b0b2c9fe841b1965d6bdcdd50c300c63?s=128&d=identicon&r=PG&f=1", "display_name": "user6039980", "link": "https://stackoverflow.com/users/6039980/user6039980"}, "reply_to_user": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1572648582, "post_id": 58666642, "comment_id": 103636382, "body": "@SCappella It&#39;s not the same case, because what I&#39;m looking for is using the same variable in two functions."}, {"owner": {"reputation": 2347, "user_id": 6039980, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b0b2c9fe841b1965d6bdcdd50c300c63?s=128&d=identicon&r=PG&f=1", "display_name": "user6039980", "link": "https://stackoverflow.com/users/6039980/user6039980"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1572649627, "post_id": 58666642, "comment_id": 103636564, "body": "@mcarton Thanks for the tip. Using lazy_static helped out."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1572648420, "post_id": 58666700, "comment_id": 103636340, "body": "What he really wants is to share the static variable between two functions."}, {"owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1572648524, "post_id": 58666700, "comment_id": 103636364, "body": "@mcarton Yes, that is the X of the XY, but I answered the actual question posted in the title, the Y. I added a clarification."}], "tags": [], "owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "is_accepted": true, "score": 2, "last_activity_date": 1572648967, "last_edit_date": 1572648967, "creation_date": 1572648335, "answer_id": 58666700, "question_id": 58666642, "link": "https://stackoverflow.com/questions/58666642/how-is-it-possible-to-share-a-static-variable-between-functions/58666700#58666700", "title": "How is it possible to share a static variable between functions?", "body": "<p>You cannot declare static variables that are not initialized, because the Rust compiler assumes that all variables are initialized.</p>\n\n<p>If you really want to do it, you will want to use <a href=\"https://doc.rust-lang.org/std/mem/union.MaybeUninit.html\" rel=\"nofollow noreferrer\"><code>std::mem::MaybeUninit</code></a>.</p>\n\n<p>However, even if you did that, it wouldn't solve your original issue (sharing a static variable between functions). Each static in your example is independent of each other.</p>\n\n<p>Therefore, you will need to make a global static variable.</p>\n"}], "owner": {"reputation": 2347, "user_id": 6039980, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b0b2c9fe841b1965d6bdcdd50c300c63?s=128&d=identicon&r=PG&f=1", "display_name": "user6039980", "link": "https://stackoverflow.com/users/6039980/user6039980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 963, "favorite_count": 0, "closed_date": 1603060849, "accepted_answer_id": 58666700, "answer_count": 1, "score": 1, "last_activity_date": 1603060863, "creation_date": 1572647823, "last_edit_date": 1572715632, "question_id": 58666642, "link": "https://stackoverflow.com/questions/58666642/how-is-it-possible-to-share-a-static-variable-between-functions", "closed_reason": "Duplicate", "title": "How is it possible to share a static variable between functions?", "body": "<p>I'm trying to define a static variable within a function <code>f0</code> and re-use it within another function <code>f1</code>.</p>\n\n<pre><code>fn f0() {\n    static v: i32 = 10;\n}\n\nfn f1() {\n    static v: i32; // the compiler reports a syntax error for this statement\n}\n</code></pre>\n\n<p>However, because it wasn't assigned to any value in the second function, the compiler reported an error saying:</p>\n\n<blockquote>\n  <p>expected one of <code>!</code>, <code>(</code>, <code>+</code>, <code>::</code>, <code>&lt;</code>, or <code>=</code>, found <code>;</code></p>\n</blockquote>\n\n<p>I'm using nightly Rust toolchain: <strong>rustc 1.40.0-nightly</strong>.</p>\n\n<p>This sounds little odd, since declaring a static variable doesn't require value assignment by nature.</p>\n\n<p>What's supposed to cause the problem?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1572634499, "post_id": 58664234, "comment_id": 103632103, "body": "Hi there! Are you using Cargo? Do you have a <code>src&#47;lib.rs</code> or <code>src&#47;main.rs</code>? Have you seen <a href=\"https://stackoverflow.com/q/26388861/2408867\">this</a> or <a href=\"https://stackoverflow.com/q/45519176/2408867\">this</a> Q&amp;A? Do they help?"}, {"owner": {"reputation": 247, "user_id": 3698971, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/9d2c44d683562168e400546a64e1a04c?s=128&d=identicon&r=PG&f=1", "display_name": "user3698971", "link": "https://stackoverflow.com/users/3698971/user3698971"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1572635013, "post_id": 58664234, "comment_id": 103632292, "body": "@LukasKalbertodt you comment helped a lot, please see my answer. Thanks"}], "answers": [{"tags": [], "owner": {"reputation": 247, "user_id": 3698971, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/9d2c44d683562168e400546a64e1a04c?s=128&d=identicon&r=PG&f=1", "display_name": "user3698971", "link": "https://stackoverflow.com/users/3698971/user3698971"}, "is_accepted": true, "score": 1, "last_activity_date": 1572638090, "last_edit_date": 1572638090, "creation_date": 1572634929, "answer_id": 58664518, "question_id": 58664234, "link": "https://stackoverflow.com/questions/58664234/import-code-from-multiple-directories-in-rust/58664518#58664518", "title": "Import code from multiple directories in Rust", "body": "<p>After looking online, and after Lukas comment, I found the solution. I will try to summarise it here. </p>\n\n<p>I had to create a new file named lib.rs outside of the folders: </p>\n\n<pre><code>src/\n  test_1/\n     mod.rs &lt;- inside here I have put: pub mod a, and pub mod b\n     a.rs\n     b.rs\n  tes_2/ \n     mod.rs &lt;- inside here I have put: pub mod a1, and pub mod b1\n     a1.rs\n     b1.rs\n  test_3/\n     mod.rs&lt;- inside here I have put: pub mod a2, and pub mod b2\n     a2.rs\n     b2.rs\n  lib.rs \n</code></pre>\n\n<p>Inside this file I added the following code: </p>\n\n<pre><code>pub mod test_1\npub mod test_2\npub mod test_3\n</code></pre>\n\n<p>And it worked! I can now import code from different files using the <code>use crate</code> command: </p>\n\n<p>Example:\n<code>use create::test_1::a1::function_name;</code></p>\n"}], "owner": {"reputation": 247, "user_id": 3698971, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/9d2c44d683562168e400546a64e1a04c?s=128&d=identicon&r=PG&f=1", "display_name": "user3698971", "link": "https://stackoverflow.com/users/3698971/user3698971"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 58664518, "answer_count": 1, "score": 0, "last_activity_date": 1572638090, "creation_date": 1572633489, "question_id": 58664234, "link": "https://stackoverflow.com/questions/58664234/import-code-from-multiple-directories-in-rust", "title": "Import code from multiple directories in Rust", "body": "<p>Apologies, if it's a duplicate questions. I looked online / stackoverflow and I couldn't find the answer. I want to import modules from different folders / files in Rust. </p>\n\n<p>The structure of my files/ folders is the following:</p>\n\n<pre><code>src/\n  test_1/\n     mod.rs &lt;- inside here I have put: pub mod a, and pub mod b\n     a.rs\n     b.rs\n  tes_2/ \n     mod.rs &lt;- inside here I have put: pub mod a1, and pub mod b1\n     a1.rs\n     b1.rs\n  test_3/\n     mod.rs&lt;- inside here I have put: pub mod a2, and pub mod b2\n     a2.rs\n     b2.rs\n</code></pre>\n\n<p>I want to share code I have in <code>a.rs</code> with <code>a1.rs</code> and <code>a2.rs</code> or the code I have in <code>b2.rs</code> with <code>a.rs</code>. </p>\n\n<p>I have tried to add mod and use inside the files, I have also try many examples online but nothing worked. </p>\n\n<p>Can you please help? Thanks in advance.</p>\n"}, {"tags": ["rust", "constants", "traits"], "answers": [{"comments": [{"owner": {"reputation": 543, "user_id": 1039984, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/933bc6d13c42486433166bdee49b6e70?s=128&d=identicon&r=PG", "display_name": "Victor Ermolaev", "link": "https://stackoverflow.com/users/1039984/victor-ermolaev"}, "edited": false, "score": 0, "creation_date": 1572704868, "post_id": 58664465, "comment_id": 103645774, "body": "Great! thanks! Now I can safely (and should) remove <code>&amp;self</code> from the definition of <code>fun</code> (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8a30371e76f36fa10ee64724ed196a46\" rel=\"nofollow noreferrer\">playground</a>). Does it even make sense to ever have <code>&amp;self</code> in a default implementation of a function within the trait?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 543, "user_id": 1039984, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/933bc6d13c42486433166bdee49b6e70?s=128&d=identicon&r=PG", "display_name": "Victor Ermolaev", "link": "https://stackoverflow.com/users/1039984/victor-ermolaev"}, "edited": false, "score": 0, "creation_date": 1591282946, "post_id": 58664465, "comment_id": 110002887, "body": "@VictorErmolaev yes, for example the default implementation of <code>Iterator::nth</code> calls <code>self.next()</code> repeatedly. It probably only makes sense when there is at least one non-defaulted function in the trait though."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1572634681, "creation_date": 1572634681, "answer_id": 58664465, "question_id": 58664102, "link": "https://stackoverflow.com/questions/58664102/using-associated-constant-in-a-default-trait-implementation/58664465#58664465", "title": "Using associated constant in a default trait implementation", "body": "<p>The constant does not belong to a specific instance, but to the type itself. You must use <code>Self::CONST</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Trait {\n    const CONST: f64;\n    fn fun(&amp;self) -&gt; f64 {\n        1.0 + Self::CONST\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=67da7266e61f48bd06497f40fcfbae15\" rel=\"noreferrer\">Permalink to the playground</a>)</p>\n"}], "owner": {"reputation": 543, "user_id": 1039984, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/933bc6d13c42486433166bdee49b6e70?s=128&d=identicon&r=PG", "display_name": "Victor Ermolaev", "link": "https://stackoverflow.com/users/1039984/victor-ermolaev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 58664465, "answer_count": 1, "score": 3, "last_activity_date": 1572634681, "creation_date": 1572632729, "question_id": 58664102, "link": "https://stackoverflow.com/questions/58664102/using-associated-constant-in-a-default-trait-implementation", "title": "Using associated constant in a default trait implementation", "body": "<p>I would like to accomplish the following</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Trait {\n    const CONST: f64;\n    fn fun(&amp;self) -&gt; f64 {\n        1.0 + self.CONST\n    }\n}\n</code></pre>\n\n<p>and then define a bunch of <code>struct</code>-s implementing the <code>Trait</code> with different constants.\nSuch as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Struct {}\nimpl Trait for Struct {\n    const CONST: f64 = 1.0;\n}\n</code></pre>\n\n<p>Unfortunately the former snippet does not compile. I can have both an associated constant and a default implementation, but seemingly I cannot use the const in the default implementation.\nIs this possible at all?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1572631016, "post_id": 58663614, "comment_id": 103630778, "body": "&quot;non-lexical&quot; doesn&#39;t mean that the borrow checker can understand every possible invariant of your system in order to prove that a borrow is safe. It just means it is not <i>only</i> constrained by lexical scope, as it was before. The term isn&#39;t particularly useful now that it is the default behaviour of the typechecker."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1572631163, "post_id": 58663614, "comment_id": 103630846, "body": "Does this question help? <a href=\"https://stackoverflow.com/questions/50519147/double-mutable-borrow-error-in-a-loop-happens-even-with-nll-on\" title=\"double mutable borrow error in a loop happens even with nll on\">stackoverflow.com/questions/50519147/&hellip;</a>"}, {"owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1572673901, "post_id": 58663614, "comment_id": 103639671, "body": "The other question answers this question, but apparently marking it so makes me unable to send another answer (a workaround) to this question. I&#39;m answering there to document the workaround."}], "owner": {"reputation": 2481, "user_id": 1106456, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/60b23f3de35058180807f35b623fcf83?s=128&d=identicon&r=PG", "display_name": "GolDDranks", "link": "https://stackoverflow.com/users/1106456/golddranks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 61, "favorite_count": 0, "closed_date": 1572673816, "answer_count": 0, "score": 3, "last_activity_date": 1572630374, "creation_date": 1572630374, "question_id": 58663614, "link": "https://stackoverflow.com/questions/58663614/a-borrow-checker-problem-with-a-loop-and-non-lexical-lifetimes", "closed_reason": "Duplicate", "title": "A borrow checker problem with a loop and non-lexical lifetimes", "body": "<p>This program that I minified from my actual program doesn't compile, and I'm unable to understand why. In my mind, the non-lexical lifetime support should have obviated this case. Is this a compiler bug or am I missing something?</p>\n\n<p>The point is that when a borrow happens with the call to <code>get</code>, it leads to a <code>State</code> that is borrowed from <code>self</code>. However, in case of <code>State::One</code>, the borrow should end and the next loop should be free of borrows. (According to my understanding of NLL, it should support these cases.) On the other hand, in case of <code>State::Two</code> a value originally borrowed from <code>self</code> is returned. The function signature states this is the case, and there shouldn't be any problem with that, as the loop terminates with the return <code>self</code> isn't used anymore.</p>\n\n<p>A playground link: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=da8ca1dd9d5449eb1a6903d9a1e7ae41\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=da8ca1dd9d5449eb1a6903d9a1e7ae41</a></p>\n\n<pre><code>struct Inner;\n\nenum State&lt;'a&gt; {\n    One,\n    Two(&amp;'a ()),\n}\n\nfn get&lt;'s&gt;(_inner: &amp;'s mut Inner) -&gt; State&lt;'s&gt; {\n    unimplemented!()\n}\n\nstruct Outer {\n    inner: Inner,\n}\n\nimpl Outer {\n    pub fn read&lt;'s&gt;(&amp;'s mut self) -&gt; &amp;'s () {\n        loop {\n            match get(&amp;mut self.inner) {\n                State::One =&gt; (), // In this case nothing happens, the borrow should end and the loop should continue\n                State::Two(a) =&gt; return a, // self.inner ought to be borrowed for 's, that's just to be expected\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "cairo", "gtk-rs"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1572626326, "post_id": 58662749, "comment_id": 103628682, "body": "&quot;Regions are a simple graphical data type representing an area of integer-aligned rectangles. They are often used on raster surfaces to track areas of interest, such as change or clip areas.&quot;, <a href=\"https://cairographics.org/manual/cairo-Regions.html\" rel=\"nofollow noreferrer\">cairographics.org/manual/cairo-Regions.html</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1572626345, "post_id": 58662749, "comment_id": 103628697, "body": "In what word do you expect this to be something else than rectangle ? cairo crate is a binding read the original doc"}, {"owner": {"reputation": 1507, "user_id": 4296244, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/e8c0940effc84e18a8541145ef2dfbfe?s=128&d=identicon&r=PG&f=1", "display_name": "Natjo", "link": "https://stackoverflow.com/users/4296244/natjo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572630605, "post_id": 58662749, "comment_id": 103630590, "body": "I see only rectangles makes sense. I got the idea from this question: <a href=\"https://stackoverflow.com/questions/48029084/creating-an-irregularly-shaped-gdk-window\" title=\"creating an irregularly shaped gdk window\">stackoverflow.com/questions/48029084/&hellip;</a> in which it sounded like you could get any shaped regions."}], "owner": {"reputation": 1507, "user_id": 4296244, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/e8c0940effc84e18a8541145ef2dfbfe?s=128&d=identicon&r=PG&f=1", "display_name": "Natjo", "link": "https://stackoverflow.com/users/4296244/natjo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 40, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1572626115, "creation_date": 1572626115, "question_id": 58662749, "link": "https://stackoverflow.com/questions/58662749/create-custom-shaped-cairoregion", "title": "Create custom shaped Cairo::Region", "body": "<p>Looking through the documentation of <a href=\"https://gtk-rs.org/docs/cairo/struct.Region.html\" rel=\"nofollow noreferrer\">cairo::Region</a> I can't find any functions allowing me to create not rectangle shaped regions. Did I miss something or is this simply not possible?</p>\n"}, {"tags": ["generics", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "edited": false, "score": 0, "creation_date": 1572796796, "post_id": 58662939, "comment_id": 103663445, "body": "Thank you a lot but I still have some questions. As a more experienced rustacean, would you settle with the first approach (since you seem to like that one) or would you implement it in a more complex manner? Also <i>how</i> would you check if a clone is expensive? As for the question if it&#39;s possible to implement this struct without the <code>TCalc</code> type, do you have an answer for that?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "edited": false, "score": 0, "creation_date": 1572797269, "post_id": 58662939, "comment_id": 103663574, "body": "@Joelius There is no global right approach, it literally all depends on what you need to do with the value. A typical example of something expensive to clone is a large tree of elements, or something where a clone involves a ton of allocations. In cases like these, it makes very little sense to retrieve by value and instead retrieve by reference. As for the &quot;without the <code>TCalc</code> version&quot;, 90% of the time with the implementation I gave you, you will not need to specify either <code>TCalc</code> or <code>TVal</code> (type inference will do it for you)."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1572627068, "creation_date": 1572627068, "answer_id": 58662939, "question_id": 58660854, "link": "https://stackoverflow.com/questions/58660854/storing-a-generic-closure-in-a-struct/58662939#58662939", "title": "Storing a generic closure in a struct", "body": "<p>You're digging yourself in a hole. Let's take a step back to understand why this is happening.</p>\n\n<p>Your goal is to cache a <em>potentially expensive</em> computation in order not to have to repeat it on subsequent coals. This means, however, that the return of your call will either return a reference to the final result, or a full value.</p>\n\n<p>This choice is much, <em>much</em> more important than it looks like for your implementation.</p>\n\n<h1>The case where you return by value</h1>\n\n<p>Your <code>Cacher</code> struct then becomes:</p>\n\n<pre><code>struct Cacher&lt;TCalc, TVal: Clone&gt;\n    where TCalc: Fn() -&gt; TVal\n{\n    calculation: TCalc,\n    value: Option&lt;TVal&gt;,\n}\n</code></pre>\n\n<p>And your accessor then becomes:</p>\n\n<pre><code>fn value(&amp;mut self) -&gt; TVal {\n    match &amp;self.value {\n        Some(r) =&gt; r.clone(),\n        None =&gt; {\n            self.value = Some((self.calculation)());\n            self.value.clone().unwrap()\n        }\n    }\n}\n</code></pre>\n\n<p>This is clean and concise and relies on you passing the value as a clone of itself; a worthwhile thing to do when doing this is to check that this clone actually is a small-cost operation.</p>\n\n<h1>The reference approach</h1>\n\n<p>Your approach had two problems, which stem from your relative lack of experience in Rust (which is fine! We've all started somewhere):</p>\n\n<ol>\n<li>Because you return a reference, does <em>not</em> mean that the closure you're closing over needs to be a reference itself. In fact, it is actively harmful to make it so, as the closure can <em>already</em> close over other state. Having it be a reference is futile</li>\n<li>The lifetime bound is completely unnecessary</li>\n</ol>\n\n<p>As a result, we are left with the following:</p>\n\n<pre><code>struct Cacher&lt;TCalc, TVal&gt;\n    where TCalc: Fn() -&gt; TVal\n{\n    calculation: TCalc,\n    value: Option&lt;TVal&gt;,\n}\nimpl&lt;TCalc, TVal&gt; Cacher&lt;TCalc, TVal&gt;\n    where TCalc: Fn() -&gt; TVal {\n    pub fn new(calculation: TCalc) -&gt; Cacher&lt;TCalc, TVal&gt; {\n        Cacher {\n            calculation,\n            value: None\n        }\n    }\n    pub fn get_mut(&amp;mut self) -&gt; &amp;mut TVal {\n        if self.value.is_none() {\n            self.value = Some((self.calculation)());\n        }\n        self.value.as_mut().unwrap()\n    }\n}\n</code></pre>\n\n<p>This provides a mutable reference to its value, and creates it beforehand if it does not exist, thus fulfilling the requirements.</p>\n\n<p>There are still problems with this, most notoriously the fact that, if you wanted an immutable reference to the internal value, you'd still need a mutable borrow to the container, and that's something you can solve with an interior mutation structure, but that's a story for another day.</p>\n"}], "owner": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 58662939, "answer_count": 1, "score": 0, "last_activity_date": 1572627068, "creation_date": 1572618287, "question_id": 58660854, "link": "https://stackoverflow.com/questions/58660854/storing-a-generic-closure-in-a-struct", "title": "Storing a generic closure in a struct", "body": "<p>I'm currently in the process of learning Rust. In <a href=\"https://doc.rust-lang.org/book/ch13-01-closures.html\" rel=\"nofollow noreferrer\">chapter 13</a> of <em>the book</em> in the part, there is an example of a <a href=\"https://doc.rust-lang.org/book/ch13-01-closures.html#storing-closures-using-generic-parameters-and-the-fn-traits\" rel=\"nofollow noreferrer\"><code>Cacher</code> struct</a>. The idea behind a cacher is that the value is only evaluated once it's requested and then stored. In the example the cacher has an input of <code>i32</code> and also an output of <code>i32</code>. Since I wanted to make it a bit more useful, I wanted the cacher to not take any input and generate a value of any type (basically the <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.lazy-1\" rel=\"nofollow noreferrer\"><code>Lazy&lt;T&gt;</code> type from .NET</a> if you're familiar).</p>\n\n<p>My first idea was just modifying the given <code>Cacher</code> with generic annotations like so:</p>\n\n<pre><code>struct Cacher&lt;TCalc, TVal&gt;\n    where TCalc: Fn() -&gt; TVal\n{\n    calculation: TCalc,\n    value: Option&lt;TVal&gt;,\n}\n\nimpl&lt;TCalc, TVal&gt; Cacher&lt;TCalc, TVal&gt;\n    where TCalc: Fn() -&gt; TVal\n{\n    fn new(calculation: TCalc) -&gt; Cacher&lt;TCalc, TVal&gt; {\n        Cacher {\n            calculation,\n            value: None,\n        }\n    }\n\n    fn value(&amp;mut self) -&gt; TVal {\n        match self.value { // cannot move out of `self.value.0` which is behind a mutable reference\n            Some(v) =&gt; v,\n            None =&gt; {\n                let v = (self.calculation)();\n                self.value = Some(v);\n                v // use of moved value: `v`\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>As you can see annotated by the comments, this threw some errors my way in the <code>value</code> method.<br>\nI then tried many things and came up with a working solution for the <code>value</code> method. Note that it now returns <code>&amp;TVal</code> instead of <code>TVal</code> but that doesn't really bother me.</p>\n\n<pre><code>fn value(&amp;mut self) -&gt; &amp;TVal {\n    if let None = self.value {\n        let v = (self.calculation)();\n        self.value = Some(v);\n    }\n\n    self.value.as_ref().unwrap()\n}\n</code></pre>\n\n<p>I can create and use this cacher like so: </p>\n\n<pre><code>let mut expensive_val = Cacher::new(|| {\n    println!(\"Calculating value..\");\n    \"my result\"\n});\n\nprintln!(\"Cacher was created.\");\nprintln!(\"The value is '{}'.\", expensive_val.value());\nprintln!(\"The value is still '{}'.\", expensive_val.value());\n\n// Cacher was created.\n// Calculating value..\n// The value is 'my result'.\n// The value is still 'my result'.\n</code></pre>\n\n<p>This works just fine but I felt like having two type arguments is redundant for this so I tried to remove the first one (<code>TCalc</code>). After some research I came up with this:</p>\n\n<pre><code>struct Cacher&lt;'a, T&gt;\n{\n    calculation: &amp;'a dyn Fn() -&gt; T,\n    value: Option&lt;T&gt;,\n}\n\nimpl&lt;'a, T&gt; Cacher&lt;'a, T&gt;\n{\n    fn new(calculation: &amp;'a dyn Fn() -&gt; T) -&gt; Cacher&lt;T&gt; {\n        Cacher {\n            calculation,\n            value: None,\n        }\n    }\n\n    fn value(&amp;mut self) -&gt; &amp;T {\n        if let None = self.value {\n            let v = (self.calculation)();\n            self.value = Some(v);\n        }\n\n        self.value.as_ref().unwrap()\n    }\n}\n</code></pre>\n\n<p>This cacher still works but now I have to pass in a reference to the closure instead of the closure itself.</p>\n\n<pre><code>let mut expensive_val = Cacher::new(&amp;|| { // Note the &amp;\n    println!(\"Calculating value..\");\n    \"my result\"\n});\n</code></pre>\n\n<p>I don't really see any disadvantage in that but is there a way to do it without a reference? I mean with a single type parameter and while still passing in a closure instead of a reference. Simply trying to store the <code>Fn() -&gt; T</code> directly will result in <code>the size for values of type `(dyn std::ops::Fn() -&gt; T + 'static)` cannot be known at compilation time</code>.</p>\n\n<p>Ps. Maybe I've said some things that are just wrong or <em>not how you do it in rust</em> so if you can correct me on those, please do :)</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1056, "user_id": 3497181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e384ad3cea4b2ccaf03271303a94f1f?s=128&d=identicon&r=PG&f=1", "display_name": "rnstlr", "link": "https://stackoverflow.com/users/3497181/rnstlr"}, "is_accepted": true, "score": 1, "last_activity_date": 1572612760, "creation_date": 1572612760, "answer_id": 58659557, "question_id": 58659438, "link": "https://stackoverflow.com/questions/58659438/passing-different-trait-implementations-depending-on-runtime-value/58659557#58659557", "title": "Passing different trait implementations depending on runtime value", "body": "<p>Traits like your <code>CanDoIt</code> are non sized, because they are not a concrete type and thus can't be stored as values directly. One can only store a <a href=\"https://doc.rust-lang.org/1.30.0/book/2018-edition/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait object</a> like <code>Box&lt;dyn CanDoIt&gt;</code> or <code>&amp;dyn CanDoIt</code></p>\n\n<p>So for your example using <code>&amp;dyn CanDoIt</code> it would look like this:</p>\n\n<pre><code>struct MyStruct {}\n\nstruct MyStruct2 {}\n\ntrait CanDoIt {\n    fn do_it(&amp;self) -&gt; String;\n}\n\nimpl CanDoIt for MyStruct {\n    fn do_it(&amp;self) -&gt; String {\n        \"done\".into()\n    }\n}\n\n\nimpl CanDoIt for MyStruct2 {\n    fn do_it(&amp;self) -&gt; String {\n        \"done 2\".into()\n    }\n}\n\n\nfn do_a(value: &amp;dyn CanDoIt) -&gt; String {\n    value.do_it()\n}\n\n\nfn main() {\n    let s: &amp;dyn CanDoIt = if true {\n        &amp;MyStruct {}\n    } else {\n        &amp;MyStruct2 {}\n    };\n\n    println!(\"Done it: {}\", do_a(s))\n}\n</code></pre>\n"}], "owner": {"reputation": 12061, "user_id": 87191, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5a32c1cfc71ebf97967c5d6fd2cf2cf2?s=128&d=identicon&r=PG", "display_name": "simao", "link": "https://stackoverflow.com/users/87191/simao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 43, "favorite_count": 0, "accepted_answer_id": 58659557, "answer_count": 1, "score": 0, "last_activity_date": 1572612760, "creation_date": 1572612151, "question_id": 58659438, "link": "https://stackoverflow.com/questions/58659438/passing-different-trait-implementations-depending-on-runtime-value", "title": "Passing different trait implementations depending on runtime value", "body": "<p>I am trying to use something equivalent to the following code:</p>\n\n<pre><code>struct MyStruct {}\n\nstruct MyStruct2 {}\n\ntrait CanDoIt {\n    fn do_it(&amp;self) -&gt; String;\n}\n\nimpl CanDoIt for MyStruct {\n    fn do_it(&amp;self) -&gt; String {\n        \"done\".into()\n    }\n}\n\n\nimpl CanDoIt for MyStruct2 {\n    fn do_it(&amp;self) -&gt; String {\n        \"done 2\".into()\n    }\n}\n\n\nfn do_a&lt;T: CanDoIt&gt;(value: T) -&gt; String {\n    value.do_it()\n}\n\n\nfn main() {\n    let s: dyn CanDoIt = if true {\n        MyStruct {}\n    } else {\n        MyStruct2 {}\n    };\n\n    println!(\"Done it: {}\", do_a(s))\n}\n</code></pre>\n\n<p>The if condition could be dependent on some runtime value, for example whether the hardware supports some feature.</p>\n\n<p>I tried different things, like making the struct also implement <code>Sized</code>, but I always get some compile error like this:</p>\n\n<pre><code>   |\n29 |     let s: dyn CanDoIt = if true {\n   |         ^ doesn't have a size known at compile-time\n   |\n</code></pre>\n\n<p>What is the solution for when you need to pass around different implementations depending on some runtime value?</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1572632726, "post_id": 58657264, "comment_id": 103631459, "body": "It is not related with <code>alga</code>, it happens because of  <code>num_complex</code>, which is a dependency for <code>alga</code>, please see this <a href=\"https://github.com/rust-num/num-complex/blob/master/src/lib.rs#L1011\" rel=\"nofollow noreferrer\">implementation</a>, i assume, this implementation makes things ambiguous again (f64 is applying this macro), here is i&#39;ve reproduced the behavior without crate : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=50924bf4e2a43ed3bb763fb99efa88ba\" rel=\"nofollow noreferrer\">playground</a>"}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1572606400, "post_id": 58657986, "comment_id": 103619337, "body": "This is rather surprising. I mean, <code>f64</code> is a concrete type, so the compiler knows its traits. And we still can call standard multiplication using <code>Mul::&lt;f64&gt;::mul(b, b)</code>, so the compiler still knows that this is possible. It just isn&#39;t <i>inferred</i> anymore as an option."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1572611748, "post_id": 58657986, "comment_id": 103621733, "body": "@SvenMarnach you are right, this should constraint the <code>K</code> not <code>f64</code>, updated the post to not mislead"}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 1, "last_activity_date": 1572611664, "last_edit_date": 1572611664, "creation_date": 1572605599, "answer_id": 58657986, "question_id": 58657264, "link": "https://stackoverflow.com/questions/58657264/generically-multiply-values-of-different-type-in-rust/58657986#58657986", "title": "Generically multiply values of different type in Rust", "body": "<p>This is a constraint which tells that when <code>K</code> is a right operand, you can multiply <code>f64</code> with <code>K</code>, and the output will be <code>K</code>. Also tells <code>f64</code> must implement <code>Mul&lt;K, Output = K&gt;</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>f64: Mul&lt;K, Output = K&gt;,\n</code></pre>\n\n<p>I don't know yet, this might happen because of limited power of type-checker or bug but somehow implementation of <code>Mul&lt;f64, Output = f64&gt;</code> on <code>f64</code> becomes ambiguous because of the constraint <code>Mul&lt;K, Output = K&gt;</code>.</p>\n\n<p>if you explicitly state the expected behavior which is <code>Mul&lt;f64, Output = f64&gt;</code> in your case : </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn generic2&lt;K&gt;(a: K, b: f64) -&gt; K\nwhere\n    K: Mul&lt;f64, Output = K&gt; + Add&lt;K, Output = K&gt; + Add&lt;f64, Output = K&gt; + Copy,\n    f64: Mul&lt;K, Output = K&gt; + Mul&lt;f64, Output = f64&gt;,\n{\n    a * b + b * a + b * b\n}\n</code></pre>\n\n<p>it will work as expected.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3143908390baa0c03629aaa334dc5fe3\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 377, "user_id": 4183550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-XPi65j6sWQQ/AAAAAAAAAAI/AAAAAAAAAEg/fKumkAmyHbg/photo.jpg?sz=128", "display_name": "ionree", "link": "https://stackoverflow.com/users/4183550/ionree"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 381, "favorite_count": 1, "accepted_answer_id": 58657986, "answer_count": 1, "score": 3, "last_activity_date": 1572626120, "creation_date": 1572602406, "last_edit_date": 1572626120, "question_id": 58657264, "link": "https://stackoverflow.com/questions/58657264/generically-multiply-values-of-different-type-in-rust", "title": "Generically multiply values of different type in Rust", "body": "<p>Say I want to write a generic function that takes some value of type <code>K</code> and commutatively multiply it with an <code>f64</code>. The following works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn generic1&lt;K&gt;(a: K, b: f64) -&gt; K\nwhere\n    K: Mul&lt;f64, Output = K&gt; + Add&lt;K, Output = K&gt; + Copy,\n    f64: Mul&lt;K, Output = K&gt;,\n{\n     a * b + b * a\n}\n</code></pre>\n\n<p>However, I am now no longer able to e.g. multiply two floats within the same function. Effectively, it seems like the bound <code>f64: Mul&lt;K, Output = K&gt;</code> is overriding/hiding (?) the impl <code>impl Mul&lt;f64&gt; for f64</code>. Here is an example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn generic2&lt;K&gt;(a: K, b: f64) -&gt; K\nwhere\n    K: Mul&lt;f64, Output = K&gt; + Add&lt;K, Output = K&gt; + Add&lt;f64, Output = K&gt; + Copy,\n    f64: Mul&lt;K, Output = K&gt;,\n{\n     a * b + b * a + b * b\n}\n</code></pre>\n\n<p>which gives the following compiler error:</p>\n\n<pre><code>   |\n16 |      a * b + b * a + b * b\n   |                          ^ expected type parameter, found f64\n   |\n   = note: expected type `K`\n              found type `f64`\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=055b78748d6d26248ba495c2e96f5b0d\" rel=\"nofollow noreferrer\">playground link</a>), i.e. <code>f64 * &lt;whatever&gt;</code> now only works for <code>&lt;whatever&gt;</code> being of type <code>K</code>.</p>\n\n<p>As a workaround, I can use the fully qualified syntax <code>&lt;f64 as Mul&lt;f64&gt;&gt;::mul(b, b)</code>, but that is extremely ugly. It feels like the compiler should be able to see that it can use an output of type <code>f64</code> and hence use the implementation of <code>f64 * f64</code> instead of <code>f64 * K</code>.</p>\n\n<p>A less abstract example for what I want to do: <code>K</code> could be a vector type, or a scalar type, and I want to be able to do commutative scalar multiplication with it in a generic way.</p>\n\n<p>What's going on here? Why can I no longer multiply <code>b * b</code>?</p>\n\n<p><strong>Update</strong>: @\u00d6mer-erden noticed that it works when explicitly specifying <code>f64: Mul&lt;f64, Output = f64&gt;</code> as well. Unfortunately that workaround breaks when importing the <a href=\"https://crates.io/crates/alga\" rel=\"nofollow noreferrer\"><code>alga</code> crate</a> - see the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0d787f2fef2cb935da78fad6b93ae319\" rel=\"nofollow noreferrer\">updated playground link</a>.</p>\n\n<p>I'm not exactly sure what alga does to break the already weird behavior. As \u00d6mer already noted, it looks like this is more of a bug or limitation of the type checker rather than a bug in alga/whatever, since ideally no code should be able to break resolution of <code>impl Mul&lt;f64, Output = f64&gt;</code> or similar for any builtin type.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572564162, "post_id": 58652318, "comment_id": 103609346, "body": "I&#39;m sure sure but I think that mean this piece of code is only included for test. But I think there is maybe more, this kind of attribute are kind of magic feature from compiler"}], "answers": [{"comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1572578689, "post_id": 58652617, "comment_id": 103611938, "body": "Surely you can: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=97a330ee55ece1d1ec7910b199a72a66\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> In this playground, the whole file including the <code>main</code> function is compiled only for tests, so you can test this code, but can&#39;t run it, since in non-test mode the file is treated as empty."}, {"owner": {"reputation": 42740, "user_id": 1031569, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/MTZr2.png?s=128&g=1", "display_name": "Reactgular", "link": "https://stackoverflow.com/users/1031569/reactgular"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1572614977, "post_id": 58652617, "comment_id": 103623234, "body": "@Cerberus you&#39;ve removed the main function. That&#39;s not an example of the whole file. If you placed something above main, then main would start working. Right?"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1572615844, "post_id": 58652617, "comment_id": 103623670, "body": "It will stop to compile - <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e8c279f8dd8d626c2b2f6e2564aa08f8\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> - since the inner attributes (like the ones applied to the whole file) can&#39;t appear after other items."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1572615893, "post_id": 58652617, "comment_id": 103623700, "body": "...sorry, I misunderstood your comment - here it is: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d3bbbd06d5eba679b4f88f7d415569db\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> It is still erased."}], "tags": [], "owner": {"reputation": 42740, "user_id": 1031569, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/MTZr2.png?s=128&g=1", "display_name": "Reactgular", "link": "https://stackoverflow.com/users/1031569/reactgular"}, "is_accepted": true, "score": 8, "last_activity_date": 1572616487, "last_edit_date": 1572616487, "creation_date": 1572566790, "answer_id": 58652617, "question_id": 58652318, "link": "https://stackoverflow.com/questions/58652318/what-does-cfgtest-do-when-placed-at-the-top-of-lib-rs/58652617#58652617", "title": "What does #[cfg(test)] do when placed at the top of lib.rs?", "body": "<pre><code>#[....]\n</code></pre>\n\n<p>The above is a <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"noreferrer\">Rust Attribute</a> which is like an annotation in other languages. For example; in Java we have <code>@Annotation(....)</code> for methods and classes. Unlike annotation the rust attribute can be an expression that follows the attribute syntax.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(....)]\n</code></pre>\n\n<p>The above is a <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html#the-cfg-attribute\" rel=\"noreferrer\">compiler configuration</a> attribute. The <code>cfg()</code> is one of many <a href=\"https://doc.rust-lang.org/reference/attributes.html#built-in-attributes-index\" rel=\"noreferrer\">built-in attributes</a>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(test)]\n</code></pre>\n\n<p>The above tells the Rust compiler that the following code should only be compiled when the <code>test</code> configuration is <em>active</em>. You can have other configuration attributes like <code>debug</code>, <code>windows</code> or features.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(test)] #[macro_use] extern crate maplit;\n</code></pre>\n\n<p>Is the same as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(test)]\n#[macro_use]\nextern crate maplit;\n</code></pre>\n\n<p>Which tells the Rust compiler to only compile the next line if the <code>test</code> configuration is active, and the next line tells Rust to only use <em>macros</em> from the following crate.</p>\n\n<blockquote>\n  <p>If so, then putting this directive at the top of lib.rs seems like a problem. Won't my entire library be dropped when I compile a distribution?</p>\n</blockquote>\n\n<p>The <code>#[cfg(...)]</code> attribute only applies the compiler condition <em>upon the thing</em> it is attached to.</p>\n\n<p>When you place the attribute at the top of the file followed by a space. The attribute is attached to the current module or crate. </p>\n\n<p>As shown here from the documentation example, the <code>crate_type</code> is applied to the entire file:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// General metadata applied to the enclosing module or crate.\n#![crate_type = \"lib\"]\n\n// A function marked as a unit test\n#[test]\nfn test_foo() {\n    /* ... */\n}\n\n// A conditionally-compiled module\n#[cfg(target_os = \"linux\")]\nmod bar {\n    /* ... */\n}\n\n// A lint attribute used to suppress a warning/error\n#[allow(non_camel_case_types)]\ntype int8_t = i8;\n\n// Inner attribute applies to the entire function.\nfn some_unused_variables() {\n  #![allow(unused_variables)]\n\n  let x = ();\n  let y = ();\n  let z = ();\n}\n</code></pre>\n"}], "owner": {"reputation": 25639, "user_id": 54426, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/dYp2m.png?s=128&g=1", "display_name": "Rich Apodaca", "link": "https://stackoverflow.com/users/54426/rich-apodaca"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1445, "favorite_count": 1, "accepted_answer_id": 58652617, "answer_count": 1, "score": 4, "last_activity_date": 1572616487, "creation_date": 1572563998, "question_id": 58652318, "link": "https://stackoverflow.com/questions/58652318/what-does-cfgtest-do-when-placed-at-the-top-of-lib-rs", "title": "What does #[cfg(test)] do when placed at the top of lib.rs?", "body": "<p>I'm writing a Rust library (generated from cargo) with unit tests.</p>\n\n<p>I'd like to use the extern crate <a href=\"https://docs.rs/maplit/1.0.2/maplit/\" rel=\"nofollow noreferrer\">maplit</a> in my unit tests to be able to use JavaScript-like hashmap literals. I don't want to use maplit in my library code.</p>\n\n<p>maplit provides a macro that apparently must be activated using #[macro_use]. The only way I've been able to get this all working is to place this at the top of <code>lib.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(test)] #[macro_use] extern crate maplit;\n\n// my crate-specific stuff\n</code></pre>\n\n<p>At this point I realized I don't know what exactly #[cfg(test)] does. I'm using it in my tests. These are included with library code, as per the convention, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// some library code\n\n#[cfg(test)]\nmod test {\n  use super::*;\n  // tests here\n}\n</code></pre>\n\n<p>I had thought that the line #[cfg(test)] was marking what follows until the end of the file (or block?) as only applicable to the test configuration.</p>\n\n<p>If so, then putting this directive at the top of <code>lib.rs</code> seems like a problem. Won't my entire library be dropped when I compile a distribution?</p>\n\n<p>I've tried to find documentation on what exactly #[cfg(test)] does, but to no avail.</p>\n"}, {"tags": ["rust", "stream"], "answers": [{"comments": [{"owner": {"reputation": 633, "user_id": 261019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1843a1bc68a178889603cf8659f4b2ec?s=128&d=identicon&r=PG", "display_name": "Jo&#227;o Moreno", "link": "https://stackoverflow.com/users/261019/jo%c3%a3o-moreno"}, "edited": false, "score": 0, "creation_date": 1572900217, "post_id": 58675387, "comment_id": 103697516, "body": "This gets very close indeed. It definitely helps me figure out how things actually work, so thanks! I was hoping to see an answer using combinator functions, yet had a feeling <code>impl Stream</code> would be the solution."}], "tags": [], "owner": {"reputation": 2798, "user_id": 492747, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/6175ac3e7ef6faba1f1ac2a3decbec7b?s=128&d=identicon&r=PG", "display_name": "evading", "link": "https://stackoverflow.com/users/492747/evading"}, "is_accepted": false, "score": 1, "last_activity_date": 1572729391, "creation_date": 1572729391, "answer_id": 58675387, "question_id": 58651369, "link": "https://stackoverflow.com/questions/58651369/how-can-i-split-debounce-and-join-streams/58675387#58675387", "title": "How can I split, debounce and join streams?", "body": "<p>It may not be exactly what you wanted but this does something like what you asked for.</p>\n\n<pre><code>use {\n    futures::{\n        prelude::*,\n        Async, Poll,\n        stream::{\n            Stream, Fuse,\n        },\n        sync::mpsc,\n    },\n    std::{\n        thread,\n        time::{Duration, Instant},\n    }\n};\n\n#[derive(Debug)]\nenum Event&lt;T&gt; {\n    Short(T),\n    Long(T),\n}\n\n\n#[derive(Debug)]\nstruct Debounce&lt;S: Stream&gt; {\n    stream: Fuse&lt;S&gt;,\n    debouncetime: Duration,\n    timestamp: Instant,\n    last: S::Item,\n    emitted: bool,\n}\n\nimpl&lt;S&gt; Debounce&lt;S&gt;\n    where S: Stream, S::Item: Copy + Default + PartialEq {\n    fn new(s: S) -&gt; Self {\n        Self{\n            stream: s.fuse(),\n            debouncetime: Duration::from_millis(2300),\n            timestamp: Instant::now(),\n            last: Default::default(),\n            emitted: true,\n        }\n    }\n}\n\nimpl&lt;S&gt; Stream for Debounce&lt;S&gt;\n    where S: Stream, S::Item: Copy + Default + PartialEq\n{\n    type Item = Event&lt;S::Item&gt;;\n    type Error = S::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Event&lt;S::Item&gt;&gt;, S::Error&gt; {\n        if !self.emitted &amp;&amp; self.timestamp.elapsed() &gt;= self.debouncetime {\n            self.emitted = true;\n            return Ok(Some(Event::Long(self.last)).into())\n        }\n\n        match self.stream.poll()? {\n            Async::Ready(Some(item)) =&gt; {\n                if item != self.last {\n                    self.last = item;\n                    self.timestamp = Instant::now();\n                    self.emitted = false;\n                }\n\n                Ok(Some(Event::Short(item)).into())\n            }\n            Async::Ready(None) =&gt; Ok(None.into()),\n            Async::NotReady =&gt; Ok(Async::NotReady)\n        }\n    }\n}\n\nfn main() {\n    let (mut tx, rx) = mpsc::channel(1);\n\n    thread::spawn(move || {\n        for i in vec![1, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6, 7] {\n            tx = tx.send(i).wait().unwrap();\n            thread::sleep(Duration::from_secs(1));\n        }\n    });\n    let result = Debounce::new(rx).collect().wait();\n\n    dbg!(result.unwrap());\n}\n</code></pre>\n"}], "owner": {"reputation": 633, "user_id": 261019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1843a1bc68a178889603cf8659f4b2ec?s=128&d=identicon&r=PG", "display_name": "Jo&#227;o Moreno", "link": "https://stackoverflow.com/users/261019/jo%c3%a3o-moreno"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 290, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1572729391, "creation_date": 1572557275, "question_id": 58651369, "link": "https://stackoverflow.com/questions/58651369/how-can-i-split-debounce-and-join-streams", "title": "How can I split, debounce and join streams?", "body": "<p>I'm struggling a bit to understand the infrastructure around <code>futures::streams</code>.</p>\n\n<p>Suppose I have a stream of <code>u8</code> items. I'd like to <em>convert</em> it into a stream of <code>Event</code> items, in which:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Event {\n  Short(u8),\n  Long(u8),\n}\n</code></pre>\n\n<p>My resulting stream should emit <code>Event::Short(x)</code> whenever the underlying stream emits <code>x</code>. It should <strong>also</strong> emit <code>Event::Long(x)</code> whenever the underlying stream hasn't changed its <code>x</code> value for <code>N</code> seconds.</p>\n\n<p>The conceptual steps would be:</p>\n\n<ol>\n<li>Split the stream into stream <code>a</code> and <code>b</code></li>\n<li>Apply debouncing on stream <code>b</code>, making it emit <code>x</code> only when <code>x</code> hasn't changed for <code>N</code> seconds.</li>\n<li>Join the two streams.</li>\n</ol>\n\n<p>I believe join would be handled by <a href=\"https://docs.rs/futures/0.1.29/futures/stream/trait.Stream.html#method.select\" rel=\"nofollow noreferrer\"><code>select</code></a>. But how can I split the original stream into two, given its items are <code>Copy</code>? And is there such a utility like a debouncing mechanism, either in <code>futures</code> or <code>tokio</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1572544737, "post_id": 58648138, "comment_id": 103602607, "body": "I changed <code>&amp;N</code> to <code>N</code> in the <code>impl Graph</code> and it can compile: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dc2555c5b5666b4636268b60eb51f9f2\" rel=\"nofollow noreferrer\">Playground</a> . I don&#39;t quite understand what&#39;s going on enough to post an answer, but it looks like youre using <code>&amp;N</code> extraneously in that spot."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1572544968, "post_id": 58648138, "comment_id": 103602700, "body": "<a href=\"https://gist.github.com/turbulencetoo/c0fd50d9f7fd851562562069bdb367ae\" rel=\"nofollow noreferrer\">diff in a Gist</a> so its more clear what changed."}], "answers": [{"comments": [{"owner": {"reputation": 25639, "user_id": 54426, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/dYp2m.png?s=128&g=1", "display_name": "Rich Apodaca", "link": "https://stackoverflow.com/users/54426/rich-apodaca"}, "edited": false, "score": 0, "creation_date": 1572547826, "post_id": 58649126, "comment_id": 103603929, "body": "Great answer, thanks! I noticed that using the 2nd approach allows compilation, but then I can&#39;t call graph.nodes(). Ideas? I&#39;ll update my question with answers to your other questions."}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 25639, "user_id": 54426, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/dYp2m.png?s=128&g=1", "display_name": "Rich Apodaca", "link": "https://stackoverflow.com/users/54426/rich-apodaca"}, "edited": false, "score": 0, "creation_date": 1572553516, "post_id": 58649126, "comment_id": 103606274, "body": "@RichApodaca It would depend on the exact error. I didn&#39;t get any errors <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c9c44c252cb7f31000f4ad4b5c25ca5c\" rel=\"nofollow noreferrer\">in my attempt</a>."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 2, "last_activity_date": 1572545543, "creation_date": 1572545543, "answer_id": 58649126, "question_id": 58648138, "link": "https://stackoverflow.com/questions/58648138/how-to-eliminate-expected-t-found-type-parameter-error-when-delegating-to-ha/58649126#58649126", "title": "How to eliminate &quot;expected &amp;T, found type parameter&quot; error when delegating to HashMap iterator?", "body": "<p>To get the code compiling, you only need to remove a couple of extra <code>&amp;</code>s.</p>\n\n<pre><code>use std::collections::HashMap;\n\npub trait Graph&lt;'a, N: 'a&gt; {\n    type Nodes: Iterator&lt;Item = &amp;'a N&gt;;\n\n    fn nodes(&amp;'a self) -&gt; Self::Nodes;\n}\n\nstruct HashGraph&lt;N&gt; {\n    map: HashMap&lt;N, ()&gt;,\n}\n\nimpl&lt;N&gt; HashGraph&lt;N&gt; {\n    pub fn new(map: HashMap&lt;N, ()&gt;) -&gt; Self {\n        HashGraph { map }\n    }\n}\n\nimpl&lt;'a, N: 'a&gt; Graph&lt;'a, N&gt; for HashGraph&lt;N&gt; {\n    //                   ^^^ this one\n    type Nodes = NodeIterator&lt;'a, N&gt;;\n    //                           ^^^ and this one\n\n    fn nodes(&amp;'a self) -&gt; Self::Nodes {\n        NodeIterator::new(self.map.keys())\n    }\n}\n\nstruct NodeIterator&lt;'a, N&gt; {\n    nodes: std::collections::hash_map::Keys&lt;'a, N, ()&gt;,\n}\n\nimpl&lt;'a, N&gt; NodeIterator&lt;'a, N&gt; {\n    pub fn new(nodes: std::collections::hash_map::Keys&lt;'a, N, ()&gt;) -&gt; Self {\n        NodeIterator { nodes }\n    }\n}\n\nimpl&lt;'a, N&gt; Iterator for NodeIterator&lt;'a, N&gt; {\n    type Item = &amp;'a N;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.nodes.next()\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=34f1a7ed8554ac34f755f40bb6403967\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>The reasons for this come down to the signatures on the trait <code>Graph</code> and the struct <code>NodeIterator</code>. When fed <code>Keys&lt;'a, N, ()&gt;</code>, <code>NodeIterator::new</code> returns <code>NodeIterator&lt;'a, N&gt;</code>. However, for your implementation of <code>Graph</code> you want it to return something of type <code>Nodes</code>, which is the type <code>NodeIterator&lt;'a, &amp;'a N&gt;</code>. Notice the extra <code>&amp;'a</code>. Moreover, it needs to return an iterator whose items have type <code>&amp;'a N</code>. Removing some of the <code>&amp;'a</code>s makes everything consistent.</p>\n\n<p>Another solution is to add an <em>extra</em> <code>&amp;'a</code>.</p>\n\n<pre><code>impl&lt;'a, N: 'a&gt; Graph&lt;'a, &amp;'a N&gt; for HashGraph&lt;&amp;'a N&gt; {\n    //                                         ^^^ right here\n    type Nodes = NodeIterator&lt;'a, &amp;'a N&gt;;\n\n    fn nodes(&amp;'a self) -&gt; Self::Nodes {\n        NodeIterator::new(self.map.keys())\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bf4258052d51b6224c5b9c35f64e3c23\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>That would mean that you're consistently using <code>&amp;'a N</code> rather than <code>N</code> itself.</p>\n\n<p>The key here is consistency, but you'll also want to think ahead to how you're going to use these types and traits. Do you want <code>HashGraph</code> to only have references to its keys or own them? If they're references, what actually owns them? If you use owned keys, are you going to need to move them around a lot?</p>\n\n<p>One last thing. You're using <code>HashMap&lt;N, ()&gt;</code> but, depending on what exactly you're trying to do, <code>HashSet&lt;N&gt;</code> might be more idiomatic. The two are exactly the same under the hood, but <code>HashSet</code> has a different set of methods that may or may not be more useful for you.</p>\n"}], "owner": {"reputation": 25639, "user_id": 54426, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/dYp2m.png?s=128&g=1", "display_name": "Rich Apodaca", "link": "https://stackoverflow.com/users/54426/rich-apodaca"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 58649126, "answer_count": 1, "score": 0, "last_activity_date": 1572548575, "creation_date": 1572541327, "last_edit_date": 1572548575, "question_id": 58648138, "link": "https://stackoverflow.com/questions/58648138/how-to-eliminate-expected-t-found-type-parameter-error-when-delegating-to-ha", "title": "How to eliminate &quot;expected &amp;T, found type parameter&quot; error when delegating to HashMap iterator?", "body": "<p>I'm trying to build a small graph library in Rust. A <code>Graph</code> trait will be implemented by all graphs, and <code>HashGraph</code> is a specific example. <code>HashGraph</code> itself will be a lightweight wrapper around <code>HashMap</code>.</p>\n\n<p>In particular, I want the <code>HashGraph</code> method <code>nodes</code> to return an iterator that delegates <code>next</code> to an underlying iterator obtained from <code>HashGraph#keys</code>.</p>\n\n<p>Here's my code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\npub trait Graph&lt;'a, N: 'a&gt; {\n    type Nodes: Iterator&lt;Item=&amp;'a N&gt;;\n\n    fn nodes(&amp;'a self) -&gt; Self::Nodes;\n}\n\nstruct HashGraph&lt;N&gt; {\n    map: HashMap&lt;N, ()&gt;\n}\n\nimpl&lt;N&gt; HashGraph&lt;N&gt; {\n    pub fn new(map: HashMap&lt;N, ()&gt;) -&gt; Self {\n        HashGraph { map }\n    }\n}\n\nimpl&lt;'a, N: 'a&gt; Graph&lt;'a, &amp;'a N&gt; for HashGraph&lt;N&gt; {\n    type Nodes = NodeIterator&lt;'a, &amp;'a N&gt;;\n\n    fn nodes(&amp;'a self) -&gt; Self::Nodes {\n        NodeIterator::new(self.map.keys())\n    }\n}\n\nstruct NodeIterator&lt;'a, N&gt; {\n    nodes: std::collections::hash_map::Keys&lt;'a, N, ()&gt;\n}\n\nimpl&lt;'a, N&gt; NodeIterator&lt;'a, N&gt; {\n    pub fn new(nodes: std::collections::hash_map::Keys&lt;'a, N, ()&gt;) -&gt; Self {\n        NodeIterator { nodes: nodes }\n    }\n}\n\nimpl&lt;'a, N&gt; Iterator for NodeIterator&lt;'a, N&gt; {\n    type Item = &amp;'a N;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.nodes.next()\n    }\n}\n</code></pre>\n\n<p>I'm trying to <a href=\"https://stackoverflow.com/questions/58611896/\">avoid Boxing iterators</a> using <a href=\"https://www.reddit.com/r/rust/comments/5yappn/confused_about_how_to_return_iterators_from/\" rel=\"nofollow noreferrer\">the technique described in the answers here</a>.</p>\n\n<p>This code does not compile due to a single error:</p>\n\n<pre><code>   |\n23 |         NodeIterator::new(self.map.keys())\n   |                           ^^^^^^^^^^^^^^^ expected &amp;N, found type parameter\n   |\n   = note: expected type `std::collections::hash_map::Keys&lt;'_, &amp;N, _&gt;`\n              found type `std::collections::hash_map::Keys&lt;'_, N, _&gt;`\n</code></pre>\n\n<p>It appears that the <code>HashMap</code> keys iterator isn't returning the expected form of the item, but I'm really unclear how to fix this error. My goal with <code>NodeIterator</code> is to just pass on whatever the <code>HashMap</code> iterator returns for <code>next</code>.</p>\n\n<p><code>HashGraph</code> should own its keys (the ones in its <code>HashMap</code>). Once created, <code>HashGraph</code> will be read-only.</p>\n\n<p>The use of <code>HashMap&lt;N, ()&gt;</code> is mainly to simplify the sample code. It will ultimately use <code>HashMap&lt;N, HashMap&lt;N, E&gt;&gt;</code> where <code>E</code> is an edge weight. Clients would take care of ensuring proper ownership in the <code>HashMap</code> they pass with, for example, reference counting.</p>\n\n<p>How can I modify the sample to eliminate the error and successfully compile?</p>\n"}, {"tags": ["memory", "rust", "borrow"], "comments": [{"owner": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 0, "creation_date": 1572511169, "post_id": 58639442, "comment_id": 103584785, "body": "Why do you want it to allocate more memory when the same memory can be safely re-used?"}, {"owner": {"reputation": 171, "user_id": 6707172, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-_-oJ4-GxV-Q/AAAAAAAAAAI/AAAAAAAAIeI/nKtIUIyXOs0/photo.jpg?sz=128", "display_name": "Dark Hell", "link": "https://stackoverflow.com/users/6707172/dark-hell"}, "reply_to_user": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 0, "creation_date": 1572511665, "post_id": 58639442, "comment_id": 103584963, "body": "@Thilo, I think so but why does Rust do that? I think Rust can free memory after second and third assignments."}, {"owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "edited": false, "score": 3, "creation_date": 1572511851, "post_id": 58639442, "comment_id": 103585047, "body": "There is no benefit in free a variable on the stack and then reallocate it with the same value a few instructions later, if there is nothing more important to store there. Works as it should."}, {"owner": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 0, "creation_date": 1572511975, "post_id": 58639442, "comment_id": 103585113, "body": "If these things are allocated from the stack, it would be very wasteful to allocate and free them one by one. Usually, the whole stackframe gets added/removed in one go when functions enter/return. If they are &quot;allocated&quot; as static constants, they don&#39;t need dynamic memory management at all."}, {"owner": {"reputation": 171, "user_id": 6707172, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-_-oJ4-GxV-Q/AAAAAAAAAAI/AAAAAAAAIeI/nKtIUIyXOs0/photo.jpg?sz=128", "display_name": "Dark Hell", "link": "https://stackoverflow.com/users/6707172/dark-hell"}, "reply_to_user": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "edited": false, "score": 0, "creation_date": 1572512739, "post_id": 58639442, "comment_id": 103585422, "body": "@Simson, Thanks I understood."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572512932, "post_id": 58639442, "comment_id": 103585531, "body": "rule number one of system language, don&#39;t assume ~memory~ anything."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1572521152, "post_id": 58639442, "comment_id": 103589967, "body": "I&#39;ve heard of half assing, but this is the first I&#39;m learning about third assing."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1572532047, "post_id": 58639442, "comment_id": 103596029, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/50345139/why-can-i-return-a-reference-to-a-local-literal-but-not-a-variable\">Why can I return a reference to a local literal but not a variable?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "is_accepted": false, "score": 4, "last_activity_date": 1572533524, "last_edit_date": 1572533524, "creation_date": 1572511501, "answer_id": 58639578, "question_id": 58639442, "link": "https://stackoverflow.com/questions/58639442/why-does-rust-reuse-memory-with-same-value/58639578#58639578", "title": "Why does Rust reuse memory with same value", "body": "<p>There are lots of tricks an optimizing compiler can use to determine if a variable can be assigned a constant value. Your findings are consistent with this, no need to run duplicate code if it is not needed.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1572521528, "post_id": 58639689, "comment_id": 103590167, "body": "Constants <i>may</i> be promoted to statics, but in general they may also become temporaries or be compiled away entirely. 5 gets the static promotion treatment here because the code explicitly takes its address; if that weren&#39;t so, the compiler would be free to create it in a register or optimize it out of existence, with no 5 appearing in the binary at all."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1572532123, "post_id": 58639689, "comment_id": 103596082, "body": "@trentcl I think that it is guaranteed, see <a href=\"https://stackoverflow.com/questions/50345139/why-can-i-return-a-reference-to-a-local-literal-but-not-a-variable\" title=\"why can i return a reference to a local literal but not a variable\">stackoverflow.com/questions/50345139/&hellip;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1572533358, "post_id": 58639689, "comment_id": 103596836, "body": "@FrenchBoiethios It&#39;s guaranteed <i>because</i> the address is taken, but constants in general are not subject to static promotion. My earlier comment was to clarify an earlier phrasing of the answer which might have been construed to mean that <i>all</i> constants are promoted to statics, which is not true."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1572619013, "post_id": 58639689, "comment_id": 103625209, "body": "@trentcl: Actually, I would not be surprised to learn it is NOT guaranteed. Specifically, if the compiler was able to <i>elide</i> the address, for example in code such as <code>let x = &amp;5; println!(&quot;{}&quot;, 1 + *x);</code> then I would not expect to find a literal <code>5</code> in the data section of the binary, I&#39;d expect to see a <code>6</code> directly embedded in the assembly."}], "tags": [], "owner": {"reputation": 32098, "user_id": 124319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lVhrR.jpg?s=128&g=1", "display_name": "coredump", "link": "https://stackoverflow.com/users/124319/coredump"}, "is_accepted": true, "score": 5, "last_activity_date": 1572521941, "last_edit_date": 1572521941, "creation_date": 1572511974, "answer_id": 58639689, "question_id": 58639442, "link": "https://stackoverflow.com/questions/58639442/why-does-rust-reuse-memory-with-same-value/58639689#58639689", "title": "Why does Rust reuse memory with same value", "body": "<p>Two occurrences of the same literal number are indistinguishable. You cannot expect the address of two literals to be identical, and neither can you expect them to be different. </p>\n\n<p>This allows the compiler (but in fact it is free to do otherwise) to emit one <code>5</code> data in the executable code, and have all <code>&amp;5</code> refer to it. Constants <em>may</em> (see comment) also have a static lifetime, in which case they are not allocated/deallocated during program execution, they always are allocated.</p>\n"}], "owner": {"reputation": 171, "user_id": 6707172, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-_-oJ4-GxV-Q/AAAAAAAAAAI/AAAAAAAAIeI/nKtIUIyXOs0/photo.jpg?sz=128", "display_name": "Dark Hell", "link": "https://stackoverflow.com/users/6707172/dark-hell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "accepted_answer_id": 58639689, "answer_count": 2, "score": 4, "last_activity_date": 1572957407, "creation_date": 1572510904, "last_edit_date": 1572957407, "question_id": 58639442, "link": "https://stackoverflow.com/questions/58639442/why-does-rust-reuse-memory-with-same-value", "title": "Why does Rust reuse memory with same value", "body": "<p>Example code:</p>\n\n<pre><code>fn main() {\n    let mut y = &amp;5; // 1\n\n    println!(\"{:p}\", y);\n\n    {\n        let x = &amp;2; // 2\n        println!(\"{:p}\", x);\n        y = x;\n    }\n\n    y = &amp;3; // 3\n    println!(\"{:p}\", y);\n}\n</code></pre>\n\n<p>If third assignment contains <code>&amp;3</code> then code output:</p>\n\n<pre><code>0x558e7da926a0\n0x558e7da926a4\n0x558e7da926a8\n</code></pre>\n\n<p>If third assignment contains <code>&amp;2</code> (same value with second assignment) then code output:</p>\n\n<pre><code>0x558e7da926a0\n0x558e7da926a4\n0x558e7da926a4\n</code></pre>\n\n<p>If third assignment contains <code>&amp;5</code> (same value with first assignment) then code output:</p>\n\n<pre><code>0x558e7da926a0\n0x558e7da926a4\n0x558e7da926a0\n</code></pre>\n\n<p>Why does rust not free memory but reuse it if the assignment value is the same or allocate a new block of memory otherwise?</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1572522248, "post_id": 58636243, "comment_id": 103590571, "body": "It&#39;s common (not only in Rust) to solve this kind of problem by storing indices instead of references, so <code>b: Vec&lt;usize&gt;</code>. This makes it so the data structure is not invalidated by returning it from <code>new</code>. Note that self-referential structs <i>are</i> allowed as long as they aren&#39;t moved or mutated, so you can build an <code>A</code> and use it in place or by reference - just moving ownership (by passing it to or returning it from a function, for instance) is unsound."}], "owner": {"reputation": 6960, "user_id": 1611307, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/aac7f9a85388beb45df5ee4366240473?s=128&d=identicon&r=PG", "display_name": "ssb", "link": "https://stackoverflow.com/users/1611307/ssb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "closed_date": 1572536148, "answer_count": 0, "score": 1, "last_activity_date": 1572490057, "creation_date": 1572489689, "last_edit_date": 1572490057, "question_id": 58636243, "link": "https://stackoverflow.com/questions/58636243/lifetimes-borrow-checker-when-constructing-a-struct", "closed_reason": "Duplicate", "title": "Lifetimes &amp; Borrow Checker when constructing a Struct", "body": "<p>I am trying to construct a struct in 2 steps as shown below.</p>\n\n<pre><code>#[derive(Default)]\nstruct A&lt;'a&gt; {\n    a: Vec&lt;i32&gt;,\n    b: Vec&lt;&amp;'a i32&gt;\n}\n\nimpl&lt;'a&gt; A&lt;'a&gt; {\n    pub fn new() -&gt; Self {\n        let mut x = A::default();\n        x.a = vec![1, 2, 3];  //  --- STEP 1 ---\n        x.b = x.a             //  --- STEP 2 ---\n            .iter()\n            .filter_map(|v| match v {\n                v if *v &gt;= 2 =&gt; Some(v),\n                _ =&gt; None\n            })\n            .collect();\n        x\n    }\n}\n\nfn main() {\n    let _ = A::new();\n}\n</code></pre>\n\n<p>This code does not compile (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b95afd64be06faaf4f26c36e77166c1b\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b95afd64be06faaf4f26c36e77166c1b</a>). I am not able to figure out why. </p>\n\n<p>I expect that labeling the lifetime of every element <code>A::b</code> as the same as <code>A</code> should ensure that I am not borrowing the values after they have been moved. That is the borrow of <code>x.a</code> cannot outlive the move of <code>x</code> at return.</p>\n\n<p>Why is the borrow checker complaining?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 2, "last_activity_date": 1572483982, "creation_date": 1572483982, "answer_id": 58635628, "question_id": 58635596, "link": "https://stackoverflow.com/questions/58635596/how-to-store-struct-reference-in-a-vec-and-use-the-struct-elsewhere-later-on/58635628#58635628", "title": "How to store struct reference in a vec and use the struct elsewhere later on?", "body": "<p>You can't do this. This is simply the classical \"vector push\" example in disguise. Let's take a look at this simplified, but semantically equivalent code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut v = Vec::new();\nv.push(27);\nlet twenty_seven = v.last().unwrap();\nv.push(3);\nprintln!(\"{}\", twenty_seven);\n</code></pre>\n\n<p>This does not compile and will never compile in Rust as this is inherently memory unsafe. You have a reference (a pointer) to an element in the vector. But the call to <code>Vec::push</code> might reallocate, invalidating all references to its elements. In C++ it would compile, but lead to UB because you would attempt to read uninitialized or unallocated memory.</p>\n\n<p>The \"answer\" to your problem is... not simple. You have to think of another structure for your program. Sometimes, using reference counted smart pointers (like <code>Rc</code>) is useful. And it would easily solve your problem. But in many other situations you are better of completely rethinking your application. </p>\n"}, {"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1572514588, "post_id": 58635696, "comment_id": 103586343, "body": "This is not really a solution: as soon as you start using <code>product_ref</code> below, the code won&#39;t compile anymore. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4ea2e0d303d7c8e759bcddf1c13bb26d\" rel=\"nofollow noreferrer\">Playground</a>. It just works right now because of NLL and because <code>product_ref</code> is unused. This solution does not change anything about the underlying (deliberate) limitation."}], "tags": [], "owner": {"reputation": 5800, "user_id": 6163736, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/TKHBG.jpg?s=128&g=1", "display_name": "stacksonstacks", "link": "https://stackoverflow.com/users/6163736/stacksonstacks"}, "is_accepted": false, "score": 1, "last_activity_date": 1572554086, "last_edit_date": 1572554086, "creation_date": 1572484598, "answer_id": 58635696, "question_id": 58635596, "link": "https://stackoverflow.com/questions/58635596/how-to-store-struct-reference-in-a-vec-and-use-the-struct-elsewhere-later-on/58635696#58635696", "title": "How to store struct reference in a vec and use the struct elsewhere later on?", "body": "<p>Exactly one <code>&amp;mut</code> borrow of data may occur at any given time.</p>\n\n<p>I'd suggest inverting things so that <code>Grammar</code> has a function to add <code>NonTerminal</code>s</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct NonTerminal {\n    name: String\n}\n\nimpl NonTerminal {\n    pub fn new(name: &amp;str) -&gt; NonTerminal {\n        Self {\n            name: name.to_string()\n        }\n    }\n}\n\npub struct Grammar {\n    pub non_terminals: Vec&lt;NonTerminal&gt;\n}\n\nimpl Grammar {\n    fn add_non_terminal(&amp;mut self, s: &amp;str) -&gt; &amp;NonTerminal {\n        self.non_terminals.push(NonTerminal::new(s));\n        self.non_terminals.last().unwrap()\n    }\n}\n\npub fn main() {\n    let mut g = Grammar {\n        non_terminals: vec![]\n    };\n    let product_ref = g.add_non_terminal(\"Product\");\n    let sum_ref = g.add_non_terminal(\"Sum\");\n}\n</code></pre>\n\n<hr>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5b1217c66ea6a3f3f84c78a253250f00\" rel=\"nofollow noreferrer\">Updated</a> based on feedback from @Lukas Kalbertodt.\nCan iterate over all non-terminals via <code>g.non_terminals</code></p>\n"}], "owner": {"reputation": 772, "user_id": 7376141, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/IHSDj.png?s=128&g=1", "display_name": "dwjbosman", "link": "https://stackoverflow.com/users/7376141/dwjbosman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 58635628, "answer_count": 2, "score": 0, "last_activity_date": 1593018450, "creation_date": 1572483540, "last_edit_date": 1593018450, "question_id": 58635596, "link": "https://stackoverflow.com/questions/58635596/how-to-store-struct-reference-in-a-vec-and-use-the-struct-elsewhere-later-on", "title": "How to store struct reference in a vec and use the struct elsewhere later on?", "body": "<p>I want to create a struct, store a reference to it in a <code>vec</code>, and then use the struct later on:</p>\n<pre><code>pub struct NonTerminal {\n    name: String\n}\n\nimpl&lt;'a&gt; NonTerminal {\n    pub fn new(grammar: &amp;'a mut Grammar, name: &amp;str) -&gt; &amp;'a NonTerminal {\n        let t = NonTerminal {\n            name: name.to_string()\n        };\n        grammar.non_terminals.push(t);\n        grammar.non_terminals.last().unwrap()\n    }\n}\n\npub struct Grammar&lt;'a&gt; {\n    non_terminals: Vec&lt;NonTerminal&gt;\n}\n\npub fn create_rules&lt;'a&gt;(g: &amp;'a mut grammar::Grammar&lt;'a&gt;) {\n    let sum  =  grammar::NonTerminal::new(g, &quot;Sum&quot;);\n    let product = grammar::NonTerminal::new(g, &quot;Product&quot;);\n    // this fails: &quot;cannot borrow `*g` as mutable more than once at a time, second mutable borrow occurs here&quot;\n    // ...\n    // use the sum and product vars when constructing rules\n}\n</code></pre>\n<p>How to approach this?</p>\n"}, {"tags": ["json", "rust", "serde-json"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1572499606, "post_id": 58635528, "comment_id": 103581022, "body": "same thing than <a href=\"https://stackoverflow.com/q/44610594/7076153\">stackoverflow.com/q/44610594/7076153</a>, you could make your question more generic this would be a great duplicate to use for future question"}], "answers": [{"tags": [], "owner": {"reputation": 459, "user_id": 3646065, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/OCESw.png?s=128&g=1", "display_name": "Charles German", "link": "https://stackoverflow.com/users/3646065/charles-german"}, "is_accepted": true, "score": 1, "last_activity_date": 1572491503, "creation_date": 1572491503, "answer_id": 58636431, "question_id": 58635528, "link": "https://stackoverflow.com/questions/58635528/serde-stream-deserializer-for-a-type-other-than-serde-jsonvalue/58636431#58636431", "title": "Serde Stream Deserializer for a type other than serde_json::Value", "body": "<p>Turns out the solution was much simpler than I thought. <a href=\"https://www.reddit.com/r/rust/comments/do5xkr/hey_rustaceans_got_an_easy_question_ask_here/f5v72r7?utm_source=share&amp;utm_medium=web2x\" rel=\"nofollow noreferrer\">Credit to /u/sfackler on Reddit for pointing this out to me</a>.</p>\n\n<p>In this scenario, I don't need to use a <code>StreamDeserializer</code>; instead, I can just parse the JSON into a <code>HashMap</code> and extract the values I want from it.</p>\n\n<p>For example: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::Deserialize;\nuse std::collections::HashMap;\n\n#[derive(Deserialize, Debug)]\nstruct Data {\n    foo: String,\n}\n\nfn main() {\n    let data = r#\"{\n        \"a\": {\"foo\": \"bar\"},\n        \"b\": {\"foo\": \"baz\"}\n    }\"#;\n\n    let m: HashMap&lt;String, Data&gt; = serde_json::from_str(&amp;data).unwrap();\n    for (_key, val) in m {\n        println!(\"{:?}\", val);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 459, "user_id": 3646065, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/OCESw.png?s=128&g=1", "display_name": "Charles German", "link": "https://stackoverflow.com/users/3646065/charles-german"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "accepted_answer_id": 58636431, "answer_count": 1, "score": 1, "last_activity_date": 1572491503, "creation_date": 1572482796, "question_id": 58635528, "link": "https://stackoverflow.com/questions/58635528/serde-stream-deserializer-for-a-type-other-than-serde-jsonvalue", "title": "Serde Stream Deserializer for a type other than serde_json::Value", "body": "<p>I want to parse a JSON string of the form</p>\n\n<pre><code>{\n    \"a\": {\n        \"foo\": \"bar\"\n    },\n    \"b\": {\n        \"foo\": \"baz\"\n    }\n}\n</code></pre>\n\n<p>That is, at the top level there are a number of JSON objects separated by commas.\nEach of these objects have the same fields as the others (i.e., I can easily represent all of these objects with a single <code>struct</code>).</p>\n\n<p>Since there are several of these objects in the JSON string, I believe I should be using a <code>serde_json::StreamDeserializer</code>, though I am relatively new to Rust and <code>serde</code> in particular, so if this is not the right approach, please point me in the correct direction.</p>\n\n<p>This code represents what I <em>want</em> to do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json::Deserializer;\nuse serde::Deserialize;\n\n#[derive(Deserialize, Debug)]\nstruct Data {\n    foo: String,\n}\n\nfn main() {\n    let data = r#\"{\n        \"a\": {\"foo\": \"bar\"},\n        \"b\": {\"foo\": \"baz\"}\n    }\"#;\n\n    let stream = Deserializer::from_str(data).into_iter::&lt;Data&gt;();\n\n    for value in stream {\n        println!(\"{:?}\", value.unwrap());\n    }\n}\n</code></pre>\n\n<p>I would expect this code to produce some output similar to <code>Object({\"a\": Object({\"foo\": String(\"bar\")}), \"b\": Object({\"foo\": String(\"baz\")})})</code>.</p>\n\n<p>This is the output I see if I change <code>Deserializer::from_str(data).into_iter::&lt;Data&gt;();</code> to <code>Deserializer::from_str(data).into_iter::&lt;serde_json::Value&gt;();</code>.</p>\n\n<p>Instead, the code fails to compile, giving the error <code>Error(\"missing field 'foo'\", line: 4, column: 5)</code></p>\n\n<p>So, what do I need to do in order to deserialize the JSON into <code>Data</code> structs rather than <code>Value</code>?</p>\n"}]