[{"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 3, "creation_date": 1514999169, "post_id": 48081740, "comment_id": 83138171, "body": "Posting as a comment rather than an answer as I don&#39;t know how to fix it off the top of my head: since you provide <code>ok(())</code> - which returns a <code>FutureResult</code> - as the initial value, <code>fold</code> expects you to return a <code>FutureResult</code> from each iteration of the closure. In other words, the inferred types are too specific."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1515002892, "post_id": 48081740, "comment_id": 83140118, "body": "<i>a single future that gets them executed sequentially</i> \u2014 why would you want to do such a thing? Since your futures don&#39;t depend on each other, there&#39;s no obvious reason to introduce forced serialization."}], "answers": [{"comments": [{"owner": {"reputation": 3271, "user_id": 1466456, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BCGab.jpg?s=128&g=1", "display_name": "Jaanus Varus", "link": "https://stackoverflow.com/users/1466456/jaanus-varus"}, "edited": false, "score": 0, "creation_date": 1515004066, "post_id": 48082472, "comment_id": 83140712, "body": "Thanks! I especially like the granularity of being able to specify level of concurrency through buffer size."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1515054098, "post_id": 48082472, "comment_id": 83156781, "body": "I think <code>buffered</code> has a high overhead (there should be some <code>Arc</code> objects in the middle passed to <code>with_notify</code> every time an inner future is polled).  Boxing might be cheaper than <code>buffered(1)</code>."}, {"owner": {"reputation": 3271, "user_id": 1466456, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BCGab.jpg?s=128&g=1", "display_name": "Jaanus Varus", "link": "https://stackoverflow.com/users/1466456/jaanus-varus"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1515080411, "post_id": 48082472, "comment_id": 83172260, "body": "@Stefan I did a quick bench and the boxed variant is roughly 30% faster than the buffer solution with a lot low lower std deviation. Although I&#39;m not confident that any of the crucial parts weren&#39;t stripped away by optimizations. <a href=\"https://play.rust-lang.org/?gist=d5dc4ef2eb5f0611848edc9f3829fa40&amp;version=nightly\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1515139433, "post_id": 48082472, "comment_id": 83194083, "body": "Actually, <code>and_then(|f| f)</code> (<a href=\"https://docs.rs/futures/0.1.17/futures/stream/trait.Stream.html#method.and_then\" rel=\"nofollow noreferrer\"><code>Stream::and_then</code></a>) should be &quot;the same&quot; as <code>buffered(1)</code>, just a lot faster."}], "tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": false, "score": 4, "last_activity_date": 1515098322, "last_edit_date": 1515098322, "creation_date": 1515001373, "answer_id": 48082472, "question_id": 48081740, "link": "https://stackoverflow.com/questions/48081740/executing-a-collection-of-futures-sequentially/48082472#48082472", "title": "Executing a collection of futures sequentially", "body": "<p><code>Stream</code> has a function <a href=\"https://docs.rs/futures/0.1.17/futures/stream/trait.Stream.html#method.buffered\" rel=\"nofollow noreferrer\"><code>buffered</code></a> which allows you to limit how many futures are polled concurrently.</p>\n\n<p>If you have a collection of futures, you can create a stream and use <code>buffered</code> like so:</p>\n\n<pre><code>let tasks = vec![future1, future2];\nlet stream = ::futures::stream::iter_ok(tasks);\nlet mut when_result_ready = stream.buffered(1);\n</code></pre>\n\n<p><code>when_result_ready</code> will now be a <code>Stream</code> implementation which only polls one future at a time and moves to the next once each future completes.</p>\n\n<p><strong>Update</strong></p>\n\n<p>Based on comments and profiling it appears <code>buffered</code> has a large overhead so another solution is to convert each <code>Future</code> to a <code>Stream</code> and <a href=\"https://docs.rs/futures/0.1.17/futures/stream/trait.Stream.html#method.flatten\" rel=\"nofollow noreferrer\"><code>flatten</code></a> them:</p>\n\n<pre><code>iter_ok(tasks).map(|f|f.into_stream()).flatten()\n</code></pre>\n\n<p><code>flatten</code> states that \"each individual stream will get exhausted before moving on to the next.\" meaning no <code>Future</code> will be polled before the previous one is completed. In my local profiling this seems to be ~80% faster than the <code>buffered</code> approach.</p>\n\n<hr>\n\n<p>Both of my answers above result in a <code>Stream</code> of results where each source <code>Future</code> is polled sequentially and the results returned. What the asker actually asked for was just a single <code>Future</code> at the end and not the results of each source <code>Future</code>, if this is the case, the answer from Stefan may be more useful and prove to have better performance.</p>\n"}, {"comments": [{"owner": {"reputation": 3271, "user_id": 1466456, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BCGab.jpg?s=128&g=1", "display_name": "Jaanus Varus", "link": "https://stackoverflow.com/users/1466456/jaanus-varus"}, "edited": false, "score": 0, "creation_date": 1515003943, "post_id": 48082843, "comment_id": 83140644, "body": "Thanks! I was thinking of this but prefer to avoid heap allocations / runtime dispatch if possible. Although I&#39;m not sure how the other buffered stream approach is internally implemented."}, {"owner": {"reputation": 141, "user_id": 1721909, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aad5fdb65b6ba7d0d56db738ce51716?s=128&d=identicon&r=PG", "display_name": "Songday", "link": "https://stackoverflow.com/users/1721909/songday"}, "edited": false, "score": 0, "creation_date": 1532662543, "post_id": 48082843, "comment_id": 90068077, "body": "Hi, @Shepmaster , can you please explain more about why do add <code>Box</code> can fix this issue? I occurred same problem, if I specify function returns <code>impl Future&lt;Item=String, Error=Error&gt;</code>, program compiles failed with <code>expect futures::FutureResult, found futures::AndThen</code>, but when I changed return type to <code>Box&lt;Future&lt;Item=String, Error=Error&gt;&gt;</code>, everything can be compiled."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 141, "user_id": 1721909, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aad5fdb65b6ba7d0d56db738ce51716?s=128&d=identicon&r=PG", "display_name": "Songday", "link": "https://stackoverflow.com/users/1721909/songday"}, "edited": false, "score": 0, "creation_date": 1532696720, "post_id": 48082843, "comment_id": 90083978, "body": "@Songday I have a much longer explanation in another answer (now linked from this answer). Can you check that and see if it explains it adequately? If not, let me know what&#39;s missing and I&#39;ll try to update."}, {"owner": {"reputation": 141, "user_id": 1721909, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aad5fdb65b6ba7d0d56db738ce51716?s=128&d=identicon&r=PG", "display_name": "Songday", "link": "https://stackoverflow.com/users/1721909/songday"}, "edited": false, "score": 0, "creation_date": 1532922166, "post_id": 48082843, "comment_id": 90138644, "body": "Thank you @Shepmaster , I read your post several times but can&#39;t understand completely. The <code>Box</code>, my understanding is, everything which is unsized, needs <code>Box</code> wrapper. In my case, function returns <code>impl Future</code> trait that was unsized, so Rust refuses to compile, right? I still feeling I was misunderstanding something...."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 141, "user_id": 1721909, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aad5fdb65b6ba7d0d56db738ce51716?s=128&d=identicon&r=PG", "display_name": "Songday", "link": "https://stackoverflow.com/users/1721909/songday"}, "edited": false, "score": 0, "creation_date": 1532962060, "post_id": 48082843, "comment_id": 90159202, "body": "@Songday not quite; unsized types don&#39;t really play into it here. The problem is that each step has a different type (which can have different sizes). <code>impl Future</code> is <i>not</i> unsized. The compiler knows the concrete type and size, although the programmer does not."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1532961804, "last_edit_date": 1532961804, "creation_date": 1515002826, "answer_id": 48082843, "question_id": 48081740, "link": "https://stackoverflow.com/questions/48081740/executing-a-collection-of-futures-sequentially/48082843#48082843", "title": "Executing a collection of futures sequentially", "body": "<p>As <a href=\"https://stackoverflow.com/questions/48081740/executing-a-collection-of-futures-sequentially#comment83138171_48081740\">mentioned in the comments</a>, your types are too concrete.</p>\n\n<p>You can envision the implementation of <code>fold</code> as doing something like this:</p>\n\n<pre><code>let (task0, task1, task2) = (ok(()), ok(()), ok(()));\n\nlet mut combined_task = ok(()); // seed\ncombined_task = combined_task.and_then(|_| task0); \ncombined_task = combined_task.and_then(|_| task1); \ncombined_task = combined_task.and_then(|_| task2); \n</code></pre>\n\n<p>The variable <code>combined_task</code> needs to be updated in place with a new value <em>of the same type</em>. Since we start with <code>ok(())</code>, that's the type each step needs to return. However, the return type of <code>and_then</code> is different; it's an <code>AndThen</code>. In fact, <code>AndThen</code> is a generic type containing the closure and the underlying future, so each step will produce a distinct type with potentially a different size:</p>\n\n<ol>\n<li><code>FutureResult&lt;()&gt;</code></li>\n<li><code>AndThen&lt;FutureResult&lt;()&gt;, closure0&gt;</code></li>\n<li><code>AndThen&lt;AndThen&lt;FutureResult&lt;()&gt;, closure0&gt;, closure1&gt;</code></li>\n<li><code>AndThen&lt;AndThen&lt;AndThen&lt;FutureResult&lt;()&gt;, closure0&gt;, closure1&gt;, closure2&gt;</code></li>\n</ol>\n\n<p>Instead, you can create a unified type by producing a <em>boxed trait object</em> at each step:</p>\n\n<pre><code>let (task0, task1, task2) = (ok(()), ok(()), ok(()));\n\nlet mut combined_task: Box&lt;Future&lt;Item = (), Error = ()&gt;&gt; = Box::new(ok(())); // seed\ncombined_task = Box::new(combined_task.and_then(|_| task0)); \ncombined_task = Box::new(combined_task.and_then(|_| task1)); \ncombined_task = Box::new(combined_task.and_then(|_| task2)); \n</code></pre>\n\n<ol>\n<li><code>Box&lt;Future&lt;Item = (), Error = ()&gt;&gt;</code></li>\n<li><code>Box&lt;Future&lt;Item = (), Error = ()&gt;&gt;</code></li>\n<li><code>Box&lt;Future&lt;Item = (), Error = ()&gt;&gt;</code></li>\n<li><code>Box&lt;Future&lt;Item = (), Error = ()&gt;&gt;</code></li>\n</ol>\n\n<p>Converting back to the <code>fold</code> syntax:</p>\n\n<pre><code>let combined_task: Box&lt;Future&lt;Item = (), Error = ()&gt;&gt; =\n    tasks.into_iter().fold(Box::new(ok(())), |acc, task| {\n        Box::new(acc.and_then(|_| task))\n    });\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/48696290/155423\">Creating Diesel.rs queries with a dynamic number of .and()&#39;s</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "edited": false, "score": 0, "creation_date": 1515097973, "post_id": 48102904, "comment_id": 83181641, "body": "This should be accepted instead of my answer, I completely missed that the asker actually wanted a <code>Future</code> at the end. I wrote my answer based upon the OP wanting a <code>Stream</code>."}, {"owner": {"reputation": 3271, "user_id": 1466456, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BCGab.jpg?s=128&g=1", "display_name": "Jaanus Varus", "link": "https://stackoverflow.com/users/1466456/jaanus-varus"}, "edited": false, "score": 0, "creation_date": 1515189892, "post_id": 48102904, "comment_id": 83220557, "body": "Accepted @Stefan&#39;s answer for the most optimal solution in my scenario. Also big thanks to Lukazoid and Shepmaster - I learned a lot of about the futures crate."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 6, "last_activity_date": 1515099042, "last_edit_date": 1515099042, "creation_date": 1515096910, "answer_id": 48102904, "question_id": 48081740, "link": "https://stackoverflow.com/questions/48081740/executing-a-collection-of-futures-sequentially/48102904#48102904", "title": "Executing a collection of futures sequentially", "body": "<p>Combine <a href=\"https://docs.rs/futures/0.1.17/futures/stream/fn.iter_ok.html\" rel=\"nofollow noreferrer\"><code>iter_ok</code></a> and <a href=\"https://docs.rs/futures/0.1.17/futures/stream/trait.Stream.html#method.for_each\" rel=\"nofollow noreferrer\"><code>Stream::for_each</code></a>:</p>\n\n<pre><code>use futures::Stream;\nuse futures::future::ok;\nuse futures::stream::iter_ok;\n\nlet tasks = vec![ok(()), ok(()), ok(())];\n\nlet combined_task = iter_ok::&lt;_, ()&gt;(tasks).for_each(|f| f);\n</code></pre>\n\n<p><code>iter_ok</code> produces a stream of the passed items, and never throws an error (that is why you sometimes need to fix the error type).  The closure passed to <code>for_each</code> then returns a <code>Future</code> to be run for each item - here simply the items that were passed in.</p>\n\n<p><code>for_each</code> then drives each returned future to completion before moving to the next one, like you wanted.  It will also abort with the first error it encounters, and requires the inner futures to return <code>()</code> on success.</p>\n\n<p><code>for_each</code> itself returns a <code>Future</code> that will either fail (like described above) or return <code>()</code> on completion.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test tests::bench_variant_buffered ... bench:      22,356 ns/iter (+/- 1,816)\ntest tests::bench_variant_boxed ...    bench:       8,575 ns/iter (+/- 1,042)\ntest tests::bench_variant_for_each ... bench:       4,070 ns/iter (+/- 531)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2287, "user_id": 8080, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c5a2a075479a1bfcc571330a81567cf9?s=128&d=identicon&r=PG", "display_name": "Raj", "link": "https://stackoverflow.com/users/8080/raj"}, "is_accepted": false, "score": 1, "last_activity_date": 1533601653, "creation_date": 1533601653, "answer_id": 51717254, "question_id": 48081740, "link": "https://stackoverflow.com/questions/48081740/executing-a-collection-of-futures-sequentially/51717254#51717254", "title": "Executing a collection of futures sequentially", "body": "<p>When I needed something like this (mainly because I was debugging an issue) I ended up writing a <code>seq</code> combinator composing <code>loop_fn</code> <a href=\"https://play.rust-lang.org/?gist=faf1d276184f904e112f5da57c5fdfe1&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">like so</a>:</p>\n\n<pre><code>fn seq&lt;I&gt;(\n    i: I,\n) -&gt; impl Future&lt;Item = Vec&lt;&lt;I::Item as IntoFuture&gt;::Item&gt;, Error = &lt;I::Item as IntoFuture&gt;::Error&gt;\nwhere\n    I: IntoIterator,\n    I::Item: IntoFuture,\n{\n    let iter = i.into_iter();\n    loop_fn((vec![], iter), |(mut output, mut iter)| {\n        let fut = if let Some(next) = iter.next() {\n            Either::A(next.into_future().map(|v| Some(v)))\n        } else {\n            Either::B(future::ok(None))\n        };\n\n        fut.and_then(move |val| {\n            if let Some(val) = val {\n                output.push(val);\n                Ok(Loop::Continue((output, iter)))\n            } else {\n                Ok(Loop::Break(output))\n            }\n        })\n    })\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 945, "user_id": 3081958, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b22afcd9a031311dfcfc8e900dadac?s=128&d=identicon&r=PG", "display_name": "Kirill A. Khalitov", "link": "https://stackoverflow.com/users/3081958/kirill-a-khalitov"}, "is_accepted": false, "score": 1, "last_activity_date": 1595109252, "last_edit_date": 1595109252, "creation_date": 1594982701, "answer_id": 62952385, "question_id": 48081740, "link": "https://stackoverflow.com/questions/48081740/executing-a-collection-of-futures-sequentially/62952385#62952385", "title": "Executing a collection of futures sequentially", "body": "<p>In my case (stable <code>async/await</code>) this code was very helpful:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::{stream, StreamExt};\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error + 'static&gt;&gt; {\n    let data = vec![1,2,3];\n\n    stream::iter(data).for_each(|id| async move {\n        let request = async { id }; // async io request\n        let res = request.await;\n        println!(&quot;res: {:?}&quot;, res);\n        ()\n    }).await;\n    \n    Ok(())\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ad5feaf0cbb3597730c22df2eaf4a606\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ad5feaf0cbb3597730c22df2eaf4a606</a></p>\n"}], "owner": {"reputation": 3271, "user_id": 1466456, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BCGab.jpg?s=128&g=1", "display_name": "Jaanus Varus", "link": "https://stackoverflow.com/users/1466456/jaanus-varus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1842, "favorite_count": 1, "accepted_answer_id": 48102904, "answer_count": 5, "score": 8, "last_activity_date": 1595109252, "creation_date": 1514998434, "last_edit_date": 1515002947, "question_id": 48081740, "link": "https://stackoverflow.com/questions/48081740/executing-a-collection-of-futures-sequentially", "title": "Executing a collection of futures sequentially", "body": "<p>I have a collection of futures which I want to combine into a single future that gets them executed sequentially.</p>\n\n<p>I looked into the <a href=\"https://docs.rs/futures/0.1.17/futures/stream/fn.futures_ordered.html\" rel=\"noreferrer\"><code>futures_ordered</code></a> function. It seems to return the results sequentially but the futures get executed concurrently.</p>\n\n<p>I tried to <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold\" rel=\"noreferrer\"><code>fold</code></a> the futures, combining them with <a href=\"https://docs.rs/futures/0.1.17/futures/future/trait.Future.html#method.and_then\" rel=\"noreferrer\"><code>and_then</code></a>. However, that is tricky with the type system.</p>\n\n<pre><code>let tasks = vec![ok(()), ok(()), ok(())];\n\nlet combined_task = tasks.into_iter().fold(\n    ok(()),                             // seed\n    |acc, task| acc.and_then(|_| task), // accumulator\n);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=478ee33aff8aa5accd30803e1ddb0672&amp;version=stable\" rel=\"noreferrer\">playground</a></p>\n\n<p>This gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:10:21\n   |\n10 |         |acc, task| acc.and_then(|_| task), // accumulator\n   |                     ^^^^^^^^^^^^^^^^^^^^^^ expected struct `futures::FutureResult`, found struct `futures::AndThen`\n   |\n   = note: expected type `futures::FutureResult&lt;_, _&gt;`\n              found type `futures::AndThen&lt;futures::FutureResult&lt;_, _&gt;, futures::FutureResult&lt;(), _&gt;, [closure@src/main.rs:10:34: 10:42 task:_]&gt;`\n</code></pre>\n\n<p>I'm probably approaching this wrong but I've run out of ideas.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1515002483, "last_edit_date": 1515002483, "creation_date": 1514998809, "answer_id": 48081851, "question_id": 48081244, "link": "https://stackoverflow.com/questions/48081244/destructuring-a-mutable-peekable-iterator/48081851#48081851", "title": "Destructuring a mutable peekable iterator", "body": "<p>You should probably go back and refresh yourself about <a href=\"https://doc.rust-lang.org/book/second-edition/ch03-01-variables-and-mutability.html\" rel=\"nofollow noreferrer\">mutability with the book</a>. <a href=\"https://doc.rust-lang.org/std/iter/struct.Peekable.html#method.peek\" rel=\"nofollow noreferrer\"><code>Peekable::peek</code></a> returns an <em>immutable reference</em>:</p>\n\n<pre><code>impl&lt;I&gt; Peekable&lt;I&gt;\nwhere\n    I: Iterator, \n{\n    fn peek(&amp;mut self) -&gt; Option&lt;&amp;&lt;I as Iterator&gt;::Item&gt;\n    //                           ^^^^^^^^^^^^^^^^^^^^^^\n}\n</code></pre>\n\n<p>As it is immutable you... cannot mutate it.</p>\n\n<pre><code>&amp;mut b'-' =&gt; {\n    if let Some(next) = iter.peek() {\n        if b'-' == **next {\n            *ch = b' ';\n            mode = Mode::COMMENT;\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 48081851, "answer_count": 1, "score": 1, "last_activity_date": 1515002483, "creation_date": 1514996588, "last_edit_date": 1514998308, "question_id": 48081244, "link": "https://stackoverflow.com/questions/48081244/destructuring-a-mutable-peekable-iterator", "title": "Destructuring a mutable peekable iterator", "body": "<p>I am trying to iterate over a mutable buffer of <code>&amp;[u8]</code> and whenever there is a <code>--</code> delete all bytes until I encounter an <code>'\\n'</code></p>\n\n<p>I tried this approach which gives an error that I cannot resolve</p>\n\n<pre><code>fn remove_comments_in_place&lt;'a&gt;(buffer: &amp;'a mut [u8]) {\n    #[derive(PartialEq)]\n    enum Mode {\n        COMMENT,\n        CODE,\n    }\n    let mut mode = Mode::CODE;\n    let mut iter = buffer.iter_mut().peekable();\n    while let Some(ch) = iter.next() {\n        match ch {\n            // Look 2 chars ahead to identify comments\n            &amp;mut b'-' =&gt; {\n                if let Some(&amp;&amp;mut ref mut hyphen) = iter.peek() {\n                    if hyphen == &amp;mut b'-' {\n                        *hyphen = b' ';\n                        *ch = b' ';\n                        mode = Mode::COMMENT;\n                    }\n                }\n            }\n            &amp;mut b'\\r' =&gt; *ch = b' ',\n            &amp;mut b'\\n' =&gt; {\n                *ch = b' ';\n                if mode == Mode::COMMENT {\n                    mode = Mode::CODE;\n                }\n            }\n            _ =&gt; if mode == Mode::COMMENT {\n                *ch = b' '\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>The error I get is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0389]: cannot borrow data mutably in a `&amp;` reference\n  --&gt; src/main.rs:13:35\n   |\n13 |                 if let Some(&amp;&amp;mut ref mut hyphen) = iter.peek() {\n   |                                   ^^^^^^^^^^^^^^ assignment into an immutable reference\n</code></pre>\n\n<p>I also tried changing the assignment to</p>\n\n<pre><code>&amp;mut b'-' =&gt; {\n    if let Some(&amp;&amp;mut hyphen) = iter.peek() {\n        if hyphen == b'-' {\n            hyphen = b' ';\n            *ch = b' ';\n            mode = Mode::COMMENT;\n        }\n    }\n}\n</code></pre>\n\n<p>but received the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: value assigned to `hyphen` is never read\n  --&gt; src/main.rs:15:25\n   |\n15 |                         hyphen = b' ';\n   |                         ^^^^^^\n   |\n   = note: #[warn(unused_assignments)] on by default\n\nerror[E0384]: re-assignment of immutable variable `hyphen`\n  --&gt; src/main.rs:15:25\n   |\n13 |                 if let Some(&amp;&amp;mut hyphen) = iter.peek() {\n   |                                   ------ first assignment to `hyphen`\n14 |                     if hyphen == b'-' {\n15 |                         hyphen = b' ';\n   |                         ^^^^^^^^^^^^^ re-assignment of immutable variable\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/42320750/read-reference-from-optionmut-t-multiple-times\">This question suggests my destructuring is correct</a>, so how do I assign into <code>hyphen</code> with my <code>Option&lt;&amp;mut T&gt;</code>?</p>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1514993300, "post_id": 48080070, "comment_id": 83134734, "body": "Not really an answer, but a possibility would be to use a memory pool with fixed size buffers and pass the buffer around. Pre-allocate X buffers, and never allocate again ever."}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1514998566, "post_id": 48080070, "comment_id": 83137838, "body": "I&#39;m having trouble understanding the issue without a more concrete and compilable example."}, {"owner": {"reputation": 81, "user_id": 587300, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70714088376128f87d75218edf66356a?s=128&d=identicon&r=PG", "display_name": "stestagg", "link": "https://stackoverflow.com/users/587300/stestagg"}, "reply_to_user": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1515001612, "post_id": 48080070, "comment_id": 83139482, "body": "@NovaDenizen - Sorry, I had attempted to simplify the problem above by providing a similar example that does compile.  A more relevant sample that shows the same compiler error is here: <a href=\"https://play.rust-lang.org/?gist=ea3ca0a6591eabb1b74ae75f1317085e&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1515004705, "post_id": 48080070, "comment_id": 83141049, "body": "Highly likely to be a duplicate of <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>. You have a single struct containing both <code>Box&lt;StreamingIterator&gt;</code> and a <code>gzip::Decoder</code>. The iterator returns references to itself and you try to keep them in the decoder; thus trying to store a reference to itself inside of itself."}, {"owner": {"reputation": 81, "user_id": 587300, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70714088376128f87d75218edf66356a?s=128&d=identicon&r=PG", "display_name": "stestagg", "link": "https://stackoverflow.com/users/587300/stestagg"}, "edited": false, "score": 1, "creation_date": 1515005445, "post_id": 48080070, "comment_id": 83141425, "body": "Well, possibly, but it&#39;s very unclear how.   The intent is to borrow a reference from the Iterator, and store a decoder that uses that borrowed reference, allowing a reference to that decoder to be borrowed on.  The iterator returns references to a slice, which shouldn&#39;t, as I understand, it be tied to the iterator instance"}], "owner": {"reputation": 81, "user_id": 587300, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70714088376128f87d75218edf66356a?s=128&d=identicon&r=PG", "display_name": "stestagg", "link": "https://stackoverflow.com/users/587300/stestagg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 108, "favorite_count": 0, "closed_date": 1515900243, "answer_count": 0, "score": 0, "last_activity_date": 1516026405, "creation_date": 1514992143, "last_edit_date": 1516026405, "question_id": 48080070, "link": "https://stackoverflow.com/questions/48080070/how-to-resolve-lifetime-issues-implementing-streaming-iterators", "closed_reason": "Duplicate", "title": "How to resolve lifetime issues implementing streaming iterators", "body": "<p><strong>Not clearly a duplicate of the linked question</strong></p>\n\n<p>This question is about returning a reference to the member of an owned struct, not about storing a reference to an owned value on the same object.</p>\n\n<p>I'm hoping for some explanation, or some hints towards what is happening in the very specific case.</p>\n\n<hr>\n\n<p>I'm using the <a href=\"https://github.com/sfackler/streaming-iterator\" rel=\"nofollow noreferrer\">streaming iterators library</a> to build runtime pipelines where the exact types of iterators are not known at compile time. For example, I want to construct a pipeline like</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>read a file &gt; gunzip it &gt; parse the contents &gt; extract fields\n</code></pre>\n\n<p>To do this efficiently, borrowing slices across the iterators seems important. My best attempt at creating an iterator that gzip decompresses <code>[u8]</code>s passed in by another iterator is <a href=\"https://play.rust-lang.org/?gist=ea3ca0a6591eabb1b74ae75f1317085e&amp;version=stable\" rel=\"nofollow noreferrer\">in a playground</a>.</p>\n\n<p>The error produced is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/main.rs:48:50\n   |\n48 |         self.reader = gzip::Decoder::new(self.it.next().unwrap()).ok();\n   |                                                  ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 47:5...\n  --&gt; src/main.rs:47:5\n   |\n47 | /     fn advance(&amp;mut self) { \n48 | |         self.reader = gzip::Decoder::new(self.it.next().unwrap()).ok();\n49 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:48:42\n   |\n48 |         self.reader = gzip::Decoder::new(self.it.next().unwrap()).ok();\n   |                                          ^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 44:1...\n  --&gt; src/main.rs:44:1\n   |\n44 | / impl&lt;'a&gt; StreamingIterator for GunzipIter&lt;'a&gt; {\n45 | |     type Item = gzip::Decoder&lt;&amp;'a [u8]&gt;;\n46 | |     \n47 | |     fn advance(&amp;mut self) { \n...  |\n50 | |     fn get(&amp;self) -&gt; Option&lt;&amp;gzip::Decoder&lt;&amp;'a [u8]&gt;&gt; { Some(&amp;(self.reader.unwrap())) }\n51 | | }\n   | |_^\nnote: ...so that expression is assignable (expected std::option::Option&lt;gzip::Decoder&lt;&amp;'a [u8]&gt;&gt;, found std::option::Option&lt;gzip::Decoder&lt;&amp;[u8]&gt;&gt;)\n  --&gt; src/main.rs:48:23\n   |\n48 |         self.reader = gzip::Decoder::new(self.it.next().unwrap()).ok();\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>There's <a href=\"https://github.com/sfackler/streaming-iterator/issues/4\" rel=\"nofollow noreferrer\">an example</a> from the library:</p>\n\n<pre><code>use streaming_iterator::StreamingIterator;\n\npub struct FakeStreamingIterator&lt;'a, I, T&gt;\nwhere\n    I: Iterator&lt;Item = &amp;'a &amp;'a T&gt;,\n    T: 'a + ?Sized,\n{\n    inner: Box&lt;I&gt;,\n    current: Option&lt;&amp;'a &amp;'a T&gt;,\n}\n\nimpl&lt;'a, I, T&gt; FakeStreamingIterator&lt;'a, I, T&gt;\nwhere\n    I: Iterator&lt;Item = &amp;'a &amp;'a T&gt;,\n    T: ?Sized,\n{\n    fn new(inner: I) -&gt; FakeStreamingIterator&lt;'a, I, T&gt; {\n        FakeStreamingIterator {\n            inner: Box::new(inner),\n            current: None,\n        }\n    }\n}\n\nimpl&lt;'a, I, T&gt; StreamingIterator for FakeStreamingIterator&lt;'a, I, T&gt;\nwhere\n    I: Iterator&lt;Item = &amp;'a &amp;'a T&gt;,\n    T: ?Sized,\n{\n    type Item = T;\n\n    fn advance(&amp;mut self) {\n        self.current = self.inner.next();\n    }\n    fn get(&amp;self) -&gt; Option&lt;&amp;T&gt; {\n        self.current.map(|x| *x)\n    }\n}\n</code></pre>\n\n<p>That compiles fine, but a similar example that more closely matches my use-case doesn't:</p>\n\n<pre><code>use streaming_iterator::StreamingIterator;\n\npub struct FakeStreamingIterator&lt;'a&gt; {\n    inner: Box&lt;StreamingIterator&lt;Item = [u8]&gt;&gt;,\n    current: Option&lt;&amp;'a [u8]&gt;,\n}\n\nimpl&lt;'a&gt; FakeStreamingIterator&lt;'a&gt; {\n    fn new(inner: Box&lt;StreamingIterator&lt;Item = [u8]&gt;&gt;) -&gt; FakeStreamingIterator&lt;'a&gt; {\n        FakeStreamingIterator {\n            inner: inner,\n            current: None,\n        }\n    }\n}\n\nimpl&lt;'a&gt; StreamingIterator for FakeStreamingIterator&lt;'a&gt; {\n    type Item = [u8];\n\n    fn advance(&amp;mut self) {\n        self.current = self.inner.next();\n    }\n    fn get(&amp;self) -&gt; Option&lt;&amp;[u8]&gt; {\n        self.current.map(|x| x)\n    }\n}\n</code></pre>\n\n<p>The error always comes down to lifetime mismatches, but I don't understand how to resolve this.  The main differences, as I can see are:</p>\n\n<ul>\n<li>I'm holding a <code>Box</code> of a trait, rather than a <code>Box</code> of a type. This is needed because the parent iterator is not known at compile time.</li>\n<li>I'm using a slice rather than a reference to a reference. I don't understand why that would affect lifetimes.</li>\n</ul>\n\n<p>In my mind, there are two logical lifetimes in play:</p>\n\n<ol>\n<li>The lifetime of the iterator</li>\n<li>The lifetime of the current slice. </li>\n</ol>\n\n<p>The slice lifetime must be shorter than the iterator lifetime.  I'm assuming there's a situation where Rust can guarantee that <code>advance(&amp;mut)</code> isn't called while there's an active borrow from the result of <code>get(&amp;)</code> alive, but am not sure how this can be written.</p>\n\n<p>I've read a lot about borrows and lifetimes, but don't understand the difference in this situation.</p>\n"}, {"tags": ["rust", "polymorphism", "subtyping"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1514990991, "post_id": 48079557, "comment_id": 83133300, "body": "Could you show how you are going to implement some <code>ThemePark</code>s, let&#39;s say, <code>impl ThemePark&lt;???, ???&gt; for FunIsland { ??? }</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1514992748, "post_id": 48079557, "comment_id": 83134402, "body": "You should go back and re-read <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a>, specifically the chapter about <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\"><i>trait objects</i></a>."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user4063815"}, "edited": false, "score": 0, "creation_date": 1514994036, "post_id": 48079759, "comment_id": 83135186, "body": "The problem in <code>Asset</code> persists though. I cannot have an <code>Asset</code> that has a member of <code>Box&lt;ThemePark&gt;</code> because <code>ThemePark</code> cannot be made into an object. Is there any workaround for that?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user7677469"}, "edited": false, "score": 0, "creation_date": 1514994502, "post_id": 48079759, "comment_id": 83135468, "body": "@Sorona That&#39;s probably because <code>create</code> has no receiver, right? See: <a href=\"https://stackoverflow.com/questions/38159771/why-can-a-trait-not-construct-itself\" title=\"why can a trait not construct itself\">stackoverflow.com/questions/38159771/&hellip;</a>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user4063815"}, "edited": false, "score": 0, "creation_date": 1514997175, "post_id": 48079759, "comment_id": 83137021, "body": "Still not a solution to my problem. Of course the individual <code>Attraction</code> or <code>Visitor</code> are different structs, so an impl of <code>ThemePark</code> will create <code>ElderlyGuys</code> as Visitors and then I get that <code>ElderlyGuys</code> was given but <code>Visitors</code> was expected."}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1514999429, "post_id": 48079759, "comment_id": 83138292, "body": "@Sorona instead of directly inserting an <code>ElderlyGuy</code> into the <code>Vec</code>, insert <code>Box::new(ElderlyGuy::new())</code> into the <code>Vec</code>."}, {"owner": {"user_type": "does_not_exist", "display_name": "user4063815"}, "reply_to_user": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1515003878, "post_id": 48079759, "comment_id": 83140605, "body": "@NovaDenizen I do just that (else I would get an error that a <code>Box</code> was expected while an <code>ElderlyGuy</code> was given), but then I get that <code>Box&lt;ElderlyGuy&gt;</code> is not the same as <code>Box&lt;Visitor&gt;</code> and the latter was expected!"}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1515012442, "post_id": 48079759, "comment_id": 83144584, "body": "Maybe you didn&#39;t declare the type of the vector.  See <a href=\"https://play.rust-lang.org/?gist=62faba37b5f0830cda9133d5530bc560&amp;version=stable\" rel=\"nofollow noreferrer\">here</a>, especially the comment in <code>make_buffet()</code>."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1514992157, "last_edit_date": 1514992157, "creation_date": 1514991081, "answer_id": 48079759, "question_id": 48079557, "link": "https://stackoverflow.com/questions/48079557/rust-subtyping-runtime-polymorphism-using-traits-in-boxes/48079759#48079759", "title": "Rust subtyping/&quot;runtime polymorphism&quot;/using traits in Boxes", "body": "<p>Rust polymorphism is very similar to C++ polymorphism in that regard; it features:</p>\n\n<ul>\n<li>compile-time polymorphism, to parameterize an item with types known at compile-time,</li>\n<li>run-time polymorphism, when the concrete types are not known at compile-time.</li>\n</ul>\n\n<p>Rust uses <code>trait</code> to define an <em>interface</em> which is then used to both constrain compile-time type parameters and serve as base-class/interface for run-time polymorphism, which is perhaps where your confusion comes from, however both kinds of polymorphism are inherently different.</p>\n\n<pre><code>pub struct Asset&lt;'a&gt; {\n    name: &amp;str,\n    theme_park: Box&lt;ThemePark&lt;&gt; + 'a&gt; // &lt;-- This won't compile, as ThemePark needs 2 type arguments\n}\n</code></pre>\n\n<p>Then you should NOT be using compile-time polymorphism, and instead define <code>ThemePark</code> as:</p>\n\n<pre><code>pub trait ThemePark {\n    fn create(square_size: u32, name: &amp;str) -&gt; Self;\n    fn get_attractions(&amp;self) -&gt; Vec&lt;Box&lt;Attraction&gt;&gt;;\n    fn get_visitors(&amp;self) -&gt; Vec&lt;Box&lt;Visitor&gt;&gt;;\n}\n</code></pre>\n\n<p>By instantiating a <code>ThemePark&lt;A, V&gt;</code> you create a theme park which can only ever contain <em>one type</em> of attractions (it's all Haunted Houses here, no Flume Ride sorry!) and <em>one type</em> of visitors (only Elderly Guys in, no Elderly Ladies or Kids).</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user4063815"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1124, "favorite_count": 2, "accepted_answer_id": 48079759, "answer_count": 1, "score": 1, "last_activity_date": 1514992157, "creation_date": 1514990392, "last_edit_date": 1514992049, "question_id": 48079557, "link": "https://stackoverflow.com/questions/48079557/rust-subtyping-runtime-polymorphism-using-traits-in-boxes", "title": "Rust subtyping/&quot;runtime polymorphism&quot;/using traits in Boxes", "body": "<p>Consider the following dumbed-down example:</p>\n\n<pre><code>pub trait ThemePark&lt;A, V&gt;\nwhere\n    A: Attraction,\n    V: Visitor,\n{\n    fn create(square_size: u32, name: &amp;str) -&gt; Self;\n    fn get_attractions(&amp;self) -&gt; Vec&lt;A&gt;;\n    fn get_visitors(&amp;self) -&gt; Vec&lt;V&gt;;\n}\n\npub trait Attraction {}\npub trait Visitor {}\n</code></pre>\n\n<p>A concrete <code>ThemePark</code> could have an arbitrary set of attractions, as well as visitors. They are implemented with structs: </p>\n\n<pre><code>struct ElderlyWhiteMale;\nimpl Visitor for ElderlyWhiteMale {}\n</code></pre>\n\n<p>A <code>ThemePark</code> is wrapped in some company's assets, like so:</p>\n\n<pre><code>pub struct Asset&lt;'a&gt; {\n    name: &amp;str,\n    theme_park: Box&lt;ThemePark&lt;&gt; + 'a&gt; // &lt;-- This won't compile, as ThemePark needs 2 type arguments\n}\n</code></pre>\n\n<p>This begins my pain. I put <code>ThemePark</code> in a <code>Box</code> because I don't know the size of it at compile time. It could be wrapped around any kind of <code>Attraction</code> and <code>Visitor</code>.</p>\n\n<p><code>ThemePark</code> needs 2 type arguments, but I can't know them at compile-time. Somewhere in my code I read this from an external file and build a <code>ThemePark</code> accordingly.</p>\n\n<p>The idea is, that at runtime I can create a <code>ThemePark</code> from an external source and then invoke the <code>functions</code> defined in the trait on it.</p>\n\n<pre><code>impl Asset {\n    fn init_and_query() -&gt; () {\n        let theme_park: Box&lt;ThemePark&gt; = match external_file.get_theme_park_type {\n            ThemeParkType::FUN =&gt; unimplemented! {\"There is no fun, yet!\"},\n            ThemeParkType::SERIOUS =&gt; {\n                println!(\"Creating serious themepark\");\n\n                SeriousThemePark::create(size /*...*/)\n            }\n        };\n\n        let attractions = theme_park.get_attractions();\n        // ... Do something with the attractions\n    }\n}\n\npub enum ThemeParkType {\n    FUN,\n    SERIOUS,\n}\n</code></pre>\n\n<p>I understand that I can't put the <code>ThemePark</code> as-is on the stack... it's size is unknown at compile time, so the compiler can't know what to allocate.</p>\n\n<p>That's why I either use a reference <code>&amp;</code> or wrap it in a <code>Box</code> like I do here.</p>\n\n<p>I understand there is type erasure, meaning that I would get back only a <code>ThemePark</code> and not a <code>SeriousThemePark</code>, but that would suffice for the moment.</p>\n\n<p>Am I using traits all wrong here? How would you go and fix that. Coming from Java/Scala/C++ I seem to be stuck too deep in existing thinking.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1514976890, "post_id": 48074447, "comment_id": 83125478, "body": "What are you trying to achieve?  In most situations, you won&#39;t need a raw pointer to a trait object.  If you provide some more context you may get a better solution."}, {"owner": {"user_type": "does_not_exist", "display_name": "user4063815"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1514988267, "post_id": 48074447, "comment_id": 83131727, "body": "@SvenMarnach well, the actual problem is, that I&#39;d like to get runtime-polymorphism like I am used to it in Java, Scala etc. Like, I don&#39;t know which attraction I get until Runtime. But I fear that&#39;s another question altogether."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1514992675, "post_id": 48074447, "comment_id": 83134362, "body": "@Sorona Trait objects actually do give you runtime polymorphism.  <code>Box&lt;Attraction&gt;</code> is a pointer to an instance of a type implementing the <code>Attraction</code> trait, but the actual type does not need to be known at compile time, so calling <code>self.attraction.visit()</code> will dynamically dispatch to the correct <code>visit()</code> implementation.  See also the <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">section on trait objects</a> in the book."}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 2, "last_activity_date": 1514971411, "creation_date": 1514971411, "answer_id": 48074496, "question_id": 48074447, "link": "https://stackoverflow.com/questions/48074447/cannot-move-out-of-borrowed-content-for-boxinto-raw-on-self-attribute/48074496#48074496", "title": "Cannot move out of borrowed content for Box::into_raw on self.attribute", "body": "<p>You won't be able to use that function on <code>self.attraction</code> while mutably borrowing <code>self</code>; as per the very first line in its docs:</p>\n\n<blockquote>\n  <p>Consumes the <code>Box</code></p>\n</blockquote>\n\n<p>You either need to <code>.clone()</code> it or use a function that consumes <code>self</code> (e.g. <code>fn open(self)</code>).</p>\n\n<p>I recommend re-reading <a href=\"https://doc.rust-lang.org/book/first-edition/ownership.html\" rel=\"nofollow noreferrer\">The Rust Book's chapter on Ownership</a>.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user4063815"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 48074496, "answer_count": 1, "score": 1, "last_activity_date": 1514971411, "creation_date": 1514971221, "question_id": 48074447, "link": "https://stackoverflow.com/questions/48074447/cannot-move-out-of-borrowed-content-for-boxinto-raw-on-self-attribute", "title": "Cannot move out of borrowed content for Box::into_raw on self.attribute", "body": "<pre><code>pub struct Themepark {\n    attraction: Box&lt;Attraction&gt;\n}\n</code></pre>\n\n<p><strong>Note</strong>: <code>Attraction</code> is a trait!</p>\n\n<pre><code>impl Themepark {\n\n    pub fn open(&amp;mut self) -&gt; Result&lt;(), ()&gt; {\n\n        let attraction = Box::into_raw(self.attraction);\n\n    ...\n    }\n\n}\n</code></pre>\n\n<p>that gives me </p>\n\n<pre><code>&gt; cannot move out of borrowed content\n</code></pre>\n\n<p>for <code>self.attraction</code> inside <code>Box::into_raw</code></p>\n\n<p>Now I do understand what that particular <em>error-message</em> means, but I don't understand how to solve it as <code>Box::into_raw</code> expects a <code>Box&lt;T&gt;</code> as argument, not a reference or anything.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.into_raw\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/boxed/struct.Box.html#method.into_raw</a></p>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 1, "creation_date": 1514989574, "post_id": 48071513, "comment_id": 83132434, "body": "Interesting, I thought I was the only one who did not understand that part in the docs. However, it was easy to know by experimenting with it."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 10, "creation_date": 1514993583, "post_id": 48071730, "comment_id": 83134919, "body": "Thanks. That seems counterintuitive. I need to <code>mod b</code> in <code>main.rs</code> in order to <code>use b</code> in <code>a.rs</code>."}, {"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 1, "creation_date": 1515029622, "post_id": 48071730, "comment_id": 83149922, "body": "The idea is that <code>mod</code> is for building the module tree and <code>use</code> is for short-circuiting it. The absolute path <code>::b::b();</code> works without <code>use b;</code>. (Note that the syntax for absolute paths will change in future versions of Rust, in favor of <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2126-path-clarity.md\" rel=\"nofollow noreferrer\">RFC 2126</a>.)"}], "tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 34, "last_activity_date": 1561774256, "last_edit_date": 1561774256, "creation_date": 1514957778, "answer_id": 48071730, "question_id": 48071513, "link": "https://stackoverflow.com/questions/48071513/how-to-use-one-module-from-another-module-in-a-rust-cargo-project/48071730#48071730", "title": "How to use one module from another module in a Rust cargo project?", "body": "<p>You'll have to include <code>b.rs</code> somewhere, typically with <code>mod b;</code>. If <code>b</code> is a child of <code>a</code> (instead of being a sibling of <code>a</code>), there are two ways to do this:</p>\n\n<ul>\n<li><strong>Recommended</strong>: rename <code>a.rs</code> into <code>a/mod.rs</code> and <code>b.rs</code> into <code>a/b.rs</code>. Then you can <code>mod b;</code> in <code>a/mod.rs</code>.</li>\n<li>Instead, you can just <code>#[path = \"b.rs\"] mod b;</code> in <code>a.rs</code> without renaming sources.</li>\n</ul>\n\n<p>If <code>b</code> is intended to be a sibling of <code>a</code> (instead of being a child of <code>a</code>), you can just <code>mod b;</code> in <code>main.rs</code> and then <code>use crate::b;</code> in <code>a.rs</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "edited": false, "score": 0, "creation_date": 1555999162, "post_id": 55658043, "comment_id": 98278040, "body": "Would it be possible to explain your answer in to the context? I am having trouble following your solution"}, {"owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "edited": false, "score": 0, "creation_date": 1556017204, "post_id": 55658043, "comment_id": 98286572, "body": "I have tried adding <code>use create::b</code> in the <code>a.rs</code>. However I still encountering error:"}, {"owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "edited": false, "score": 0, "creation_date": 1556017799, "post_id": 55658043, "comment_id": 98286842, "body": "<code>use of undeclared type of module create</code>"}, {"owner": {"reputation": 2304, "user_id": 470307, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1NPFP.jpg?s=128&g=1", "display_name": "Vasili Pascal", "link": "https://stackoverflow.com/users/470307/vasili-pascal"}, "edited": false, "score": 0, "creation_date": 1604413358, "post_id": 55658043, "comment_id": 114336146, "body": "I suppose this works only if you include b in the main.rs file with mod b."}, {"owner": {"reputation": 768, "user_id": 1594086, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ec67a40aabf1da9346212b6b6cd1b87?s=128&d=identicon&r=PG", "display_name": "Ivan Pierre", "link": "https://stackoverflow.com/users/1594086/ivan-pierre"}, "edited": false, "score": 0, "creation_date": 1607203538, "post_id": 55658043, "comment_id": 115200341, "body": "I think <code>crate::</code> will work better ;)"}], "tags": [], "owner": {"reputation": 302, "user_id": 4944958, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d4e6f205d1706d34d121804fdec96dc?s=128&d=identicon&r=PG&f=1", "display_name": "Volodymyr Lisovskyi", "link": "https://stackoverflow.com/users/4944958/volodymyr-lisovskyi"}, "is_accepted": false, "score": 17, "last_activity_date": 1594044757, "last_edit_date": 1594044757, "creation_date": 1555095987, "answer_id": 55658043, "question_id": 48071513, "link": "https://stackoverflow.com/questions/48071513/how-to-use-one-module-from-another-module-in-a-rust-cargo-project/55658043#55658043", "title": "How to use one module from another module in a Rust cargo project?", "body": "<p>The method from <a href=\"https://stackoverflow.com/a/48071730/155423\">the accepted answer</a> doesn't work for me in Rust 1.33. Instead, I use the sibling module like this:</p>\n<pre><code>use crate::b;\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7960, "favorite_count": 5, "accepted_answer_id": 48071730, "answer_count": 2, "score": 23, "last_activity_date": 1594044757, "creation_date": 1514956248, "question_id": 48071513, "link": "https://stackoverflow.com/questions/48071513/how-to-use-one-module-from-another-module-in-a-rust-cargo-project", "title": "How to use one module from another module in a Rust cargo project?", "body": "<p>There's a lot of Rust <a href=\"https://www.google.ca/search?q=rust+use+module\" rel=\"noreferrer\">documentation</a> about using modules, but I haven't found an example of a Cargo binary that has multiple modules, with one module using another. My example has three files inside the src folder. Modules a and b are at the same level. One is not a submodule of another.</p>\n\n<p>main.rs:</p>\n\n<pre><code>mod a;\n\nfn main() {\n    println!(\"Hello, world!\");\n    a::a();\n}\n</code></pre>\n\n<p>a.rs:</p>\n\n<pre><code>pub fn a() {\n    println!(\"A\");\n    b::b();\n}\n</code></pre>\n\n<p>and b.rs:</p>\n\n<pre><code>pub fn b() {\n    println!(\"B\");\n}\n</code></pre>\n\n<p>I've tried variations of <code>use b</code> and <code>mod b</code> inside a.rs, but I cannot get this code to compile. If I try to use <code>use b</code>, for example, I get the following error:</p>\n\n<pre><code> --&gt; src/a.rs:1:5\n  |\n1 | use b;\n  |     ^ no `b` in the root. Did you mean to use `a`?\n</code></pre>\n\n<p>What's the right way to have Rust recognize that I want to use module b from module a inside a cargo app?</p>\n"}, {"tags": ["reference", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514947808, "post_id": 48070460, "comment_id": 83114795, "body": "Rust automatically dereferences the subject of a method. Your code also works for <code>&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;[1, 2, 4];</code>"}, {"owner": {"reputation": 2559, "user_id": 665869, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b73cd84b791b01148061a5dab96eebc6?s=128&d=identicon&r=PG", "display_name": "mitnk", "link": "https://stackoverflow.com/users/665869/mitnk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514949490, "post_id": 48070460, "comment_id": 83115087, "body": "I saw this in doc, this is removing <code>&amp;</code> when needed. It doesn&#39;t say rust can add <code>&amp;</code> as needed - i.e. <code>iter(&amp;self)</code> could call with <code>x.iter()</code>. (It is explained in the SO answer you linked above)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514949804, "post_id": 48070460, "comment_id": 83115140, "body": "It&#39;s explained in the book. The first reference I could find on my phone is in the <a href=\"https://doc.rust-lang.org/book/second-edition/ch05-03-method-syntax.html#wheres-the---operator\" rel=\"nofollow noreferrer\">method syntax chapter</a>"}, {"owner": {"reputation": 2559, "user_id": 665869, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b73cd84b791b01148061a5dab96eebc6?s=128&d=identicon&r=PG", "display_name": "mitnk", "link": "https://stackoverflow.com/users/665869/mitnk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514951718, "post_id": 48070460, "comment_id": 83115516, "body": "Thanks this section is what I missed. It states &quot;rust has a feature called automatic <b>referencing</b> and dereferencing&quot;. It seems most places only mentioned <a href=\"https://doc.rust-lang.org/book/first-edition/deref-coercions.html\" rel=\"nofollow noreferrer\">auto deref</a>. This is the first place I saw &quot;auto ref&quot;."}], "owner": {"reputation": 2559, "user_id": 665869, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b73cd84b791b01148061a5dab96eebc6?s=128&d=identicon&r=PG", "display_name": "mitnk", "link": "https://stackoverflow.com/users/665869/mitnk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "closed_date": 1514947743, "answer_count": 0, "score": 0, "last_activity_date": 1514947840, "creation_date": 1514947030, "last_edit_date": 1514947840, "question_id": 48070460, "link": "https://stackoverflow.com/questions/48070460/why-does-calling-iter-on-both-an-array-and-a-reference-to-an-array-work", "closed_reason": "Duplicate", "title": "Why does calling iter on both an array and a reference to an array work?", "body": "<p>The only difference between these two examples is that the first has an <code>&amp;</code> in <code>&amp;[1, 2, 4]</code>. Both examples work. I tried to find documentation for this reason but haven't found any yet. What is the reason here? Links to documentation would be appreciated.</p>\n\n<p>Example 1:</p>\n\n<pre><code>fn main() {\n    let x = &amp;[1, 2, 4];\n    let mut iterator = x.iter();\n    assert_eq!(iterator.next(), Some(&amp;1));\n    assert_eq!(iterator.next(), Some(&amp;2));\n    assert_eq!(iterator.next(), Some(&amp;4));\n    assert_eq!(iterator.next(), None);\n    println!(\"Ok.\");\n}\n</code></pre>\n\n<p>Example 2:</p>\n\n<pre><code>fn main() {\n    let x = [1, 2, 4];\n    let mut iterator = x.iter();\n    assert_eq!(iterator.next(), Some(&amp;1));\n    assert_eq!(iterator.next(), Some(&amp;2));\n    assert_eq!(iterator.next(), Some(&amp;4));\n    assert_eq!(iterator.next(), None);\n    println!(\"Ok.\");\n}\n</code></pre>\n"}, {"tags": ["generics", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1514946829, "creation_date": 1514946829, "answer_id": 48070439, "question_id": 48070368, "link": "https://stackoverflow.com/questions/48070368/how-to-define-rust-function-thats-generic-on-integers-that-can-do-bitwise-opera/48070439#48070439", "title": "How to define Rust function that&#39;s generic on integers that can do bitwise operations?", "body": "<blockquote>\n  <p>Do I need to use [<code>Shl</code>] to make this work?</p>\n</blockquote>\n\n<p>Yes. You also need to make sure the <a href=\"https://stackoverflow.com/q/29184358/155423\">result of the operation is the right type</a>:</p>\n\n<pre><code>extern crate num;\n\nuse num::Integer;\nuse std::ops::Shl;\n\nfn f1&lt;T&gt;(n: u8) -&gt; T\nwhere\n    T: Integer + Shl&lt;u8, Output = T&gt;,\n{\n    T::one() &lt;&lt; n\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 0, "accepted_answer_id": 48070439, "answer_count": 1, "score": 0, "last_activity_date": 1514946829, "creation_date": 1514946112, "last_edit_date": 1514946443, "question_id": 48070368, "link": "https://stackoverflow.com/questions/48070368/how-to-define-rust-function-thats-generic-on-integers-that-can-do-bitwise-opera", "title": "How to define Rust function that&#39;s generic on integers that can do bitwise operations?", "body": "<p>I have the following function:</p>\n\n<pre><code>fn f1(n: u8) -&gt; u16 {\n    1 &lt;&lt; n\n}\n</code></pre>\n\n<p>I can try to (unsuccessfully) make it generic on integers:</p>\n\n<pre><code>extern crate num;\n\nuse num::Integer;\n\nfn f1&lt;T: Integer&gt;(n: u8) -&gt; T {\n    1 &lt;&lt; n\n}\n</code></pre>\n\n<p>This doesn't work. It generates the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:6:5\n  |\n5 | fn f1&lt;T: Integer&gt;(n: u8) -&gt; T {\n  |                             - expected `T` because of return type\n6 |     1 &lt;&lt; n\n  |     ^^^^^^ expected type parameter, found integral variable\n  |\n  = note: expected type `T`\n             found type `{integer}`\n</code></pre>\n\n<p>I understand there is the <a href=\"https://doc.rust-lang.org/std/ops/trait.Shl.html\" rel=\"nofollow noreferrer\"><code>Shl</code> trait</a>. Do I need to use this trait to make this work? How would I do this?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1514941070, "post_id": 48069670, "comment_id": 83113502, "body": "<code>A</code> and <code>S</code> are already generic. You seem to want to use trait objects instead."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514941079, "post_id": 48069670, "comment_id": 83113506, "body": "<i>The type signature for FooHack requires <code>A</code> and <code>S</code> be concrete types</i> \u2014 yes, that&#39;s kind of the <i>point</i> of a type being generic; you fill it in with concrete types when you go to use it."}, {"owner": {"reputation": 129, "user_id": 3393509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22c5f76066b63dfbfa21851330ac5bf1?s=128&d=identicon&r=PG", "display_name": "Flarp", "link": "https://stackoverflow.com/users/3393509/flarp"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1514941424, "post_id": 48069670, "comment_id": 83113576, "body": "@E_net4 I do want to use trait objects, but I can&#39;t find a way to express it in the terms provided"}, {"owner": {"reputation": 129, "user_id": 3393509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22c5f76066b63dfbfa21851330ac5bf1?s=128&d=identicon&r=PG", "display_name": "Flarp", "link": "https://stackoverflow.com/users/3393509/flarp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514941548, "post_id": 48069670, "comment_id": 83113600, "body": "@Shepmaster You are correct, but what if I want to change Baz to something that also applies to <code>T: Sub&lt;S, Output=T&gt;</code> ? This would require a new type, I&#39;m looking for a way to do it with trait objects."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514942096, "post_id": 48069670, "comment_id": 83113727, "body": "See also <a href=\"https://stackoverflow.com/q/48027839/155423\">How to Box a trait that has associated types?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 129, "user_id": 3393509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22c5f76066b63dfbfa21851330ac5bf1?s=128&d=identicon&r=PG", "display_name": "Flarp", "link": "https://stackoverflow.com/users/3393509/flarp"}, "edited": false, "score": 0, "creation_date": 1514942546, "post_id": 48069900, "comment_id": 83113826, "body": "How would this work for operator overloading? How would I get <code>MyAdd</code> called if the inside of <code>Bar(x)</code> was applied like <code>x + v</code> where <code>v</code> is of type <code>T</code>?"}, {"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "reply_to_user": {"reputation": 129, "user_id": 3393509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22c5f76066b63dfbfa21851330ac5bf1?s=128&d=identicon&r=PG", "display_name": "Flarp", "link": "https://stackoverflow.com/users/3393509/flarp"}, "edited": false, "score": 0, "creation_date": 1514959896, "post_id": 48069900, "comment_id": 83117696, "body": "@Flarp edited my answer assuming you want <code>v - x</code> direction (instead of <code>x - v</code>) where <code>x</code> is from <code>Baz(x)</code>. If you really want <code>x - v</code> direction, then it works without hitting coherence restriction. But in this case, the arguments are flipped from the original <code>T: Sub&lt;U, Output = T&gt;</code> trait bound (which means <code>(v : T) - (x : U)</code>)."}, {"owner": {"reputation": 129, "user_id": 3393509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22c5f76066b63dfbfa21851330ac5bf1?s=128&d=identicon&r=PG", "display_name": "Flarp", "link": "https://stackoverflow.com/users/3393509/flarp"}, "edited": false, "score": 0, "creation_date": 1514980823, "post_id": 48069900, "comment_id": 83127596, "body": "Thanks! Sucks it can&#39;t be done without new types, though."}], "tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 2, "last_activity_date": 1514959456, "last_edit_date": 1514959456, "creation_date": 1514941503, "answer_id": 48069900, "question_id": 48069670, "link": "https://stackoverflow.com/questions/48069670/box-inverse-traits-where-clauses-in-boxes/48069900#48069900", "title": "Box inverse traits/Where clauses in boxes", "body": "<p>Perhaps you're already aware of <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait objects</a>? That's the exact match for your purpose to have <code>U</code> dynamically change for the fixed <code>T</code>.</p>\n\n<p>However, two problems prevent the direct usage of <code>Add</code> or <code>Sub</code> as a trait object:</p>\n\n<ol>\n<li><code>Add</code> and <code>Sub</code> aren't object-safe, as it expects a by-value <code>self</code> argument.</li>\n<li>Trait objects are existential over <code>Self</code>, but you want trait objects that are existential over <code>RHS</code> of <code>Add</code>/<code>Sub</code>.</li>\n</ol>\n\n<p>Therefore you'll have to do extra work to introduce intermediate traits:</p>\n\n<pre><code>use std::ops::Add;\n\ntrait MyAdd&lt;T&gt; {\n    fn my_add(&amp;self, other: T) -&gt; T;\n}\n\nimpl&lt;T, U&gt; MyAdd&lt;T&gt; for U\nwhere\n    T: Add&lt;U, Output = T&gt;,\n    U: Clone,\n{\n    fn my_add(&amp;self, other: T) -&gt; T {\n        other + self.clone()\n    }\n}\n\nenum Foo&lt;T&gt; {\n    Bar(Box&lt;MyAdd&lt;T&gt;&gt;),\n}\n</code></pre>\n\n<p>If you don't want <code>U: Clone</code>, there are options depending on your usage:</p>\n\n<ul>\n<li>Assume <code>T: Add&lt;&amp;'a U, Output = T&gt;</code> instead of <code>T: Add&lt;U, Output = T&gt;</code></li>\n<li>Use <code>self: Box&lt;Self&gt;</code> instead of <code>&amp;self</code> in <code>fn my_add</code></li>\n</ul>\n\n<h1>Edit: operator overloading</h1>\n\n<p>The proxy trait <code>MyAdd&lt;T&gt;</code> above doesn't proxy operator overloading by itself; thus you'll have to manually implement <code>std::ops::Add</code> for this.</p>\n\n<pre><code>// Coherence error\nimpl&lt;T&gt; Add&lt;Box&lt;MyAdd&lt;T&gt;&gt;&gt; for T {\n    type Output = T;\n    fn add(self, other: Box&lt;MyAdd&lt;T&gt;&gt;) -&gt; Self::Output {\n        other.my_add(self)\n    }\n}\n</code></pre>\n\n<p>However, this code doesn't work due to coherence restrictions. This restriction is fundamental because it's always possible that a sibling crate has an impl like <code>impl&lt;T&gt; Add&lt;T&gt; for TypeDefinedInTheSiblingCrate</code>, which surely overlaps with the impl above.</p>\n\n<p>One possible workaround is to use <a href=\"https://rustbyexample.com/generics/new_types.html\" rel=\"nofollow noreferrer\">the newtype pattern</a>:</p>\n\n<pre><code>struct Wrapper&lt;T&gt;(T);\n\nimpl&lt;T&gt; Add&lt;Box&lt;MyAdd&lt;T&gt;&gt;&gt; for Wrapper&lt;T&gt; {\n    type Output = Wrapper&lt;T&gt;;\n    fn add(self, other: Box&lt;MyAdd&lt;T&gt;&gt;) -&gt; Self::Output {\n        Wrapper(other.my_add(self.0))\n    }\n}\n</code></pre>\n\n<p>Then you can write things like <code>Wrapper(x) + boxed_myadd_value + another_myadd_value</code>.</p>\n"}], "owner": {"reputation": 129, "user_id": 3393509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22c5f76066b63dfbfa21851330ac5bf1?s=128&d=identicon&r=PG", "display_name": "Flarp", "link": "https://stackoverflow.com/users/3393509/flarp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 48069900, "answer_count": 1, "score": 1, "last_activity_date": 1514959456, "creation_date": 1514939259, "last_edit_date": 1514942734, "question_id": 48069670, "link": "https://stackoverflow.com/questions/48069670/box-inverse-traits-where-clauses-in-boxes", "title": "Box inverse traits/Where clauses in boxes", "body": "<p>I've run into the problem of not being able to use where clauses in <code>Box</code>es and other generic structs. This is useful for generic communicative adding. (A+B=B+A). An example of what I'm trying to achieve:</p>\n\n<pre><code>enum Foo&lt;T&gt; {\n    Bar(Box&lt;U where T: Add&lt;U, Output = T&gt;&gt;),\n    Baz(Box&lt;U where T: Sub&lt;U, Output = T&gt;&gt;),\n}\n</code></pre>\n\n<p>This can be semi-done using <code>where</code> clauses in the type definition:</p>\n\n<pre><code>enum FooHack&lt;T, A, S&gt;\nwhere\n    A: Add&lt;T, Output = T&gt;,\n    S: Sub&lt;T, Output = T&gt;,\n{\n    Bar(A),\n    Baz(S),\n    Dummy(PhantomData&lt;T&gt;), // to stop the compiler from complaining\n}\n</code></pre>\n\n<p>The type signature for <code>FooHack</code> requires <code>A</code> and <code>S</code> be concrete types. Is there a strategy so that <code>A</code> and <code>S</code> can be generic?</p>\n"}, {"tags": ["rust", "clap"], "answers": [{"comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 0, "creation_date": 1514930942, "post_id": 48068490, "comment_id": 83110607, "body": "You may also be interested in using <a href=\"https://docs.rs/clap/2.29.0/clap/struct.Arg.html#method.index\" rel=\"nofollow noreferrer\">index</a> with <a href=\"https://docs.rs/clap/2.29.0/clap/struct.Arg.html#method.multiple\" rel=\"nofollow noreferrer\">multiple</a>."}], "tags": [], "owner": {"reputation": 102358, "user_id": 15245, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9a2a53db8e9b4476038c94a64b32833f?s=128&d=identicon&r=PG", "display_name": "Ryan Bigg", "link": "https://stackoverflow.com/users/15245/ryan-bigg"}, "is_accepted": false, "score": 7, "last_activity_date": 1514932922, "last_edit_date": 1514932922, "creation_date": 1514930767, "answer_id": 48068490, "question_id": 48068334, "link": "https://stackoverflow.com/questions/48068334/taking-multiple-values-in-an-argument-in-clap/48068490#48068490", "title": "Taking multiple values in an argument in Clap", "body": "<p>durka42 from irc.mozilla.org#rust told me to use <code>values_of</code> instead of <code>value_of</code>:</p>\n\n<pre><code>let matches = App::new(\"just\")\n    .version(\"v1.0-beta\")\n    .subcommand(\n        SubCommand::with_name(\"use\")\n            .arg(Arg::with_name(\"repo\").required(true))\n            .arg(Arg::with_name(\"files\").required(true).min_values(1)),\n    )\n    .get_matches();\n\nif let Some(matches) = matches.subcommand_matches(\"use\") {\n    let files: Vec&lt;_&gt; = matches.values_of(\"files\").unwrap().collect();\n    println!(\"{}\", files[0]);\n    println!(\"{}\", files[1]);\n}\n</code></pre>\n\n<p>I could probably use an <code>iter()</code> call to go through the files if I wanted to.</p>\n"}], "owner": {"reputation": 102358, "user_id": 15245, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9a2a53db8e9b4476038c94a64b32833f?s=128&d=identicon&r=PG", "display_name": "Ryan Bigg", "link": "https://stackoverflow.com/users/15245/ryan-bigg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4217, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1514932922, "creation_date": 1514929904, "last_edit_date": 1514932876, "question_id": 48068334, "link": "https://stackoverflow.com/questions/48068334/taking-multiple-values-in-an-argument-in-clap", "title": "Taking multiple values in an argument in Clap", "body": "<p>I'm using <a href=\"https://docs.rs/clap/2.29.0/clap/\" rel=\"noreferrer\">Clap</a> and I'm trying to make it so that a subcommand can take multiple values for the argument. The interface I'm after is:</p>\n\n<pre><code>just use repo [files]\n</code></pre>\n\n<p>An example:</p>\n\n<pre><code>just use radar/dot-files gitaliases ryan-aliases\n</code></pre>\n\n<p>The <code>repo</code> argument here will be the string \"radar/dot-files\" and the <code>files</code> argument will be a vector of <code>[\"gitaliases\", \"ryan-aliases\"]</code>.</p>\n\n<p>Here's the code that I'm trying to use:</p>\n\n<pre><code>let matches = App::new(\"just\")\n    .version(\"v1.0-beta\")\n    .subcommand(\n        SubCommand::with_name(\"use\")\n            .arg(Arg::with_name(\"repo\").required(true))\n            .arg(\n                Arg::with_name(\"files\")\n                    .required(true)\n                    .multiple(true)\n                    .number_of_values(1),\n            ),\n    )\n    .get_matches();\n\nif let Some(matches) = matches.subcommand_matches(\"use\") {\n    println!(\"{:?}\", matches.value_of(\"files\").unwrap())\n}\n</code></pre>\n\n<p>This outputs just the first file that I specify, rather than <em>all</em> the files.</p>\n\n<p>How can I make it output all the different files, for an arbitrary number of arguments?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 0, "creation_date": 1514932942, "post_id": 48068404, "comment_id": 83111344, "body": "Thanks. I don\u2019t follow the Foo example but I\u2019m gathering it\u2019s less straightforward from what I\u2019m used to in Haskell."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1514933187, "post_id": 48068404, "comment_id": 83111435, "body": "I&#39;ve tried to explain the <code>Foo</code> example better."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 1, "last_activity_date": 1514933177, "last_edit_date": 1514933177, "creation_date": 1514930297, "answer_id": 48068404, "question_id": 48068289, "link": "https://stackoverflow.com/questions/48068289/how-to-implement-a-rust-constructor-thats-parameterized-on-an-integer/48068404#48068404", "title": "How to implement a Rust constructor that&#39;s parameterized on an integer?", "body": "<blockquote>\n  <p>What's wrong?</p>\n</blockquote>\n\n<p>This is:</p>\n\n<pre><code>struct Foo;\nimpl Integer for Foo { \u2026 }\nAlpha::&lt;Foo&gt;::new() // This should work as `Foo: Integer` and that's\n                    // the only condition on `Alpha::new`.\n                    // But it would need to create a instance\n                    // of `Foo` from `0`.\n                    // But the compiler has no idea how to do that!\n</code></pre>\n\n<p><code>num::Integer</code> implies <code>num::Zero</code>, <a href=\"http://play.integer32.com/?gist=2810523444f4036b6c6481bda0c4dd91&amp;version=stable\" rel=\"nofollow noreferrer\">you can just use that</a>:</p>\n\n<pre><code>impl&lt;T: Integer&gt; Alpha&lt;T&gt; {\n    fn new() -&gt; Alpha&lt;T&gt; {\n        Alpha { num: Zero::zero() }\n    }\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "closed_date": 1514932970, "accepted_answer_id": 48068404, "answer_count": 1, "score": 0, "last_activity_date": 1514933177, "creation_date": 1514929621, "question_id": 48068289, "link": "https://stackoverflow.com/questions/48068289/how-to-implement-a-rust-constructor-thats-parameterized-on-an-integer", "closed_reason": "Duplicate", "title": "How to implement a Rust constructor that&#39;s parameterized on an integer?", "body": "<p>I'd like to construct an object that's parameterized on an integer. Tried the following:</p>\n\n<pre><code>struct Alpha&lt;T&gt; {\n    num: T,\n}\n\nimpl&lt;T: Integer&gt; Alpha&lt;T&gt; {\n    fn new() -&gt; Alpha&lt;T&gt; {\n        Alpha { num: 0 }\n    }\n}\n</code></pre>\n\n<p>and got the error:</p>\n\n<pre><code>11 |         Alpha { num: 0 }\n   |                      ^ expected type parameter, found integral variable\n</code></pre>\n\n<p>The code is <a href=\"https://play.rust-lang.org/?gist=51490f46878fe8d66f92c1f63df61919&amp;version=stable\" rel=\"nofollow noreferrer\">here</a>. What's wrong?</p>\n"}, {"tags": ["rust", "visual-studio-code", "lldb"], "comments": [{"owner": {"reputation": 5580, "user_id": 26685, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/51bde710f2efaa9597f5f264937a8967?s=128&d=identicon&r=PG", "display_name": "schmoopy", "link": "https://stackoverflow.com/users/26685/schmoopy"}, "edited": false, "score": 0, "creation_date": 1515020371, "post_id": 48067874, "comment_id": 83147681, "body": "I may have found the solution buried within the vscode manual that lists a bug for the current version of lldb i am using:: <a href=\"https://github.com/vadimcn/vscode-lldb/blob/master/MANUAL.md\" rel=\"nofollow noreferrer\">github.com/vadimcn/vscode-lldb/blob/master/MANUAL.md</a>  Note: There is a known incompatibility of debug info emitted by rustc and LLDB 3.8: you won&#39;t be able to step through code or inspect variables if you have this version  I will try to upgrade or downgrade and report back"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1515011270, "post_id": 48084312, "comment_id": 83144089, "body": "<i>lldb doesn&#39;t have support for Rust</i> \u2014 citation and/or clarification required. Counterpoints <a href=\"https://users.rust-lang.org/t/announcing-lldb-for-vscode/6183\" rel=\"nofollow noreferrer\">1</a>, <a href=\"https://users.rust-lang.org/t/use-rust-gdb-and-rust-lldb-for-improved-debugging-you-already-have-them/756\" rel=\"nofollow noreferrer\">2</a>, <a href=\"https://github.com/rust-lang/rust/blob/master/src/etc/rust-lldb\" rel=\"nofollow noreferrer\">3</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1515011628, "post_id": 48084312, "comment_id": 83144224, "body": "And here&#39;s <a href=\"https://gist.github.com/shepmaster/1b5dc43e38a89dd4d56d34e730238b01\" rel=\"nofollow noreferrer\">an LLDB session where I print out some simple variables</a>."}, {"owner": {"reputation": 5580, "user_id": 26685, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/51bde710f2efaa9597f5f264937a8967?s=128&d=identicon&r=PG", "display_name": "schmoopy", "link": "https://stackoverflow.com/users/26685/schmoopy"}, "edited": false, "score": 0, "creation_date": 1515019588, "post_id": 48084312, "comment_id": 83147445, "body": "@Jim - from all of my research it appears to be mentioned many times over with people successfully using LLDB with Rust on Linux, for example: <a href=\"https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb\" rel=\"nofollow noreferrer\">marketplace.visualstudio.com/items?itemName=vadimcn.vscode-l&zwnj;&#8203;ldb</a>  (which mentions Rust support in last bullet)    <a href=\"https://klausi.github.io/rustnish/2017/05/28/using-visual-studio-code-for-rust-on-ubuntu.html\" rel=\"nofollow noreferrer\">klausi.github.io/rustnish/2017/05/28/&hellip;</a>"}, {"owner": {"reputation": 20083, "user_id": 2465073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f0f7ba796598ce99fe9d17b66c119b00?s=128&d=identicon&r=PG", "display_name": "Jim Ingham", "link": "https://stackoverflow.com/users/2465073/jim-ingham"}, "edited": false, "score": 0, "creation_date": 1515033052, "post_id": 48084312, "comment_id": 83150627, "body": "How right you are.  In late 2016 somebody instructed lldb to &quot;pretend Rust is C++&quot; as a workaround to not actually supporting Rust.  So while I still contend it is correct to say lldb doesn&#39;t actually support Rust (since it is using a C++ compiler system to comprehend its types &amp; parse expressions) to the extent that Rust looks like C++, printing variables should work after that patch.  You&#39;re probably going to have a lot less luck with the expression parser, however."}], "tags": [], "owner": {"reputation": 20083, "user_id": 2465073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f0f7ba796598ce99fe9d17b66c119b00?s=128&d=identicon&r=PG", "display_name": "Jim Ingham", "link": "https://stackoverflow.com/users/2465073/jim-ingham"}, "is_accepted": false, "score": 0, "last_activity_date": 1537809262, "last_edit_date": 1537809262, "creation_date": 1515009541, "answer_id": 48084312, "question_id": 48067874, "link": "https://stackoverflow.com/questions/48067874/how-do-i-inspect-local-variables-or-use-the-watch-window-with-rust-code-using-vs/48084312#48084312", "title": "How do I inspect local variables or use the watch window with Rust code using VSCode and LLDB?", "body": "<p>lldb doesn't \"real\" have support for Rust.  It uses the C++ type system to support Rust types, and uses the C++ expression parser for expressions.  So while simple things should work, more complex language features aren't well supported by \"rust as C++\".  </p>\n\n<p>It's possible to add language support for languages not directly supported by the clang front-end to lldb (see for instance the Go &amp; OCaml support).  </p>\n\n<p>Tom Tromey is working on an actual Rust port for lldb, see: <a href=\"https://archive.fosdem.org/2018/schedule/event/rustdebug/\" rel=\"nofollow noreferrer\">https://archive.fosdem.org/2018/schedule/event/rustdebug/</a> where he discusses this project, for instance.  He hasn't submitted the results to mainline lldb yet, but his fork is available at <a href=\"https://github.com/rust-lang-nursery/lldb/commits/rust\" rel=\"nofollow noreferrer\">https://github.com/rust-lang-nursery/lldb/commits/rust</a> if anybody interested in Rust debugging in lldb wants to lend a hand.</p>\n"}, {"comments": [{"owner": {"reputation": 191, "user_id": 7588896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/949e623bb4766cb6090bbd3ca40cad06?s=128&d=identicon&r=PG&f=1", "display_name": "twitu", "link": "https://stackoverflow.com/users/7588896/twitu"}, "edited": false, "score": 0, "creation_date": 1581528543, "post_id": 48086952, "comment_id": 106468046, "body": "I am using code 1.41.1 on Ubuntu 18.04, VSCode does not prompt me for different LLDB version. It will be very helpful if you can share your <code>launch.json</code> file."}, {"owner": {"reputation": 1967, "user_id": 2506478, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/KZt03.jpg?s=128&g=1", "display_name": "Rafael Merlin", "link": "https://stackoverflow.com/users/2506478/rafael-merlin"}, "edited": false, "score": 0, "creation_date": 1591786254, "post_id": 48086952, "comment_id": 110186212, "body": "So, I&#39;m using rust-analyzer and lldb and debugging works fine if I use the code lens rust-analyzer adds. However, if one of my variables has a very long value (let&#39;s say a Json payload) and I try to copy the value from the debug windows it will stop at one point and return an ellipsis so the value is not complete. Is there a way to get the complete value for long variables? I hope I&#39;m just missing something"}], "tags": [], "owner": {"reputation": 5580, "user_id": 26685, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/51bde710f2efaa9597f5f264937a8967?s=128&d=identicon&r=PG", "display_name": "schmoopy", "link": "https://stackoverflow.com/users/26685/schmoopy"}, "is_accepted": true, "score": 2, "last_activity_date": 1515034805, "last_edit_date": 1515034805, "creation_date": 1515024571, "answer_id": 48086952, "question_id": 48067874, "link": "https://stackoverflow.com/questions/48067874/how-do-i-inspect-local-variables-or-use-the-watch-window-with-rust-code-using-vs/48086952#48086952", "title": "How do I inspect local variables or use the watch window with Rust code using VSCode and LLDB?", "body": "<p>The correct solution was to install LLDB 3.9. I can now inspect local variables, use the watch window, and see values via tooltips.</p>\n\n<p>Here are the steps:</p>\n\n<ol>\n<li>Install LLVM 3.9. I found <a href=\"https://askubuntu.com/a/799998/538597\">the accepted answer in this SE post</a> to be the easiest way.</li>\n<li>Update Python LLDB to this version as per <a href=\"https://github.com/vadimcn/vscode-lldb/wiki/Installing-LLDB\" rel=\"nofollow noreferrer\">the vscode-lldb wiki</a>. For example, I ran <code>sudo apt-get install python-lldb-3.9</code>\n\n<ol start=\"3\">\n<li>Since LLVM now is invoked as <code>llvm-3.9</code> (instead of just <code>llvm</code>) then VSCode may not recognize it and complain that LLVM is not installed or supported.  My solution (yours may vary) was to remove then reinstall the VSCode extensions  \"LLDB Debugger 0.7.3\" and \"Native Debug 0.21.2\"</li>\n</ol></li>\n</ol>\n\n<p>Once this was done and VSCode was restarted, I started to debug with <kbd>F5</kbd> then VSCode gave me an alert that a different LLDB was found (3.9) and asked to update to new executable - say yes and you should be good to go. </p>\n\n<p>Results:</p>\n\n<p><a href=\"https://i.stack.imgur.com/8oimc.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/8oimc.jpg\" alt=\"debugging session\"></a></p>\n"}], "owner": {"reputation": 5580, "user_id": 26685, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/51bde710f2efaa9597f5f264937a8967?s=128&d=identicon&r=PG", "display_name": "schmoopy", "link": "https://stackoverflow.com/users/26685/schmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2541, "favorite_count": 0, "accepted_answer_id": 48086952, "answer_count": 2, "score": 3, "last_activity_date": 1537809262, "creation_date": 1514927374, "last_edit_date": 1515019898, "question_id": 48067874, "link": "https://stackoverflow.com/questions/48067874/how-do-i-inspect-local-variables-or-use-the-watch-window-with-rust-code-using-vs", "title": "How do I inspect local variables or use the watch window with Rust code using VSCode and LLDB?", "body": "<p>I am trying to debug a Rust application using VSCode, but I am unable to inspect any local variables or use the watch window (see attached).</p>\n\n<p>All breakpoints work fine, I just cannot view any variables, etc.</p>\n\n<ul>\n<li>VSCode v1.19.1 </li>\n<li>Linux Elementary (latest) </li>\n<li>LLDB Debugger 0.7.3</li>\n</ul>\n\n<p>The LLDB is what is shown in VSCODE plugin, but when I do <code>lldb --version</code> from the terminal it says: <code>lldb version 3.8.0 ( revision )</code>.</p>\n\n<p>I get no errors when starting lldb from the terminal.  All breakpoints are hit while debugging, I just cannot see any of the variable values.</p>\n\n<p>For the sake of completeness, I verified python scripting support as a Prerequisite listed on:\n<a href=\"https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb\" rel=\"nofollow noreferrer\">https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb</a></p>\n\n<p>**</p>\n\n<p>python-lldb-3.8 is already the newest version</p>\n\n<p>** </p>\n\n<p><a href=\"https://i.stack.imgur.com/mdUnc.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/mdUnc.jpg\" alt=\"No local or watch\"></a></p>\n"}, {"tags": ["unicode", "utf-8", "rust"], "answers": [{"tags": [], "owner": {"reputation": 1022, "user_id": 2938557, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/ee3b663f30ef86b40e86696a0bc0cadd?s=128&d=identicon&r=PG&f=1", "display_name": "gwar9", "link": "https://stackoverflow.com/users/2938557/gwar9"}, "is_accepted": false, "score": 1, "last_activity_date": 1514926885, "last_edit_date": 1514926885, "creation_date": 1514926295, "answer_id": 48067683, "question_id": 48067556, "link": "https://stackoverflow.com/questions/48067556/what-is-the-difference-between-charis-digit-and-charis-numeric/48067683#48067683", "title": "What is the difference between char::is_digit and char::is_numeric?", "body": "<p>According to the <a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.is_digit\" rel=\"nofollow noreferrer\">Rust docs</a>, 'digit' is defined to be only the following characters: <code>0-9</code> <code>a-z</code> <code>A-Z</code>.</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.is_numeric\" rel=\"nofollow noreferrer\"><code>is_numeric</code></a> function looks to just check to see if the value is in fact a number there are some cool examples in the docs. </p>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 3, "last_activity_date": 1514926849, "last_edit_date": 1514926849, "creation_date": 1514926309, "answer_id": 48067688, "question_id": 48067556, "link": "https://stackoverflow.com/questions/48067556/what-is-the-difference-between-charis-digit-and-charis-numeric/48067688#48067688", "title": "What is the difference between char::is_digit and char::is_numeric?", "body": "<p><code>char::is_numeric</code> checks whether a character is numeric <a href=\"https://en.wikipedia.org/wiki/Numerals_in_Unicode\" rel=\"nofollow noreferrer\">according to Unicode</a> (specifically if it falls under Unicode General Categories Nd, Nl and No) while <code>char::is_digit</code> can recognize regular digits and digits in radixes different than 10 (up to 36), e.g. hexadecimal <code>a</code>-<code>f</code> (radix 16).</p>\n\n<p>Example difference:</p>\n\n<pre><code>assert!(char::is_numeric('a')); // fails\nassert!(char::is_digit('a', 10)); // fails\nassert!(char::is_digit('a', 16)); // works\n</code></pre>\n\n<p>It's ok to obtain numeric values of characters - you just need to provide the right radix:</p>\n\n<pre><code>println!(\"{}\", 'a'.to_digit(16).unwrap()); // 10\nprintln!(\"{}\", 'z'.to_digit(36).unwrap()); // 35\n</code></pre>\n"}], "owner": {"reputation": 1093, "user_id": 147382, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/5gWua.png?s=128&g=1", "display_name": "Tommy McGuire", "link": "https://stackoverflow.com/users/147382/tommy-mcguire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1514926885, "creation_date": 1514925630, "last_edit_date": 1514926722, "question_id": 48067556, "link": "https://stackoverflow.com/questions/48067556/what-is-the-difference-between-charis-digit-and-charis-numeric", "title": "What is the difference between char::is_digit and char::is_numeric?", "body": "<p>What is the difference between <code>char::is_digit</code> and <code>char::is_numeric</code>?</p>\n\n<p>I notice that a general numeric character gives an invalid digit error when converting to a number; is it possible to get the numeric value of a numeric character? Is that a valid thing to do?</p>\n"}, {"tags": ["postgresql", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1514927333, "post_id": 48067493, "comment_id": 83109264, "body": "Check out <a href=\"https://docs.rs/postgres/0.15.1/postgres/types/trait.FromSql.html#nullability\" rel=\"nofollow noreferrer\">the documentation for <code>FromSql</code></a>. TL;DR: Use <code>Option</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514927416, "post_id": 48067493, "comment_id": 83109302, "body": "The same question <a href=\"https://stackoverflow.com/q/42864066/155423\">but for rusqlite</a>."}, {"owner": {"reputation": 617, "user_id": 3146662, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/RWuBJ.png?s=128&g=1", "display_name": "jean553", "link": "https://stackoverflow.com/users/3146662/jean553"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514931982, "post_id": 48067493, "comment_id": 83111002, "body": "Yes, using <code>fn get&lt;I, T&gt;(&amp;self, idx: I) -&gt; T </code> (where T is <code>FromSql</code>) solved my issue. As <code>FromSql</code> is implemented for <code>Option&lt;T&gt;</code>, I can check whether the column is null (None result) or actually contains some data (Some(_) result). Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 617, "user_id": 3146662, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/RWuBJ.png?s=128&g=1", "display_name": "jean553", "link": "https://stackoverflow.com/users/3146662/jean553"}, "edited": false, "score": 0, "creation_date": 1514926778, "post_id": 48067554, "comment_id": 83109023, "body": "Yes, this would solve my issue but I also want to get the <code>structure</code> column content. Sure, I could write two requests, the one you provided first and then the one I wrote up top, but is there any way to handle this with only one query ?"}], "tags": [], "owner": {"reputation": 244, "user_id": 5347283, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-uHWX26Md2lU/AAAAAAAAAAI/AAAAAAAAAEw/U8_A4Jaedlc/photo.jpg?sz=128", "display_name": "Will Crawford", "link": "https://stackoverflow.com/users/5347283/will-crawford"}, "is_accepted": false, "score": 1, "last_activity_date": 1514927234, "last_edit_date": 1514927234, "creation_date": 1514925619, "answer_id": 48067554, "question_id": 48067493, "link": "https://stackoverflow.com/questions/48067493/how-do-i-check-if-a-column-is-null-using-rust-postgres/48067554#48067554", "title": "How do I check if a column is NULL using rust-postgres?", "body": "<p>If <em>all you need to know</em> is whether the column is <code>NULL</code>, you could try changing your query to:</p>\n\n<pre><code>SELECT COUNT(1) FROM sentence WHERE id = $1 AND structure IS NOT NULL\n</code></pre>\n\n<p>with or without the <code>NOT</code>.</p>\n\n<p>If you want to make the logic simpler so <em>any</em> error is an actual error, I'd consider changing the select value to something like:</p>\n\n<pre><code>COALESCE( structure::TEXT, ''::TEXT ) AS \"structure\"\n</code></pre>\n\n<p>so it should never be <code>NULL</code>. That should work as long as an empty string isn't a valid non-<code>NULL</code> value for that column.</p>\n\n<p>Otherwise, I may have misunderstood your problem.</p>\n"}], "owner": {"reputation": 617, "user_id": 3146662, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/RWuBJ.png?s=128&g=1", "display_name": "jean553", "link": "https://stackoverflow.com/users/3146662/jean553"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 867, "favorite_count": 0, "closed_date": 1514927278, "answer_count": 1, "score": 1, "last_activity_date": 1514927234, "creation_date": 1514925293, "last_edit_date": 1514926804, "question_id": 48067493, "link": "https://stackoverflow.com/questions/48067493/how-do-i-check-if-a-column-is-null-using-rust-postgres", "closed_reason": "Duplicate", "title": "How do I check if a column is NULL using rust-postgres?", "body": "<p>I am using the <a href=\"https://github.com/sfackler/rust-postgres\" rel=\"nofollow noreferrer\">rust-postgres library</a> and I want to do a SELECT and check if the first column of the first row is NULL or not.</p>\n\n<p>This is how I get my data:</p>\n\n<pre><code>let result = connection.query(\n    r#\"\n        SELECT structure::TEXT\n        FROM sentence\n        WHERE id = $1\n    \"#,\n    &amp;[&amp;uuid]\n);\n\nlet rows = result.expect(\"problem while getting sentence\");\n\nlet row = rows\n    .iter()\n    .next() // there's only 1 result\n    .expect(\"0 results, expected one...\");\n</code></pre>\n\n<p>The only simple way I found to figure it out is the following code:</p>\n\n<pre><code>match row.get_opt(0) {\n    Some(Ok(data)) =&gt; some data found,\n    Some(Err(_)) =&gt; the column is null,\n    None =&gt; out of bound column index\n}\n</code></pre>\n\n<p>Unfortunately, it seems that <code>Some(Err(_))</code> is the executed path for any kind of SQL/database error, and not only if the retrieved column is NULL.</p>\n\n<p>Which condition should I use to check that the column is NULL ?</p>\n"}, {"tags": ["rust", "heap-memory", "raii"], "comments": [{"owner": {"reputation": 26917, "user_id": 1892179, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/umfON.jpg?s=128&g=1", "display_name": "Theodoros Chatzigiannakis", "link": "https://stackoverflow.com/users/1892179/theodoros-chatzigiannakis"}, "edited": false, "score": 2, "creation_date": 1514913590, "post_id": 48065129, "comment_id": 83103512, "body": "What exactly is unclear to you about how Rust handles references to the heap? (e.g. could you tell us what you know, and what you think is happening, so we can see how to fill the blanks?)"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 3, "creation_date": 1514913825, "post_id": 48065129, "comment_id": 83103603, "body": "rust is object-oriented... For data types to manage resources you need a way to specify &quot;destructors&quot; (unless the language itself handles resource management). rust uses the <code>Drop</code> trait for this (which of course needs to be supported by the language itself)."}], "answers": [{"comments": [{"owner": {"reputation": 153, "user_id": 2167754, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/3d3c36bfdf7c43ceda50ac144b9e2327?s=128&d=identicon&r=PG", "display_name": "Geoffrey Carlton", "link": "https://stackoverflow.com/users/2167754/geoffrey-carlton"}, "edited": false, "score": 0, "creation_date": 1514922450, "post_id": 48065398, "comment_id": 83107114, "body": "Ok, that&#39;s a good start, but how would you implement lifetimes and move semantics into these classes?"}], "tags": [], "owner": {"reputation": 26917, "user_id": 1892179, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/umfON.jpg?s=128&g=1", "display_name": "Theodoros Chatzigiannakis", "link": "https://stackoverflow.com/users/1892179/theodoros-chatzigiannakis"}, "is_accepted": true, "score": 0, "last_activity_date": 1514918177, "last_edit_date": 1514918177, "creation_date": 1514914618, "answer_id": 48065398, "question_id": 48065129, "link": "https://stackoverflow.com/questions/48065129/how-does-rust-enforce-implement-raii/48065398#48065398", "title": "How does Rust enforce/implement RAII", "body": "<p>I think the most obvious way to implement classes is:</p>\n\n<ul>\n<li>Your class variables are implemented as pointers, like in C# and Java.</li>\n<li>There is a single owner of the object and all class variables have move semantics in order to enforce this, like in Rust.</li>\n<li>Memory is a resource that needs to be cleaned up, so all class variables, after calling the destructor (if any) of the referent object, also call the deallocation routine of your memory allocator, like in C++.</li>\n<li>You introduce lifetimes in your type system in order to ensure that lending/borrowing the object doesn't allow any non-owning references to outlive it, like in Rust.</li>\n</ul>\n"}], "owner": {"reputation": 153, "user_id": 2167754, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/3d3c36bfdf7c43ceda50ac144b9e2327?s=128&d=identicon&r=PG", "display_name": "Geoffrey Carlton", "link": "https://stackoverflow.com/users/2167754/geoffrey-carlton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 499, "favorite_count": 0, "closed_date": 1514917031, "accepted_answer_id": 48065398, "answer_count": 1, "score": 0, "last_activity_date": 1514918177, "creation_date": 1514913265, "question_id": 48065129, "link": "https://stackoverflow.com/questions/48065129/how-does-rust-enforce-implement-raii", "closed_reason": "Needs more focus", "title": "How does Rust enforce/implement RAII", "body": "<p>I'm working on a (maybe) serious programming language and want to learn about implementing memory management. I want this language to enforce RAII, similar to Rust, but, unlike rust, this language is Object-Oriented and I hope I can implement objects that manage their own memory (like <code>Box</code>es in Rust). Can anyone go into detail about how Rust handles references to Heap memory?</p>\n"}, {"tags": ["unicode", "utf-8", "rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1514898208, "last_edit_date": 1514898208, "creation_date": 1514875710, "answer_id": 48056682, "question_id": 48056071, "link": "https://stackoverflow.com/questions/48056071/what-does-the-index-of-an-utf-8-encoding-error-indicate/48056682#48056682", "title": "What does the index of an UTF-8 encoding error indicate?", "body": "<p>That's because Rust is reporting the byte index which <em>begins</em> an invalid code point sequence, not any specific byte within that sequence.  After all, the error could be the second byte, or maybe the first byte was corrupted?  Or maybe the leading byte of the sequence went missing.</p>\n\n<p>Rust doesn't, and can't, know, so it just reports the most convenient position: the first offset at which it couldn't decode a complete code point.</p>\n"}], "owner": {"reputation": 608, "user_id": 8225884, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ZzuYo.png?s=128&g=1", "display_name": "\u70b8\u9c7c\u85af\u6761\u5fb7\u91cc\u514b", "link": "https://stackoverflow.com/users/8225884/%e7%82%b8%e9%b1%bc%e8%96%af%e6%9d%a1%e5%be%b7%e9%87%8c%e5%85%8b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 745, "favorite_count": 0, "accepted_answer_id": 48056682, "answer_count": 1, "score": 2, "last_activity_date": 1514898208, "creation_date": 1514871737, "last_edit_date": 1514898169, "question_id": 48056071, "link": "https://stackoverflow.com/questions/48056071/what-does-the-index-of-an-utf-8-encoding-error-indicate", "title": "What does the index of an UTF-8 encoding error indicate?", "body": "<pre><code>fn main() {\n    let ud7ff = String::from_utf8(vec![0xed, 0x9f, 0xbf]);\n    if ud7ff.is_ok() {\n        println!(\"U+D7FF OK! Get {}\", ud7ff.unwrap());\n    } else {\n        println!(\"U+D7FF Fail!\");\n    }\n\n    let ud800 = String::from_utf8(vec![0xed, 0xa0, 0x80]);\n    if ud800.is_ok() {\n        println!(\"U+D800 OK! Get {}\", ud800.unwrap());\n    } else {\n        println!(\"{}\", ud800.unwrap_err());\n    }\n}\n</code></pre>\n\n<p>Running this code prints <code>invalid utf-8 sequence of 1 bytes from index 0</code>. I understand it's an encoding error, but why does the error say index 0? Shouldn't it be index 1 because index 0 is the same in both cases?</p>\n"}, {"tags": ["parsing", "rust", "nom"], "comments": [{"owner": {"reputation": 2991, "user_id": 3877787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DPxhf.jpg?s=128&g=1", "display_name": "Zalman Stern", "link": "https://stackoverflow.com/users/3877787/zalman-stern"}, "edited": false, "score": 0, "creation_date": 1514865910, "post_id": 48054475, "comment_id": 83083205, "body": "What happens if you pass <code>one_of!</code> to <code>count!</code> with 1 as the match length for count?"}], "answers": [{"comments": [{"owner": {"reputation": 273, "user_id": 286021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8366e7b2d753db522f8ab5c0846807a4?s=128&d=identicon&r=PG", "display_name": "nelsonjchen", "link": "https://stackoverflow.com/users/286021/nelsonjchen"}, "edited": false, "score": 0, "creation_date": 1517014772, "post_id": 48063696, "comment_id": 83937114, "body": "Isn&#39;t that supposed to be <code>return IResult::Incomplete(Needed::Size(m - input.len()));</code>? It&#39;ll otherwise seem to always underflow and panic."}], "tags": [], "owner": {"reputation": 1326, "user_id": 1836144, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e250d748ff6c2ff23bc4550e0f0971f5?s=128&d=identicon&r=PG", "display_name": "little-dude", "link": "https://stackoverflow.com/users/1836144/little-dude"}, "is_accepted": true, "score": 2, "last_activity_date": 1514909663, "last_edit_date": 1514909663, "creation_date": 1514907425, "answer_id": 48063696, "question_id": 48054475, "link": "https://stackoverflow.com/questions/48054475/how-to-match-exactly-one-byte-using-nom/48063696#48063696", "title": "How to match exactly one byte using nom?", "body": "<p>I've come up with this. I'll mark this as the accepted answer tomorrow if nobody comes up with a better solution:</p>\n\n<pre><code>use nom::{self, ErrorKind, IResult, Needed};\n\n/// Alphabetical characters ([RFC5234 appendix B.1])\n///\n/// [RFC5234 appendix B.1]: https://tools.ietf.org/html/rfc5234#appendix-B.1\n///\n/// ```no_rust\n/// ALPHA          =  %x41-5A / %x61-7A   ; A-Z / a-z\n/// ```\npub struct Alpha;\n\nimpl Alpha {\n    /// Return true if the given byte represents an alphabetical character\n    pub fn is_alpha(c: u8) -&gt; bool {\n        (c &gt;= 0x41 &amp;&amp; c &lt;= 0x5a) || (c &gt;= 0x61 &amp;&amp; c &lt;= 0x7a)\n    }\n\n    /// Parse one or more alphabetical characters\n    pub fn parse_many(input: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], &amp;[u8]&gt; {\n        take_while!(input, Self::is_alpha)\n    }\n\n    /// Parse one alphabetical character\n    pub fn parse_one(input: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], u8&gt; {\n        Self::parse_n(input, 1).map(|res| res[0])\n    }\n\n    /// Parse n alphabetical characters\n    pub fn parse_n(input: &amp;[u8], n: usize) -&gt; IResult&lt;&amp;[u8], &amp;[u8]&gt; {\n        Self::parse_m_n(input, n, n)\n    }\n\n    /// Parse between m and n alphabetical characters\n    pub fn parse_m_n(input: &amp;[u8], m: usize, n: usize) -&gt; IResult&lt;&amp;[u8], &amp;[u8]&gt; {\n        if input.len() &lt; m {\n            return IResult::Incomplete(Needed::Size(input.len() - m));\n        }\n        for i in 0..n {\n            if !Self::is_alpha(input[i]) {\n                // We were supposed to have at least m printable bytes\n                if i &lt; m {\n                    return IResult::Error(error_position!(ErrorKind::ManyMN, &amp;input[..]));\n                } else {\n                    return IResult::Done(&amp;input[i..], &amp;input[0..i]);\n                }\n            }\n        }\n        return IResult::Done(&amp;input[n..], &amp;input[0..n]);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1326, "user_id": 1836144, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e250d748ff6c2ff23bc4550e0f0971f5?s=128&d=identicon&r=PG", "display_name": "little-dude", "link": "https://stackoverflow.com/users/1836144/little-dude"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 529, "favorite_count": 2, "accepted_answer_id": 48063696, "answer_count": 1, "score": 3, "last_activity_date": 1514909663, "creation_date": 1514854644, "question_id": 48054475, "link": "https://stackoverflow.com/questions/48054475/how-to-match-exactly-one-byte-using-nom", "title": "How to match exactly one byte using nom?", "body": "<p>I want to match exactly one alphabetic character (<code>a-zA-Z</code>) with nom.</p>\n\n<p>I know I can match greedily using <code>take_while!</code> with something like this:</p>\n\n<pre><code>// match one or more alphabetical characters\npub fn alpha_many(input: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], &amp;[u8]&gt; {\n    take_while!(input, |c| {\n        (c &gt;= 0x41 &amp;&amp; c &lt;= 0x5a) || (c &gt;= 0x61 &amp;&amp; c &lt;= 0x7a)\n    })\n}\n</code></pre>\n\n<p>But I can't find how to match only one byte. There is <code>one_of!</code>, but I can't use a closure, I have to pass a whole slice:</p>\n\n<pre><code>// match exactly one alphabetical character\npub fn alpha_one(input: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], u8&gt; {\n    one_of!(\n        input,\n        [\n            0x41, 0x42, 0x43,\n            // etc until 0x5a and then from 0x61 to 0x7a\n            // ...\n        ].as_ref()\n    )\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "edited": false, "score": 0, "creation_date": 1514888667, "post_id": 48054587, "comment_id": 83090640, "body": "I don&#39;t understand how it affect this code. <code>&#39;static</code> constraint is applied to <code>T</code> type which is return type and I really don&#39;t care about how long output reference is living. Or it may implicitly applied to <code>self</code>..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "edited": false, "score": 0, "creation_date": 1514900756, "post_id": 48054587, "comment_id": 83096727, "body": "@AlexZhukovskiy I copied more of of the context of the function \u2014 it&#39;s implemented on <code>Error + &#39;static</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1514900926, "post_id": 48054587, "comment_id": 83096802, "body": "@Shepmaster: I&#39;m feeling this diagnostic is missing a note (or a series, thereof) indicating <i>why</i> the compiler thinks that <code>e</code> should have a <code>&#39;static</code> lifetime. It&#39;s really not immediately obvious here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1514901064, "post_id": 48054587, "comment_id": 83096882, "body": "@MatthieuM. certainly, which is why your breakdown is good. You want to take my reduced example (maybe reduced further) and report an issue with it?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1514903185, "post_id": 48054587, "comment_id": 83098027, "body": "@Shepmaster: There seems to be multiple issues about this error message already (such as <a href=\"https://github.com/rust-lang/rust/issues/43531\" rel=\"nofollow noreferrer\">#43531</a>) so I am not sure that it would be very helpful to add more."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1514900717, "last_edit_date": 1514900717, "creation_date": 1514856161, "answer_id": 48054587, "question_id": 48054330, "link": "https://stackoverflow.com/questions/48054330/why-must-my-error-be-valid-for-the-static-lifetime-when-trying-to-switch-on-a-co/48054587#48054587", "title": "Why must my error be valid for the static lifetime when trying to switch on a concrete error type?", "body": "<p>Because that's a <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html#method.downcast_ref\" rel=\"nofollow noreferrer\"><em>requirement of the function you are using</em></a>:</p>\n\n<pre><code>impl Error + 'static {\n    pub fn downcast_ref&lt;T: Error + 'static&gt;(&amp;self) -&gt; Option&lt;&amp;T&gt;\n}\n</code></pre>\n\n<p>You cannot downcast trait objects that are not <code>'static</code>.</p>\n\n<p>The example code can be reduced further to make this more clear. Commenting out the <code>downcast_ref</code> allows the code to be compiled:</p>\n\n<pre><code>fn example(result: Result&lt;i32, std::io::Error&gt;) -&gt; Result&lt;i32, std::io::Error&gt; {\n    let e = result.unwrap_err();\n    let cause = e.cause().unwrap();\n    let _io_error = cause.downcast_ref::&lt;std::io::Error&gt;();\n    unimplemented!()\n}\n</code></pre>\n\n<hr>\n\n<p>This may just be an artifact of your reduced example code, but I don't understand why you are taking a <code>Result&lt;_, std::io::Error&gt;</code> and checking to see if the cause of the <code>io::Error</code> was <em>another</em> <code>io::Error</code>. If your <code>Result</code> was an <code>Err</code>, then you know <em>that</em> was an <code>io:Error</code> as it's the only possible thing. <a href=\"https://github.com/rust-lang/rust/blob/1.22.1/src/libstd/io/error.rs#L546-L552\" rel=\"nofollow noreferrer\"><code>io::Error</code> doesn't even provide a cause</a>, unless you are using a custom error variant.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28632968/155423\">Why doesn&#39;t Rust support trait object upcasting?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27892375/155423\">Can I do type introspection with trait objects and then downcast it?</a></li>\n<li><a href=\"https://stackoverflow.com/q/25246443/155423\">Rust: downcasting and Box&lt;Any&gt;</a></li>\n<li><a href=\"https://stackoverflow.com/q/26126683/155423\">How to match trait implementors</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1514903294, "last_edit_date": 1514903294, "creation_date": 1514900816, "answer_id": 48062162, "question_id": 48054330, "link": "https://stackoverflow.com/questions/48054330/why-must-my-error-be-valid-for-the-static-lifetime-when-trying-to-switch-on-a-co/48062162#48062162", "title": "Why must my error be valid for the static lifetime when trying to switch on a concrete error type?", "body": "<p>It's unfortunate, indeed, that the compiler <a href=\"https://github.com/rust-lang/rust/issues/43531\" rel=\"nofollow noreferrer\">is not more explicit</a>.</p>\n\n<p>Let me unwind this:</p>\n\n<ol>\n<li><a href=\"https://doc.rust-lang.org/std/error/trait.Error.html#method.downcast_ref\" rel=\"nofollow noreferrer\"><code>Error::downcast_ref</code></a> is only implemented for <code>Error + 'static</code> (thus, when <code>self</code> lifetime itself is <code>'static</code>),</li>\n<li>Thus in <code>cause.downcast_ref</code>, <code>cause</code> must be <code>'static</code>,</li>\n<li><a href=\"https://doc.rust-lang.org/std/error/trait.Error.html#method.cause\" rel=\"nofollow noreferrer\"><code>Error::cause</code></a> ties down the lifetime of its result to that of <code>self</code>,</li>\n<li>Thus in <code>e.cause()</code>, <code>e</code> must be <code>'static</code>,</li>\n<li><code>e</code> is a temporary introduced in <code>Err(e)</code>.</li>\n</ol>\n\n<p>Hopefully, this is clearer.</p>\n\n<hr>\n\n<p>I have not used it yet, however one of the Rust core team members (withoutboats) has been working on a new <a href=\"https://github.com/withoutboats/failure\" rel=\"nofollow noreferrer\"><code>failure</code> crate</a> which supposedly solves a number of issue with the <code>Error</code> usage.</p>\n"}], "owner": {"reputation": 8137, "user_id": 2559709, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/RHGiu.jpg?s=128&g=1", "display_name": "Alex Zhukovskiy", "link": "https://stackoverflow.com/users/2559709/alex-zhukovskiy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 439, "favorite_count": 0, "accepted_answer_id": 48062162, "answer_count": 2, "score": 0, "last_activity_date": 1514903294, "creation_date": 1514852578, "last_edit_date": 1514855842, "question_id": 48054330, "link": "https://stackoverflow.com/questions/48054330/why-must-my-error-be-valid-for-the-static-lifetime-when-trying-to-switch-on-a-co", "title": "Why must my error be valid for the static lifetime when trying to switch on a concrete error type?", "body": "<p>I'm trying to implement a simple pattern: if I have some error I can try to recover my application, otherwise I just pop this exception to the caller:</p>\n\n<pre><code>use std::error::Error;\n\nfn main() {\n    let _ = sample();\n}\n\nfn sample() -&gt; std::result::Result&lt;i32, std::io::Error&gt; {\n    let result: Result&lt;i32, std::io::Error&gt; = Ok(10); // performing some operation\n    match result {\n        Ok(x) =&gt; Ok(x + 1),\n        Err(e) =&gt; match e.cause() {\n            // if it has any error\n            Some(cause) =&gt; {\n                // and it has any cause\n                let io_error = cause.downcast_ref::&lt;std::io::Error&gt;(); // and this cause is IO error\n                match io_error {\n                    Some(_) =&gt; Ok(547), // return default value\n                    None =&gt; Err(e),     // otherwise return an error\n                }\n            }\n            None =&gt; Err(e),\n        },\n    }\n}\n</code></pre>\n\n<p>I want to return <code>x+1</code> if the operation succeeds. If it doesn't, but it's caused by an <code>io::Error</code> then return <code>547</code>. If it's caused by something else, just return an error as-is.</p>\n\n<p>The current compiler error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `e` does not live long enough\n  --&gt; src\\main.rs:11:25\n   |\n11 |         Err(e) =&gt; match e.cause() { // if it's caused\n   |                         ^ borrowed value does not live long enough\n...\n21 |     }\n   |     - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>I don't understand why it says that it must have the <code>static</code> lifetime...</p>\n"}, {"tags": ["directory", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 5, "creation_date": 1514849861, "post_id": 48053933, "comment_id": 83080581, "body": "Not only is this not pretty, it is also subject to a TOCTTOU attack. There are very few reasons why one would ever want to check if a file/directory exists like that. Shepmaster&#39;s answer is the way to go."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 17, "last_activity_date": 1514847603, "creation_date": 1514847603, "answer_id": 48053959, "question_id": 48053933, "link": "https://stackoverflow.com/questions/48053933/how-to-check-if-a-directory-exists-and-create-a-new-one-if-it-doesnt-in-rust/48053959#48053959", "title": "How to check if a directory exists and create a new one if it doesn&#39;t in Rust?", "body": "<p><a href=\"https://doc.rust-lang.org/std/fs/fn.create_dir_all.html\" rel=\"noreferrer\"><code>std::fs::create_dir_all</code></a>:</p>\n\n<blockquote>\n  <p>Recursively create a directory and all of its parent components if they are missing.</p>\n  \n  <h3>Examples</h3>\n\n<pre><code>use std::fs;\n\nfs::create_dir_all(\"/some/dir\")?;\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 3489, "user_id": 1350184, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/EQnef.jpg?s=128&g=1", "display_name": "tversteeg", "link": "https://stackoverflow.com/users/1350184/tversteeg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5458, "favorite_count": 1, "accepted_answer_id": 48053959, "answer_count": 1, "score": 17, "last_activity_date": 1514848952, "creation_date": 1514847365, "last_edit_date": 1514848952, "question_id": 48053933, "link": "https://stackoverflow.com/questions/48053933/how-to-check-if-a-directory-exists-and-create-a-new-one-if-it-doesnt-in-rust", "title": "How to check if a directory exists and create a new one if it doesn&#39;t in Rust?", "body": "<p>I tried the following but I don't think it's particularly pretty:</p>\n\n<pre><code>let path = \"target/dir\";\nif !std::path::Path::new(&amp;path).exists() {\n    std::fs::create_dir(path)?;\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514830815, "post_id": 48052098, "comment_id": 83076185, "body": "Worth mentioning <code>$crate</code> though?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1514833360, "post_id": 48052098, "comment_id": 83076899, "body": "@Shepmaster unfortunately generating <code>$crate</code> in a procedural macro gives <code>error: unknown macro variable `crate` </code> and <code>error: proc-macro derive produced unparseable tokens</code>."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1514830566, "creation_date": 1514830566, "answer_id": 48052098, "question_id": 48050155, "link": "https://stackoverflow.com/questions/48050155/is-it-possible-to-get-the-full-namespace-of-a-struct-in-a-custom-derive/48052098#48052098", "title": "Is it possible to get the full &quot;namespace&quot; of a struct in a custom derive?", "body": "<p>This is not possible. Custom derive work on token streams, from which you can easily build an AST. But at this level, names have not been resolved yet (which makes sense, macros and custom derives can affect how the names are resolved, so they need to be fully expended first).</p>\n"}], "owner": {"reputation": 2223, "user_id": 2592187, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a5596919cd864333c80fec0a2aa8ff9a?s=128&d=identicon&r=PG", "display_name": "Peekmo", "link": "https://stackoverflow.com/users/2592187/peekmo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 48052098, "answer_count": 1, "score": 2, "last_activity_date": 1514830566, "creation_date": 1514814164, "last_edit_date": 1514822730, "question_id": 48050155, "link": "https://stackoverflow.com/questions/48050155/is-it-possible-to-get-the-full-namespace-of-a-struct-in-a-custom-derive", "title": "Is it possible to get the full &quot;namespace&quot; of a struct in a custom derive?", "body": "<p>I've read <a href=\"https://doc.rust-lang.org/book/first-edition/procedural-macros.html\" rel=\"nofollow noreferrer\">this documentation page</a> but I'm still unable to figure out how to do this.</p>\n\n<p>My files are:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>|- pancakes.rs\n|- main.rs\n</code></pre>\n\n<p>I'm deriving on the struct <code>Pancakes</code> in \"pancakes.rs\":</p>\n\n<pre><code>#[derive(HelloWorld)]\nstruct Pancakes;\n</code></pre>\n\n<p>I have the following implementation copied from the documentation, but the <code>ident</code> does not contain the full \"namespace\":</p>\n\n<pre><code>#[proc_macro_derive(HelloWorld)]\npub fn hello_world(input: TokenStream) -&gt; TokenStream {\n    let s = input.to_string();\n    let ast = syn::parse_derive_input(&amp;s).unwrap();\n    let gen = impl_hello_world(&amp;ast);\n    gen.parse().unwrap()\n}\n\nfn impl_hello_world(ast: &amp;syn::DeriveInput) -&gt; quote::Tokens {\n    let name = &amp;ast.ident; // &lt;---- HERE name = Pancakes, not pancakes::Pancakes\n    quote! {\n        impl HelloWorld for #name {\n            fn hello_world() {\n                println!(\"Hello, World! My name is {}\", stringify!(#name));\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Is it possible to get all the information about the struct? I'd also like to get the cargo's lib name from where the derive is used.</p>\n"}, {"tags": ["vector", "struct", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1514826536, "post_id": 48046336, "comment_id": 83075029, "body": "I&#39;d like to commend you on the edits you&#39;ve made to your post. The question is now in a <i>much</i> better state and concrete enough to be answered."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514833103, "post_id": 48052332, "comment_id": 83076830, "body": "Presumably in release mode, the optimizer &quot;sees through&quot; the <code>Element</code> struct and makes it into a literal <code>u64</code>, thus unlocking the same special casing?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514833526, "post_id": 48052332, "comment_id": 83076944, "body": "I would certainly hope so."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1514833040, "last_edit_date": 1514833040, "creation_date": 1514832586, "answer_id": 48052332, "question_id": 48046336, "link": "https://stackoverflow.com/questions/48046336/why-is-accessing-an-element-of-a-large-vector-of-structs-in-debug-mode-slower-th/48052332#48052332", "title": "Why is accessing an element of a large vector of structs in debug mode slower than accessing a smaller one?", "body": "<p>It's not accessing the element that takes time, but initializing the vector. Indeed, with your example I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>With struct, size of vec=100000: Time elapsed: 0.594704815 seconds\nWith struct, size of vec=100000000: Time elapsed: 5.789152687 seconds\nWith u64, size of vec=100000: Time elapsed: 0.584137362 seconds\nWith u64, size of vec=100000000: Time elapsed: 0.586343084 seconds\n</code></pre>\n\n<p>If I initialize <code>now</code> after <code>tt</code> I get the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>With struct, size of vec=100000: Time elapsed: 0.589499628 seconds\nWith struct, size of vec=100000000: Time elapsed: 0.583244899 seconds\nWith u64, size of vec=100000: Time elapsed: 0.584675666 seconds\nWith u64, size of vec=100000000: Time elapsed: 0.583518382 seconds\n</code></pre>\n\n<p>Initializing the vector takes linear time because every element needs to be initialized to <code>0</code> (or <code>Element { key: 0 }</code>).</p>\n\n<p>As for why it's faster with <code>0</code> than <code>Element { key: 0 }</code>, let's have a look at how <code>vec!</code> works. <a href=\"https://github.com/rust-lang/rust/blob/63739ab7b210c1a8c890c2ea5238a3284877daa3/src/liballoc/macros.rs#L48\" rel=\"nofollow noreferrer\">We can see it just calls <code>vec::from_elem</code></a>, which in turn <a href=\"https://github.com/rust-lang/rust/blob/d5f2745e7ccd247da50f0cb18318ac477e5bccbf/src/liballoc/vec.rs#L1438-L1455\" rel=\"nofollow noreferrer\">just calls <code>&lt;T as SpecFromElem&gt;::from_elem</code></a>. What is this trait? Well, its default implementation basically looks like:</p>\n\n<pre><code>let mut v = Vec::with_capacity(n);\nv.extend_with(n, ExtendElement(elem));\n</code></pre>\n\n<p>But there are also a <a href=\"https://github.com/rust-lang/rust/blob/d5f2745e7ccd247da50f0cb18318ac477e5bccbf/src/liballoc/vec.rs#L1494-L1505\" rel=\"nofollow noreferrer\">bunch of special cases</a> including one for <code>0u64</code>! This one uses <code>RawVec::with_capacity_zeroed(n)</code>. No doubt this special case is where the speed comes from.</p>\n"}], "owner": {"reputation": 727, "user_id": 6860744, "user_type": "registered", "accept_rate": 79, "profile_image": "https://lh5.googleusercontent.com/-3_2Ewze_gI8/AAAAAAAAAAI/AAAAAAAAACQ/fz_BqGtzSd4/photo.jpg?sz=128", "display_name": "Darius Duesentrieb", "link": "https://stackoverflow.com/users/6860744/darius-duesentrieb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 48052332, "answer_count": 1, "score": 0, "last_activity_date": 1514833040, "creation_date": 1514764111, "last_edit_date": 1514823483, "question_id": 48046336, "link": "https://stackoverflow.com/questions/48046336/why-is-accessing-an-element-of-a-large-vector-of-structs-in-debug-mode-slower-th", "title": "Why is accessing an element of a large vector of structs in debug mode slower than accessing a smaller one?", "body": "<p>When I run this code:</p>\n\n<pre><code>#[derive(Copy, Clone)]\npub struct Element {\n    pub key: u64,\n}\n\npub fn test1(u: usize) {\n    let now = std::time::SystemTime::now();\n\n    let tt = vec![Element { key: 0 }; u];\n    for _ in 0..10000000 as u64 {\n        if tt[155].key == 893472348628 {}\n    }\n\n    match now.elapsed() {\n        Ok(elapsed) =&gt; {\n            println!(\n                \"With struct, size of vec={}: Time elapsed: {}.{} seconds\",\n                u,\n                elapsed.as_secs(),\n                elapsed.subsec_nanos()\n            );\n        }\n        Err(e) =&gt; {\n            println!(\"Error: {:?}\", e);\n            panic!();\n        }\n    }\n}\n\npub fn test2(u: usize) {\n    let now = std::time::SystemTime::now();\n\n    let tt = vec![0u64; u];\n    for _ in 0..10000000 as u64 {\n        if tt[155] == 893472348628 {}\n    }\n\n    match now.elapsed() {\n        Ok(elapsed) =&gt; {\n            println!(\n                \"With u64, size of vec={}: Time elapsed: {}.{} seconds\",\n                u,\n                elapsed.as_secs(),\n                elapsed.subsec_nanos()\n            );\n        }\n        Err(e) =&gt; {\n            println!(\"Error: {:?}\", e);\n            panic!();\n        }\n    }\n}\n\nfn main() {\n    test1(100000);\n    test1(100000000);\n    test2(100000);\n    test2(100000000);\n}\n</code></pre>\n\n<p>I get these results:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>With struct, size of vec=100000: Time elapsed: 1.268881822 seconds\nWith struct, size of vec=100000000: Time elapsed: 12.470818140 seconds\nWith u64, size of vec=100000: Time elapsed: 1.171180429 seconds\nWith u64, size of vec=100000000: Time elapsed: 1.230393828 seconds\n</code></pre>\n\n<p>I do not see any reason why the second function call should be 10 times slower than the first one. I did compile it in <strong>debug</strong> mode since release mode ignored these lines:</p>\n\n<pre><code>if tt[155].key == 893472348628 {}\n</code></pre>\n\n<p>I have a 64bit Linux machine with 8GB of RAM, maybe it has something to do with that?</p>\n"}, {"tags": ["rust", "tuples", "match"], "comments": [{"owner": {"reputation": 397, "user_id": 4131596, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-dUHeMDfE0xw/AAAAAAAAAAI/AAAAAAAAANE/y-2iUXIrmU4/photo.jpg?sz=128", "display_name": "Ryan", "link": "https://stackoverflow.com/users/4131596/ryan"}, "edited": false, "score": 0, "creation_date": 1514817579, "post_id": 48044295, "comment_id": 83072812, "body": "This doesn&#39;t answer your question, but one way to work around this is to add <code>#[derive(Clone, Copy)]</code> on the enum. This makes the enum a copy type so you can move out of it and the original is still valid."}], "answers": [{"comments": [{"owner": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "edited": false, "score": 0, "creation_date": 1514765609, "post_id": 48044475, "comment_id": 83064207, "body": "Ah, ok... thanks for the links, I didn&#39;t find them before posting the question, but especially the first one already answers my question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "edited": false, "score": 0, "creation_date": 1514765728, "post_id": 48044475, "comment_id": 83064229, "body": "@mrspl if <a href=\"https://stackoverflow.com/q/43370054/155423\">stackoverflow.com/q/43370054/155423</a> answers your question, then I can mark this question as a duplicate of that one, but you&#39;ll have to unaccept the answer before I can delete it."}, {"owner": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "edited": false, "score": 0, "creation_date": 1514824754, "post_id": 48044475, "comment_id": 83074553, "body": "I&#39;m not sure if it is really a duplicate of the other <i>question</i>. Only the second part of the <i>answer</i> that you give there also happens to answer my question, although that was not explicitly what was asked in the other thread. Do you think I should still mark it a duplicate or just leave it like this?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1514742940, "last_edit_date": 1514742940, "creation_date": 1514740940, "answer_id": 48044475, "question_id": 48044295, "link": "https://stackoverflow.com/questions/48044295/why-does-matching-on-a-tuple-of-dereferenced-references-not-work-while-dereferen/48044475#48044475", "title": "Why does matching on a tuple of dereferenced references not work while dereferencing non-tuples does?", "body": "<blockquote>\n  <p>where exactly a move happens</p>\n</blockquote>\n\n<p>A move happens where the compiler is pointing \u2014 <code>*a</code>. You are moving the contents of <code>a</code> into a brand-new tuple. You can't do that, so the compiler gives an error.</p>\n\n<p>The ability to \"dereference\" the matched variable without really dereferencing it is some syntactic goodness provided by the compiler, but it's very limited. It doesn't \"see into\" the expression, it only looks at some select syntax constructions and knows to ignore them.</p>\n\n<p>It's <em>possible</em> that the compiler could be enhanced to see these cases, but presumably the cost/benefit tradeoff isn't favorable at this point in time.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43370054/155423\">Is there any difference between matching on a reference to a pattern or a dereferenced value?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28530338/155423\">How can I use match on a pair of borrowed values without copying them?</a></li>\n<li><a href=\"https://stackoverflow.com/q/36590549/155423\">Matching on a reference to an enum</a></li>\n</ul>\n"}], "owner": {"reputation": 421, "user_id": 6148311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/813fb38ee62e940389bd4af40e65d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "mrspl", "link": "https://stackoverflow.com/users/6148311/mrspl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 267, "favorite_count": 0, "accepted_answer_id": 48044475, "answer_count": 1, "score": 1, "last_activity_date": 1514742940, "creation_date": 1514739411, "last_edit_date": 1514740302, "question_id": 48044295, "link": "https://stackoverflow.com/questions/48044295/why-does-matching-on-a-tuple-of-dereferenced-references-not-work-while-dereferen", "title": "Why does matching on a tuple of dereferenced references not work while dereferencing non-tuples does?", "body": "<p>I'm trying to sort a <code>Vec</code> of enums. Please ignore the sorting mechanism itself, this is just a stripped-down example.</p>\n\n<pre><code>use std::cmp::Ordering;\n\nenum MyEnum {\n    Option1,\n    Option2,\n}\n\nfn main() {\n    let mut my_list: Vec&lt;MyEnum&gt; = vec![MyEnum::Option1, MyEnum::Option2, MyEnum::Option1];\n\n    // (1) - doesn't work\n    my_list.sort_unstable_by(|a, b| match (*a, *b) {\n        (MyEnum::Option1, MyEnum::Option1) =&gt; Ordering::Equal,\n        (MyEnum::Option1, MyEnum::Option2) =&gt; Ordering::Less,\n        _  =&gt; Ordering::Greater\n    });\n}\n</code></pre>\n\n<p>I get the following error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:12:44\n   |\n12 |     my_list.sort_unstable_by(|a, b| match (*a, *b) {\n   |                                            ^^ cannot move out of borrowed content\n</code></pre>\n\n<p>The following two variants work:</p>\n\n<pre><code>// (2)\nmy_list.sort_unstable_by(|a, _b| match *a {\n    MyEnum::Option1 =&gt; Ordering::Less,\n    MyEnum::Option2 =&gt; Ordering::Greater\n});\n\n// (3)\nmy_list.sort_unstable_by(|a, b| match (a, b) {\n    (&amp;MyEnum::Option1, &amp;MyEnum::Option1) =&gt; Ordering::Equal,\n    (&amp;MyEnum::Option1, &amp;MyEnum::Option2) =&gt; Ordering::Less,\n    _  =&gt; Ordering::Greater\n});\n</code></pre>\n\n<p>When I want to match a plain reference, I can dereference it (variant 2); why doesn't this work inside the tuple in variant 1?</p>\n\n<p>I understand why 3 works, but struggle with understanding where exactly a move happens in 1 and how to do it differently.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1514715142, "post_id": 48041510, "comment_id": 83053683, "body": "You may want to try wrapping the offending pieces in <code>r#...#</code>, e.g. <code>r#&quot;\\u{00b&quot;#</code>, i.e. mark them as <a href=\"https://doc.rust-lang.org/reference/tokens.html#raw-string-literals\" rel=\"nofollow noreferrer\">raw string literals</a>."}], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 1, "last_activity_date": 1514716556, "creation_date": 1514716556, "answer_id": 48041751, "question_id": 48041510, "link": "https://stackoverflow.com/questions/48041510/what-is-the-intended-way-to-create-a-unicode-character-from-concatenating-variab/48041751#48041751", "title": "What is the intended way to create a Unicode character from concatenating variables?", "body": "<p>Combine <a href=\"https://doc.rust-lang.org/std/char/fn.from_u32.html\" rel=\"nofollow noreferrer\"><code>std::char::from_u32</code></a> and <a href=\"https://doc.rust-lang.org/std/string/struct.String.html?search=#method.push\" rel=\"nofollow noreferrer\"><code>String::push</code></a>:</p>\n\n<pre><code>use std::char::from_u32;\nlet mut s = String::new();\ns.push(from_u32(0xb0 + 2).unwrap());\ns.push(from_u32(0xb0 + 3).unwrap());\ns.push(from_u32(0x2070 + 1).unwrap());\nprintln!(\"{:?}\", s);\n</code></pre>\n"}], "owner": {"reputation": 119, "user_id": 4907082, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh6.googleusercontent.com/-E1gbm5vRzlI/AAAAAAAAAAI/AAAAAAAAABI/y6amV80B4RA/photo.jpg?sz=128", "display_name": "Meltinglava", "link": "https://stackoverflow.com/users/4907082/meltinglava"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 382, "favorite_count": 0, "accepted_answer_id": 48041751, "answer_count": 1, "score": 1, "last_activity_date": 1514753111, "creation_date": 1514714085, "last_edit_date": 1514753111, "question_id": 48041510, "link": "https://stackoverflow.com/questions/48041510/what-is-the-intended-way-to-create-a-unicode-character-from-concatenating-variab", "title": "What is the intended way to create a Unicode character from concatenating variables?", "body": "<pre><code>let mut start = true;\nfor v in count as String {\n    s += match v as usize {\n        n if n == 2 || n == 3 =&gt; \"\\u{00b\" + n + \"}\",\n        n if n &gt;= 4 || (n &lt;= 1 &amp;&amp; !start) =&gt; \"\\u{207\" + n + \"}\",\n        start &amp;&amp; 1 =&gt; \"\",\n    }\n    start = false;\n}\n</code></pre>\n\n<p>I know this is not the intended way to write Unicode characters:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: unterminated unicode escape (needed a `}`)\n --&gt; src/main.rs:5:45\n  |\n5 |             n if n == 2 || n == 3 =&gt; \"\\u{00b\" + n + \"}\",\n  |                                             ^\n</code></pre>\n\n<p>But what is the right way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1322, "user_id": 2693146, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KTITg.jpg?s=128&g=1", "display_name": "Isiah Meadows", "link": "https://stackoverflow.com/users/2693146/isiah-meadows"}, "edited": false, "score": 1, "creation_date": 1514711803, "post_id": 48041193, "comment_id": 83053018, "body": "Have you tried defining <code>iri</code> as <code>fn iri(&amp;self, s: String) -&gt; IRI</code> and <code>class</code> similarly? Note that Rust doesn&#39;t borrow by default, so that might be your issue."}, {"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "reply_to_user": {"reputation": 1322, "user_id": 2693146, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KTITg.jpg?s=128&g=1", "display_name": "Isiah Meadows", "link": "https://stackoverflow.com/users/2693146/isiah-meadows"}, "edited": false, "score": 0, "creation_date": 1514712122, "post_id": 48041193, "comment_id": 83053083, "body": "Both methods change the <code>ont</code> data structure unfortunately, so need to borrow mutably. I&#39;ve added clarification to the question."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1514712164, "post_id": 48041193, "comment_id": 83053092, "body": "<code>IRI</code> is not a type alias - it&#39;s a wrapper struct. A type alias would be <code>type IRI = usize</code>."}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1514717135, "post_id": 48041193, "comment_id": 83054149, "body": "There is no way of working around this. The reasons are given in the accepted answer to the question you yourself linked above."}], "owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "closed_date": 1514723037, "answer_count": 0, "score": 0, "last_activity_date": 1514712062, "creation_date": 1514710306, "last_edit_date": 1514712062, "question_id": 48041193, "link": "https://stackoverflow.com/questions/48041193/multiple-calls-on-a-single-method-in-rust", "closed_reason": "Duplicate", "title": "Multiple Calls on a Single method in rust", "body": "<p>I am writing a library in rust which builds a self-referential data\nstructure; it uses indexes internally for nodes which are actually\nidentified by URIs (or IRIs which is the same thing).</p>\n\n<p>I have a method like so:</p>\n\n<pre><code>fn iri(self, s: String)-&gt; IRI\n</code></pre>\n\n<p>IRI is actually just a type alias for usize:</p>\n\n<pre><code>struct IRI(usize)\n</code></pre>\n\n<p>so that I can do this, where <code>ont</code> is the main data structure:</p>\n\n<pre><code>let i = ont.iri(\"http://example.com\");\n</code></pre>\n\n<p>I can then pass this to further methods:</p>\n\n<pre><code>let c = ont.class(i);\n</code></pre>\n\n<p>This is okay, but I'd like to combine these into one line:</p>\n\n<pre><code>let c = ont.class(ont.iri(\"http://example.com\"))\n</code></pre>\n\n<p>This fails because I can't borrow the reference to <code>ont</code> twice. Both the <code>iri</code> and <code>class</code> calls are mutable and need to be.</p>\n\n<p>Is there any way of achieving this without an intermediate variable?</p>\n"}, {"tags": ["rust", "linker-errors", "rlib"], "answers": [{"comments": [{"owner": {"reputation": 665, "user_id": 9120849, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/856f24051ab75970b697629e2eec67ae?s=128&d=identicon&r=PG&f=1", "display_name": "UndercoverCoder", "link": "https://stackoverflow.com/users/9120849/undercovercoder"}, "edited": false, "score": 1, "creation_date": 1514737100, "post_id": 48041654, "comment_id": 83058979, "body": "Thanks a billion. Worked like a charm, literally been looking on Google for the past 3 days haha"}], "tags": [], "owner": {"reputation": 96, "user_id": 3794331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0748e0c0bd0b9989a5ae89008fc9cf36?s=128&d=identicon&r=PG&f=1", "display_name": "Tsukihara Caligin", "link": "https://stackoverflow.com/users/3794331/tsukihara-caligin"}, "is_accepted": true, "score": 8, "last_activity_date": 1514758105, "last_edit_date": 1514758105, "creation_date": 1514715642, "answer_id": 48041654, "question_id": 48040146, "link": "https://stackoverflow.com/questions/48040146/error-loading-target-specification-could-not-find-specification-for-target/48041654#48041654", "title": "Error loading target specification: Could not find specification for target", "body": "<p>I had the same problem. These issues on Xargo and Cargo seem to suggest there's a bug about the location of target specs:</p>\n\n<ul>\n<li><a href=\"https://github.com/japaric/xargo/issues/44\" rel=\"noreferrer\">https://github.com/japaric/xargo/issues/44</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/issues/4865\" rel=\"noreferrer\">https://github.com/rust-lang/cargo/issues/4865</a></li>\n</ul>\n\n<p>Setting <code>RUST_TARGET_PATH=pwd</code> before invoking <code>xargo</code> fixed the issue for me. The invocation in the given Makefile will then look like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>@RUST_TARGET_PATH=$(shell pwd) xargo build --target $(target)\n</code></pre>\n"}], "owner": {"reputation": 665, "user_id": 9120849, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/856f24051ab75970b697629e2eec67ae?s=128&d=identicon&r=PG&f=1", "display_name": "UndercoverCoder", "link": "https://stackoverflow.com/users/9120849/undercovercoder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1524, "favorite_count": 0, "accepted_answer_id": 48041654, "answer_count": 1, "score": 4, "last_activity_date": 1514758355, "creation_date": 1514696516, "last_edit_date": 1514758355, "question_id": 48040146, "link": "https://stackoverflow.com/questions/48040146/error-loading-target-specification-could-not-find-specification-for-target", "title": "Error loading target specification: Could not find specification for target", "body": "<p>I'm following <a href=\"https://os.phil-opp.com/set-up-rust/\" rel=\"nofollow noreferrer\">this tutorial</a> on how to make an EXTREMELY BASIC Operating System in Rust. This is my current state:</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"blog_os\"\nversion = \"0.1.0\"\nauthors = [\"Philipp Oppermann &lt;dev@phil-opp.com&gt;\"]   # Here I used my own details\n\n[lib]\ncrate-type = [\"staticlib\"]\n</code></pre>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre><code>#![feature(lang_items)]\n#![no_std]\n\n#[no_mangle]\npub extern fn rust_main() {}\n\n#[lang = \"eh_personality\"] extern fn eh_personality() {}\n#[lang = \"panic_fmt\"] #[no_mangle] pub extern fn panic_fmt() -&gt; ! {loop{}}\n</code></pre>\n\n<p><strong>x86_64-blog_os.json</strong></p>\n\n<pre><code>{\n  \"llvm-target\": \"x86_64-unknown-none\",\n  \"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\",\n  \"linker-flavor\": \"gcc\",\n  \"target-endian\": \"little\",\n  \"target-pointer-width\": \"64\",\n  \"target-c-int-width\": \"32\",\n  \"arch\": \"x86_64\",\n  \"os\": \"none\",\n  \"disable-redzone\": true,\n  \"features\": \"-mmx,-sse,+soft-float\"\n}\n</code></pre>\n\n<p>Here is the <a href=\"https://github.com/phil-opp/blog_os/blob/post_3/Makefile\" rel=\"nofollow noreferrer\">Makefile</a>. </p>\n\n<hr>\n\n<p>If you scroll down to the <strong>Fixing Linker Errors</strong> section in the tutorial, we're basically asked to add the following lines to our <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nrlibc = \"1.0\"\n</code></pre>\n\n<p>Then specify the external crate in <code>lib.rs</code> (after the <code>#![no_std]</code>):</p>\n\n<pre><code>extern crate rlibc;\n</code></pre>\n\n<p>When I run <code>make run</code> in the terminal, I get the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: Error loading specification: Could not find specification for target \"x86_64-blog_os\" \n\nerror: Could not compile 'rlibc'\n</code></pre>\n\n<p>We're expected to get an error... just not this one. The example in the <strong>Fixing Linker Errors</strong> section gives an idea of the kind of error we should expect.</p>\n\n<p>What may be going wrong? I've searched everywhere on Google with no solution.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 303, "user_id": 3736239, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9c083a66a74c166d019192bc85cc78d8?s=128&d=identicon&r=PG&f=1", "display_name": "stuffy", "link": "https://stackoverflow.com/users/3736239/stuffy"}, "edited": false, "score": 0, "creation_date": 1514683683, "post_id": 48039028, "comment_id": 83048880, "body": "This works for my case! I&#39;m still unsure of why point (1) in my original question is not sufficient to please the compiler and am sad that you have to inline the alias (the real one I have is rather huge), but glad this is possible, even with freaky type magic."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 303, "user_id": 3736239, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9c083a66a74c166d019192bc85cc78d8?s=128&d=identicon&r=PG&f=1", "display_name": "stuffy", "link": "https://stackoverflow.com/users/3736239/stuffy"}, "edited": false, "score": 2, "creation_date": 1514691020, "post_id": 48039028, "comment_id": 83049908, "body": "@stuffy, you don&#39;t need to inline the alias. <code>for&lt;&#39;_&gt;</code> can be added to it. <a href=\"https://play.rust-lang.org/?gist=bbd442124db421e7201baa5b29ea7829&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 2, "creation_date": 1514693727, "post_id": 48039028, "comment_id": 83050297, "body": "You can also just remove <code>&lt;&#39;input&gt;</code> from type alias. <code>type FunctionType = fn(input_string: &amp;str) -&gt; Result&lt;(), &amp;str&gt;;</code> Lifetime elision will do the right thing."}, {"owner": {"reputation": 303, "user_id": 3736239, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9c083a66a74c166d019192bc85cc78d8?s=128&d=identicon&r=PG&f=1", "display_name": "stuffy", "link": "https://stackoverflow.com/users/3736239/stuffy"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1514741719, "post_id": 48039028, "comment_id": 83060069, "body": "@red75prime I may have simplified too much: I thought I had to inline it because my function type alias is generic, as it would not compile following the pattern of this answer. Instead, it looks like I can&#39;t combine generic <code>FunctionType&lt;T&gt;</code> with generic <code>do_stuff_with_function&lt;T, F&gt;(...) where F: FunctionType&lt;T&gt;</code> and have to <code>do_stuff_with_function&lt;T&gt;(function: FunctionType&lt;T&gt;)</code>. Also, elision doesn&#39;t work here for me because I actually have multiple arguments. :) <a href=\"https://play.rust-lang.org/?gist=1cf0cac1dc463647887ac3274cefcf09&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a>. <code>for&lt;&#39;_&gt;</code> is indeed the key."}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 2, "last_activity_date": 1514735846, "last_edit_date": 1514735846, "creation_date": 1514680223, "answer_id": 48039028, "question_id": 48038871, "link": "https://stackoverflow.com/questions/48038871/value-does-not-live-long-enough-but-only-when-using-a-function-pointer/48039028#48039028", "title": "value &quot;does not live long enough&quot;, but only when using a function pointer", "body": "<p><strong>TL;DR:</strong> Use <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\">the <code>for&lt;'a&gt;</code> syntax</a> to have a specific lifetime for the function, rather than take one from the context where it's used.</p>\n\n<hr>\n\n<p>Lifetime elision on args of <code>do_stuff_with_function</code> hides what's going on here. Your actual lifetime is:</p>\n\n<pre><code> fn do_stuff_with_function&lt;'a&gt;(function: FunctionType&lt;'a&gt;) {\n</code></pre>\n\n<p>This lifetime declared in function argument doesn't mean \"some random short lifetime I'll come up with later\", but rather \"a lifetime that already exists at the point of calling this function\".</p>\n\n<p>These lifetime annotations are not wildcards, but more like identifiers to track where values came from and where they are going to. They can be used, for example, to clarify a situation like this:</p>\n\n<pre><code>fn do_stuff_with_function&lt;'a&gt;(function: FunctionType&lt;'a&gt;, t: &amp;'a str) {\n    match function(t) {\n        Ok(_) =&gt; {},\n        Err(_) =&gt; {},\n    }\n}\n\nfn main() {\n    let string = String::new();\n    do_stuff_with_function(okay, string.as_str());    \n}\n</code></pre>\n\n<p>However, the problem is solvable in Rust, but just needs a more advanced syntax. For the purpose of the explanation, first, let's change it to:</p>\n\n<pre><code>fn do_stuff_with_function&lt;'a, F&gt;(function: F) where F: Fn(&amp;'a str) -&gt; Result&lt;(), &amp;'a str&gt; {\n</code></pre>\n\n<p>That means \"make a copy of <code>do_stuff_with_function</code> for every unique <code>F</code> which can be anything that looks like a function taking <code>&amp;'a str</code> (etc.). \nThis is essentially the same (+ allows closures) as your code. However, I still had to name the lifetime as tied to the call of <code>do_stuff_with_function&lt;'a&gt;</code>.</p>\n\n<p>So here's a <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\">freaky type magic</a>:</p>\n\n<pre><code>fn do_stuff_with_function&lt;F&gt;(function: F) where F: for&lt;'a&gt; Fn(&amp;'a str) -&gt; Result&lt;(), &amp;'a str&gt; {\n</code></pre>\n\n<p>Which allows moving definition of the lifetime from <code>do_stuff_with_function</code> to definition of the <code>Fn</code> using <code>for&lt;'a&gt;</code> syntax. This way it's specific to the <code>F</code>, rather than <code>do_stuff_with_function</code> arguments.</p>\n"}], "owner": {"reputation": 303, "user_id": 3736239, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9c083a66a74c166d019192bc85cc78d8?s=128&d=identicon&r=PG&f=1", "display_name": "stuffy", "link": "https://stackoverflow.com/users/3736239/stuffy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 190, "favorite_count": 0, "accepted_answer_id": 48039028, "answer_count": 1, "score": 1, "last_activity_date": 1514735846, "creation_date": 1514677971, "question_id": 48038871, "link": "https://stackoverflow.com/questions/48038871/value-does-not-live-long-enough-but-only-when-using-a-function-pointer", "title": "value &quot;does not live long enough&quot;, but only when using a function pointer", "body": "<p>I'm trying to get the following simplified code to compile:</p>\n\n<pre><code>type FunctionType&lt;'input&gt; = fn(input_string: &amp;'input str) -&gt; Result&lt;(), &amp;'input str&gt;;\n\nfn okay&lt;'input&gt;(_input_string: &amp;'input str) -&gt; Result&lt;(), &amp;'input str&gt; {\n    Ok(())\n}\n\nfn do_stuff_with_function(function: FunctionType) {\n    let string = String::new();\n    match function(string.as_str()) {\n        Ok(_) =&gt; {},\n        Err(_) =&gt; {},\n    }\n\n}\n\nfn main() {\n    do_stuff_with_function(okay);    \n}\n</code></pre>\n\n<p>The playground complains:</p>\n\n<pre><code>error[E0597]: `string` does not live long enough\n  --&gt; src/main.rs:13:20\n   |\n13 |     match function(string.as_str()) {\n   |                    ^^^^^^ does not live long enough\n...\n18 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 11:1...\n  --&gt; src/main.rs:11:1\n   |\n11 | / fn do_stuff_with_function(function: FunctionType) {\n12 | |     let string = String::new();\n13 | |     match function(string.as_str()) {\n14 | |         Ok(_) =&gt; {},\n...  |\n17 | |    \n18 | | }\n   | |_^\n</code></pre>\n\n<p>I understand why the error would be firing under other circumstances: <code>string</code> only lives as long as the execution of <code>do_stuff_with_function</code>, but <code>do_stuff_with_function</code> returns the value of <code>function</code>'s invocation which includes a same-lifetime reference to its input value, i.e., <code>string</code>.</p>\n\n<p>However, I'm confused on three points:</p>\n\n<ol>\n<li>I <code>match</code> the result of the function call, then return <code>()</code> for both branches. Why does the lifetime of value returned by <code>function</code> matter if it's unconditionally thrown out?</li>\n<li>If I replace the call to the parameter <code>function</code> with a direct reference to <code>okay</code> (which has an identical signature), it compiles without complaint.</li>\n<li>The error message suggests (though does not state outright?) that the necessary lifetime is already the same as the actual lifetime.</li>\n</ol>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1514692139, "post_id": 48038866, "comment_id": 83050062, "body": "Have you tried creating a function which does reading and error conversion?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1514707597, "post_id": 48038866, "comment_id": 83052260, "body": "@red75prime I want solve problem in some more general way. I only start work on parsing, and parsing &quot;header&quot; lines, after that I have to handle many other errors and for all of them I want add line and column context."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1514756267, "creation_date": 1514756267, "answer_id": 48045826, "question_id": 48038866, "link": "https://stackoverflow.com/questions/48038866/how-can-i-automate-adding-context-to-an-err/48045826#48045826", "title": "How can I automate adding context to an Err?", "body": "<p>TL;DR: Use a crate like <a href=\"https://crates.io/crates/quick_error\" rel=\"nofollow noreferrer\">quick_error</a>, <a href=\"https://crates.io/crates/error-chain\" rel=\"nofollow noreferrer\">error-chain</a>, or <a href=\"https://crates.io/crates/failure\" rel=\"nofollow noreferrer\">failure</a>.</p>\n\n<hr>\n\n<blockquote>\n  <p>I can not just implement <code>impl From&lt;Utf8Error&gt; for ParseError</code>, because the context in the form of line number is not available in the trait implementation.</p>\n</blockquote>\n\n<p>That's true, but that doesn't mean you can't produce a type that carries the context.</p>\n\n<p>You can simplify your call site down to something like this:</p>\n\n<pre><code>let val = str::from_utf8(&amp;record_buf[4..][..2])\n    .context(pos)?\n    .parse()\n    .context(pos)?;\n</code></pre>\n\n<p>To do so, we create a new type to hold our combination context and original error, then implement an <em>extension trait</em> for <code>Result</code> to add the context to an error:</p>\n\n<pre><code>struct Context&lt;V, E&gt;(V, E);\n\ntrait ContextExt&lt;T, E&gt; {\n    fn context&lt;V&gt;(self, v: V) -&gt; Result&lt;T, Context&lt;V, E&gt;&gt;;\n}\n\nimpl&lt;T, E&gt; ContextExt&lt;T, E&gt; for Result&lt;T, E&gt; {\n    fn context&lt;V&gt;(self, v: V) -&gt; Result&lt;T, Context&lt;V, E&gt;&gt; {\n        self.map_err(|e| Context(v, e))\n    }\n}\n</code></pre>\n\n<p>We then implement <code>From&lt;Context&lt;...&gt;&gt; for Error</code> for each interesting thing:</p>\n\n<pre><code>impl From&lt;Context&lt;Position, str::Utf8Error&gt;&gt; for ParseError {\n    fn from(other: Context&lt;Position, str::Utf8Error&gt;) -&gt; ParseError {\n        ParseError::EncodingError(other.0, other.1)\n    }\n}\n\nimpl From&lt;Context&lt;Position, num::ParseIntError&gt;&gt; for ParseError {\n    fn from(other: Context&lt;Position, num::ParseIntError&gt;) -&gt; ParseError {\n        ParseError::InvalidRecord(other.0, other.1)\n    }\n}\n</code></pre>\n\n<p>The last ergonomic change is to implement <code>Copy</code> for your <code>Postion</code> type, which makes it much easier to use \u2014 no more calls to <code>.clone()</code>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=5f0e2421a36ae77f95a35e16d1c91e4e&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>The aforementioned crates make this <em>way easier</em>. </p>\n\n<p>Here's all the code with quick-error (my favorite):</p>\n\n<pre><code>#[macro_use]\nextern crate quick_error;\n\nuse quick_error::ResultExt;\nuse std::{num, str};\n\n#[derive(Debug, Copy, Clone)]\npub struct Position {\n    pub line: usize,\n    pub column: usize,\n}\n\nquick_error! {\n    #[derive(Debug)]\n    pub enum ParseError {\n        EncodingError(pos: Position, err: str::Utf8Error) {\n            context(pos: Position, err: str::Utf8Error) -&gt; (pos, err)\n        }\n        InvalidRecord(pos: Position, err: num::ParseIntError) {\n            context(pos: Position, err: num::ParseIntError) -&gt; (pos, err)\n        }\n    }\n}\n\nfn inner_main() -&gt; Result&lt;u32, ParseError&gt; {\n    let record_buf = b\"kode12abc\";\n\n    let pos = Position { line: 1, column: 2 };\n\n    let val = str::from_utf8(&amp;record_buf[4..][..2])\n        .context(pos)?\n        .parse()\n        .context(pos)?;\n\n    Ok(val)\n}\n\nfn main() {\n    let v = inner_main().expect(\"boom\");\n    println!(\"{}\", v)\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 48045826, "answer_count": 1, "score": 1, "last_activity_date": 1514756267, "creation_date": 1514677836, "last_edit_date": 1514754963, "question_id": 48038866, "link": "https://stackoverflow.com/questions/48038866/how-can-i-automate-adding-context-to-an-err", "title": "How can I automate adding context to an Err?", "body": "<p>I'm parsing a text file line by line so I have a line number as context:</p>\n\n<pre><code>#[derive(Debug, Clone)]\npub struct Position {\n    pub line: usize,\n    pub column: usize,\n}\n\n#[derive(Debug)]\npub enum ParseError {\n    IoError(io::Error),\n    InvalidRecord(Position),\n    EncodingError(Position),\n}\n</code></pre>\n\n<p>I have a loop like this:</p>\n\n<pre><code>let mut pos = Position { line: 0, column: 0 };\nconst LF: u8 = 0xa;\nlet mut record_buf = Vec::new();\nwhile let Ok(nbytes) = reader.read_until(LF, &amp;mut record_buf) {\n    // if record_buf contains some special bytes, then\n    // we have several numbers in ASCII\n    let x = str::from_utf8(&amp;record_buf[42..(42 + 2)])?.parse::&lt;u32&gt;()?;\n    let y = str::from_utf8(&amp;record_buf[46..(46 + 4)])?.parse::&lt;u32&gt;()?;\n\n    //at the end\n    record_buf.clear();\n    pos.line += 1;\n}\n</code></pre>\n\n<p>I want to automate mapping <code>Utf8Error</code> to <code>ParseError::EncodingError</code> and \n<code>ParseIntError</code> to <code>ParseError::EncodingError</code>.</p>\n\n<p>I can not just implement <code>impl From&lt;Utf8Error&gt; for ParseError</code>,\nbecause the context in the form of line number is not available in the trait implementation.</p>\n\n<p>How can I simplify my coding and not write verbose error handling like this for every number that I want extract from <code>Vec&lt;u8&gt;</code>?</p>\n\n<pre><code>str::from_utf8(&amp;record_buf[42..(42 + 2)])\n    .map_err(|_| ParseError::EncodingError(pos.clone()))?\n    .parse::&lt;u32&gt;()\n    .map_err(|_| ParseError::InvalidRecord(pos.clone()))? \n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "edited": false, "score": 0, "creation_date": 1514680719, "post_id": 48038934, "comment_id": 83048455, "body": "I tried this version I think - but in the context I use this, I really want a value, not a reference. I tried to write stuff like <code>&amp;FOOS[i].clone()</code> but that also did not really work out... In c++, the difference is obvious: <code>const Foo&amp; v = FOOS[0];</code> vs <code>Foo v = FOOS[0];</code> Here in Rust, it looks a bit over-done somehow. Why would I want to move a value out of a constant array?"}, {"owner": {"reputation": 1722, "user_id": 4932315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2534369f7ebe7380a2ba3841ec718ed7?s=128&d=identicon&r=PG&f=1", "display_name": "AnthonyB", "link": "https://stackoverflow.com/users/4932315/anthonyb"}, "reply_to_user": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "edited": false, "score": 0, "creation_date": 1514681293, "post_id": 48038934, "comment_id": 83048560, "body": "@BitTickler I&#39;ve added an example about how to use your code with the values instead of references."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1514713520, "post_id": 48038934, "comment_id": 83053369, "body": "Perhaps you could add a word or two in your answer about <code>println!</code> not being a function; the passed values are taken by reference by default (which is never happening when passing arguments to a function)."}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "edited": false, "score": 0, "creation_date": 1514714927, "post_id": 48038934, "comment_id": 83053650, "body": "After waiting for a few hours to see if something easier shows up, I accepted the answer and...ported my few hundred lines back to C++. Too curious to see the results of my idea. My current verdict on Rust: They really should have value types which spare people all that cryptic jazz. Also they should split CStyle enums (as value types) from discrimnated unions."}, {"owner": {"reputation": 1722, "user_id": 4932315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2534369f7ebe7380a2ba3841ec718ed7?s=128&d=identicon&r=PG&f=1", "display_name": "AnthonyB", "link": "https://stackoverflow.com/users/4932315/anthonyb"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1514726472, "post_id": 48038934, "comment_id": 83056246, "body": "@Stefan I&#39;ve addded a little word and a link to the println! macro, you&#39;re right it can be weird at the beginning. BitTickler, I agree Rust is really different from C++, their philosophy is not the same at all. It&#39;s hard at the beginning but in fact Rust is explicit. Also, types like integers that are allocated on the stack are copied by default. But struct are usually on the heap because we don&#39;t know their size at compile time, so it&#39;s interesting to prevent to copy them by error. In Rust we must derive the Copy trait in order to copy all the value. Sorry to not helping you more."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 4, "creation_date": 1514727692, "post_id": 48038934, "comment_id": 83056576, "body": "The size of a struct is usually known at compile time. But a struct is an abstraction, and in order to provide stable APIs rust only derives very very basic interfaces (<code>Sync</code>, <code>Send</code>) so you can extend the fields without breaking the API. If you want <code>Clone</code> or <code>Copy</code> simply <code>#[derive(...)]</code> them. Yes, rust is often more explicit than the magic in C++, and I consider that an important feature most of the time."}], "tags": [], "owner": {"reputation": 1722, "user_id": 4932315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2534369f7ebe7380a2ba3841ec718ed7?s=128&d=identicon&r=PG&f=1", "display_name": "AnthonyB", "link": "https://stackoverflow.com/users/4932315/anthonyb"}, "is_accepted": true, "score": 5, "last_activity_date": 1514781824, "last_edit_date": 1514781824, "creation_date": 1514678949, "answer_id": 48038934, "question_id": 48038069, "link": "https://stackoverflow.com/questions/48038069/cannot-move-out-of-type-foo2-a-non-copy-array/48038934#48038934", "title": "Cannot move out of type `[Foo;2]`, a non-copy array", "body": "<p>In your example you're trying to return a <em>value</em>. Once you return <code>FOOS[1]</code>, the value is copied to be returned, but in your case your struct can't be copied.</p>\n\n<p>The easiest way is to use references:</p>\n\n<pre><code>extern crate rand;\nuse rand::*;\n\n#[derive(Debug)]\nenum Foo {\n    A,\n    B,\n}\n//Your array still uses two values of type Foo\nstatic FOOS: [Foo; 2] = [Foo::A, Foo::B];\n\n/*\n * random_foo() now returns a reference. So the value in FOOS\n * is no longer borrowed.\n */\nfn random_foo() -&gt; &amp;'static Foo {\n    let i = rand::thread_rng().gen_range(0, FOOS.len());\n    &amp;FOOS[i]\n}\n\nfn main() {\n    println!(\n        \"First: {:?} Second: {:?} Random: {:?}\",\n        FOOS[0],\n        FOOS[1],\n        random_foo()\n    );\n}\n</code></pre>\n\n<p>See the <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">Rust book about ownership</a> and borrowing.</p>\n\n<p>See the <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch10-03-lifetime-syntax.html#the-static-lifetime\" rel=\"nofollow noreferrer\">Rust book about static lifetime</a> used in the example.</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/macro.println.html\" rel=\"nofollow noreferrer\">println!</a> macro can use your variables without taking ownership nor copying, it uses them as references. Macros are not functions, they could be compared to C++ macros on this point. They are <em>replaced</em> by the corresponding code before compiling. In a macro, it's possible to use the <em>address of</em> operator for example. See <a href=\"https://stackoverflow.com/q/30450399/155423\">Does println! borrow or own the variable?</a> for more information.</p>\n\n<p>If you really want to use a value instead of the reference, it's possible but you'll have to derive the traits <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\"><code>Copy</code></a> and <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html\" rel=\"nofollow noreferrer\"><code>Clone</code></a> for your struct. With that done, you can copy the value and return it.</p>\n\n<p>The difference is in your struct:</p>\n\n<pre><code>#[derive(Debug, Copy, Clone)]\nenum Foo {\n    A,\n    B,\n}\n</code></pre>\n\n<p>Please see <a href=\"https://stackoverflow.com/q/24253344/155423\">Move vs Copy in Rust</a> for further information about move and copy.</p>\n"}], "owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1718, "favorite_count": 0, "accepted_answer_id": 48038934, "answer_count": 1, "score": 0, "last_activity_date": 1514781824, "creation_date": 1514669632, "last_edit_date": 1514758466, "question_id": 48038069, "link": "https://stackoverflow.com/questions/48038069/cannot-move-out-of-type-foo2-a-non-copy-array", "title": "Cannot move out of type `[Foo;2]`, a non-copy array", "body": "<p>I fail to understand what the problem in the following code is supposed to be:</p>\n\n<pre><code>extern crate rand;\nuse rand::*;\n\n#[derive(Debug)]\nenum Foo {\n    A,\n    B,\n}\n\nstatic FOOS: [Foo; 2] = [Foo::A, Foo::B];\n\nfn random_foo() -&gt; Foo {\n    let i = rand::thread_rng().gen_range(0, FOOS.len());\n    FOOS[i]\n}\n\nfn main() {\n    println!(\n        \"First: {:?} Second: {:?} Random: {:?}\",\n        FOOS[0],\n        FOOS[1],\n        random_foo()\n    );\n}\n</code></pre>\n\n<p>I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0508]: cannot move out of type `[Foo; 2]`, a non-copy array\n  --&gt; src/main.rs:14:5\n   |\n14 |     FOOS[i]\n   |     ^^^^^^^ cannot move out of here\n</code></pre>\n\n<p>Using only the first 2 parts of the <code>println!()</code> and removing <code>fn random_foo()</code>, the code compiles. I cannot see what <code>random_foo()</code> does differently which is worth a compiler error. It only accesses an element of <code>FOOS</code> and tries to return the value, just like the arguments in the print statement in <code>main()</code> do.</p>\n"}, {"tags": ["rust", "generic-programming"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1514757781, "post_id": 48037963, "comment_id": 83063104, "body": "<i>Questions seeking debugging help (&quot;why isn&#39;t this code working?&quot;) must include the desired behavior, a <b>specific problem or error</b> and the <b>shortest code necessary to reproduce it</b> in the question itself.</i> \u2014 This code is not even syntactically valid Rust code, thus it fails with a syntax error. Additionally, you haven&#39;t included the complete error message, so we don&#39;t know what error you might have been experiencing."}, {"owner": {"reputation": 145, "user_id": 844564, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f94dd76e35de04e243fc26a447080f60?s=128&d=identicon&r=PG", "display_name": "Donald Whyte", "link": "https://stackoverflow.com/users/844564/donald-whyte"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1515241931, "post_id": 48037963, "comment_id": 83231305, "body": "@Shepmaster My apologies. In hindsight, this question wasn&#39;t very well thought out. I&#39;ve amended the syntax errors and added extra clarification to the question.  I&#39;ve selected Kornel&#39;s post as the accepted answer, but will also edit the original question post to confirm that it is indeed possible with the code I&#39;ve specified."}, {"owner": {"reputation": 145, "user_id": 844564, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f94dd76e35de04e243fc26a447080f60?s=128&d=identicon&r=PG", "display_name": "Donald Whyte", "link": "https://stackoverflow.com/users/844564/donald-whyte"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1515242551, "post_id": 48037963, "comment_id": 83231489, "body": "I&#39;ve updated the question to include extra explanation of @Kornel&#39;s answer."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 2, "last_activity_date": 1514757812, "last_edit_date": 1514757812, "creation_date": 1514669747, "answer_id": 48038090, "question_id": 48037963, "link": "https://stackoverflow.com/questions/48037963/conditionally-implement-a-rust-trait-only-if-a-type-constraint-is-satisfied/48038090#48038090", "title": "Conditionally implement a Rust trait only if a type constraint is satisfied", "body": "<p>Your example, after fixing minor syntax issues, does work:</p>\n\n<pre><code>pub struct Foo&lt;T&gt; {\n    some_value: T,\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    pub fn new(value: T) -&gt; Self {\n        Self { some_value: value }\n    }\n}\n\n// Implement `Default()`, assuming that the underlying stored type\n// `T` also implements `Default`.\nimpl&lt;T&gt; Default for Foo&lt;T&gt;\nwhere\n    T: Default,\n{\n    fn default() -&gt; Self {\n        Self::new(T::default())\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=dc2e32f9a72337877c00229e73996ea3&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1514757954, "creation_date": 1514757954, "answer_id": 48045960, "question_id": 48037963, "link": "https://stackoverflow.com/questions/48037963/conditionally-implement-a-rust-trait-only-if-a-type-constraint-is-satisfied/48045960#48045960", "title": "Conditionally implement a Rust trait only if a type constraint is satisfied", "body": "<p>For this specific instance, the implementation provided by <code>derive(Default)</code> does exactly what you've asked for:</p>\n\n<pre><code>#[derive(Default)]\npub struct Foo&lt;T&gt; {\n    some_value: T,\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39415052/155423\">Deriving a trait results in unexpected compiler error, but the manual implementation works</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 145, "user_id": 844564, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f94dd76e35de04e243fc26a447080f60?s=128&d=identicon&r=PG", "display_name": "Donald Whyte", "link": "https://stackoverflow.com/users/844564/donald-whyte"}, "is_accepted": true, "score": 0, "last_activity_date": 1515264696, "last_edit_date": 1515264696, "creation_date": 1515262361, "answer_id": 48130360, "question_id": 48037963, "link": "https://stackoverflow.com/questions/48037963/conditionally-implement-a-rust-trait-only-if-a-type-constraint-is-satisfied/48130360#48130360", "title": "Conditionally implement a Rust trait only if a type constraint is satisfied", "body": "<p>As pointed out by @Kornel's answer, it turns out the compiler <em>already</em> conditionally implements traits of generic structs.</p>\n\n<p>The <code>Default</code> trait is only implemented for <code>struct Foo&lt;T&gt;</code> if <code>T</code> satisfies the type constraints specified when defining the implementation of <code>Default</code>. In this case, the constraints were defined as <code>where T: Default</code>. Therefore, <code>Foo&lt;T&gt;</code> only implements <code>Default</code> if <code>T</code> implements <code>Default</code>.</p>\n\n<p>As shown by the <code>fn main()</code> example above, any attempt to use the <code>Foo&lt;T&gt;</code>'s <code>Default</code> implementation when <code>T</code> does not implement <code>Default</code> produces a compiler error.</p>\n"}], "owner": {"reputation": 145, "user_id": 844564, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f94dd76e35de04e243fc26a447080f60?s=128&d=identicon&r=PG", "display_name": "Donald Whyte", "link": "https://stackoverflow.com/users/844564/donald-whyte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1249, "favorite_count": 0, "accepted_answer_id": 48130360, "answer_count": 3, "score": 2, "last_activity_date": 1515264696, "creation_date": 1514668619, "last_edit_date": 1515262332, "question_id": 48037963, "link": "https://stackoverflow.com/questions/48037963/conditionally-implement-a-rust-trait-only-if-a-type-constraint-is-satisfied", "title": "Conditionally implement a Rust trait only if a type constraint is satisfied", "body": "<p>I have the following struct:</p>\n\n<pre><code>pub struct Foo&lt;T&gt; {\n    some_value: T,\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    pub fn new(value: T) -&gt; Self {\n        Self { some_value: value }\n    }\n}\n\n// Implement `Default()`, assuming that the underlying stored type\n// `T` also implements `Default`.\nimpl&lt;T&gt; Default for Foo&lt;T&gt;\nwhere\n    T: Default,\n{\n    fn default() -&gt; Self {\n        Self::new(T::default())\n    }\n}\n</code></pre>\n\n<p>I would like <code>Foo::default()</code> to be available if <code>T</code> implements <code>Default</code>, but <em>not</em> available otherwise.</p>\n\n<p>Is it possible to specify \"conditional implementation\" in Rust, where we implement a trait if and only if some generic type trait constraint is satisfied? If the constraint is not satisfied, the target trait (<code>Default</code> in this case) is not implemented and there is no compiler error.</p>\n\n<p>In other words, would is it possible to use the generic struct above in the following way?</p>\n\n<pre><code>fn main() {\n    // Okay, because `u32` implements `Default`.\n    let foo = Foo::&lt;u32&gt;::default();\n\n    // This should produce a compiler error, because `Result` does not implement\n    // the `Default` trait.\n    //let bar = Foo::&lt;Result&lt;String, String&gt;&gt;::default();\n\n    // This is okay. The `Foo&lt;Result&lt;...&gt;&gt;` specialisation does not implement\n    // `Default`, but we're not attempting to use that trait here.\n    let bar = Foo::&lt;Result&lt;u32, String&gt;&gt;::new(Ok(42));\n}\n</code></pre>\n"}, {"tags": ["iterator", "rust", "reset"], "answers": [{"comments": [{"owner": {"reputation": 1722, "user_id": 4932315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2534369f7ebe7380a2ba3841ec718ed7?s=128&d=identicon&r=PG&f=1", "display_name": "AnthonyB", "link": "https://stackoverflow.com/users/4932315/anthonyb"}, "edited": false, "score": 0, "creation_date": 1514665098, "post_id": 48037459, "comment_id": 83045268, "body": "Thanks for your answer. I&#39;ve though about cloning the iterator but I though it&#39;s equivalent to create a new one in this case. I understand that the iteration has a cost (either in a <code>for</code> or in a <code>count</code>), but it has a cost only if I iterate, and I iterate only if I need to. But if iterate again is not possible, I&#39;ll create a new iterator."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 12, "last_activity_date": 1514664465, "creation_date": 1514664465, "answer_id": 48037459, "question_id": 48037128, "link": "https://stackoverflow.com/questions/48037128/how-to-use-the-same-iterator-twice-once-for-counting-and-once-for-iteration/48037459#48037459", "title": "How to use the same iterator twice, once for counting and once for iteration?", "body": "<p>Calling <code>count</code> consumes the iterator, because it actually iterates until it is done (i.e. <code>next()</code> returns <code>None</code>).</p>\n\n<p>You can prevent consuming the iterator by using <code>by_ref</code>, but the iterator is still driven to its completion (<code>by_ref</code> actually just returns the mutable reference to the iterator, and <code>Iterator</code> is also implemented for the mutable reference: <code>impl&lt;'a, I&gt; Iterator for &amp;'a mut I</code>).</p>\n\n<p>This still can be useful if the iterator contains other state you want to reuse after it is done, but not in this case.</p>\n\n<p>You could simply try forking the iterator (they often implement <code>Clone</code> if they don't have side effects), although in this case recreating it is just as good (most of the time creating an iterator is cheap; the real work is usually only done when you drive it by calling <code>next</code> directly or indirectly).</p>\n\n<p>So no, (in this case) you can't reset it, and yes, you need to create a new one (or clone it before using it).</p>\n"}, {"comments": [{"owner": {"reputation": 1722, "user_id": 4932315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2534369f7ebe7380a2ba3841ec718ed7?s=128&d=identicon&r=PG&f=1", "display_name": "AnthonyB", "link": "https://stackoverflow.com/users/4932315/anthonyb"}, "edited": false, "score": 0, "creation_date": 1514665351, "post_id": 48037483, "comment_id": 83045338, "body": "Thanks for your answer. I understand that the iteration over an iterator has a cost, but as I said to Stefan I iterate throuth only if I need so it&#39;s my choice in this case to iterate. But I guess it&#39;s in order to discourage us to waste performance by iterate when it&#39;s not necessary. So I&#39;ll create a pretty new iterator if it&#39;s the way that I&#39;m supposed to take."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 3, "last_activity_date": 1529864824, "last_edit_date": 1529864824, "creation_date": 1514664674, "answer_id": 48037483, "question_id": 48037128, "link": "https://stackoverflow.com/questions/48037128/how-to-use-the-same-iterator-twice-once-for-counting-and-once-for-iteration/48037483#48037483", "title": "How to use the same iterator twice, once for counting and once for iteration?", "body": "<p>Iterators can generally not be iterated twice because there might be a cost to their iteration. In the case of <code>str::lines</code>, each iteration needs to find the next end of line, which means scanning through the string, which has some cost.  You could argue that the iterator could save those positions for later reuse, but the cost of storing them would be even bigger.</p>\n\n<p>Some <code>Iterator</code>s are even more expensive to iterate, so you really don't want to do it twice.</p>\n\n<p>Many iterators can be recreated easily (here calling <code>str::lines</code> a second time) or be <code>clone</code>d. Whichever way you recreate an iterator, the two iterators are generally completely independent, so iterating will mean you'll pay the price twice.</p>\n\n<p>In your specific case, it is probably fine to just iterate the string twice as strings that fit in memory shouldn't be so long that merely counting lines would be a very expensive operation. If you believe this is the case, first benchmark it, second, write your own algorithm as <code>Lines::count</code> is probably not optimized as much as it could since the primary goal of <code>Lines</code> is to iterate lines.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1529865154, "creation_date": 1529865154, "answer_id": 51012826, "question_id": 48037128, "link": "https://stackoverflow.com/questions/48037128/how-to-use-the-same-iterator-twice-once-for-counting-and-once-for-iteration/51012826#51012826", "title": "How to use the same iterator twice, once for counting and once for iteration?", "body": "<p>The other answers have already well-explained that you can either recreate your iterator or clone it.</p>\n\n<p>If the act of iteration is overly expensive or it's impossible to do multiple times (such as reading from a network socket), an alternative solution is to create a collection of the iterator's values that will allow you to get the length and the values.</p>\n\n<p>This does require storing every value from the iterator; <em>there's no such thing as a free lunch</em>!</p>\n\n<pre><code>use std::fs;\n\nfn main() {\n    let log_content = fs::read_to_string(\"/home/myuser/test.log\").unwrap();\n    let lines: Vec&lt;_&gt; = log_content.lines().collect();\n\n    println!(\"{} lines\", lines.len());\n    for value in lines {\n        println!(\"{}\", value);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1722, "user_id": 4932315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2534369f7ebe7380a2ba3841ec718ed7?s=128&d=identicon&r=PG&f=1", "display_name": "AnthonyB", "link": "https://stackoverflow.com/users/4932315/anthonyb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4607, "favorite_count": 1, "accepted_answer_id": 48037459, "answer_count": 3, "score": 8, "last_activity_date": 1529865154, "creation_date": 1514661679, "last_edit_date": 1529857465, "question_id": 48037128, "link": "https://stackoverflow.com/questions/48037128/how-to-use-the-same-iterator-twice-once-for-counting-and-once-for-iteration", "title": "How to use the same iterator twice, once for counting and once for iteration?", "body": "<p>It seems that an iterator is consumed when counting. How can I use the same iterator for counting and then iterate on it?</p>\n\n<p>I'm trying to count the lines in a file and then print them. I am able to read the file content, I'm able to count the lines count, but then I'm no longer able to iterate over the lines as if the internal cursor was at the end of the iterator.</p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\n\nfn main() {\n    let log_file_name = \"/home/myuser/test.log\";\n    let mut log_file = File::open(log_file_name).unwrap();\n    let mut log_content: String = String::from(\"\");\n    //Reads the log file.\n    log_file.read_to_string(&amp;mut log_content).unwrap();\n    //Gets all the lines in a Lines struct.\n    let mut lines = log_content.lines();\n    //Uses by_ref() in order to not take ownership\n    let count = lines.by_ref().count();\n    println!(\"{} lines\", count); //Prints the count\n                                 //Doesn't enter in the loop\n    for value in lines {\n        println!(\"{}\", value);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"noreferrer\"><code>Iterator</code></a> doesn't have a <code>reset</code> method, but it seems the internal cursor is at the end of the iterator after the count. Is it mandatory to create a new <a href=\"https://doc.rust-lang.org/nightly/core/str/struct.Lines.html\" rel=\"noreferrer\"><code>Lines</code></a> by calling <code>log_content.lines()</code> again or can I reset the internal cursor?</p>\n\n<p>For now, the workaround that I found is create a new iterator:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::prelude::*;\n\nfn main() {\n    let log_file_name = \"/home/myuser/test.log\";\n    let mut log_file = File::open(log_file_name).unwrap();\n    let mut log_content: String = String::from(\"\");\n    //Reads the log file.\n    log_file.read_to_string(&amp;mut log_content).unwrap();\n    //Counts all and consume the iterator\n    let count = log_content.lines().count();\n    println!(\"{} lines\", count);\n    //Creates a pretty new iterator\n    let lines = log_content.lines();\n    for value in lines {\n        println!(\"{}\", value);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 665, "user_id": 9120849, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/856f24051ab75970b697629e2eec67ae?s=128&d=identicon&r=PG&f=1", "display_name": "UndercoverCoder", "link": "https://stackoverflow.com/users/9120849/undercovercoder"}, "is_accepted": true, "score": 0, "last_activity_date": 1514652809, "creation_date": 1514652809, "answer_id": 48035984, "question_id": 48035724, "link": "https://stackoverflow.com/questions/48035724/xargo-build-cannot-find-library/48035984#48035984", "title": "`xargo build` cannot find library", "body": "<p><strong>SOLVED:</strong> Turns out it was actually related to where I placed my files.</p>\n\n<p>I had to create a <code>blog_os</code> folder and stored my files in there. Hence the error:</p>\n\n<pre><code>can't find library 'blog_os'....\n</code></pre>\n\n<p>Rookie mistake :) </p>\n"}], "owner": {"reputation": 665, "user_id": 9120849, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/856f24051ab75970b697629e2eec67ae?s=128&d=identicon&r=PG&f=1", "display_name": "UndercoverCoder", "link": "https://stackoverflow.com/users/9120849/undercovercoder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 319, "favorite_count": 0, "accepted_answer_id": 48035984, "answer_count": 1, "score": 0, "last_activity_date": 1514652809, "creation_date": 1514651136, "last_edit_date": 1592644375, "question_id": 48035724, "link": "https://stackoverflow.com/questions/48035724/xargo-build-cannot-find-library", "title": "`xargo build` cannot find library", "body": "<p>So I'm following <a href=\"https://os.phil-opp.com/set-up-rust/\" rel=\"nofollow noreferrer\">this tutorial</a> on how to create a VERY BASIC Operating System using the Rust programming language. (I intend on buying an actual book on the subject, but I'm using this for now).</p>\n<p>Here are some files we created just to clarify things a little:</p>\n<blockquote>\n<p>Cargo.toml</p>\n<pre><code>[package]\nname = &quot;blog_os&quot;\nversion = &quot;0.1.0&quot;\nauthors = [&quot;Philipp Oppermann &lt;dev@phil-opp.com&gt;&quot;]   # Here I used my own details\n\n[lib]\ncrate-type = [&quot;staticlib&quot;]\n</code></pre>\n<p>src/lib.rs</p>\n<pre><code>#![feature(lang_items)]\n#![no_std]\n\n#[no_mangle]\npub extern fn rust_main() {}\n\n#[lang = &quot;eh_personality&quot;] extern fn eh_personality() {}\n#[lang = &quot;panic_fmt&quot;] #[no_mangle] pub extern fn panic_fmt() -&gt; ! {loop{}}\n</code></pre>\n<p>x86_64-blog_os.json</p>\n<pre><code>{\n  &quot;llvm-target&quot;: &quot;x86_64-unknown-none&quot;,\n  &quot;data-layout&quot;: &quot;e-m:e-i64:64-f80:128-n8:16:32:64-S128&quot;,\n  &quot;linker-flavor&quot;: &quot;gcc&quot;,\n  &quot;target-endian&quot;: &quot;little&quot;,\n  &quot;target-pointer-width&quot;: &quot;64&quot;,\n  &quot;target-c-int-width&quot;: &quot;32&quot;,\n  &quot;arch&quot;: &quot;x86_64&quot;,\n  &quot;os&quot;: &quot;none&quot;,\n  &quot;disable-redzone&quot;: true,\n  &quot;features&quot;: &quot;-mmx,-sse,+soft-float&quot;\n}\n</code></pre>\n</blockquote>\n<p>If you scroll down to the <strong>Compiling</strong> section in the tutorial, the author shows us how to install <code>xargo</code> and how to use it to <code>build</code>.</p>\n<p>We're then asked to run:</p>\n<pre><code>&gt; xargo build --target=x86_64-blog_os\n</code></pre>\n<p>But when I do, I get the following error message:</p>\n<pre><code>error: failed to parse manifest at '/home/max/TesterOS/src/Cargo.toml'\n\nCaused by:\n  can't find library 'blog_os', rename file to 'src/lib.rs' or specify lib.path\n</code></pre>\n<p>Is the issue connected to where I saved my files? Because I followed the tutorial down to the letter, but the author wasn't specific in where everything should be saved.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2028, "user_id": 394331, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/30FMc.jpg?s=128&g=1", "display_name": "peterdn", "link": "https://stackoverflow.com/users/394331/peterdn"}, "edited": false, "score": 0, "creation_date": 1514651827, "post_id": 48035479, "comment_id": 83041608, "body": "I believe this is part of the type coercion (specifically auto-referencing) <a href=\"https://doc.rust-lang.org/beta/nomicon/dot-operator.html\" rel=\"nofollow noreferrer\">behaviour of the dot operator</a>. A more detailed explanation is given in <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules/28552082#28552082\">this answer</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "edited": false, "score": 0, "creation_date": 1514652051, "post_id": 48035850, "comment_id": 83041673, "body": "Thanks for the beautiful answer."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1514651876, "creation_date": 1514651876, "answer_id": 48035850, "question_id": 48035479, "link": "https://stackoverflow.com/questions/48035479/references-in-rust/48035850#48035850", "title": "References in Rust", "body": "<p>Short: the language works like that because it's a lot more convenient.</p>\n\n<p>Long (<a href=\"https://doc.rust-lang.org/book/second-edition/ch05-03-method-syntax.html#wheres-the---operator\" rel=\"nofollow noreferrer\">extract from the book</a>, <strong>emphasis</strong> is mine):</p>\n\n<blockquote>\n  <h3>Where\u2019s the <code>-&gt;</code> Operator?</h3>\n  \n  <p>In languages like C++, two different operators are used for calling methods:\n  you use <code>.</code> if you\u2019re calling a method on the object directly and <code>-&gt;</code> if\n  you\u2019re calling the method on a pointer to the object and need to dereference\n  the pointer first. In other words, if <code>object</code> is a pointer,\n  <code>object-&gt;something()</code> is similar to <code>(*object).something()</code>.</p>\n  \n  <p>Rust doesn\u2019t have an equivalent to the <code>-&gt;</code> operator; instead, Rust has a\n  feature called <em>automatic referencing and dereferencing</em>. Calling methods is\n  one of the few places in Rust that has this behavior.</p>\n  \n  <p>Here\u2019s how it works: when you call a method with <code>object.something()</code>, <strong>Rust\n  automatically adds in <code>&amp;</code>, <code>&amp;mut</code>, or <code>*</code> so <code>object</code> matches the signature of\n  the method.</strong> In other words, the following are the same:</p>\n\n<pre><code>p1.distance(&amp;p2);\n(&amp;p1).distance(&amp;p2);\n</code></pre>\n  \n  <p>The first one looks much cleaner. This automatic referencing behavior works\n  because methods have a clear receiver\u2014the type of <code>self</code>. Given the receiver\n  and name of a method, Rust can figure out definitively whether the method is\n  reading (<code>&amp;self</code>), mutating (<code>&amp;mut self</code>), or consuming (<code>self</code>). The fact that\n  Rust makes borrowing implicit for method receivers is a big part of making\n  ownership ergonomic in practice.</p>\n</blockquote>\n"}], "owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 48035850, "answer_count": 1, "score": 2, "last_activity_date": 1514651876, "creation_date": 1514649470, "question_id": 48035479, "link": "https://stackoverflow.com/questions/48035479/references-in-rust", "title": "References in Rust", "body": "<p>I try to understand the borrow mechanism and references in Rust, and for this reason I created the following small example:</p>\n\n<pre><code>extern crate core;\n\nuse core::fmt::Debug;\n\n#[derive(Copy, Clone)]\npub struct Element(pub (crate) [u8; 5]);\n\nimpl Debug for Element {\n    fn fmt(&amp;self, f: &amp;mut ::core::fmt::Formatter) -&gt; ::core::fmt::Result {\n        write!(f, \"Element({:?})\", &amp;self.0[..])\n    }\n}\n\nimpl Element {\n    fn one() -&gt; Element {\n        Element([1, 1, 1, 1, 1])\n    }\n    fn double(&amp;self) -&gt; Element {\n        let mut result = *self;\n        for i in 0..5 { result.0[i] = 2*result.0[i]; }\n        result\n    }\n    fn mut_double(&amp;mut self) -&gt; Element {\n      for i in 0..5 { self.0[i] = 2*self.0[i]; }\n      *self\n    }\n}\n\nfn main() {\n  let mut a = Element::one();\n  println!(\"a = {:?}\", a); // a = Element([1, 1, 1, 1, 1])\n  a = a.double();\n  println!(\"a = {:?}\", a); // a = Element([2, 2, 2, 2, 2])\n  a = (&amp;a).double();\n  println!(\"a = {:?}\", a); // a = Element([4, 4, 4, 4, 4])\n  a = a.mut_double();\n  println!(\"a = {:?}\", a); // a = Element([8, 8, 8, 8, 8])\n  a = (&amp;mut a).mut_double();\n  println!(\"a = {:?}\", a); // a = Element([16, 16, 16, 16, 16])\n}\n</code></pre>\n\n<p>So, the above code works, but my confusion comes when calling the <code>double</code> method. As you can see it is defined as <code>fn double(&amp;self) -&gt; Element</code>, so it basically takes an immutable reference. Now in the main, I create a new <code>Element</code> variable called <code>a</code>, and then call <code>double</code> method on it twice. First time I just do <code>a.double()</code>, second time <code>(&amp;a).double()</code>. Both of them seem to work correctly, but I do not understand why the first call <code>a.double()</code> is a valid and compiler doesn't complain about it. Since <code>a</code> is of type <code>Element</code>, not of type <code>&amp;Element</code>, and clearly the <code>double</code> method asks for <code>&amp;Element</code>, so about a reference. Same thing also happens with the <code>mut_double</code> method. Why do I not have to specify <code>(&amp;a)</code> or <code>(&amp;mut a)</code> when calling the <code>double</code> and <code>mut_double</code> methods, respectively? What is happening under the hood with Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1514643125, "post_id": 48034486, "comment_id": 83039324, "body": "If it&#39;s not UTF-8, which encoding is your program expecting?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1514643553, "post_id": 48034486, "comment_id": 83039458, "body": "@E_net4 one byte encoding - several windows os based, like windows-1253"}], "answers": [{"comments": [{"owner": {"reputation": 349, "user_id": 6923661, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/prVyE.jpg?s=128&g=1", "display_name": "max", "link": "https://stackoverflow.com/users/6923661/max"}, "edited": false, "score": 0, "creation_date": 1596349142, "post_id": 48034946, "comment_id": 111779791, "body": "This comment doesn&#39;t address the exact question, but others may find <a href=\"https://crates.io/crates/encoding_rs_io\" rel=\"nofollow noreferrer\">crates.io/crates/encoding_rs_io</a> crate very helpful in reading non-UTF-8 files. It doesn&#39;t have an option to use BufReader, though."}, {"owner": {"reputation": 445, "user_id": 6793094, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jLOVE.png?s=128&g=1", "display_name": "Johann150", "link": "https://stackoverflow.com/users/6793094/johann150"}, "edited": false, "score": 0, "creation_date": 1615065064, "post_id": 48034946, "comment_id": 117578226, "body": "How would CR LF be handled correctly with this?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 445, "user_id": 6793094, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jLOVE.png?s=128&g=1", "display_name": "Johann150", "link": "https://stackoverflow.com/users/6793094/johann150"}, "edited": false, "score": 0, "creation_date": 1615117967, "post_id": 48034946, "comment_id": 117587380, "body": "@Johann150: The key point is that whether LF or CR LF is the end of the line, LF is always the last byte. So you can just pull in the whole line until LF (inclusive), then trim LF, then trim CR."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1514644884, "creation_date": 1514644884, "answer_id": 48034946, "question_id": 48034486, "link": "https://stackoverflow.com/questions/48034486/read-filenot-utf-8-line-by-line/48034946#48034946", "title": "read file(not utf-8) line by line?", "body": "<p>You do not have to re-implement <code>BufReader</code> itself, it provides exactly the method you need for your usecase <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_until\" rel=\"nofollow noreferrer\"><code>read_until</code></a>:</p>\n\n<pre><code>fn read_until(&amp;mut self, byte: u8, buf: &amp;mut Vec&lt;u8&gt;) -&gt; Result&lt;usize&gt;\n</code></pre>\n\n<p>You supply your own <code>Vec&lt;u8&gt;</code> and the content of the file will be appended until <code>byte</code> is encountered (0x0A being LF).</p>\n\n<p>There are several potential gotchas:</p>\n\n<ul>\n<li>the buffer may end not only with a LF byte, but with a CR LF sequence,</li>\n<li>it is up to you to clear <code>buf</code> between subsequent calls.</li>\n</ul>\n\n<p>A simple <code>while let Ok(_) = reader.read_until(0x0A as u8, buffer)</code> should let you read your file easily enough.</p>\n\n<p>You may consider implement a <code>std::io::Lines</code> equivalent which converts from the encoding to UTF-8 to provide a nice API, though it will have a performance cost.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1498, "favorite_count": 1, "accepted_answer_id": 48034946, "answer_count": 1, "score": 3, "last_activity_date": 1514644884, "creation_date": 1514641400, "question_id": 48034486, "link": "https://stackoverflow.com/questions/48034486/read-filenot-utf-8-line-by-line", "title": "read file(not utf-8) line by line?", "body": "<p>Is it possible to read file line by line, if it is not in utf-8 encoding with <code>std::io::File</code> and <code>std::io::BufReader</code>?</p>\n\n<p>I look at <code>std::io::Lines</code> and it return <code>Result&lt;String&gt;</code>, so\nI worry, have I implement my own <code>BufReader</code> that do the same, but return <code>Vec&lt;u8&gt;</code> instead, or I can reuse <code>std::io::BufReader</code> in some way?</p>\n"}, {"tags": ["rust", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 5, "last_activity_date": 1556106760, "last_edit_date": 1556106760, "creation_date": 1514642625, "answer_id": 48034647, "question_id": 48034119, "link": "https://stackoverflow.com/questions/48034119/how-can-i-pattern-match-against-an-optionstring/48034647#48034647", "title": "How can I pattern match against an Option&lt;String&gt;?", "body": "<p><a href=\"https://play.rust-lang.org/?gist=7a1d609ec43797e3fe7591feb5f8c0f9&amp;version=stable\" rel=\"nofollow noreferrer\">Look at this</a>.</p>\n\n<p>You cannot match on <code>std::String</code>, as you've found, only on <code>&amp;str</code>. Nested pattern matches work, so if you can match on <code>&amp;str</code>, you can match on <code>Option&lt;&amp;str&gt;</code>, but still not on <code>Option&lt;String&gt;</code>.</p>\n\n<p>In the working example, you turned the <code>std::String</code> into a <code>&amp;str</code> by doing <code>&amp;a[..]</code>. If you want to match on a <code>Option&lt;String&gt;</code>, you have to do the same thing.</p>\n\n<p>One way is to use nested matches:</p>\n\n<pre><code>match a {\n    Some(ref s) =&gt; match &amp;s[..] {\n        \"hello\" =&gt; /* ... */,\n        _ =&gt; /* ... */,\n    },\n    _ =&gt; /* ... */,\n}\n</code></pre>\n\n<p>But then you have to duplicate the \"otherwise\" code if it's the same, and it's generally not as nice.</p>\n\n<p>Instead, you can turn the <code>Option&lt;String&gt;</code> into an <code>Option&lt;&amp;str&gt;</code> and match on this, using the <code>map</code> function. However, <code>map</code> consumes the value it is called on, moving it into the mapping function. This is a problem because you want to reference the string, and you can't do that if you have moved it into the mapping function. You first need to turn the <code>Option&lt;String&gt;</code> into a <code>Option&lt;&amp;String&gt;</code> and map on that.</p>\n\n<p>Thus you end up with <code>a.as_ref().map(|s| /* s is type &amp;String */ &amp;s[..])</code>. You can then match on that.</p>\n\n<pre><code>match os.as_ref().map(|s| &amp;s[..]) {\n    Some(\"hello\") =&gt; println!(\"It's 'hello'\"),\n    // Leave out this branch if you want to treat other strings and None the same.\n    Some(_) =&gt; println!(\"It's some other string\"),\n    _ =&gt; println!(\"It's nothing\"),\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "edited": false, "score": 0, "creation_date": 1514644398, "post_id": 48034667, "comment_id": 83039686, "body": "This is good -- I prefer 1 because it&#39;s less verbose as I want to match more than one string. But, I find it confusing. Why can we create an iterator over a single value, on <code>Option</code>? And why can we match a single value on the return of <code>map</code> ? Should this not be a <code>Iterator</code> type?"}, {"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "reply_to_user": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "edited": false, "score": 2, "creation_date": 1514644749, "post_id": 48034667, "comment_id": 83039774, "body": "Here <code>.map()</code> is not an iterator at all. It&#39;s a helper method on <code>Option</code> that allows you to change it if it&#39;s <code>Some</code> and do nothing if it&#39;s <code>None</code>."}, {"owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "edited": false, "score": 0, "creation_date": 1514645608, "post_id": 48034667, "comment_id": 83039980, "body": "Ah, excuse my ignorance. Totally misunderstood the rust-doc for Option. Yes, you are right -- &quot;map&quot; == map one option to another, just with the same name as a collection."}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 21, "last_activity_date": 1607291333, "last_edit_date": 1607291333, "creation_date": 1514642812, "answer_id": 48034667, "question_id": 48034119, "link": "https://stackoverflow.com/questions/48034119/how-can-i-pattern-match-against-an-optionstring/48034667#48034667", "title": "How can I pattern match against an Option&lt;String&gt;?", "body": "<p>It's a known limitation of Rust's patterns.</p>\n<p>Method calls (including internal methods for operators like <code>==</code>) automatically call <code>.deref()</code> as needed, so <code>String</code> gets automagically turned into <code>&amp;str</code> for comparisons with literals.</p>\n<p>On the other hand, the patterns are quite literal in their comparisons, and find that <code>String</code> and <code>&amp;str</code> are different.</p>\n<p>There are two solutions:</p>\n<ol>\n<li><p>Change <code>Option&lt;String&gt;</code> to <code>Option&lt;&amp;str&gt;</code> before matching on it: <code>Some(a).as_ref().map(String::as_str)</code>. The <code>as_ref()</code> makes <code>Option&lt;&amp;String&gt;</code> (preventing move), and <code>as_str()</code> then unambiguously references it as a <code>&amp;str</code>.</p>\n</li>\n<li><p>Use match guard: <code>match Some(a) { Some(ref s) if s == &quot;hello&quot; =&gt; \u2026 }</code>. <code>Some(ref s)</code> matches any <code>String</code>, and captures it as <code>s: &amp;String</code>, which you can then compare in the <code>if</code> guard which does the usual flexible coercions to make it work.</p>\n</li>\n</ol>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31233938/155423\">Converting from Option&lt;String&gt; to Option&lt;&amp;str&gt;</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 397, "user_id": 3430881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Kaxz9.jpg?s=128&g=1", "display_name": "V Bota", "link": "https://stackoverflow.com/users/3430881/v-bota"}, "is_accepted": false, "score": 1, "last_activity_date": 1556106898, "last_edit_date": 1556106898, "creation_date": 1526154624, "answer_id": 50310141, "question_id": 48034119, "link": "https://stackoverflow.com/questions/48034119/how-can-i-pattern-match-against-an-optionstring/50310141#50310141", "title": "How can I pattern match against an Option&lt;String&gt;?", "body": "<p>In some cases, you can use <code>unwrap_or</code> to replace <code>Option::None</code> with a predefined <code>&amp;str</code> you don't want to handle in any special way.</p>\n\n<p>I used this to handle user inputs:</p>\n\n<pre><code>let args: Vec&lt;String&gt; = env::args().collect();\n\nmatch args.get(1).unwrap_or(&amp;format!(\"_\")).as_str() {\n    \"new\" =&gt; {\n        print!(\"new\");\n    }\n    _ =&gt; {\n        print!(\"unknown string\");\n    }\n};\n</code></pre>\n\n<p>Or to match your code:</p>\n\n<pre><code>let option = Some(\"hello\");\n\nmatch option.unwrap_or(&amp;format!(\"unhandled string\").as_str()) {\n    \"hello\" =&gt; {\n        println!(\"hello\");\n    }\n    _ =&gt; {\n        println!(\"unknown string\");\n    }\n};\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 852, "user_id": 13854774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f9566e304de531d0d35d6b68c623d9b?s=128&d=identicon&r=PG&f=1", "display_name": "Deadbeef", "link": "https://stackoverflow.com/users/13854774/deadbeef"}, "is_accepted": false, "score": 7, "last_activity_date": 1618754919, "last_edit_date": 1618754919, "creation_date": 1608723949, "answer_id": 65423781, "question_id": 48034119, "link": "https://stackoverflow.com/questions/48034119/how-can-i-pattern-match-against-an-optionstring/65423781#65423781", "title": "How can I pattern match against an Option&lt;String&gt;?", "body": "<p>As of Rust 1.40, you can now call <code>as_deref</code> on <code>Option&lt;String&gt;</code> to convert it to <code>Option&lt;&amp;str&gt;</code> and then match on it:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>match args.nth(1).as_deref() {\n    Some(&quot;help&quot;) =&gt; {}\n    Some(s) =&gt; {}\n    None =&gt; {}\n}\n</code></pre>\n<p>I found this because it is <a href=\"https://rust-lang.github.io/rust-clippy/master/index.html#option_as_ref_deref\" rel=\"nofollow noreferrer\">one of the clippy lints</a>.</p>\n"}], "owner": {"reputation": 2559, "user_id": 1761795, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/5c38eefbb62d65c1d79682ad03cdfeed?s=128&d=identicon&r=PG", "display_name": "Phil Lord", "link": "https://stackoverflow.com/users/1761795/phil-lord"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10122, "favorite_count": 6, "accepted_answer_id": 48034667, "answer_count": 4, "score": 32, "last_activity_date": 1618754919, "creation_date": 1514638444, "last_edit_date": 1556107293, "question_id": 48034119, "link": "https://stackoverflow.com/questions/48034119/how-can-i-pattern-match-against-an-optionstring", "title": "How can I pattern match against an Option&lt;String&gt;?", "body": "<p>I can straight-forwardly match a <code>String</code> in Rust:</p>\n\n<pre><code>let a = \"hello\".to_string();\n\nmatch &amp;a[..] {\n    \"hello\" =&gt; {\n        println!(\"Matches hello\");\n    }\n    _ =&gt; panic!(),\n}\n</code></pre>\n\n<p>If I have an option type, it fails:</p>\n\n<pre><code>match Some(a) {\n    Some(\"hello\") =&gt; {\n        println!(\"Matches some hello\");\n    }\n    _ =&gt; panic!(),\n}\n</code></pre>\n\n<p>because the types don't match:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:5:14\n  |\n5 |         Some(\"hello\") =&gt; {\n  |              ^^^^^^^ expected struct `std::string::String`, found reference\n  |\n  = note: expected type `std::string::String`\n             found type `&amp;'static str`\n</code></pre>\n\n<p>I can't do the <code>[..]</code> trick because we have an <code>Option</code>. The best that\nI have come up with so far is:</p>\n\n<pre><code>match Some(a) {\n    Some(b) =&gt; match (&amp;b[..]) {\n        \"hello\" =&gt; {\n            println!(\"Matches some, some hello\");\n        }\n        _ =&gt; panic!(),\n    },\n    None =&gt; panic!(),\n}\n</code></pre>\n\n<p>which works but is terrible for its verbosity.</p>\n\n<p>In this case, my code is just an example. I do not control the creation of either the <code>String</code> or the <code>Some(String)</code> \u2014 so I can't change this type in reality as I could do in my example.</p>\n\n<p>Any other options?</p>\n"}, {"tags": ["macros", "rust", "documentation", "rust-macros", "rustdoc"], "comments": [{"owner": {"reputation": 3, "user_id": 9155820, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/k0geX.png?s=128&g=1", "display_name": "techhazard", "link": "https://stackoverflow.com/users/9155820/techhazard"}, "edited": false, "score": 0, "creation_date": 1514637179, "post_id": 48033963, "comment_id": 83037897, "body": "I&#39;ve also asked this at reddit on /r/rust : <a href=\"https://www.reddit.com/r/rust/comments/7n1c30/question_how_do_i_add_examples_to_macro/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/7n1c30/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 1, "last_activity_date": 1514637609, "creation_date": 1514637609, "answer_id": 48034031, "question_id": 48033963, "link": "https://stackoverflow.com/questions/48033963/how-do-i-add-examples-to-macro-documentation-in-rust/48034031#48034031", "title": "How do I add examples to macro documentation in rust?", "body": "<p>It is possible, though a bit convoluted; you need to do it in the following way:</p>\n\n<pre><code>/// # Example\n/// ```\n/// # #[macro_use] extern crate crate_name;\n/// # fn main() {\n/// use crate_name::module::object;\n///\n/// &lt;example code&gt;\n/// # }\n/// ```\n#[macro_export]\nmacro_rules! some_macro {\n    &lt;macro code&gt;\n}\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 9155820, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/k0geX.png?s=128&g=1", "display_name": "techhazard", "link": "https://stackoverflow.com/users/9155820/techhazard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 359, "favorite_count": 0, "accepted_answer_id": 48034031, "answer_count": 1, "score": 0, "last_activity_date": 1514637609, "creation_date": 1514636984, "question_id": 48033963, "link": "https://stackoverflow.com/questions/48033963/how-do-i-add-examples-to-macro-documentation-in-rust", "title": "How do I add examples to macro documentation in rust?", "body": "<p>When writing a macro, I would like to document it proprerly, and this includes examples.<br>\nBut when I try to do that in the same way as a regular function I get:</p>\n\n<pre><code>[E0468]: an `extern crate` loading macros must be at the crate root \n</code></pre>\n\n<p>I run <code>cargo test</code> on nightly to test the following:</p>\n\n<pre><code>// src/lib.rs in crate with name advent9\n\n/// this macro essentialy appends .as_bytes()\n/// `b!(\"bla\")` -&gt; `\"bla\".as_bytes()`\n///\n/// # Examples\n/// ```\n/// #[macro_use]\n/// extern crate advent9;\n///\n/// let bytes : &amp;[u8] = b!(\"this is a bytestring\");\n///\n/// println!(\"{:?}\", bytes);\n/// // prints:\n/// // [116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 98, 121, 116, 101, 115, 116, 114, 105, 110, 103]\n/// ```\n// I don't need this exported, but perhaps the example does?\n#[macro_export] \nmacro_rules! b {\n    ($string:expr) =&gt; {\n        $string.as_bytes()\n    }\n</code></pre>\n\n<p>My understanding of the doctests is that each gets wrapped in their own <code>main</code> function. Like this:</p>\n\n<pre><code>fn main() {\n    #[macro_use]\n    extern crate advent9;\n\n    let bytes : &amp;[u8] = b!(\"this is a bytestring\");\n\n    println!(\"{:?}\", bytes);\n    // prints:\n    // [116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 98, 121, 116, 101, 115, 116, 114, 105, 110, 103]\n}\n</code></pre>\n\n<p>If this is correct, it would explain the error. </p>\n\n<p>Is there any way to actually add examples to macros?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1514630585, "post_id": 48032722, "comment_id": 83036357, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/34304341/can-i-destructure-a-tuple-without-binding-the-result-to-a-new-variable-in-a-let\">Can I destructure a tuple without binding the result to a new variable in a let/match/for statement?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 1, "last_activity_date": 1514629195, "last_edit_date": 1514629195, "creation_date": 1514627758, "answer_id": 48032811, "question_id": 48032722, "link": "https://stackoverflow.com/questions/48032722/tuples-not-allowed-as-lvalue-in-rust/48032811#48032811", "title": "Tuples not allowed as lvalue in Rust?", "body": "<p>You can create a macro</p>\n\n<pre><code>macro_rules! assign{\n    {($v1:ident, $v2:ident) = $e:expr} =&gt;\n    {\n        let (v1, v2) = $e;\n        $v1 = v1;\n        $v2 = v2;\n    };\n    {($v1:ident, $v2:ident, $v3:ident) = $e:expr} =&gt;\n    {\n        let (v1, v2, v3) = $e;\n        $v1 = v1;\n        $v2 = v2;\n        $v3 = v3;\n    }; // and so on\n}\n</code></pre>\n\n<p>and use it like this</p>\n\n<pre><code>assign!{(val1, val2) = test()};\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=429c882261fd1c3a247a7c722dd9f57c&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 48032811, "answer_count": 1, "score": 2, "last_activity_date": 1514629195, "creation_date": 1514627013, "question_id": 48032722, "link": "https://stackoverflow.com/questions/48032722/tuples-not-allowed-as-lvalue-in-rust", "title": "Tuples not allowed as lvalue in Rust?", "body": "<p>I have a few methods in Rust that return two elements, and it really makes sense for me in those scenarios to return two elements. Though, when actually calling those methods I noticed that Rust does not allow using tuples as lvalue, so I cannot reassign to them. Assuming <code>test()</code> is a method that returns two values, I end up writing a lot of code that looks like this:</p>\n\n<pre><code>let (mut val1, mut val2) = test();\n\nfor i in 0..100 {\n   // partially removed for brevity;\n   let (_val1, _val2) = test();\n   val1 = _val1;\n   val2 = _val2;\n}\n\nlet (_val1, _val2) = test();\nval1 = _val1;\nval2 = _val2;\n</code></pre>\n\n<p>Usually the two values that are returned from my method are some structures, and in turn they have some methods too, so I want to call methods in those returned structs. Anyway, I use the above pattern a lot, and it becomes cumbersome very fast. Are there any better approaches to do what I want in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "edited": false, "score": 0, "creation_date": 1514605293, "post_id": 48030394, "comment_id": 83031667, "body": "How are you running this?"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 3, "last_activity_date": 1514643990, "last_edit_date": 1514643990, "creation_date": 1514643946, "answer_id": 48034826, "question_id": 48030394, "link": "https://stackoverflow.com/questions/48030394/unable-to-run-a-simple-example-use-of-unstable-library-feature-rustc-privat/48034826#48034826", "title": "Unable to run a simple example -- &quot;use of unstable library feature &#39;rustc_private&#39;: .....&quot;", "body": "<p>You're missing <code>log = \"version\"</code> entry in <code>Cargo.toml</code> <code>[dependencies]</code>.</p>\n\n<p>Because of that Cargo doesn't give Rust a <code>log</code> crate to load with <code>extern crate log</code>, and Rust keeps looking for it deeper, finding some internal one.</p>\n"}], "owner": {"reputation": 51, "user_id": 8884082, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/3e16431148d13e3fa0b3b81b1f80f217?s=128&d=identicon&r=PG&f=1", "display_name": "Raj", "link": "https://stackoverflow.com/users/8884082/raj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1705, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1514643990, "creation_date": 1514600784, "last_edit_date": 1514614577, "question_id": 48030394, "link": "https://stackoverflow.com/questions/48030394/unable-to-run-a-simple-example-use-of-unstable-library-feature-rustc-privat", "title": "Unable to run a simple example -- &quot;use of unstable library feature &#39;rustc_private&#39;: .....&quot;", "body": "<p>I'm trying to use simplelog.rs in my Rust application. The hello world example</p>\n\n<pre><code>#[macro_use]\nextern crate log;\nextern crate simplelog;\n\n// ..........\nCombinedLogger::init(vec![\n    TermLogger::new(LogLevelFilter::Warn, simplelog::Config::default()).unwrap(),\n    WriteLogger::new(LogLevelFilter::Info, simplelog::Config::default(), File::create(\"log.log\").unwrap())]).unwrap();\n</code></pre>\n\n<p>results into this:</p>\n\n<pre><code>error: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead? (see issue #27812)\n --&gt; src/main.rs:9:1\n  |\n9 | extern crate log;\n  | ^^^^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>How to fix it?</p>\n\n<p>From the discussion of <a href=\"https://github.com/rust-lang/rust/issues/27812\" rel=\"nofollow noreferrer\">#27812</a> it's still unclear what to do about it.</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"tags": [], "owner": {"reputation": 46, "user_id": 1541501, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c6b68cf34b74954bdc49436c74c1930?s=128&d=identicon&r=PG&f=1", "display_name": "dmitryvm", "link": "https://stackoverflow.com/users/1541501/dmitryvm"}, "is_accepted": false, "score": 2, "last_activity_date": 1514620528, "creation_date": 1514620528, "answer_id": 48032072, "question_id": 48029811, "link": "https://stackoverflow.com/questions/48029811/how-to-convert-code-that-uses-the-read-trait-to-use-the-iterator-trait-instead/48032072#48032072", "title": "How to convert code that uses the Read trait to use the Iterator trait instead?", "body": "<p>Here is the explanation of why you can't <a href=\"https://stackoverflow.com/questions/26757355/how-do-i-collect-into-an-array\">collect into an array</a></p>\n\n<p>If you still want to use an iterator you can change return type to Vec\nand call \n<code>r.take(n).collect();</code></p>\n\n<p>This, however, will be a little bit slower.</p>\n"}, {"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 3, "last_activity_date": 1514626363, "creation_date": 1514626363, "answer_id": 48032660, "question_id": 48029811, "link": "https://stackoverflow.com/questions/48029811/how-to-convert-code-that-uses-the-read-trait-to-use-the-iterator-trait-instead/48032660#48032660", "title": "How to convert code that uses the Read trait to use the Iterator trait instead?", "body": "<p>You can make your own trait for that</p>\n\n<pre><code>use std::io::{Error, ErrorKind, Result};\n\ntrait ReadExact {\n    fn read_exact(&amp;mut self, buf: &amp;mut [u8]) -&gt; Result&lt;()&gt;;\n}\n\nimpl&lt;T&gt; ReadExact for T\nwhere\n    T: Iterator&lt;Item = u8&gt;,\n{\n    fn read_exact(&amp;mut self, buf: &amp;mut [u8]) -&gt; Result&lt;()&gt; {\n        for p in buf {\n            if let Some(b) = self.next() {\n                *p = b;\n            } else {\n                return Err(Error::new(ErrorKind::UnexpectedEof, \"Iterator exhausted\"));\n            }\n        }\n        Ok(())\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1599057980a01abea068adf6e92a00ca&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 1, "last_activity_date": 1514655192, "last_edit_date": 1514655192, "creation_date": 1514644726, "answer_id": 48034917, "question_id": 48029811, "link": "https://stackoverflow.com/questions/48029811/how-to-convert-code-that-uses-the-read-trait-to-use-the-iterator-trait-instead/48034917#48034917", "title": "How to convert code that uses the Read trait to use the Iterator trait instead?", "body": "<p>You can write <em>almost</em> the same thing with iterators. The problem you'll run into is that arrays are difficult to work with, because they don't (as of December 2017) implement <code>FromIterator</code>. As user1541501 <a href=\"https://stackoverflow.com/a/48032072/3650362\">suggested</a>, the simplest solution is to <code>collect()</code> into a <code>Vec</code> instead:</p>\n\n<pre><code>fn main() {\n    let v1 = vec![1, 2, 3, 4, 5];\n    let mut c1 = v1.into_iter();\n\n    println!(\"{:?}\", read_one(&amp;mut c1)); // 1\n    println!(\"{:?}\", read_three(&amp;mut c1)); // 2, 3, 4\n    println!(\"{:?}\", read_one(&amp;mut c1)); // 5\n    println!(\"{:?}\", read_one(&amp;mut c1)); // eof\n}\n\nfn read_one&lt;I: Iterator&lt;Item = u8&gt;&gt;(i: &amp;mut I) -&gt; Option&lt;u8&gt; {\n    i.next()\n}\n\nfn read_three&lt;I: Iterator&lt;Item = u8&gt;&gt;(i: &amp;mut I) -&gt; Result&lt;Vec&lt;u8&gt;, Vec&lt;u8&gt;&gt; {\n    let buf: Vec&lt;u8&gt; = i.take(3).collect();\n    if buf.len() == 3 {\n        Ok(buf)\n    } else {\n        Err(buf)\n    }\n}\n</code></pre>\n\n<p>Arrays also don't implement <code>IntoIterator</code>, so I turned <code>v1</code> into a <code>Vec&lt;u8&gt;</code> to call <code>v1.into_iter()</code>. You could write <code>v1.iter().cloned()</code> instead.</p>\n\n<p>The other significant change I made was to make <code>read_one</code> return <code>Option</code> instead of <code>io::Result</code>, and make <code>read_three</code> return <code>Result&lt;Vec&lt;u8&gt;, Vec&lt;u8&gt;&gt;</code>. That's because iterators can only fail by running out of data. (If <code>read_three</code> fails, the <code>Err</code> variant contains the collected elements.)</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 48034917, "answer_count": 3, "score": 2, "last_activity_date": 1514655192, "creation_date": 1514593482, "question_id": 48029811, "link": "https://stackoverflow.com/questions/48029811/how-to-convert-code-that-uses-the-read-trait-to-use-the-iterator-trait-instead", "title": "How to convert code that uses the Read trait to use the Iterator trait instead?", "body": "<p>I have some code which parses files, very similar to the following:</p>\n\n<pre><code>use std::io::Cursor;\nuse std::io::Result;\nuse std::io::Read;\n\nfn main() {\n   let v1 = [1, 2, 3, 4, 5];\n   let mut c1 = Cursor::new(v1); // *\n\n    println!(\"{:?}\", read_one(&amp;mut c1)); // 1\n    println!(\"{:?}\", read_three(&amp;mut c1)); // 2, 3, 4     \n    println!(\"{:?}\", read_one(&amp;mut c1)); // 5\n    println!(\"{:?}\", read_one(&amp;mut c1)); // eof\n}\n\nfn read_one&lt;R: Read&gt;(r: &amp;mut R) -&gt; Result&lt;u8&gt; {\n  let mut buf = [0; 1];\n  r.read_exact(&amp;mut buf)?;\n  Ok(buf[0])\n}\n\nfn read_three&lt;R: Read&gt;(r: &amp;mut R) -&gt; Result&lt;[u8; 3]&gt; {\n  let mut buf = [0; 3];\n  r.read_exact(&amp;mut buf)?;\n  Ok(buf)\n}\n</code></pre>\n\n<p>Here, <code>read_one</code> and <code>read_three</code> take a <code>Read</code> trait, get some bytes off of it, and return the result. I can then read the bytes piece by piece. </p>\n\n<p>I'd like to convert this code to using an iterator instead. That is, have the <code>*</code> line be </p>\n\n<pre><code>let mut i1 = v1.iter();\n</code></pre>\n\n<p>Trying this, I ran into problems where I couldn't find functions to easily extract a number of items (analogous to <code>read_exact</code>) or otherwise partially process an iterator. It seems most of the iterator functions are designed to consume the content entirely. </p>\n\n<p>Is the iterator just a bad tool for this or am I using it wrong? If the latter, how do I convert this code to use iterators instead?</p>\n"}, {"tags": ["rust", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 1275, "user_id": 687467, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/SNsXy.jpg?s=128&g=1", "display_name": "yati sagade", "link": "https://stackoverflow.com/users/687467/yati-sagade"}, "is_accepted": false, "score": 1, "last_activity_date": 1514630195, "last_edit_date": 1514630195, "creation_date": 1514586615, "answer_id": 48029119, "question_id": 48028913, "link": "https://stackoverflow.com/questions/48028913/how-do-i-match-to-a-pattern-like-usize-u32/48029119#48029119", "title": "How do I match to a pattern like `&amp;(&amp;usize, &amp;u32)`?", "body": "<p>That works:</p>\n\n<pre><code>fn main() {\n  let primes: Vec&lt;usize&gt; = vec![2, 3, 5, 7];\n  let powers: Vec&lt;u32&gt; = vec![2, 2, 2, 2];\n\n  let ret = primes.iter().zip(powers.iter())\n            .filter_map(|(p, pow)| { // both are refs, so we need to deref\n                if *pow &gt; 0 {\n                    Some(*p)\n                } else {\n                    None\n                }\n            })\n            .collect::&lt;Vec&lt;usize&gt;&gt;();\n\n  println!(\"{:?}\", ret);\n}\n</code></pre>\n\n<p>Note that I also used <code>powers.iter()</code> which yields elements by reference. You could also use <code>cloned()</code> on both iterators and work with values.</p>\n"}, {"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 2, "last_activity_date": 1514632322, "creation_date": 1514632322, "answer_id": 48033360, "question_id": 48028913, "link": "https://stackoverflow.com/questions/48028913/how-do-i-match-to-a-pattern-like-usize-u32/48033360#48033360", "title": "How do I match to a pattern like `&amp;(&amp;usize, &amp;u32)`?", "body": "<pre><code>primes.iter().zip(powers)\n</code></pre>\n\n<p><code>iter()</code> iterates by reference, so you get <code>&amp;usize</code> elements for primes. OTOH <code>.zip()</code> calls <code>.into_iter()</code> which iterates owned values, so powers are <code>u32</code>, and these iterators combined iterate over <code>(&amp;usize, u32)</code>. Technically, there's nothing wrong with iterating over such mixed type, but the inconsistency may be confusing. You can use <code>.into_iter()</code> or <code>.iter().cloned()</code> on primes to avoid the reference, or call <code>.zip(powers.iter())</code> to get both as references.</p>\n\n<p>Second thing is that <code>.filter()</code> takes items by reference <code>&amp;(_,_)</code> (since it only \"looks\" at them), and <code>.map()</code> by owned value <code>(_,_)</code> (which allows it to change and return it). </p>\n\n<p>For small values like integers, you'd usually use these methods like this:</p>\n\n<pre><code>.filter(|&amp;item| \u2026)\n.map(|item| \u2026)\n</code></pre>\n\n<p>Note that in closures the syntax is <code>|pattern: type|</code>, so in the example above <code>&amp;item</code> is equivalent to:</p>\n\n<pre><code>.filter(|by_ref| {\n   let item = *by_ref;\n})\n</code></pre>\n"}], "owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 48033360, "answer_count": 2, "score": 1, "last_activity_date": 1514632322, "creation_date": 1514585014, "question_id": 48028913, "link": "https://stackoverflow.com/questions/48028913/how-do-i-match-to-a-pattern-like-usize-u32", "title": "How do I match to a pattern like `&amp;(&amp;usize, &amp;u32)`?", "body": "<p>Let's say I have vectors of primes and powers:</p>\n\n<pre><code>let mut primes: Vec&lt;usize&gt; = ...;\nlet mut powers: Vec&lt;u32&gt; = ...;\n</code></pre>\n\n<p>It is a fact that <code>primes.len() == powers.len()</code>. </p>\n\n<p>I'd like to return to the user a list of primes which have a corresponding power value of 0 (this code is missing proper refs and derefs):</p>\n\n<pre><code>primes.iter().zip(powers)\n    .filter(|(p, power)| power &gt; 0)\n    .map(|(p, power)| p)\n    .collect::&lt;Vec&lt;usize&gt;&gt;()\n</code></pre>\n\n<p>The compiler is complaining a lot, as you might imagine. In particular, the <code>filter</code> is receiving arguments of type <code>&amp;(&amp;usize, &amp;u32)</code>, but I am not correctly de-referencing in the pattern matching. I have tried various patterns the compiler suggests (e.g. <code>&amp;(&amp;p, &amp;power)</code>, which is the one that makes the most sense to me), but with no luck. How do I correctly perform the pattern matching so that I can do the <code>power &gt; 0</code> comparison without issue, and so that I can collect in the end a <code>Vec&lt;usize&gt;</code>?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 3282, "user_id": 3102, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/debc1608fc160fb51ed0b07c9ad7739c?s=128&d=identicon&r=PG", "display_name": "Johannes Hoff", "link": "https://stackoverflow.com/users/3102/johannes-hoff"}, "edited": false, "score": 2, "creation_date": 1514653446, "post_id": 48034911, "comment_id": 83042059, "body": "Thanks @Kornel. If anyone comes across this, for <code>lazy_static</code>, what I needed specifically was: <code>#![feature(macro_reexport)] #[macro_reexport(lazy_static, __lazy_static_internal, __lazy_static_create)] extern crate lazy_static;</code> Quite the mouthful! And of course now only compiles on nightly."}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 3, "last_activity_date": 1514644679, "creation_date": 1514644679, "answer_id": 48034911, "question_id": 48028231, "link": "https://stackoverflow.com/questions/48028231/using-another-macro-in-a-macro-rules-without-requiring-extern-crate-in-rust/48034911#48034911", "title": "Using another macro in a macro_rules without requiring `extern crate` in rust", "body": "<p>There is an unstable <a href=\"https://github.com/rust-lang/rust/issues/29638\" rel=\"nofollow noreferrer\"><code>macro_reexport</code></a> attribute.</p>\n\n<p>However, Rust is working on making macros (<a href=\"https://github.com/rust-lang/rust/issues/39412\" rel=\"nofollow noreferrer\">2.0</a>) behave like normal items that support <code>pub use</code>, so this attribute won't be stable and will become obsolete.</p>\n"}], "owner": {"reputation": 3282, "user_id": 3102, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/debc1608fc160fb51ed0b07c9ad7739c?s=128&d=identicon&r=PG", "display_name": "Johannes Hoff", "link": "https://stackoverflow.com/users/3102/johannes-hoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 416, "favorite_count": 0, "accepted_answer_id": 48034911, "answer_count": 1, "score": 3, "last_activity_date": 1514644679, "creation_date": 1514580223, "question_id": 48028231, "link": "https://stackoverflow.com/questions/48028231/using-another-macro-in-a-macro-rules-without-requiring-extern-crate-in-rust", "title": "Using another macro in a macro_rules without requiring `extern crate` in rust", "body": "<p>Is there a way to \"re-export\" <code>#[macro_use] extern crate</code> similar to <code>pub use</code> so that users of a macro using macros do not have to manually add these dependent <code>extern crate</code>s?</p>\n\n<p>The rest of the question is an example to illustrate.</p>\n\n<p>In <code>src/lib.rs</code>, note that the <code>id</code> macro is using the <code>lazy_static</code> macro:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! id {\n    () =&gt; {\n        lazy_static! {\n            static ref NUMBER : std::sync::atomic::AtomicUsize =\n                std::sync::atomic::AtomicUsize::new(0);\n        }\n        return NUMBER.fetch_add(1, std::sync::atomic::Ordering::SeqCst);\n    }\n}\n</code></pre>\n\n<p>In <code>examples/example.rs</code>, we need an <code>extern crate</code> line for each macro, even though we're just using the <code>id</code> macro directly:</p>\n\n<pre><code>#[macro_use]\nextern crate id_macro;\n#[macro_use]\nextern crate lazy_static;\n\nfn new_id() -&gt; usize {\n    id!();\n}\n\nfn main() {\n    println!(\"id {}\", new_id()); // prints \"id 0\"\n    println!(\"id {}\", new_id()); // prints \"id 1\"\n}\n</code></pre>\n\n<p>In the example, it would be great if the user of <code>id_macro</code> could use <code>id!</code> without knowing about <code>lazy_static</code>. Is there a way to \"re-export\" <code>extern crate</code> similar to <code>pub use</code> to make the following lines go away from the example?</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n</code></pre>\n"}, {"tags": ["reference", "rust", "lifetime", "ownership", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 0, "last_activity_date": 1514581097, "creation_date": 1514581097, "answer_id": 48028374, "question_id": 48028209, "link": "https://stackoverflow.com/questions/48028209/understanding-refs-in-rust-when-struct-and-its-member-has-different-lifetime/48028374#48028374", "title": "Understanding refs in rust when struct and it&#39;s member has different lifetime", "body": "<p><code>h : Human&lt;'static&gt;</code>, and <code>'static</code> references meet any output lifetime requirement.   </p>\n\n<p>Try writing some code where <code>h.i</code> references a variable with shorter lifetime than h.</p>\n\n<pre><code>fn main () {\n    let mut h = Human {i:&amp;1};\n    {\n        let x : i32 = 3;\n        h.i = &amp;x;\n    }\n    let r = (&amp;h).work(&amp;3);\n}\n\nerror[E0597]: `x` does not live long enough\n  --&gt; a.rs:21:5\n   |\n20 |         h.i = &amp;x;\n   |                - borrow occurs here\n21 |     }\n   |     ^ `x` dropped here while still borrowed\n22 |     let r = (&amp;h).work(&amp;3);\n23 | }\n   | - borrowed value needs to live until here\n</code></pre>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 64, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1514581097, "creation_date": 1514580129, "question_id": 48028209, "link": "https://stackoverflow.com/questions/48028209/understanding-refs-in-rust-when-struct-and-its-member-has-different-lifetime", "title": "Understanding refs in rust when struct and it&#39;s member has different lifetime", "body": "<p>I was playing around with the <code>lifetime</code> complexity in rust and I ended up writing the following code:</p>\n\n<pre><code>trait Boss&lt;'a, 'c&gt; {\n  fn work(&amp;self, &amp;'a i32) -&gt; &amp;'c i32;\n}\n\nstruct Human&lt;'c&gt; {\n  i:&amp;'c i32 \n}\n\nimpl&lt;'a, 'b, 'c&gt; Boss&lt;'a, 'c&gt;  for &amp;'b Human &lt;'c&gt; {\n  fn work(&amp;self, v:&amp;'a i32) -&gt; &amp;'c i32 {\n    &amp;self.i\n  }\n}\n\n\nfn main () {\n  let h = Human {i:&amp;1};\n}\n</code></pre>\n\n<p>This code compiles, but I am not sure why. As i understand it, the <code>&amp;Human</code> has lifetime of <code>'b</code>, whereas the reference member <code>i</code> of <code>struct Human</code> has <code>'c</code>. Why isn't the  compiler complaining that <code>'b</code> can outlive <code>'c</code> ?</p>\n"}, {"tags": ["rust", "traits", "associated-types"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1514627382, "post_id": 48027839, "comment_id": 83035694, "body": "You could make a wrapper type and a trait of your own that implements the interface you actually need without associated types. Boxing such a trait will work."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514934446, "post_id": 48027839, "comment_id": 83111838, "body": "Related: <a href=\"https://stackoverflow.com/q/28932450/155423\">How can I have a vector of objects that differ by their associated type?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1514934465, "post_id": 48027839, "comment_id": 83111849, "body": "@user4815162342 I think that&#39;s worthy of an answer."}], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1514933552, "post_id": 48066387, "comment_id": 83111555, "body": "I wonder if one could implement <code>result</code> as accepting <code>self: Box&lt;Self&gt;</code> as <a href=\"https://stackoverflow.com/a/46625787/1600898\">in this answer</a>. That way the <code>Option</code> would no longer be necessary, and compile-time prevention of calling <code>result</code> twice would be restored."}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 4, "last_activity_date": 1514934550, "last_edit_date": 1514934550, "creation_date": 1514919774, "answer_id": 48066387, "question_id": 48027839, "link": "https://stackoverflow.com/questions/48027839/how-to-box-a-trait-that-has-associated-types/48066387#48066387", "title": "How to Box a trait that has associated types?", "body": "<p>The message refers to <a href=\"https://doc.rust-lang.org/book/first-edition/trait-objects.html#object-safety\" rel=\"nofollow noreferrer\">object safety</a> (<a href=\"https://huonw.github.io/blog/2015/01/object-safety/\" rel=\"nofollow noreferrer\">longer article</a>). The <a href=\"https://docs.rs/digest/0.7.2/digest/trait.Digest.html\" rel=\"nofollow noreferrer\"><code>Digest</code> trait</a> has two incompatibilities:</p>\n\n<ol>\n<li>It <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html#trait-objects-with-associated-types\" rel=\"nofollow noreferrer\">uses associated types</a> (this can be worked around by explicitly setting all type parameters to values compatible for all <code>Digest</code> objects).</li>\n<li>It has a method (<code>fn result(self) -&gt; \u2026</code>) taking <code>self</code> by value. You won't be able to call it, which ruins usability of this trait.</li>\n</ol>\n\n<p>Once a trait object is created, information about its subtype-specific features such as memory layout or associated types is erased. All calls to the trait object's methods are done via a vtable pointer. This means they all must be compatible, and Rust can't allow you to call any methods that could vary in these aspects.</p>\n\n<p>A workaround is to create your custom wrapper trait/adapter that is object-compatible. I'm not sure if that's the best implementation, but it does work:</p>\n\n<pre><code>trait Digest {\n    type Assoc;\n    fn result(self);\n}\n\nstruct Sha;\n\nimpl Digest for Sha {\n    type Assoc = u8;\n    fn result(self) {}\n}\n\n///////////////////////////////////////////\n\ntrait MyWrapper {\n    fn result(&amp;mut self); // can't be self/Sized\n}\n\nimpl&lt;T: Digest&gt; MyWrapper for Option&lt;T&gt; {\n    fn result(&amp;mut self) {\n        // Option::take() gives owned from non-owned\n        self.take().unwrap().result() \n    }\n}\n\nfn main() {\n    let mut digest: Box&lt;MyWrapper&gt; = Box::new(Some(Sha));\n    digest.result();\n}\n</code></pre>\n"}], "owner": {"reputation": 2077, "user_id": 1615475, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/QacyZ.jpg?s=128&g=1", "display_name": "WestleyArgentum", "link": "https://stackoverflow.com/users/1615475/westleyargentum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1390, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1514934550, "creation_date": 1514577625, "last_edit_date": 1514934228, "question_id": 48027839, "link": "https://stackoverflow.com/questions/48027839/how-to-box-a-trait-that-has-associated-types", "title": "How to Box a trait that has associated types?", "body": "<p>I'm very new to Rust so I may have terminology confused.</p>\n\n<p>I want to use the <a href=\"https://github.com/RustCrypto/hashes\" rel=\"nofollow noreferrer\">hashes</a> crates to do some hashing and I want to dynamically pick which algorithm (sha256, sha512, etc.) to use at runtime.</p>\n\n<p>I'd like to write something like this:</p>\n\n<pre><code>let hasher = match \"one of the algorithms\" {\n    \"sha256\" =&gt; Box::new(Sha256::new()) as Box&lt;Digest&gt;,\n    \"sha512\" =&gt; Box::new(Sha512::new()) as Box&lt;Digest&gt;\n    // etc...\n};\n</code></pre>\n\n<p>I sort of get that that doesn't work because the associated types required by <code>Digest</code> aren't specified. If I attempt to fill them in:</p>\n\n<pre><code>\"sha256\" =&gt; Box::new(Sha256::new()) as Box&lt;Digest&lt;&lt;OutputSize = U32, BlockSize = U64&gt;&gt;&gt;,\n</code></pre>\n\n<p>I'm left with an error: <code>the trait 'digest::Digest' cannot be made into an object</code>. I think this approach will fail anyway because <code>match</code> will be returning slightly different types in cases where different algorithms have different associated types.</p>\n\n<p>Am I missing something obvious? How can I dynamically create an instance of something that implements a trait and then hold on to that thing and use it through the trait interface?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1514575447, "post_id": 48027356, "comment_id": 83024611, "body": "can you put this as text into your question and not as screenshot?"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1514575882, "post_id": 48027356, "comment_id": 83024780, "body": "Add your <code>cargo --version</code> to your question, please"}], "answers": [{"comments": [{"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 313, "user_id": 7085243, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1d9eb042d6fbc096ff6cbe4db83f16e5?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey", "link": "https://stackoverflow.com/users/7085243/sergey"}, "edited": false, "score": 0, "creation_date": 1514576520, "post_id": 48027534, "comment_id": 83025035, "body": "I don&#39;t know, can you post the Cargo.toml of the rust directory? I could reproduce with an empty Cargo.toml in a directory <code>rust</code> and then doing <code>cargo new test1 --bin</code> and got the same error as you did"}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 313, "user_id": 7085243, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1d9eb042d6fbc096ff6cbe4db83f16e5?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey", "link": "https://stackoverflow.com/users/7085243/sergey"}, "edited": false, "score": 1, "creation_date": 1514576843, "post_id": 48027534, "comment_id": 83025173, "body": "which file is this now? <code>rust\\Cargo.toml</code> or <code>rust\\test1\\Cargo.toml</code>?"}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 313, "user_id": 7085243, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1d9eb042d6fbc096ff6cbe4db83f16e5?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey", "link": "https://stackoverflow.com/users/7085243/sergey"}, "edited": false, "score": 1, "creation_date": 1514577327, "post_id": 48027534, "comment_id": 83025343, "body": "now you&#39;re mixing up directories. In your question you are in directory <code>rust</code> and it complains that the <code>Cargo.toml</code> there is broken. Please delete <code>Cargo.toml</code> in the rust directory"}], "tags": [], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "is_accepted": true, "score": 2, "last_activity_date": 1514576014, "creation_date": 1514576014, "answer_id": 48027534, "question_id": 48027356, "link": "https://stackoverflow.com/questions/48027356/why-is-cargo-project-failed/48027534#48027534", "title": "Why is cargo project failed?", "body": "<p>You have an invalid <code>Cargo.toml</code> in <code>D:\\computer_science\\rust</code>. Remove or fix that file and <code>cargo new test1 --bin</code> should work from within the rust directory.</p>\n"}], "owner": {"reputation": 313, "user_id": 7085243, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1d9eb042d6fbc096ff6cbe4db83f16e5?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey", "link": "https://stackoverflow.com/users/7085243/sergey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 346, "favorite_count": 0, "accepted_answer_id": 48027534, "answer_count": 1, "score": 1, "last_activity_date": 1516467058, "creation_date": 1514575023, "last_edit_date": 1516467058, "question_id": 48027356, "link": "https://stackoverflow.com/questions/48027356/why-is-cargo-project-failed", "title": "Why is cargo project failed?", "body": "<p>I start to make cargo project with rust and catch this warning with failure... What does it mean? In more young version I didn't meet with this strange phenomen.\nWhy does it happen?</p>\n\n<pre><code>D:\\computer_science\\rust&gt;rustc --version\nrustc 1.22.1 (05e2e1c41 2017-11-22)\n\nD:\\computer_science\\rust&gt;cargo --version\ncargo 0.23.0 (61fa02415 2017-11-22)\n\nD:\\computer_science\\rust&gt;cargo new simple_test --bin\nwarning: compiling this new crate may not work due to invalid wor\nation\n\nfailed to parse manifest at `D:\\computer_science\\rust\\Cargo.toml`\n     Created binary (application) `simple_test` project\n</code></pre>\n\n<p>Cargo.toml contains: </p>\n\n<pre><code>[package]\nname = \"simple_test\"\nversion = \"0.1.0\"\nauthors = [\"serg\"]\n\n[dependencies]\n</code></pre>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1514564231, "post_id": 48025236, "comment_id": 83020121, "body": "Rust&#39;s <a href=\"https://doc.rust-lang.org/std/primitive.char.html\" rel=\"nofollow noreferrer\"><code>char</code>s</a> are <a href=\"http://www.unicode.org/glossary/#unicode_scalar_value\" rel=\"nofollow noreferrer\">Unicode scalar values</a>; if that&#39;s good enough, you can just cast each byte to <code>char</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514580566, "post_id": 48025236, "comment_id": 83026519, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28169745/what-are-the-options-to-convert-iso-8859-1-latin-1-to-a-string-utf-8\">What are the options to convert ISO-8859-1 / Latin-1 to a String (UTF-8)?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514580588, "post_id": 48025236, "comment_id": 83026528, "body": "Sounds like you&#39;re asking for exactly a decoding of Latin-1 encoded text to a <code>String</code>."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 0, "creation_date": 1514567744, "post_id": 48025444, "comment_id": 83021631, "body": "Oh, it&#39;s simple. The data I&#39;m receiving is defined exactly like this."}, {"owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "edited": false, "score": 0, "creation_date": 1514598349, "post_id": 48025444, "comment_id": 83030571, "body": "You can also <a href=\"https://play.rust-lang.org/?gist=a2bfc4c1ce64658d0fec5382fa114960&amp;version=stable\" rel=\"nofollow noreferrer\">collect into <code>String</code></a>."}], "tags": [], "owner": {"reputation": 600, "user_id": 3754495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65fff37f6d10b64ca1676adcc33f5ffb?s=128&d=identicon&r=PG", "display_name": "notriddle", "link": "https://stackoverflow.com/users/3754495/notriddle"}, "is_accepted": false, "score": 3, "last_activity_date": 1514564643, "creation_date": 1514564643, "answer_id": 48025444, "question_id": 48025236, "link": "https://stackoverflow.com/questions/48025236/how-to-convert-u8-of-unicode-code-points-to-str-in-rust/48025444#48025444", "title": "How to convert [u8] of Unicode code points to str in Rust?", "body": "<pre><code>fn main() {\n    let codepoint_array: Vec&lt;u8&gt; = \"test\".into();\n    let codepoints: Vec&lt;char&gt; = codepoint_array.into_iter().map(char::from).collect();\n    println!(\"{:?}\", codepoints);\n}\n</code></pre>\n\n<p>(I have no idea why you'd want to do this, since that would give you a the Latin-1 supplement and the Latin Extended A, but nothing else...)</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 872, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1514564643, "creation_date": 1514563639, "question_id": 48025236, "link": "https://stackoverflow.com/questions/48025236/how-to-convert-u8-of-unicode-code-points-to-str-in-rust", "title": "How to convert [u8] of Unicode code points to str in Rust?", "body": "<p>I have a <code>u8</code> slice that I would like to convert into a string, treating each <code>u8</code> as the literal Unicode code point (that is, U+0000 to U+00FF).</p>\n\n<p>The closest I've found is <a href=\"https://doc.rust-lang.org/std/str/fn.from_utf8.html\" rel=\"nofollow noreferrer\">from_utf8</a> which would interpret the slice as UTF8, but I'm not after UTF8, but the literal code points instead. </p>\n\n<p>How to do this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1514559565, "post_id": 48023723, "comment_id": 83018114, "body": "That&#39;s usually something the IDE does.  Rust has the <a href=\"https://github.com/rust-lang-nursery/rls\" rel=\"nofollow noreferrer\">Rust Language Server</a> which is used by several IDEs and code editors (including Visual Studio and Atom), but I haven&#39;t used it myself.  (I&#39;m using Emacs, but the <a href=\"https://github.com/emacs-lsp/lsp-mode\" rel=\"nofollow noreferrer\">support</a> doesn&#39;t seem to be stable yet.)"}], "answers": [{"comments": [{"owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "edited": false, "score": 0, "creation_date": 1514578723, "post_id": 48027581, "comment_id": 83025863, "body": "Unfortunately the struct does not exist in the project, but in a dependency."}, {"owner": {"reputation": 74, "user_id": 908247, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/66cda726f7448388321bd6683160b491?s=128&d=identicon&r=PG", "display_name": "skeleten", "link": "https://stackoverflow.com/users/908247/skeleten"}, "reply_to_user": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "edited": false, "score": 2, "creation_date": 1514668355, "post_id": 48027581, "comment_id": 83046120, "body": "Unless specified, <code>cargo doc</code> documents all the dependencies of the project as well :)"}], "tags": [], "owner": {"reputation": 74, "user_id": 908247, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/66cda726f7448388321bd6683160b491?s=128&d=identicon&r=PG", "display_name": "skeleten", "link": "https://stackoverflow.com/users/908247/skeleten"}, "is_accepted": true, "score": 2, "last_activity_date": 1514576259, "creation_date": 1514576259, "answer_id": 48027581, "question_id": 48023723, "link": "https://stackoverflow.com/questions/48023723/finding-source-of-method-implementation-in-rust/48027581#48027581", "title": "Finding source of method implementation in Rust?", "body": "<p>The generated documentation from cargo generally shows a list of all implemented traits and their functions. You could use this to find the method in question.</p>\n\n<p>Simply run <code>cargo doc --open</code> to build and open the documentation in your browser. Then search for your struct</p>\n"}], "owner": {"reputation": 1234, "user_id": 2232000, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/feca4a8ce6ae5868a181cf0aca7f00c9?s=128&d=identicon&r=PG&f=1", "display_name": "left4bread", "link": "https://stackoverflow.com/users/2232000/left4bread"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 48027581, "answer_count": 1, "score": 0, "last_activity_date": 1514576259, "creation_date": 1514555941, "question_id": 48023723, "link": "https://stackoverflow.com/questions/48023723/finding-source-of-method-implementation-in-rust", "title": "Finding source of method implementation in Rust?", "body": "<p>How can I find the implementation of a certain method I am using?</p>\n\n<p>I have a function <code>f</code> I debug, which at one point calls a method <code>g</code>:</p>\n\n<pre><code>fn f() {\n    x.g();    \n}\n</code></pre>\n\n<p>My problem is, <code>g</code> is no where to be found, and it is not my code. </p>\n\n<p>I mean, yes, the code compiles, but I'm trying to understand a bug, and all textual search for <code>\"g\"</code> doesn't yield anything.</p>\n\n<p>Is there a way to convince the compiler to provide me something like <em>\"This particular <code>g()</code> comes from <code>TraitA</code> and is located in <code>file.rs</code>\"</em>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": true, "score": 19, "last_activity_date": 1618903228, "last_edit_date": 1618903228, "creation_date": 1514545321, "answer_id": 48021563, "question_id": 48021408, "link": "https://stackoverflow.com/questions/48021408/how-to-init-a-rust-vector-with-a-generator-function/48021563#48021563", "title": "How to init a Rust vector with a generator function?", "body": "<p>You can use a <code>range</code> withing a <code>map</code> and then collect the results.</p>\n<p>Like in the example for <code>F#</code> docs:</p>\n<pre><code>let my_vector : Vec&lt;i32&gt; = (1..11).map(|x| x*x).collect();\n</code></pre>\n<p>Check this <a href=\"https://play.rust-lang.org/?gist=0eda12fbd5325ed764dbcc0e3618ba51&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": false, "score": 7, "last_activity_date": 1514561973, "last_edit_date": 1514561973, "creation_date": 1514545981, "answer_id": 48021706, "question_id": 48021408, "link": "https://stackoverflow.com/questions/48021408/how-to-init-a-rust-vector-with-a-generator-function/48021706#48021706", "title": "How to init a Rust vector with a generator function?", "body": "<p>Though @Netwave provides the answer, I'd point to a solution which uses it and provides both more reusability and readability.</p>\n\n<ol>\n<li><p>Define a generic function, <a href=\"https://play.rust-lang.org/?gist=d12e75d8a1e0c1c32739dcef246476a1&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>:</p>\n\n<pre><code>fn initialize&lt;T&gt;(count: usize, f: fn(usize) -&gt; T) -&gt; Vec&lt;T&gt; {\n    (0..count).map(f).collect()\n}\n\nfn main() {\n    let my_vector = initialize(10, |i| i as i32);\n    for e in my_vector {\n         println!(\"{}\", e);\n    }\n}\n</code></pre></li>\n<li><p>Define a trait, implement it for whatever you want and use it, <a href=\"https://play.rust-lang.org/?gist=552a938c7cd8aca1c3a5154fcd100354&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>:</p>\n\n<pre><code>trait Initializer&lt;T&gt; {\n    fn initialize(count: usize, f: fn(usize) -&gt; T) -&gt; Vec&lt;T&gt; {\n        (0..count).map(f).collect()\n    }\n}\n\nimpl&lt;T&gt; Initializer&lt;T&gt; for Vec&lt;T&gt; {}\n\nfn main() {\n    let my_vector = Vec::initialize(10, |i| i as i32);\n    for e in my_vector {\n        println!(\"{}\", e);\n    }\n}\n</code></pre>\n\n<p>or <a href=\"https://play.rust-lang.org/?gist=7a2efe4ada32662ae986f92c11997591&amp;version=stable\" rel=\"nofollow noreferrer\">more general way</a>:</p>\n\n<pre><code>trait Initializer&lt;T, U&gt; {\n    fn initialize(count: usize, f: fn(usize) -&gt; U) -&gt; T;\n}\n\nimpl&lt;T: std::iter::FromIterator&lt;U&gt;, U&gt; Initializer&lt;T, U&gt; for T {\n    fn initialize(count: usize, f: fn(usize) -&gt; U) -&gt; T {\n        (0..count).map(f).collect::&lt;T&gt;()\n    }\n}\n\nfn main() {\n    let my_vector = Vec::initialize(10, |i| i as i32);\n    for e in my_vector {\n        println!(\"{}\", e);\n    }\n}\n</code></pre></li>\n<li><p>Write a macro, <a href=\"https://play.rust-lang.org/?gist=3be8e2f25336a77e2bcc39050d1f5a9d&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>:</p>\n\n<pre><code>macro_rules! vec_init {\n    ($count: expr, $f: expr) =&gt; { (0..$count).map($f).collect() }\n}\n\nfn main() {\n    let my_vector: Vec&lt;i32&gt; = vec_init!(10, |i| i as i32);\n}\n</code></pre></li>\n</ol>\n\n<p>The base still the same is in the @Netwave's answer. You've asked that you want something like:</p>\n\n<pre><code>// Looking for something similar to:\nVec&lt;T&gt;::init(n : usize, generator : F) -&gt; Vec&lt;T&gt; \n    where F: Fn(usize) -&gt; T {\n    // ...\n}\n</code></pre>\n\n<p>And there is exactly this code in the second item.</p>\n"}, {"tags": [], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "is_accepted": false, "score": 4, "last_activity_date": 1571539085, "creation_date": 1571539085, "answer_id": 58469605, "question_id": 48021408, "link": "https://stackoverflow.com/questions/48021408/how-to-init-a-rust-vector-with-a-generator-function/58469605#58469605", "title": "How to init a Rust vector with a generator function?", "body": "<p>Pretty late to this party, but: <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.resize_with\" rel=\"nofollow noreferrer\"><code>resize_with</code></a></p>\n"}], "owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4431, "favorite_count": 1, "accepted_answer_id": 48021563, "answer_count": 3, "score": 11, "last_activity_date": 1618903228, "creation_date": 1514544631, "question_id": 48021408, "link": "https://stackoverflow.com/questions/48021408/how-to-init-a-rust-vector-with-a-generator-function", "title": "How to init a Rust vector with a generator function?", "body": "<p>Hopping between languages can be painful. Idioms of one language \"feel good\" and one starts to look for the same idioms in other languages.</p>\n\n<p>In F#, there is a way to init an array with the help of a generator function. <a href=\"https://msdn.microsoft.com/visualfsharpdocs/conceptual/array.init%5B%27t%5D-function-%5Bfsharp%5D\" rel=\"noreferrer\"><code>Array.init n generator</code></a>. Now, that I hopped to Rust for a little while, I wonder if there is a similar facility in place or if I have to create myself such a facility. </p>\n\n<p>Studying <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"noreferrer\">Rust standard library documentation about vectors</a>, I could not find anything similar to what I am looking for.</p>\n\n<pre><code>// Looking for something similar to:\nVec&lt;T&gt;::init(n : usize, generator : F) -&gt; Vec&lt;T&gt; \n    where F: Fn(usize) -&gt; T {\n    // ...\n}\n</code></pre>\n\n<p>Maybe it works differently in Rust, by means of iterators. But I must admit, that Rust iterators (and their myriads of flavors) are still a tad foggy to my simple mind.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1514521075, "post_id": 48017293, "comment_id": 83003783, "body": "Relevant question <a href=\"https://stackoverflow.com/q/29428227/2731452\">Return local String as a slice (&amp;str)</a>"}, {"owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1514521718, "post_id": 48017293, "comment_id": 83003915, "body": "@red75prime Hmm, so if I am understanding correctly, a <code>String</code> created using <code>String::from</code> isn&#39;t &quot;owned&quot; by the function within which it was created?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 2, "creation_date": 1514522083, "post_id": 48017293, "comment_id": 83003988, "body": "The string is &quot;owned&quot; by the function. That&#39;s why the string gets destroyed on the function&#39;s exit and the reference you try to return has nowhere to point to."}, {"owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1514522675, "post_id": 48017293, "comment_id": 83004108, "body": "@red75prime Yeah, I think I see now. Basically, instead of using references to strings, it is better to actually pass around the string itself, as the answer to the question you referenced discusses."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1514580117, "post_id": 48017293, "comment_id": 83026372, "body": "In this case, you can fix both errors by just deleting <code>String::from</code>. No need to allocate a new buffer and copy the data when you can just... <i>not</i> copy it."}, {"owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1514584393, "post_id": 48017293, "comment_id": 83027749, "body": "@trentcl but isn&#39;t the trim function implemented on <code>String</code> and not <code>&amp;str</code>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1514599267, "post_id": 48017293, "comment_id": 83030701, "body": "<a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.trim\" rel=\"nofollow noreferrer\">Nope.</a> <code>trim</code> doesn&#39;t mutate the string; it just returns a substring."}], "answers": [{"tags": [], "owner": {"reputation": 1339, "user_id": 682485, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ea1e106f2d083f0624c0c4f48ae1c18b?s=128&d=identicon&r=PG", "display_name": "Malice", "link": "https://stackoverflow.com/users/682485/malice"}, "is_accepted": false, "score": 1, "last_activity_date": 1514523784, "creation_date": 1514523784, "answer_id": 48017628, "question_id": 48017293, "link": "https://stackoverflow.com/questions/48017293/why-dont-str-results-of-string-implementation-functions-e-g-stringtri/48017628#48017628", "title": "Why don&#39;t `&amp;str` results of `String` implementation functions (e.g. `String::trim`) behave like static string literals?", "body": "<p>The <code>String</code> created inside a function can only live as long that function execution. You cannot return a reference to <code>String</code> because the reference will be invalid once the function returns. </p>\n"}, {"tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": true, "score": 1, "last_activity_date": 1514563109, "creation_date": 1514563109, "answer_id": 48025134, "question_id": 48017293, "link": "https://stackoverflow.com/questions/48017293/why-dont-str-results-of-string-implementation-functions-e-g-stringtri/48025134#48025134", "title": "Why don&#39;t `&amp;str` results of `String` implementation functions (e.g. `String::trim`) behave like static string literals?", "body": "<p>This is what things look like from code calling <code>reply()</code></p>\n\n<pre><code>'life_a: {  \n    // string_a's lifetime is 'life_a\n    let string_a : String = String::from(\"blah blah blah\");\n    // str_a's lifetime is inherited from string_a, so \n    // its lifetime is 'life_a\n    let str_a : &amp;str = string_a.as_str();\n    // reply_result's lifetime should also be 'life_a, because that\n    // is promised by reply's type.\n    let reply_result : &amp;str = reply(str_a);\n    ...code happily using string_a, str_a, and reply_result goes here...\n} \n// 'life_a is over, so string_a, str_a, and reply_result \n// are no longer accessible.\n</code></pre>\n\n<p>Here I've added in the implicit lifetime parameters that <a href=\"https://doc.rust-lang.org/1.9.0/book/lifetimes.html#lifetime-elision\" rel=\"nofollow noreferrer\">Lifetime Elision</a> takes care of.</p>\n\n<pre><code>pub fn reply&lt;'a&gt;(message: &amp; 'a str) -&gt; &amp; 'a str {\n  'life_b: {\n    // string_from_message has lifetime 'life_b.  message is \n    // completely copied, so the lifetime of string_from_message is \n    // now completely independent of message.\n    let string_from_message : String = String::from(messsage);\n    // message_lifeb inherits its lifetime from string_from_message\n    let message_lifeb: &amp;str = string_from_message.trim();\n\n    match message_lifeb {\n        // this case returns a &amp; 'static str, which is fine because\n        // it will live at least as long as message : &amp; 'a str\n        \"\" =&gt; \"Fine. Be that way!\",\n        // this case (presumably) returns a &amp; 'b str, based on the\n        // lifetime of message_lifeb.  The compiler knows `life_b is\n        // not long enough to satisfy the output lifetime requirement.\n        // So the compiler complains about lifetimes.\n        _ =&gt; reply_to_non_empty(message_lifeb),\n    }\n  } // 'life_b ends here\n}\n</code></pre>\n"}], "owner": {"reputation": 2425, "user_id": 3486684, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/308961d6e6a4d9649e2ee9f81a4448ba?s=128&d=identicon&r=PG&f=1", "display_name": "user89", "link": "https://stackoverflow.com/users/3486684/user89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "closed_date": 1514571296, "accepted_answer_id": 48025134, "answer_count": 2, "score": 0, "last_activity_date": 1514563109, "creation_date": 1514520679, "question_id": 48017293, "link": "https://stackoverflow.com/questions/48017293/why-dont-str-results-of-string-implementation-functions-e-g-stringtri", "closed_reason": "Duplicate", "title": "Why don&#39;t `&amp;str` results of `String` implementation functions (e.g. `String::trim`) behave like static string literals?", "body": "<p>Consider the following code:</p>\n\n<pre><code>enum Inflection {\n    Question_NoYelling,\n    Question_Yelling,\n    Yelling_NoQuestion,\n    Other,\n}\n\nfn is_whitespace_or_question_mark(c: char) -&gt; bool {\n    match c {\n        ' ' =&gt; true,\n        '?' =&gt; true,\n        '\\t' =&gt; true,\n        '\\n' =&gt; true,\n        _ =&gt; false,\n    }\n}\n\nfn split_message_into_words_and_punctuation(message: &amp;str) -&gt; Vec&lt;&amp;str&gt; {\n    String::from(message).split(is_whitespace_or_question_mark)\n        .filter(|element| element.len() != 0).collect();\n}\n\nfn is_uppercase(word: &amp;str) -&gt; bool {\n    if word != \"?\" &amp;&amp; word == &amp;word.to_string().to_uppercase() {\n        true\n    } else {\n        false\n    }\n}\n\nfn get_inflection(message: &amp;str) -&gt; Inflection {\n    let mut is_question: bool = false;\n    let mut is_yelling: bool = false;\n\n    let words_and_punctuation: Vec&lt;&amp;str&gt; = split_message_into_words_and_punctuation(message);\n\n    for element in  words_and_punctuation.iter() {\n        if is_uppercase(element) {\n            is_yelling = true;\n            break;\n        }\n    }\n\n    if words_and_punctuation[words_and_punctuation.len() - 1] == \"?\" {\n        is_question = true;\n    }\n\n    match (is_question, is_yelling) {\n        (true, true) =&gt; Inflection::Question_Yelling,\n        (true, false) =&gt; Inflection::Question_NoYelling,\n        (false, true) =&gt; Inflection::Yelling_NoQuestion,\n        (false, false) =&gt; Inflection::Other,\n    }\n}\n\nfn reply_to_non_empty(message: &amp;str) -&gt; &amp;str {\n    match get_inflection(message) {\n        Inflection::Question_NoYelling =&gt; \"Sure.\",\n        Inflection::Question_Yelling =&gt; \"Whoa, chill out!\",\n        Inflection::Yelling_NoQuestion =&gt; \"Calm down, I know what I'm doing!\",\n        Inflection::Other =&gt; \"Whatever.\",\n    }\n}\n\npub fn reply(message: &amp;str) -&gt; &amp;str {\n    let message: &amp;str = String::from(message).trim();\n\n    match message {\n        \"\" =&gt; \"Fine. Be that way!\",\n        _ =&gt; reply_to_non_empty(message),\n    }\n}\n</code></pre>\n\n<p>The compiler complains about two locations:</p>\n\n<pre><code>pub fn reply(message: &amp;str) -&gt; &amp;str {\n    let message: &amp;str = String::from(message).trim();\n\n    match message {\n        \"\" =&gt; \"Fine. Be that way!\",\n        _ =&gt; reply_to_non_empty(message),\n    }\n}\n</code></pre>\n\n<p>and </p>\n\n<pre><code>fn split_message_into_words_and_punctuation(message: &amp;str) -&gt; Vec&lt;&amp;str&gt; {\n    String::from(message).split(is_whitespace_or_question_mark)\n        .filter(|element| element.len() != 0).collect();\n}\n</code></pre>\n\n<p>In both cases, the compiler says that <code>String::from(message)</code> does not live long enough. But, why does it matter if <code>String::from(message)</code> doesn't live long enough, when I am only using it to get either a string literal, or a <code>Vec</code> of string literals in the end?</p>\n\n<p>For reference, an example of the compiler's complaint:</p>\n\n<pre><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src\\lib.rs:69:25\n   |\n69 |     let message: &amp;str = String::from(message).trim();\n   |                         ^^^^^^^^^^^^^^^^^^^^^       - temporary value only lives until here\n   |                         |\n   |                         does not live long enough\n   |\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 68:1...\n  --&gt; src\\lib.rs:68:1\n   |\n68 | / pub fn reply(message: &amp;str) -&gt; &amp;str {\n69 | |     let message: &amp;str = String::from(message).trim();\n70 | |\n71 | |     match message {\n...  |\n74 | |     }\n75 | | }\n   | |_^\n</code></pre>\n"}, {"tags": ["types", "rust", "traits", "lifetime", "lifetime-scoping"], "answers": [{"comments": [{"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1514531059, "post_id": 48018183, "comment_id": 83006541, "body": "Thanks a lot Masaki for the detailed explanation!  One off-topic question:   Does <code>Box&lt;&amp;i32&gt;</code> mean that it will allocate the pointer/reference in the <code>heap</code> and that the <code>borrowed content (i32)</code> (the data it is pointing to) could well be on stack? and that <code>*b</code> will give me <code>&amp;i32</code> and <code>**b</code> will give 100 (given that <code>let m = 100; let b:Box&lt;&amp;i32&gt; = Box::new(&amp;m);</code>); Not considering <code>println!</code> here which <code>autorefs</code>"}, {"owner": {"reputation": 128, "user_id": 4012426, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000105441681/picture?type=large", "display_name": "Hutch Moore", "link": "https://stackoverflow.com/users/4012426/hutch-moore"}, "reply_to_user": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1595272749, "post_id": 48018183, "comment_id": 111411995, "body": "@soupybionics I know you may not care by now lol, but I believe so. There&#39;s not much reason to box a reference to a stack-allocated value, of course, and you wouldn&#39;t be able to do much with the box since it would be invalid after the i32 gets dropped or moved."}, {"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "reply_to_user": {"reputation": 128, "user_id": 4012426, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000105441681/picture?type=large", "display_name": "Hutch Moore", "link": "https://stackoverflow.com/users/4012426/hutch-moore"}, "edited": false, "score": 0, "creation_date": 1619284261, "post_id": 48018183, "comment_id": 118860815, "body": "@HutchMoore, yes it was more of a hypothetical question."}], "tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 39, "last_activity_date": 1563302908, "last_edit_date": 1563302908, "creation_date": 1514527565, "answer_id": 48018183, "question_id": 48017290, "link": "https://stackoverflow.com/questions/48017290/what-does-boxfn-send-static-mean-in-rust/48018183#48018183", "title": "What does &quot;Box&lt;Fn() + Send + &#39;static&gt;&quot; mean in rust?", "body": "<p>Let's decompose it one-by-one.</p>\n\n<h1>Box</h1>\n\n<p><code>Box&lt;T&gt;</code> is a pointer to heap-allocated <code>T</code>. We use it here because trait objects can only exist behind pointers.</p>\n\n<h1>Trait objects</h1>\n\n<p>In <code>Box&lt;Fn() + Send + 'static&gt;</code>, <code>Fn() + Send + 'static</code> is a <a href=\"https://doc.rust-lang.org/book/ch17-02-trait-objects.html\" rel=\"noreferrer\"><em>trait object</em></a> type. In future, it will be <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2113-dyn-trait-syntax.md\" rel=\"noreferrer\">written <code>Box&lt;dyn (Fn() + Send + 'static)&gt;</code></a> to avoid confusion.</p>\n\n<p>Inside <code>dyn</code> are restrictions to the original type. <strong><code>Box&lt;T&gt;</code> can be coerced into <code>Box&lt;Fn() + Send + 'static&gt;</code> only when <code>T: Fn() + Send + 'static</code></strong>. Therefore, although we don't know the original type, we can assume it was <code>Fn()</code> and <code>Send</code> and <strong>had <code>'static</code> lifetime</strong>.</p>\n\n<h1><code>Fn()</code></h1>\n\n<p>This is a trait, just like <code>Clone</code> or <code>Default</code>. However, it uses a special <em>syntax sugar</em>.</p>\n\n<ul>\n<li><code>Fn(A1, ..., An)</code> is a syntax sugar for <code>Fn&lt;(A1, ..., An), Output=()&gt;</code>.</li>\n<li><code>Fn(A1, ..., An) -&gt; R</code> is a syntax sugar for <code>Fn&lt;(A1, ..., An), Output=R&gt;</code>.</li>\n<li>This syntax sugar also applies to the following traits: <a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"noreferrer\"><code>Fn</code></a>, <a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html\" rel=\"noreferrer\"><code>FnMut</code></a>, <a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html\" rel=\"noreferrer\"><code>FnOnce</code></a>, and <a href=\"https://doc.rust-lang.org/std/boxed/trait.FnBox.html\" rel=\"noreferrer\"><code>FnBox</code></a>.</li>\n</ul>\n\n<p>So what does <code>Fn</code> mean? <code>T: Fn(A1, ..., An) -&gt; R</code> means <code>x: T</code> is a callable object with arguments <code>A1, ..., An</code> and return type <code>R</code>. Examples include function pointers and closures.</p>\n\n<h1>Send</h1>\n\n<p><a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\" rel=\"noreferrer\"><code>Send</code></a> means that values of this type can be sent across threads. Since this is an <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md\" rel=\"noreferrer\">auto trait</a>, it <a href=\"https://github.com/rust-lang/rust/pull/45772\" rel=\"noreferrer\">can be specified as the second bounds</a> of <code>dyn</code> types (trait object types).</p>\n\n<h1><code>'static</code> bound</h1>\n\n<p>In fact, <strong><code>dyn</code> types (trait object types) must have exactly one lifetime bound</strong>. It's inferred when omitted. The inference rule is described in <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0192-bounds-on-object-and-generic-types.md\" rel=\"noreferrer\">RFC 0192</a> and <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1156-adjust-default-object-bounds.md\" rel=\"noreferrer\">RFC 1156</a>. It's basically as follows:</p>\n\n<ol>\n<li>If explicitly given, use that lifetime.</li>\n<li>Otherwise, it is inferred from the inner trait. For example, <code>Box&lt;Any&gt;</code> is <code>Box&lt;Any + 'static&gt;</code> because <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html\" rel=\"noreferrer\"><code>Any: 'static</code></a>.</li>\n<li>If the trait doesn't have an appropriate lifetime, it is inferred from the outer type. For example, <code>&amp;'a Fn()</code> is <code>&amp;'a (Fn() + 'a)</code>.</li>\n<li>If that even failed, it falls back to <code>'static</code> (for a function signature) or an anonymous lifetime (for a function body).</li>\n</ol>\n\n<h1>Conclusion</h1>\n\n<p><code>f: Box&lt;Fn() + Send + 'static&gt;</code> is an owned pointer to a callable value (with the original type unknown and dynamically change) such as closures (with no argument or no return value), which can be sent across threads and lives as long as the program itself.</p>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4701, "favorite_count": 9, "accepted_answer_id": 48018183, "answer_count": 1, "score": 23, "last_activity_date": 1563302908, "creation_date": 1514520638, "last_edit_date": 1514571100, "question_id": 48017290, "link": "https://stackoverflow.com/questions/48017290/what-does-boxfn-send-static-mean-in-rust", "title": "What does &quot;Box&lt;Fn() + Send + &#39;static&gt;&quot; mean in rust?", "body": "<p>What does <code>Box&lt;Fn() + Send + 'static&gt;</code> mean in rust?</p>\n\n<p>I stumbled upon this syntax while reading advanced types chapter. <code>Send</code> is a trait but what does it mean to <code>+</code> a lifetime to a trait (<code>'static</code> in this case) in type parametrization ? Also what is <code>Fn()</code> ?</p>\n"}, {"tags": ["vector", "rust"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 0, "creation_date": 1514512684, "post_id": 48016489, "comment_id": 83002303, "body": "So, would this be idiomatic Rust?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 0, "creation_date": 1514525006, "post_id": 48016489, "comment_id": 83004600, "body": "Thanks for the work. It would seem the functional version is both very readable and quite fast. It&#39;d rather take the few ns impact and have clean code."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1514526808, "post_id": 48016489, "comment_id": 83005056, "body": "<code>bench_target_imper</code> does 3 times less work. <code>for _ in 0..k</code> should be <code>for _ in 0..k*3</code>"}, {"owner": {"reputation": 46, "user_id": 1541501, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c6b68cf34b74954bdc49436c74c1930?s=128&d=identicon&r=PG&f=1", "display_name": "dmitryvm", "link": "https://stackoverflow.com/users/1541501/dmitryvm"}, "edited": false, "score": 0, "creation_date": 1514528757, "post_id": 48016489, "comment_id": 83005628, "body": "Thank you. I have corrected the code and the results"}], "tags": [], "owner": {"reputation": 46, "user_id": 1541501, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c6b68cf34b74954bdc49436c74c1930?s=128&d=identicon&r=PG&f=1", "display_name": "dmitryvm", "link": "https://stackoverflow.com/users/1541501/dmitryvm"}, "is_accepted": true, "score": 1, "last_activity_date": 1514528711, "last_edit_date": 1514528711, "creation_date": 1514512328, "answer_id": 48016489, "question_id": 48015781, "link": "https://stackoverflow.com/questions/48015781/how-to-replicate-a-slice-of-a-vector-k-times-into-another-vector/48016489#48016489", "title": "How to replicate a slice of a vector k times into another vector?", "body": "<p>Okay, so after reading this <a href=\"https://users.rust-lang.org/t/which-is-more-idiomatic-functional-imperative-or-a-mix/11278\" rel=\"nofollow noreferrer\">Which is more idiomatic? Functional, imperative or a mix?</a>\nand running benchmarks below</p>\n\n<pre>\n\n    #![feature(test)]\n    extern crate test;\n\n    use test::Bencher;\n\n    #[bench]\n    fn bench_target_func(b: &mut Bencher) {\n        let a = vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        let n = 2;\n        let k = 3;\n        b.iter( || {\n            let b: Vec = a[n..n+3].iter().cloned().cycle().take(3 * k).collect();\n        });\n    }\n\n    #[bench]\n    fn bench_target_imper(b: &mut Bencher) {\n        let a = vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        let n = 2;\n        let k = 3;\n        b.iter( || {\n            let mut b: Vec = Vec::with_capacity(k * 3);\n            let mut it = a[n..n+3].iter().cloned().cycle();\n            for _ in 0..k*3 {\n                b.push(it.next().unwrap());\n            }\n        });\n    }\n\n    #[bench]\n    fn bench_target_imper2(b: &mut Bencher) {\n        let a = vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        let n = 2;\n        let k = 3;\n\n        b.iter(|| {\n            let mut b = Vec::with_capacity(3 * k);\n            for _ in 0..k {\n                b.extend_from_slice(&a[n..n + 3]);\n            }\n        });\n    }\n\n    #[bench]\n    fn bench_target_func2(b: &mut Bencher) {\n        let a = vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        let n = 2;\n        let k = 3;\n\n        b.iter(|| {\n            let b : Vec = (0..k).flat_map(|_| a[n..n+3].iter().cloned()).collect();\n        });\n    }\n\n    fn main() {\n        println!(\"Hello, world!\");\n    }\n\n</pre>\n\n<p>I got the following results:</p>\n\n<pre>\n\n    test bench_target_func   ... bench:          31 ns/iter (+/- 0)\n    test bench_target_func2  ... bench:          97 ns/iter (+/- 1)\n    test bench_target_imper  ... bench:          37 ns/iter (+/- 0)\n    test bench_target_imper2 ... bench:          29 ns/iter (+/- 0)\n\n</pre>\n\n<p>It appears that flat_map is much slower.</p>\n"}, {"tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": false, "score": 0, "last_activity_date": 1514513316, "creation_date": 1514513316, "answer_id": 48016575, "question_id": 48015781, "link": "https://stackoverflow.com/questions/48015781/how-to-replicate-a-slice-of-a-vector-k-times-into-another-vector/48016575#48016575", "title": "How to replicate a slice of a vector k times into another vector?", "body": "<p>To me your example seems to be Rust-idiomatic enough, but I would do this:</p>\n\n<pre><code>let a = vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet n = 2;\nlet k = 3;\n\nlet b : Vec&lt;_&gt; = (0..k).flat_map(|_| a[n..n+3].iter().cloned()).collect();\nprintln!(\"{:?}\", b);\n</code></pre>\n\n<p>I also propose the following verbose approach, which might be useful in some cases.</p>\n\n<pre><code>let a = vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet n = 2;\nlet k = 3;\n\nlet mut b = Vec::with_capacity(3 * k);\nfor _ in 0..k {\n    b.extend_from_slice(&amp;a[n..n+3]);\n}\nprintln!(\"{:?}\", b);\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 48016489, "answer_count": 2, "score": 0, "last_activity_date": 1514528711, "creation_date": 1514504767, "question_id": 48015781, "link": "https://stackoverflow.com/questions/48015781/how-to-replicate-a-slice-of-a-vector-k-times-into-another-vector", "title": "How to replicate a slice of a vector k times into another vector?", "body": "<p>I have a vector <code>a</code> and I need to replicate a slice of this vector, say <code>a[n..n+3]</code>, <code>k</code> times.</p>\n\n<p>For example:</p>\n\n<pre><code>a = vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nn = 2\nk = 3\n</code></pre>\n\n<p>then I would like to generate:</p>\n\n<pre><code>b = vec![2, 3, 4, 2, 3, 4, 2, 3, 4]\n</code></pre>\n\n<p>With some previous help I eventually arrived at the following:</p>\n\n<pre><code>a[n..n+3].iter().cloned().cycle().take(3 * k).collect()\n</code></pre>\n\n<p>Would this be Rust-idiomatic? Is there a more preferred way to do this?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 10, "creation_date": 1514538639, "post_id": 48015661, "comment_id": 83009189, "body": "So in other words, the only reason the above code fails is because the <code>?</code> operator is in <code>main</code>, and <code>main</code> can&#39;t return a value, which <code>?</code> tries to do?"}, {"owner": {"reputation": 957, "user_id": 5214931, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/08458056f4d89cbedf8173f043ded2b8?s=128&d=identicon&r=PG&f=1", "display_name": "oulenz", "link": "https://stackoverflow.com/users/5214931/oulenz"}, "edited": false, "score": 1, "creation_date": 1595588452, "post_id": 48015661, "comment_id": 111533967, "body": "Note that since 1.26 (May 2018), Rust now allows <code>main</code> to return a <code>Result</code>"}], "tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": true, "score": 20, "last_activity_date": 1514503809, "creation_date": 1514503809, "answer_id": 48015661, "question_id": 48015600, "link": "https://stackoverflow.com/questions/48015600/cannot-use-operator-for-functions-that-return-result-error/48015661#48015661", "title": "Cannot use `?` operator for functions that return Result&lt;(), error&gt;", "body": "<p>What do you want to happen if <code>function()</code> returns an <code>Err</code> result? You can\u2019t use <code>try!</code>/<code>?</code> because it causes the containing function to return the same <code>Err</code>, but <code>main()</code> can\u2019t return an <code>Err</code> (it returns <code>()</code>, not <code>Result&lt;\u2026&gt;</code>). If you want to panic, you can use <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap\" rel=\"noreferrer\"><code>unwrap</code></a>:</p>\n\n<pre><code>function().unwrap();\n</code></pre>\n\n<p>If you want to ignore errors, discard the result:</p>\n\n<pre><code>let _ = function();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 6, "last_activity_date": 1582487753, "last_edit_date": 1582487753, "creation_date": 1514504219, "answer_id": 48015721, "question_id": 48015600, "link": "https://stackoverflow.com/questions/48015600/cannot-use-operator-for-functions-that-return-result-error/48015721#48015721", "title": "Cannot use `?` operator for functions that return Result&lt;(), error&gt;", "body": "<p>Your <code>main</code> function does not return a <code>Result</code>.  You need to do something with the error case.  Probably something like <code>function().expect(\"oh no! function() failed!!\");</code>, which will cause a panic and error exit in the unlikely event <code>function()</code> fails.  <code>expect()</code> turns a <code>Result&lt;A,B&gt;</code> into an <code>A</code> on success, and panics displaying a combination of your error message and the <code>B</code> on failure.   </p>\n\n<p>Or you could use <code>Result::unwrap()</code> which works similarly without adding an error message of your own, just using the error value of the <code>Result</code>.      </p>\n"}], "owner": {"reputation": 1054, "user_id": 3478959, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/b52236406c4b6e4fa0bb619db556cf14?s=128&d=identicon&r=PG&f=1", "display_name": "Lev", "link": "https://stackoverflow.com/users/3478959/lev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11338, "favorite_count": 3, "closed_date": 1514753519, "accepted_answer_id": 48015661, "answer_count": 2, "score": 15, "last_activity_date": 1582487753, "creation_date": 1514503396, "question_id": 48015600, "link": "https://stackoverflow.com/questions/48015600/cannot-use-operator-for-functions-that-return-result-error", "closed_reason": "Duplicate", "title": "Cannot use `?` operator for functions that return Result&lt;(), error&gt;", "body": "<p>Given this example:</p>\n\n<pre><code>fn function() -&gt; Result&lt;(), &amp;'static str&gt; {\n    Ok(())\n}\n\nfn main() {\n   function()?; // Compile error\n}\n</code></pre>\n\n<p>I get the error: <code>cannot use the ? operator in a function that returns ()</code>.</p>\n\n<p>Why can't I use the <code>?</code> operator for such functions? Is there syntactic sugar to avoid using a <code>match</code> statement?</p>\n"}, {"tags": ["arrays", "rust", "slice", "assert"], "comments": [{"owner": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "edited": false, "score": 0, "creation_date": 1514491280, "post_id": 48013278, "comment_id": 82996062, "body": "You have to assert for each element individually."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1514493447, "post_id": 48013924, "comment_id": 82996955, "body": "This doesn&#39;t work when the arrays have different size and they are different only after the last element of the shortest array. It&#39;s fine if the PO is absolutely sure they will only ever have two <code>[T; N]</code> with the same <code>N</code>, but if it ever changes that&#39;s going to be a tricky bug to find."}, {"owner": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1514493706, "post_id": 48013924, "comment_id": 82997070, "body": "@mcarton True, I added another assertion for that to my answer."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1514509835, "post_id": 48013924, "comment_id": 83001738, "body": "There is also <a href=\"https://docs.rs/itertools/0.7.4/itertools/trait.Itertools.html#method.all_equal\" rel=\"nofollow noreferrer\"><code>itertools::Itertools::all_equal</code></a> which does just that."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1514754265, "post_id": 48013924, "comment_id": 83062503, "body": "There&#39;s also <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.eq\" rel=\"nofollow noreferrer\"><code>Iterator::eq</code></a>"}], "tags": [], "owner": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "is_accepted": true, "score": 8, "last_activity_date": 1514493689, "last_edit_date": 1514493689, "creation_date": 1514492752, "answer_id": 48013924, "question_id": 48013278, "link": "https://stackoverflow.com/questions/48013278/using-assert-eq-or-printing-large-fixed-sized-arrays-doesnt-work/48013924#48013924", "title": "Using assert_eq or printing large fixed sized arrays doesn&#39;t work", "body": "<p>For the comparison part you can just convert the arrays to iterators and compare elementwise.</p>\n\n<pre><code>assert_eq!(t1.len(), t2.len(), \"Arrays don't have the same length\");\nassert!(t1.iter().zip(t2.iter()).all(|(a,b)| a == b), \"Arrays are not equal\");\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1514509457, "post_id": 48015758, "comment_id": 83001660, "body": "<code>vec!(a)</code> will make a one-element vector, that one element being a slice. These inner-slices then compare because their length is less than 32."}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1514513041, "post_id": 48015758, "comment_id": 83002370, "body": "Thanks.  Changed it to <code>to_vec()</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1521215318, "post_id": 48015758, "comment_id": 85650813, "body": "While technically correct, I would not recommend this answer as-is because it needlessly allocates memory to create the <code>Vec</code>."}], "tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 0, "last_activity_date": 1521215268, "last_edit_date": 1521215268, "creation_date": 1514504548, "answer_id": 48015758, "question_id": 48013278, "link": "https://stackoverflow.com/questions/48013278/using-assert-eq-or-printing-large-fixed-sized-arrays-doesnt-work/48015758#48015758", "title": "Using assert_eq or printing large fixed sized arrays doesn&#39;t work", "body": "<p>You could make <code>Vec</code>s out of them.</p>\n\n<pre><code>fn main() {\n    let a: [u8; 3] = [0, 1, 2];\n    let b: [u8; 3] = [2, 3, 4];\n    let c: [u8; 3] = [0, 1, 2];\n\n    let va: Vec&lt;u8&gt; = a.to_vec();\n    let vb: Vec&lt;u8&gt; = b.to_vec();\n    let vc: Vec&lt;u8&gt; = c.to_vec();\n\n    println!(\"va==vb {}\", va == vb);\n    println!(\"va==vc {}\", va == vc);\n    println!(\"vb==vc {}\", vb == vc);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": false, "score": 7, "last_activity_date": 1514511572, "creation_date": 1514511572, "answer_id": 48016426, "question_id": 48013278, "link": "https://stackoverflow.com/questions/48013278/using-assert-eq-or-printing-large-fixed-sized-arrays-doesnt-work/48016426#48016426", "title": "Using assert_eq or printing large fixed sized arrays doesn&#39;t work", "body": "<h1>Using slices</h1>\n\n<p>As a workaround, you can just use <strong><code>&amp;t1[..]</code></strong> (instead of <code>t1[..]</code>) to make arrays into slices. You'll have to do this for <strong>both comparison and formatting</strong>.</p>\n\n<pre><code>assert_eq!(&amp;t1[..], &amp;t2[..], \"\\nExpected\\n{:?}\\nfound\\n{:?}\", &amp;t2[..], &amp;t1[..]);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>assert_eq!(t1[..], t2[..], \"\\nExpected\\n{:?}\\nfound\\n{:?}\", &amp;t2[..], &amp;t1[..]);\n</code></pre>\n\n<h1>Formatting arrays directly</h1>\n\n<p>Ideally, the original code should compile, but it doesn't for now. The reason is that the standard library <a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"noreferrer\">implements common traits</a> (such as <a href=\"https://doc.rust-lang.org/std/cmp/trait.Eq.html\" rel=\"noreferrer\"><code>Eq</code></a> and <a href=\"https://doc.rust-lang.org/std/fmt/trait.Debug.html\" rel=\"noreferrer\"><code>Debug</code></a>) for arrays of <strong>only up to 32 elements</strong>, due to <a href=\"https://github.com/rust-lang/rust/issues/44580\" rel=\"noreferrer\">lack of const generics</a>.</p>\n\n<p>Therefore, you can compare and format shorter arrays like:</p>\n\n<pre><code>let t1: [u8; 32] = [0; 32];\nlet t2: [u8; 32] = [1; 32];\nassert_eq!(t1, t2, \"\\nExpected\\n{:?}\\nfound\\n{:?}\", t2, t1);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2923, "user_id": 783912, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/98e9b626cf9e9e74ae50c190da325a5e?s=128&d=identicon&r=PG&f=1", "display_name": "FlyingFoX", "link": "https://stackoverflow.com/users/783912/flyingfox"}, "is_accepted": false, "score": 6, "last_activity_date": 1521297673, "last_edit_date": 1521297673, "creation_date": 1521293488, "answer_id": 49336581, "question_id": 48013278, "link": "https://stackoverflow.com/questions/48013278/using-assert-eq-or-printing-large-fixed-sized-arrays-doesnt-work/49336581#49336581", "title": "Using assert_eq or printing large fixed sized arrays doesn&#39;t work", "body": "<p>With <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.eq\" rel=\"noreferrer\"><code>Iterator::eq</code></a>, it is possible to compare anything that can be turned into an iterator for equality:</p>\n\n<pre><code>let mut t1: [u8; 48] = [0; 48];\nlet t2: [u8; 48] = [0; 48];\nassert!(t1.iter().eq(t2.iter()));\n</code></pre>\n"}], "owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1571, "favorite_count": 1, "accepted_answer_id": 48013924, "answer_count": 4, "score": 3, "last_activity_date": 1521297673, "creation_date": 1514489510, "last_edit_date": 1521214627, "question_id": 48013278, "link": "https://stackoverflow.com/questions/48013278/using-assert-eq-or-printing-large-fixed-sized-arrays-doesnt-work", "title": "Using assert_eq or printing large fixed sized arrays doesn&#39;t work", "body": "<p>I have written some tests where I need to assert that two arrays are equal. Some arrays are <code>[u8; 48]</code> while others are <code>[u8; 188]</code>:</p>\n\n<pre><code>#[test]\nfn mul() {\n    let mut t1: [u8; 48] = [0; 48];\n    let t2: [u8; 48] = [0; 48];\n\n    // some computation goes here.\n\n    assert_eq!(t1, t2, \"\\nExpected\\n{:?}\\nfound\\n{:?}\", t2, t1);\n}\n</code></pre>\n\n<p>I get multiple errors here:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `==` cannot be applied to type `[u8; 48]`\n --&gt; src/main.rs:8:5\n  |\n8 |     assert_eq!(t1, t2, \"\\nExpected\\n{:?}\\nfound\\n{:?}\", t2, t1);\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: an implementation of `std::cmp::PartialEq` might be missing for `[u8; 48]`\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n\nerror[E0277]: the trait bound `[u8; 48]: std::fmt::Debug` is not satisfied\n --&gt; src/main.rs:8:57\n  |\n8 |     assert_eq!(t1, t2, \"\\nExpected\\n{:?}\\nfound\\n{:?}\", t2, t1);\n  |                                                         ^^ `[u8; 48]` cannot be formatted using `:?`; if it is defined in your crate, add `#[derive(Debug)]` or manually implement it\n  |\n  = help: the trait `std::fmt::Debug` is not implemented for `[u8; 48]`\n  = note: required by `std::fmt::Debug::fmt`\n</code></pre>\n\n<p>Trying to print them as slices like <code>t2[..]</code> or <code>t1[..]</code> doesn't seem to work.</p>\n\n<p>How do I use <code>assert</code> with these arrays and print them?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 0, "last_activity_date": 1514505405, "creation_date": 1514505405, "answer_id": 48015836, "question_id": 48012907, "link": "https://stackoverflow.com/questions/48012907/incrementally-build-data-structures-which-reference-the-same-data/48015836#48015836", "title": "Incrementally build data structures which reference the same data", "body": "<p>You could change the types of <code>move_map</code> and <code>final_moves</code> to contain <code>Rc&lt;Move&gt;</code> instead of just <code>Move</code>. </p>\n\n<pre><code>let mut final_moves = Vec::new();\nlet mut move_map = EntityMap::new();\nfor m in moves.into_iter() {\n    let close_moves = move_map.find_intersecting(m.bounding_box());\n    let new_move = Rc::new(m.modify_until_not_intersecting(close_moves));\n    final_moves.push(Rc::clone(new_move));\n    move_map.insert(new_move);\n}\n</code></pre>\n"}], "owner": {"reputation": 1276, "user_id": 2449599, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/8117b8eb8ef06d96fef4a5be131ab6c1?s=128&d=identicon&r=PG", "display_name": "phil", "link": "https://stackoverflow.com/users/2449599/phil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1514505405, "creation_date": 1514487524, "question_id": 48012907, "link": "https://stackoverflow.com/questions/48012907/incrementally-build-data-structures-which-reference-the-same-data", "title": "Incrementally build data structures which reference the same data", "body": "<p>I have an <code>EntityMap</code> object which deals with spatially indexing anything that can have a bounding box. I've implemented it in such a way that it stores references to objects rather than owned values (this may not be the best way to do, but I think changing it to owned values would only shift my problem).</p>\n\n<p>What I am currently attempting to do is add objects to a vector in such a way that they do not collide with anything that was previously added to the vector. The following is pseudo-rust of what I just described:</p>\n\n<pre><code>let mut final_moves = Vec::new();\nlet mut move_map = EntityMap::new();\nfor m in moves.into_iter() {\n    let close_moves = move_map.find_intersecting(m.bounding_box());\n    let new_move = m.modify_until_not_intersecting(close_moves);\n    final_moves.push(new_move);\n    move_map.insert(final_moves.last().unwrap());\n}\n</code></pre>\n\n<p><code>final_moves</code> is what is being returned from the function. The issue here is that I'm mutably borrowing <code>final_moves</code>, but I want to store references to its objects inside <code>move_map</code>. The conflict I can't figure out how to resolve is that I want to incrementally build <code>final_moves</code> and <code>move_map</code> at the same time, but this seems to require that they both be mutable, which then stops me from borrowing data from <code>move_map</code>.</p>\n\n<p>How do I restructure my code to accomplish my goals?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1068, "user_id": 6242846, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7fae616ddad39a8e8782e48a091e7f30?s=128&d=identicon&r=PG&f=1", "display_name": "Mad Matts", "link": "https://stackoverflow.com/users/6242846/mad-matts"}, "edited": false, "score": 0, "creation_date": 1514465006, "post_id": 48007342, "comment_id": 82983656, "body": "<a href=\"http://www.cs.brandeis.edu/~cs146a/rust/doc-02-21-2015/book/arrays-vectors-and-slices.html\" rel=\"nofollow noreferrer\">By nature slices in rust are not created directly, but from existing variables</a>. have a look at <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#capacity-and-reallocation\" rel=\"nofollow noreferrer\">Vec::with_capacity</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "edited": false, "score": 0, "creation_date": 1514472525, "post_id": 48008246, "comment_id": 82987353, "body": "Thanks for the clarification."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1514467104, "creation_date": 1514467104, "answer_id": 48008246, "question_id": 48007342, "link": "https://stackoverflow.com/questions/48007342/creating-a-slice-and-appending-to-it-in-rust/48008246#48008246", "title": "Creating a slice and appending to it in Rust", "body": "<p><strong>No.</strong></p>\n\n<p>Go and Rust slices are different:</p>\n\n<ul>\n<li>in Go, a slice is a proxy to another container which allows both observing and mutating the container,</li>\n<li>in Rust, a slice is a <em>view</em> in another container which therefore only allows observing the container (though it may allow mutating the individual elements).</li>\n</ul>\n\n<p>As a result, you cannot use a Rust slice to insert, append or remove elements from the underlying container. Instead, you need either:</p>\n\n<ul>\n<li>to use a mutable reference to the container itself,</li>\n<li>to design a trait and use a mutable reference to said trait.</li>\n</ul>\n\n<p><em>Note: Rust <code>std</code> does not provide <code>trait</code> abstractions for its collections unlike Java, but you may still create some yourself if you think it is worth it for a particular problem.</em></p>\n"}], "owner": {"reputation": 1604, "user_id": 9131220, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d949395713366e2abe1cafff2510149d?s=128&d=identicon&r=PG&f=1", "display_name": "tinker", "link": "https://stackoverflow.com/users/9131220/tinker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1827, "favorite_count": 0, "accepted_answer_id": 48008246, "answer_count": 1, "score": 1, "last_activity_date": 1514467104, "creation_date": 1514463262, "question_id": 48007342, "link": "https://stackoverflow.com/questions/48007342/creating-a-slice-and-appending-to-it-in-rust", "title": "Creating a slice and appending to it in Rust", "body": "<p>In Go, there are <code>make</code> and <code>append</code> functions, from which the first one let's you create a slice of the specified type, length and capacity, whereas the second one let's you append an element to the specified slice. It works more or less like in this toy example:</p>\n\n<pre><code>func main() {\n    // Creates a slice of type int, which has length 0 (so it is empty), and has capacity 5.\n    s := make([]int, 0, 5)\n\n    // Appends the integer 0 to the slice.\n    s = append(s, 0)\n\n    // Appends the integer 1 to the slice.\n    s = append(s, 1)\n\n    // Appends the integers 2, 3, and 4 to the slice.\n    s = append(s, 2, 3, 4)\n}\n</code></pre>\n\n<p>Does Rust offer similar features for working with slices?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 4, "last_activity_date": 1514442124, "creation_date": 1514442124, "answer_id": 48002574, "question_id": 48001987, "link": "https://stackoverflow.com/questions/48001987/rust-macro-strange-error/48002574#48002574", "title": "Rust macro strange error", "body": "<p><code>$temp</code> occurs in different contexts in macro expansion. As a type in <code>fn $belong_field(&amp;self) -&gt; $temp</code> and as a structure constructor in <code>$temp { ..Default::default() }</code>. </p>\n\n<p>You've marked <code>$temp</code> as a type, it prevents second usage.</p>\n\n<p>Replacing the line</p>\n\n<pre><code>$belong_field:ident : $temp:ty [ $key:expr ],\n</code></pre>\n\n<p>with</p>\n\n<pre><code>$belong_field:ident : $temp:ident [ $key:expr ],\n</code></pre>\n\n<p>allows the code to compile.</p>\n"}], "owner": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 392, "favorite_count": 0, "accepted_answer_id": 48002574, "answer_count": 1, "score": 2, "last_activity_date": 1514442124, "creation_date": 1514438543, "question_id": 48001987, "link": "https://stackoverflow.com/questions/48001987/rust-macro-strange-error", "title": "Rust macro strange error", "body": "<p>I'm working through rust's macro system attempting to make an ORM wrapper over Diesel.  Working through the belongs to, I found that rust is sending a rather unexpected error.  Please consider the following code:</p>\n\n<pre><code>macro_rules! klass {\n    (\n        $name:ident,\n        fields =&gt; ($(\n            $field:ident : $type:ty = $default:expr,\n        )*),\n        belongs_to =&gt; ($(\n            $belong_field:ident : $temp:ty [ $key:expr ],\n        )*)\n    ) =&gt; {\n        struct $name {\n            $( $field: $type, )*\n        }\n        impl Default for $name {\n            fn default() -&gt; $name {\n                $name {\n                    $(\n                        $field : $default,\n                    )*\n                }\n            }\n        }\n        impl $name {\n            $(\n                fn $belong_field(&amp;self) -&gt; $temp {\n                    let key = $key;\n                    $temp { ..Default::default() }\n                }\n            )*\n        }\n    }\n}\n\nklass! ( Neat,\n        fields =&gt; (\n            id: i32 = 0,\n            name: String = String::from(\"\"),\n        ),\n        belongs_to =&gt; ()\n    );\n\nklass!( Bob,\n    fields =&gt; (\n        id: i32 = 0,\n        neat_id: i32 = 0,\n    ),\n    belongs_to =&gt; (\n        neat: Neat [ \"neat_id\" ],\n    )\n);\n\nfn main()\n{\n    let b = Bob { ..Default::default() };\n    let mut n = b.neat();\n}\n</code></pre>\n\n<p>This code will yield the following result:</p>\n\n<pre><code>error: expected expression, found `Neat`\n  --&gt; macro.rs:27:31\n   |\n27 |                       $temp { ..Default::default() }\n   |   \n</code></pre>\n\n<p>Why does rust say it wants an expression instead of Neat?  I can change this code to the following and everything in this example compiles and runs:</p>\n\n<pre><code>Neat { ..Default::default() }\n</code></pre>\n\n<p>Is this a compiler error given when \"Neat\" is inserted the program runs as expected?  Thanks, apologizes for this mostly being code.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "edited": false, "score": 0, "creation_date": 1514438830, "post_id": 48001957, "comment_id": 82972468, "body": "@LukeDupin glad to hear :)"}], "tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": true, "score": 6, "last_activity_date": 1514438387, "creation_date": 1514438387, "answer_id": 48001957, "question_id": 48001520, "link": "https://stackoverflow.com/questions/48001520/rust-initialize-generic-type/48001957#48001957", "title": "Rust initialize generic type", "body": "<p>I doubt you can perform exactly this code. By using curly braces we tell the compiler that we initialize a <code>struct</code>. But the generic types can't be structs, generic can be only traits with lifetimes. For example, you can't insist on using structs only in the generic code, but you may insist on some requirements, which is implementation of <code>Default</code> trait here. So, in your generic function code, the only thing you may expect is the <code>Default</code> trait. To use it, you must write the appropriate code which uses the trait:</p>\n\n<pre><code>fn create&lt;T: Default&gt;() -&gt; T\n{\n    T::default()\n}\n</code></pre>\n\n<p>This code will use <code>T</code>'s <code>Default</code> implementation by calling <code>default()</code> method on it.</p>\n"}], "owner": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1758, "favorite_count": 0, "accepted_answer_id": 48001957, "answer_count": 1, "score": 1, "last_activity_date": 1514438387, "creation_date": 1514434695, "question_id": 48001520, "link": "https://stackoverflow.com/questions/48001520/rust-initialize-generic-type", "title": "Rust initialize generic type", "body": "<p>I've got a complex chunk of code that I've outlined below.  Basically I need to initialize a generic, its always a struct and that struct has Default implemented, but the compiler still complains:</p>\n\n<pre><code>fn create&lt;T: Default&gt;() -&gt; T\n{\n    T { ..Default::default() }\n}\n\nfn main()\n{\n    let mut x = create::&lt;Bob&gt;();\n}\n</code></pre>\n\n<p>Yields:</p>\n\n<pre><code>error[E0574]: expected struct, variant or union type, found type parameter `T`\n  --&gt; macro.rs:71:5\n   |\n71 |     T { ..Default::default() }\n   |     ^ not a struct, variant or union type\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Is there a way to tell rust that T is always a struct or something?</p>\n\n<p>Thanks,</p>\n"}]