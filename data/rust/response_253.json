[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573691411, "post_id": 58847391, "comment_id": 103968790, "body": "Expanding on the duplicate suggestion, add another trait that <code>Self::Output</code> must implement and then implement the new trait for the unit type and others. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2086f149beef80b9b525343a2d358e0c\" rel=\"nofollow noreferrer\">applied</a>"}], "owner": {"reputation": 191, "user_id": 9643557, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fhqXU.png?s=128&g=1", "display_name": "Robin", "link": "https://stackoverflow.com/users/9643557/robin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "closed_date": 1574218753, "answer_count": 0, "score": 3, "last_activity_date": 1573695706, "creation_date": 1573689342, "last_edit_date": 1573691201, "question_id": 58847391, "link": "https://stackoverflow.com/questions/58847391/can-rust-match-on-a-type-not-a-value-to-conditionally-compile-code-like-cs", "closed_reason": "Duplicate", "title": "Can Rust match on a type (not a value) to conditionally compile code, like C++&#39;s `if constexpr`?", "body": "<p>I was trying to write the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Foo {\n    type Output;\n\n    fn bar() -&gt; Self::Output;\n    fn baz() -&gt; Self::Output {\n        const match Self::Output { // imaginary syntax\n            () =&gt; (),        // compile this statement only if Output == Unit\n            _ =&gt; bar()       // Otherwise compile this statement\n        }\n    }\n}\n</code></pre>\n\n<p>Since <code>Output</code> is a generic type, I can't instantiate a value (and it could be expensive to do so). In C++, I would have just used <code>if constexpr(std::same&lt;Output, void&gt;::value)</code> or created a template function and specialized it for <code>void</code>, but I didn't find a way to do it in Rust.</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573687887, "post_id": 58846713, "comment_id": 103967966, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/58846713/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1573687800, "creation_date": 1573687800, "answer_id": 58847177, "question_id": 58846713, "link": "https://stackoverflow.com/questions/58846713/and-then-method-not-found-in-futures-0-3/58847177#58847177", "title": "and_then method not found in futures 0.3", "body": "<p>If you <a href=\"https://docs.rs/futures/0.3.1/futures/?search=and_then\" rel=\"nofollow noreferrer\">search the crate docs for <code>and_then</code></a>, you'll see that it's a method on <a href=\"https://docs.rs/futures/0.3.1/futures/future/trait.TryFutureExt.html#method.and_then\" rel=\"nofollow noreferrer\"><code>TryFutureExt</code></a> and <a href=\"https://docs.rs/futures/0.3.1/futures/stream/trait.TryStreamExt.html#method.and_then\" rel=\"nofollow noreferrer\"><code>TryStreamExt</code></a>. You must import a trait to have access to its methods.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25273816/155423\">Why do I need to import a trait to use the methods it defines for a type?</a></li>\n</ul>\n"}], "owner": {"reputation": 5821, "user_id": 634135, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/e663a833765a8e904f7fe53827cc376e?s=128&d=identicon&r=PG", "display_name": "cobie", "link": "https://stackoverflow.com/users/634135/cobie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 968, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1573687956, "creation_date": 1573684691, "last_edit_date": 1573687956, "question_id": 58846713, "link": "https://stackoverflow.com/questions/58846713/and-then-method-not-found-in-futures-0-3", "title": "and_then method not found in futures 0.3", "body": "<p>After upgrading to futures 0.3, I have this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>no method named `and_then` found for type `impl exchanges::kraken::failure::core::future::future::Future` in the current scope\n</code></pre>\n\n<p>After much debugging, I cannot seem to figure out what is going on.</p>\n"}, {"tags": ["rust", "wasm-bindgen"], "owner": {"reputation": 191, "user_id": 9254020, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4706a3bc4e88d9020d41fda8a67a4d2a?s=128&d=identicon&r=PG", "display_name": "Victor Fedorenko", "link": "https://stackoverflow.com/users/9254020/victor-fedorenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 155, "favorite_count": 3, "answer_count": 0, "score": 1, "last_activity_date": 1573921374, "creation_date": 1573670049, "last_edit_date": 1573670750, "question_id": 58843488, "link": "https://stackoverflow.com/questions/58843488/returning-a-boxboxjsvalue-doesnt-work-because-intowasmabi-is-not-implem", "title": "Returning a Box&lt;[Box&lt;[JsValue]&gt;]&gt; doesn&#39;t work because IntoWasmAbi is not implemented", "body": "<p>I am trying to make a chunk method over a <code>JsValue</code> array. Is there are any way to pass modified array back to JavaScript?</p>\n\n<p>That's what I am trying to do:</p>\n\n<pre><code>#[wasm_bindgen]\npub fn chunk(array: Box&lt;[JsValue]&gt;, size: usize) -&gt; Box&lt;[Box&lt;[JsValue]&gt;]&gt; {\n    array\n        .chunks(size)\n        .map(|el| {\n            el.iter()\n                .map(|el| el.to_owned())\n                .collect::&lt;Box&lt;[JsValue]&gt;&gt;()\n        })\n        .collect()\n}\n</code></pre>\n\n<p>I get this during compilation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `wasm_bindgen::convert::traits::IntoWasmAbi` is not\nimplemented for\n`std::boxed::Box&lt;[std::boxed::Box&lt;[wasm_bindgen::JsValue]&gt;]&gt;`\n</code></pre>\n\n<p>I also experimented with js_sys, but seems it takes even longer than a pure  JS implementation as it's just a JS API wrapper</p>\n\n<pre><code>#[wasm_bindgen]\npub fn chunk(array: Box&lt;[JsValue]&gt;, size: usize) -&gt; Array {\n    let root = Array::new();\n\n    for chunk in array.chunks(size) {\n        let arr = Array::new();\n\n        for ch in chunk {\n            arr.push(ch);\n        }\n\n        root.push(&amp;arr);\n    }\n\n    root\n}\n</code></pre>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573669997, "post_id": 58843413, "comment_id": 103960770, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/58700741/155423\">Is there any way to create a async stream generator that yields the result of repeatedly calling a function?</a> and <a href=\"https://stackoverflow.com/q/57369123/155423\">No method named <code>poll</code> found for a type that implements <code>Future</code></a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58843413/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 21, "user_id": 6334028, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-PPwCcRLMUbc/AAAAAAAAAAI/AAAAAAAAAX4/A8lXIwEl-cg/photo.jpg?sz=128", "display_name": "iDeBugger Freeman", "link": "https://stackoverflow.com/users/6334028/idebugger-freeman"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1573670417, "post_id": 58843413, "comment_id": 103960937, "body": "Wow, seems like the first question is completely suites my needs. Thank you! We can close the question then :)"}], "owner": {"reputation": 21, "user_id": 6334028, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-PPwCcRLMUbc/AAAAAAAAAAI/AAAAAAAAAX4/A8lXIwEl-cg/photo.jpg?sz=128", "display_name": "iDeBugger Freeman", "link": "https://stackoverflow.com/users/6334028/idebugger-freeman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 505, "favorite_count": 0, "closed_date": 1573670430, "answer_count": 0, "score": 2, "last_activity_date": 1573670441, "creation_date": 1573669743, "last_edit_date": 1573669937, "question_id": 58843413, "link": "https://stackoverflow.com/questions/58843413/implementing-futuresstreamstream-based-on-futures", "closed_reason": "Duplicate", "title": "Implementing futures::stream::Stream based on Future(s)", "body": "<p>I'm trying to implement <code>futures::stream::Stream</code> on a series of HTTP requests. I need something like long-polling (with the same request each time), but in asynchronous style.</p>\n\n<p>I have declared a structure with a HTTP request future and in the <code>Stream</code> implementation block I need to get the status of this <code>Future</code> by calling its <code>poll</code> method, but I get an error.</p>\n\n<p>I've spend some time playing with <code>Pin</code>, <code>Box</code> and other containers but had no luck.</p>\n\n<p>What I do wrong? How can I fix it? Is there anywhere an example of how can I do something similar?</p>\n\n<p>I'm using crate <code>futures = \"0.3.1\"</code> and here is a simplified version of my code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use core::pin::Pin;\nuse futures::stream::Stream;\nuse std::{\n    future::Future,\n    task::{Context, Poll},\n};\n\nstruct MyStruct {\n    some_future: Option&lt;Pin&lt;Box&lt;dyn Send + Future&lt;Output = Result&lt;Vec&lt;u8&gt;, reqwest::Error&gt;&gt;&gt;&gt;&gt;,\n}\n\nimpl Stream for MyStruct {\n    type Item = u8;\n\n    fn poll_next(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;Option&lt;Self::Item&gt;&gt; {\n        match self.some_future {\n            Some(some_future) =&gt; {\n                let poll = some_future.poll(cx);\n                // ... some stuff to reinitialize self.some_future if it's Poll::Ready\n                poll\n            }\n            None =&gt; unimplemented!(),\n        }\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=394b53562a3ab70c97eeb3d418962577\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>And here is the error I'm facing:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `poll` found for type `std::pin::Pin&lt;std::boxed::Box&lt;dyn core::future::future::Future&lt;Output = std::result::Result&lt;std::vec::Vec&lt;u8&gt;, reqwest::error::Error&gt;&gt; + std::marker::Send&gt;&gt;` in the current scope\n  --&gt; src/main.rs:18:40\n   |\n18 |                 let poll = some_future.poll(cx);\n   |                                        ^^^^ method not found in `std::pin::Pin&lt;std::boxed::Box&lt;dyn core::future::future::Future&lt;Output = std::result::Result&lt;std::vec::Vec&lt;u8&gt;, reqwest::error::Error&gt;&gt; + std::marker::Send&gt;&gt;`\n\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573669543, "post_id": 58842924, "comment_id": 103960579, "body": "The duplicate <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=96e219bb049d74c6df88a635884455ee\" rel=\"nofollow noreferrer\">applied to your situation</a>."}, {"owner": {"reputation": 23, "user_id": 12368385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/870575a06733a94681ea4e4118b505ce?s=128&d=identicon&r=PG&f=1", "display_name": "gopa", "link": "https://stackoverflow.com/users/12368385/gopa"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573684095, "post_id": 58842924, "comment_id": 103966841, "body": "Thanks for the response, the borrow_mut() indeed fixed my problem!"}], "owner": {"reputation": 23, "user_id": 12368385, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/870575a06733a94681ea4e4118b505ce?s=128&d=identicon&r=PG&f=1", "display_name": "gopa", "link": "https://stackoverflow.com/users/12368385/gopa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "closed_date": 1573669491, "answer_count": 0, "score": 1, "last_activity_date": 1573669487, "creation_date": 1573667739, "last_edit_date": 1573669487, "question_id": 58842924, "link": "https://stackoverflow.com/questions/58842924/multiple-borrow-of-disjoint-fields-of-structure-under-mutex-lock", "closed_reason": "Duplicate", "title": "Multiple borrow of disjoint fields of structure under mutex lock", "body": "<p>I have a structure that is mutex protected and I want to mutate different fields of the structure:</p>\n\n<pre><code>use std::sync::Mutex;\n\nstruct Test {\n    foo: usize,\n    goo: usize,\n}\n\nfn main() {\n    let x = Mutex::new(Test { foo: 0, goo: 0 });\n    let mut y = x.lock().unwrap();\n    let a = &amp;mut y.foo;\n    let b = &amp;mut y.goo;\n    *a += 1;\n    *b += 1;\n}\n</code></pre>\n\n<p>This is not allowed:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `y` as mutable more than once at a time\n  --&gt; src/main.rs:12:18\n   |\n11 |     let a = &amp;mut y.foo;\n   |                  - first mutable borrow occurs here\n12 |     let b = &amp;mut y.goo;\n   |                  ^ second mutable borrow occurs here\n13 |     *a += 1;\n   |     ------- first borrow later used here\n</code></pre>\n\n<p>This code works if the struct is used without the <code>Mutex</code>. I am assuming this is because even though it looks like I am using the structure directly here, its all working via <code>DerefMut</code> and that won't allow mutating disjoint fields? This is a common usage pattern where we lock a structure and change multiple fields, so how do I work around this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "edited": false, "score": 0, "creation_date": 1573667938, "post_id": 58842799, "comment_id": 103959834, "body": "JS works by comparing references not the objects right? I don&#39;t think Rust lets you do that. Is this what you really want to do though? You could have two distinct but equal objects in your array."}, {"owner": {"reputation": 789, "user_id": 8120642, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-OX8-_3nAbeE/AAAAAAAAAAI/AAAAAAAAAAA/of7PUZBmbk4/photo.jpg?sz=128", "display_name": "hegel5000", "link": "https://stackoverflow.com/users/8120642/hegel5000"}, "edited": false, "score": 1, "creation_date": 1573668051, "post_id": 58842799, "comment_id": 103959882, "body": "Checking whether two references refer to the same object, and whether two different objects have the same value, are two things which are related but very different.  Comparing addresses is <i>not</i> a performance optimization over comparing values, even in JS."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 789, "user_id": 8120642, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-OX8-_3nAbeE/AAAAAAAAAAI/AAAAAAAAAAA/of7PUZBmbk4/photo.jpg?sz=128", "display_name": "hegel5000", "link": "https://stackoverflow.com/users/8120642/hegel5000"}, "edited": false, "score": 0, "creation_date": 1573668165, "post_id": 58842799, "comment_id": 103959946, "body": "@hegel5000 I know, to rephrase my question, I want to know if two references point to the same object."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "edited": false, "score": 0, "creation_date": 1573668318, "post_id": 58842799, "comment_id": 103960022, "body": "@BradyDean please see the update"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 43, "favorite_count": 1, "closed_date": 1573669278, "answer_count": 0, "score": 1, "last_activity_date": 1573669333, "creation_date": 1573667209, "last_edit_date": 1573669333, "question_id": 58842799, "link": "https://stackoverflow.com/questions/58842799/does-rust-support-comparing-struct-instances-without-comparing-their-fields", "closed_reason": "Duplicate", "title": "Does Rust support comparing struct instances without comparing their fields?", "body": "<p>In JavaScript, one can compare/find objects like this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>let foo = {}\nlet bar = foo\n[foo].includes(bar) // true\n</code></pre>\n\n<p>It's a fast operation, because as far as I know, JavaSscript stores some hidden identifier (memory address?) for every object and just compares them. Rust, on the other hand seems to require implementing the <code>Eq</code> trait which compares every single field including those of every underlying data structure. I can imagine that this may be very, very slow, for such a performant language as Rust, so I guess I am missing something. Where am I wrong? Also, can Rust compare objects in a safe manner by their memory address?</p>\n\n<p>To rephrase my question, I want to know if two references point to the same object.</p>\n"}, {"tags": ["vector", "rust", "iterator", "hashset"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1573653407, "post_id": 58838549, "comment_id": 103951676, "body": "The duplicates <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=69417692379f315d3ac2f5f5edaa254f\" rel=\"nofollow noreferrer\">applied to your situation</a>."}, {"owner": {"reputation": 1566, "user_id": 5299417, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/cDaMr.jpg?s=128&g=1", "display_name": "Michael Hall", "link": "https://stackoverflow.com/users/5299417/michael-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573653638, "post_id": 58838549, "comment_id": 103951809, "body": "Thanks @Shepmaster . Even though I know this is a duplicate, could you add your code from the playground as an answer for others to see directly on this question?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573653673, "post_id": 58838549, "comment_id": 103951830, "body": "Sorry, but answers cannot be added to closed questions."}], "owner": {"reputation": 1566, "user_id": 5299417, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/cDaMr.jpg?s=128&g=1", "display_name": "Michael Hall", "link": "https://stackoverflow.com/users/5299417/michael-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 147, "favorite_count": 0, "closed_date": 1573653239, "answer_count": 0, "score": 0, "last_activity_date": 1573653433, "creation_date": 1573652792, "last_edit_date": 1573653433, "question_id": 58838549, "link": "https://stackoverflow.com/questions/58838549/how-to-sum-elements-in-a-vector-whose-index-is-in-a-hashset", "closed_reason": "Duplicate", "title": "How to sum elements in a vector whose index is in a HashSet?", "body": "<p>I would like to sum elements in a vector whose index exists in a hashset. </p>\n\n<p>I assume there is a combination of iterator adaptors I could use to achieve this, but can't seem to figure out what to use. I know I could create a function and use a for loop over the vector, but I want to do the calculation inline and store straight into a variable.  </p>\n\n<p>An example of the behaviour I would like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashSet;\n\nlet v: Vec&lt;u32&gt; = vec![5, 3, 7, 4, 3, 2, 1];\nlet s: HashSet&lt;u32&gt; = [2, 3, 6].iter().copied().collect();\n\nlet actual = v.iter()....\nlet expected = 12;\n\nassert_eq!(actual, expected);\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573652019, "post_id": 58838253, "comment_id": 103950862, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/29401626/155423\">How do I return a reference to something inside a RefCell without breaking encapsulation?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58838253/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 382, "user_id": 11571396, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5def31ad84a650795c0aed92cb953224?s=128&d=identicon&r=PG&f=1", "display_name": "milck", "link": "https://stackoverflow.com/users/11571396/milck"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573656021, "post_id": 58838253, "comment_id": 103953232, "body": "Thanks, the linked answer indeed solves the issue."}], "owner": {"reputation": 382, "user_id": 11571396, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5def31ad84a650795c0aed92cb953224?s=128&d=identicon&r=PG&f=1", "display_name": "milck", "link": "https://stackoverflow.com/users/11571396/milck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 30, "favorite_count": 0, "closed_date": 1573656273, "answer_count": 0, "score": 1, "last_activity_date": 1573651885, "creation_date": 1573651809, "last_edit_date": 1573651885, "question_id": 58838253, "link": "https://stackoverflow.com/questions/58838253/how-do-i-enforce-immutability-for-public-views-of-reference-counted-types-with-i", "closed_reason": "Duplicate", "title": "How do I enforce immutability for public views of reference-counted types with interior mutability?", "body": "<p>I am implementing a lookup data structure where the idea is to \"hand out\" references to some internal data, though this data is subject to change. I do not want any user outside my struct to change this data, only my internal function should be able to do this. Look at this example to have a better understanding:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct Foo {\n    some_data: Vec&lt;u32&gt;,\n    handed_references: Vec&lt;Rc&lt;RefCell&lt;usize&gt;&gt;&gt;,\n}\n\nimpl Foo {\n    pub fn get_ref(&amp;mut self) -&gt; Rc&lt;RefCell&lt;usize&gt;&gt; {\n        let rc = Rc::new(RefCell::new(10));\n        self.handed_references.push(Rc::clone(&amp;rc));\n        rc\n    }\n\n    pub fn magic(&amp;mut self) {\n        for x in self.handed_references.iter() {\n            *x.borrow_mut() = 15;\n        }\n    }\n}\n</code></pre>\n\n<p>Right now, the values can be changed outside <code>Foo</code>. Is there a way to enforce immutability outside of <code>Foo</code>? Should I not use <code>RefCell</code>?</p>\n"}, {"tags": ["reference", "rust", "lifetime"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1573649420, "post_id": 58837024, "comment_id": 103949322, "body": "Your question is very broad. You didn&#39;t say what problems you are running into. <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">You <i>cannot</i> hold references to other members of the same struct</a>, but you didn&#39;t give any background on what you are <i>really</i> trying to do, so it&#39;s hard to offer an alternative solution."}, {"owner": {"reputation": 574, "user_id": 1545888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/CSfE8.png?s=128&g=1", "display_name": "Sty", "link": "https://stackoverflow.com/users/1545888/sty"}, "edited": false, "score": 0, "creation_date": 1573649627, "post_id": 58837024, "comment_id": 103949426, "body": "I doubt that the architecture tag is appropriate for this question. Also, if a struct holds reference members, you need to specify references. Have you read through <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">the according section in the Rust Book</a>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573667759, "post_id": 58837024, "comment_id": 103959748, "body": "You could be looking for <a href=\"https://stackoverflow.com/questions/57266481/why-is-vecstr-missing-lifetime-specifier-here\">Why is Vec&lt;&amp;str&gt; missing lifetime specifier here?</a> Does that answer your question? If so, we can mark it, but if not, I don&#39;t think it&#39;s answerable. There&#39;s nothing <i>wrong</i> with the architecture you have described, though. If you have code that works but you&#39;re not sure it&#39;s the best solution, consider asking on <a href=\"https://codereview.stackexchange.com/\">Code Review</a> instead (read the rules there first; the expectations are different)."}, {"owner": {"reputation": 3, "user_id": 9924203, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9850c5bc3197f214137537968b375524?s=128&d=identicon&r=PG&f=1", "display_name": "Steingr&#237;mur", "link": "https://stackoverflow.com/users/9924203/steingr%c3%admur"}, "edited": false, "score": 0, "creation_date": 1573816474, "post_id": 58837024, "comment_id": 104019256, "body": "I&#39;m sorry for being broad, I was trying to produce a minimal illustration of my problem while not sounding like I&#39;m trying to bite more than I can chew, which obviously I am. Problem I&#39;m facing is adding references to the Vec is causing the compiler to complain about lifetimes which I get - I am not guaranteeing objects will still be there when reference is consumed. Since this is happening across multiple structs, I am really lost at how to set up those guarantees, but I guess I still have a lot to learn. Thank you everyone for help, I really appreciate it!"}], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 9924203, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9850c5bc3197f214137537968b375524?s=128&d=identicon&r=PG&f=1", "display_name": "Steingr&#237;mur", "link": "https://stackoverflow.com/users/9924203/steingr%c3%admur"}, "edited": false, "score": 0, "creation_date": 1573816855, "post_id": 58837719, "comment_id": 104019443, "body": "I guess this doesn&#39;t answer the question directly, but it is a direction I went into to solve (evade) the original problem so I am accepting it as an answer."}], "tags": [], "owner": {"reputation": 574, "user_id": 1545888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/CSfE8.png?s=128&g=1", "display_name": "Sty", "link": "https://stackoverflow.com/users/1545888/sty"}, "is_accepted": true, "score": -1, "last_activity_date": 1573650095, "last_edit_date": 1573650095, "creation_date": 1573650010, "answer_id": 58837719, "question_id": 58837024, "link": "https://stackoverflow.com/questions/58837024/how-to-work-with-lifetimes-on-a-vec-of-references/58837719#58837719", "title": "How to work with lifetimes on a Vec of references?", "body": "<blockquote>\n  <p>so the <code>Vec</code> in <code>C</code> is compiled, rendered and discarded each frame</p>\n</blockquote>\n\n<p>If you only ever need to use instances of your struct <code>C</code> temporarily, then there is not much use in storing them as part of a struct <code>A</code>.</p>\n\n<p>Instead, I would suggest adding a <code>get_c</code> function to <code>A</code>'s <code>impl</code> that just generates a <code>C</code> on the fly (or, alternatively, go entirely without and have that function simply return a <code>Vec&lt;&amp;E&gt;</code>)</p>\n"}], "owner": {"reputation": 3, "user_id": 9924203, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9850c5bc3197f214137537968b375524?s=128&d=identicon&r=PG&f=1", "display_name": "Steingr&#237;mur", "link": "https://stackoverflow.com/users/9924203/steingr%c3%admur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 58837719, "answer_count": 1, "score": -1, "last_activity_date": 1573663296, "creation_date": 1573647661, "last_edit_date": 1573663296, "question_id": 58837024, "link": "https://stackoverflow.com/questions/58837024/how-to-work-with-lifetimes-on-a-vec-of-references", "title": "How to work with lifetimes on a Vec of references?", "body": "<p>I'm trying to hold a vector of references across the nested hierarchy (cloning is not an option), but I'm having trouble grasping lifetimes.</p>\n\n<p>I've tried to summarize my code here:</p>\n\n<pre><code>struct A {\n    b: B,\n    c: C,\n}\n\nimpl A {\n    fn add(&amp;mut self) {\n        for i in self.b.d.iter() {\n            self.c.e.push(&amp;i);\n        }\n    }\n}\n\nstruct B {\n    d: Vec&lt;E&gt;,\n}\n\nstruct C {\n    e: Vec&lt;&amp;E&gt;,\n}\n\nstruct E {}\n</code></pre>\n\n<p>I'm running a simulation and storing individual results in <code>B</code>, and then picking up only a subset of that for visualization, so the <code>Vec</code> in <code>C</code> is compiled, rendered and discarded each frame. </p>\n\n<p>My actual hierarchy is more complex than this, but I hope that if I understand this problem I'll be able to scale it up. </p>\n\n<p>How do I approach setting up lifetimes here? Is this even an idiomatic Rust way or should I re-organize my entities?</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573606016, "post_id": 58828308, "comment_id": 103933677, "body": "See also <a href=\"https://stackoverflow.com/q/40411045/155423\">Is it possible to have a heterogeneous vector of types that implement Eq?</a>;"}], "owner": {"reputation": 11, "user_id": 12363648, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-DaGSWitZQew/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reh6PEXuYXy2mpXGP34Ntko4wh9bw/photo.jpg?sz=128", "display_name": "Devlyn Nelson", "link": "https://stackoverflow.com/users/12363648/devlyn-nelson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 280, "favorite_count": 0, "closed_date": 1573605811, "answer_count": 0, "score": 1, "last_activity_date": 1573606218, "creation_date": 1573602109, "last_edit_date": 1573605682, "question_id": 58828308, "link": "https://stackoverflow.com/questions/58828308/storing-struct-without-defining-the-generic-types-in-rust", "closed_reason": "Duplicate", "title": "Storing struct without defining the generic types in Rust", "body": "<p>I'm coming to Rust from a background of Java, C#, C++, as well as limited C knowledge. I switched to Rust because I thought the design patterns and the type safety would greatly improve my final product. I'm not great at writing these kinds of things, so I've made a list of my goals and the problem I am having. </p>\n\n<p>Goals:</p>\n\n<ul>\n<li>I want a <code>Vec</code> or any list that stores different objects that implement a common trait.\n\n<ul>\n<li>The trait has two generic types that are defined by the object that implements it.</li>\n</ul></li>\n<li>Each object stored in the list would be unique, meaning the object would have unique objects defined for the implementation of the trait.</li>\n<li>Each unique object should only be in the list once.</li>\n<li>I would like to keep track of the generic types associated with each object. This is not my current problem nor am I worried about this detail right now, but I will not turn down advice for this.</li>\n</ul>\n\n<p>I'm not sure what the best/safest way to store a generic type with a generic trait while still having the flexibility I would like.</p>\n\n<pre><code>// common functions in trait that use A and B.\npub trait Common&lt;A, B&gt; {\n    fn common_behavior_one(a: A) {}\n    fn common_behavior_two(b: B) {}\n}\n\n// these are example objects and there would be many more sets like this\nstruct objectA {}\nstruct objectB {}\nstruct CommonObject {} // stores list of objectA's and consumes objectB's\n\nimpl Common&lt;objectA, objectB&gt; for CommonObject {\n    fn common_behavior_one(a: objectA) {}\n    fn common_behavior_two(b: objectB) {}\n}\n\n//this is where my problem starts\nstruct Manager {\n    // i would like this to accept any Object with the Common trait implemented\n    // regardless of what the generics for the trait are.\n    objects: Vec&lt;Box&lt;impl Common&gt;&gt;, // problem\n}\n\nimpl Manager {\n    pub fn add_object&lt;A, B&gt;(&amp;mut self, _object: Box&lt;Common&lt;A, B&gt;&gt;) { // potential problem\n        // add _object to vec\n    }\n\n    pub fn remove_object&lt;A, B&gt;(&amp;mut self, _object: Box&lt;Common&lt;A, B&gt;&gt;) { // potential problem\n        // remove _object from vec\n    }\n\n    pub fn get_object() {} // not sure about how im going to do this.\n\n    pub fn pass_to_object&lt;B&gt;(&amp;mut self, _struct: Box&lt;B&gt;) { // potential problem\n        // pass _struct(B type) into common where it will be consumed.\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "iterator", "type-constraints"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573582748, "post_id": 58824421, "comment_id": 103925723, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/30630810/155423\">Using generic iterators instead of specific list types</a>; <a href=\"https://stackoverflow.com/q/35940068/155423\">Writing a generic function that takes an iterable container as parameter in Rust</a>; <a href=\"https://stackoverflow.com/q/34969902/155423\">How to write a Rust function that takes an iterator?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58824421/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1573582780, "post_id": 58824421, "comment_id": 103925732, "body": "You probably want/can use <a href=\"https://docs.rs/itertools/0.8.1/itertools/trait.Itertools.html#method.minmax\" rel=\"nofollow noreferrer\"><code>Itertools::minmax</code></a> instead."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573583547, "post_id": 58824421, "comment_id": 103926077, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=80daad27468c6b9b0dc3b98ca16682ba\" rel=\"nofollow noreferrer\">The duplicate applied to your case</a>, and <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5f7a0bb9fa61e227fd72707c9a00e37c\" rel=\"nofollow noreferrer\">with itertools</a>."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573584115, "post_id": 58824421, "comment_id": 103926325, "body": "@Shepmaster, I will look at the other question. - looked. It works! thanks."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1573584120, "post_id": 58824421, "comment_id": 103926327, "body": "@hellow, while minmax may accomplish what I am showing, I have several other methods that will make use of this information and generate a lambda to be returned."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573586412, "post_id": 58824421, "comment_id": 103927272, "body": "@Shepmaster - I had looked at one of the &quot;duplicate&quot; questions before you cited it, attempted to apply what it said, and failed. Only seeing how you implemented it in the Rust Playground helped. I still find applying SO answers related to my problem to my actual situation harder in Rust than in other languages."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573586672, "post_id": 58824421, "comment_id": 103927396, "body": "In the future, it would be a good idea to link to the questions / answers that you have already read and describe what problems you had in applying them, or even ask about the differences between your case and the other cases. That may make the new question distinct from any existing questions, or prompt us to expand on an existing answer with more detail or links, or provide an additional answer. It also helps demonstrate the work that you put in before asking the question, which most answerers appreciate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573586822, "post_id": 58824421, "comment_id": 103927441, "body": "Otherwise, an answerer has to make guesses and assumptions about the context you are coming from. We could assume the OP has no knowledge and we have to start from zero, or that they have all of the knowledge but just have a typo, or somewhere in between. It&#39;s simpler to point them at potential duplicates and ask them to clarify how the question differs instead of spending a lot of time on an answer that does what the OP wants but might not explain it to them in the exact manner they need."}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 66, "favorite_count": 0, "closed_date": 1573583230, "answer_count": 0, "score": 1, "last_activity_date": 1573583250, "creation_date": 1573582441, "last_edit_date": 1573582683, "question_id": 58824421, "link": "https://stackoverflow.com/questions/58824421/how-do-you-define-a-function-parameter-that-can-accept-a-vec-or-anything-that-ca", "closed_reason": "Duplicate", "title": "How do you define a function parameter that can accept a Vec or anything that can be iterated?", "body": "<p>I want to define a function that takes a parameter that can be iterated over without being consumed. The function should be able to take a <code>Vec</code> but also other iterable objects. I am hung up on how to define a suitable generic parameter with a type constraint that will work. The purpose of the function is to get the maximum and minimum values from among all coordinates of a collection of points. (I store this in <code>i64</code> because I will create other functions to handle <code>u32</code> points, and they can get bigger than the largest <code>i32</code>.) The collection is passed in as a slice, but how shall I represent the points? A <code>Vec&lt;i32&gt;</code> will work as shown below, but I want anything that can produce a sequence of <code>i32</code>. Whatever solution is offered, the function must still be callable on a slice of <code>Vecs</code> (or pointers to <code>Vecs</code>) and not consume them.</p>\n\n<p>Here is my code using a slice of <code>Vec</code>s:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::iter::{IntoIterator, Iterator};\nuse std::{i32, u32};\n\n/// The observed range of values seen in a set of points whose coordinates are 32-bit integers (signed or unsigned).\n///\n/// From this information we can determine how to translate the coordinates so that their normalized range has a low of zero.\n/// This permits us to use the fewest number of bits to represent them when constructing a Hilbert index.\npub struct IntegerDataRange {\n    pub low: i64,\n    pub high: i64,\n}\n\nimpl IntegerDataRange {\n    pub fn from_i32(points: &amp;[Vec&lt;i32&gt;]) -&gt; Self {\n        let mut low = i32::MAX as i64;\n        let mut high = i32::MIN as i64;\n        for point in points.iter() {\n            for coordinate in point.iter().map(|c| *c as i64) {\n                if coordinate &gt; high {\n                    high = coordinate;\n                }\n                if coordinate &lt; low {\n                    low = coordinate;\n                }\n            }\n        }\n        IntegerDataRange {\n            low: low as i64,\n            high: high as i64,\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["asynchronous", "rust"], "comments": [{"owner": {"reputation": 351, "user_id": 6926991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6fba29a1efee35984a7395938b3cf88?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Bammer", "link": "https://stackoverflow.com/users/6926991/martin-bammer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573582847, "post_id": 58824205, "comment_id": 103925757, "body": "I&#39;ve switched to futures = &quot;0.1.29&quot;. Now I get completely different errors:"}, {"owner": {"reputation": 351, "user_id": 6926991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6fba29a1efee35984a7395938b3cf88?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Bammer", "link": "https://stackoverflow.com/users/6926991/martin-bammer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573582948, "post_id": 58824205, "comment_id": 103925802, "body": "error[E0271]: type mismatch resolving ... main.rs:12:10 .for_each(move |entry| { ^^^^^^^^ expected struct <code>failure::error::Error</code>, found struct <code>std::io::Error</code> error[E0599]: no method named <code>map_err</code>... main.rs:21:10 ^^^^^^^ method not found..."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1573585157, "creation_date": 1573585157, "answer_id": 58825026, "question_id": 58824205, "link": "https://stackoverflow.com/questions/58824205/how-do-i-recursively-delete-a-directory-using-tokio-0-1-and-async-functions/58825026#58825026", "title": "How do I recursively delete a directory using tokio 0.1 and async functions?", "body": "<p>You are using futures 0.3, which tokio 0.1 doesn't support yet. Instead, import Tokio and use its <code>prelude</code> module, which re-exports the version of <code>futures</code> that it does support:</p>\n\n<pre><code>use std::{env, path::PathBuf};\nuse tokio::prelude::*; // 0.1.22\n\ntype Error = Box&lt;dyn std::error::Error + Send + Sync&gt;;\n\nfn walk(path: PathBuf) -&gt; Box&lt;dyn Future&lt;Item = (), Error = Error&gt; + Send&gt; {\n    let task = tokio::fs::read_dir(path)\n        .flatten_stream()\n        .map_err(Error::from)\n        .for_each(|entry| {\n            let filepath = entry.path();\n            if filepath.is_dir() {\n                future::Either::A(walk(filepath))\n            } else {\n                println!(\"File: {:?}\", filepath);\n                future::Either::B(future::ok(()))\n            }\n        })\n        .inspect(|_| {\n            println!(\"All tasks done\");\n        });\n    Box::new(task)\n}\n\nfn main() -&gt; Result&lt;(), std::io::Error&gt; {\n    let args: Vec&lt;String&gt; = env::args().collect();\n    let dir = &amp;args[1];\n    let t = walk(PathBuf::from(&amp;dir)).map_err(drop);\n    tokio::run(t);\n    Ok(())\n}\n</code></pre>\n\n<p>You also need to convert the error after <code>flatten_stream</code> and cannot use <code>and_then</code> with <code>println!</code> as it doesn't return a future. Use <code>inspect</code> for side-effect debugging things.</p>\n\n<p>Idiomatically, you don't need to collect all the arguments just to use one (use <code>Iterator::nth</code>) and you don't need to require a <code>PathBuf</code> as an argument. It's unclear why you return a <code>Result</code> from <code>main</code> as it can never be an <code>Err</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a></li>\n<li><a href=\"https://stackoverflow.com/q/58739075/155423\">How do I import multiple versions of the same crate?</a></li>\n<li><a href=\"https://stackoverflow.com/q/56717139/155423\">How to async explore a directory and its sub-directories</a></li>\n</ul>\n"}], "owner": {"reputation": 351, "user_id": 6926991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6fba29a1efee35984a7395938b3cf88?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Bammer", "link": "https://stackoverflow.com/users/6926991/martin-bammer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "accepted_answer_id": 58825026, "answer_count": 1, "score": 0, "last_activity_date": 1573585157, "creation_date": 1573581512, "last_edit_date": 1573583915, "question_id": 58824205, "link": "https://stackoverflow.com/questions/58824205/how-do-i-recursively-delete-a-directory-using-tokio-0-1-and-async-functions", "title": "How do I recursively delete a directory using tokio 0.1 and async functions?", "body": "<p>I want to write a program which recursively deletes a directory with async functions in Rust 1.39.</p>\n\n<p>As a first step I have tried the following code, but it doesn't compile:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::env;\nuse failure::Error;\nuse futures::Future;\nuse std::path::PathBuf;\nuse tokio::prelude::*;\n\nfn walk(path: PathBuf) -&gt; Box&lt;dyn Future&lt;Item = (), Error = Error&gt; + Send&gt; {\n    let task = tokio::fs::read_dir(path)\n        .flatten_stream()\n        .for_each(move |entry| {\n            let filepath = entry.path();\n            if filepath.is_dir() {\n                future::Either::A(walk(filepath))\n            } else {\n                println!(\"File: {:?}\", filepath);\n                future::Either::B(future::ok(()))\n            }\n        })\n        .map_err(Error::from)\n        .and_then(|_| {\n            println!(\"All tasks done\");\n        });\n    Box::new(task)\n}\n\nfn main() -&gt; Result&lt;(), std::io::Error&gt; {\n    let args: Vec&lt;String&gt; = env::args().collect();\n    let dir = &amp;args[1];\n    let t = walk(PathBuf::from(&amp;dir)).map_err(drop);\n    tokio::run(t);\n    Ok(())\n}\n</code></pre>\n\n<p>When I run <code>cargo build</code> I get the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0220]: associated type `Item` not found for `core::future::future::Future`\n  --&gt; src\\main.rs:10:42\n   |\n10 | fn walk(path: PathBuf) -&gt; Box&lt;dyn Future&lt;Item = (), Error = Error&gt; + Send&gt; {\n   |                                          ^^^^^^^^^ associated type `Item` not found\n\nerror[E0220]: associated type `Error` not found for `core::future::future::Future`\n  --&gt; src\\main.rs:10:53\n   |\n10 | fn walk(path: PathBuf) -&gt; Box&lt;dyn Future&lt;Item = (), Error = Error&gt; + Send&gt; {\n   |                                                     ^^^^^^^^^^^^^ associated type `Error` not found\n\nerror[E0191]: the value of the associated type `Output` (from the trait `core::future::future::Future`) must be specified\n  --&gt; src\\main.rs:10:31\n   |\n10 | fn walk(path: PathBuf) -&gt; Box&lt;dyn Future&lt;Item = (), Error = Error&gt; + Send&gt; {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated type `Output` must be specified\n</code></pre>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[dependencies]\nasync-std = \"1.0.1\"\nfailure = \"0.1.6\"\nfutures = \"0.3.1\"\ntokio = \"0.1.22\"\n</code></pre>\n\n<p>Any help?</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-crates"], "owner": {"reputation": 351, "user_id": 6926991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6fba29a1efee35984a7395938b3cf88?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Bammer", "link": "https://stackoverflow.com/users/6926991/martin-bammer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 1, "closed_date": 1573563791, "answer_count": 0, "score": 1, "last_activity_date": 1573835002, "creation_date": 1573560285, "last_edit_date": 1573835002, "question_id": 58818367, "link": "https://stackoverflow.com/questions/58818367/cargo-install-async-std-fails", "closed_reason": "Duplicate", "title": "cargo install async-std fails", "body": "<p>when In run \"cargo install async-std\" on Windows with latest rust 1.39 I get the following error message:</p>\n\n<p>error: specified package 'async-std v1.0.1' has no binaries</p>\n\n<p>How can I solve this?</p>\n"}, {"tags": ["generics", "enums", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573524729, "post_id": 58810793, "comment_id": 103901398, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/32551177/155423\">\u201cExpected type parameter\u201d error in the constructor of a generic struct</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58810793/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573524854, "post_id": 58810793, "comment_id": 103901418, "body": "Your question doesn&#39;t make sense in your context; directly deserialize to an <code>Account</code> instead of using a <code>serde_json::Value</code>. Also, your code doesn&#39;t appear rational; what should happen if someone calls <code>new(&quot;id&quot;, false)</code>? How would the boolean become an ID?"}], "owner": {"reputation": 685, "user_id": 6048574, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/959c13b271fe9dcc816858f51abdb5ed?s=128&d=identicon&r=PG&f=1", "display_name": "Ukonn Ra", "link": "https://stackoverflow.com/users/6048574/ukonn-ra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 57, "favorite_count": 0, "closed_date": 1573568871, "answer_count": 0, "score": 0, "last_activity_date": 1573524671, "creation_date": 1573522553, "last_edit_date": 1573524671, "question_id": 58810793, "link": "https://stackoverflow.com/questions/58810793/is-there-any-way-to-convert-a-string-to-a-enum-with-fields-a-named-struct-enum", "closed_reason": "Duplicate", "title": "Is there any way to convert a String to a enum with fields (a named struct enum)?", "body": "<p>I have a <code>HashMap&lt;String, serde_json::Value&gt;</code>, and I want to convert it into <code>HashMap&lt;String, Attribute&gt;</code>. I want to convert a field to an <code>Attribute</code> based on the name (with a value):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Name {\n    pub first_name: String,\n    pub last_name: String,\n}\n\npub enum Attribute {\n    __Noop,\n    Name(Name),\n    Age(i32),\n    Id(String),\n}\n\nimpl Attribute {\n    fn new&lt;T&gt;(field_name: &amp;str, attrs: T) -&gt; Attribute {\n        if field_name == \"name\" {\n            Attribute::Name(attrs)\n        } else if field_name == \"age\" {\n            Attribute::Age(attrs)\n        } else if field_name == \"id\" {\n            Attribute::Id(attrs)\n        } else {\n            Attribute::__Noop\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n"}, {"tags": ["rust", "game-development", "entity-component-system"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 6272198, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Z8q.png?s=128&g=1", "display_name": "kooparse", "link": "https://stackoverflow.com/users/6272198/kooparse"}, "edited": false, "score": 0, "creation_date": 1573522388, "post_id": 58810449, "comment_id": 103900931, "body": "Oh, It&#39;s so much better with your way. Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1573519044, "creation_date": 1573519044, "answer_id": 58810449, "question_id": 58809379, "link": "https://stackoverflow.com/questions/58809379/how-to-get-values-in-a-struct-of-arrays-soa-through-a-generic-type/58810449#58810449", "title": "How to get values in a struct-of-arrays (SOA) through a generic type?", "body": "<p>You don't require any dynamic dispatch here, plain-old static dispatch should be enough.</p>\n\n<p>Create a trait which is given a reference to your container struct. Each component type implements this trait and selects the appropriate field of the container. Then, require the trait in your <code>get</code> method and use it: </p>\n\n<pre><code>struct Mesh;\nstruct Light;\n\nstruct Entities {\n    meshes: Vec&lt;Mesh&gt;,\n    lights: Vec&lt;Light&gt;,\n}\n\ntrait Example {\n    fn get_in&lt;'a&gt;(&amp;self, entities: &amp;'a Entities) -&gt; &amp;'a Self;\n}\n\nimpl Example for Mesh {\n    fn get_in&lt;'a&gt;(&amp;self, entities: &amp;'a Entities) -&gt; &amp;'a Self {\n        &amp;entities.meshes[0]\n    }\n}\n\nimpl Example for Light {\n    fn get_in&lt;'a&gt;(&amp;self, entities: &amp;'a Entities) -&gt; &amp;'a Self {\n        &amp;entities.lights[0]\n    }\n}\n\nimpl Entities {\n    fn get&lt;T: Example&gt;(&amp;self, handle: T) -&gt; &amp;T {\n        handle.get_in(self)\n    }\n}\n\nfn example(entities: &amp;Entities) {\n    let m = entities.get(Mesh);\n    let l = entities.get(Light);\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 6272198, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Z8q.png?s=128&g=1", "display_name": "kooparse", "link": "https://stackoverflow.com/users/6272198/kooparse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 58810449, "answer_count": 1, "score": 0, "last_activity_date": 1573519044, "creation_date": 1573510331, "last_edit_date": 1573517309, "question_id": 58809379, "link": "https://stackoverflow.com/questions/58809379/how-to-get-values-in-a-struct-of-arrays-soa-through-a-generic-type", "title": "How to get values in a struct-of-arrays (SOA) through a generic type?", "body": "<p>I am looking for your feedback/advice on a piece of code.</p>\n\n<p>Basically, I have a SOA like this one: </p>\n\n<pre><code>struct Entities {\n    pub meshes: FakeArena&lt;Mesh&gt;,\n    pub lights: FakeArena&lt;Light&gt;,\n}\n</code></pre>\n\n<p>I can access a particular value through his \u201chandle\u201d (every handle is bound to specific type), so I could get the value of a mesh by doing <code>entities.meshes.get(&amp;handle)</code>. </p>\n\n<p>So far, so good, but I\u2019m trying to achieve this by dynamically retrieving the value through the corresponding arena. By doing <code>entities.get(&amp;handle)</code> if the handle type is <code>Mesh</code>, I return <code>entities.meshes.get(&amp;handle)</code>. My <code>Entities</code> struct has a method called <code>get</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn get&lt;T: Any&gt;(&amp;self, handle: &amp;Handle&lt;T&gt;) -&gt; &amp;T {\n    let mut entity: Option&lt;&amp;dyn Any&gt; = None;\n    let any = handle as &amp;dyn Any;\n\n    any.downcast_ref::&lt;Handle&lt;Mesh&gt;&gt;()\n        .map(|handle| entity = Some(self.meshes.get(handle) as &amp;dyn Any));\n\n    any.downcast_ref::&lt;Handle&lt;Light&gt;&gt;()\n        .map(|handle| entity = Some(self.lights.get(handle) as &amp;dyn Any));\n\n    if entity.is_none() {\n        panic!(\"Type not found in stored entites.\");\n    }\n\n    entity\n        .unwrap()\n        .downcast_ref::&lt;T&gt;()\n        .expect(\"Error while downcasting the entity type\")\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=178301a8b93e962801194b550e22fc6b\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>This works perfectly. I downcast the generic type into a concrete one, then back again into a generic one, but it seems weird and tricky. </p>\n\n<p>Maybe I'm missing something, or maybe you have a better idea for this; what would you do? :)</p>\n"}, {"tags": ["design-patterns", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573489082, "post_id": 58804903, "comment_id": 103889772, "body": "<i>that allows a closure [...] to modify fields of the structure</i> \u2014 and what happens if the closure attempts to modify the closure itself (<code>a.closure = ...</code>)?"}, {"owner": {"reputation": 21, "user_id": 12356312, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/327fc41cdeab132f3ae078758e511188?s=128&d=identicon&r=PG&f=1", "display_name": "atsisy", "link": "https://stackoverflow.com/users/12356312/atsisy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573490436, "post_id": 58804903, "comment_id": 103890398, "body": "Therefore, in order to prevent that closure attempts to modify the closure itself, such code is prohibited in Rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573490911, "post_id": 58804903, "comment_id": 103890648, "body": "That&#39;s correct. The primary refactoring is to <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=267b2972bae7f784152a90d40a30f435\" rel=\"nofollow noreferrer\">split up your code into multiple parts</a>."}, {"owner": {"reputation": 21, "user_id": 12356312, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/327fc41cdeab132f3ae078758e511188?s=128&d=identicon&r=PG&f=1", "display_name": "atsisy", "link": "https://stackoverflow.com/users/12356312/atsisy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573491308, "post_id": 58804903, "comment_id": 103890857, "body": "OK! Thank you very much for fast answer! I&#39;m sorry for my bad English. I will rethink about my program design."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573491407, "post_id": 58804903, "comment_id": 103890908, "body": "No need to apologize for your English \u2014 you communicated your point just fine! I just tidy up almost every question / answer to help make <a href=\"https://stackoverflow.com/questions/tagged/rust\">rust</a> as good as possible."}], "owner": {"reputation": 21, "user_id": 12356312, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/327fc41cdeab132f3ae078758e511188?s=128&d=identicon&r=PG&f=1", "display_name": "atsisy", "link": "https://stackoverflow.com/users/12356312/atsisy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 84, "favorite_count": 0, "closed_date": 1573488950, "answer_count": 0, "score": 2, "last_activity_date": 1573489043, "creation_date": 1573488763, "last_edit_date": 1573489043, "question_id": 58804903, "link": "https://stackoverflow.com/questions/58804903/how-to-avoid-cannot-borrow-self-as-mutable-because-it-is-also-borrowed-as-im", "closed_reason": "Duplicate", "title": "How to avoid &#39;cannot borrow `*self` as mutable because it is also borrowed as immutable&#39; of a closure?", "body": "<p>Here is my sample code, and the compiler error beneath.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A {\n    value: i32,\n    closure: Box&lt;dyn Fn(&amp;mut Self) -&gt; ()&gt;,\n}\n\nimpl A {\n    fn call_closure(&amp;mut self) -&gt; () {\n        (self.closure)(self)\n    }\n}\n\nfn main() {\n    let _foo = A {\n        value: 0,\n        closure: Box::new(move |a: &amp;mut A| {\n            a.value = 10;\n        }),\n    };\n}\n\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*self` as mutable because it is also borrowed as immutable\n --&gt; src/main.rs:8:9\n  |\n8 |         (self.closure)(self)\n  |         --------------^^^^^^\n  |         |\n  |         mutable borrow occurs here\n  |         immutable borrow occurs here\n  |         immutable borrow later used by call\n</code></pre>\n\n<p>I understand why the compiler gives this error, but I'm hoping for code like this that allows a closure as field to modify fields of the structure.</p>\n\n<p>Are there any good ideas or designs? What is the idiomatic way here?</p>\n"}, {"tags": ["enums", "rust", "pattern-matching"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573487571, "post_id": 58804568, "comment_id": 103889035, "body": "<i>command&#39;s value is beyond the Command&#39;s range of values</i> \u2014 that&#39;s not possible, once you&#39;ve converted the number to the enum. That&#39;s rather one of the <i>points</i> of having an enum."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573487790, "post_id": 58804568, "comment_id": 103889136, "body": "@Shepmaster First of all, thank you for pointing to the existing answer (the funny thing I&#39;ve seen it, but didn&#39;t realize it was exact same case as mine). Also, yes, you&#39;re correct, I just meant the situation when the value will not match the type. Anyway, thanks! Solved!"}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573487992, "post_id": 58804568, "comment_id": 103889231, "body": "@Shepmaster also, I appreciate the edits, they are on point, improved my English skills a bit :-)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573488102, "post_id": 58804568, "comment_id": 103889299, "body": "Sure thing! I&#39;d point specifically to <a href=\"https://stackoverflow.com/a/57578431/155423\">my answer</a> as I think it&#39;s the most idiomatic and up-to-date of the answers. The key thing is that the out-of-bounds error is handled, it&#39;s just handled when converting to the enum, not afterwards."}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "closed_date": 1573487390, "answer_count": 0, "score": 1, "last_activity_date": 1573487536, "creation_date": 1573487331, "last_edit_date": 1573487536, "question_id": 58804568, "link": "https://stackoverflow.com/questions/58804568/is-it-possible-to-convert-an-integer-to-enum-and-make-an-exhaustive-match", "closed_reason": "Duplicate", "title": "Is it possible to convert an integer to enum and make an exhaustive match?", "body": "<p>My program receives commands from the user in the form of numbers: <code>let command: int</code>. That command is supposed to be one of enum values:</p>\n\n<pre><code>enum Command {\n    Launch,\n    Stop,\n}\n</code></pre>\n\n<p>How do I convert the <code>command</code> integer to a <code>Command</code> enum? Once I've converted the type from integer to enum, how do I exhaustively match that enum and handle the possibility that <code>command</code>'s value is beyond the <code>Command</code>'s range of values? Look at the code:</p>\n\n<pre><code>match command { // command has `enum Command` type here already\n    Launch =&gt; { /* ... */ }\n    Stop =&gt; { /* ... */ }\n    _ =&gt; { /* ... */ } // command is user input, so it can have any value, but Rust will yell \"unreachable pattern\" here\n}\n</code></pre>\n"}, {"tags": ["rust", "wasm-bindgen"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1573482068, "post_id": 58802542, "comment_id": 103886175, "body": "I don&#39;t know wasm_bindgen if it lets you do this but have you tried declaring <code>Foo</code> with : <code>children: Vec&lt;Child&lt;&#39;static&gt;&gt;</code>"}, {"owner": {"reputation": 382, "user_id": 11571396, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5def31ad84a650795c0aed92cb953224?s=128&d=identicon&r=PG&f=1", "display_name": "milck", "link": "https://stackoverflow.com/users/11571396/milck"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1573482726, "post_id": 58802542, "comment_id": 103886538, "body": "thanks, <code>&#39;static</code> lifetime is working. However I would prefer a way to indicate the relationship between <code>Foo.parent</code> and <code>Foo.children</code> without it, as <code>&#39;static</code> will make any struct <code>Foo</code> created make its content live forever?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1573490310, "post_id": 58802542, "comment_id": 103890326, "body": "No it just points that your lifetime argument will be <code>&#39;static</code>, this means; <code>Child</code>  has a lifetime constraint <code>&#39;a</code>, anything you bind with <code>&#39;a</code> lifetime must live in <code>&#39;a</code>. We are telling that <code>&#39;a</code> equals to <code>&#39;static</code>. In your case lifetime has just omitted, that is why it works. As a side effect if you borrow anything inside Child in <code>&#39;a</code> lifetime, it should be live in <code>&#39;static</code>. so  if you create or move some object  into <code>Child</code> you cannot borrow that object in a <code>&#39;a</code> lifetime in <code>Child</code>."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1573497368, "post_id": 58802542, "comment_id": 103893321, "body": "It looks like you have a self referential struct. Maybe <a href=\"https://crates.io/crates\" rel=\"nofollow noreferrer\"><code>rental</code></a> will help you?"}, {"owner": {"reputation": 382, "user_id": 11571396, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5def31ad84a650795c0aed92cb953224?s=128&d=identicon&r=PG&f=1", "display_name": "milck", "link": "https://stackoverflow.com/users/11571396/milck"}, "edited": false, "score": 0, "creation_date": 1573546858, "post_id": 58802542, "comment_id": 103907234, "body": "Thanks for the input, I guess my understanding of the <code>&#39;static</code> lifetime is a little bit vague, however it is a working solution for now. <code>rental</code> looks interesting, I&#39;ll take a look into it."}], "owner": {"reputation": 382, "user_id": 11571396, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5def31ad84a650795c0aed92cb953224?s=128&d=identicon&r=PG&f=1", "display_name": "milck", "link": "https://stackoverflow.com/users/11571396/milck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 184, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1573479719, "creation_date": 1573479719, "question_id": 58802542, "link": "https://stackoverflow.com/questions/58802542/how-to-get-rid-of-lifetime-in-wrapper-struct-for-wasm-bindgen", "title": "How to get rid of lifetime in wrapper struct for wasm_bindgen", "body": "<p>currently I have some code similar to the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Lifetime of child is enforced to be valid as far as Parent is valid\nstruct Child&lt;'a&gt; {\n    some_data : i32,\n    phantom_lifetime: PhantomData&lt;&amp;'a Parent&gt;\n}\n\nstruct Parent {\n\n}\n\n#[wasm_bindgen]\npub struct Foo&lt;'a&gt; {\n    parent: Parent,\n    children: Vec&lt;Child&lt;'a&gt;&gt;\n}\n</code></pre>\n\n<p>The problem now is I have to get rid of the lifetime of <code>Foo</code> because <code>wasm_bindgen</code> will not allow it.</p>\n\n<p>Intuitively the lifetime should be enforced just by the creation of the struct <code>Foo</code>. However the compiler asks me to provide the lifetime anyway.</p>\n\n<p>Anyway I have no idea how to accomplish that. Can somebody help me?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 341, "user_id": 5209012, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/530986d3be7485db72bffeea623c88b8?s=128&d=identicon&r=PG&f=1", "display_name": "deepankar", "link": "https://stackoverflow.com/users/5209012/deepankar"}, "edited": false, "score": 0, "creation_date": 1573473225, "post_id": 58800366, "comment_id": 103881846, "body": "I thought of this, but then when trying to use the struct Out, I am getting <code>borrowed value does not live long enough</code>. Updated the playground with usage. Thanks"}, {"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "reply_to_user": {"reputation": 341, "user_id": 5209012, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/530986d3be7485db72bffeea623c88b8?s=128&d=identicon&r=PG&f=1", "display_name": "deepankar", "link": "https://stackoverflow.com/users/5209012/deepankar"}, "edited": false, "score": 0, "creation_date": 1573473556, "post_id": 58800366, "comment_id": 103882004, "body": "I can&#39;t see any changes. I think you created a new playground link and still have to update the question to insert the new link."}, {"owner": {"reputation": 341, "user_id": 5209012, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/530986d3be7485db72bffeea623c88b8?s=128&d=identicon&r=PG&f=1", "display_name": "deepankar", "link": "https://stackoverflow.com/users/5209012/deepankar"}, "edited": false, "score": 0, "creation_date": 1573473760, "post_id": 58800366, "comment_id": 103882089, "body": "Yes, for now updated link is <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5b8039b27c003edd63c1e7e730af3d3d\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "reply_to_user": {"reputation": 341, "user_id": 5209012, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/530986d3be7485db72bffeea623c88b8?s=128&d=identicon&r=PG&f=1", "display_name": "deepankar", "link": "https://stackoverflow.com/users/5209012/deepankar"}, "edited": false, "score": 0, "creation_date": 1573477853, "post_id": 58800366, "comment_id": 103883975, "body": "I couldn&#39;t fix it, and I&#39;m not entirely sure why it happens either. It might even be a compiler bug. You could ask on Reddit (/r/rust) or on users.rust-lang.org. On these forums, there are people with more experience with such issues than me."}], "tags": [], "owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "is_accepted": false, "score": 1, "last_activity_date": 1573471307, "creation_date": 1573471307, "answer_id": 58800366, "question_id": 58799788, "link": "https://stackoverflow.com/questions/58799788/the-lifetime-must-be-valid-for-the-static-lifetime/58800366#58800366", "title": "the lifetime must be valid for the static lifetime", "body": "<p>I fixed it (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b19031cf8bd664c3d237a9bc27136936\" rel=\"nofollow noreferrer\">playground</a>). Here's the relevant code:</p>\n\n<pre><code>// note the lifetime!\nstruct Out&lt;'a&gt; {\n    x: Box&lt;dyn X + 'a&gt;,\n}\n\n// note the lifetime!\nimpl&lt;'a&gt; Out&lt;'a&gt; {\n    pub fn new() -&gt; Self {\n        return Out {\n            x: Box::new(A{})\n        }\n    }\n\n    pub fn get_data(&amp;'a mut self) -&gt; Box&lt;dyn Y + 'a&gt; {\n        return Box::new(B {\n            id: 1,\n            x: &amp;mut self.x,\n        })\n    }\n}\n</code></pre>\n\n<p><strong>Why is this necessary?</strong></p>\n\n<p>Trait objects always have a lifetime. If no lifetime is specified or inferred, it defaults to <code>'static</code>. Therefore you have to make <code>Out</code> generic over its lifetime and use it in the implementation.</p>\n"}], "owner": {"reputation": 341, "user_id": 5209012, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/530986d3be7485db72bffeea623c88b8?s=128&d=identicon&r=PG&f=1", "display_name": "deepankar", "link": "https://stackoverflow.com/users/5209012/deepankar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 347, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1573478409, "creation_date": 1573468848, "last_edit_date": 1573478409, "question_id": 58799788, "link": "https://stackoverflow.com/questions/58799788/the-lifetime-must-be-valid-for-the-static-lifetime", "title": "the lifetime must be valid for the static lifetime", "body": "<pre class=\"lang-rust prettyprint-override\"><code>trait X {}\n\ntrait Y {}\n\nstruct A {}\n\nimpl X for A {}\n\nstruct B&lt;'r&gt; {\n    x: &amp;'r mut Box&lt;dyn X + 'r&gt;,\n    id: i32,\n}\n\nimpl &lt;'r&gt; Y for B&lt;'r&gt; {}\n\n\nstruct Out {\n    x: Box&lt;dyn X&gt;,\n}\n\nimpl Out {\n    pub fn new() -&gt; Self {\n        return Out {\n            x: Box::new(A{})\n        }\n    }\n\n    pub fn get_data(&amp;mut self) -&gt; Box&lt;dyn Y&gt; {\n        return Box::new(B{\n            id: 1,\n            x: &amp;mut self.x\n        })\n    }\n}\n</code></pre>\n\n<p>Run it <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=89dd18dcdd6acca4397b30b2a9a591f3\" rel=\"nofollow noreferrer\">here</a> on playground.</p>\n\n<p>I am getting this note from the compiler:</p>\n\n<pre><code>note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected &amp;mut std::boxed::Box&lt;dyn X&gt;\n              found &amp;mut std::boxed::Box&lt;(dyn X + 'static)&gt;\n</code></pre>\n\n<p>I understand where static lifetime is coming from, but doesn't the same lifetime is passed to struct B during its creation which accepts any generic lifetime.</p>\n\n<p>[Edit After below answer]</p>\n\n<p>I also tried making struct Out generic but then was unable to use it after initialization.</p>\n"}, {"tags": ["algorithm", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1573466837, "post_id": 58799246, "comment_id": 103878896, "body": "<code>-2 &lt; -1</code> but <code>(-2)&#178; &gt; (-1)&#178;</code>, so the order is important."}, {"owner": {"reputation": 176, "user_id": 11152289, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Y. P", "link": "https://stackoverflow.com/users/11152289/y-p"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1573467135, "post_id": 58799246, "comment_id": 103879038, "body": "Thank you!!! Could you write it in answer? I&#39;ll choose your answer as best answer."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 7, "last_activity_date": 1573467592, "creation_date": 1573467592, "answer_id": 58799490, "question_id": 58799246, "link": "https://stackoverflow.com/questions/58799246/i-cannot-understand-the-difference-of-the-rust-code/58799490#58799490", "title": "I cannot understand the difference of the Rust code", "body": "<p>Most likely some inputs contain negative numbers, for which the order does matter. Eg. <code>-2 &lt; -1</code>, but <code>(-2)\u00b2 &gt; (-1)\u00b2</code>.</p>\n"}], "owner": {"reputation": 176, "user_id": 11152289, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Y. P", "link": "https://stackoverflow.com/users/11152289/y-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 58799490, "answer_count": 1, "score": 1, "last_activity_date": 1573467592, "creation_date": 1573466626, "question_id": 58799246, "link": "https://stackoverflow.com/questions/58799246/i-cannot-understand-the-difference-of-the-rust-code", "title": "I cannot understand the difference of the Rust code", "body": "<p>I'm trying to solve this problem in codewars.\n<a href=\"https://www.codewars.com/kata/are-they-the-same/\" rel=\"nofollow noreferrer\">https://www.codewars.com/kata/are-they-the-same/</a></p>\n\n<p>I wrote the following code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn comp(mut a: Vec&lt;i64&gt;, mut b: Vec&lt;i64&gt;) -&gt; bool {\n    a.sort();\n    b.sort();\n    a = a.iter().map(|x| x * x).collect();\n\n    a == b\n}\n</code></pre>\n\n<p>The judge system says there is an input that my code returns false but should be true. I cannot understand what is the problem.</p>\n\n<p>I saw answers of other people who passed all tests. This is the one of them.</p>\n\n<pre><code>fn comp(a: Vec&lt;i64&gt;, b: Vec&lt;i64&gt;) -&gt; bool {\n    let mut a1 = a.iter().map(|&amp;x| x * x).collect::&lt;Vec&lt;_&gt;&gt;(); \n    let mut a2 = b;\n    a1.sort();\n    a2.sort();\n    a1 == a2\n}\n</code></pre>\n\n<p>The order of squaring and sorting is important?</p>\n"}, {"tags": ["testing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 167, "user_id": 3476782, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/acbe12984717840f403a936e1e55835a?s=128&d=identicon&r=PG&f=1", "display_name": "1I1III1", "link": "https://stackoverflow.com/users/3476782/1i1iii1"}, "edited": false, "score": 0, "creation_date": 1573489773, "post_id": 58803926, "comment_id": 103890087, "body": "I realize the boundary was already broken in my C code, I was just hoping there was a better way to do it. I like the verification strategy instead of random inputs because it feels like a stronger guarantee that the output is always going to be correct, as opposed to random inputs which might miss something. Especially with computational geometry stuff, it&#39;s easy to miss colinearity edge cases for example. <code>debug_assertions</code> might be the way to go for me, thanks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 167, "user_id": 3476782, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/acbe12984717840f403a936e1e55835a?s=128&d=identicon&r=PG&f=1", "display_name": "1I1III1", "link": "https://stackoverflow.com/users/3476782/1i1iii1"}, "edited": false, "score": 0, "creation_date": 1573490151, "post_id": 58803926, "comment_id": 103890241, "body": "@user3476782 frankly, I don&#39;t follow how your usage is substantially different from arbitrary / randomized testing. You are relying on whatever values trickle in from a higher level of your code to drive your assertion. I especially don&#39;t get how your style guarantees that the <i>output</i> is correct, compared to property-based testing. Both approaches rely on what input comes in to the function and the implementation of the testing oracle. Note that property-based testing doesn&#39;t have to be <b>random</b> \u2014 you can configure it to explore whatever search space is useful."}, {"owner": {"reputation": 167, "user_id": 3476782, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/acbe12984717840f403a936e1e55835a?s=128&d=identicon&r=PG&f=1", "display_name": "1I1III1", "link": "https://stackoverflow.com/users/3476782/1i1iii1"}, "edited": false, "score": 0, "creation_date": 1573490394, "post_id": 58803926, "comment_id": 103890370, "body": "It doesn&#39;t help you guarantee that it will work on all inputs, but at least if your code fails somewhere, the debugger stops in the right place because of the broken assumption. It especially makes it easier to track down the source of logical errors."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1573490593, "last_edit_date": 1573490593, "creation_date": 1573484860, "answer_id": 58803926, "question_id": 58798678, "link": "https://stackoverflow.com/questions/58798678/how-do-i-perform-brute-force-function-verification-inside-a-function-when-runnin/58803926#58803926", "title": "How do I perform brute force function verification inside a function when running Rust tests?", "body": "<blockquote>\n  <p>it feels like I would be breaking the test/production barrier.</p>\n</blockquote>\n\n<p>Yes, but I don't get why you are concerned about this; your existing code <em>already</em> breaks that boundary. You can use <a href=\"https://doc.rust-lang.org/std/macro.debug_assert.html\" rel=\"nofollow noreferrer\"><code>debug_assert</code></a> and friends to ensure that the function is only called and verified when debug assertions are enabled. If you want to be doubly-sure, you can use <code>cfg(debug_assertions)</code> to only define your slow function then as well:</p>\n\n<pre><code>pub fn add(a: i32, b: i32) -&gt; i32 {\n    let fast = fast_but_tricky(a, b);\n    debug_assert_eq!(fast, slow_but_right(a, b));\n    fast\n}\n\nfn fast_but_tricky(a: i32, b: i32) -&gt; i32 {\n    a + a + b - a\n}\n\n#[cfg(debug_assertions)]\nfn slow_but_right(a: i32, b: i32) -&gt; i32 {\n    a + b\n}\n</code></pre>\n\n<hr>\n\n<p>I don't like this solution. I prefer to keep the testing code more distinct from the production code. What I do instead is use <em>property-based testing</em> to help ensure that my tests cover what is important. I've used <a href=\"https://crates.io/crates/proptest\" rel=\"nofollow noreferrer\">proptest</a> to...</p>\n\n<ul>\n<li><a href=\"https://github.com/shepmaster/twox-hash/blob/v1.5.0/comparison/src/lib.rs#L51-L57\" rel=\"nofollow noreferrer\">Compare a Rust implementation against C</a></li>\n<li><a href=\"https://github.com/shepmaster/jetscii/blob/v0.4.4/src/simd.rs#L388-L397\" rel=\"nofollow noreferrer\">Compare a SIMD implementation against standard</a></li>\n</ul>\n\n<p>I usually take any cases that are found and create dedicated unit tests for them.</p>\n\n<p>In this case, the proptest might look like:</p>\n\n<pre><code>pub fn add(a: i32, b: i32) -&gt; i32 {\n    // fast but tricky\n    a + a + b - a\n}\n\n#[cfg(test)]\nmod test {\n    use super::*;\n    use proptest::{proptest, prop_assert_eq};\n\n    fn slow_but_right(a: i32, b: i32) -&gt; i32 {\n        a + b\n    }\n\n    proptest! {\n        #[test]\n        fn same_as_slow_version(a: i32, b: i32) {\n            prop_assert_eq!(add(a, b), slow_but_right(a, b));\n        }\n    }\n}\n</code></pre>\n\n<p>Which finds an error with my \"clever\" implementation in less than a tenth of a second:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'test::same_as_slow_version' panicked at 'Test failed: attempt to add with overflow; minimal failing\ninput: a = 375403587, b = 1396676474\n</code></pre>\n"}], "owner": {"reputation": 167, "user_id": 3476782, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/acbe12984717840f403a936e1e55835a?s=128&d=identicon&r=PG&f=1", "display_name": "1I1III1", "link": "https://stackoverflow.com/users/3476782/1i1iii1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 58803926, "answer_count": 1, "score": 1, "last_activity_date": 1573490593, "creation_date": 1573464503, "last_edit_date": 1573484126, "question_id": 58798678, "link": "https://stackoverflow.com/questions/58798678/how-do-i-perform-brute-force-function-verification-inside-a-function-when-runnin", "title": "How do I perform brute force function verification inside a function when running Rust tests?", "body": "<p>When I'm testing functions that have an obvious, slower, brute-force alternative, I've often found it helpful to write both functions, and verify that the outputs match when debugging flags are on. In C, it might look something like this:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;inttypes.h&gt;\n#include &lt;stdio.h&gt;\n\n#ifdef NDEBUG\n#define _rsqrt rsqrt\n#else\n#include &lt;assert.h&gt;\n#include &lt;math.h&gt;\n#endif\n\n// https://en.wikipedia.org/wiki/Fast_inverse_square_root\nfloat _rsqrt(float number) {\n    const float x2 = number * 0.5F;\n    const float threehalfs = 1.5F;\n\n    union {\n        float f;\n        uint32_t i;\n    } conv = {number}; // member 'f' set to value of 'number'.\n    // approximation via Newton's method\n    conv.i = 0x5f3759df - (conv.i &gt;&gt; 1);\n    conv.f *= (threehalfs - (x2 * conv.f * conv.f));\n    return conv.f;\n}\n\n\n#ifndef NDEBUG\nfloat rsqrt(float number) {\n    float res = _rsqrt(number);\n    // brute force solution to verify\n    float correct = 1 / sqrt(number);\n    // make sure the approximation is within 1% of correct\n    float err = fabs(res - correct) / correct;\n    assert(err &lt; 0.01);\n    // for exposition sake: large scale systems would verify quietly\n    printf(\"DEBUG: rsqrt(%f) -&gt; %f error\\n\", number, err);\n    return res;\n}\n#endif\n\nfloat graphics_code() {\n    // graphics code that invokes rsqrt a bunch of different ways\n    float total = 0;\n    for (float i = 1; i &lt; 10; i++)\n        total += rsqrt(i);\n    return total;\n}\n\nint main(int argc, char *argv[]) {\n    printf(\"%f\\n\", graphics_code());\n    return 0;\n}\n\n</code></pre>\n\n<p>and execution might look like this (if the above code is in tmp.c):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ clang tmp.c -o tmp -lm &amp;&amp; ./tmp # debug mode\nDEBUG: rsqrt(1.000000) -&gt; 0.001693 error\nDEBUG: rsqrt(2.000000) -&gt; 0.000250 error\nDEBUG: rsqrt(3.000000) -&gt; 0.000872 error\nDEBUG: rsqrt(4.000000) -&gt; 0.001693 error\nDEBUG: rsqrt(5.000000) -&gt; 0.000162 error\nDEBUG: rsqrt(6.000000) -&gt; 0.001389 error\nDEBUG: rsqrt(7.000000) -&gt; 0.001377 error\nDEBUG: rsqrt(8.000000) -&gt; 0.000250 error\nDEBUG: rsqrt(9.000000) -&gt; 0.001140 error\n4.699923\n$ clang tmp.c -o tmp -lm -O3 -DNDEBUG &amp;&amp; ./tmp # production mode\n4.699923\n</code></pre>\n\n<p>I like to do this in addition to unit and integration tests because it makes the source of a lot of errors more obvious. It will catch boundary cases that I may have forgotten to unit test, and will naturally expand to the scope to whatever more complex cases I may need in the future (e.g. if the light settings change and I need accuracy for much higher values).</p>\n\n<p>I'm learning Rust, and I really like the natively established separation of interests between testing and production code. I'm trying to do something similar to the above, but can't figure out what the best way to do it is. From what I gather in <a href=\"https://users.rust-lang.org/t/ifdef-like-feature/1753/13\" rel=\"nofollow noreferrer\">this thread</a>, I could probably do it with some combination of <code>macro_rules!</code> and <code>#[cfg!( ... )]</code> in the source code, but it feels like I would be breaking the test/production barrier. Ideally I would like to be able to just drop a verification wrapper in around the already defined function, but only for testing. Are macros and <code>cfg</code> my best option here? Can I redefine the default namespace for the imported package just when testing, or do something more clever with macros? I understand that normally files shouldn't be able to modify how imports are linked, but is there an exception for testing? What if I also want it to be wrapped if the module importing it is being tested?</p>\n\n<p>I'm also open to the response that this is a bad way to do testing/verification, but please address the advantages I mentioned above. (Or as a bonus, is there a way the C code can be improved?)</p>\n\n<p>If this isn't currently possible, is it a reasonable thing to go into a feature request?</p>\n"}, {"tags": ["reflection", "rust", "json-api"], "comments": [{"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1573447854, "post_id": 58794804, "comment_id": 103872505, "body": "Why do you need to &quot;extract all of the attribute fields and put them into a HashMap&quot;?"}, {"owner": {"reputation": 685, "user_id": 6048574, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/959c13b271fe9dcc816858f51abdb5ed?s=128&d=identicon&r=PG&f=1", "display_name": "Ukonn Ra", "link": "https://stackoverflow.com/users/6048574/ukonn-ra"}, "reply_to_user": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1573453764, "post_id": 58794804, "comment_id": 103873919, "body": "@PitaJ, because in specification, <code>attributes</code> field is a HashMap, so I have to do that."}], "owner": {"reputation": 685, "user_id": 6048574, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/959c13b271fe9dcc816858f51abdb5ed?s=128&d=identicon&r=PG&f=1", "display_name": "Ukonn Ra", "link": "https://stackoverflow.com/users/6048574/ukonn-ra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 465, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1573438815, "creation_date": 1573438815, "question_id": 58794804, "link": "https://stackoverflow.com/questions/58794804/how-to-design-a-map-which-can-be-sorted-based-on-one-of-the-values", "title": "How to design a Map which can be sorted based on one of the values?", "body": "<h2>Why this question exists?</h2>\n\n<p>I am writing <a href=\"https://github.com/UkonnRa/rabbithole-rs\" rel=\"nofollow noreferrer\">rabbithole-rs</a>, which is a JSON:API implementation based on Rust.\nBut while designing the sorting/pagination features, I meet a big problem on on designing the <code>attribute</code> fields.</p>\n\n<h3>Intro JSON:API soring/pagination briefly</h3>\n\n<p>There is a <code>attributes</code> fields in JSON:API's <code>resource</code> object, which is a <code>HashMap&lt;String, serde_json::Value&gt;</code> or <code>HashMap&lt;String, Box&lt;Any&gt;&gt;</code>,\nwhere the key is <em>attribute name</em>, and the value is the attribute's value.</p>\n\n<p>And <code>Vec&lt;Resource&gt;</code> object has a <code>sort(attribute_name: &amp;str)</code> method, which can sort a bunch of <code>Resource</code> based on one of the attribute.</p>\n\n<h3>A brief layout of <code>Resource</code></h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Resource {\n    pub ty: String, // The type of `Resource`, `sort` method can only effect on the same type of resources\n    pub id: String, // Every `Resource` has an unique id\n    pub attr1: dyn Ord + Serialize + Deserialize,\n    ... &lt;more attrs&gt;\n}\n</code></pre>\n\n<p>Where:</p>\n\n<ul>\n<li>Each <code>attr</code> should implement at least three traits:\n\n<ul>\n<li><code>Ord</code> to compare</li>\n<li><code>Serialize</code> to convert into <code>serde_json::Value</code></li>\n<li><code>Deserialize</code> to convert from <code>serde_json::Value</code></li>\n</ul></li>\n</ul>\n\n<h2>What the problem is?</h2>\n\n<p>When getting a <code>Resource</code>, I have to extract all of the <code>attribute</code> fields and put them into a <code>HashMap</code>, like:\n<code>HashMap&lt;String, serde_json::Value&gt;</code> or <code>HashMap&lt;String, Box&lt;Any&gt;&gt;</code>.\nBut both of them lose the trait info of the attributes, so I cannot compare two attribute item with the same name.</p>\n\n<h2>A brief demo, please!</h2>\n\n<p>Sure! Here you go!</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate serde_derive;\n\nuse serde::{Deserialize, Serialize};\nuse std::any::Any;\nuse std::collections::HashMap;\n\n/// This is a struct field\n#[derive(Debug, Serialize, Deserialize, Ord, PartialOrd, PartialEq, Eq)]\npub struct Name {\n    pub first_name: String,\n    pub last_name: String,\n}\n\n/// Resource object\n#[derive(Debug, Serialize, Deserialize, Ord, PartialOrd, PartialEq, Eq)]\npub struct Resource {\n    pub ty: String,\n    pub id: String,\n    pub age: i32, // attr 1\n    pub name: Name, // another attr\n}\n\nfn main() {\n    let item1 = Resource {\n        ty: \"human\".into(),\n        id: \"id1\".to_string(),\n        age: 1,\n        name: Name {\n            first_name: \"first1\".to_string(),\n            last_name: \"last1\".to_string(),\n        },\n    };\n\n    // **This is the first attributes HashMap**\n    let mut map_item1: HashMap&lt;&amp;str, (&amp;str, Box&lt;dyn Any&gt;)&gt; = Default::default();\n    map_item1.insert(\"age\", (\"i32\", Box::new(item1.age)));\n    map_item1.insert(\"name\", (\"Name\", Box::new(item1.name)));\n\n    let item2 = Resource {\n        ty: \"human\".into(),\n        id: \"id2\".to_string(),\n        age: 2,\n        name: Name {\n            first_name: \"first2\".to_string(),\n            last_name: \"last2\".to_string(),\n        },\n    };\n\n    // **This is the second attributes HashMap**\n    let mut map_item2: HashMap&lt;&amp;str, (&amp;str, Box&lt;dyn Any&gt;)&gt; = Default::default();\n    map_item2.insert(\"age\", (\"i32\", Box::new(item2.age)));\n    map_item2.insert(\"name\", (\"Name\", Box::new(item2.name)));\n\n    // TODO: NEED TO BE IMPLEMENTED\n    for k in map_item1.keys() {\n        println!(\n            \"key: {key}, item1.{key} &lt; item2.{key}? {res}\",\n            key = k,\n            res = map_item1.get(k).unwrap().1.cmp(map_item2.get(k).unwrap().1)\n        )\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "raspberry-pi", "rust-cargo"], "comments": [{"owner": {"reputation": 677, "user_id": 7804910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xFJHR.jpg?s=128&g=1", "display_name": "Victor Deleau", "link": "https://stackoverflow.com/users/7804910/victor-deleau"}, "edited": false, "score": 0, "creation_date": 1573428223, "post_id": 58793588, "comment_id": 103869322, "body": "You can use triple apostrophe &#39;&#39;&#39; my code &#39;&#39;&#39; to display your code nicely in your question"}, {"owner": {"reputation": 677, "user_id": 7804910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xFJHR.jpg?s=128&g=1", "display_name": "Victor Deleau", "link": "https://stackoverflow.com/users/7804910/victor-deleau"}, "edited": false, "score": 3, "creation_date": 1573428359, "post_id": 58793588, "comment_id": 103869356, "body": "Did you used the flag <b>PKG_CONFIG_ALLOW_CROSS=1</b> before the command <b>cargo build --target=armv7-unknown-linux-gnueabihf</b>, as suggested by the compiler ?"}], "owner": {"reputation": 69, "user_id": 7277708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/947c13b89a9a1eee8cbb59408a716c6b?s=128&d=identicon&r=PG&f=1", "display_name": "smolus", "link": "https://stackoverflow.com/users/7277708/smolus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 142, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1573459831, "creation_date": 1573425735, "last_edit_date": 1573459831, "question_id": 58793588, "link": "https://stackoverflow.com/questions/58793588/compiling-rust-with-cpal-for-raspberry-pi", "title": "Compiling rust with cpal for raspberry pi", "body": "<p>Ok so all I want to do is write an audio application for my <a href=\"https://www.raspberrypi.org/\" rel=\"nofollow noreferrer\">raspberry pi</a>. When I compiled a simple \"hello world\" for raspberry everything worked great but when i introduced <a href=\"https://github.com/RustAudio/cpal\" rel=\"nofollow noreferrer\">cpal</a> as a dependency i got this error after\n<code>cargo build --target=armv7-unknown-linux-gnueabihf</code></p>\n\n<pre><code>error: failed to run custom build command for `alsa-sys v0.1.2`\n\nCaused by:\n  process didn't exit successfully: `/home/kuba/Projects/effect-box/hello-pi/target/debug/build/alsa-sys-967340f82a5fa569/build-script-build` (exit code: 101)\n--- stderr\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: \"Cross compilation detected. Use PKG_CONFIG_ALLOW_CROSS=1 to override\"', src/libcore/result.rs:1084:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n</code></pre>\n\n<p>Its been a week and I got nothing. I feel like I've tried everything. <br>\nWhat couses this error and how can I fix it?\n<br><br>\nBackground info: my os is <a href=\"https://elementary.io/\" rel=\"nofollow noreferrer\">elementary os</a> (it is based on ubuntu so most things that work on ubuntu should work here too) and the code i'm trying to compile is this:</p>\n\n<pre><code>use cpal::traits::{DeviceTrait, HostTrait};\n\nfn main() {\n    let host = cpal::default_host();\n    let device = host\n        .default_output_device()\n        .expect(\"no default output device\");\n    let format = device\n        .default_output_format()\n        .expect(\"failed to get device name\");\n    println!(\"{:?}\", format);\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>EDIT:\nThanks to Victor Deleau I added an enviroment variable PKG_CONFIG_ALLOW_CROSS=1. Now I'm getting this message:\n<code>error: linking with `cc` failed: exit code: 1</code>\nfollowed by this huge error <a href=\"https://pastebin.com/raw/ghHgpesV\" rel=\"nofollow noreferrer\">https://pastebin.com/raw/ghHgpesV</a></p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 619, "user_id": 13676619, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GhogPjp6VWEyMWFKcJHQzToXxqf46QHi-up4kD67vM=k-s128", "display_name": "Thomas Breydo", "link": "https://stackoverflow.com/users/13676619/thomas-breydo"}, "is_accepted": true, "score": 2, "last_activity_date": 1592165884, "creation_date": 1592165884, "answer_id": 62377729, "question_id": 58793459, "link": "https://stackoverflow.com/questions/58793459/how-can-i-remove-rust-cargo-from-my-path-after-installing-rust/62377729#62377729", "title": "How can I remove rust cargo from my PATH after installing rust", "body": "<p>I struggled with the same issue for <em>months</em> until I finally found what was going on. Cargo is automatically added to your path in the <code>~/.zprofile</code> file, with the line <code>export PATH=\"$HOME/.cargo/bin:$PATH\"</code>. <strong>Removing this line fixes the issue.</strong> </p>\n\n<p>I hope this helps whoever was searching for this answer because I didn't find one anywhere. \ud83d\ude42</p>\n"}], "owner": {"reputation": 370, "user_id": 2117591, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/c115aed6f8fb4e64009bc7fe7bae2ab0?s=128&d=identicon&r=PG", "display_name": "Imaxd", "link": "https://stackoverflow.com/users/2117591/imaxd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 0, "accepted_answer_id": 62377729, "answer_count": 1, "score": 2, "last_activity_date": 1592165884, "creation_date": 1573424301, "question_id": 58793459, "link": "https://stackoverflow.com/questions/58793459/how-can-i-remove-rust-cargo-from-my-path-after-installing-rust", "title": "How can I remove rust cargo from my PATH after installing rust", "body": "<p>I have <code>~/.cargo/bin</code> in $PATH since I installed rust and cargo using <code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh</code>. I can't find where <code>.cargo/bin</code> is added to my PATH anywhere (my default shell is zsh). I want to remove it from my PATH. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 181, "user_id": 694705, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/K5AND.jpg?s=128&g=1", "display_name": "glasfl&#252;gel", "link": "https://stackoverflow.com/users/694705/glasfl%c3%bcgel"}, "edited": false, "score": 0, "creation_date": 1573423041, "post_id": 58793168, "comment_id": 103868221, "body": "Thanks, that&#39;s exactly what I searched for!"}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1573431577, "post_id": 58793168, "comment_id": 103869840, "body": "I might clarify in your answer that by &quot;normal pointer&quot; you mean a reference, to help disambiguate things"}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 8, "last_activity_date": 1593022085, "last_edit_date": 1593022085, "creation_date": 1573421940, "answer_id": 58793168, "question_id": 58792928, "link": "https://stackoverflow.com/questions/58792928/how-to-compare-two-pointers/58793168#58793168", "title": "How to compare two pointers?", "body": "<p>When you compare pointers you are actually comparing the values pointed by those. This is because there are a lot of implementations in <code>std</code> of the type:</p>\n<pre><code>impl&lt;'_, '_, A, B&gt; PartialEq&lt;&amp;'_ B&gt; for &amp;'_ A\nwhere\n    A: PartialEq&lt;B&gt; + ?Sized,\n    B: ?Sized,\n</code></pre>\n<p>that do exactly that.</p>\n<p>If you want to compare the pointers themselves you can use <a href=\"https://doc.rust-lang.org/std/ptr/fn.eq.html\" rel=\"nofollow noreferrer\"><code>std::ptr::eq</code></a>:</p>\n<pre><code>pub fn eq&lt;T: ?Sized&gt;(a: *const T, b: *const T) -&gt; bool\n</code></pre>\n<p>Note that even though it takes raw pointers, it is safe because it does not dereference the pointers. Since there is an automatic coercion from a reference to a raw pointer, you can use:</p>\n<pre><code>if std::ptr::eq(item, test.last().unwrap()) {\n    println!(&quot;Last item!&quot;);\n}\n</code></pre>\n"}], "owner": {"reputation": 181, "user_id": 694705, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/K5AND.jpg?s=128&g=1", "display_name": "glasfl&#252;gel", "link": "https://stackoverflow.com/users/694705/glasfl%c3%bcgel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 0, "accepted_answer_id": 58793168, "answer_count": 1, "score": 2, "last_activity_date": 1593022085, "creation_date": 1573419961, "last_edit_date": 1593021966, "question_id": 58792928, "link": "https://stackoverflow.com/questions/58792928/how-to-compare-two-pointers", "title": "How to compare two pointers?", "body": "<p>I want to compare two pointers within this loop:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct Test {\n    first: i32,\n    second: i32\n}\n\nfn main() {\n    let test = vec![Test {first: 1, second: 2}, Test {first: 3, second: 4}, Test {first: 5, second: 6}];\n\n    for item in test.iter() {\n        println!(&quot;---                  {:?}&quot;, item);\n        println!(&quot;item                 {:p}&quot;, item);\n        println!(&quot;test.last().unwrap() {:p}&quot;, test.last().unwrap());\n\n        //  if item == test.last().unwrap() {\n        //      println!(&quot;Last item!&quot;);\n        //  }\n    }\n}\n</code></pre>\n<p>The <code>println</code> gives me the same addresses:</p>\n<pre class=\"lang-none prettyprint-override\"><code>---                  Test { first: 1, second: 2 }\nitem                 0x563caaf3bb40\ntest.last().unwrap() 0x563caaf3bb50\n---                  Test { first: 3, second: 4 }\nitem                 0x563caaf3bb48\ntest.last().unwrap() 0x563caaf3bb50\n---                  Test { first: 5, second: 6 }\nitem                 0x563caaf3bb50\ntest.last().unwrap() 0x563caaf3bb50\n</code></pre>\n<p>But when I uncomment the <code>if</code> statement the following error is thrown:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `==` cannot be applied to type `&amp;Test`\n  --&gt; src/main.rs:20:17\n   |\n20 |         if item == test.last().unwrap() {\n   |            ---- ^^ -------------------- &amp;Test\n   |            |\n   |            &amp;Test\n   |\n   = note: an implementation of `std::cmp::PartialEq` might be missing for `&amp;Test`\n</code></pre>\n<p>How can I compare only the two pointers?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 155, "user_id": 1904497, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/STG9Y.jpg?s=128&g=1", "display_name": "ksceriath", "link": "https://stackoverflow.com/users/1904497/ksceriath"}, "edited": false, "score": 0, "creation_date": 1573405229, "post_id": 58790477, "comment_id": 103863488, "body": "What if we wanted to modify the value, such that ordering does not change? Maybe ordering is governed by some key attribute, and we want to modify some satellite value.."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1573407143, "post_id": 58790477, "comment_id": 103864031, "body": "Note that the word <i>safe</i> has a very specific meaning in Rust. Changing the order of a keyed value in an ordered container is actually <i>safe</i>, but it is a logical error. That is, doing that you will not get a memory corruption or anything unsafe, but you may get an empty container or something."}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "reply_to_user": {"reputation": 155, "user_id": 1904497, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/STG9Y.jpg?s=128&g=1", "display_name": "ksceriath", "link": "https://stackoverflow.com/users/1904497/ksceriath"}, "edited": false, "score": 0, "creation_date": 1573431155, "post_id": 58790477, "comment_id": 103869778, "body": "@ksceriath for that, you could use a type supporting interior mutability (i.e. <code>Cell</code>, <code>RefCell</code>, <code>Mutex</code>, etc) to allow mutating a specific field when you don&#39;t have a mutable reference. You would also want to make sure you manually implement <code>PartialOrd</code>/<code>Ord</code> for the type, as deriving it will use all fields - even the ones you&#39;d be mutating."}], "tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 5, "last_activity_date": 1573431185, "last_edit_date": 1573431185, "creation_date": 1573402133, "answer_id": 58790477, "question_id": 58790368, "link": "https://stackoverflow.com/questions/58790368/updating-structs-inside-a-btreeset/58790477#58790477", "title": "Updating structs inside a BTreeSet", "body": "<p>It's not safe (in terms of program logic) to modify objects in a <code>BTreeSet</code> such that their ordering changes, as doing so would break the internal structure of the set - here's a snippet from the <a href=\"https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html\" rel=\"nofollow noreferrer\">relevant documentation</a>:</p>\n\n<blockquote>\n  <p>It is a logic error for an item to be modified in such a way that the item's ordering relative to any other item, as determined by the Ord trait, changes while it is in the set. This is normally only possible through Cell, RefCell, global state, I/O, or unsafe code.</p>\n</blockquote>\n\n<p>I don't know your exact use case, but since you seem to be using key-value pairs, a <a href=\"https://doc.rust-lang.org/stable/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\">HashMap</a> or <a href=\"https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html\" rel=\"nofollow noreferrer\">BTreeMap</a> may work here: They don't allow you to mutate the keys for the same reason, but the values associated with the keys may be mutated.</p>\n"}, {"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 2, "last_activity_date": 1593020618, "last_edit_date": 1593020618, "creation_date": 1573406952, "answer_id": 58791191, "question_id": 58790368, "link": "https://stackoverflow.com/questions/58790368/updating-structs-inside-a-btreeset/58791191#58791191", "title": "Updating structs inside a BTreeSet", "body": "<p>If you want to mutate something that Rust does not let you to mutate, you use a <code>RefCell</code>. Something like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7363ad924b8c5cc16afb944149e3176d\" rel=\"nofollow noreferrer\">this</a>:</p>\n<pre><code>struct X {\n    key: String,\n    val: RefCell&lt;Option&lt;i32&gt;&gt;,\n}\n</code></pre>\n<p>Then, to create the value:</p>\n<pre><code>X {\n    key: &quot;some string&quot;.to_owned(),\n    val: RefCell::new(Some(1)),\n}\n</code></pre>\n<p>And to mutate it:</p>\n<pre><code>fn nonify(set: &amp;mut BTreeSet&lt;X&gt;, k: String) {\n    for s in set.iter() {\n        if s.key == k {\n            *s.val.borrow_mut() = None;\n        }\n    }\n}\n</code></pre>\n<p>But note that, as <a href=\"https://stackoverflow.com/a/58790477/2766908\">apemanzilla warned in their answer</a>, you should not mutate the objects such that their order is changed.</p>\n"}], "owner": {"reputation": 155, "user_id": 1904497, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/STG9Y.jpg?s=128&g=1", "display_name": "ksceriath", "link": "https://stackoverflow.com/users/1904497/ksceriath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "accepted_answer_id": 58790477, "answer_count": 2, "score": -1, "last_activity_date": 1593020618, "creation_date": 1573401478, "last_edit_date": 1593020378, "question_id": 58790368, "link": "https://stackoverflow.com/questions/58790368/updating-structs-inside-a-btreeset", "title": "Updating structs inside a BTreeSet", "body": "<p>I would like to modify structs inside a <code>BTreeSet</code>.</p>\n<p>I want to achieve something like the following <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d21776b173fcb6f11e1724f009b2804c\" rel=\"nofollow noreferrer\">here</a>:</p>\n<pre><code>use std::collections::BTreeSet;\n\n#[derive(Eq, PartialEq, Ord, PartialOrd, Debug)]\nstruct X {\n    key: String,\n    val: Option&lt;i32&gt;,\n}\n\nfn main() {\n    let mut set: BTreeSet&lt;X&gt; = BTreeSet::new();\n    set.insert(X {\n        key: &quot;a&quot;.to_string(),\n        val: Some(1),\n    });\n    set.insert(X {\n        key: &quot;b&quot;.to_string(),\n        val: Some(1),\n    });\n    \n    nonify(&amp;mut set, &quot;a&quot;.to_string());\n    println!(&quot;{:?}&quot;, set);\n}\n\nfn nonify(set: &amp;mut BTreeSet&lt;X&gt;, k: String) {\n    for mut s in set.iter() {\n        if s.key == k {\n            s.val = None;\n        }\n    }\n}\n</code></pre>\n<p>This does not work because <code>s</code> is not a mutable reference.</p>\n<p>How do I accomplish something like this?</p>\n"}, {"tags": ["c", "rust", "linker-errors"], "comments": [{"owner": {"reputation": 66560, "user_id": 9072753, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EPmGy.jpg?s=128&g=1", "display_name": "KamilCuk", "link": "https://stackoverflow.com/users/9072753/kamilcuk"}, "edited": false, "score": 0, "creation_date": 1573394925, "post_id": 58789034, "comment_id": 103860738, "body": "<code>CObject.o</code> is a static library or a object file? Try to change the order of <code>.o</code> files."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573402723, "post_id": 58789034, "comment_id": 103862817, "body": "<code>opts.c</code> is <a href=\"https://github.com/dagwieers/vsftpd/blob/master/opts.c\" rel=\"nofollow noreferrer\">this file</a>? Can you show what the new Rust versions looks like?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1573422490, "post_id": 58789034, "comment_id": 103868110, "body": "Note that your CObject.o has symbols such as <code>str_upper</code> while your error talks of <code>str_upper(mystr*)</code>, and those are not the same, maybe you are forgetting the <code>#[no_mangle]</code>?"}, {"owner": {"reputation": 11, "user_id": 12350990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72bc1596067c476156bed26a55a3ca82?s=128&d=identicon&r=PG&f=1", "display_name": "NoobieProgrammer", "link": "https://stackoverflow.com/users/12350990/noobieprogrammer"}, "edited": false, "score": 0, "creation_date": 1573569522, "post_id": 58789034, "comment_id": 103918740, "body": "Thank you for the suggestions guys, but the problem was with <code>rust bindgen</code> converting the <code>.h</code> files. It converted the function declaration from <code>void str_upper(struct mystr* p_str);</code> to <code># [link_name = &quot;\\u{1}_Z9str_upperP5mystr&quot;]  pub fn str_upper (p_str : *mut mystr) ;</code>. Then <code>clang</code> was trying to search for a function named <code>_Z9str_upperP5mystr</code>, causing the undefined reference error."}, {"owner": {"reputation": 11, "user_id": 12350990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72bc1596067c476156bed26a55a3ca82?s=128&d=identicon&r=PG&f=1", "display_name": "NoobieProgrammer", "link": "https://stackoverflow.com/users/12350990/noobieprogrammer"}, "edited": false, "score": 0, "creation_date": 1573569567, "post_id": 58789034, "comment_id": 103918763, "body": "Removing the <code>#[link_name = &quot;\\u{1}_Z9str_upperP5mystr&quot;]</code> part solved the problem."}], "owner": {"reputation": 11, "user_id": 12350990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72bc1596067c476156bed26a55a3ca82?s=128&d=identicon&r=PG&f=1", "display_name": "NoobieProgrammer", "link": "https://stackoverflow.com/users/12350990/noobieprogrammer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1573391789, "creation_date": 1573391789, "question_id": 58789034, "link": "https://stackoverflow.com/questions/58789034/porting-vsftpd-to-rust", "title": "Porting vsftpd to Rust", "body": "<p>I'm porting a part of the vsftpd FTP server to Rust for my project. <a href=\"https://security.appspot.com/vsftpd.html\" rel=\"nofollow noreferrer\">vsftpd Homepage</a></p>\n\n<p>I have rewritten the <code>opts.c</code> file as <code>opts.rs</code>, compiled it as a static rust library in object format as <code>opts.o</code>.</p>\n\n<p>I have bundled all other <code>.o</code> files for the respective <code>.c</code> files as <code>CObject.o</code>. Now I'm trying to obtain the <code>vsftpd</code> executable using the Makefile as follows</p>\n\n<p><code>clang -o vsftpd CObject.o opts.o /usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-c78f872a5c746c09.so -Wl,-s -fPIE -pie -Wl,-z,relro -Wl,-z,now './vsf_findlibs.sh</code>  </p>\n\n<p>But I'm now getting the following linkage errors.</p>\n\n<pre><code>(.text.handle_opts+0x31): undefined reference to `str_upper(mystr*)'\n(.text.handle_opts+0xbc): undefined reference to `str_equal_text(mystr const*, char const*)'\n(.text.handle_opts+0x146): undefined reference to `vsf_cmdio_write(vsf_session*, int, char const*)'\n(.text.handle_opts+0x1d1): undefined reference to `vsf_cmdio_write(vsf_session*, int, char const*)'\n</code></pre>\n\n<p>But <code>CObject.o</code> symbol table contains entries for all the above entries.<br>\nOutput of <code>readelf -s CObject.o | grep -E '(str_upper|str_equal_text|vsf_cmdio_write)'</code> is</p>\n\n<pre><code>project@mylaptop:~/vsftpd-3.0.3-rustport$ readelf -s CObject.o | grep -E '(str_upper|str_equal_text|vsf_cmdio_write)'\n 834: 0000000000000a30    54 FUNC    GLOBAL DEFAULT    1 vsf_cmdio_write\n1004: 0000000000000a70    54 FUNC    GLOBAL DEFAULT    1 vsf_cmdio_write_hyphen\n1061: 0000000000000b90    13 FUNC    GLOBAL DEFAULT    1 vsf_cmdio_write_str\n1122: 0000000000000b10    97 FUNC    GLOBAL DEFAULT    1 vsf_cmdio_write_exit\n1127: 0000000000000ab0    94 FUNC    GLOBAL DEFAULT    1 vsf_cmdio_write_raw\n1211: 0000000000007df0    66 FUNC    GLOBAL DEFAULT    1 str_upper\n1353: 0000000000007ca0    85 FUNC    GLOBAL DEFAULT    1 str_equal_text\n1384: 0000000000000b80    13 FUNC    GLOBAL DEFAULT    1 vsf_cmdio_write_str_hyphe\n</code></pre>\n\n<p>Can anyone help me solve this problem?</p>\n"}, {"tags": ["data-structures", "rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573496105, "post_id": 58793743, "comment_id": 103892818, "body": "<i>just keep track of the tail as a pointer/reference</i> \u2014 this is non-trivial advice. You cannot do it with references, as that would allow for mutable aliasing. See <a href=\"https://stackoverflow.com/q/36470413/155423\">Singly linked list with references to random nodes in Rust</a>. To implement such, you <b>have</b> to use unsafe."}], "tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": false, "score": 1, "last_activity_date": 1573427101, "creation_date": 1573427101, "answer_id": 58793743, "question_id": 58788056, "link": "https://stackoverflow.com/questions/58788056/mutable-borrow-errors-while-implementing-a-linked-list-where-new-elements-are-ad/58793743#58793743", "title": "Mutable borrow errors while implementing a linked list where new elements are added to the end in Rust", "body": "<p>Here is a recursive solution:</p>\n\n<pre><code>impl Node {\n    fn append(&amp;mut self, new_node: Node) {\n        match self.next {\n            Some(ref mut p) =&gt; p.append(new_node),\n            None =&gt; self.next = Some(Box::new(new_node))\n        }\n    }\n}\n\nstruct LinkList {\n    head: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nimpl LinkList {\n    fn has_head(&amp;self) -&gt; bool {\n        self.head.is_none()\n    }\n\n    fn insert_node(&amp;mut self, node: Node) {\n        if self.has_head() {\n            self.head = Some(Box::new(node));\n        } else {\n            self.head.as_mut().unwrap().append(node);\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b10c70c1edfac2e5177d46ab1db11e9d\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Though note that in a actual queue (first in, first out) which seems like what you are trying to implement, rather than looping through the entire list to add one element, just keep track of the tail as a pointer/reference. I.e. add a element directly onto the tail, and move the tail pointer to the new element</p>\n"}, {"comments": [{"owner": {"reputation": 254, "user_id": 9449543, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-xdeDKj6VqUA/AAAAAAAAAAI/AAAAAAAAACM/GZSOKBUEHd4/photo.jpg?sz=128", "display_name": "Keegan Ferrett", "link": "https://stackoverflow.com/users/9449543/keegan-ferrett"}, "edited": false, "score": 0, "creation_date": 1573472361, "post_id": 58794017, "comment_id": 103881414, "body": "This was perfect, thank you very much!"}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 4, "last_activity_date": 1573496591, "last_edit_date": 1573496591, "creation_date": 1573429807, "answer_id": 58794017, "question_id": 58788056, "link": "https://stackoverflow.com/questions/58788056/mutable-borrow-errors-while-implementing-a-linked-list-where-new-elements-are-ad/58794017#58794017", "title": "Mutable borrow errors while implementing a linked list where new elements are added to the end in Rust", "body": "<p>One very useful idea when you have loops with at least one condition being checked is to see what invariants you're trying to uphold. In Rust, you should make the invariants be expressed in the <em>type</em> of the terms as much as possible. That will allow the type system to work for you and you'll have a much better time.</p>\n\n<p>So let's look at what invariants we have for this function. First, we check if the head is <code>None</code>. If it is, the rest of the function isn't executed, so from then on, we can assume the head is <code>Some</code>. Side note here, it would probably be better to simply return early rather than have the bulk of the function in an <code>else</code> block.</p>\n\n<p>Next, we assign <code>&amp;mut self.head</code> to <code>curr</code>, so we know (at least for now) that <code>curr</code> is <code>Some</code>. In the loop, we first check if <code>curr</code> is <code>Some</code> or <code>None</code>, so this should be the first sign that something's wrong.</p>\n\n<p>Continuing the loop, we check if the next node is <code>None</code>, and if it isn't, we assign it to <code>curr</code>, so the invariant that <code>curr</code> is <code>Some</code> is upheld. We still check it at the start of every loop.</p>\n\n<p>Another invariant is that <code>cont</code> is <code>true</code> until <code>p.next</code> is <code>None</code>, at which point it switches to <code>false</code> and the loop ends. It can also be set to false if <code>curr</code> is <code>None</code>, but since our first invariant is that <code>curr</code> is never <code>None</code>, this can't happen.</p>\n\n<p>My first suggested change would be to get rid of the <code>cont</code> variable and simply <code>break</code> when <code>p.next</code> is <code>None</code>. Then the <code>while</code> loop can just be <code>loop</code>, which continues until there's a break. This actually fixes one problem, which I'll discuss below, but leaves another problem.</p>\n\n<p>My second suggested change is to either make <code>curr</code> be <code>&amp;mut Box&lt;Node&gt;</code> rather than <code>&amp;mut Option&lt;Box&lt;Node&gt;&gt;</code> or simply find a way to do this without maintaining that invariant. The first approach is closer to your code right now, but you may find that the second approach makes things easier. After all, we're just trying to traverse the list until we get something that isn't <code>Some</code>.</p>\n\n<p>The first approach can be done with unwrapping, or, much more idiomatically, by replacing <code>if option.is_none()</code> with a match statement. For example, at the start of the function, we can replace the check by</p>\n\n<pre><code>let mut curr;\nif let Some(ref mut head) = self.head {\n    curr = head;\n} else {\n    self.head = Some(Box::new(node));\n    return;\n}\n</code></pre>\n\n<p>(note the <code>return</code> statement so that the rest of the function doesn't need to be in a block).</p>\n\n<p>Similarly reworking the inside of the loop and the end of the function lets the function compile. All this comes from changing the type of <code>curr</code> and using <code>if let</code> (or a match statement) instead of using <code>if</code> to check when an option is <code>None</code> or <code>Some</code>. Since now <code>curr</code> isn't an option, we don't need to do any checks on it and instead only check <code>curr.next</code>.</p>\n\n<pre><code>loop cont {\n    println!(\"has value {:?}\", curr);\n    if let Some(ref mut next_node) = curr.next {\n        curr = next_node;\n    } else {\n        break;\n    }\n}\n\nprintln!(\"Yay\");\ncurr.next = Some(Box::new(node));\n</code></pre>\n\n<hr>\n\n<p>You may be wondering why the problem occurred in the first place. Basically, <code>curr</code> is a mutable borrow of the whole list after some point. When we match on it and bind <code>ref mut p</code>, <code>p</code> is now a mutable borrow of the <em>same</em> list. That must mean that <code>curr</code> is no longer an active borrow, since otherwise we'd have two mutable borrows of (parts of) the same list.</p>\n\n<p>What saves us is reassigning <code>curr</code>. In most iterations of the loop we have, <code>curr = &amp;mut p.next;</code>, which is a new borrow and will last until the next time we match on <code>curr</code>. However, in the last iteration of the loop, we don't do that. We just set <code>cont</code> to <code>false</code> (or simply <code>break</code>) and end. <em>That means that <code>curr</code> is invalid after the loop ends.</em> So you can't use <code>curr</code> to modify the list at the end.</p>\n\n<p>What you could do is still assign a new mutable reference in the last loop too, but unfortunately the types don't work out very well. We can't get <code>&amp;mut Option&lt;T&gt;</code> out of <code>p</code>, whose type is simply <code>&amp;mut T</code> (where <code>T</code> is <code>Box&lt;Node&gt;</code>). A second variable actually does work. You could have <code>let mut final_node;</code> before the loop and then have <code>final_node = p</code> when <code>p.next</code> is <code>None</code>. To convince the compiler that <code>final_node</code> is initialized in every branch of the code, you'd still need to use <code>break</code> instead of <code>cont</code> and use <code>unreachable!()</code> in the case where <code>curr</code> is <code>None</code> (it certainly should be unreachable - <code>return</code> would also convince the compiler here).</p>\n\n<p>With my suggestion above using <code>if let</code>, we actually avoid ending <code>curr</code>'s borrow on the last iteration. In the <code>Some(ref mut p)</code> case, we reassign <code>curr</code> and otherwise we don't bind <code>p</code> at all so the borrow in <code>curr</code> doesn't need to end.</p>\n\n<hr>\n\n<p>For reference, here's the complete rework with the minimal changes I suggested.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Node {\n    value: i32,\n    next: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nstruct LinkList {\n    head: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nimpl LinkList {\n    fn has_head(&amp;self) -&gt; bool {\n        self.head.is_none()\n    }\n\n    fn insert_node(&amp;mut self, node: Node) {\n        let mut curr;\n        if let Some(ref mut head) = self.head {\n            curr = head;\n        } else {\n            self.head = Some(Box::new(node));\n            return;\n        }\n\n        loop {\n            println!(\"has value {:?}\", curr);\n            if let Some(ref mut next_node) = curr.next {\n                curr = next_node;\n            } else {\n                break;\n            }\n        }\n\n        println!(\"Yay\");\n        curr.next = Some(Box::new(node));\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9394bf7517bb966a88d16d20b6d680d3\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>By letting <code>curr</code> simply be a general option (not necessarily <code>Some</code>) and checking if it's <code>Some</code> or <code>None</code> at the start of the loop, we can eliminate some more code.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Node {\n    value: i32,\n    next: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nstruct LinkList {\n    head: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nimpl LinkList {\n    fn insert_node(&amp;mut self, node: Node) {\n        let mut curr_opt = &amp;mut self.head;\n        while let Some(curr_node) = curr_opt {\n            curr_opt = &amp;mut curr_node.next;\n        }\n        *curr_opt = Some(Box::new(node));\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2ba2dec12d2591a30b06674227a87479\" rel=\"nofollow noreferrer\">(playground)</a></p>\n"}], "owner": {"reputation": 254, "user_id": 9449543, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-xdeDKj6VqUA/AAAAAAAAAAI/AAAAAAAAACM/GZSOKBUEHd4/photo.jpg?sz=128", "display_name": "Keegan Ferrett", "link": "https://stackoverflow.com/users/9449543/keegan-ferrett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 1, "closed_date": 1573494036, "accepted_answer_id": 58794017, "answer_count": 2, "score": 3, "last_activity_date": 1573496591, "creation_date": 1573384235, "last_edit_date": 1573494873, "question_id": 58788056, "link": "https://stackoverflow.com/questions/58788056/mutable-borrow-errors-while-implementing-a-linked-list-where-new-elements-are-ad", "closed_reason": "Duplicate", "title": "Mutable borrow errors while implementing a linked list where new elements are added to the end in Rust", "body": "<p>I wanted to implement a linked list from scratch. The basic idea is that new elements are added to the end of the list, requiring the program to cycle to the end to reach the last element to append.</p>\n\n<p>I realise that there is a <code>LinkedList</code> type as part of the standard library but I am trying to implement this for educational purposes.</p>\n\n<p>I also took a look at the Rust tutorial <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">Learn Rust With Entirely Too Many Linked Lists</a> but this didn't really have what I was looking for as it implemented stacks, placing new elements at the start.</p>\n\n<p>The code I have come up with is as follows:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Node {\n    value: i32,\n    next: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nstruct LinkList {\n    head: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nimpl LinkList {\n    fn has_head(&amp;self) -&gt; bool {\n        self.head.is_none()\n    }\n\n    fn insert_node(&amp;mut self, node: Node) {\n        if self.has_head() {\n            self.head = Some(Box::new(node));\n        } else {\n            let mut curr = &amp;mut self.head;\n            let mut cont = true;\n\n            while cont {\n                match curr {\n                    Some(ref mut p) =&gt; {\n                        println!(\"has value {:?}\", p);\n                        if p.next.is_none() {\n                            cont = false;\n                        }\n                        else {\n                            curr = &amp;mut p.next;\n                        }\n                    },\n                    None =&gt; cont = false,\n                }\n            }\n\n            match curr {\n                Some(ref mut p) =&gt; {\n                    println!(\"Yay\");\n                    p.next = Some(Box::new(node));\n                },\n                None =&gt; println!(\"Something has gone wrong...\"),\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>With the main function being:</p>\n\n<pre><code>fn main() {\n    let n1 = Node {\n        value: 1,\n        next: None\n    };\n\n    let n2 = Node {\n        value: 2,\n        next: None\n    };\n\n    let n3 = Node {\n        value: 3,\n        next: None\n    };\n\n    let mut l = LinkList { head: None };\n    l.insert_node(n1);\n    l.insert_node(n2);\n    l.insert_node(n3);\n    println!(\"{:?}\", l.head);\n}\n</code></pre>\n\n<p>I think I am pretty close but the error I am currently getting is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0503]: cannot use `*curr` because it was mutably borrowed\n  --&gt; src/lib.rs:25:21\n   |\n25 |                     Some(ref mut p) =&gt; {\n   |                     ^^^^^---------^\n   |                     |    |\n   |                     |    borrow of `curr.0` occurs here\n   |                     use of borrowed `curr.0`\n   |                     borrow later used here\n\nerror[E0499]: cannot borrow `curr.0` as mutable more than once at a time\n  --&gt; src/lib.rs:25:26\n   |\n25 |                     Some(ref mut p) =&gt; {\n   |                          ^^^^^^^^^ mutable borrow starts here in previous iteration of loop\n\nerror[E0503]: cannot use `*curr` because it was mutably borrowed\n  --&gt; src/lib.rs:39:17\n   |\n25 |                     Some(ref mut p) =&gt; {\n   |                          --------- borrow of `curr.0` occurs here\n...\n39 |                 Some(ref mut p) =&gt; {\n   |                 ^^^^^^^^^^^^^^^\n   |                 |\n   |                 use of borrowed `curr.0`\n   |                 borrow later used here\n\nerror[E0499]: cannot borrow `curr.0` as mutable more than once at a time\n  --&gt; src/lib.rs:39:22\n   |\n25 |                     Some(ref mut p) =&gt; {\n   |                          --------- first mutable borrow occurs here\n...\n39 |                 Some(ref mut p) =&gt; {\n   |                      ^^^^^^^^^\n   |                      |\n   |                      second mutable borrow occurs here\n   |                      first borrow later used here\n</code></pre>\n\n<p>I understand the basics of Rust's ownership rules and can kinda understand why this issue is occurring. How do I work with the ownership rules to achieve what I need?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 4, "creation_date": 1573369122, "post_id": 58786006, "comment_id": 103855420, "body": "This is not yet supported on stable Rust, but <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2000-const-generics.md\" rel=\"nofollow noreferrer\">will probably be supported soon</a>."}], "owner": {"reputation": 5195, "user_id": 1407170, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5f68a1372394960905ad730bab83bc06?s=128&d=identicon&r=PG", "display_name": "sffc", "link": "https://stackoverflow.com/users/1407170/sffc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "closed_date": 1573374980, "answer_count": 0, "score": 1, "last_activity_date": 1573364024, "creation_date": 1573364024, "question_id": 58786006, "link": "https://stackoverflow.com/questions/58786006/how-do-you-pass-concrete-non-type-generic-parameters-in-rust", "closed_reason": "Duplicate", "title": "How do you pass concrete (non-type) Generic parameters in Rust?", "body": "<p>In C++, I can make a struct that takes a compile-time capacity argument, such as,</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>template &lt;size_t capacity&gt;\nstruct Foo {\n  uint8_t data[capacity];\n};\n</code></pre>\n\n<p>This is useful, for example, to pre-allocate a compile-time variable amount of space on the stack and avoid heap allocation.</p>\n\n<p>How do I do the same in Rust?  This doesn't compile:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct UStr&lt;capacity&gt; {\n    data: [u8; capacity],\n}\n\n/*\nerror[E0423]: expected value, found type parameter `capacity`\n --&gt; src/demo.rs:2:13\n  |\n2 |     data: [u8; capacity],\n  |                ^^^^^^^^ not a value\n*/\n</code></pre>\n"}, {"tags": ["import", "rust", "macros", "rust-macros"], "answers": [{"comments": [{"owner": {"reputation": 1377, "user_id": 8181162, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10154749359862339/picture?type=large", "display_name": "James Schinner", "link": "https://stackoverflow.com/users/8181162/james-schinner"}, "edited": false, "score": 0, "creation_date": 1573356131, "post_id": 58785365, "comment_id": 103853934, "body": "Thanks, I updated the dependencies as required and I removed <code>#[cfg(feature = &quot;derive&quot;)]</code> from main.rs and it worked! It&#39;s great that it&#39;s working, but I admit I don&#39;t completely understand the mechanism"}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 1377, "user_id": 8181162, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10154749359862339/picture?type=large", "display_name": "James Schinner", "link": "https://stackoverflow.com/users/8181162/james-schinner"}, "edited": false, "score": 0, "creation_date": 1573357606, "post_id": 58785365, "comment_id": 103854073, "body": "@JamesSchinner You can learn more about features in the <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\" rel=\"nofollow noreferrer\">Cargo manifest documentation</a>."}, {"owner": {"reputation": 6192, "user_id": 169275, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/jr6XH.jpg?s=128&g=1", "display_name": "mirosval", "link": "https://stackoverflow.com/users/169275/mirosval"}, "edited": false, "score": 0, "creation_date": 1607630395, "post_id": 58785365, "comment_id": 115340437, "body": "To complement this answer: Make sure you then import <code>FromSql</code> and <code>ToSql</code> from <code>postgres_types::{FromSql, ToSql};</code> and not the reexported version from <code>postgresql</code>."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 4, "last_activity_date": 1573354500, "creation_date": 1573354500, "answer_id": 58785365, "question_id": 58785292, "link": "https://stackoverflow.com/questions/58785292/rust-cannot-find-macro/58785365#58785365", "title": "Rust: cannot find macro", "body": "<p>Quoting from the documentation,</p>\n\n<blockquote>\n  <p>If the <code>derive</code> cargo feature is enabled, you can derive ToSql and FromSql implementations for custom Postgres types.</p>\n</blockquote>\n\n<p>To enable the <code>derive</code> feature, you'll need to put this in <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\npostgres-types = {version = \"0.1.0-alpha.1\", features = [\"derive\"]}\n</code></pre>\n"}], "owner": {"reputation": 1377, "user_id": 8181162, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10154749359862339/picture?type=large", "display_name": "James Schinner", "link": "https://stackoverflow.com/users/8181162/james-schinner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1297, "favorite_count": 0, "accepted_answer_id": 58785365, "answer_count": 1, "score": 2, "last_activity_date": 1573469371, "creation_date": 1573353404, "last_edit_date": 1573469371, "question_id": 58785292, "link": "https://stackoverflow.com/questions/58785292/rust-cannot-find-macro", "title": "Rust: cannot find macro", "body": "<p>I'm trying to run rust code from the <code>postgres_types</code> documentation.</p>\n\n<p>The example code can be found here: <a href=\"https://docs.rs/crate/postgres-types/0.1.0-alpha.1\" rel=\"nofollow noreferrer\">postgres_types</a></p>\n\n<p>my rust environment:</p>\n\n<blockquote>\n  <p>cargo --version\n  cargo 1.40.0-nightly (5da4b4d47 2019-10-28)</p>\n  \n  <p>rustc --version\n  rustc 1.40.0-nightly (b520af6fd 2019-11-03)</p>\n</blockquote>\n\n<hr>\n\n<p>main.rs</p>\n\n<pre><code>#[cfg(feature = \"derive\")]\nuse postgres_types::{ToSql, FromSql};\n\n#[derive(Debug, ToSql, FromSql)]\nenum Mood {\n    Sad,\n    Ok,\n    Happy,\n}\n\nfn main() {\n    let mood = Mood::Sad;\n\n    println!(\"{:?}\", mood);\n}\n</code></pre>\n\n<hr>\n\n<p>Cargo.toml</p>\n\n<pre><code>...\n\n[dependencies]\npostgres-types = \"0.1.0-alpha.1\"\n</code></pre>\n\n<hr>\n\n<p>When I try and run with <code>cargo run</code> I get:</p>\n\n<pre><code>error: cannot find derive macro `ToSql` in this scope\n --&gt; src\\main.rs:4:17\n  |\n4 | #[derive(Debug, ToSql, FromSql)]\n  |                 ^^^^^\n\nerror: cannot find derive macro `FromSql` in this scope\n --&gt; src\\main.rs:4:24\n  |\n4 | #[derive(Debug, ToSql, FromSql)]\n  |                        ^^^^^^^\n</code></pre>\n\n<p>What am I doing wrong here? Clearly I'm missing something basic. Have I not imported the macro correctly?</p>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "answers": [{"comments": [{"owner": {"reputation": 145, "user_id": 1345303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9b55eec10ee3f21cd6eefea48d7cc54?s=128&d=identicon&r=PG&f=1", "display_name": "None", "link": "https://stackoverflow.com/users/1345303/none"}, "edited": false, "score": 0, "creation_date": 1573709049, "post_id": 58829693, "comment_id": 103972744, "body": "Assign or getting by id kind of logic also came my mind but I wanted (or my programmer ego) to do something more flexible for JS usage. I would like to see if there is any other approach if it is not in smart way."}, {"owner": {"reputation": 341, "user_id": 2332956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/967416bd098968c4da33f92c8ef3d471?s=128&d=identicon&r=PG", "display_name": "Alex Stepanov", "link": "https://stackoverflow.com/users/2332956/alex-stepanov"}, "reply_to_user": {"reputation": 145, "user_id": 1345303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9b55eec10ee3f21cd6eefea48d7cc54?s=128&d=identicon&r=PG&f=1", "display_name": "None", "link": "https://stackoverflow.com/users/1345303/none"}, "edited": false, "score": 0, "creation_date": 1573773470, "post_id": 58829693, "comment_id": 104005222, "body": "I don&#39;t think I can see any more or less straightforward way of having two references to the same vector object - first, because Rust works overtime to prevent that from happening and second because of the shim code wasm-bindgen generates. If it was all-Rust code, then it would be lot easier because we could use explicit lifetime declarations to make Rust happy.  As a hacky way, maybe it is possible to get around Rust checks with pointers (like so: <a href=\"https://rustwasm.github.io/docs/wasm-bindgen/reference/types/pointers.html\" rel=\"nofollow noreferrer\">rustwasm.github.io/docs/wasm-bindgen/reference/types/&hellip;</a>) or by using unsafe blocks but I&#39;m not sure how stable that would be."}], "tags": [], "owner": {"reputation": 341, "user_id": 2332956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/967416bd098968c4da33f92c8ef3d471?s=128&d=identicon&r=PG", "display_name": "Alex Stepanov", "link": "https://stackoverflow.com/users/2332956/alex-stepanov"}, "is_accepted": true, "score": 1, "last_activity_date": 1573613991, "creation_date": 1573613991, "answer_id": 58829693, "question_id": 58785205, "link": "https://stackoverflow.com/questions/58785205/rust-wasm-bindgen-object-turns-null-in-js-side-when-the-object-is-added-to-a-vec/58829693#58829693", "title": "Rust wasm_bindgen object turns null in JS side when the object is added to a vector", "body": "<p>You should be extremely wary of having your data duplicated - one copy is on the JS side and then on the WASM side in Rust. The problem here is that the <code>Group.add</code> moves the value out so that once you called group.add, the vector internal \"heap pointer\" (maintained by the interop code generated by wasm-bindgen) changes and the previous copy becomes invalid, so the values inserted into the <code>list</code> are pretty much useless.</p>\n\n<p>The Rust-y way of dealing with this situation would be to keep a list of borrowed values instead, and manage the life times explicitly so that the list does not outlive its elements. Unfortunately, wasm-bindgen does not allow for explicit lifetime declarations on exported structs so this option is out.</p>\n\n<p>Ideally, all the logic related to dealing with the vectors should only exist in Rust and be hidden from JavaScript. If you <em>really</em> need to have access to the vectors in both places, the easiest brute-force solution would be to add a getter to the Group and use it as a \"master copy\". The code would look like this:</p>\n\n<pre><code>#[wasm_bindgen]\n#[derive(Copy, Clone)]\npub struct Vector3 {\n    x: f32,\n    y: f32,\n    z: f32,\n}\n\n#[wasm_bindgen]\nimpl Vector3 {\n    #[wasm_bindgen(constructor)]\n    pub fn new() -&gt; Vector3 {\n        Vector3 { x:0.0, y:0.0, z:0.0 }\n    }\n\n    pub fn get_x(&amp;self) -&gt; f32 {\n        self.x\n    }\n\n    pub fn get_y(&amp;self) -&gt; f32 {\n        self.y\n    }\n\n    pub fn get_z(&amp;self) -&gt; f32 {\n        self.z\n    }\n}\n\n#[wasm_bindgen]\npub struct Group{\n    list: Vec&lt;Vector3&gt;,\n}\n\n#[wasm_bindgen]\nimpl Group {\n    #[wasm_bindgen(constructor)]\n    pub fn new() -&gt; Group {\n        Group { list: vec![] }\n    }\n\n    pub fn add(&amp;mut self, vec: Vector3) {\n        self.list.push(vec);\n    }\n\n    pub fn get_at(&amp;self, idx: usize) -&gt; Vector3 {\n        self.list[idx]\n    }\n}\n\n</code></pre>\n\n<p>Then, the JavaScript side would look like:</p>\n\n<pre><code>...\n\nsetTimeout(() =&gt; {\n  for (let i = 0; i &lt; list.length; i++) {\n    const vect = group.get_at(i);\n    console.log(vect.get_x());\n  }\n}, 1000);\n\n...\n</code></pre>\n\n<p>and we get rid of the <code>list</code> altogether. </p>\n\n<p>NOTE: <em>this is a REALLY bad way of managing lists</em> because every time you call <code>get_at</code> you create yet another copy of the vector so if your code is calculation-heavy then memory leaks could be a concern. Unfortunately, wasm-bindgen does not allow borrowed return values so cloning is pretty much the only option if you need to have the entire tuple in one call. </p>\n\n<p>If you don't mind dealing with many small calls on the JS side, then one of the more obvious optimizations would be to split <code>get_at</code> and convert it into <code>get_x_at</code>, <code>get_y_at</code>, <code>get_z_at</code> thus avoiding the need to carry the Vector instance across the wasm boundary. </p>\n\n<p>Better yet, perhaps you could come up with a different way of splitting the areas of concern so that the vectors would not have to cross the assembly boundary at all.</p>\n\n<p>Hope that helps!</p>\n"}], "owner": {"reputation": 145, "user_id": 1345303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9b55eec10ee3f21cd6eefea48d7cc54?s=128&d=identicon&r=PG&f=1", "display_name": "None", "link": "https://stackoverflow.com/users/1345303/none"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 432, "favorite_count": 0, "accepted_answer_id": 58829693, "answer_count": 1, "score": 3, "last_activity_date": 1573613991, "creation_date": 1573352135, "question_id": 58785205, "link": "https://stackoverflow.com/questions/58785205/rust-wasm-bindgen-object-turns-null-in-js-side-when-the-object-is-added-to-a-vec", "title": "Rust wasm_bindgen object turns null in JS side when the object is added to a vector", "body": "<p>I have two structs exported to Javascript. I can create instances and use them in JavaScript without any error but when I push the instances into a vector in Rust side, I have an error \"Uncaught Error: null pointer passed to rust\"</p>\n\n<p>Since ownership is changed, it is totally normal that JS objects turns null but I also need to keep my JavaScript objects in order to change things in JavaScript side.</p>\n\n<p>Is there any correct way to keep \"vect\" object not null and open to changes?</p>\n\n<p>I added a working <a href=\"https://webassembly.studio/?f=q2022ugi3go\" rel=\"nofollow noreferrer\">example</a>. You can see error in your browser's console.</p>\n\n<p>Rust code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use wasm_bindgen::prelude::*;\n\n#[wasm_bindgen]\nstruct Vector3 {\n    x: f32,\n    y: f32,\n    z: f32,\n}\n\n#[wasm_bindgen]\nimpl Vector3 {\n    #[wasm_bindgen(constructor)]\n    pub fn new() -&gt; Vector3 {\n        return Vector3 {\n            x: 0.0,\n            y: 0.0,\n            z: 0.0,\n        };\n    }\n    pub fn get_x(&amp;self) -&gt; f32 {\n        self.x\n    }\n}\n\n#[wasm_bindgen(extends = Object)]\nstruct Group {\n    list: Vec&lt;Vector3&gt;,\n}\n\n#[wasm_bindgen]\nimpl Group {\n    #[wasm_bindgen(constructor)]\n    pub fn new() -&gt; Group {\n        return Group { list: vec![] };\n    }\n\n    pub fn add(&amp;mut self, vec: Vector3) {\n        self.list.push(vec);\n    }\n}\n</code></pre>\n\n<p>JavaScript code</p>\n\n<pre><code>let group = new Group();\n\nlet list = [];\nfor (let i = 0; i &lt; 10; i++) {\n  let vect = new Vector3();\n  list.push(vect);\n  group.add(vect);\n}\n\nsetInterval(() =&gt; {\n  for (let i = 0; i &lt; list.length; i++) {\n    const vect = list[i];\n    console.log(vect.get_x());\n  }\n}, 1000);\n</code></pre>\n"}, {"tags": ["rust", "reference", "lifetime", "reference-counting", "borrowing"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1573338703, "post_id": 58782928, "comment_id": 103851588, "body": "You can to some extent use reference-counted pointers in your code to avoid lifetime annotations. However, you can&#39;t always avoid them when dealing with other people&#39;s crates (which is virtually always). And more importantly, your code will run against the gist of Rust, and you will run into different kinds of complexities that are even more difficult to deal with. So the short answer is probably &quot;no&quot;."}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 2, "creation_date": 1573338912, "post_id": 58782928, "comment_id": 103851641, "body": "You could use reference counted pointers - but those effectively just move the lifetime issues to runtime instead of compile time, trading performance for convenience. There are also some situations where they won&#39;t work - such as when exclusive/mutable access is required. I&#39;d recommend learning to use lifetimes instead of relying on reference counted pointers - they&#39;re different and more difficult to understand, but they&#39;re foundational to a lot of higher level Rust concepts and you won&#39;t be able to avoid them for long."}], "answers": [{"comments": [{"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 1, "creation_date": 1573370014, "post_id": 58784941, "comment_id": 103855560, "body": "Thank you so much! This gave me some confidence and direction, and I think I&#39;ll make further attempts to try to grasp lifetimes."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1573392111, "post_id": 58784941, "comment_id": 103860020, "body": "After some sleep... Peter, can you please explain in two words why compiler requires me to annotate lifetimes, even if it can prove their correctness? Why wouldn&#39;t it &quot;annotate&quot; them without my help then, if it&#39;s so smart?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 3, "creation_date": 1573395730, "post_id": 58784941, "comment_id": 103860913, "body": "In two words: no. In 70+ words... The type checker (including the borrow checker) does not look beyond function type boundaries. When you write a function type signature, you are declaring a two-sided contract which must be followed both by the function body and by any callers. The typechecker independently proves that both sides of the contract are honoured. Respecting type boundaries is a primary abstraction in Rust \u2013 and <i>most</i> other typed languages \u2013 and breaking it would make for fragile code."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1573396418, "post_id": 58784941, "comment_id": 103861101, "body": "I am no expert in making programming languages, but it feels like they could do this type of checking by analyzing arguments on every calling of the function (i.e. looking beyond function boundaries). I am sure they have some technical obstacles to do that, though. Anyway, thank, you so much (for spending 70+ words on me :-) ), very accessible explanation!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 3, "creation_date": 1573576926, "post_id": 58784941, "comment_id": 103922977, "body": "@NurbolAlpysbayev You may find it helpful to read <a href=\"https://stackoverflow.com/questions/31609137/why-are-explicit-lifetimes-needed-in-rust\">Why are explicit lifetimes needed in Rust?</a>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1573347907, "creation_date": 1573347907, "answer_id": 58784941, "question_id": 58782928, "link": "https://stackoverflow.com/questions/58782928/can-i-avoid-using-explicit-lifetime-specifiers-and-instead-use-reference-countin/58784941#58784941", "title": "Can I avoid using explicit lifetime specifiers and instead use reference counting (Rc)?", "body": "<blockquote>\n  <p>are lifetimes an inevitable thing that I'll have to understand and use in Rust code?</p>\n</blockquote>\n\n<p>In order to <em>read</em> existing Rust code, you probably don't need to understand lifetimes. The borrow-checker understands them so if it compiles then they are correct and you can just review what the code does.</p>\n\n<blockquote>\n  <p>I am very insecure about using them correctly.</p>\n</blockquote>\n\n<p>The most important thing to understand about lifetimes annotations is that they <em>do</em> nothing. Rather, they are a way to express to the compiler the relationship between references. For example, if an input and output to a function have the same lifetime, that means that the output contains a reference to the input (or part of it) and therefore is not allowed to live longer than the input. Using them \"incorrectly\" means that you are telling the compiler something about the lifetime of a reference which it can prove to be untrue - and it will give you an error, so there is nothing to be insecure about!</p>\n\n<blockquote>\n  <p>can I avoid the lifetimes in favor of smart pointers?</p>\n</blockquote>\n\n<p>You <em>could</em> choose to avoid using references altogether and use <code>Rc</code> everywhere. You would be missing out on one of the big features of Rust: lifetimes and references form one of the most important zero-cost abstractions, which enable Rust to be fast and safe at the same time. There is code written in Rust that nobody would attempt to write in C/C++ because a human could never be absolutely certain that they haven't introduced a memory bug. Avoiding Rust references in favour of smart pointers will mostly result in slower code, because smart pointers have runtime overhead.</p>\n\n<p>Many APIs use references. In order to use those APIs you will need to have at least some grasp of what is going on.</p>\n\n<p>The best way to understand is just to write code and gain an intuition from what works and what doesn't. Rust's error messages are excellent and will help a lot with forming that intuition.</p>\n"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 364, "favorite_count": 0, "accepted_answer_id": 58784941, "answer_count": 1, "score": 3, "last_activity_date": 1603219439, "creation_date": 1573328889, "last_edit_date": 1603219439, "question_id": 58782928, "link": "https://stackoverflow.com/questions/58782928/can-i-avoid-using-explicit-lifetime-specifiers-and-instead-use-reference-countin", "title": "Can I avoid using explicit lifetime specifiers and instead use reference counting (Rc)?", "body": "<p>I am reading the Rust Book and everything was pretty simple to understand (thanks to the book's authors), until the section about <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">lifetimes</a>. I spent all day, reading a lot of articles on lifetimes and still I am very insecure about using them correctly. </p>\n\n<p>What I do understand, though, is that the concept of explicit lifetime specifiers aims to solve the problem of dangling references. I also know that Rust has reference-counting smart pointers (<code>Rc</code>) which I believe is the same as <code>shared_ptr</code> in C++, which has the same purpose: to prevent dangling references.</p>\n\n<p>Given that those lifetimes are so horrendous to me, and smart pointers are very familiar and comfortable for me (I used them in C++ a lot), can I avoid the lifetimes in favor of smart pointers? Or are lifetimes an inevitable thing that I'll have to understand and use in Rust code?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 1, "creation_date": 1573327536, "post_id": 58782683, "comment_id": 103849147, "body": "Rust is not ASCII-only, an input of <code>5&#223;</code> should be accepted by <code>read_line</code> just fine! The failure of <code>read_line</code> is reserved for IO errors when the standard input is redirected to e.g. a file on a network filesystem and that fails, or something like that. In other words, you shouldn&#39;t need to do anything special to &quot;handle&quot; UTF-8 input, it should just work. As a test, I tried entering <code>\u010d\u0107</code> to <code>read_line</code> in the guessing-game code, and it correctly responded with &quot;You guessed: \u010d\u0107&quot;. What OS are you running?"}, {"owner": {"reputation": 823, "user_id": 9157032, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be5efaf026881ab3eecab1df1e023f3d?s=128&d=identicon&r=PG&f=1", "display_name": "TimB", "link": "https://stackoverflow.com/users/9157032/timb"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573327857, "post_id": 58782683, "comment_id": 103849208, "body": "Windows 10, albeit from the Eclipse-integrated console."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 2, "creation_date": 1573328339, "post_id": 58782683, "comment_id": 103849312, "body": "If it works correctly outside Eclipse, it sounds like an issue that should be reported to Eclipse or its Rust plugin."}, {"owner": {"reputation": 823, "user_id": 9157032, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be5efaf026881ab3eecab1df1e023f3d?s=128&d=identicon&r=PG&f=1", "display_name": "TimB", "link": "https://stackoverflow.com/users/9157032/timb"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573331247, "post_id": 58782683, "comment_id": 103849992, "body": "High five! We just discovered something for Bugzilla :-)"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1573327412, "creation_date": 1573327412, "answer_id": 58782754, "question_id": 58782683, "link": "https://stackoverflow.com/questions/58782683/handling-utf-8-input-on-stdin/58782754#58782754", "title": "Handling UTF-8 input on stdin", "body": "<p>Since you're only interested in one of the match arms, you can use an <a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/if_let.html\" rel=\"nofollow noreferrer\"><code>if let</code></a> binding:</p>\n\n<pre><code>if let Err (_) = io::stdin().read_line(&amp;mut guess) {\n    println!(\"Please only enter ASCII characters.\");\n}\n</code></pre>\n"}], "owner": {"reputation": 823, "user_id": 9157032, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be5efaf026881ab3eecab1df1e023f3d?s=128&d=identicon&r=PG&f=1", "display_name": "TimB", "link": "https://stackoverflow.com/users/9157032/timb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 58782754, "answer_count": 1, "score": 2, "last_activity_date": 1573327412, "creation_date": 1573326805, "question_id": 58782683, "link": "https://stackoverflow.com/questions/58782683/handling-utf-8-input-on-stdin", "title": "Handling UTF-8 input on stdin", "body": "<p>In <a href=\"https://doc.rust-lang.org/stable/book/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">the book</a>, rustaceans-to-be get to build a guessing game. In this guessing game, there's the following snippet:</p>\n\n<pre><code>let mut guess = String::new();\nio::stdin().read_line(&amp;mut guess)\n    .expect(\"Failed to read line\");\n</code></pre>\n\n<p>Um... why would <code>read_line()</code> fail, I thought. And then found out the hard way: Instead of <code>50</code> I entered <code>5\u00df</code> (German keyboards...) and... read line failed.</p>\n\n<p>So I thought I'd fix it quickly.</p>\n\n<pre><code>match io::stdin().read_line(&amp;mut guess) {\n    Ok(str) =&gt; str,\n    Err(_) =&gt; println!(\"Please only enter ASCII characters.\");\n}\n</code></pre>\n\n<p>That returned a type mismatch: Expected <code>()</code>, found <code>usize</code><br>\nAh, right! <code>read_line()</code> returns the number of entered bytes in the <code>Ok</code> result. But I don't want to do anything with that information so I replaced the Ok statement from above:</p>\n\n<pre><code>Ok(_) =&gt; {},\n</code></pre>\n\n<p>That works. But is this the right way to do it? I'm basically telling the program to run an empty code block on <code>Ok</code>, which I'd consider bad style in languages like Java, PHP, JavaScript etc.</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 318, "user_id": 5665478, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4mAcT.png?s=128&g=1", "display_name": "Feanor", "link": "https://stackoverflow.com/users/5665478/feanor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 107, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1573340013, "creation_date": 1573318215, "last_edit_date": 1573340013, "question_id": 58781446, "link": "https://stackoverflow.com/questions/58781446/rust-trait-bound-by-supertrait-with-itself-as-generic-parameter", "title": "Rust trait bound by supertrait with itself as generic parameter", "body": "<p>When working with a trait hierarchy, I got into the following problem: A trait (that is used as a trait object) should define a function that returns its own type. Of course, <code>Self</code> cannot be used since it would be different for each subtype. Instead, the trait should return the type of the trait object, like:</p>\n\n<pre><code>trait MySpecialTrait {\n    fn clone(&amp;self) -&gt; Box&lt;dyn MySpecialTrait&gt;;\n}\n</code></pre>\n\n<p>So far, this works. But now I want to extract this functionality in its own generic supertrait to be able to write generic code that only relies on the supertrait properties, like this:</p>\n\n<pre><code>trait Cloneable&lt;Output: ?Sized&gt; {\n    fn clone(&amp;self) -&gt; Box&lt;Output&gt;;\n}\n\ntrait MySpecialTrait: Cloneable&lt;dyn MySpecialTrait&gt; {\n    fn something(&amp;self);\n}\n\nfn clone_all&lt;T&gt;(data: &amp;Vec&lt;Box&lt;T&gt;&gt;) -&gt; Vec&lt;Box&lt;T&gt;&gt; \n    where T: ?Sized + Cloneable&lt;T&gt;\n{\n    data.iter().map(|x|x.clone()).collect()\n}\n</code></pre>\n\n<p>But this code yields the following error:</p>\n\n<pre><code>error[E0391]: cycle detected when computing the supertraits of `MySpecialTrait`\n  --&gt; src\\main.rs:28:1\n   |\n28 | trait MySpecialTrait: Cloneable&lt;dyn MySpecialTrait&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: ...which again requires computing the supertraits of `MySpecialTrait`, completing the cycle\nnote: cycle used when collecting item types in top-level module\n  --&gt; src\\main.rs:28:1\n   |\n28 | trait MySpecialTrait: Cloneable&lt;dyn MySpecialTrait&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Using associated types like this does not change anything:</p>\n\n<pre><code>trait Cloneable {\n    type Output;\n    fn clone(&amp;self) -&gt; Box&lt;Self::Output&gt;;\n}\n\ntrait MySpecialTrait: Cloneable&lt;Output = dyn MySpecialTrait&gt; {\n    fn something(&amp;self);\n}\n</code></pre>\n\n<p>Can someone explain to me why there is a cycle? I understand that in the general case of <code>trait A: B</code> the supertraits of <code>B</code> have to be known to calculate the supertraits of <code>A</code>, so</p>\n\n<pre><code>trait A: B {}\ntrait B: A {}\n</code></pre>\n\n<p>cannot work. But in this case, <code>MySpecialTrait</code> is only referenced in the generic type arguments, so why is it required to compute the supertraits of <code>Cloneable&lt;dyn MySpecialTrait&gt;</code>?</p>\n\n<p>Apart from that, is there are workaround for this problem?</p>\n\n<p><strong>Edit</strong>\nI do not want <code>clone_all</code> to work only with all concrete subtypes of <code>Cloneable&lt;T&gt;</code>, but also with all trait types, e.g. I want to call <code>clone_all</code> with an argument of type <code>Vec&lt;Box&lt;dyn MySpecialTrait&gt;&gt;</code>.</p>\n"}, {"tags": ["rust", "distributed-system", "rust-tokio", "mio", "dccp"], "comments": [{"owner": {"reputation": 4516, "user_id": 1937198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b97a3ec92aed1c16e35c1bf532465d6b?s=128&d=identicon&r=PG", "display_name": "user1937198", "link": "https://stackoverflow.com/users/1937198/user1937198"}, "edited": false, "score": 0, "creation_date": 1573425546, "post_id": 58780423, "comment_id": 103868773, "body": "You might be able to use mio EventedFd to build a custom Stream type if you write all the code to handle actually interacting with the socket and use mio for the calls to epoll: <a href=\"https://docs.rs/mio/0.6.19/mio/unix/struct.EventedFd.html\" rel=\"nofollow noreferrer\">docs.rs/mio/0.6.19/mio/unix/struct.EventedFd.html</a>"}, {"owner": {"reputation": 53, "user_id": 9653564, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dd3f6070e444f3e1d43dbe9fdd48844?s=128&d=identicon&r=PG&f=1", "display_name": "Kou Chibin", "link": "https://stackoverflow.com/users/9653564/kou-chibin"}, "reply_to_user": {"reputation": 4516, "user_id": 1937198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b97a3ec92aed1c16e35c1bf532465d6b?s=128&d=identicon&r=PG", "display_name": "user1937198", "link": "https://stackoverflow.com/users/1937198/user1937198"}, "edited": false, "score": 0, "creation_date": 1573466746, "post_id": 58780423, "comment_id": 103878839, "body": "@user1937198 That&#39;s exactly what I am looking for. Thanks!"}], "owner": {"reputation": 53, "user_id": 9653564, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dd3f6070e444f3e1d43dbe9fdd48844?s=128&d=identicon&r=PG&f=1", "display_name": "Kou Chibin", "link": "https://stackoverflow.com/users/9653564/kou-chibin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1573311267, "creation_date": 1573311267, "question_id": 58780423, "link": "https://stackoverflow.com/questions/58780423/dccp-support-for-mio-in-rust", "title": "DCCP support for mio in Rust", "body": "<p>I am doing a distributed system project about DCCP protocol. So the aim is for each node to be able to communicate with all other nodes through DCCP protocol. I know I can use a data structure to maintain all sockets that are established. But I want a more asynchronous solution so that only one thread is needed to handle all message events from all sockets. It seems that tokio and mio crate only implement asynchronous TCP and UDP datatypes. I wonder if there is a way to make it work for DCCP as well. Thanks in advance!</p>\n"}, {"tags": ["rust", "type-inference"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573305776, "post_id": 58779250, "comment_id": 103843608, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/51371674/how-does-one-subtract-1-from-a-bigint-in-rust\">How does one subtract 1 from a BigInt in Rust?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1573306007, "post_id": 58779250, "comment_id": 103843660, "body": "Summary: there may be many types that implement <code>Add&lt;Decimal, Output = Decimal&gt;</code> and the compiler will not choose one. To fix it, the easiest thing is probably to use the turbofish: <code>let add = one::&lt;Decimal&gt;() + val</code> (the <code>: Decimal</code> annotation on <code>add</code> is not necessary because the <code>Add</code> implementation unambiguously determines the <code>Output</code> type.)"}, {"owner": {"reputation": 43, "user_id": 4024649, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GBIKP.jpg?s=128&g=1", "display_name": "Fraggle", "link": "https://stackoverflow.com/users/4024649/fraggle"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573325269, "post_id": 58779250, "comment_id": 103848588, "body": "Is there a way to get the compiler to show what it&#39;s unable to choose between?  Decimal only allows additions with other Decimals (otherwise I&#39;d be using a literal &#39;1&#39; instead), so I&#39;m not sure what the ambiguity is in this particular case."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 1, "last_activity_date": 1581604879, "last_edit_date": 1581604879, "creation_date": 1573304486, "answer_id": 58779551, "question_id": 58779250, "link": "https://stackoverflow.com/questions/58779250/why-does-type-inference-not-work-during-addition-when-it-does-during-assignment/58779551#58779551", "title": "Why does type inference not work during addition when it does during assignment", "body": "<p>There's only one type\u00b9 that can be <em>assigned</em> to a <code>Decimal</code> &mdash; <code>Decimal</code> itself &mdash; but there may be any number of types that can be <em>added</em> to a <code>Decimal</code>.</p>\n\n<pre><code>let add: Decimal = one() + val;\n</code></pre>\n\n<p><code>one()</code> must be of <em>some</em> type that implements <code>Add&lt;Decimal, Output = Decimal&gt;</code>. But there could be many types that satisfy that constraint, and the compiler will not choose one, so you get an error.</p>\n\n<pre><code>let inc: Decimal = val + one();\n</code></pre>\n\n<p>In this case, if <code>one()</code> is of type <code>T</code>, <code>Decimal</code> must implement <code>Add&lt;T, Output = Decimal&gt;</code>. But again, there could be many <code>T</code>s that satisfy this constraint, and the compiler will not choose one.</p>\n\n<p>To fix either error, you can explicitly say that you want the <code>Decimal</code> version of <code>one</code>:</p>\n\n<pre><code>let add = one::&lt;Decimal&gt;() + val;\n</code></pre>\n\n<p>(The <code>: Decimal</code> annotation on <code>add</code> is no longer necessary because the <code>Add</code> implementation unambiguously determines the <code>Output</code> type.)</p>\n\n<blockquote>\n  <p>Decimal only allows additions with other Decimals (otherwise I'd be using a literal '1' instead), so I'm not sure what the ambiguity is in this particular case.</p>\n</blockquote>\n\n<p>It doesn't actually matter how many types <em>exist</em> that satisfy the requirements. The compiler does not \"go looking\" for types to satisfy all the constraints; the types have to be unambiguously determined by only local information. Suppose there was only one type that worked, but it was defined in a third-party crate; should the compiler know about it? Or if there's only one type that works <em>today</em>, but tomorrow you include a new crate and there are two such types &mdash; should your code break then? It's to avoid this kind of nonlocal breakage that Rust declines to <em>choose</em> a type for you. In general\u00b2, the compiler will only <em>deduce</em> types; it doesn't speculate.</p>\n\n<p>This question is a lot like <a href=\"https://stackoverflow.com/questions/51371674/how-does-one-subtract-1-from-a-bigint-in-rust\">How does one subtract 1 from a BigInt in Rust?</a></p>\n\n<hr>\n\n<p>\u00b9Okay, this is not strictly true. Types that can be <em>coerced</em> to <code>Decimal</code> can also be assigned to <code>Decimal</code> variables. But coercion is only possible when the compiler knows both sides of the assignment already, so you can't infer through the <code>=</code> when a coercion is happening.</p>\n\n<p>\u00b2There are limited contexts in which the compiler <em>can</em> choose types. See <a href=\"https://stackoverflow.com/a/52692592/3650362\">this answer</a> for one example. <a href=\"https://github.com/dtolnay/case-studies/blob/master/autoref-specialization/README.md\" rel=\"nofollow noreferrer\">Autoref-based stable specialization</a> describes using a similar technique. I could not find a way to apply this to your problem.</p>\n"}, {"tags": [], "owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "is_accepted": false, "score": 2, "last_activity_date": 1573324339, "creation_date": 1573324339, "answer_id": 58782324, "question_id": 58779250, "link": "https://stackoverflow.com/questions/58779250/why-does-type-inference-not-work-during-addition-when-it-does-during-assignment/58782324#58782324", "title": "Why does type inference not work during addition when it does during assignment", "body": "<p>That is how Rust does operator overloading.\nFor an expression like <code>a+b</code>, Rust will first determine the type of <code>a</code>, lets say it has Type <code>T</code> and <code>b</code> has type <code>U</code>.\nWhen <code>T</code> implements <code>Add&lt;U, Output = V&gt;</code> the addition can be compiled and the resulting type will be <code>V</code>.</p>\n\n<p>I some circumstances the compiler can infer the Type of <code>a</code> by the context, but this in not the case in your example.</p>\n\n<p>Because <code>one()</code> has multiple types which implement the <code>Add</code> Trait it cannot determine which Type <code>one()</code> should have. It could be that <code>f64</code> implements <code>Add&lt;Decimal, Output=Decimal&gt;</code>, which would make your expression ambiguous.</p>\n\n<p>In the expression <code>val + one()</code> the type of the first operand is determined, but again there a multiple implementations of <code>Add</code> which could be applied: <code>Add&lt;Decimal, Output=Decimal&gt;</code>, <code>Add&lt;f64, Output=Decimal</code>.</p>\n\n<p>All of this can be solved by annotating <code>one()</code> like this: <code>one::&lt;Decimal&gt;()</code>. Which has an unambiguous Type.</p>\n"}], "owner": {"reputation": 43, "user_id": 4024649, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GBIKP.jpg?s=128&g=1", "display_name": "Fraggle", "link": "https://stackoverflow.com/users/4024649/fraggle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 58779551, "answer_count": 2, "score": 4, "last_activity_date": 1581604879, "creation_date": 1573302252, "question_id": 58779250, "link": "https://stackoverflow.com/questions/58779250/why-does-type-inference-not-work-during-addition-when-it-does-during-assignment", "title": "Why does type inference not work during addition when it does during assignment", "body": "<p>I'm making an app using the rust_decimal crate.  Part of my app involves operations where the value '1' is an operand, so I tried using num_traits::identities::one() and ran into some unexpected errors:</p>\n\n<pre><code>use rust_decimal::Decimal;\nuse num_traits::identities::*;\n\nfn foo(val : Decimal) {\n    let _1 = one(); // E0282, expected\n    let _one : Decimal = one(); // Ok, expected\n    let add : Decimal = one() + val; // E0283, unexpected\n    let inc : Decimal = val + one(); // E0284, unexpected\n}\n</code></pre>\n\n<p>I am surprised that the compiler cannot figure out what type one() is meant to return in the last two lines.  Why is this?</p>\n"}, {"tags": ["rust", "containers"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573302068, "post_id": 58779198, "comment_id": 103842833, "body": "Can you provide more context why you need this?"}, {"owner": {"reputation": 309, "user_id": 5567817, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e546330d9d1e879b77caceb096f55282?s=128&d=identicon&r=PG&f=1", "display_name": "Iniesta8", "link": "https://stackoverflow.com/users/5567817/iniesta8"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573302915, "post_id": 58779198, "comment_id": 103843008, "body": "Assume that B contains all prime factors of an natural number x_i and A contains all prime factors to represent all the sets of prime factors of the numbers x_1...x_n."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573305512, "post_id": 58779198, "comment_id": 103843546, "body": "The confusing part is that a mathematical set does <b>not</b> contain duplicates. This is why I hoped that additional context would elucidate the underlying logic."}, {"owner": {"reputation": 309, "user_id": 5567817, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e546330d9d1e879b77caceb096f55282?s=128&d=identicon&r=PG&f=1", "display_name": "Iniesta8", "link": "https://stackoverflow.com/users/5567817/iniesta8"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573306915, "post_id": 58779198, "comment_id": 103843863, "body": "Yes, that&#39;s why I can&#39;t use <code>std::collections::HashSet</code>..."}, {"owner": {"reputation": 309, "user_id": 5567817, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e546330d9d1e879b77caceb096f55282?s=128&d=identicon&r=PG&f=1", "display_name": "Iniesta8", "link": "https://stackoverflow.com/users/5567817/iniesta8"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573307553, "post_id": 58779198, "comment_id": 103844027, "body": "I want to solve project euler&#39;s 5th problem: <a href=\"https://projecteuler.net/problem=5\" rel=\"nofollow noreferrer\">projecteuler.net/problem=5</a>"}, {"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1573324649, "post_id": 58779198, "comment_id": 103848427, "body": "This is probably not applicable in project euler, but in general you can use the multiset crate <a href=\"https://docs.rs/multiset/0.0.5/multiset/\" rel=\"nofollow noreferrer\">docs.rs/multiset/0.0.5/multiset</a>"}], "answers": [{"tags": [], "owner": {"reputation": 848, "user_id": 8195987, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9550984d8633cb6f1b538445082dd400?s=128&d=identicon&r=PG&f=1", "display_name": "Angelicos Phosphoros", "link": "https://stackoverflow.com/users/8195987/angelicos-phosphoros"}, "is_accepted": false, "score": 0, "last_activity_date": 1573310902, "creation_date": 1573310902, "answer_id": 58780382, "question_id": 58779198, "link": "https://stackoverflow.com/questions/58779198/is-there-a-container-and-method-to-add-list-b-to-list-a-so-that-b-is-a-subset-of/58780382#58780382", "title": "Is there a container and method to add list B to list A so that B is a subset of A", "body": "<p>If your sequences are sorted, you can use function like this:</p>\n\n<pre><code>fn combine(first: &amp;[u32], second:&amp;[u32])-&gt;Vec&lt;u32&gt;{\n    if first.is_empty(){\n        return second.to_vec();\n    }\n    if second.is_empty(){\n        return first.to_vec();\n    }\n    // I will assume that both sorted\n    let mut first_counted: Vec&lt;(u32, usize)&gt; = Vec::with_capacity(first.len());\n    for &amp;item in first.iter(){\n        match first_counted.last_mut(){\n            Some(last) if last.0 == item =&gt;{\n                last.1 += 1;\n            },\n            _ =&gt; first_counted.push((item, 1)),\n        };\n    }\n\n    let mut second_counted: Vec&lt;(u32, usize)&gt; = Vec::with_capacity(second.len());\n    for &amp;item in second.iter(){\n        match second_counted.last_mut(){\n            Some(last) if last.0 == item =&gt; {\n                last.1 += 1;\n            },\n            _ =&gt; second_counted.push((item, 1)),\n        };\n    }\n    let mut res = Vec::with_capacity(std::cmp::max(first.len(),second.len()));\n    let mut fidx = 0;\n    let mut sidx = 0;\n    while fidx &lt; first_counted.len() &amp;&amp; sidx &lt; second_counted.len(){\n        let f = &amp;first_counted[fidx];\n        let s = &amp;second_counted[sidx];\n        match f.0.cmp(&amp;s.0){\n            std::cmp::Ordering::Less=&gt;{\n                res.resize(res.len()+f.1, f.0);\n                fidx+=1;\n            },\n            std::cmp::Ordering::Equal=&gt;{\n                res.resize(res.len()+std::cmp::max(f.1, s.1), f.0);\n                fidx+=1;\n                sidx+=1;\n            },\n            std::cmp::Ordering::Greater=&gt;{\n                res.resize(res.len()+s.1, s.0);\n                sidx+=1;\n            },\n        }\n    }\n    res\n}\n\nfn main() {\n    assert_eq!(combine(&amp;[1, 2, 3], &amp;[2, 2, 3]), vec![1,2,2,3]);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 0, "last_activity_date": 1573351770, "creation_date": 1573351770, "answer_id": 58785171, "question_id": 58779198, "link": "https://stackoverflow.com/questions/58779198/is-there-a-container-and-method-to-add-list-b-to-list-a-so-that-b-is-a-subset-of/58785171#58785171", "title": "Is there a container and method to add list B to list A so that B is a subset of A", "body": "<p>You can use a <code>HashMap</code> or <code>BTreeMap</code> to keep track of each number (as the key) and how many times it repeats (as the value). Then you can update one of those maps based on the items in the other. If you want to keep the numbers in order then <code>BTreeMap</code> will do this automatically:</p>\n\n<pre><code>use itertools::repeat_n;\nuse std::collections::BTreeMap;\n\nfn count_repeats(inputs: &amp;[u32]) -&gt; BTreeMap&lt;u32, usize&gt; {\n    inputs.iter().fold(BTreeMap::new(), |mut map, &amp;n| {\n        let count = map.entry(n).or_insert(0);\n        *count += 1;\n        map\n    })\n}\n\nfn main() {\n    let mut a = count_repeats(&amp;[1, 2, 3]);\n    let b = count_repeats(&amp;[2, 2, 3]);\n\n    for (n, count_b) in b {\n        a.entry(n)\n            .and_modify(|count_a| *count_a = count_b.max(*count_a))\n            .or_insert(count_b);\n    }\n\n    let result: Vec&lt;u32&gt; = a\n        .into_iter()\n        .flat_map(|(&amp;n, &amp;count)| repeat_n(n, count))\n        .collect();\n\n    println!(\"{:?}\", result); // [1, 2, 2, 3]\n}\n</code></pre>\n"}], "owner": {"reputation": 309, "user_id": 5567817, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e546330d9d1e879b77caceb096f55282?s=128&d=identicon&r=PG&f=1", "display_name": "Iniesta8", "link": "https://stackoverflow.com/users/5567817/iniesta8"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1573351846, "creation_date": 1573301803, "last_edit_date": 1573351846, "question_id": 58779198, "link": "https://stackoverflow.com/questions/58779198/is-there-a-container-and-method-to-add-list-b-to-list-a-so-that-b-is-a-subset-of", "title": "Is there a container and method to add list B to list A so that B is a subset of A", "body": "<p>is there a container and/or a method in Rust to add a list of elements (B) to another list of elements (A) so that B is a subset of A? Furthermore A and B can both contain duplicates.</p>\n\n<p>Example:</p>\n\n<pre><code>A = {1, 2, 3}\nB = {2, 2, 3}\n</code></pre>\n\n<p>I'd like to get:</p>\n\n<pre><code>A = {1, 2, 2, 3}\n</code></pre>\n\n<p>Update:</p>\n\n<p>I want to solve project euler's 5th problem (<a href=\"https://projecteuler.net/problem=5\" rel=\"nofollow noreferrer\">https://projecteuler.net/problem=5</a>). My current solution is the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn prime_factors(mut n: i64) -&gt; Vec&lt;i64&gt; {\n    let mut factors = Vec::new();\n\n    let mut p = 2;\n    while n &gt;= p * p {\n        if n % p == 0 {\n            factors.push(p);\n            n /= p;\n        } else {\n            p += 1;\n        }\n    }\n    factors.push(n);\n    factors\n}\n\npub fn smallest_multiple(n: i64) -&gt; i64 {\n    let mut factors: Vec&lt;i64&gt; = Vec::new();\n\n    for p in 1..n + 1 {\n        let pfs = prime_factors(p as i64);\n\n        for ele in &amp;pfs {\n            let a = pfs.iter().filter(|n| *n == ele).count();\n            let b = factors.iter().filter(|n| *n == ele).count();\n\n            let diff = if a &gt; b {\n                a - b\n            } else {\n                continue;\n            };\n\n            for _ in 0..diff {\n                factors.push(*ele);\n            }\n        }\n    }\n    factors.iter().product()\n}\n</code></pre>\n\n<p>Is there any collection type or something in Rust to solve smallest_multiple()?</p>\n\n<p>I know that this problem can be solved using gcd and lcm, like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn smallest_multiple2(n: u64) -&gt; u64 {\n    let mut res: u64 = 1;\n    let gcd = |mut a: u64, mut b: u64| -&gt; u64 {\n        while a != 0 {\n            let c = a;\n            a = b % a;\n            b = c;\n        }\n        b\n    };\n\n    let lcm = |a: u64, b: u64| -&gt; u64 { a * (b / gcd(a, b)) };\n    for i in 2..n + 1 {\n        res = lcm(res, i);\n    }\n    res\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 93, "user_id": 8675326, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a1e3c38bc816470b68256687712c758?s=128&d=identicon&r=PG&f=1", "display_name": "TryingToLearn", "link": "https://stackoverflow.com/users/8675326/tryingtolearn"}, "edited": false, "score": 0, "creation_date": 1573300936, "post_id": 58778980, "comment_id": 103842587, "body": "Then i get &quot;explicit lifetime name needed here&quot; where i Put the &amp;"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 93, "user_id": 8675326, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a1e3c38bc816470b68256687712c758?s=128&d=identicon&r=PG&f=1", "display_name": "TryingToLearn", "link": "https://stackoverflow.com/users/8675326/tryingtolearn"}, "edited": false, "score": 0, "creation_date": 1573301450, "post_id": 58778980, "comment_id": 103842711, "body": "@liljan Yes, the compiler can&#39;t infer the lifetime of the reference, so you need to specify it explicitly. I&#39;ve now amended the answer to show an example."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573306943, "post_id": 58778980, "comment_id": 103843870, "body": "You should almost always bound argument types on <code>IntoIterator</code> instead of <code>Iterator</code>, because it is more general; e.g., in this case you could also pass <code>some_function(&amp;s.data)</code> without having to call <code>iter()</code>."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1573309603, "post_id": 58778980, "comment_id": 103844513, "body": "@trentcl Good pooint, thanks. I&#39;ve now amended the answer, leaving the function as-is for simplicity, but adding a paragraph that advertises the advantages of <code>IntoIterator</code>."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": false, "score": 3, "last_activity_date": 1573394066, "last_edit_date": 1573394066, "creation_date": 1573300256, "answer_id": 58778980, "question_id": 58778955, "link": "https://stackoverflow.com/questions/58778955/pass-vec-as-iterator-to-function/58778980#58778980", "title": "Pass Vec as Iterator to function", "body": "<p>You need a trait bound of <code>Iterator&lt;Item = &amp;OtherStruct&gt;</code>, since <code>Vec&lt;T&gt;::iter</code> returns an iterator over <em>references</em> to <code>T</code>. An iterator producing <code>T</code> values would have to move them out of the vector, which is safe only if the vector itself is consumed, and is what <code>Vec&lt;T&gt;::into_iter()</code> does.</p>\n\n<p>Note that you'll need to also specify a lifetime of the reference, tied to lifetime of the data:</p>\n\n<pre><code>fn some_function&lt;'a, I&gt;(data: I)\nwhere\n    I: Iterator&lt;Item = &amp;'a Other&gt; + 'a,\n{\n    for el in data {\n        println!(\"{:?}\", el)\n    }\n}\n</code></pre>\n\n<p>Complete example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1bf61110c657a18c787d83c616e872e7\" rel=\"nofollow noreferrer\">in the playground</a>.</p>\n\n<p>Finally, it's worth pointing out that in general it is preferred to request the <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a> bound instead of <code>Iterator</code>. Since <code>Iterator</code> implements <code>IntoIterator</code>, such function would keep accepting iterators, but would also accept objects that can be converted into iterators. In this case it would accept <code>&amp;s.data</code> in addition to <code>s.data.iter()</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1573307342, "post_id": 58779128, "comment_id": 103843970, "body": "This is probably not what you want. If you really want to make a copy of the struct, <code>data.iter().cloned()</code> will do the job as long as <code>OtherStruct</code> implements <code>Clone</code>. But if <code>callFunctionHere</code> doesn&#39;t need to consume the <code>OtherStruct</code>s, you should make it accept references instead and follow user4815162342&#39;s answer."}], "tags": [], "owner": {"reputation": 93, "user_id": 8675326, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a1e3c38bc816470b68256687712c758?s=128&d=identicon&r=PG&f=1", "display_name": "TryingToLearn", "link": "https://stackoverflow.com/users/8675326/tryingtolearn"}, "is_accepted": false, "score": -2, "last_activity_date": 1573315073, "last_edit_date": 1573315073, "creation_date": 1573301302, "answer_id": 58779128, "question_id": 58778955, "link": "https://stackoverflow.com/questions/58778955/pass-vec-as-iterator-to-function/58779128#58779128", "title": "Pass Vec as Iterator to function", "body": "<p>I solved it by:</p>\n\n<pre><code>callFunctionHere(data.iter().map(|i| OtherStruct{\n    d: i.d\n})\n\u00b4\u00b4\u00b4\n</code></pre>\n"}], "owner": {"reputation": 93, "user_id": 8675326, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a1e3c38bc816470b68256687712c758?s=128&d=identicon&r=PG&f=1", "display_name": "TryingToLearn", "link": "https://stackoverflow.com/users/8675326/tryingtolearn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 375, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1593018798, "creation_date": 1573300050, "last_edit_date": 1593018798, "question_id": 58778955, "link": "https://stackoverflow.com/questions/58778955/pass-vec-as-iterator-to-function", "title": "Pass Vec as Iterator to function", "body": "<p>What I want to do:</p>\n<ul>\n<li>I have a struct that includes a <code>Vec</code> of another struct.</li>\n<li>I will update this <code>Vec</code> from time to time.</li>\n<li>I want to pass this <code>Vec</code> as a <code>Iterator</code> to another function.</li>\n</ul>\n<p>Here follows a short code snippet of how I want to do things but I just can't get it to compile whatever I do:</p>\n<pre><code>struct Main {\n    data: Vec&lt;OtherStruct&gt;\n}\n\ncallFunctionHere(self.data.iter());\n\npub fn callFunctionHere&lt;I&gt;(data: I)\nwhere\n     I: Iterator&lt;Item = OtherStruct&gt;,\n{\n   // for i in data...\n}\n</code></pre>\n<p>Could I pass the data as a new copied object of some sort?</p>\n"}, {"tags": ["rust", "extension-methods", "generic-constraints"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1573290514, "post_id": 58777595, "comment_id": 103840602, "body": "<a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/cmp/trait.PartialEq.html</a> and <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch10-02-traits.html</a>"}, {"owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1573292308, "post_id": 58777595, "comment_id": 103840913, "body": "@Stargateur I think <code>PartialEq</code>/<code>Eq</code> trait is equivalent to <code>Equatable</code> protocol in Swift. Which is not what I am asking here."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1573294690, "post_id": 58777595, "comment_id": 103841328, "body": "oh so you want <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/&hellip;</a> ?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1573295366, "post_id": 58777595, "comment_id": 103841466, "body": "Does he? Is figured he just wanted <code>impl Foo for Option&lt;String&gt;</code> for some extension trait <code>Foo</code>. @Eonil, since not all of us are familiar with Swift, can you describe what this feature does?"}, {"owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1573297931, "post_id": 58777595, "comment_id": 103841993, "body": "@mcarton I think what you talked is what I was looking for. It works as I expected. Thanks. Can you convert your comment into an answer? I updated my question BTW."}, {"owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1573298372, "post_id": 58777595, "comment_id": 103842095, "body": "@Stargateur I think it&#39;s something else though it looks like something highly related."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1573348899, "creation_date": 1573348899, "answer_id": 58785012, "question_id": 58777595, "link": "https://stackoverflow.com/questions/58777595/rust-equivalent-to-swift-extension-methods-with-equal-generic-parameter-constrai/58785012#58785012", "title": "Rust equivalent to Swift extension methods with equal generic parameter constraint?", "body": "<p>You can just implement the trait for the concrete type <code>Option&lt;String&gt;</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl OptionUtil for Option&lt;String&gt; {\n    fn sample1(self: &amp;Self) {\n        println!(\"{:#?}\", self);\n    }\n}\n</code></pre>\n\n<p>I wrote crate, <a href=\"https://crates.io/crates/type_eq\" rel=\"nofollow noreferrer\">type_eq</a>, which would let you write something that <em>looks</em> more like your Swift example. But it is identical to implementing the trait for <code>Option&lt;String&gt;</code>:</p>\n\n<pre><code>use type_eq::{Constrain, TypeEq};\nuse std::fmt::Debug;\n\ntrait OptionUtil {\n    fn sample1(&amp;self);\n}\n\nimpl&lt;T&gt; OptionUtil for Option&lt;T&gt;\nwhere\n    Constrain: TypeEq&lt;T, String&gt;,\n    T: Debug,\n{\n    fn sample1(&amp;self) {\n        println!(\"{:#?}\", self);\n    }\n}\n\nfn main() {\n    let s = Some(String::from(\"hello\"));\n    println!(\"{:?}\", s);\n}\n</code></pre>\n\n<p>There are actually very few cases where this crate is useful. Most of the time the simpler code above will work, and is preferred.</p>\n"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "accepted_answer_id": 58785012, "answer_count": 1, "score": 2, "last_activity_date": 1573368738, "creation_date": 1573287930, "last_edit_date": 1573368738, "question_id": 58777595, "link": "https://stackoverflow.com/questions/58777595/rust-equivalent-to-swift-extension-methods-with-equal-generic-parameter-constrai", "title": "Rust equivalent to Swift extension methods with equal generic parameter constraint?", "body": "<p>In Swift, I can add method to a generic type with parameter equality constraint.</p>\n\n<pre><code>extension Optional where Wrapped == String {\n    // Available only for `Optional&lt;String&gt;` type.\n    func sample1() { ... }\n}\n</code></pre>\n\n<p>How to do this in Rust? </p>\n\n<hr>\n\n<h2>Update</h2>\n\n<p>This feature is called <a href=\"https://docs.swift.org/swift-book/LanguageGuide/Generics.html#ID553\" rel=\"nofollow noreferrer\">Extensions with a Generic Where Clause</a>.</p>\n\n<p>I think this is basically same feature with Rust's <code>impl</code> with <code>where</code> clause without explicit trait.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait OptionUtil {\n    fn sample1(&amp;self);\n}\n\nimpl&lt;T&gt; OptionUtil for Option&lt;T&gt; where T:std::fmt::Debug {\n    fn sample1(&amp;self) {\n        println!(\"{:#?}\", self);\n    }\n}\n</code></pre>\n\n<p>Is equivalent (without explicit trait) to</p>\n\n<pre class=\"lang-swift prettyprint-override\"><code>extension Optional where Wrapped: DebugDescription {\n    func sample1() {\n        print(\"\\(self)\")\n    }\n}\n</code></pre>\n\n<p>Therefore, I thought this Rust code would work, but it doesn't work with an error. (<code>equality constraints are not yet supported in where clauses (see #20041)</code>)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T&gt; OptionUtil for Option&lt;T&gt; where T == String {\n    fn sample1(&amp;self) {\n        println!(\"{:#?}\", self);\n    }\n}\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 1029, "user_id": 7878485, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/15dabd902549f21699b86daa04ecaeed?s=128&d=identicon&r=PG&f=1", "display_name": "nitronoid", "link": "https://stackoverflow.com/users/7878485/nitronoid"}, "is_accepted": true, "score": 5, "last_activity_date": 1573262081, "creation_date": 1573262081, "answer_id": 58775540, "question_id": 58774335, "link": "https://stackoverflow.com/questions/58774335/creating-a-generic-function-bounded-to-integer-types/58775540#58775540", "title": "Creating a generic function bounded to integer types", "body": "<p>Got there in the end. Turns out I needed to use the <code>num::PrimInt</code> trait as my bound because it includes all of the bitwise operations and casts. The <code>num::Integer</code> is less constrained and models an integer in the pure mathematical sense, so no bitwise operations.</p>\n\n<p>The final code I have looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate num;\n\nfn bit_count&lt;T&gt;(x: T) -&gt; T\nwhere\n    T: num::PrimInt + std::iter::Sum,\n{    \n    let n_bits = std::mem::size_of::&lt;T&gt;() * 8;\n    (0..n_bits).into_iter().map(|i| (x &gt;&gt; i) &amp; T::one()).sum()\n\n}\n\nfn main() {\n    println!(\"{} has {} set bits.\", 5, bit_count(5u32));\n    println!(\"{} has {} set bits.\", 5, bit_count(5i32));\n    println!(\"{} has {} set bits.\", 5, bit_count(5i64));\n}\n</code></pre>\n\n<p>It would be nice to not need that <code>T::one()</code> but it seems there's no way around it. Additionally the <code>std::iter::Sum</code> trait was needed in my bounds to allow the functional workflow.</p>\n\n<p>The <code>num</code> crate actually has a function to count the number of set bits too <code>num::PrimInt::count_ones</code>.</p>\n"}], "owner": {"reputation": 1029, "user_id": 7878485, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/15dabd902549f21699b86daa04ecaeed?s=128&d=identicon&r=PG&f=1", "display_name": "nitronoid", "link": "https://stackoverflow.com/users/7878485/nitronoid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 756, "favorite_count": 0, "accepted_answer_id": 58775540, "answer_count": 1, "score": 5, "last_activity_date": 1573262081, "creation_date": 1573250743, "question_id": 58774335, "link": "https://stackoverflow.com/questions/58774335/creating-a-generic-function-bounded-to-integer-types", "title": "Creating a generic function bounded to integer types", "body": "<p>In my attempt to learn rust I am starting with some basic exercises.\nI have written a simple function in what I hope is idiomatic rust to count the number of set bits in an integer.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn bit_count(x: u32) -&gt; u32 {\n    (0..32).into_iter().map(|i| (x &gt;&gt; i) &amp; 1).sum()\n}\n\nfn main() {\n    println!(\"{} has {} set bits.\", 5, bit_count(5));\n}\n</code></pre>\n\n<p>Now I want to make the function generic so that I can pass any integer type: <code>i32</code>, <code>u32</code>, <code>i64</code>, <code>u64</code>... etc.</p>\n\n<p>I am quite familiar with tmp in c++ but my attempt with rust generics have failed, so far I have this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate num;\n\nfn bit_count&lt;T&gt;(x: T) -&gt; T\nwhere\n    T: num::Integer + std::ops::BitAnd + std::ops::Shr + num::NumCast,\n    std::ops::Range&lt;T&gt;: std::iter::IntoIterator,\n{\n    (T::zero()..num::NumCast::from(32).unwrap())\n        .into_iter()\n        .map(|i| (x &gt;&gt; num::NumCast::from(i)) &amp; T::one())\n        .sum()\n}\n\nfn main() {\n    println!(\"{} has {} set bits.\", 5, bit_count(5));\n}\n</code></pre>\n\n<p>I saw the <code>num</code> crate advertised and it seemed like a good fit. I was expecting to have <code>T: num::Integer</code> and be done, however I feel like I'm spiraling down a rabbit hole here and I can't seem to get the right combination of bounds.</p>\n\n<p>Any suggestions would be great! and any tips to make my code more idiomatic would also be helpful, thanks.</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573248762, "post_id": 58773989, "comment_id": 103834067, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/36415348/155423\">Type mismatches resolving a closure that takes arguments by reference</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58773989/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573310510, "post_id": 58774701, "comment_id": 103844730, "body": "I don&#39;t think you will get a better explanation than one offered in the <a href=\"https://stackoverflow.com/a/46198877/1600898\">other answer</a>, which is that Rust compiler (currently) simply isn&#39;t smart enough to perform the appropriate inference when the closure is in a variable."}, {"owner": {"reputation": 355, "user_id": 10019917, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qoQ4MMftuuA/AAAAAAAAAAI/AAAAAAAAAA0/G4mu8VtJ-Zw/photo.jpg?sz=128", "display_name": "Andrew Moffat", "link": "https://stackoverflow.com/users/10019917/andrew-moffat"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573319244, "post_id": 58774701, "comment_id": 103846990, "body": "I have been able to understand more about the problem, with the help of eddyb in <a href=\"https://github.com/rust-lang/rust/issues/41078#issuecomment-552061906\" rel=\"nofollow noreferrer\">this discussion</a>.  The basic gist was that I couldn&#39;t understand why the compiler would care about the lifetime of <code>&amp;&#39;a S</code>, when it wasn&#39;t used as an output, nor was anything captured by the closure.  The answer is basically what @user4815162342 said, which is that the compiler isn&#39;t smart enough to know that the closure isn&#39;t storing <code>&amp;S</code> somewhere, and so it needs a guarantee that the reference will outlive the closure."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1573324339, "post_id": 58774701, "comment_id": 103848357, "body": "The <code>constrain</code> function from the &quot;How to declare...&quot; answer is actually applicable here as well! One just has to be careful to apply <code>constrain</code> to the closure <i>literal</i>, and not later at the <code>filter</code> invocation site (as was my first attempt). See my answer for a runnable example."}], "tags": [], "owner": {"reputation": 355, "user_id": 10019917, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qoQ4MMftuuA/AAAAAAAAAAI/AAAAAAAAAA0/G4mu8VtJ-Zw/photo.jpg?sz=128", "display_name": "Andrew Moffat", "link": "https://stackoverflow.com/users/10019917/andrew-moffat"}, "is_accepted": true, "score": 2, "last_activity_date": 1573253526, "creation_date": 1573253526, "answer_id": 58774701, "question_id": 58773989, "link": "https://stackoverflow.com/questions/58773989/why-does-this-simple-closure-fail-while-the-other-two-functions-succeed/58774701#58774701", "title": "Why does this simple closure fail while the other two functions succeed?", "body": "<p>From following <a href=\"https://stackoverflow.com/q/36415348/155423\">Type mismatches resolving a closure that takes arguments by reference</a> and <a href=\"https://stackoverflow.com/questions/31403723/how-to-declare-a-lifetime-for-a-closure-argument/46198877#46198877\">How to declare a lifetime for a closure argument?</a> it appears the solution is to change:</p>\n\n<pre><code>fn filter&lt;P&gt;(predicate: P)\nwhere\n    P: Fn(&amp;S) -&gt; bool,\n{\n    predicate(&amp;S {});\n}\n</code></pre>\n\n<p>to</p>\n\n<pre><code>fn filter&lt;'a, P&gt;(predicate: P)\nwhere\n    P: Fn(&amp;'a S) -&gt; bool,\n{\n    predicate(&amp;S {});\n}\n</code></pre>\n\n<p>Though I'm not sure why.  It seems to be related to inferred lifetimes when a closure is specified inline vs when it is stored in a variable and used later.  But it's unclear why <code>&amp;S</code> needs an <code>'a</code> lifetime, when <code>&amp;S</code> is not a result that is returned.  If you understand this, please explain in a comment.</p>\n\n<p>Though this question is \"solved\", the trimmed-down failure case posted originally does not actually help my true problem, because I cannot edit the source of the code I am having trouble with <a href=\"https://docs.rs/walkdir/2.2.9/walkdir/struct.IntoIter.html#method.filter_entry\" rel=\"nofollow noreferrer\">https://docs.rs/walkdir/2.2.9/walkdir/struct.IntoIter.html#method.filter_entry</a></p>\n\n<p>The issue manifested when I tried to pass a stored callback into the <code>filter_entry</code> method.  The solution would be to put in explicit lifetimes in the <code>filter_entry</code> signature, as described earlier in this post, but you can only do that if you want to edit the third party code.  I think unfortunately the answer for that particular problem is \"you can't use a stored closure with <code>filter_entry</code>\"</p>\n"}, {"tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": false, "score": 1, "last_activity_date": 1573333659, "last_edit_date": 1573333659, "creation_date": 1573323129, "answer_id": 58782138, "question_id": 58773989, "link": "https://stackoverflow.com/questions/58773989/why-does-this-simple-closure-fail-while-the-other-two-functions-succeed/58782138#58782138", "title": "Why does this simple closure fail while the other two functions succeed?", "body": "<blockquote>\n  <p>I think unfortunately the answer for that particular problem is \"you can't use a stored closure with <code>filter_entry</code>\"</p>\n</blockquote>\n\n<p>The approach from <a href=\"https://stackoverflow.com/questions/31403723/how-to-declare-a-lifetime-for-a-closure-argument/46198877#46198877\">Shepmaster's answer</a> can be applied to achieve this goal. Like in that answer, we can define a generic <code>constrain</code> function requiring a type with the kind of lifetime bounds that will be required to satisfy <code>filter</code>. We apply the function to the closure and <em>then</em> store it to. Note that calling <code>constrain(cb)</code> when invoking <code>filter</code> (which was my first attempt) doesn't work because the compiler cannot infer the type of the closure variable when it is passed to <code>constrain</code> any more than it could when it was being passed to <code>filter</code>.</p>\n\n<p>The invocation of <code>constrain</code> has no effect at run-time, it just guides the compiler to infer the lifetime bounds for the variable that we need for <code>filter</code>. This allows storing the closure and calling <code>filter</code> without modifying its signature:</p>\n\n<pre><code>fn constrain&lt;F&gt;(fun: F) -&gt; F\nwhere\n    F: for&lt;'a&gt; Fn(&amp;'a S) -&gt; bool,\n{\n    fun\n}\n\nfn main() {\n    let cb = constrain(|_s| true);\n    filter(cb);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1ae057a4f4e89e46f083977dbbe92de6\" rel=\"nofollow noreferrer\">Playground.</a></p>\n"}], "owner": {"reputation": 355, "user_id": 10019917, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qoQ4MMftuuA/AAAAAAAAAAI/AAAAAAAAAA0/G4mu8VtJ-Zw/photo.jpg?sz=128", "display_name": "Andrew Moffat", "link": "https://stackoverflow.com/users/10019917/andrew-moffat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 148, "favorite_count": 0, "accepted_answer_id": 58774701, "answer_count": 2, "score": 2, "last_activity_date": 1573333659, "creation_date": 1573248440, "last_edit_date": 1573248641, "question_id": 58773989, "link": "https://stackoverflow.com/questions/58773989/why-does-this-simple-closure-fail-while-the-other-two-functions-succeed", "title": "Why does this simple closure fail while the other two functions succeed?", "body": "<p>I've constructed a closure example that I can't get to work, nor can I find any reason why it shouldn't work.  Why does it fail to compile on the last closure?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d415fbc74c0bed445dc07a19c21aea57\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>struct S {}\n\nfn filter&lt;P&gt;(predicate: P)\nwhere\n    P: Fn(&amp;S) -&gt; bool,\n{\n    predicate(&amp;S {});\n}\n\nfn main() {\n    // this works\n    filter(|_s| true);\n\n    // this also works\n    fn cb1(_s: &amp;S) -&gt; bool {\n        true\n    }\n    filter(cb1);\n\n    // but this doesn't work\n    let cb2 = |_s| true;\n    filter(cb2);\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in closure arguments\n  --&gt; /tmp/closure.rs:19:5\n   |\n18 |     let cb2 = |_s| true;\n   |               --------- found signature of `fn(_) -&gt; _`\n19 |     filter(cb2);\n   |     ^^^^^^ expected signature of `for&lt;'r&gt; fn(&amp;'r S) -&gt; _`\n   |\nnote: required by `filter`\n  --&gt; /tmp/closure.rs:3:1\n   |\n3  | fn filter&lt;P&gt;(predicate: P) where P: Fn(&amp;S) -&gt; bool,\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0271]: type mismatch resolving `for&lt;'r&gt; &lt;[closure@/tmp/closure.rs:18:15: 18:24] as std::ops::FnOnce&lt;(&amp;'r S,)&gt;&gt;::Output == bool`\n  --&gt; /tmp/closure.rs:19:5\n   |\n19 |     filter(cb2);\n   |     ^^^^^^ expected bound lifetime parameter, found concrete lifetime\n   |\nnote: required by `filter`\n  --&gt; /tmp/closure.rs:3:1\n   |\n3  | fn filter&lt;P&gt;(predicate: P) where P: Fn(&amp;S) -&gt; bool,\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust", "ownership", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573247475, "post_id": 58772833, "comment_id": 103833636, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/57252674/155423\">What is the cited problem with using generic type parameters in trait objects?</a>; <a href=\"https://stackoverflow.com/q/27957103/155423\">How do I create a heterogeneous collection of objects?</a>; . If not, please <b><a href=\"https://stackoverflow.com/posts/58772833/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573247825, "post_id": 58772833, "comment_id": 103833750, "body": "Your C# example uses dynamic dispatch for the argument; do the same thing here."}, {"owner": {"reputation": 401, "user_id": 6792871, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1076642632424051/picture?type=large", "display_name": "SoptikHa", "link": "https://stackoverflow.com/users/6792871/soptikha"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573248376, "post_id": 58772833, "comment_id": 103833930, "body": "Thank you, these links answered my question, apparently I suck at googling. Feel free to mark this as duplicate, thanks for sharing the answers beforehand. It looks like the best way to implement this is plain enum."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573248489, "post_id": 58772833, "comment_id": 103833965, "body": "Nah, I have a broad knowledge of what Q&amp;A already exist, so it&#39;s very easy for me to find existing questions quickly."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573248588, "post_id": 58772833, "comment_id": 103834005, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9254b84750bc68454bf3f5abc0cffd09\" rel=\"nofollow noreferrer\">This is how I&#39;d write the equivalent dynamic dispatch version</a>, based on the code you&#39;ve provided."}, {"owner": {"reputation": 401, "user_id": 6792871, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1076642632424051/picture?type=large", "display_name": "SoptikHa", "link": "https://stackoverflow.com/users/6792871/soptikha"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573250786, "post_id": 58772833, "comment_id": 103834677, "body": "Oh. Okay, that&#39;s way better than enums. Thanks very much, this helps me a lot."}], "owner": {"reputation": 401, "user_id": 6792871, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1076642632424051/picture?type=large", "display_name": "SoptikHa", "link": "https://stackoverflow.com/users/6792871/soptikha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1573248499, "answer_count": 0, "score": 0, "last_activity_date": 1573248514, "creation_date": 1573242045, "last_edit_date": 1573247773, "question_id": 58772833, "link": "https://stackoverflow.com/questions/58772833/creating-a-collection-of-types-that-implement-a-trait-with-generic-type-paramete", "closed_reason": "Duplicate", "title": "Creating a collection of types that implement a trait with generic type parameters", "body": "<p>I'm building program that will take circuit of logical gates and evaluate the circuit. I made trait for a logical gate which has methods to get the output value and register and unregister inputs (parents).</p>\n\n<pre><code>pub trait LogicalGate {\n    fn register_input&lt;T: LogicalGate&gt;(&amp;mut self, input: &amp;T) -&gt; Result&lt;(), LogicalGateError&gt;;\n}\n</code></pre>\n\n<p><code>T</code> in this method is any logical gate implementation.</p>\n\n<p>Now, I want to implement a gate that will take one parent and return it's output. However, I have troubles storing the parent as I don't know what the type of <code>OutputGate::parent</code> should be:</p>\n\n<pre><code>pub struct OutputGate&lt;'a&gt; {\n    parent: &amp;'a dyn LogicalGate,\n}\n\nimpl&lt;'a&gt; LogicalGate for OutputGate {\n    // ...\n}\n</code></pre>\n\n<p>I want to be able to store any <code>T: LogicalGate</code> there. I can't make the whole <code>OutputGate</code> structure generic as I will want to be able to put multiple different structures (that all implement <code>LogicalGate</code>) into one <code>Vec</code> in the future.</p>\n\n<p>No matter if I try <code>&amp;'a dyn LogicalGate</code> or <code>Box&lt;LogicalGate&gt;</code>, the compiler complains that <code>LogicalGate</code> cannot be made into an object, as it contains generic type parameters.</p>\n\n<p>How can I make a field in a struct that can take any type <code>T</code> that implements a certain trait, which contains a method that adds any type <code>T</code> into the field in struct?</p>\n\n<p>In C#, I would do it like this:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>public interface ILogicalGate {\n     void RegisterInput(ILogicalGate input);\n}\n\npublic class OutputGate : ILogicalGate {\n    private ILogicalGate parent;\n    public void RegisterInput(ILogicalGate input) { parent = input; }\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 1, "creation_date": 1573233652, "post_id": 58771145, "comment_id": 103828251, "body": "All dependency versions are pinned in the <code>Cargo.lock</code> file, so unless you change it (e.g. by invoking <code>cargo update</code>) the version of the dependency should not increase."}, {"owner": {"reputation": 64987, "user_id": 13154, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/13587943fa82922af31198ddd875d77f?s=128&d=identicon&r=PG", "display_name": "ctacke", "link": "https://stackoverflow.com/users/13154/ctacke"}, "reply_to_user": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573233782, "post_id": 58771145, "comment_id": 103828303, "body": "The CI server does a full, clean pull so it&#39;s not going to start with a cargo.lock"}, {"owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 1, "creation_date": 1573233885, "post_id": 58771145, "comment_id": 103828352, "body": "Well you might need to add the <code>Cargo.lock</code> file to your repository in that case"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 1, "creation_date": 1573234260, "post_id": 58771145, "comment_id": 103828506, "body": "Your <code>Cargo.lock</code> should be under version control, yep."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573235572, "post_id": 58771145, "comment_id": 103829037, "body": "The previous comments are misguided. You should <b>not</b> commit Cargo.lock <b>for a library</b>, see <a href=\"https://stackoverflow.com/q/43667176/155423\">What files in a Cargo project should be in my .gitignore?</a> and <a href=\"https://doc.rust-lang.org/cargo/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries\" rel=\"nofollow noreferrer\">Why do binaries have Cargo.lock in version control, but not libraries?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573235598, "post_id": 58771145, "comment_id": 103829052, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/49723779/155423\">Can I force the use of my dependencies&#39; Cargo.lock when resolving package versions?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58771145/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573235611, "post_id": 58771145, "comment_id": 103829056, "body": "See also <a href=\"https://stackoverflow.com/q/27770031/155423\">Set specific version of the dependency of a project&#39;s dependency in Cargo.toml or Cargo.lock</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1573235751, "post_id": 58771145, "comment_id": 103829127, "body": "And to be clear, this is a bug in whatever crate(s) depend on <code>pnet</code>. According to the semver rules, versions 0.22 and 0.23 are <b>not guaranteed</b> to be compatible. Whoever specified the version of pnet was overly broad. You can use <a href=\"https://github.com/sfackler/cargo-tree\" rel=\"nofollow noreferrer\">cargo-tree</a> to identify what dependency pulls in pnet and submit an issue / PR to them to fix it."}, {"owner": {"reputation": 64987, "user_id": 13154, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/13587943fa82922af31198ddd875d77f?s=128&d=identicon&r=PG", "display_name": "ctacke", "link": "https://stackoverflow.com/users/13154/ctacke"}, "edited": false, "score": 0, "creation_date": 1573236140, "post_id": 58771145, "comment_id": 103829292, "body": "I&#39;d already seen those answers and I guess I&#39;d hoped that the state of the state today was better than what I was inferring from them.  The challenge is that I&#39;d not changed any dependencies, and all of a sudden the build started failing with a clean pull and compile.  In the future we may need to be able to pretty precisely replicate a build, and I had hoped I could use this situation to learn how to get to that as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573237611, "post_id": 58771145, "comment_id": 103829889, "body": "<i>I&#39;d hoped that the state of the state today</i> \u2014 In the future, you are encouraged to add bounties to an existing question if you think that the answers have grown outdated, instead of opening new questions and spreading knowledge across many different locations. At the very least, you should have linked to the questions you had already read and clearly described why you felt you weren&#39;t asking a duplicate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573237674, "post_id": 58771145, "comment_id": 103829916, "body": "<i>to pretty precisely replicate a build</i> \u2014 you can, by using the <code>--precise</code> argument to Cargo, as mentioned."}, {"owner": {"reputation": 64987, "user_id": 13154, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/13587943fa82922af31198ddd875d77f?s=128&d=identicon&r=PG", "display_name": "ctacke", "link": "https://stackoverflow.com/users/13154/ctacke"}, "edited": false, "score": 1, "creation_date": 1573239004, "post_id": 58771145, "comment_id": 103830422, "body": "Ah, there it is.  I was not seeing the forest for the trees.  I was trying to get to it via the yaml rather than through a cargo update call in the build and therefore thinking this was similar but not the same.  Thanks for shepherding me."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573241429, "post_id": 58771145, "comment_id": 103831361, "body": "@Shepmaster: I disagree, you should commit Cargo.lock for a library \u2013 assuming that this is the same advice that people give for libraries in other languages and not something somehow more specific to Cargo. It contains the history of the versions you test with. Just keep it up to date. (It isn\u2019t published, right?)"}, {"owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1573256468, "post_id": 58771145, "comment_id": 103835977, "body": "@Ry- You&#39;ve got a point there, but official documentation recommends to only commit your <code>Cargo.lock</code> for binaries, not for libraries: <a href=\"https://doc.rust-lang.org/cargo/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries\" rel=\"nofollow noreferrer\">doc.rust-lang.org/cargo/&hellip;</a>"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573267417, "post_id": 58771145, "comment_id": 103837588, "body": "@msrd0: Yeah, I know, but its logic is that it doesn\u2019t apply to end uses, which isn\u2019t the point of using a lockfile with a library. It\u2019s common advice in the Node world too, unfortunately (imo)."}], "owner": {"reputation": 64987, "user_id": 13154, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/13587943fa82922af31198ddd875d77f?s=128&d=identicon&r=PG", "display_name": "ctacke", "link": "https://stackoverflow.com/users/13154/ctacke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 429, "favorite_count": 0, "closed_date": 1573237507, "answer_count": 0, "score": 0, "last_activity_date": 1573237517, "creation_date": 1573233501, "last_edit_date": 1573235478, "question_id": 58771145, "link": "https://stackoverflow.com/questions/58771145/how-do-i-pin-indirect-dependencies-of-a-library", "closed_reason": "Duplicate", "title": "How do I pin indirect dependencies of a library?", "body": "<p>I have a specific problem, but understanding the solution I think is going to be useful in a broader context.</p>\n\n<p>I have a project that indirectly depends on <code>pnet</code>; I don't directly reference it anywhere.</p>\n\n<p>It was building fine for a few weeks with pnet version 0.22.  On Monday, something changed and the version of <code>pnet</code> incremented to 0.23 and our CI server started failing to build.</p>\n\n<p>It seems that moving forward, especially once we start deploying builds, being able to definitively reproduce exact outputs is going to be pretty critical for us, so this isn't specific to this library.  This could really happen at any time with any library.</p>\n\n<p>Is there a way in Cargo to somehow \"force\" the dependency tree to use the older version short of us pulling the source of the older <code>pnet</code> (and maybe whatever is using it)?</p>\n\n<p>I'd love to just be able to put an entry into <code>Cargo.toml</code> that pins the old version.</p>\n\n<p>I tried adding the following, but it didn't help:</p>\n\n<pre><code>pnet = \"=0.22.0\"\n</code></pre>\n"}, {"tags": ["unicode", "utf-8", "rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1573235596, "post_id": 58770462, "comment_id": 103829051, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51818497/how-do-i-count-unique-grapheme-clusters-in-a-string-in-rust\">How do I count unique grapheme clusters in a string in Rust?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1573231636, "post_id": 58770681, "comment_id": 103827266, "body": "@Nurbol Alpysbayev Let me know if I correctly copied the string and if the result is correct. I unfortunately do not understand this script and cannot really compare it to your expected result."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1573231688, "post_id": 58770681, "comment_id": 103827289, "body": "Ahh, so using the crate is the de-facto standard of doing that? Frankly I&#39;ve searched some crate without success. Thank you so much! This is exactly what I need!"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 2, "creation_date": 1573231877, "post_id": 58770681, "comment_id": 103827394, "body": "@NurbolAlpysbayev I added some explanation regarding it being the de-facto solution."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 15, "last_activity_date": 1579951604, "last_edit_date": 1579951604, "creation_date": 1573231548, "answer_id": 58770681, "question_id": 58770462, "link": "https://stackoverflow.com/questions/58770462/how-to-iterate-over-unicode-grapheme-clusters-in-rust/58770681#58770681", "title": "How to iterate over Unicode grapheme clusters in Rust?", "body": "<p>You want to use <a href=\"https://crates.io/crates/unicode-segmentation\" rel=\"noreferrer\">the <code>unicode-segmentation</code> crate</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use unicode_segmentation::UnicodeSegmentation; // 1.5.0\n\nfn main() {\n    for g in \"\u0928\u092e\u0938\u094d\u0924\u0947\u094d\".graphemes(true) {\n        println!(\"- {}\", g);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3a69064b707bbfe1a834a381014867ca\" rel=\"noreferrer\"><strong>Playground</strong></a>, note: the playground editor can't properly handle the string, so the cursor position is wrong in this one line)</p>\n\n<p>This prints:</p>\n\n<pre><code>- \u0928\n- \u092e\n- \u0938\u094d\n- \u0924\u0947\u094d\n</code></pre>\n\n<p>The <code>true</code> as argument means that we want to iterate over the extended grapheme clusters. See <a href=\"https://unicode-rs.github.io/unicode-segmentation/unicode_segmentation/trait.UnicodeSegmentation.html#tymethod.graphemes\" rel=\"noreferrer\"><code>graphemes</code> documentation</a> for more information.</p>\n\n<hr>\n\n<p>Segmentation into Unicode grapheme clusters was supported by the standard library at some point, but unfortunately it was <a href=\"https://github.com/rust-lang/rust/pull/24428\" rel=\"noreferrer\">deprecated</a> and then <a href=\"https://github.com/rust-lang/rust/pull/27684\" rel=\"noreferrer\">removed</a> due to the size of the required Unicode tables. Instead, the de-facto solution is to use the crate. But yes, I think it's really unfortunate that the \"default standard library segmentation\" uses codepoints which semantically do not make a lot of sense (i.e. counting them or splitting them up generally doesn't make sense).</p>\n"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1493, "favorite_count": 4, "accepted_answer_id": 58770681, "answer_count": 1, "score": 16, "last_activity_date": 1579951604, "creation_date": 1573230623, "last_edit_date": 1573231814, "question_id": 58770462, "link": "https://stackoverflow.com/questions/58770462/how-to-iterate-over-unicode-grapheme-clusters-in-rust", "title": "How to iterate over Unicode grapheme clusters in Rust?", "body": "<p>I am learning Rust and I just have been surprised by the fact that Rust only is able to distinguish UTF-8 byte sequences, but not actual grapheme clusters (i.e. a diacritic is considered as a distinct \"char\"). </p>\n\n<p>So for example, Rust can turn input text to a vector like this (with the help of <code>\"\u0928\u092e\u0938\u094d\u0924\u0947\".chars()</code>):</p>\n\n<pre><code>['\u0928', '\u092e', '\u0938', '\u094d', '\u0924', '\u0947'] // 4 and 6 are diacritics and shouldn't be distinct items\n</code></pre>\n\n<p>But how do I get a vector like this?</p>\n\n<pre><code>[\"\u0928\", \"\u092e\", \"\u0938\u094d\", \"\u0924\u0947\"]\n</code></pre>\n"}, {"tags": ["git", "rust", "pull", "libgit2"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573226064, "post_id": 58768910, "comment_id": 103824204, "body": "Can you clearly state what &quot;doesn&#39;t work&quot; means? What do you <i>expect</i> to happen and what <i>actually</i> happens?"}, {"owner": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573226371, "post_id": 58768910, "comment_id": 103824385, "body": "I expect that changes from external repository will be pulled to local repository. Exactely the same way as i type &quot;git pull&quot; inthe console. But after I run this code <i>nothing</i> changed in local repo at all."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1573228467, "post_id": 58768910, "comment_id": 103825581, "body": "It does work, doesn&#39;t it?"}, {"owner": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1573287793, "post_id": 58768910, "comment_id": 103840106, "body": "@edwardw I tried it on two systems Win10 and Ubuntu 18.10. Steps 1) Build once and get repo cloned. 2) Perform &quot;<i>git reset --hard HEAD^^^</i>&quot; in repo. Check that HEAD is changed. 3) Run &quot;<i>cargo build</i>&quot; one more time. 4) Check result: HEAD still in same position. 5) Double-check it by run &quot;<i>git pull</i>&quot; manually - HEAD is changed on the same position as after #1. So, this code and git pull definitely works different way."}, {"owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 0, "creation_date": 1573293879, "post_id": 58768910, "comment_id": 103841179, "body": "@Argentumbolo &quot;cargo build&quot; does not run anything, try &quot;cargo run&quot;"}, {"owner": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "reply_to_user": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 1, "creation_date": 1573294782, "post_id": 58768910, "comment_id": 103841345, "body": "@JussiKukkonen I forget to mention - this code is part of &quot;<b>build.rs</b>&quot;. So it works at &quot;<b>cargo build</b>&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "edited": false, "score": 0, "creation_date": 1573299442, "post_id": 58778350, "comment_id": 103842296, "body": "Thank you. I added an <b>analysis.0.is_up_to_date()</b> branch but it&#39;s obviously what I looked for."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "edited": false, "score": 0, "creation_date": 1573326396, "post_id": 58778350, "comment_id": 103848877, "body": "@Argentumbolo good catch. I updated the code snippet to cover that as well."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 3, "last_activity_date": 1573326366, "last_edit_date": 1573326366, "creation_date": 1573295142, "answer_id": 58778350, "question_id": 58768910, "link": "https://stackoverflow.com/questions/58768910/how-to-perform-git-pull-with-the-rust-git2-crate/58778350#58778350", "title": "How to perform &quot;git pull&quot; with the Rust git2 crate?", "body": "<p>The <code>git2-rs</code> repo does have <a href=\"https://github.com/rust-lang/git2-rs/pull/427\" rel=\"nofollow noreferrer\">a pending PR</a> which adds a pull example. I adapted it a bit here to show how to do a fast-forward since that's what you are looking for:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn fast_forward(&amp;self, path: &amp;Path) -&gt; Result&lt;(), Error&gt; {\n    let repo = Repository::open(path)?;\n\n    repo.find_remote(\"origin\")?\n        .fetch(&amp;[self.branch], None, None)?;\n\n    let fetch_head = repo.find_reference(\"FETCH_HEAD\")?;\n    let fetch_commit = repo.reference_to_annotated_commit(&amp;fetch_head)?;\n    let analysis = repo.merge_analysis(&amp;[&amp;fetch_commit])?;\n    if analysis.0.is_up_to_date() {\n        Ok(())\n    } else if analysis.0.is_fast_forward() {\n        let refname = format!(\"refs/heads/{}\", self.branch);\n        let mut reference = repo.find_reference(&amp;refname)?;\n        reference.set_target(fetch_commit.id(), \"Fast-Forward\")?;\n        repo.set_head(&amp;refname)?;\n        repo.checkout_head(Some(git2::build::CheckoutBuilder::default().force()))\n    } else {\n        Err(Error::from_str(\"Fast-forward only!\"))\n    }\n}\n\npub fn check(&amp;self) {\n    ...\n    if repo_path.exists() &amp;&amp; repo_path.is_dir() {\n        self.reset(repo_path);\n        if let Err(e) = self.fast_forward(repo_path) {\n            panic!(\"Failed to pull: {}\", e)\n        }\n    }\n}\n</code></pre>\n\n<p>The credit is original author's of course. You can also check it out for nontrivial merge case, i.e. when the local tree is dirty.</p>\n"}], "owner": {"reputation": 107, "user_id": 5409773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1716e9e5da8de7799c744fc52ecbf6b?s=128&d=identicon&r=PG&f=1", "display_name": "Argentumbolo", "link": "https://stackoverflow.com/users/5409773/argentumbolo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 778, "favorite_count": 2, "accepted_answer_id": 58778350, "answer_count": 1, "score": 4, "last_activity_date": 1573326366, "creation_date": 1573224902, "last_edit_date": 1573226022, "question_id": 58768910, "link": "https://stackoverflow.com/questions/58768910/how-to-perform-git-pull-with-the-rust-git2-crate", "title": "How to perform &quot;git pull&quot; with the Rust git2 crate?", "body": "<p>The git2 crate doesn't have direct way to perform \"git pull\" action.</p>\n\n<p>I've seen <a href=\"https://stackoverflow.com/questions/54100789/how-is-git-pull-done-with-the-git2-rs-rust-crate\">this question</a> and tried to do it the same way (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=210897a16bf49de9bb797fe69658ec25\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>use std::fs;\nuse std::fs::File;\nuse std::io::{stderr, stdout, Write};\nuse std::path::Path;\n\nuse git2::{Commit, Error, Index, MergeOptions, ObjectType, Repository, ResetType};\n\nstruct Repo {\n    url: &amp;'static str,\n    path: &amp;'static str,\n    branch: &amp;'static str,\n}\n\nimpl Repo {\n    fn reset(&amp;self, path: &amp;Path) {\n        let repo = match Repository::open(path) {\n            Ok(repo) =&gt; repo,\n            Err(e) =&gt; panic!(\"Failed to open: {}\", e),\n        };\n        repo.reset(\n            &amp;repo.revparse_single(\"HEAD\").unwrap(),\n            ResetType::Hard,\n            None,\n        )\n        .unwrap();\n    }\n\n    fn clone(&amp;self) {\n        let repo = match Repository::clone(self.url, self.path) {\n            Ok(repo) =&gt; repo,\n            Err(e) =&gt; panic!(\"failed to init: {}\", e),\n        };\n    }\n\n    fn find_last_commit&lt;'repo&gt;(&amp;self, repo: &amp;'repo Repository) -&gt; Result&lt;Commit&lt;'repo&gt;, Error&gt; {\n        let obj = repo.head()?.resolve()?.peel(ObjectType::Commit)?;\n        match obj.into_commit() {\n            Ok(c) =&gt; Ok(c),\n            _ =&gt; Err(Error::from_str(\"commit error\")),\n        }\n    }\n\n    fn pull(&amp;self, path: &amp;Path) -&gt; Result&lt;Index, Error&gt; {\n        let repo = Repository::open(path)?;\n\n        repo.find_remote(\"origin\")?\n            .fetch(&amp;[self.branch], None, None)?;\n\n        let last_commit = self.find_last_commit(&amp;repo)?;\n        let reference = repo.find_reference(\"FETCH_HEAD\")?;\n        let fetched_commit = reference.peel_to_commit()?;\n        let index =\n            repo.merge_commits(&amp;last_commit, &amp;fetched_commit, Some(&amp;MergeOptions::new()))?;\n\n        return Ok(index);\n    }\n\n    pub fn check(&amp;self) {\n        let repo_path = Path::new(self.path);\n\n        if !repo_path.exists() {\n            self.clone();\n            return;\n        }\n\n        if repo_path.exists() &amp;&amp; repo_path.is_dir() {\n            self.reset(repo_path);\n            let idx = match self.pull(repo_path) {\n                Ok(idx) =&gt; idx,\n                Err(e) =&gt; panic!(\"Failed to pull: {}\", e),\n            };\n        }\n    }\n}\n\nfn main() {\n    let currencies = Repo {\n        url: \"https://github.com/datasets/currency-codes\",\n        path: \"./resources/currency-codes\",\n        branch: \"master\",\n    };\n\n    currencies.check();\n}\n</code></pre>\n\n<p>But while <em>clone</em> and <em>reset</em> work, it looks like <em>pull</em> doesn't.</p>\n\n<p>What am I do wrong?</p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573222205, "post_id": 58768109, "comment_id": 103821998, "body": "<i>I have a requirement to pass to a procedural macro either a text file</i> \u2014 <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">sounds how an XY problem starts</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573222346, "post_id": 58768109, "comment_id": 103822075, "body": "Like, all of this sounds like it should be a build script instead. E.g. <a href=\"https://stackoverflow.com/q/47217283/155423\">How do I generate a text file during compile time and include its content in the output?</a>; <a href=\"https://stackoverflow.com/q/32956050/155423\">How to create a static string at compile time</a>; <a href=\"https://stackoverflow.com/a/37528134/155423\">How can I override a constant via a compiler option?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573222467, "post_id": 58768109, "comment_id": 103822143, "body": "<a href=\"https://github.com/avr-rust/avrd/blob/master/build.rs\" rel=\"nofollow noreferrer\">A concrete example</a>"}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1573222765, "post_id": 58768109, "comment_id": 103822329, "body": "@shepmaster Having it as a build script rather breaks the ergonomics of having a macro invoked with the name of the file and requires every invocation to add a build script (I will have several for different parts of my code base). For comparison, I could always just have the whole contents of the text file in the argument to the macro, but then one loses syntax highlighting and so on when editing (it will be a YAML doc)."}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573222944, "post_id": 58768109, "comment_id": 103822408, "body": "@Shepmaster Insofar as it&#39;s possible to do something else, it&#39;s not a strict requirement (so your XY problem point is reasonable), but I&#39;m close to having very nice ergonomics on the library and I&#39;m trying hard to see if I can actually implement fully what I&#39;m trying to do."}], "answers": [{"tags": [], "owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "is_accepted": true, "score": 2, "last_activity_date": 1573821959, "last_edit_date": 1573821959, "creation_date": 1573579358, "answer_id": 58823695, "question_id": 58768109, "link": "https://stackoverflow.com/questions/58768109/proper-way-to-handle-a-compile-time-relevant-text-file-passed-to-a-procedural-ma/58823695#58823695", "title": "Proper way to handle a compile-time relevant text file passed to a procedural macro", "body": "<p>So it turns out this is possible in essentially the way I was hoping with the stable compiler.</p>\n\n<p>If we accept that we need to work relative to the crate root, we can define our paths as such.</p>\n\n<p>Helpfully, inside the macro code, <code>std::env::current_dir()</code> will return the current working directory as the root of the crate containing the call site. This means, even if the macro invocation is inside some crate hierarchy, it will still return a path that is meaningful at the location of the macro invocation.</p>\n\n<p>The following example macro does essentially what I need. For brevity, it's not designed to handle errors properly:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate proc_macro;\n\nuse quote::quote;\nuse proc_macro::TokenStream;\nuse syn::parse::{Parse, ParseStream, Result};\nuse syn;\nuse std;\nuse std::fs::File;\nuse std::io::Read;\n\n#[derive(Debug)]\nstruct FileName {\n    filename: String,\n}\n\nimpl Parse for FileName {\n\n    fn parse(input: ParseStream) -&gt; Result&lt;Self&gt; {\n        let lit_file: syn::LitStr = input.parse()?;\n        Ok(Self { filename: lit_file.value() })\n    }\n}\n\n#[proc_macro]\npub fn my_macro(input: TokenStream) -&gt; TokenStream {\n    let input = syn::parse_macro_input!(input as FileName);\n\n    let cwd = std::env::current_dir().unwrap();\n\n    let file_path = cwd.join(&amp;input.filename);\n    let file_path_str = format!(\"{}\", file_path.display());\n\n    println!(\"path: {}\", file_path.display());\n\n    let mut file = File::open(file_path).unwrap();\n    let mut contents = String::new();\n    file.read_to_string(&amp;mut contents).unwrap();\n\n    println!(\"contents: {:?}\", contents);\n\n    let result = quote!(\n\n        const FILE_STR: &amp;'static str = include_str!(#file_path_str);\n        pub fn foo() -&gt; bool {\n            println!(\"Hello\");\n            true\n        }\n    );\n\n    TokenStream::from(result)\n}\n</code></pre>\n\n<p>Which can be invoked with</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>my_macro!(\"mydir/myfile\");\n</code></pre>\n\n<p>where <code>mydir</code> is a directory in the root of the invoking crate.</p>\n\n<p>This uses the hack of using an <code>include_str!()</code> in the macro output to cause rebuilds on changes to <code>myfile</code>. This is necessary and does what is expected. I would expect this to be optimised out if it's never actually used.</p>\n\n<p>I'd be interested to know if this approach falls over in any situation.</p>\n\n<p>Relevant to my original question, current nightly implements the <a href=\"https://doc.rust-lang.org/proc_macro/struct.Span.html#method.source_file\" rel=\"nofollow noreferrer\"><code>source_file()</code></a> method on <code>Span</code>. This might be a better way to implement the above, but I'd rather stick with stable. The tracking issue for this is <a href=\"https://github.com/rust-lang/rust/issues/54725\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Edit:\nThe above implementation fails when the package is in a workspace, at which point the current working directory is the workspace root, not the crate root. This is easy to work around with something like as follows (inserted between <code>cwd</code> and <code>file_path</code> declarations).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let mut cwd = std::env::current_dir().unwrap();\n\n    let cargo_path = cwd.join(\"Cargo.toml\");\n    let mut cargo_file = File::open(cargo_path).unwrap();\n    let mut cargo_contents = String::new();\n    cargo_file.read_to_string(&amp;mut cargo_contents).unwrap();\n\n    // Use a simple regex to detect the suitable tag in the toml file. Much \n    // simpler than using the toml crate and probably good enough according to\n    // the workspace RFC.\n    let cargo_re = regex::Regex::new(r\"(?m)^\\[workspace\\][ \\t]*$\").unwrap();\n\n    let workspace_path = match cargo_re.find(&amp;cargo_contents) {\n        Some(val) =&gt; std::env::var(\"CARGO_PKG_NAME\"),\n        None =&gt; \"\".to_string()\n    };\n\n    let file_path = cwd.join(workspace_path).join(input.filename);\n    let file_path_str = format!(\"{}\", file_path.display());\n</code></pre>\n"}], "owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 354, "favorite_count": 1, "accepted_answer_id": 58823695, "answer_count": 1, "score": 4, "last_activity_date": 1573821959, "creation_date": 1573221998, "last_edit_date": 1573222171, "question_id": 58768109, "link": "https://stackoverflow.com/questions/58768109/proper-way-to-handle-a-compile-time-relevant-text-file-passed-to-a-procedural-ma", "title": "Proper way to handle a compile-time relevant text file passed to a procedural macro", "body": "<p>I have a requirement to pass to a procedural macro either a text file or the contents of a text file, such that the procedural macro acts based on the contents of that text file at compile time. That is, the text file configures the output of the macro. The use case for this is the file defining a register map which the macro builds into a library.</p>\n\n<p>The second requirement is that the text file is properly handled by <code>Cargo</code>, such that changes to the text file trigger a recompile in the same way as changes to the source file trigger a recompile.</p>\n\n<p>My initial thought was to create a <code>static</code> string using the <code>include_str!</code> macro. This solves the second requirement but I can't see how to pass <em>that</em> to the macro - at that point I only have the identifier of the string to pass in:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use my_macro_lib::my_macro;\nstatic MYSTRING: &amp;'static str = include_str!(\"myfile\");\nmy_macro!(MYSTRING); // Not the string itself!\n</code></pre>\n\n<p>I can pass a string to the macro with the name of the file in a string literal, and open the file inside the macro:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>my_macro!(\"myfile\");\n</code></pre>\n\n<p>At which point I have two problems:</p>\n\n<ol>\n<li>It's not obvious how to get the path of the calling function in order to get the path of the file. I initially thought this would be exposed through the token <code>Span</code>, but it seems in general not (perhaps I'm missing something?).</li>\n<li>It's not obvious how to make the file make <code>Cargo</code> trigger a recompile on changes. One idea I had to force this was to add an <code>include_str!(\"myfile\")</code> to the output of the macro, which would hopefully result in the compile being made aware of \"myfile\", but this is a bit mucky.</li>\n</ol>\n\n<p>Is there some way to do what I'm trying to do? Perhaps either by somehow getting the contents of the string inside the macro that was created outside, or reliably getting the path of the calling rust file (then making <code>Cargo</code> treat changes properly).</p>\n\n<p>As an aside, I've read various places that tell me I can't get access to the contents of variables inside the macro, but it seems to me that this is exactly what the <code>quote</code> macro is doing with <code>#variables</code>. How is this working?</p>\n"}, {"tags": ["rust", "linker", "linker-errors", "alpine", "musl"], "comments": [{"owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573233856, "post_id": 58766740, "comment_id": 103828336, "body": "<i>I cannot compile my application directly on musl, because some features from the rust compiler are not supported.</i> - this is only the case if you use <code>rustup</code>. I recommend you simply install it from alpine (<code>apk add --no-cache rust cargo</code>), use edge if you need up-to-date rust. It works just fine for me"}, {"owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "reply_to_user": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573238014, "post_id": 58766740, "comment_id": 103830054, "body": "proc macro is something required by many libraries and doesn\u2019t compile on musl systems"}, {"owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573239131, "post_id": 58766740, "comment_id": 103830476, "body": "This is not true. I have definitely compiled proc-macro crates on alpinelinux with musl libc before"}, {"owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "reply_to_user": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573239290, "post_id": 58766740, "comment_id": 103830538, "body": "Well... you\u2019re absolutely the first I see telling this... could you share an example? Because this says otherwise <a href=\"https://github.com/rust-lang/rust/issues/40174#issuecomment-538791091\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/40174#issuecomment-53879109&zwnj;&#8203;1</a>"}, {"owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "reply_to_user": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573239338, "post_id": 58766740, "comment_id": 103830556, "body": "Also this is the first library that the compiler complains about <a href=\"https://github.com/actix/actix-web/issues/1103\" rel=\"nofollow noreferrer\">github.com/actix/actix-web/issues/1103</a>"}, {"owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "reply_to_user": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573242432, "post_id": 58766740, "comment_id": 103831737, "body": "I was trying your approach and I cannot make cargo run on alpine... The one in the main repo is too old (1.34). The one in the community repo (1.38) doesn&#39;t work: <code>error: couldn&#39;t load codegen backend &quot;&#47;usr&#47;lib&#47;rustlib&#47;x86_64-alpine-linux-musl&#47;codegen-backends&#47;&zwnj;&#8203;librustc_codegen_llv&zwnj;&#8203;m-llvm.so&quot;: &quot;Error relocating &#47;usr&#47;lib&#47;libLLVM-9.so: _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE&zwnj;&#8203;C1Ev: symbol not found&quot;</code>"}, {"owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "reply_to_user": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573253312, "post_id": 58766740, "comment_id": 103835323, "body": "I&#39;ve just found out that like you said it is possible to use proc macro, but you have to specify a flag to the compiler <a href=\"https://github.com/rust-lang/rust/pull/58575#issuecomment-496026747\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/58575#issuecomment-496026747</a>"}, {"owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 0, "creation_date": 1573255884, "post_id": 58766740, "comment_id": 103835887, "body": "Well, it works out of the box for me: <a href=\"https://gitlab.com/msrd0/log4rs-sentry/-/jobs/324356937\" rel=\"nofollow noreferrer\">gitlab.com/msrd0/log4rs-sentry/-/jobs/324356937</a> (<code>serde_derive</code> definitely requires <code>proc-macro</code>)"}, {"owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "edited": false, "score": 1, "creation_date": 1573256074, "post_id": 58766740, "comment_id": 103835909, "body": "It might be worth mentioning that what you linked to was mentioning compiling to static musl libc, while alpinelinux does have a dynamic version of musl which allows dynamic linking which is what is required for proc-macro and the like to work properly"}], "answers": [{"tags": [], "owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "is_accepted": true, "score": 1, "last_activity_date": 1573253390, "creation_date": 1573253390, "answer_id": 58774688, "question_id": 58766740, "link": "https://stackoverflow.com/questions/58766740/how-can-i-target-my-rust-application-and-its-dependencies-to-musl/58774688#58774688", "title": "How can I target my Rust application and it&#39;s dependencies to musl?", "body": "<p>Found out that it is possible to compile on alpine provided you specify a special flag to the compiler to use dynamic linking as found here:\n<a href=\"https://github.com/rust-lang/rust/pull/58575#issuecomment-496026747\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/pull/58575#issuecomment-496026747</a></p>\n\n<p>And the flag: <code>RUSTFLAGS='-C target-feature=-crt-static'</code></p>\n"}], "owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 782, "favorite_count": 0, "accepted_answer_id": 58774688, "answer_count": 1, "score": 1, "last_activity_date": 1573253390, "creation_date": 1573216641, "question_id": 58766740, "link": "https://stackoverflow.com/questions/58766740/how-can-i-target-my-rust-application-and-its-dependencies-to-musl", "title": "How can I target my Rust application and it&#39;s dependencies to musl?", "body": "<p>I'm trying to run my rust application on Alpine but I'm having problems with either using musl as a target or using the compatibility layer for glibc.\nWhen I try to use from the <code>libc6-compat</code> I'm having this problem:</p>\n\n<pre><code>Error relocating my_app: __register_atfork: symbol not found\nError relocating my_app: __res_init: symbol not found\n</code></pre>\n\n<p>Is this a bug or this symbols are not at all supported by the compatibility layer?</p>\n\n<p>When I try to target musl, I have a different problem. I cannot compile my application directly on musl, because some features from the rust compiler are not supported. What I did was compiling on a debian image targeting musl and moving my binary to my alpine image. It looks like even targeting musl, the linker still uses some glibc variants at build time, which my little experience with C doesn't help me being sure if this would be a problem or not.My application depends on glib2 which I installed through apk and when it starts it fails with the following:</p>\n\n<pre><code>**\nGLib-GObject:ERROR:../gobject/gtype.c:2743:g_type_register_static: assertion failed: (static_quark_type_flags)\nAborted\n</code></pre>\n\n<p>I've trying to compile a C example directly in my alpine container and it works in there, so that made me believe I'm having some problems with the cross compilation/linking in my glibc container.\u00a0Any ideas on how can I solve this?\u00a0</p>\n\n<p>Note: I could just use a glibc container, but neither the ones I know have a minimal package manager. The debian variants install too much bloatware that are not needed from my dependencies (I don't understand why they insert optional dependencies as required in the package manager) making the image bigger than 1GB, whereas my alpine version is 100MB. The same pattern with RPM variants. I would be fine with a bigger image than 100MB, but not 1GB.</p>\n"}, {"tags": ["rust", "rust-diesel", "actix-web"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1573218768, "post_id": 58766267, "comment_id": 103820194, "body": "From the comments in <a href=\"https://github.com/diesel-rs/diesel/issues/399#issuecomment-360535059\" rel=\"nofollow noreferrer\">this issue</a>, it looks like <code>futures-cpupool</code> is the recommended workaround for the lack of <code>async</code> support in Diesel."}, {"owner": {"reputation": 209, "user_id": 12343090, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/256ef559b50c58646593d7a400c8df8e?s=128&d=identicon&r=PG&f=1", "display_name": "logina", "link": "https://stackoverflow.com/users/12343090/logina"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1573220355, "post_id": 58766267, "comment_id": 103821019, "body": "That is more of a general solution. I hope for something that will leverage the actix system. None the less, I will dig into futures-cpupool now to look for issues."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573220746, "post_id": 58766267, "comment_id": 103821233, "body": "Welcome to Stack Overflow! It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/41932137/155423\">What is the best approach to encapsulate blocking I/O in future-rs?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58766267/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 209, "user_id": 12343090, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/256ef559b50c58646593d7a400c8df8e?s=128&d=identicon&r=PG&f=1", "display_name": "logina", "link": "https://stackoverflow.com/users/12343090/logina"}, "edited": false, "score": 0, "creation_date": 1573222992, "post_id": 58766267, "comment_id": 103822427, "body": "Since the cpupool also interacts with the blocking connection pool in r2d2 I am unsure of how to best resolve that. I am looking into it myself now and will update with that soon."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 7, "creation_date": 1573226139, "post_id": 58768893, "comment_id": 103824255, "body": "<i>reading my findings above</i> \u2014 please put information relevant to the <i>answer</i> in the <b>answer</b>, not the question."}], "tags": [], "owner": {"reputation": 209, "user_id": 12343090, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/256ef559b50c58646593d7a400c8df8e?s=128&d=identicon&r=PG&f=1", "display_name": "logina", "link": "https://stackoverflow.com/users/12343090/logina"}, "is_accepted": true, "score": 3, "last_activity_date": 1573477670, "last_edit_date": 1573477670, "creation_date": 1573224861, "answer_id": 58768893, "question_id": 58766267, "link": "https://stackoverflow.com/questions/58766267/should-diesel-be-run-using-a-sync-actor-actix-webwebblock-or-futures-cpupoo/58768893#58768893", "title": "Should diesel be run using a sync actor, actix_web::web::block or futures-cpupool?", "body": "<p>I am going with futures-cpupool. It is the best solution due to the blocking nature of my interactions.</p>\n\n<p>Using actix_web::web::block is decent enough, but will use a shared thread-pool in actix (and due to the blocking calls I use this can block the entire thread pool and interfere with other tasks given to actix_web).</p>\n\n<p>It is better to use futures-cpupool to create a separate threadpool per database just for database interactions. This way you group all the tasks that need to wait for each other (when there are more tasks than connections) into one pool, preventing them from blocking any other tasks that don't need a connection and potentially limiting the number of threads to the number of connections (so that the task will only be scheduled when it won't be blocked).</p>\n\n<p>In the case where you only want to use one database connection (or very few) the sync actor is a pretty good option. It will act like a futures-cpupool with one thread, ensuring that all tasks are run one at a time, except that it will use one of actix-web's underlying threads rather than a separate one (therefore, only good for very few connections). I find the boilerplate too big to be worth it, though.</p>\n"}], "owner": {"reputation": 209, "user_id": 12343090, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/256ef559b50c58646593d7a400c8df8e?s=128&d=identicon&r=PG&f=1", "display_name": "logina", "link": "https://stackoverflow.com/users/12343090/logina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1458, "favorite_count": 5, "accepted_answer_id": 58768893, "answer_count": 1, "score": 13, "last_activity_date": 1573477670, "creation_date": 1573214714, "last_edit_date": 1573224560, "question_id": 58766267, "link": "https://stackoverflow.com/questions/58766267/should-diesel-be-run-using-a-sync-actor-actix-webwebblock-or-futures-cpupoo", "title": "Should diesel be run using a sync actor, actix_web::web::block or futures-cpupool?", "body": "<h1>Background</h1>\n\n<p>I am working on an actix-web application using diesel through r2d2 and am unsure of how to best make asynchronous queries. I have found three options that seem reasonable, but am unsure of which one is best.</p>\n\n<h1>Potential Solutions</h1>\n\n<h2>Sync Actor</h2>\n\n<p>For one I could use <a href=\"https://github.com/actix/examples/tree/master/async_db\" rel=\"noreferrer\">the actix example</a>, but it is quite complicated and requires a fair deal of boilerplate to build. I hope there exists a more reasonable solution.</p>\n\n<h2><code>Actix_web::web::block</code></h2>\n\n<p>As another option I could use the <a href=\"https://docs.rs/actix-web/1.0.5/actix_web/web/fn.block.html\" rel=\"noreferrer\"><code>actix_web::web::block</code></a> to wrap my query functions into a future, but I am unsure of the performance implications of this.</p>\n\n<p>Is the query then running in the same Tokio system? From what I could find in the source, <a href=\"https://docs.rs/actix-threadpool/0.1.0/src/actix_threadpool/lib.rs.html#53-69\" rel=\"noreferrer\">it creates a thread in the underlying actix-web threadpool</a>. Is that a problem?</p>\n\n<p>If I read the code right, r2d2 blocks its thread when acquiring a connection, which would block part of the core actix-web pool. Same with database queries. This would then block all of actix-web if I do more queries than I have threads in that pool? If so, big problem.</p>\n\n<h2>Futures-cpupool</h2>\n\n<p>Finally, the safe bet that may have some unneeded overhead is <a href=\"https://lib.rs/crates/futures-cpupool\" rel=\"noreferrer\">futures-cpupool</a>. The main issue is that this means adding another crate to my project, though I don't like the idea of multiple cpu-pools floating around in my application needlessly.</p>\n\n<p>Since both r2d2 and diesel will block there are a surprising amount of tricky things in here.</p>\n\n<p>Most importantly, do not share this cpupool with anything not using the same r2d2 pool (as all threads created may just block waiting for an r2d2 connection, locking down the whole pool when work exists).</p>\n\n<p>Secondly (a bit more obviously), you thus shouldn't have more r2d2 connections than threads in the pool and vice-versa since the bigger one would waste resources (connections unused/threads constantly blocked) (perhaps one more thread, for maybe quicker connection handover by the OS scheduler rather than the cpupool scheduler).</p>\n\n<p>Finally, mind what database you are using and the performance you have there. Running a single connection r2d2 and a single thread in the pool might be best in a write heavy sqlite application (though I would recommend a proper database for such).</p>\n\n<h1>Old answers</h1>\n\n<h2>Old solutions that may work</h2>\n\n<p><a href=\"https://www.reddit.com/r/rust/comments/axy0hp/patterns_to_scale_actixweb_and_diesel/\" rel=\"noreferrer\">https://www.reddit.com/r/rust/comments/axy0hp/patterns_to_scale_actixweb_and_diesel/</a></p>\n\n<p>In essence, recommends Futures-cpupool.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/41932137/what-is-the-best-approach-to-encapsulate-blocking-i-o-in-future-rs\">What is the best approach to encapsulate blocking I/O in future-rs?</a></p>\n\n<p>Recommends Futures-cpupool for general cases.</p>\n\n<h2>Old solutions that don't work</h2>\n\n<p><a href=\"https://www.reddit.com/r/rust/comments/9fe1ye/noob_here_can_we_talk_about_async_and_databases/\" rel=\"noreferrer\">https://www.reddit.com/r/rust/comments/9fe1ye/noob_here_can_we_talk_about_async_and_databases/</a></p>\n\n<p>A really nice fix for a old actix-web version. From what I can find requests no longer have a cpu-pool in them.</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1573215715, "post_id": 58766221, "comment_id": 103818745, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=66e7287e9821481775cb96fcbfb82e3a\" rel=\"nofollow noreferrer\">Here&#39;s a way to apply Mithnar&#39;s answer to your problem.</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573216112, "post_id": 58766221, "comment_id": 103818929, "body": "<code>Formatter</code> is not really related to the whole <code>derive</code> thing. Deriving traits is implemented in Rust with <a href=\"https://doc.rust-lang.org/reference/procedural-macros.html#derive-macros\" rel=\"nofollow noreferrer\">procedural macros</a>... I&#39;m not sure exactly where the code is for <code>derive(Debug)</code>, but that&#39;s probably not what you want because it&#39;s a lot more work than just implementing it manually, given you only have one struct to worry about."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573216392, "post_id": 58766221, "comment_id": 103819029, "body": "Other related questions might be: <a href=\"https://stackoverflow.com/q/51567350/3650362\">Can traits be used on enum types?</a>, <a href=\"https://stackoverflow.com/q/57066471/3650362\">How do I implement a trait for an enum and its respective variants?</a>, and <a href=\"https://stackoverflow.com/q/49705007/3650362\">Is there a way to use existing structs as enum variants?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573216631, "post_id": 58766221, "comment_id": 103819121, "body": "<a href=\"https://github.com/rust-lang/rust/blob/master/src/libcore/fmt/mod.rs#L556\" rel=\"nofollow noreferrer\">Apparently <code>derive(Debug)</code> is still built in to the compiler, despite proc macros being stable now.</a>"}, {"owner": {"reputation": 16558, "user_id": 1804173, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/53f721a451a1c68caf8316cefcde3083?s=128&d=identicon&r=PG", "display_name": "bluenote10", "link": "https://stackoverflow.com/users/1804173/bluenote10"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573216651, "post_id": 58766221, "comment_id": 103819131, "body": "How does the new type pattern relate to this example? Feel free to convert your comment into an answer. I failed to see the immediate connection to the other question, so a concrete answer would still help newcomers."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573216833, "post_id": 58766221, "comment_id": 103819217, "body": "I did create a newtype, but you might have overlooked it because it has the same name as the variant (<code>DataChunk</code>)."}, {"owner": {"reputation": 16558, "user_id": 1804173, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/53f721a451a1c68caf8316cefcde3083?s=128&d=identicon&r=PG", "display_name": "bluenote10", "link": "https://stackoverflow.com/users/1804173/bluenote10"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573217498, "post_id": 58766221, "comment_id": 103819519, "body": "Now I get it. I basically need another layer of nesting. Not so nice that I have an unnecessary nesting just for getting my debug output right though :-/."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573217942, "post_id": 58766221, "comment_id": 103819781, "body": "Depends on your definition of &quot;necessary&quot;, I guess :-) The way I see it, one of your variants is &quot;<code>Vec&lt;u8&gt;</code>, but with a different <code>Debug</code> behavior&quot;, which is semantically a different type than just &quot;<code>Vec&lt;u8&gt;</code>&quot;. But I can see how it might be useful to have a more flexible <code>Debug</code> macro. <a href=\"https://github.com/rust-lang/rust/issues/26925\" rel=\"nofollow noreferrer\">(There are other reasons why <code>derive</code>ing doesn&#39;t always give the right answer that I&#39;d like to see addressed.)</a>"}], "owner": {"reputation": 16558, "user_id": 1804173, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/53f721a451a1c68caf8316cefcde3083?s=128&d=identicon&r=PG", "display_name": "bluenote10", "link": "https://stackoverflow.com/users/1804173/bluenote10"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 124, "favorite_count": 0, "closed_date": 1573217365, "answer_count": 0, "score": 1, "last_activity_date": 1573215796, "creation_date": 1573214547, "last_edit_date": 1573215796, "question_id": 58766221, "link": "https://stackoverflow.com/questions/58766221/how-to-implement-a-trait-like-debug-specifically-for-certain-enum-variants", "closed_reason": "Duplicate", "title": "How to implement a trait like `Debug` specifically for certain enum variants?", "body": "<p>I'm implementing a file format parser, and I have an <code>enum</code> which reflects the general chunks allowed in the file specification. Something like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\npub enum FileChunk {\n    FileVersionChunk { major: u16, minor: u16 },\n    AuthorChunk { name: String },\n\n    // many many more variants following the specs...\n\n    DataChunk { data: Vec&lt;u8&gt; },\n}\n</code></pre>\n\n<p>For debugging purposes I want to implement the <code>Debug</code> trait for this enum. The standard implementation <code>#[derive(Debug)]</code> is super useful for that purpose, but has one issue: Some variants like the <code>DataChunk</code> contain huge data elements, which I want to abbreviate in the debugging output. How can this be accomplished?</p>\n\n<hr>\n\n<p>I'm new to Rust -- naively I would see two approaches:</p>\n\n<ul>\n<li>Keep the default <code>#[derive(Debug)]</code> implementation but somehow override that a certain variant should have a special implementation. I couldn't figure out though, if something like that is possible in Rust.</li>\n<li>Remove the default <code>#[derive(Debug)]</code> implementation, and implement the trait explicitly. In this case I'm trying to find a solution that allows to only implement the specific variant <code>DataChunk</code> manually, but somehow fall back to a default implementation for all other cases<sup>1</sup>. However I can't figure out how to make such a fallback work. I tried the following as a test, but that leads to an infinite recursion, because the <code>write!</code> expression basically calls <code>fmt</code> again.</li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Debug for FileChunk {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter&lt;'_&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; {\n        write!(f, \"{:#?}\", self)\n    }\n}\n</code></pre>\n\n<hr>\n\n<p><sup>1</sup> the specs require ~30 variants, so manually implementing all of them would be very tedious, and there are further enums where I have the same problem.</p>\n"}, {"tags": ["asynchronous", "rust", "future"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1573208598, "post_id": 58762210, "comment_id": 103815316, "body": "<code>Vec&lt;dyn Future&lt;Output=()&gt;&gt;</code> is not a valid type since it&#39;s size unknown at compile time. It is a type hint to represent Opaque type which returns from <code>async fn request(n: i32) {}</code>. It might be a better choice if it displays like that <code>Vec&lt;impl Future&lt;Output=()&gt;&gt;</code>, but still this is not a valid type. Consider this type as <code>T</code> which implements <code>Future&lt;Output=()&gt;</code>.  Also you don&#39;t need to Pin Box your Futures unless your opaque types are different : please <a href=\"https://stackoverflow.com/questions/58704424/how-can-i-put-an-async-function-into-a-map-in-rust/58709332#58709332\">see</a>"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1573208695, "post_id": 58762210, "comment_id": 103815366, "body": "So if you still want to declare type explicitly you can do at least <code>let mut requests:Vec&lt;_&gt; = Vec::new();</code>"}, {"owner": {"reputation": 57, "user_id": 6250700, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a42d4fbfa8b5a0f69242c6b56010151?s=128&d=identicon&r=PG&f=1", "display_name": "Night Str", "link": "https://stackoverflow.com/users/6250700/night-str"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1573212460, "post_id": 58762210, "comment_id": 103817152, "body": "I still don&#39;t understand, how to Rust recognize a value type if i do not declare it explicitly? And why i can&#39;t write it?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1573212786, "post_id": 58762210, "comment_id": 103817298, "body": "<i>&quot;async/.await is Rust&#39;s built-in tool for writing asynchronous functions that look like synchronous code. <b>async transforms a block of code into a state machine that implements a trait called Future</b>&quot;</i> (Please see: <a href=\"https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html\" rel=\"nofollow noreferrer\">async await primer</a>)"}, {"owner": {"reputation": 57, "user_id": 6250700, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a42d4fbfa8b5a0f69242c6b56010151?s=128&d=identicon&r=PG&f=1", "display_name": "Night Str", "link": "https://stackoverflow.com/users/6250700/night-str"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1573214065, "post_id": 58762210, "comment_id": 103817948, "body": "Sorry i read that more than three time, but still do not understand. Rust transform async block into state machine, but it&#39;s state machine working around some struct and it&#39;s struct can be a some type with can be set to a variable. Or it&#39;s just a some rust&#39;s magic kind and i don&#39;t care about this, becose i can&#39;t do some with it? And the best i can is let Rust take care about variables types."}], "answers": [{"comments": [{"owner": {"reputation": 557, "user_id": 8965298, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4155f61e9d1cf82fdbdb5adc3893836?s=128&d=identicon&r=PG&f=1", "display_name": "Austaras", "link": "https://stackoverflow.com/users/8965298/austaras"}, "edited": false, "score": 0, "creation_date": 1593752486, "post_id": 58767047, "comment_id": 110894326, "body": "could you give an example how to declare concrete type without <code>Pin&lt;Box&lt;_&gt;&gt;</code>?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 557, "user_id": 8965298, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4155f61e9d1cf82fdbdb5adc3893836?s=128&d=identicon&r=PG&f=1", "display_name": "Austaras", "link": "https://stackoverflow.com/users/8965298/austaras"}, "edited": false, "score": 0, "creation_date": 1593753545, "post_id": 58767047, "comment_id": 110894582, "body": "@Austaras as I pointed in the answer; returned <code>Future</code> from <code>async fn</code>  is an anonymous type, it is generated by compiler, you cannot declare since you don&#39;t know what compiler will generate. What kind of situation you are dealing with, if you give me an example, I can try to help ?"}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 3, "last_activity_date": 1584079583, "last_edit_date": 1584079583, "creation_date": 1573217773, "answer_id": 58767047, "question_id": 58762210, "link": "https://stackoverflow.com/questions/58762210/what-is-the-concrete-type-of-a-future-returned-from-async-fn/58767047#58767047", "title": "What is the concrete type of a future returned from `async fn`?", "body": "<p>From the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2394-async_await.md#return-type-of-async-functions-closures-and-blocks\" rel=\"nofollow noreferrer\">RFC</a>:</p>\n\n<blockquote>\n  <p>The return type of an async function is a unique anonymous type generated by the compiler, similar to the type of a closure. You can think of this type as being like an enum, with one variant for every \"yield point\" of the function - the beginning of it, the await expressions, and every return. Each variant stores the state that is needed to be stored to resume control from that yield point.</p>\n  \n  <p>When the function is called, this anonymous type is returned in its\n  initial state, which contains all of the arguments to this function.</p>\n</blockquote>\n\n<p>You can't explicitly declare the concrete type of a future since it is an anonymous type. As an API user we only need to know that it implements <code>std::futures::Future</code> but this doesn't mean that we don't need a deeper knowledge of this anonymous type and it's implementation, it would be nice to have for grasping the concept.</p>\n\n<hr>\n\n<blockquote>\n  <p>CLion determines the vector type as <code>Vec&lt;dyn Future&lt;Output = ()&gt;&gt;</code></p>\n</blockquote>\n\n<p>This is a type hint, not the actual type, since compiler is not able to know the size of <code>dyn Future&lt;Output = ()&gt;</code>, it will not be compiled.</p>\n\n<hr>\n\n<p><code>Pin&lt;Box&lt;_&gt;&gt;</code>-ing a <code>Future</code> to declare an explicit type might not be a good idea. In your case it's not needed because the concrete types returned from <code>async fn</code> are identical. Letting the compiler infer the type will just be fine.</p>\n\n<p><strong>See also:</strong> </p>\n\n<ul>\n<li>For various concrete return types :\n<a href=\"https://stackoverflow.com/questions/58704424/how-can-i-put-an-async-function-into-a-map-in-rust/58709332#58709332\">How can I put an async function into a map in Rust?</a></li>\n<li>Static &amp; Dynamic dispatch : <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/trait-objects.html#static-dispatch\" rel=\"nofollow noreferrer\">Trait Objects</a></li>\n</ul>\n"}], "owner": {"reputation": 57, "user_id": 6250700, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a42d4fbfa8b5a0f69242c6b56010151?s=128&d=identicon&r=PG&f=1", "display_name": "Night Str", "link": "https://stackoverflow.com/users/6250700/night-str"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2456, "favorite_count": 1, "accepted_answer_id": 58767047, "answer_count": 1, "score": 3, "last_activity_date": 1584079583, "creation_date": 1573198108, "last_edit_date": 1573309652, "question_id": 58762210, "link": "https://stackoverflow.com/questions/58762210/what-is-the-concrete-type-of-a-future-returned-from-async-fn", "title": "What is the concrete type of a future returned from `async fn`?", "body": "<p>What type should I use for a vector that stores futures?</p>\n\n<p>I tried to make multiple concurrent requests on the same URL and save all the futures into the vector to use with <code>join_all</code>.</p>\n\n<p>If I don't set a type for the vector explicitly, everything works. I understand that Rust can find the proper type of a variable. CLion determines the vector type as <code>Vec&lt;dyn Future&lt;Output = ()&gt;&gt;</code>, but when I try to set the type by myself, it gives me an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `dyn core::future::future::Future&lt;Output = ()&gt;` cannot be known at compilation time\n  --&gt; src/lib.rs:15:23\n   |\n15 |     let mut requests: Vec&lt;dyn Future&lt;Output = ()&gt;&gt; = Vec::new();\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `dyn core::future::future::Future&lt;Output = ()&gt;`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: required by `std::vec::Vec`\n</code></pre>\n\n<p>I must declare the type as <code>Vec&lt;Pin&lt;Box&lt;dyn Future&lt;Output=()&gt;&gt;&gt;&gt;</code> which forces me to wrap result of function into <code>requests.push(Pin::from(Box::new(request(i))));</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::join_all;\nuse std::future::Future;\nuse std::pin::Pin;\n\nasync fn request(n: i32) {\n    println!(\"Started: {}\", n);\n    let response = reqwest::get(\"https://www.rust-lang.org\")\n        .unwrap()\n        .text()\n        .unwrap();\n    println!(\"Completed: {}. Response: {}\", n, &amp;response[0..10]);\n}\n\nasync fn main() {\n    let mut requests: Vec&lt;dyn Future&lt;Output = ()&gt;&gt; = Vec::new();\n    for i in 0..5 {\n        requests.push(request(i));\n    }\n    join_all(requests).await;\n}\n</code></pre>\n\n<p>Which type it should be?</p>\n"}, {"tags": ["rust", "closures", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573183037, "post_id": 58759440, "comment_id": 103807118, "body": "<code>Fn(T) -&gt; ()</code> is a trait, not a type, at least, <a href=\"https://stackoverflow.com/questions/50650070/what-does-dyn-mean-in-a-type\">not the way you want it to be</a>. You might find it helpful to read <a href=\"https://stackoverflow.com/q/27831944/3650362\">How do I store a closure in a struct in Rust?</a> Beyond that, please take some time to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. There are no silver bullets when it comes to lifetime errors (or any errors, really); we need to know what code caused the errors you&#39;re having trouble with. Ideally, create something on the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">playground</a> or in a new Cargo project."}, {"owner": {"reputation": 107, "user_id": 7838101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6c45d17392bdf572ffb86382664b338?s=128&d=identicon&r=PG&f=1", "display_name": "harumphfrog", "link": "https://stackoverflow.com/users/7838101/harumphfrog"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573184938, "post_id": 58759440, "comment_id": 103807546, "body": "Updated the description and added a link to the playground."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573221319, "post_id": 58759440, "comment_id": 103821543, "body": "The <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=245398b55a088215710f34d135fa4ec9\" rel=\"nofollow noreferrer\">duplicates applied to your case</a>"}], "answers": [{"comments": [{"owner": {"reputation": 107, "user_id": 7838101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6c45d17392bdf572ffb86382664b338?s=128&d=identicon&r=PG&f=1", "display_name": "harumphfrog", "link": "https://stackoverflow.com/users/7838101/harumphfrog"}, "edited": false, "score": 0, "creation_date": 1573216708, "post_id": 58760782, "comment_id": 103819159, "body": "Thanks for the detailed answer. The clone solution won&#39;t work because the handler closure should use the current value of <code>name</code> at the time that it is called, rather than at the time <code>set_handler</code> is called."}], "tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 1, "last_activity_date": 1573196759, "last_edit_date": 1573196759, "creation_date": 1573190203, "answer_id": 58760782, "question_id": 58759440, "link": "https://stackoverflow.com/questions/58759440/setting-a-handler-on-a-struct-that-references-one-of-its-own-fields-at-call-time/58760782#58760782", "title": "Setting a handler on a struct that references one of its own fields at call time", "body": "<p>Core problem is that, <code>h</code> uses <code>self.name</code> and <code>f</code> inside it's implementation.\nRust closures by default capture by reference (borrow), so if you store your callback inside <code>MyStruct</code>, captured <code>f</code> will not live enough, because it will be destroyed (dropped), after execution leaves <code>set_handler</code> block.</p>\n\n<p>Another problem is that by default values stored in <code>Box&lt;_&gt;</code> should live as long as <code>'static</code>.</p>\n\n<p>Compiler automaticaly tries to assign apropriate lifetime for <code>&amp;mut self</code>, it defaults to assume, that <code>self</code> should live as long as <code>set_handler</code> function executes. </p>\n\n<p>You're essentially trying to create self-referential struct. <code>MyStruct</code> references itself inside callback. Simplest solution will be to just <code>clone</code> name and remove self-reference. </p>\n\n<p>Here we force closure to take ownership of variables used inside it and clone <code>self.name</code>, so closure doesn't borrow <code>self</code></p>\n\n<pre><code>    let name = self.name.clone();\n    let h = move |s: String| {\n        f(format!(\"{} {}\", name, s));\n    };\n</code></pre>\n\n<p>More complicated solution will be, to tell compiler that <code>MyStruct</code> can't move, because self-refential types can be safe only when they don't move around changing their reference (borrow) address and tell compiler that data in closure should live as long as <code>MyStruct</code>. This is more complicated.</p>\n\n<p>Refactored code using <code>Pin&lt;_&gt;</code> and some carefully written <code>unsafe</code> code.</p>\n\n<pre><code>use std::marker::PhantomPinned;\nuse std::pin::Pin;\nuse std::ptr::NonNull;\n\n// Alias supertrait\ntrait Callback: Fn(String) -&gt; ()  {}\nimpl&lt;T&gt; Callback for T where T: Fn(String) -&gt; ()  {}\n\nstruct MyStruct {\n    name: String,\n    handler: Box&lt;dyn Callback&gt;,\n    _pin: PhantomPinned,\n}\n\nimpl MyStruct {\n    pub fn new() -&gt; Pin&lt;Box&lt;MyStruct&gt;&gt; {\n        Box::pin(MyStruct {\n            name: String::from(\"hello\"),\n            handler: Box::new(|_| { Default::default() }),\n            _pin: PhantomPinned,\n        })\n    }\n\n    // Extracting callback is essentially safe, because if you save it, it can't live longer than pinned MyStruct. Lifetimes are elided.\n    pub  fn get_handler_mut(self: Pin&lt;&amp;mut MyStruct&gt;) -&gt; &amp;mut Box&lt;dyn Callback&gt; {\n        unsafe {\n            &amp;mut self.get_unchecked_mut().handler\n        }\n    }\n\n    pub fn set_handler(self: Pin&lt;&amp;mut MyStruct&gt;, f: impl Callback + 'static) {\n        // Create non null, raw pointer. Type is pinned and lifetimes are set by compiler for get_handler_mut(), everything is safe.\n        let name = NonNull::from(&amp;self.name);\n\n        let wrapper = move |s: String| {\n            // This is safe, because self is pinned, so name can't point to dangling pointer.\n            let name = unsafe { name.as_ref() };\n\n            f(format!(\"{} {}\", name, s));\n        };\n\n        unsafe {\n            // We know that assigning to `handler` will not move self, so it's safe.\n            self.get_unchecked_mut().handler = Box::new(wrapper);\n        }\n    }\n}\n\n\nfn main() {\n    let mut my_struct = MyStruct::new();\n\n    my_struct.as_mut().set_handler(|s: String| {\n        println!(\"{}\", s)\n    });\n\n\n    let handler = my_struct.as_mut().get_handler_mut();\n    (handler)(\"test\".to_owned())\n\n}\n</code></pre>\n\n<p>Another safe, but less effective solution will be to store <code>self.name</code> in reference counted smart pointer. <code>Rc</code> will manage lifetime of <code>name</code> automatically.</p>\n\n<pre><code>use std::rc::Rc;\n\n// Alias supertrait\ntrait Callback: Fn(String) -&gt; ()  {}\nimpl&lt;T&gt; Callback for T where T: Fn(String) -&gt; ()  {}\n\nstruct MyStruct {\n    name: Rc&lt;String&gt;,\n    handler: Box&lt;dyn Callback&gt;,\n}\n\nimpl MyStruct {\n    pub fn new() -&gt; MyStruct {\n        MyStruct {\n            name: Rc::new(\"hello\".to_owned()),\n            handler: Box::new(|_| { Default::default() }),\n        }\n    }\n\n    pub fn get_handler(&amp;self) -&gt; &amp;Box&lt;dyn Callback&gt; {\n        &amp;self.handler\n    }\n\n    pub fn set_handler(&amp;mut self, f: impl Callback + 'static) {\n        let name = self.name.clone();\n        let wrapper = move |s: String| {\n            f(format!(\"{} {}\", name, s));\n        };\n        self.handler = Box::new(wrapper);\n    }\n}\n\n\nfn main() {\n    let mut my_struct = MyStruct::new();\n\n    my_struct.set_handler(|s: String| {\n        println!(\"{}\", s)\n    });\n\n    let handler = my_struct.get_handler();\n    (handler)(\"test\".to_owned())\n}\n</code></pre>\n\n<p>Conclusion. Self-referential structs in Rust can be quite complicated, because language tries to deal with unsafety and relies on RAII and manual memory management. There is no GC taking care of things. In production for this example I would use <code>Rc</code> or cloning options (depending on circumstances), because it's the safest approach of all.</p>\n"}], "owner": {"reputation": 107, "user_id": 7838101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6c45d17392bdf572ffb86382664b338?s=128&d=identicon&r=PG&f=1", "display_name": "harumphfrog", "link": "https://stackoverflow.com/users/7838101/harumphfrog"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 334, "favorite_count": 0, "closed_date": 1573221012, "accepted_answer_id": 58760782, "answer_count": 1, "score": 1, "last_activity_date": 1573221073, "creation_date": 1573178919, "last_edit_date": 1573219928, "question_id": 58759440, "link": "https://stackoverflow.com/questions/58759440/setting-a-handler-on-a-struct-that-references-one-of-its-own-fields-at-call-time", "closed_reason": "Duplicate", "title": "Setting a handler on a struct that references one of its own fields at call time", "body": "<p>I have a struct in a module with a field with a <code>Fn</code> type and a setter method, trying to register a callback function </p>\n\n<pre><code>struct MyStruct {\n    name: String,\n    f: Box&lt;dyn Fn(String) -&gt; ()&gt;,\n}\n\nimpl MyStruct {\n    pub fn set_f(&amp;mut self, f: Box&lt;dyn Fn(String) -&gt; ()&gt;) {\n        self.f = f\n    }\n\n    pub fn set_handler(&amp;mut self, f: Box&lt;dyn Fn(String) -&gt; ()&gt;) {\n        let h = |s: String| {\n            f(format!(\"{} {}\", self.name, s));\n        };\n\n        self.set_f(Box::new(h));\n    }\n}\n\nfn main() {\n    let my_struct = MyStruct {\n        name: String::from(\"hello\"),\n        f: Box::new(|_: String| ()),\n    };\n    my_struct.set_handler(Box::new(|s: String| println!(\"{}\", s)))\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dd1242350b5916800646f2d5a847cc7b\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>getting the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:12:17\n   |\n12 |           let h = |s: String| {\n   |  _________________^\n13 | |             f(format!(\"{} {}\", self.name, s));\n14 | |         };\n   | |_________^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 11:5...\n  --&gt; src/main.rs:11:5\n   |\n11 | /     pub fn set_handler(&amp;mut self, f: Box&lt;dyn Fn(String) -&gt; ()&gt;) {\n12 | |         let h = |s: String| {\n13 | |             f(format!(\"{} {}\", self.name, s));\n14 | |         };\n15 | |\n16 | |         self.set_f(Box::new(h));\n17 | |     }\n   | |_____^\n   = note: ...so that the types are compatible:\n           expected &amp;&amp;mut MyStruct\n              found &amp;&amp;mut MyStruct\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the expression is assignable:\n           expected std::boxed::Box&lt;(dyn std::ops::Fn(std::string::String) + 'static)&gt;\n              found std::boxed::Box&lt;dyn std::ops::Fn(std::string::String)&gt;\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "is_accepted": true, "score": 3, "last_activity_date": 1573176888, "creation_date": 1573176888, "answer_id": 58759206, "question_id": 58759086, "link": "https://stackoverflow.com/questions/58759086/cannot-move-out-of-h-which-is-behind-a-shared-reference/58759206#58759206", "title": "cannot move out of `*h` which is behind a shared reference", "body": "<p>You need <a href=\"https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter\"><code>into_iter</code> instead of <code>iter</code></a>. With <code>iter</code> you only get references of items, while <code>join</code> has a signature as <code>pub fn join(self) -&gt; Result&lt;T&gt;</code> which requires owned data as parameter:</p>\n\n<pre><code>threads.into_iter().for_each(|h| { h.join().unwrap(); });\n</code></pre>\n\n<p>should work.</p>\n"}], "owner": {"reputation": 99684, "user_id": 149482, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/cb6a2b464b7190c48e4f148a0e51d13a?s=128&d=identicon&r=PG", "display_name": "Matt Joiner", "link": "https://stackoverflow.com/users/149482/matt-joiner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 533, "favorite_count": 0, "accepted_answer_id": 58759206, "answer_count": 1, "score": 1, "last_activity_date": 1573176888, "creation_date": 1573175942, "question_id": 58759086, "link": "https://stackoverflow.com/questions/58759086/cannot-move-out-of-h-which-is-behind-a-shared-reference", "title": "cannot move out of `*h` which is behind a shared reference", "body": "<p>I'm trying to call join on a vector of <code>JoinHandle</code>, using <code>for_each</code>. I get this error:</p>\n\n<pre><code>let mut threads = vec![];\n...\nthreads.iter().for_each(|h| h.join().unwrap());\n\nerror[E0507]: cannot move out of `*h` which is behind a shared reference\n  --&gt; src/main.rs:41:33\n   |\n41 |     threads.iter().for_each(|h| h.join().unwrap());\n   |                                 ^ move occurs because `*h` has type `std::thread::JoinHandle&lt;()&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>As far as I can tell, this should work fine if I were given references to the <code>JoinHandle</code>s by <code>for_each</code>, but it seems I'm not. The following code works fine:</p>\n\n<pre><code>for h in threads {\n    h.join().unwrap();\n}\n</code></pre>\n\n<p>How do I do the same but using <code>for_each</code> or something similar to it?</p>\n"}, {"tags": ["rust", "raii"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1573177034, "post_id": 58758812, "comment_id": 103805944, "body": "Your question title mentions running a closure, but the body references running <code>state.cleanup()</code>. I assume the title needs an update? It would also be great if you could make your example complete enough to compile. The usage of <code>Lazy</code> also seems irrelevant to the question since the lock could be declared directly in the function in the context of this example."}, {"owner": {"reputation": 863, "user_id": 5849285, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/UwK2I.jpg?s=128&g=1", "display_name": "Charles Shiller", "link": "https://stackoverflow.com/users/5849285/charles-shiller"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1573181522, "post_id": 58758812, "comment_id": 103806804, "body": "@loganfsmyth I don&#39;t see any way of calling state.cleanup without a closure, but the main point is that somehow I should be able to do something with Data when a write lock gets dropped"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1573185125, "post_id": 58758812, "comment_id": 103807578, "body": "Where do you see a closure affecting this? I think I understand what you want, but I don&#39;t think I follow where a closure would come into it, so I was hoping to clarify that for you."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573220685, "post_id": 58761741, "comment_id": 103821199, "body": "Your <code>cleanup</code> method is hardcoded. OP wants to provide a closure instead, so one lock can do something different from another. For your example, <code>RwLockWriteWrapper</code> would take two parameters."}], "tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": false, "score": 2, "last_activity_date": 1573249529, "last_edit_date": 1573249529, "creation_date": 1573195758, "answer_id": 58761741, "question_id": 58758812, "link": "https://stackoverflow.com/questions/58758812/is-there-a-way-to-run-a-closure-on-rwlock-drop/58761741#58761741", "title": "Is there a way to run a closure on RwLock drop?", "body": "<p>You can do this with a wrapper type:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=45ef2354e9e8c27f98a11ea58e086e97\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>use std::ops::{Deref, DerefMut, Drop};\nuse std::sync::{RwLock, RwLockWriteGuard};\n\ntype CleanupClosure&lt;'a&gt; = Fn(&amp;mut RwLockWriteGuard&lt;'a, Data&gt;);\n\nstruct Data {\n    content: String,\n}\n\nimpl Data {\n    fn change(&amp;mut self, num: i32) {\n        println!(\"Changed to {}\", num);\n        self.content = num.to_string();\n    }\n}\n\nstruct RwLockWriteWrapper&lt;'a, F: CleanupClosure&lt;'a&gt;&gt;(RwLockWriteGuard&lt;'a, Data&gt;, F);\n\nimpl&lt;'a, F: CleanupClosure&lt;'a&gt;&gt; Deref for RwLockWriteWrapper&lt;'a, F&gt; {\n    type Target = RwLockWriteGuard&lt;'a, Data&gt;;\n\n    fn deref(&amp;self) -&gt; &amp;RwLockWriteGuard&lt;'a, Data&gt; {\n        &amp;self.0\n    }\n}\n\nimpl&lt;'a, F: CleanupClosure&lt;'a&gt;&gt; DerefMut for RwLockWriteWrapper&lt;'a, F&gt; {\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut RwLockWriteGuard&lt;'a, Data&gt; {\n        &amp;mut self.0\n    }\n}\n\nimpl&lt;'a, F: CleanupClosure&lt;'a&gt;&gt; Drop for RwLockWriteWrapper&lt;'a, F&gt; {\n    fn drop(&amp;mut self) {\n        println!(\"Cleaning up!\");\n        self.1(&amp;mut self.0)\n    }\n}\n\nfn main() {\n    let data: RwLock&lt;Data&gt; = RwLock::new(Data {\n        content: \"Start\".to_owned(),\n    });\n    do_something(&amp;data);\n    do_something(&amp;data);\n}\n\nfn do_something(data: &amp;RwLock&lt;Data&gt;) {\n    // Write your own cleanup logic here\n    let mut state = RwLockWriteWrapper(data.write().unwrap(), |state| {\n        state.content = \"Cleaned up\".to_owned()\n    });\n\n    println!(\"do_something start: {}\", state.content);\n    state.change(5);\n\n    println!(\"do_something after change: {}\", state.content);\n} // Automatically run cleanup here\n</code></pre>\n\n<p>It does require you to remember to wrap the type when you call <code>.write()</code> on it. You can wrap <code>RwLock</code> itself in another type that would return <code>RwLockWriteWrapper</code> to automate that as well.</p>\n\n<p>This does become quite verbose, so I found <a href=\"https://crates.io/crates/shrinkwraprs\" rel=\"nofollow noreferrer\">a crate that impls the deref trait for you</a>.</p>\n\n<p>I am still not sure what closures you mentioned in the title meant.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 0, "last_activity_date": 1573353271, "creation_date": 1573353271, "answer_id": 58785282, "question_id": 58758812, "link": "https://stackoverflow.com/questions/58758812/is-there-a-way-to-run-a-closure-on-rwlock-drop/58785282#58785282", "title": "Is there a way to run a closure on RwLock drop?", "body": "<p>You can create a wrapper that implements <code>Drop</code>:</p>\n\n<pre><code>struct CleanOnDrop&lt;D, F&gt;\nwhere\n    F: FnOnce(&amp;mut D),\n{\n    data: D,\n    cleanup: Option&lt;F&gt;,\n}\n\nimpl&lt;D, F&gt; CleanOnDrop&lt;D, F&gt;\nwhere\n    F: FnOnce(&amp;mut D),\n{\n    pub fn new(data: D, cleanup: F) -&gt; Self {\n        Self { data, cleanup: Some(cleanup) }\n    }\n}\n\nimpl&lt;D, F&gt; Drop for CleanOnDrop&lt;D, F&gt;\nwhere\n    F: FnOnce(&amp;mut D)\n{\n    fn drop(&amp;mut self) {\n        if let Some(mut cleanup) = self.cleanup.take() {\n            cleanup(&amp;mut self.data);\n        }\n    }\n}\n</code></pre>\n\n<p>For convenience, you may want to implement <code>Deref</code> and <code>DerefMut</code> too, so that you can call methods on it directly:</p>\n\n<pre><code>use std::ops::{Deref, DerefMut};\n\nimpl&lt;D, F&gt; Deref for CleanOnDrop&lt;D, F&gt;\nwhere\n    F: FnOnce(&amp;mut D),\n{\n    type Target = D;\n    fn deref(&amp;self) -&gt; &amp;D {\n        &amp;self.data\n    }\n}\n\nimpl&lt;D, F&gt; DerefMut for CleanOnDrop&lt;D, F&gt;\nwhere\n    F: FnOnce(&amp;mut D),\n{\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut D {\n        &amp;mut self.data\n    }\n}\n</code></pre>\n\n<p>Use the wrapper like this:</p>\n\n<pre><code>let data = RwLock::new(CleanOnDrop::new(\n    Data {\n        content: Default::default(),\n    },\n    |state| {\n        state.cleanup();\n    },\n));\n</code></pre>\n"}], "owner": {"reputation": 863, "user_id": 5849285, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/UwK2I.jpg?s=128&g=1", "display_name": "Charles Shiller", "link": "https://stackoverflow.com/users/5849285/charles-shiller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1573353440, "creation_date": 1573173222, "last_edit_date": 1573353440, "question_id": 58758812, "link": "https://stackoverflow.com/questions/58758812/is-there-a-way-to-run-a-closure-on-rwlock-drop", "title": "Is there a way to run a closure on RwLock drop?", "body": "<p>I have a program that hides mutable state behind a RwLock. What I'd like to do is that when it's borrowed mutably (<code>RW_LOCK.write()</code>), on drop it should do something (namely, try to write to file, clean up the data behind the rwlock, etc.)</p>\n\n<p>For example:</p>\n\n<pre><code>let DATA: RwLock&lt;Data&gt; = RwLock::new(Data { content: Default::default() } );\n\nfn do_something() {\n    let mut state = DATA.write().unwrap();\n\n    state.change(5);\n    // ...\n    // Here, just before `state` goes out of scope (where it gets dropped and `RwLock` will allow \n    // other threads read/write access to `Data`, I would like for `RwLock` to auto-run `state.cleanup()`. \n}\n</code></pre>\n\n<p>Is there a way to do this, or do I have to reimplement <code>RwLock</code>?</p>\n"}, {"tags": ["methods", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1573165621, "post_id": 58757127, "comment_id": 103803217, "body": "In some case you need to be explicit but there is no difference in the behavior."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1573204791, "creation_date": 1573204791, "answer_id": 58763659, "question_id": 58757127, "link": "https://stackoverflow.com/questions/58757127/what-is-the-difference-between-method-call-syntax-foo-method-and-ufcs-foo/58763659#58763659", "title": "What is the difference between method call syntax `foo.method()` and UFCS `Foo::method(&amp;foo)`?", "body": "<p><strong>Summary</strong>: The most important difference is that the <strong><em>u</strong>niversal <strong>f</strong>unction <strong>c</strong>all <strong>s</strong>yntax</em> (UFCS) is <strong>more explicit</strong> than the <em>method call syntax</em>. </p>\n\n<p>With UFCS there is basically no ambiguity what function you want to call (there is still a longer form of the UFCS for trait methods, but let's ignore that for now). The method call syntax, on the other hand, requires more work in the compiler to figure out which method to call and how to call it. This manifests in mostly two things:</p>\n\n<ul>\n<li><strong>Method resolution</strong>: figure out if the method is inherent (bound to the type, not a trait) or a trait method. And in the latter case, also figure out which trait it belongs to.</li>\n<li>Figure out the correct receiver type (<code>self</code>) and potentially use <strong>type coercions</strong> to make the call work.</li>\n</ul>\n\n<p><br>\n<br></p>\n\n<h2>Receiver type coercions</h2>\n\n<p>Let's take a look at this example to understand the type coercions to the receiver type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo;\n\nimpl Foo {\n    fn on_ref(&amp;self) {}\n    fn on_mut_ref(&amp;mut self) {}\n    fn on_value(self) {}\n}\n\nfn main() {\n    let reference = &amp;Foo;    // type `&amp;Foo`\n    let mut_ref = &amp;mut Foo;  // type `&amp;mut Foo`\n    let mut value = Foo;     // type `Foo`\n\n    // ... \n}\n</code></pre>\n\n<p>So we have three methods that take <code>Foo</code>, <code>&amp;Foo</code> and <code>&amp;mut Foo</code> receiver and we have three variables with those types. Let's try out all 9 combinations with each, method call syntax and UFCS. </p>\n\n<p><strong>UFCS</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>Foo::on_ref(reference);    \n//Foo::on_mut_ref(reference);  error: mismatched types\n//Foo::on_value(reference);    error: mismatched types\n\n//Foo::on_ref(mut_ref);      error: mismatched types\nFoo::on_mut_ref(mut_ref);  \n//Foo::on_value(mut_ref);    error: mismatched types\n\n//Foo::on_ref(value);      error: mismatched types\n//Foo::on_mut_ref(value);  error: mismatched types\nFoo::on_value(value);\n</code></pre>\n\n<p>As we can see, only the calls succeed where the types are correct. To make the other calls work we would have to manually add <code>&amp;</code> or <code>&amp;mut</code> or <code>*</code> in front of the argument. That's the standard behavior for all function arguments. </p>\n\n<p><strong>Method call syntax</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>reference.on_ref();\n//reference.on_mut_ref();  error: cannot borrow `*reference` as mutable\n//reference.on_value();    error: cannot move out of `*reference`\n\nmut_ref.on_ref();\nmut_ref.on_mut_ref();\n//mut_ref.on_value();      error: cannot move out of `*mut_ref`\n\nvalue.on_ref();\nvalue.on_mut_ref();\nvalue.on_value();\n</code></pre>\n\n<p>Only three of the method calls lead to an error while the others succeed. Here, the compiler automatically inserts deref (dereferencing) or autoref (adding a reference) coercions to make the call work. Also note that the three errors are not \"type mismatch\" errors: the compiler already tried to adjust the type correctly, but this lead to other errors.</p>\n\n<hr>\n\n<p>There are some additional coercions:</p>\n\n<ul>\n<li><strong>Unsize coercions</strong>, described by the <a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Unsize.html\" rel=\"nofollow noreferrer\"><code>Unsize</code> trait</a>. Allows you to call slice methods on arrays and to coerce types into trait objects of traits they implement.</li>\n<li>Advanced <strong>deref coercions via <a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\">the <code>Deref</code> trait</a></strong>. This allows you to call slice methods on <code>Vec</code>, for example.</li>\n</ul>\n\n<p><br> \n<br> </p>\n\n<h2>Method resolution: figuring out what method to call</h2>\n\n<p>When writing <code>lhs.method_name()</code>, then the method <code>method_name</code> could be an inherent method of the type of <code>lhs</code> or it could belong to a trait that's in scope (imported). The compiler has to figure out which one to call and has a number of rules for this. When getting into the details, these rules are actually really complex and can lead to some surprising behavior. Luckily, most programmers will never have to deal with that and it \"just works\" most of the time. </p>\n\n<p>To give a coarse overview how it works, the compiler tries the following things in order, using the first method that is found. </p>\n\n<ul>\n<li>Is there an inherent method with the name <code>method_name</code> where the receiver type fits exactly (does not need coercions)?</li>\n<li>Is there a trait method with the name <code>method_name</code> where the receiver type fits exactly (does not need coercions)?</li>\n<li>Is there an inherent method with the name <code>method_name</code>? (type coercions will be performed)</li>\n<li>Is there a trait method with the name <code>method_name</code>? (type coercions will be performed)</li>\n</ul>\n\n<p>(Again, note that this is still a simplification. Different type of coercions are preferred over others, for example.)</p>\n\n<p>This shows one rule that most programmers know: inherent methods have a higher priority than trait methods. But a bit unknown is the fact that whether or not the receiver type fits perfectly is a more important factor. There is a quiz that nicely demonstrates this: <a href=\"https://dtolnay.github.io/rust-quiz/23\" rel=\"nofollow noreferrer\">Rust Quiz #23</a>. More details on the exact method resolution algorithm can be found in <a href=\"https://stackoverflow.com/a/28552082/2408867\">this StackOverflow answer</a>.</p>\n\n<p>This set of rules can actually make a bunch of changes to an API to be breaking changes. We currently have to deal with that <a href=\"https://github.com/rust-lang/rust/pull/65819\" rel=\"nofollow noreferrer\">in the attempt to add an <code>IntoIterator</code> impl for arrays</a>. </p>\n\n<p><br>\n<br></p>\n\n<hr>\n\n<p>Another \u2013 minor and probably very obvious \u2013 difference is that for the method call syntax, the type name does not have to be imported. </p>\n\n<p>Apart from that it's worth pointing out <strong>what is not different about the two syntaxes</strong>:</p>\n\n<ul>\n<li><strong>Runtime behavior</strong>: no difference whatsoever.</li>\n<li><strong>Performance</strong>: the method call syntax is \"converted\" (desugared) into basically the UFCS pretty early inside the compiler, meaning that there aren't any performance differences either.</li>\n</ul>\n"}], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "accepted_answer_id": 58763659, "answer_count": 1, "score": 3, "last_activity_date": 1573220004, "creation_date": 1573161980, "last_edit_date": 1573220004, "question_id": 58757127, "link": "https://stackoverflow.com/questions/58757127/what-is-the-difference-between-method-call-syntax-foo-method-and-ufcs-foo", "title": "What is the difference between method call syntax `foo.method()` and UFCS `Foo::method(&amp;foo)`?", "body": "<p>Is there any difference in Rust between calling a method on a value, like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A { e: u32 }\n\nimpl A {\n    fn show(&amp;self) {\n        println!(\"{}\", self.e)\n    }\n}\n\nfn main() {\n    A { e: 0 }.show();\n}\n</code></pre>\n\n<p>...and calling it on the type, like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    A::show(&amp;A { e: 0 })\n}\n</code></pre>\n"}, {"tags": ["rust", "async-await"], "answers": [{"comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1573155209, "post_id": 58754516, "comment_id": 103799226, "body": "I&#39;m confused as to what&#39;s going on here and if the Pin is even being used. You&#39;re doing a clone in either case, and then operating on the cloned value. Moving the cloned value into the async block should work regardless of any Pin. Further, given that your Arc, Pin and Vec all implement clone, it&#39;s not clear to me what&#39;s even being cloned in each scenario..."}, {"owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1573213537, "post_id": 58754516, "comment_id": 103817662, "body": "Yeah you are right. Do you have a correct solution?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1584990185, "post_id": 58754516, "comment_id": 107606526, "body": "This does not pass a <code>Vec&lt;u8&gt;</code> by reference to the async block. It <i>deliberately</i> transfers ownership of the <code>Vec</code> to the block."}], "tags": [], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "is_accepted": false, "score": 0, "last_activity_date": 1584990119, "last_edit_date": 1584990119, "creation_date": 1573149309, "answer_id": 58754516, "question_id": 58754442, "link": "https://stackoverflow.com/questions/58754442/how-to-use-use-pin-rather-than-arc-to-pass-a-vecu8-by-reference-to-an-async-bl/58754516#58754516", "title": "How to use use Pin rather than Arc to pass a Vec&lt;u8&gt; by reference to an async block?", "body": "<p>You are missing a <code>move</code>.</p>\n\n<p>Change</p>\n\n<pre><code>let handle = pool\n    .spawn_with_handle(async {\n        foo(&amp;*v1);\n    })\n    .unwrap();\n</code></pre>\n\n<p>to</p>\n\n<pre><code>let handle = pool\n    .spawn_with_handle(async move {\n        //                   ^^^^\n        foo(&amp;*v1);\n    })\n    .unwrap();\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 258, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1584990119, "creation_date": 1573149003, "last_edit_date": 1584990021, "question_id": 58754442, "link": "https://stackoverflow.com/questions/58754442/how-to-use-use-pin-rather-than-arc-to-pass-a-vecu8-by-reference-to-an-async-bl", "title": "How to use use Pin rather than Arc to pass a Vec&lt;u8&gt; by reference to an async block?", "body": "<p>I want to do an operation on a <code>Vec&lt;u8&gt;</code> multiple times using an <code>Arc</code>:</p>\n\n<pre><code>use futures::{\n    executor::{block_on, ThreadPool},\n    task::SpawnExt,\n}; // 0.3.4\nuse std::{pin::*, sync::Arc};\n\nfn foo(b: Arc&lt;Vec&lt;u8&gt;&gt;) {\n    println!(\"{:?}\", b);\n}\n\n#[test]\nfn pin_test() {\n    let v = Arc::new(vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n    let mut pool = ThreadPool::new().unwrap();\n    for _ in 0..10 {\n        let v1 = v.clone();\n        let handle = pool\n            .spawn_with_handle(async {\n                foo(v1);\n            })\n            .unwrap();\n        block_on(handle);\n    }\n}\n</code></pre>\n\n<p>I was expecting to be able to <code>Pin</code> the <code>Vec&lt;u8&gt;</code> instead</p>\n\n<pre><code>use futures::{\n    executor::{block_on, ThreadPool},\n    task::SpawnExt,\n}; // 0.3.4\nuse std::{pin::*, sync::Arc};\n\nfn foo(b: &amp;[u8]) {\n    println!(\"{:?}\", b);\n}\n\n#[test]\nfn pin_test() {\n    let v = Pin::new(vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n    let mut pool = ThreadPool::new().unwrap();\n    for _ in 0..10 {\n        let v1 = v.clone();\n        let handle = pool\n            .spawn_with_handle(async {\n                foo(&amp;*v1);\n            })\n            .unwrap();\n        block_on(handle);\n    }\n}\n</code></pre>\n\n<p>This gives the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `v1` does not live long enough\n  --&gt; src/lib.rs:19:23\n   |\n18 |                .spawn_with_handle(async {\n   |   ________________________________-_____-\n   |  |________________________________|\n   | ||\n19 | ||                 foo(&amp;*v1);\n   | ||                       ^^ borrowed value does not live long enough\n20 | ||             })\n   | ||             -\n   | ||_____________|\n   | |______________value captured here by generator\n   |                argument requires that `v1` is borrowed for `'static`\n...\n23 |        }\n   |        - `v1` dropped here while still borrowed\n</code></pre>\n\n<p>I understood that <code>Pin</code> should pin the <code>Vec</code> data to a specific point, such that all the calls could reference the same data. What is the right way to use <code>Pin</code> so that I can pass a reference to <code>foo()</code>?</p>\n\n<p>I'm using Rust 1.39.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1573154505, "post_id": 58754396, "comment_id": 103798917, "body": "See also <a href=\"https://stackoverflow.com/questions/27895946/expected-fn-item-found-a-different-fn-item-when-working-with-function-pointer\">\u201cExpected fn item, found a different fn item\u201d when working with function pointers</a>, which elaborates a little on the nature of function types"}, {"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1573157097, "post_id": 58754396, "comment_id": 103800033, "body": "Thanks for pointing out the answer, so seemed for now it&#39;s not possible to do what I expected, I asked because coming from a Haskell background and being spoiled by Hindley\u2013Milner type system for so long that&#39;s like the 2nd nature to write out a function type :)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1573159810, "post_id": 58754396, "comment_id": 103801124, "body": "You could perhaps express the difference between Haskell and Rust in these terms: In Haskell, a function <i>has</i> a type whereas in Rust a function <i>is</i> a type (and the only inhabitant of that type, much like <code>()</code>)."}], "owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 49, "favorite_count": 1, "closed_date": 1573156960, "answer_count": 0, "score": 1, "last_activity_date": 1573153886, "creation_date": 1573148827, "last_edit_date": 1573153886, "question_id": 58754396, "link": "https://stackoverflow.com/questions/58754396/can-a-function-type-definition-be-on-its-own-line-instead-of-inlined", "closed_reason": "Duplicate", "title": "Can a function type definition be on its own line instead of inlined?", "body": "<p>Is it possible to make a type definition for a function <em>not</em> inline, instead standing on its own line?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// a standard fn with it's type inline\npub fn kk&lt;T&gt;(a: &amp;str, b: u32) -&gt; Result&lt;T, &amp;'static str&gt; {\n    unimplemented!();\n}\n\n// a type alias expressing the same thing as above\ntype KK&lt;T&gt; = Fn(&amp;str, u32) -&gt; Result&lt;T, &amp;'static str&gt;;\n\n// Question: could I use the type alias above as the type for a function, something like this \u2193\nfn BB: KK&lt;T&gt; { /* ... */ }\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1158, "user_id": 4956078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44600007f35ab98b7badbf1110df0687?s=128&d=identicon&r=PG&f=1", "display_name": "JMAA", "link": "https://stackoverflow.com/users/4956078/jmaa"}, "edited": false, "score": 0, "creation_date": 1573149508, "post_id": 58753964, "comment_id": 103796816, "body": "So you want to be able to do <code>x.my_method()</code> for <code>x</code> of any type for which <code>my_method</code> could possibly be instantiated?"}, {"owner": {"reputation": 1158, "user_id": 4956078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44600007f35ab98b7badbf1110df0687?s=128&d=identicon&r=PG&f=1", "display_name": "JMAA", "link": "https://stackoverflow.com/users/4956078/jmaa"}, "edited": false, "score": 0, "creation_date": 1573149987, "post_id": 58753964, "comment_id": 103796994, "body": "Seems like very little boilerplate to me for that functionality. Plus, then you have a trait which you could use like <code>fn&lt;T: Test&gt; function_that_makes_pairs_lots(t: T) ...</code>"}], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1573153925, "answer_count": 0, "score": 2, "last_activity_date": 1573147079, "creation_date": 1573147079, "question_id": 58753964, "link": "https://stackoverflow.com/questions/58753964/is-there-a-cleaner-way-of-writing-functions-with-method-call-syntax", "closed_reason": "Duplicate", "title": "Is there a cleaner way of writing functions with method call syntax?", "body": "<p>I recently found myself doing something like this to get method call syntax:</p>\n\n<pre><code>pub trait Test {\n    fn mk_pair(self) -&gt; (Self, Self)\n    where\n        Self: Sized + Clone,\n    {\n        (self.clone(), self)\n    }\n}\n\nimpl&lt;T&gt; Test for T {}\n\npub fn testy&lt;T&gt;(x: T) -&gt; (T, T)\nwhere\n    T: Clone,\n{\n    x.mk_pair()\n}\n</code></pre>\n\n<p>Silly example but as you can see I can now call <code>x.mk_pair()</code> instead of <code>mk_pair(x)</code>. Probably doesn't matter much in this case but some find method call syntax nice in some cases.</p>\n\n<p>Question is, is this the minimum boilerplate required? The global impl seems a bit hacky. Is there a nicer way to give a function method call syntax without as much trait/impl tomfoolery? </p>\n"}, {"tags": ["ssl", "rust", "heroku-postgres"], "owner": {"reputation": 5534, "user_id": 1484555, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/9ede0b6ed1e9d2f7037ff60242dd7561?s=128&d=identicon&r=PG", "display_name": "almel", "link": "https://stackoverflow.com/users/1484555/almel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 324, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1573134950, "creation_date": 1573132024, "question_id": 58749427, "link": "https://stackoverflow.com/questions/58749427/ssl-tls-error-code-18-self-signed-certificate-on-heroku-postgres-connection", "title": "SSL/TLS error code 18 &quot;self signed certificate&quot; on heroku postgres connection", "body": "<p>I have a free tier heroku Rust app that connects to a Heroku postgres instance on the <code>hobby-dev</code> tier (lowest tier) using the library <a href=\"https://crates.io/crates/postgres\" rel=\"nofollow noreferrer\">rust-postgres</a>. When my app tries to make an SSL/TLS connection to the postgres instance, it fails with the error</p>\n\n<p><code>self signed certificate</code></p>\n\n<p>and error code 18. I did not supply this self-signed cert, it would automatically provisioned by Heroku when I provisioned the Heroku postgres instance. </p>\n\n<p>What can I do to heroku, or the <code>rust-postgres</code> function which makes the connection, so that I can successfully connect to the Postgres instance?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1573119946, "post_id": 58745622, "comment_id": 103780677, "body": "Could you use simple vectors as arenas, and use indices as references?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1573125087, "post_id": 58745622, "comment_id": 103783476, "body": "<code>Rc</code> are <i>very</i> fast. I doubt that using them would have a significant impact on performance, so I&#39;d say use them unless and until <i>measurements show</i> that they cause issues in your specific case."}, {"owner": {"reputation": 1705, "user_id": 1053530, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/ef840208610851a906be113e3f63efd4?s=128&d=identicon&r=PG", "display_name": "idanzalz", "link": "https://stackoverflow.com/users/1053530/idanzalz"}, "edited": false, "score": 0, "creation_date": 1573190261, "post_id": 58745622, "comment_id": 103808559, "body": "Yes I tried with rc first, actually I was inaccurate the real issue is the rc memory footprint, I have many many very small vectors of single bytes, the rc itself is bigger than the vector"}, {"owner": {"reputation": 1705, "user_id": 1053530, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/ef840208610851a906be113e3f63efd4?s=128&d=identicon&r=PG", "display_name": "idanzalz", "link": "https://stackoverflow.com/users/1053530/idanzalz"}, "edited": false, "score": 0, "creation_date": 1573190309, "post_id": 58745622, "comment_id": 103808570, "body": "As I mentioned I can&#39;t use indices cause I want the &quot;objects&quot; coming from the arena to be used as hashmap keys"}], "owner": {"reputation": 1705, "user_id": 1053530, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/ef840208610851a906be113e3f63efd4?s=128&d=identicon&r=PG", "display_name": "idanzalz", "link": "https://stackoverflow.com/users/1053530/idanzalz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 83, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1573190488, "creation_date": 1573118874, "last_edit_date": 1573190488, "question_id": 58745622, "link": "https://stackoverflow.com/questions/58745622/phase-oriented-allocation-in-rust-with-arenas", "title": "Phase-oriented allocation in Rust with arenas", "body": "<p>I'm trying to build an application that consumes data from Kafka. Data is being aggregated into 5 minute buckets and I need to \"remember\" the last 10 buckets and then drop the buckets as they become too old.</p>\n\n<p>For the aggregation purpose, I need to allocate some objects and I would like to use the arena approach so these allocations are fast. I want to bind each bucket to a specific arena so when the bucket becomes too old I can drop the whole bucket with its arena. </p>\n\n<p>However, I can't find a way to reason with the lifetime in this situation, if I maintain a <code>Vec&lt;Arena&gt;</code> then the lifetime of the objects in the <code>Vec</code> is not the same. For my use case I cannot use an <code>Id</code> arena because I want to use the objects as keys for a hashmap. I don't want to generate an <code>Rc</code> for each item in the arena because that will increase the memory footprint of every item (these are many many very small items), so I want to hold in my bucket actual references to objects allocated in the arena.</p>\n\n<p>Sorry the question is a bit vague but would love some hints on how to address this situation.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1573110583, "creation_date": 1573110583, "answer_id": 58743598, "question_id": 58743416, "link": "https://stackoverflow.com/questions/58743416/how-do-i-reassign-an-array-through-a-mutable-reference-in-a-function/58743598#58743598", "title": "How do I reassign an array through a mutable reference in a function", "body": "<p>The variable <code>a</code> is a mutable reference to an array. If you write <code>a = ...;</code>, you are attempting to change the reference itself (i.e. afterwards <code>a</code> references a different array). But that's not what you want. You want to change the original value behind the reference. To do that you have to <strong>dereference the reference with <code>*</code></strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>*a = [5, 4, 1];\n</code></pre>\n\n<p>The error message for Rust 1.38 and newer is even better:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:2:9\n  |\n2 |     a = [5, 4, 1];\n  |         ^^^^^^^^^ expected mutable reference, found array of 3 elements\n  |\n  = note: expected type `&amp;mut [i64; 3]`\n             found type `[{integer}; 3]`\nhelp: consider dereferencing here to assign to the mutable borrowed piece of memory\n  |\n2 |     *a = [5, 4, 1];\n  |     ^^\n</code></pre>\n\n<p>It already tells you the solution! Reading the full error message is really worth it when using Rust :)</p>\n"}], "owner": {"reputation": 390, "user_id": 7934881, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/aa6f4cdaa2a06c9ed371c080ee77dbb5?s=128&d=identicon&r=PG&f=1", "display_name": "Ayumu Kasugano", "link": "https://stackoverflow.com/users/7934881/ayumu-kasugano"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 364, "favorite_count": 0, "accepted_answer_id": 58743598, "answer_count": 1, "score": 1, "last_activity_date": 1573110658, "creation_date": 1573109797, "last_edit_date": 1573110658, "question_id": 58743416, "link": "https://stackoverflow.com/questions/58743416/how-do-i-reassign-an-array-through-a-mutable-reference-in-a-function", "title": "How do I reassign an array through a mutable reference in a function", "body": "<p>I'm new to Rust, and I'm having trouble with the concept of references and ownership. I want to simply reassign an array but I'm running into errors. I'm tried the following:</p>\n\n<pre><code>fn change(a: &amp;mut [i64; 3]) {\n    a = [5, 4, 1];\n}\n</code></pre>\n\n<p>but I'm getting the following error:</p>\n\n<pre><code> --&gt; main.rs:6:7\n  |\n6 |   a = [5, 4, 1];\n  |       ^^^^^^^^^\n  |       |\n  |       expected mutable reference, found array of 3 elements\n  |       help: consider mutably borrowing here: `&amp;mut [5, 4, 1]`\n  |\n  = note: expected type `&amp;mut [i64; 3]`\n</code></pre>\n\n<p>I tried adding the <code>&amp;mut</code> to the array, but I get a completely new error. Can someone point me in the right direction?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 45894, "user_id": 271415, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/8648256cc53b261c5e1d266380a256fc?s=128&d=identicon&r=PG", "display_name": "jarmod", "link": "https://stackoverflow.com/users/271415/jarmod"}, "edited": false, "score": 0, "creation_date": 1573087408, "post_id": 58740380, "comment_id": 103770685, "body": "Related: <a href=\"https://stackoverflow.com/questions/29871967/what-is-the-difference-between-macros-and-functions-in-rust\" title=\"what is the difference between macros and functions in rust\">stackoverflow.com/questions/29871967/&hellip;</a>"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1573087931, "post_id": 58740380, "comment_id": 103770787, "body": "Would something like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f3e3f3a43fa5481bc0dcfa3e018fda29\" rel=\"nofollow noreferrer\">this</a> using <a href=\"https://doc.rust-lang.org/reference/conditional-compilation.html#the-cfg-attribute\" rel=\"nofollow noreferrer\">this</a> work? Or perhaps <a href=\"https://doc.rust-lang.org/1.2.0/std/macro.env!.html\" rel=\"nofollow noreferrer\"><code>env!</code></a>?"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 2, "creation_date": 1573088042, "post_id": 58740380, "comment_id": 103770809, "body": "Using <code>env</code> would be the more colloquial route I think, but would also involve parsing at runtime, probably with some <code>lazy_static</code>, but you could also write a <code>proc_macro</code> to parse it instead."}, {"owner": {"reputation": 2283, "user_id": 320911, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/adCJz.jpg?s=128&g=1", "display_name": "Arto Bendiken", "link": "https://stackoverflow.com/users/320911/arto-bendiken"}, "edited": false, "score": 0, "creation_date": 1615382273, "post_id": 58740380, "comment_id": 117672553, "body": "Related: <a href=\"https://stackoverflow.com/q/37526598\">stackoverflow.com/q/37526598</a>"}], "owner": {"reputation": 195, "user_id": 9316533, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JBbUC.jpg?s=128&g=1", "display_name": "Nikolay Edigaryev", "link": "https://stackoverflow.com/users/9316533/nikolay-edigaryev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 85, "favorite_count": 0, "closed_date": 1573090014, "answer_count": 0, "score": 3, "last_activity_date": 1573087531, "creation_date": 1573087026, "last_edit_date": 1573087531, "question_id": 58740380, "link": "https://stackoverflow.com/questions/58740380/what-is-the-rust-equivalent-of-c-preprocessor-macros", "closed_reason": "Duplicate", "title": "What is the Rust equivalent of C preprocessor macros?", "body": "<p>In C world, when building external libraries, their behavior can be significantly customized at compile time by re-defining macros that are put in place by the library author.</p>\n\n<p>If we look at SQLite's <a href=\"https://www.sqlite.org/compile.html\" rel=\"nofollow noreferrer\">Compile-time Options</a>, for example, one can pass the following options to the compiler to effectively change the values of constants defined in the library:</p>\n\n<p><code>-D SQLITE_DEFAULT_PAGE_SIZE=2097152 -D SQLITE_DEFAULT_SYNCHRONOUS=3</code></p>\n\n<p>Is this possible to do something similar in Rust? Closest thing I've found is <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\" rel=\"nofollow noreferrer\">Cargo features</a>, but they only allow you to perform conditional compilation and not substitution of some predefined values at compile-time.</p>\n"}]