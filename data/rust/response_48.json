[{"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 1, "creation_date": 1449608761, "post_id": 34164704, "comment_id": 56079226, "body": "could you please show how you&#39;re planning to use your Facade? I suspect you are trying to get dynamic dispatch and want some form of trait objects here."}, {"owner": {"reputation": 21581, "user_id": 288703, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/1bb69b75c5e73a7c9f4ebbc4835d622f?s=128&d=identicon&r=PG", "display_name": "Christoph", "link": "https://stackoverflow.com/users/288703/christoph"}, "reply_to_user": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 0, "creation_date": 1449650983, "post_id": 34164704, "comment_id": 56095499, "body": "This is probably only an intermediate step as the design is currently in it&#39;s early design stage. However I could imagine that there are three methods on the facade. <code>new&lt;R: RefGen&gt;(ref_gen: R)</code> would let the user decide which <code>RefGen</code> to use whereas <code>new_with_foo</code> and <code>new_with_bar</code> would set a concrete <code>RefGen</code> implementation. No dynamic dispatch here as far as I get it."}], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 4, "last_activity_date": 1449651813, "creation_date": 1449651813, "answer_id": 34174591, "question_id": 34164704, "link": "https://stackoverflow.com/questions/34164704/do-i-need-multiple-impl-blocks-to-implement-multiple-methods-that-set-a-concrete/34174591#34174591", "title": "Do I need multiple impl blocks to implement multiple methods that set a concrete type for a type parameter?", "body": "<p>If you want named methods for each type, this is the only way. If you want to do this generically, you can use a generic impl:</p>\n\n<pre><code>impl&lt;R: RefGen&gt; Facade&lt;R&gt; {\n    fn new() -&gt; Self {\n        Facade {\n            gen: R::new(),\n        }\n    }\n}\n</code></pre>\n\n<p>This of course requires the <code>RefGen</code> trait to offer some kind of <code>new</code> function to create instances:</p>\n\n<pre><code>trait RefGen {\n    fn gen() -&gt; String;\n    fn new() -&gt; Self where Self: Sized;\n}\n</code></pre>\n\n<p>The <code>where Self: Sized</code> bound is there so the trait is still object safe. This means that you can create a <code>Box&lt;RefGen&gt;</code>, but not call the <code>new</code> method.</p>\n\n<p>Though now you cannot call the <code>gen</code> method on your <code>GenFoo</code> or <code>GenBar</code> object, because it's a static method. You need to add a <code>&amp;self</code> parameter to it. In case you never want to actually create an object of type <code>GenFoo</code> or <code>GenBar</code>, because they will never have fields, you can get rid of the <code>gen</code> field and <code>new</code> constructor entirely by doing all dispatch at compile-time:</p>\n\n<pre><code>struct Facade&lt;R: RefGen&gt; {\n    gen: PhantomData&lt;R&gt;,\n}\n\nimpl&lt;R: RefGen&gt; Facade&lt;R&gt; {\n    fn new() -&gt; Self {\n        Facade {\n            gen: PhantomData,\n        }\n    }\n    fn gen(&amp;self) -&gt; String {\n        R::gen()\n    }\n}\n\nimpl Facade&lt;FooGen&gt; {\n    fn new_foogen() -&gt; Self {\n        Self::new()\n    }\n}\n\nimpl Facade&lt;BarGen&gt; {\n    fn new_bargen() -&gt; Self {\n        Self::new()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 21581, "user_id": 288703, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/1bb69b75c5e73a7c9f4ebbc4835d622f?s=128&d=identicon&r=PG", "display_name": "Christoph", "link": "https://stackoverflow.com/users/288703/christoph"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "accepted_answer_id": 34174591, "answer_count": 1, "score": 1, "last_activity_date": 1449651813, "creation_date": 1449604019, "last_edit_date": 1449604303, "question_id": 34164704, "link": "https://stackoverflow.com/questions/34164704/do-i-need-multiple-impl-blocks-to-implement-multiple-methods-that-set-a-concrete", "title": "Do I need multiple impl blocks to implement multiple methods that set a concrete type for a type parameter?", "body": "<p>Consider this code that defines a trait <code>RefGen</code>, a structure <code>Facade</code> that has a property that can hold a <code>RefGen</code> and two different <code>new_*</code> methods that would pick different concrete implementations for the <code>RefGen</code>.</p>\n\n<pre><code>trait RefGen {\n    fn gen() -&gt; String;\n}\n\nstruct FooGen;\n\nimpl RefGen for FooGen {\n    fn gen() -&gt; String {\n        \"foo\".to_owned()\n    }\n}\n\nstruct BarGen;\n\nimpl RefGen for BarGen {\n    fn gen() -&gt; String {\n        \"bar\".to_owned()\n    }\n}\n\nstruct Facade&lt;R: RefGen&gt; {\n    gen: R\n}\n\nimpl Facade&lt;FooGen&gt; {\n    fn new_foogen() -&gt; Self {\n        Facade {\n            gen: FooGen\n        }\n    }\n}\n\nimpl Facade&lt;BarGen&gt; {\n    fn new_bargen() -&gt; Self {\n        Facade {\n            gen: BarGen\n        }\n    }\n}\n\nfn main () {}\n</code></pre>\n\n<p>It works, but it baffles me I would need two <code>impl</code> blocks for that?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1449602100, "post_id": 34163823, "comment_id": 56075083, "body": "Duplicate of <a href=\"http://stackoverflow.com/q/32551177/155423\">stackoverflow.com/q/32551177/155423</a> or <a href=\"http://stackoverflow.com/q/31490913/155423\">stackoverflow.com/q/31490913/155423</a> or <a href=\"http://stackoverflow.com/q/31060851/155423\">stackoverflow.com/q/31060851/155423</a> or <a href=\"http://stackoverflow.com/q/33812706/155423\">stackoverflow.com/q/33812706/155423</a> or (insert more search results here)."}], "answers": [{"tags": [], "owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "is_accepted": false, "score": 1, "last_activity_date": 1449602334, "last_edit_date": 1495540341, "creation_date": 1449602334, "answer_id": 34164186, "question_id": 34163823, "link": "https://stackoverflow.com/questions/34163823/why-does-my-foogen-type-not-satisfy-the-refgen-trait-bound/34164186#34164186", "title": "Why does my FooGen type not satisfy the RefGen trait bound?", "body": "<p>This works:</p>\n\n<pre><code>impl&lt;R: RefGen&gt; Facade&lt;R&gt; {\n  fn new(gen: R) -&gt; Facade&lt;R&gt; {\n    Facade {\n      gen: gen\n    }\n  }\n}\n</code></pre>\n\n<p>I am not sure about the precise terms to explain this, but here it goes: in your code, the type <code>R</code> is determined <em>inside</em> the <code>new</code> function. However, Rust requires you to provide the type from <em>outside</em> the function. Check out the following example:</p>\n\n<pre><code>// This doesn't typecheck\nfn foo1&lt;T: Clone&gt;() -&gt; T {\n    \"hi\"\n}\n\n// This works\nfn foo2&lt;T: Clone&gt;(x: T) -&gt; T {\n    x\n}\n</code></pre>\n\n<p>See <a href=\"https://stackoverflow.com/a/32551408/2110623\">this answer</a> for a more detailed explanation</p>\n"}], "owner": {"reputation": 21581, "user_id": 288703, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/1bb69b75c5e73a7c9f4ebbc4835d622f?s=128&d=identicon&r=PG", "display_name": "Christoph", "link": "https://stackoverflow.com/users/288703/christoph"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "closed_date": 1449604181, "answer_count": 1, "score": 1, "last_activity_date": 1449603885, "creation_date": 1449601127, "last_edit_date": 1449603885, "question_id": 34163823, "link": "https://stackoverflow.com/questions/34163823/why-does-my-foogen-type-not-satisfy-the-refgen-trait-bound", "closed_reason": "Duplicate", "title": "Why does my FooGen type not satisfy the RefGen trait bound?", "body": "<p>I have this code that uses generics.</p>\n\n<pre><code>trait RefGen {\n    fn gen () -&gt; String;\n}\n\nstruct FooGen;\n\nimpl RefGen for FooGen {\n    fn gen () -&gt; String {\n        \"foo\".to_owned()\n    }\n}\n\nstruct Facade&lt;R: RefGen&gt; {\n    gen: R\n}\n\nimpl&lt;R: RefGen&gt; Facade&lt;R&gt; {\n    fn new() -&gt; Facade&lt;R&gt; {\n        Facade {\n            gen: FooGen\n        }\n    }\n}\n</code></pre>\n\n<p>I wonder why Rust is telling me I can't use a <code>FooGen</code> for a <code>RefGen</code>. It certainly implements <code>RefGen</code>.</p>\n\n<p>The exact error message is:</p>\n\n<pre><code>expected `Facade&lt;R&gt;`,\nfound `Facade&lt;FooGen&gt;`\n</code></pre>\n\n<p>Here is a playpen: <a href=\"http://is.gd/oBIB1o\" rel=\"nofollow\">http://is.gd/oBIB1o</a></p>\n"}, {"tags": ["generics", "rust"], "answers": [{"comments": [{"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1449594547, "post_id": 34161678, "comment_id": 56070379, "body": "Thanks for clearing that up - it&#39;s really helpful to see why this is the case. As for the += part am I correct in assuming that it is just not possible to use this operator for generics?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 1, "creation_date": 1449594634, "post_id": 34161678, "comment_id": 56070430, "body": "@user124784 <a href=\"https://doc.rust-lang.org/nightly/std/ops/trait.AddAssign.html\" rel=\"nofollow noreferrer\">not yet</a>, but it&#39;s coming. <a href=\"https://github.com/rust-lang/rfcs/pull/953\" rel=\"nofollow noreferrer\">Specifying good semantics</a> for that operator is tougher than you&#39;d expect :-)"}, {"owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "edited": false, "score": 0, "creation_date": 1449628154, "post_id": 34161678, "comment_id": 56086818, "body": "I can wait :). Just to check though - the compiler&#39;s optimization will not see any difference between these?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1560348957, "last_edit_date": 1560348957, "creation_date": 1449593952, "answer_id": 34161678, "question_id": 34161245, "link": "https://stackoverflow.com/questions/34161245/binary-operation-cannot-be-applied-when-using-generics-for-arithmetic/34161678#34161678", "title": "Binary operation cannot be applied when using generics for arithmetic", "body": "<p>Let's look closer at the <a href=\"https://docs.rs/num/0.2.0/num/trait.Float.html\" rel=\"nofollow noreferrer\"><code>Float</code></a> trait. It is defined as:</p>\n\n<pre><code>pub trait Float: NumCast + Num + Copy + Neg&lt;Output = Self&gt; + PartialOrd&lt;Self&gt; {\n    // ...\n}\n</code></pre>\n\n<p>Diving into the <a href=\"https://docs.rs/num/0.2.0/num/trait.Num.html\" rel=\"nofollow noreferrer\"><code>Num</code></a> trait, we see:</p>\n\n<pre><code>pub trait Num: Zero + One + NumOps&lt;Self, Self&gt; + PartialEq&lt;Self&gt; {\n    // ...\n}\n</code></pre>\n\n<p>And deeper into <a href=\"https://docs.rs/num-traits/0.2.5/num_traits/trait.NumOps.html\" rel=\"nofollow noreferrer\"><code>NumOps</code></a></p>\n\n<pre><code>pub trait NumOps&lt;Rhs = Self, Output = Self&gt;:\n    Add&lt;Rhs, Output = Output&gt;\n    + Sub&lt;Rhs, Output = Output&gt;\n    + Mul&lt;Rhs, Output = Output&gt;\n    + Div&lt;Rhs, Output = Output&gt;\n    + Rem&lt;Rhs, Output = Output&gt;\n{\n    // ...\n}\n</code></pre>\n\n<p>That means that any type that implements <code>Float</code> is able to be multiplied by its <em>own</em> type. Now let's turn back to your code. You are iterating over a <code>Vec&lt;T&gt;</code>, which gives you a <em>reference</em> to each item, a <code>&amp;T</code>.</p>\n\n<p>You have a <code>&amp;T</code> and are trying to multiply that by another <code>&amp;T</code>. Here's a simplified example of that:</p>\n\n<pre><code>fn do_a_thing&lt;T&gt;(a: &amp;T, b: &amp;T)\nwhere\n    T: Float,\n{\n    let z = a * b;\n}\n</code></pre>\n\n<p>This gives the same error: <code>binary operation `*` cannot be applied to type `&amp;T`</code>.</p>\n\n<p>The problem is that you <strong>only</strong> know that you can multiply a <code>T</code> by another <code>T</code>. To say that, you have to explicitly dereference the variables. Since <code>Float</code> also requires <code>Copy</code>, this will work:</p>\n\n<pre><code>let z = (*a) * (*b);\n</code></pre>\n\n<p>Applying the same change to your original code causes it to work:</p>\n\n<pre><code>for u in &amp;self.data {\n    s = s + (*u) * (*u);\n}\n</code></pre>\n\n<p>You can also dereference the iterator variable when pattern matching:</p>\n\n<pre><code>for &amp;u in &amp;self.data {\n    s = s + u * u;\n}\n</code></pre>\n\n<p>Or you can add another bound that requires that references to your type can be multiplied:</p>\n\n<pre><code>impl&lt;T&gt; Metric&lt;T&gt; for Vector&lt;T&gt;\nwhere\n    T: Float,\n    for&lt;'a&gt; &amp;'a T: std::ops::Mul&lt;&amp;'a T, Output = T&gt;,\n{\n    fn norm(&amp;self) -&gt; T {\n        let mut s = T::zero();\n\n        for u in &amp;self.data {\n            s = s + u * u;\n        }\n\n        s.sqrt()\n    }\n}\n</code></pre>\n\n<p>You can also add in a bound for <a href=\"https://doc.rust-lang.org/std/ops/trait.AddAssign.html\" rel=\"nofollow noreferrer\"><code>AddAssign</code></a> and write simpler code in the body:</p>\n\n<pre><code>impl&lt;T&gt; Metric&lt;T&gt; for Vector&lt;T&gt;\nwhere\n    T: Float + std::ops::AddAssign,\n    for&lt;'a&gt; &amp;'a T: std::ops::Mul&lt;&amp;'a T, Output = T&gt;,\n{\n    fn norm(&amp;self) -&gt; T {\n        let mut s = T::zero();\n\n        for u in &amp;self.data {\n            s += u * u;\n        }\n\n        s.sqrt()\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34630695/155423\">How to write a trait bound for adding two references of a generic type?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44343166/155423\">How do I write the lifetimes for references in a type constraint when one of them is a local reference?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35592750/155423\">How does for&lt;&gt; syntax differ from a regular lifetime bound?</a></li>\n</ul>\n"}], "owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5415, "favorite_count": 0, "accepted_answer_id": 34161678, "answer_count": 1, "score": 3, "last_activity_date": 1560348957, "creation_date": 1449592721, "last_edit_date": 1560348527, "question_id": 34161245, "link": "https://stackoverflow.com/questions/34161245/binary-operation-cannot-be-applied-when-using-generics-for-arithmetic", "title": "Binary operation cannot be applied when using generics for arithmetic", "body": "<p>I'm trying to implement generics within my library using the <a href=\"https://docs.rs/num/0.2.0/num/trait.Float.html\" rel=\"nofollow noreferrer\">num crate <code>Float</code> trait</a>, but I'm stuck fighting the compiler. This works:</p>\n\n<pre><code>struct Vector&lt;T&gt; {\n    data: Vec&lt;T&gt;,\n}\n\ntrait Metric&lt;T&gt; {\n    fn norm(&amp;self) -&gt; T;\n}\n\nimpl Metric&lt;f32&gt; for Vector&lt;f32&gt; {\n    fn norm(&amp;self) -&gt; f32 {\n        let mut s = 0.0;\n\n        for u in &amp;self.data {\n            s = s + u * u;\n        }\n\n        s.sqrt()\n    }\n}\n</code></pre>\n\n<p>But this doesn't:</p>\n\n<pre><code>use num::Float; // 0.2.0\n\nstruct Vector&lt;T&gt; {\n    data: Vec&lt;T&gt;,\n}\n\ntrait Metric&lt;T&gt; {\n    fn norm(&amp;self) -&gt; T;\n}\n\nimpl&lt;T: Float&gt; Metric&lt;T&gt; for Vector&lt;T&gt; {\n    fn norm(&amp;self) -&gt; T {\n        let mut s = T::zero();\n\n        for u in &amp;self.data {\n            s = s + u * u;\n        }\n\n        s.sqrt()\n    }\n}\n</code></pre>\n\n<p>The latter gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `*` cannot be applied to type `&amp;T`\n  --&gt; src/lib.rs:16:23\n   |\n16 |             s = s + u * u;\n   |                     - ^ - &amp;T\n   |                     |\n   |                     &amp;T\n   |\n   = note: an implementation of `std::ops::Mul` might be missing for `&amp;T`\n</code></pre>\n\n<p>If I remove the reference and iterate over <code>self.data</code> instead, I get a</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:15:18\n   |\n15 |         for u in self.data {\n   |                  ^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449589682, "post_id": 34159576, "comment_id": 56066981, "body": "Your example code increments by one, so it is <i>not</i> a bitmask. You also state that you want to be able to filter by type, which you can do with an arbitrary number / <code>TypeId</code>. Can you expand more why it needs to be a bitmask?"}, {"owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1449590278, "post_id": 34159576, "comment_id": 56067458, "body": "@Shepmaster Unless I&#39;m using the wrong word (which is a big possibility), afaik <code>1 &lt;&lt; 0</code> gives me <code>0b001</code>, <code>1 &lt;&lt; 1</code> gives me <code>0b010</code>, <code>1 &lt;&lt; 2</code> gives me <code>0b100</code>. Is this not how bitmasks are constructed? That&#39;s how I have always done. About needing to be bitmasks, it doesn&#39;t, that why I said I would accept better solutions, but If I were to filter using TypeId it would be much more complicated than using masks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449590671, "post_id": 34159576, "comment_id": 56067720, "body": "You are correct that shifting would give you a bitmask, but your &quot;latest attempt at solving this&quot; simply adds one each time it was called, so I figured that&#39;s what you actually wanted. I&#39;m not sure why a bitmask would be easier to filter on than a straight equality test, but if you are certain it&#39;s not a duplicate, I can reopen."}, {"owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449591040, "post_id": 34159576, "comment_id": 56067980, "body": "My latest attempt was an example of code generation, I&#39;ll try to be clearer next time. I feel it&#39;s easier because bit operations are easier (and faster?) than checking every typeId (besides, I keep them in a Vec&lt;Box&lt;Mask&gt;&gt; so I don&#39;t think I can really use TypeId here, since I lost the original type)."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449591978, "post_id": 34160857, "comment_id": 56068679, "body": "A nice thing about this solution is that with a bit of tweaking, you can extend it to provide different masks for different sets of objects. Since you are limited to 32 (or 64 is you pick <code>u64</code>) types, this may come in handy. Or maybe you have different categories of types."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449592120, "post_id": 34160857, "comment_id": 56068777, "body": "True, using usize is just wrong. Lucky that&#39;s not the most important part.. I&#39;ll update it anyway."}], "tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": false, "score": 2, "last_activity_date": 1449592142, "last_edit_date": 1449592142, "creation_date": 1449591610, "answer_id": 34160857, "question_id": 34159576, "link": "https://stackoverflow.com/questions/34159576/how-can-i-generate-a-bit-flag-for-each-type-at-compile-time/34160857#34160857", "title": "How can I generate a bit flag for each type at compile time?", "body": "<p>If you can list all the types together, you can do this with a macro and using an increasing sequence of enum discriminants like this:</p>\n\n<pre><code>trait Mask {\n    fn mask() -&gt; u32;\n}\n\nmacro_rules! make_masks {\n    ($($t:ident),+) =&gt; {\n        enum Masks {\n            $($t),+\n        }\n\n        $(\n            impl Mask for $t {\n                fn mask() -&gt; u32 {\n                    1 &lt;&lt; (Masks::$t as u32)\n                }\n            }\n        )+\n    };\n}\n\nstruct A;\nstruct B;\nstruct C;\n\nmake_masks!(A, B, C);\n\nfn main() {\n    // Output is: 1, 2, 4\n    println!(\"{:x}, {:x}, {:x}\", A::mask(), B::mask(), C::mask());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3ee7975a22dcd190f49f&amp;version=stable\" rel=\"nofollow\">(Playground link)</a></p>\n"}], "owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 599, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1449592142, "creation_date": 1449588113, "last_edit_date": 1495540760, "question_id": 34159576, "link": "https://stackoverflow.com/questions/34159576/how-can-i-generate-a-bit-flag-for-each-type-at-compile-time", "title": "How can I generate a bit flag for each type at compile time?", "body": "<p>I'm developing an application where I have a struct and a trait: <code>Foo</code> and <code>Bar</code>. </p>\n\n<p><code>Foo</code> owns a bunch of <code>Bar</code>s and different <code>Foo</code>s have different <code>Bar</code>s. I need to filter <code>Foo</code>s based on which <code>Bar</code> they have. What I'm trying to do is give each implementation of <code>Bar</code> a bit flag and then use all the flags to identify which <code>Bar</code>s a <code>Foo</code> owns.</p>\n\n<p>While I'm not sure this is the best approach to do this kind filtering, it works. The problem is I have to manage every single flag for every type, I can't repeat the flags or skip them so I wanted a way to do this automatically at compile time (or runtime, as long as it follows the same constraints).</p>\n\n<p>This is my latest attempt at solving this:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nstatic mut V : u32 = 0u32;\ntrait Mask&lt;T&gt; {\n    fn mask() -&gt; u32 {\n        unsafe {\n            V = V + 1;\n            println!(\"v {}\", V);\n            lazy_static!(static ref VALUE : u32 = unsafe{V};);\n            *VALUE\n        }\n    }\n}\n\n#[derive(Default)]\nstruct A;\n#[derive(Default)]\nstruct B;\n\nimpl Mask&lt;A&gt; for A {}\nimpl Mask&lt;B&gt; for B {}\n\nfn main() {\n    println!(\"{}\", A::mask());\n    println!(\"{}\", B::mask());\n    println!(\"{}\", A::mask());\n    println!(\"{}\", A::mask());\n    println!(\"{}\", B::mask());\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>v 1\n1\nv 2\n1\nv 3\n1\nv 4\n1\nv 5\n1\n</code></pre>\n\n<p>This is an idea I got from C++ templates which, if I recall correctly, would generate a different type for each <code>Mask&lt;T&gt;</code> implementation and the <code>mask()</code> call would be unique for the same type, but different between other types. It doesn't work in Rust but I don't understand enough about Rust's generic types to guess why. I also tried using macros, but I don't know if there's a way to save state between macro calls.</p>\n\n<p>Is there a way to achieve this? Is there something else I can try for this kind of filtering?</p>\n\n<p>This is not a duplicate of <a href=\"https://stackoverflow.com/questions/25372477/generating-unique-ids-for-types-at-compile-time\">Generating unique ID&#39;s for types at compile time</a>. Unless there is a way to create bit flags for each type using numbers like <code>17767285367811814831</code>, which is what <code>TypeId</code> gives me.</p>\n\n<p>What I want in the end is for each type to be something like this:</p>\n\n<pre><code>struct A;\nstruct B;\n//[...]\nstruct N;\n\nimpl Mask for A {\n    fn mask() -&gt; u32 {\n        1 &lt;&lt; 0\n    }\n}\nimpl Mask for B {\n    fn mask() -&gt; u32 {\n        1 &lt;&lt; 1\n    }\n}\n//[...]\nimpl Mask for N {\n    fn mask() -&gt; u32 {\n        1 &lt;&lt; ?N?\n    }\n}\n</code></pre>\n"}, {"tags": ["struct", "enums", "rust"], "answers": [{"tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 3, "last_activity_date": 1449532081, "creation_date": 1449532081, "answer_id": 34145532, "question_id": 34145148, "link": "https://stackoverflow.com/questions/34145148/access-fields-of-enum-struct-variant-wrapped-with-a-tuple-struct/34145532#34145532", "title": "Access fields of enum struct variant wrapped with a tuple struct", "body": "<p>This is because your vector and the reference <code>element</code> are immutable. Try this:</p>\n\n<pre><code>fn main() {\n    let mut x = vec![Foobar::new_foo(), Foobar::new_bar()];\n    let mut i = 0;\n\n    while i &lt; x.len() {\n        let element = &amp;mut x[i];\n        match *element {\n            Foobar::Foo(Foo { ref mut a }) =&gt; { *a = 3 },\n            Foobar::Bar(Bar { ref mut b }) =&gt; { *b = 4 }\n        }\n        i += 1\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 917, "user_id": 4808573, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/oFwhb.jpg?s=128&g=1", "display_name": "pengowen123", "link": "https://stackoverflow.com/users/4808573/pengowen123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 907, "favorite_count": 0, "accepted_answer_id": 34145532, "answer_count": 1, "score": 1, "last_activity_date": 1449540683, "creation_date": 1449530140, "last_edit_date": 1495541714, "question_id": 34145148, "link": "https://stackoverflow.com/questions/34145148/access-fields-of-enum-struct-variant-wrapped-with-a-tuple-struct", "title": "Access fields of enum struct variant wrapped with a tuple struct", "body": "<p>I have an enum with multiple single field tuple struct variants. Each tuple struct field is a different struct. I tried this code:</p>\n\n<pre><code>struct Foo { a: i32 }\nstruct Bar { b: i32 }\n\nenum Foobar {\n    Foo(Foo),\n    Bar(Bar)\n}\n\nimpl Foobar {\n    fn new_foo() -&gt; Foobar {\n        Foobar::Foo(Foo { a: 1 })\n    }\n    fn new_bar() -&gt; Foobar {\n        Foobar::Bar(Bar { b: 2 })\n    }\n}\n\nfn main() {\n    let x = vec![Foobar::new_foo(), Foobar::new_bar()];\n    let mut i = 0;\n\n    while i &lt; x.len() {\n        let element = &amp;x[i];\n        match element {\n            &amp;Foobar::Foo(_) =&gt; { x[i].a = 3 },\n            &amp;Foobar::Bar(_) =&gt; { x[i].b = 4 }\n        }\n        i += 1\n    }\n}\n</code></pre>\n\n<p>The compiler says:</p>\n\n<blockquote>\n  <p>error: attempted access of field <code>a</code> on type <code>Foobar</code>, but no field with that name was found</p>\n</blockquote>\n\n<p>I tried the solution found in <a href=\"https://stackoverflow.com/questions/33043280/update-field-in-struct-like-enum-variant\">this question</a> but it says:</p>\n\n<blockquote>\n  <p>error: cannot borrow immutable anonymous field as mutable</p>\n</blockquote>\n\n<p>How can I modify the fields of the content of vector <code>x</code>?</p>\n"}, {"tags": ["testing", "rust", "iron"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1449649716, "post_id": 34143540, "comment_id": 56094750, "body": "To be honest, if possible, I would avoid using any network traffic in a unit test. You should not be unit-testing Iron, after all, only your own code."}, {"owner": {"reputation": 2106, "user_id": 916384, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/38055799f271a72b7d50d91c322ce561?s=128&d=identicon&r=PG", "display_name": "franza", "link": "https://stackoverflow.com/users/916384/franza"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1449764322, "post_id": 34143540, "comment_id": 56157993, "body": "Totally agree with you, but I never said that I was writing unit tests. I was trying to implement some test cases which proves that my code interacts correctly with <code>iron</code>. More like functional testing, or whatever."}], "answers": [{"comments": [{"owner": {"reputation": 2106, "user_id": 916384, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/38055799f271a72b7d50d91c322ce561?s=128&d=identicon&r=PG", "display_name": "franza", "link": "https://stackoverflow.com/users/916384/franza"}, "edited": false, "score": 0, "creation_date": 1449525188, "post_id": 34143879, "comment_id": 56036113, "body": "Yes, that&#39;s what I had done right away. Is there an option to run tests one by one?"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 2106, "user_id": 916384, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/38055799f271a72b7d50d91c322ce561?s=128&d=identicon&r=PG", "display_name": "franza", "link": "https://stackoverflow.com/users/916384/franza"}, "edited": false, "score": 0, "creation_date": 1449525225, "post_id": 34143879, "comment_id": 56036138, "body": "The RUST_TEST_THREADS environment variable controls the number, so if it&#39;s set at 1..."}, {"owner": {"reputation": 2106, "user_id": 916384, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/38055799f271a72b7d50d91c322ce561?s=128&d=identicon&r=PG", "display_name": "franza", "link": "https://stackoverflow.com/users/916384/franza"}, "edited": false, "score": 0, "creation_date": 1449527292, "post_id": 34143879, "comment_id": 56037088, "body": "I&#39;ve just tried <code>RUST_TEST_THREADS=1</code> but still having same errors"}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": 3, "last_activity_date": 1449524924, "creation_date": 1449524924, "answer_id": 34143879, "question_id": 34143540, "link": "https://stackoverflow.com/questions/34143540/tests-panic-when-http-server-starts-after-old-one-is-closed/34143879#34143879", "title": "Tests panic when HTTP server starts after old one is closed", "body": "<p>Rust's test runner is parallel by default, so yes, I would expect that this would happen. I would pick a different port number for each test, at least to start, since it's so easy.</p>\n"}], "owner": {"reputation": 2106, "user_id": 916384, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/38055799f271a72b7d50d91c322ce561?s=128&d=identicon&r=PG", "display_name": "franza", "link": "https://stackoverflow.com/users/916384/franza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1449540549, "creation_date": 1449523603, "last_edit_date": 1449540549, "question_id": 34143540, "link": "https://stackoverflow.com/questions/34143540/tests-panic-when-http-server-starts-after-old-one-is-closed", "title": "Tests panic when HTTP server starts after old one is closed", "body": "<p>I have some tests written, each function starts <code>iron</code>'s HTTP server and closes it after test is done:</p>\n\n<pre><code>extern crate iron;\n\nuse iron::prelude::*;\n\nfn hello_world(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    Ok(Response::with((iron::status::Ok, \"Hello World\")))\n}\n\n#[test]\nfn test1() {\n    let mut server = Iron::new(hello_world).http(\"localhost:3000\").unwrap();\n    server.close().unwrap();\n}\n\n#[test]\nfn test2() {\n    let mut server = Iron::new(hello_world).http(\"localhost:3000\").unwrap();\n    server.close().unwrap();\n}\n</code></pre>\n\n<p>Doing <code>cargo test</code> I'm having:</p>\n\n<pre><code>Running target/debug/lib-f236975fe924352b\n\nrunning 2 tests\ntest test1 ... ok\ntest test2 ... FAILED\n\nfailures:\n\n---- test2 stdout ----\nthread 'test2' panicked at 'called `Result::unwrap()` on an `Err` value: Io(Error { repr: Os { code: 98, message: \"Address already in use\" } })', ../src/libcore/result.rs:736\n\n\n\nfailures:\ntest2\n\ntest result: FAILED. 1 passed; 1 failed; 0 ignored; 0 measured\n</code></pre>\n\n<p>It seems like the port is still in use by the start of the second test.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 7, "creation_date": 1449569116, "post_id": 34114048, "comment_id": 56052715, "body": "I think it is this issue: <a href=\"https://github.com/rust-lang/rust/issues/27113\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/27113</a>. You can&#39;t have HKL on the lhs of a where clause"}, {"owner": {"reputation": 3692, "user_id": 1467466, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/ec7b22599095a0d388d6e51818e7db9b?s=128&d=identicon&r=PG", "display_name": "user", "link": "https://stackoverflow.com/users/1467466/user"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1449569497, "post_id": 34114048, "comment_id": 56052977, "body": "@ker I&#39;m willing to believe that. I just found out now that replacing the rhs <code>&#39;static</code> with a <code>Send</code> makes the bounds compile, though. Weird."}, {"owner": {"reputation": 3692, "user_id": 1467466, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/ec7b22599095a0d388d6e51818e7db9b?s=128&d=identicon&r=PG", "display_name": "user", "link": "https://stackoverflow.com/users/1467466/user"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1449621461, "post_id": 34114048, "comment_id": 56084938, "body": "@ker Ah, it compiles, but then actually trying to <a href=\"http://is.gd/hRsrD3\" rel=\"nofollow noreferrer\"><code>impl</code> the trait for a type never works</a>."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1602671045, "post_id": 34114048, "comment_id": 113792263, "body": "For this particular case, adding a generic lifetime <code>AMut</code> and <code>foo</code>, instead of HKL, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=c5fb5fd30be8b67d4c00aa27a7fc7a11\" rel=\"nofollow noreferrer\">works</a>."}], "owner": {"reputation": 3692, "user_id": 1467466, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/ec7b22599095a0d388d6e51818e7db9b?s=128&d=identicon&r=PG", "display_name": "user", "link": "https://stackoverflow.com/users/1467466/user"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 927, "favorite_count": 2, "answer_count": 0, "score": 37, "last_activity_date": 1594458742, "creation_date": 1449376183, "last_edit_date": 1594458742, "question_id": 34114048, "link": "https://stackoverflow.com/questions/34114048/why-cant-this-higher-kinded-lifetime-associated-type-trait-bound-be-satisfied", "title": "Why can&#39;t this higher kinded lifetime associated type trait bound be satisfied?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>trait A&lt;'self_&gt;: 'self_ {\n    type I;\n}\ntrait AMut\nwhere\n    Self: for&lt;'self_&gt; A&lt;'self_&gt;,\n    for&lt;'self_&gt; &lt;Self as A&lt;'self_&gt;&gt;::I: 'static,\n{\n    fn mutate_self(&amp;mut self);\n}\n\nfn foo&lt;X&gt;(x: &amp;mut X)\nwhere\n    X: 'static + for&lt;'a&gt; A&lt;'a&gt; + AMut,\n    for&lt;'a&gt; &lt;X as A&lt;'a&gt;&gt;::I: 'static,\n{\n    x.mutate_self();\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=6511c528a51b9ed965faaabfcfe0c84d\" rel=\"noreferrer\">Playground</a></p>\n<p>This errors out with</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0280]: the requirement `for&lt;'self_&gt; &lt;Self as A&lt;'self_&gt;&gt;::I: 'static` is not satisfied\n  --&gt; src/lib.rs:4:1\n   |\n4  |   trait AMut\n   |   ^     ---- required by a bound in this\n   |  _|\n   | |\n5  | | where\n6  | |     Self: for&lt;'self_&gt; A&lt;'self_&gt;,\n7  | |     for&lt;'self_&gt; &lt;Self as A&lt;'self_&gt;&gt;::I: 'static,\n   | |                                         ------- required by this bound in `AMut`\n8  | | {\n9  | |     fn mutate_self(&amp;mut self);\n10 | | }\n   | |_^\n\nerror[E0280]: the requirement `for&lt;'self_&gt; &lt;X as A&lt;'self_&gt;&gt;::I: 'static` is not satisfied\n  --&gt; src/lib.rs:14:34\n   |\n4  | trait AMut\n   |       ---- required by a bound in this\n...\n7  |     for&lt;'self_&gt; &lt;Self as A&lt;'self_&gt;&gt;::I: 'static,\n   |                                         ------- required by this bound in `AMut`\n...\n14 |     X: 'static + for&lt;'a&gt; A&lt;'a&gt; + AMut,\n   |                                  ^^^^\n</code></pre>\n<p>I would've thought that the bound on line 15 would satisfy the bound on line 7. What am I missing?</p>\n"}, {"tags": ["matrix", "rust"], "comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 3, "creation_date": 1449393087, "post_id": 34111229, "comment_id": 55980784, "body": "I feel you&#39;re missing context. Why, for example, can&#39;t you use the strided view directly? Can you transpose the whole (sub?-)matrix first, and deduplicate the effort? What&#39;s not being vectorized? - perhaps we can fix that."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 2, "creation_date": 1449424575, "post_id": 34111229, "comment_id": 55990105, "body": "LLVM doesn&#39;t necessarily autovectorize a strided loop even if it recognizes one, see <a href=\"http://llvm.org/docs/Vectorizers.html#scatter-gather\" rel=\"nofollow noreferrer\">llvm.org/docs/Vectorizers.html#scatter-gather</a>"}], "answers": [{"tags": [], "owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "is_accepted": true, "score": 1, "last_activity_date": 1451479798, "creation_date": 1451479798, "answer_id": 34529894, "question_id": 34111229, "link": "https://stackoverflow.com/questions/34111229/efficiently-pulling-an-arbitrary-slice-from-a-vector/34529894#34529894", "title": "Efficiently pulling an arbitrary slice from a vector", "body": "<p>If you use more clever for loops you get the answer for your question. I mean, you don't have to pull out a column from your matrix if you reorder your for loops. That way, you keep your CPU cache warm.</p>\n\n<p>If your current algorithm looks like this:</p>\n\n<pre><code>// traditional multiplication\nfor i in 0..a_rows {\n    for j in 0..b_cols {\n        for k in 0..a_cols {\n            c[i][j] += a[i][k] * b[k][j];\n        } \n    }\n}\n</code></pre>\n\n<p>You produce a lot of cache misses since b[k][j] doesn't access your data sequentially.</p>\n\n<pre><code>for i in 0..a_rows {\n    for k in 0..a_cols {\n        // Note, that j iterates over a column of B\n        for j in 0..b_cols {\n            c[i][j] += a[i][k] * b[k][j];\n        } \n    }\n}\n</code></pre>\n\n<p>If you swap the two inner loops you iterate over B's column sequentially and utilize your cache. First, you will access to <code>b[k][0]</code>, then <code>b[k][1]</code> and so on. If an element is <code>4</code> byte, you can access the next <code>12</code> elements from the cache directly (as 64 byte is the most common L1 cache line size). The traditional approach doesn't use the cache so efficiently.</p>\n"}], "owner": {"reputation": 756, "user_id": 3466751, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ed487cce2c6293f15343927fd615119e?s=128&d=identicon&r=PG&f=1", "display_name": "user124784", "link": "https://stackoverflow.com/users/3466751/user124784"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 34529894, "answer_count": 1, "score": 2, "last_activity_date": 1451479798, "creation_date": 1449351656, "last_edit_date": 1495541045, "question_id": 34111229, "link": "https://stackoverflow.com/questions/34111229/efficiently-pulling-an-arbitrary-slice-from-a-vector", "title": "Efficiently pulling an arbitrary slice from a vector", "body": "<p>This is somewhat related to my post <a href=\"https://www.reddit.com/r/rust/comments/3vkj6f/implementing_divide_and_conquer_matrix/\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>I'm trying to implement matrix multiplication in Rust and I think in order to do this efficiently I need to be able to get the column data from the matrix. This is difficult as I'm storing my matrices in row-major format.</p>\n\n<p>I'm using an unrolled dot product implementation which is detailed in the above <a href=\"https://www.reddit.com/r/rust/comments/3vkj6f/implementing_divide_and_conquer_matrix/\" rel=\"nofollow noreferrer\">link</a> and also in my previous <a href=\"https://stackoverflow.com/questions/34036521/explicitly-stating-the-type-of-vector-length-for-references?noredirect=1#comment55845133_34036521\">question</a>. I want to be able to feed this method the row from one matrix and the column from another.</p>\n\n<p>How can I efficiently select the column data from my matrix? And more generally: how can I select arbitrary data patterns (like in R, matlab, numpy etc.)?</p>\n\n<p>I've tried:</p>\n\n<ol>\n<li>Using a strided view and collecting the iterator - this seems too slow.</li>\n<li>Using standard for loop iteration but this seems not to be vectorized by the Rust compiler.</li>\n</ol>\n"}, {"tags": ["parsing", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1449330967, "last_edit_date": 1592644375, "creation_date": 1449326421, "answer_id": 34106729, "question_id": 34102089, "link": "https://stackoverflow.com/questions/34102089/what-is-the-sequence-combinator-in-chomp/34106729#34106729", "title": "What is the sequence combinator in Chomp?", "body": "<p>The <a href=\"http://m4rw3r.github.io/chomp/chomp/index.html\" rel=\"nofollow noreferrer\">documentation</a> states (emphasis mine):</p>\n<blockquote>\n<p>Using parsers is almost entirely done using the <code>parse!</code> macro, which enables us to do three distinct things:</p>\n<ul>\n<li><strong>Sequence parsers over the remaining input</strong></li>\n<li>Store intermediate results into datatypes</li>\n<li>Return a datatype at the end, which may be the result of any arbitrary computation over the intermediate results.</li>\n</ul>\n</blockquote>\n<p>It then provides this example of parsing a sequence of two numbers followed by a constant string:</p>\n<pre><code>fn f(i: Input&lt;u8&gt;) -&gt; U8Result&lt;(u8, u8, u8)&gt; {\n    parse!{i;\n        let a = digit();\n        let b = digit();\n                string(b&quot;missiles&quot;);\n        ret (a, b, a + b)\n    }\n}\n\nfn digit(i: Input&lt;u8&gt;) -&gt; U8Result&lt;u8&gt; {\n    satisfy(i, |c| b'0' &lt;= c &amp;&amp; c &lt;= b'9').map(|c| c - b'0')\n}\n</code></pre>\n<p>There is also <a href=\"http://m4rw3r.github.io/chomp/chomp/struct.ParseResult.html#method.bind\" rel=\"nofollow noreferrer\"><code>ParseResult::bind</code></a> and <a href=\"http://m4rw3r.github.io/chomp/chomp/struct.ParseResult.html#method.then\" rel=\"nofollow noreferrer\"><code>ParseResult::then</code></a> which are documented to sequentially compose a result with a second action.</p>\n<hr />\n<p>Because I'm always interested in parsing, I went ahead and played with it a bit to see how it would look. I'm not happy with the deep indenting that would happen with the nested <code>or</code> calls, but there's probably something better that can be done. This is just one possible solution:</p>\n<pre><code>#[macro_use]\nextern crate chomp;\n\nuse chomp::*;\nuse chomp::ascii::is_alpha;\nuse chomp::buffer::{Source, Stream, ParseError};\n\nuse std::str;\nuse std::iter::FromIterator;\n\n#[derive(Debug)]\npub enum StringPart&lt;'a&gt; {\n    String(&amp;'a [u8]),\n    Newline,\n    Slash,\n}\n\nimpl&lt;'a&gt; StringPart&lt;'a&gt; {\n    fn from_bytes(s: &amp;[u8]) -&gt; StringPart {\n        match s {\n            br#&quot;\\\\&quot;# =&gt; StringPart::Slash,\n            br#&quot;\\n&quot;# =&gt; StringPart::Newline,\n            s =&gt; StringPart::String(s),\n        }\n    }\n}\n\nimpl&lt;'a&gt; FromIterator&lt;StringPart&lt;'a&gt;&gt; for String {\n    fn from_iter&lt;I&gt;(iterator: I) -&gt; Self\n        where I: IntoIterator&lt;Item = StringPart&lt;'a&gt;&gt;\n    {\n        let mut s = String::new();\n        for part in iterator {\n            match part {\n                StringPart::String(p) =&gt; s.push_str(str::from_utf8(p).unwrap()),\n                StringPart::Newline =&gt; s.push('\\n'),\n                StringPart::Slash =&gt; s.push('\\\\'),\n            }\n        }\n        s\n    }\n}\n\nfn json_string_part(i: Input&lt;u8&gt;) -&gt; U8Result&lt;StringPart&gt; {\n    or(i,\n       |i| parse!{i; take_while1(is_alpha)},\n       |i| or(i,\n              |i| parse!{i; string(br&quot;\\\\&quot;)},\n              |i| parse!{i; string(br&quot;\\n&quot;)}),\n    ).map(StringPart::from_bytes)\n}\n\nfn json_string(i: Input&lt;u8&gt;) -&gt; U8Result&lt;String&gt; {\n    many1(i, json_string_part)\n}\n\nfn main() {\n    let input = br#&quot;\\\\stuff\\n&quot;#;\n\n    let mut i = Source::new(input as &amp;[u8]);\n\n    println!(&quot;Input has {} bytes&quot;, input.len());\n\n    loop {\n        match i.parse(json_string) {\n            Ok(x)                       =&gt; {\n                println!(&quot;Result has {} bytes&quot;, x.len());\n                println!(&quot;{:?}&quot;, x);\n            },\n            Err(ParseError::Retry)      =&gt; {}, // Needed to refill buffer when necessary\n            Err(ParseError::EndOfInput) =&gt; break,\n            Err(e)                      =&gt; { panic!(&quot;{:?}&quot;, e); }\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449331417, "post_id": 34107518, "comment_id": 55965018, "body": "Can&#39;t get much more of an authoritative answer than from the author! A bit off-topic, but I&#39;m happy that you chose to use an iterator for <code>many</code> / <code>many1</code> \u2014 without doing actual performance numbers, it makes me think that it will be nicely performant. Keep up the great work!"}, {"owner": {"reputation": 76, "user_id": 3000308, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24ba59328e19242a9dc5cf11ca290f04?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Wernst&#229;l", "link": "https://stackoverflow.com/users/3000308/martin-wernst%c3%a5l"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449332158, "post_id": 34107518, "comment_id": 55965298, "body": "@Shepmaster Currently they do not pre-allocate (ie. implement <a href=\"http://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.size_hint\" rel=\"nofollow noreferrer\"><code>Iterator::size_hint</code></a>, I have <a href=\"https://github.com/m4rw3r/chomp/issues/24\" rel=\"nofollow noreferrer\">an issue</a> for it which will improve performance since it will hopefully not reallocate as much.The main reason for <code>FromIterator</code> in the combinators is that I did not want to limit users to populating <code>Vec</code>s with them."}], "tags": [], "owner": {"reputation": 76, "user_id": 3000308, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24ba59328e19242a9dc5cf11ca290f04?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Wernst&#229;l", "link": "https://stackoverflow.com/users/3000308/martin-wernst%c3%a5l"}, "is_accepted": true, "score": 4, "last_activity_date": 1449331160, "creation_date": 1449331160, "answer_id": 34107518, "question_id": 34102089, "link": "https://stackoverflow.com/questions/34102089/what-is-the-sequence-combinator-in-chomp/34107518#34107518", "title": "What is the sequence combinator in Chomp?", "body": "<p>Chomp is based on Attoparsec and Parsec, so for parsing escaped strings I would use the <a href=\"http://m4rw3r.github.io/chomp/chomp/parsers/fn.scan.html\" rel=\"nofollow\"><code>scan</code></a> parser to obtain the slice between the <code>\"</code> characters while keeping any escaped <code>\"</code> characters.</p>\n\n<p>The sequence combinator is just the <a href=\"http://m4rw3r.github.io/chomp/chomp/struct.ParseResult.html#method.bind\" rel=\"nofollow\"><code>ParseResult::bind</code></a> method, used to chain the match of the <code>\"</code> character and the escaped string itself so that it will be able to parse <code>\"foo\\\\\"bar\"</code> and not just <code>foo\\\\\"bar</code>. You get this for free when you use the <a href=\"http://m4rw3r.github.io/chomp/chomp/macro.parse!.html\" rel=\"nofollow\"><code>parse!</code></a> macro, each <code>;</code> is implicitly converted into a <code>bind</code> call to chain the parsers together.</p>\n\n<p>The linked parsers use a <a href=\"http://m4rw3r.github.io/chomp/chomp/combinators/fn.many.html\" rel=\"nofollow\"><code>many</code></a> and <a href=\"http://m4rw3r.github.io/chomp/chomp/combinators/fn.or.html\" rel=\"nofollow\"><code>or</code></a> combinator and allocate a vector for the resulting characters. Paka does not seem to do any transformation on the resulting array, and PHP is using a regex with a callback to unescape the string.</p>\n\n<p>This is code translated from <a href=\"https://github.com/bos/attoparsec/blob/4f137347be02106765f6897059b88219c79bb86c/benchmarks/Aeson.hs#L210\" rel=\"nofollow\">Attoparsec's Aeson benchmark</a> for parsing a JSON-string while not unescaping any escaped characters.</p>\n\n<pre><code>#[macro_use]\nextern crate chomp;\n\nuse chomp::*;\nuse chomp::buffer::IntoStream;\nuse chomp::buffer::Stream;\n\npub fn json_string(i: Input&lt;u8&gt;) -&gt; U8Result&lt;&amp;[u8]&gt; {\n    parse!{i;\n                          token(b'\"');\n        let escaped_str = scan(false, |s, c| if s { Some(false) }\n                                             else if c == b'\"' { None }\n                                             else { Some(c == b'\\\\') });\n                          token(b'\"');\n\n        ret escaped_str\n    }\n}\n\n#[test]\nfn test_it() {\n    let r = \"\\\"foo\\\\\\\"bar\\\\tbaz\\\"\".as_bytes().into_stream().parse(json_string);\n\n    assert_eq!(r, Ok(&amp;b\"foo\\\\\\\"bar\\\\tbaz\"[..]));\n}\n</code></pre>\n\n<p>The parser above is not equivalent, it yields a slice of <code>u8</code> borrowed from the source buffer/slice. If you want an owned <code>Vec</code> of the data you should preferably use <a href=\"https://doc.rust-lang.org/beta/std/primitive.slice.html#method.to_vec\" rel=\"nofollow\"><code>[T]::to_vec</code></a> or <a href=\"http://doc.rust-lang.org/std/string/struct.String.html#method.from_utf8\" rel=\"nofollow\"><code>String::from_utf8</code></a> instead of building a parser using <code>many</code> and <code>or</code> since it will not be as fast as <code>scan</code> and the result is the same.</p>\n\n<p>If you want to parse UTF-8 and escape-sequences you can filter the resulting slice and then calling <code>String::from_utf8</code> on the <code>Vec</code> (Rust strings are UTF-8, to use a string containing invalid UTF-8 can result in undefined behaviour). If performance is an issue you should build that into the parser most likely.</p>\n"}], "owner": {"reputation": 1906, "user_id": 38820, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a572775f003705896160fa44c4d26291?s=128&d=identicon&r=PG", "display_name": "Wes", "link": "https://stackoverflow.com/users/38820/wes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 217, "favorite_count": 0, "accepted_answer_id": 34107518, "answer_count": 2, "score": 1, "last_activity_date": 1449331160, "creation_date": 1449297529, "last_edit_date": 1449326247, "question_id": 34102089, "link": "https://stackoverflow.com/questions/34102089/what-is-the-sequence-combinator-in-chomp", "title": "What is the sequence combinator in Chomp?", "body": "<p>I'm attempting to parse a subset of JSON that only contains a single, non-nested object with string only values that may contain escape sequences. E.g.</p>\n\n<pre><code>{\n  \"A KEY\": \"SOME VALUE\",\n  \"Another key\": \"Escape sequences \\n \\r \\\\ \\/ \\f \\t \\u263A\"\n}\n</code></pre>\n\n<p>Using the <a href=\"https://crates.io/crates/chomp\" rel=\"nofollow\">Chomp</a> parser combinator in Rust. I have it parsing this structure ignoring escape sequences but am having trouble working out how to handle the escape sequences. Looking at other quoted string parsers that use combinators such as:</p>\n\n<ul>\n<li><a href=\"http://hacks.catdancer.ws/parser-combinator-approach-to-json.html\" rel=\"nofollow\">Arc JSON parser</a></li>\n<li><a href=\"https://github.com/Vektah/parser-combinator/blob/master/src/main/vektah/parser_combinator/parser/literal/StringLiteral.php#L22\" rel=\"nofollow\">PHP parser-combinator</a></li>\n<li><a href=\"https://github.com/weidagang/paka-js/blob/master/paka.js#L239\" rel=\"nofollow\">Paka</a></li>\n</ul>\n\n<p>They each use a sequence combinator, what is the equivalent in <code>Chomp</code>?</p>\n"}, {"tags": ["opengl", "macros", "rust"], "comments": [{"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1449279625, "post_id": 34099739, "comment_id": 55952483, "body": "So you&#39;re trying to generate code in an init function given shader source from a completely different area of code? I&#39;m not sure that&#39;s possible."}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1449279806, "post_id": 34099739, "comment_id": 55952520, "body": "Like, you should be able to easily write a macro that will inject a string into a shader source template, but sourcing these strings from a mystery <code>shade!</code> call somewhere completely different in the code isn&#39;t going to happen (at least not without some serious dark magics I&#39;m not familiar with). You MAY be able to do it with a compiler extension."}, {"owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "reply_to_user": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1449280326, "post_id": 34099739, "comment_id": 55952626, "body": "@Jsor At the moment I am thinking if it is possible to compile the programs lazy on the first call. So on first call the source gets generated, the program compiled and executed. An the second call of the rendering loop, the program should be reused."}, {"owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "reply_to_user": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1449280667, "post_id": 34099739, "comment_id": 55952688, "body": "@Jsor The other option is, that the macro <code>shade!</code> appends to a list of programs that exists only at compile time, and the <code>mystery_macro!</code> reads this list. But that would require that I can ensure that <code>mystery_macro!</code> is invoked after all invocations of <code>shade!</code>."}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1449281383, "post_id": 34099739, "comment_id": 55952843, "body": "I think you&#39;re only going to be able to do the lazy compilation, but it&#39;d involve a runtime check to see if that source was compiled (a <code>HashMap&lt;&amp;&#39;static str, ()&gt;</code> or something). This is pretty straightforward (if messy) with some sort of <code>ProgramManager</code> holding a <code>RefCell&lt;... prog source map ...&gt;</code> you pass around everywhere or else a <code>static</code> hidden somewhere. I&#39;ll see if I can come up with something"}, {"owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "reply_to_user": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1449283141, "post_id": 34099739, "comment_id": 55953191, "body": "@Jsor I am ok with a runtime check, but it would we great, if it would not require to calculate the hash of the string each call. I think I prefer the static, and I guess, that a static is the right thing to do here."}, {"owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "reply_to_user": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1449283457, "post_id": 34099739, "comment_id": 55953264, "body": "@Jsor I just found <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs\" rel=\"nofollow noreferrer\">lazy-static</a>, that might be pretty nifty here"}], "answers": [{"comments": [{"owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 0, "creation_date": 1449425298, "post_id": 34120069, "comment_id": 55990347, "body": "Unfortunately it is not possible to compile shaders at compile time. The result of a shader compilation is generally just an int, that represents your program on the GPU. And then there are pre compiled shaders in later versions of OpenGL but their result is expected to be incompatible between different vendors, even between different GPUs from the same vendor. But is it possible to write out hte shader source from the macro at compile time into a file, then the init function would just need to parse that one file?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 0, "creation_date": 1449503123, "post_id": 34120069, "comment_id": 56022705, "body": "<i>is it possible to write out the shader source from the macro at compile time</i> \u2014 again, if you can write code that does this <i>without</i> a macro, then you may be able to write a macro to make it cleaner. Macros don&#39;t really give you more power, they just reduce boilerplate. <i>the result of a shader compilation is generally just an int</i> \u2014 since this value would be created in your <code>main</code> method, how would you pass it from <code>main</code> to the location your shader is actually used?"}, {"owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 0, "creation_date": 1449619947, "post_id": 34120069, "comment_id": 56084464, "body": "You should know I am not a rust programmer, I am a c++ programmer and I am a bit frustrated about the limitations of c++ and it&#39;s boilerplate. I am about to evaluate if rust gives me enough power to concider if it is worth swithing, and if this is not doable in rust like I want it to be done, I will look out for better programming languages. And to answer your question, yes it is possible to do without macros, I gave a (simplified) example how it would be done without macros. The problem is just the big part of the boilerplate that I have to write is outside of the macro call."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 0, "creation_date": 1449621552, "post_id": 34120069, "comment_id": 56084970, "body": "@Arne I hope that Rust can be your language of choice, but ultimately you must use the right language for you and the problems you are solving! ^_^ <i>I gave a[n] example how it would be done without macros</i> \u2014 I must be misunderstanding; I do not see where your example writes out to a file at compile time. I feel like there is a fundamental disconnect somewhere... all macros can do is expand into code at the site that they are called. You are asking about writing code at location A that would, <i>at compile time</i>, make changes to location B. Can you point to any language that allows this?"}, {"owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 0, "creation_date": 1449625921, "post_id": 34120069, "comment_id": 56086236, "body": "I am not sure yet. There is Julia, which has macros that are at least powerful enough, that you can generate symbolic derivatives of functions, and there are is jai, a very early stage programming language from the guy behind &quot;Baid&quot; and &quot;The Witness&quot;. Jai has arbitrary code execution at compile time, you might call this macro if you want to. This arbitrary code execution is so advanced, that the project build is written in it. So no mare awkward build tools, write everything in the same language. I hope that this would also allow some code restructuring like these in my example."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 0, "creation_date": 1449648258, "post_id": 34120069, "comment_id": 56093935, "body": "@Arne - <i>arbitrary code execution at compile time</i> - you can do that and you don&#39;t even need the special language support (e.g. it&#39;s all done in a library): <a href=\"https://github.com/huonw/external_mixin\" rel=\"nofollow noreferrer\">github.com/huonw/external_mixin</a>. Thing is, compile-time code generation is done with compiler plugins, they aren&#39;t Stable yet (and won&#39;t be for some time), so to use them you need either a Nightly Rust or jumping through extra hoops (<a href=\"https://github.com/serde-rs/serde#using-serde-with-stable-rust-syntex-and-serde_codegen\" rel=\"nofollow noreferrer\">github.com/serde-rs/&hellip;</a>)."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 0, "creation_date": 1449648776, "post_id": 34120069, "comment_id": 56094218, "body": "@Arne Other examples of the Rust compiler plugins from the top of my head: <a href=\"https://github.com/mystor/rust-cpp\" rel=\"nofollow noreferrer\">github.com/mystor/rust-cpp</a>; <code>regex!</code> macro in <a href=\"https://github.com/rust-lang-nursery/regex#usage-regex-compiler-plugin\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/regex#usage-regex-compiler-plug&zwnj;&#8203;in</a>, <a href=\"https://github.com/lfairy/maud\" rel=\"nofollow noreferrer\">github.com/lfairy/maud</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1449668664, "post_id": 34120069, "comment_id": 56106752, "body": "@ArtemGr A compiler plugin isn&#39;t powerful enough here, sadly. What is wanted would be the ability to tag a function with something like <code>#[shader]</code> and then collect all those functions and call / compile them ahead of time. This is similar to the <code>#[test]</code> annotation, which is <a href=\"https://github.com/rust-lang/rust/blob/1.4.0/src/librustc_driver/driver.rs#L573-L577\" rel=\"nofollow noreferrer\">implemented as a separate pass</a> in the commandline <code>rustc</code> driver. A compiler plugin can still only modify code where the annotation is placed, AFAIK."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1449674891, "post_id": 34120069, "comment_id": 56111391, "body": "@Shepmaster Compiler plugin could manually parse the source files and collect the <code>#[shader]</code> annotations (or whatever), couldn&#39;t it? I think it&#39;s good enough for all practical purposes. An <a href=\"https://github.com/huonw/external_mixin\" rel=\"nofollow noreferrer\">github.com/huonw/external_mixin</a> might be used to sweep the sources for the shaders and generate a function to initialize them."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1449687823, "post_id": 34120069, "comment_id": 56120173, "body": "<a href=\"https://github.com/dwrensha/capnpc-rust\" rel=\"nofollow noreferrer\">github.com/dwrensha/capnpc-rust</a> uses the <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow noreferrer\">doc.crates.io/build-script.html</a> to generate its Rust code. This works NP on Stable and doesn&#39;t have the complexity of the Compiler Plugins. (Again, it should be trivial, given some conventions maintained in the source code, to scan the source files from <code>build.rs</code> and generate a function that will initialize all the shaders)."}, {"owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "edited": false, "score": 1, "creation_date": 1450128779, "post_id": 34120069, "comment_id": 56296048, "body": "@Shepmaster as I said, I was just testing out, how good rust worked for my use case, and looks like that the programming language nim is much more what I am looking for. I am honestly a bit disappointed here, but rust doesn&#39;t try to have great macros, at least not yet. Maybe in the future."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1449420844, "creation_date": 1449420844, "answer_id": 34120069, "question_id": 34099739, "link": "https://stackoverflow.com/questions/34099739/use-a-rust-macro-to-generate-and-compile-a-shader/34120069#34120069", "title": "Use a Rust macro to generate and compile a shader", "body": "<p>From <a href=\"http://doc.rust-lang.org/stable/book\" rel=\"nofollow\"><em>The Rust Programming Language</em></a> section on <a href=\"http://doc.rust-lang.org/stable/book/macros.html\" rel=\"nofollow\">macros</a> (emphasis mine):</p>\n\n<blockquote>\n  <p>Macros allow us to abstract at a syntactic level. A macro invocation is shorthand for an \"expanded\" syntactic form. This expansion happens early in compilation, before any static checking. As a result, macros can capture <strong>many patterns of code reuse</strong> that Rust\u2019s core abstractions cannot.</p>\n</blockquote>\n\n<p>Said another way, macros are only useful when you <em>already</em> have some code that has appreciable boilerplate. They cannot do something beyond what the code itself does.</p>\n\n<p>Additionally, Rust macros work at a level above C macros. Rust macros are not presented with the raw text, but instead have some pieces of the AST of the program. </p>\n\n<p>Let's start with this simplified version:</p>\n\n<pre><code>struct Shader(usize);\nimpl Shader {\n    fn compile(source: &amp;str) -&gt; Shader {\n        println!(\"Compiling a shader\");\n        Shader(source.len())\n    }\n\n    fn run(&amp;self) {\n        println!(\"Running a shader {}\", self.0)\n    }\n}\n\nfn main() {\n    for _ in 0..10 {\n        inner_loop();\n    }\n}\n\nfn inner_loop() {\n    let shader_1_src = r#\"add 1 + 1\"#;\n    let shader_1 = Shader::compile(shader_1_src);\n\n    let shader_2_src = r#\"add 42 + 53\"#;\n    let shader_2 = Shader::compile(shader_2_src);\n\n    shader_1.run();\n    shader_2.run();\n}\n</code></pre>\n\n<p>The biggest problem here is the repeated compilation, so we can lazily compile it once using the <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs\" rel=\"nofollow\">lazy_static</a> crate:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\n// Previous code...\n\nfn inner_loop() {\n    const SHADER_1_SRC: &amp;'static str = r#\"add 1 + 1\"#;\n    lazy_static! {\n        static ref SHADER_1: Shader = Shader::compile(SHADER_1_SRC);\n    }\n\n    const SHADER_2_SRC: &amp;'static str = r#\"add 42 + 53\"#;\n    lazy_static! {\n        static ref SHADER_2: Shader = Shader::compile(SHADER_2_SRC);\n    }\n\n    SHADER_1.run();\n    SHADER_2.run();\n}\n</code></pre>\n\n<p>You can then go one step further and make another macro around that:</p>\n\n<pre><code>// Previous code...\n\nmacro_rules! shader {\n    ($src_name: ident, $name: ident, $l: expr, $r: expr) =&gt; {\n        const $src_name: &amp;'static str = concat!(\"add \", $l, \" + \", $r);\n        lazy_static! {\n            static ref $name: Shader = Shader::compile($src_name);\n        }\n    }\n}\n\nfn inner_loop() {\n    shader!(S1, SHADER_1, \"1\", \"2\");\n    shader!(S2, SHADER_2, \"42\", \"53\");\n\n    SHADER_1.run();\n    SHADER_2.run();\n}\n</code></pre>\n\n<p>Note that we have to provide a name for the inner source constant because there's currently no way of generating arbitrary identifiers in macros.</p>\n\n<p>I'm no game programmer, but this type of code would make me wary. At potentially any point, you might execute some shader compilation, slowing down your program. I agree that pre-compiling all your shaders at program startup makes the most sense (or at Rust compile time, if possible!), but it simply doesn't make sense with your desired structure. If you can write plain Rust code that does what you want, then you can make a macro that makes it prettier. I just don't believe it's possible to write Rust code that does what you want.</p>\n\n<p>There is a possibility that a <a href=\"http://doc.rust-lang.org/stable/book/compiler-plugins.html#syntax-extensions\" rel=\"nofollow\">syntax extension</a> may be able to do what you want, but I don't have enough experience with them yet to soundly rule it in or out.</p>\n"}], "owner": {"reputation": 7166, "user_id": 479905, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/4f1b1eb37c5c280e2db98abbaace9f86?s=128&d=identicon&r=PG", "display_name": "Arne", "link": "https://stackoverflow.com/users/479905/arne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 875, "favorite_count": 0, "accepted_answer_id": 34120069, "answer_count": 1, "score": 1, "last_activity_date": 1449619597, "creation_date": 1449275409, "last_edit_date": 1449619597, "question_id": 34099739, "link": "https://stackoverflow.com/questions/34099739/use-a-rust-macro-to-generate-and-compile-a-shader", "title": "Use a Rust macro to generate and compile a shader", "body": "<p>My origin of this approach comes from OpenGL shader programming, but the problem is more abstract. I will write some pseudo code to clarify what I mean.</p>\n\n<p>In OpenGL, rendering is done in so called \"shaders\". A shader is a calculation kernel that is applied to each element of a data set, but with the advantage that the calculation is executed on the GPU and therefore takes the advantage of concurrent nature of the GPU to calculate as much at the same time as possible.</p>\n\n<p>The problem is that shaders are presented as text at compile time, and the shader needs to be compiled at runtime by the driver of the GPU. This  means that at the start of each program an <code>init</code> function needs to compile each shader source file into a program before the shader can be called. Here is an example, keep in mind it is simplified pseudocode:</p>\n\n<pre><code>let shader_src_A = r#\"\nattribute float a;\nattribute float b;\n\nout float b;\n\nvoid main() {\n    b = a * b;\n}\n\"#;\n\nlet shader_src_B = r#\"\nattribute float a;\nattribute float b;\n\nout float b;\n\nvoid main() {\n    b = a + b;\n}\n\"#;\n\nlet mut program_A : ShaderProgram;\nlet mut program_B : ShaderProgram;\n\nfn init() {\n    initGL();\n    program_A = compile_and_link(shader_src_A);\n    program_B = compile_and_link(shader_src_B);\n}\n\nfn render() {\n    let data1 = vec![1,2,3,4];\n    let data2 = vec![5,6,7,8];\n\n    // move data to the gpu\n    let gpu_data_1 = move_to_gpu(data1);\n    let gpu_data_2 = move_to_gpu(data2);\n\n    let gpu_data_3 : GpuData&lt;float&gt;;\n    let gpu_data_4 : GpuData&lt;float&gt;;\n\n    program_A(\n        (gpu_data_1, gpu_data_2) // input\n        (gpu_data_3,) // output\n    );\n    program_B(\n        (gpu_data_1, gpu_data_2) // input\n        (gpu_data_4,) // output\n    );\n\n    let data_3 = move_to_cpu(gpu_data_3);\n    let data_4 = move_to_cpu(gpu_data_4);\n\n    println!(\"data_3 {:?} data_4 {:?}\", data_3, data_4);\n    // data_3 [5, 12, 21, 32] data_4 [6, 8, 10, 12]\n}\n</code></pre>\n\n<p>The goal for me to to be able to write something like this:</p>\n\n<pre><code>fn init() {\n    initGL();\n    mystery_macro!();\n}\n\nfn render() {\n    let data1 = vec![1,2,3,4];\n    let data2 = vec![5,6,7,8];\n\n    // move data to the gpu\n    let gpu_data_1 = move_to_gpu(data1);\n    let gpu_data_2 = move_to_gpu(data2);\n\n    let gpu_data_3 : GpuData&lt;float&gt;;\n    let gpu_data_4 : GpuData&lt;float&gt;;\n\n    shade!( \n        (gpu_data_1, gpu_data_2), // input tuple\n        (gpu_data_3,),            // output tuple\n        \"gpu_data_3 = gpu_data_1 * gpu_data_2;\" // this is the shader source, the rest should be generated by the macro.\n    );\n\n    shade!( \n        (gpu_data_1, gpu_data_2), // input tuple\n        (gpu_data_3,),            // output tuple\n        \"gpu_data_4 = gpu_data_1 + gpu_data_2;\" // this is the shader source, the rest should be generated by the macro.\n    );\n\n    let data_3 = move_to_cpu(gpu_data_3);\n    let data_4 = move_to_cpu(gpu_data_4);\n\n    println!(\"data_3 {:?} data_4 {:?}\", data_3, data_4);\n}\n</code></pre>\n\n<p>The key difference is that I do not have a common place where all my shaders are written. I write my shaders where I call them, and I do not write the part of the shader that can be inferred by the other arguments. Generating the part of the shader that is missing should be straight forward, the problem is the compilation of the shader. A renderer that calls the compilation of each shader on each call is far too slow to be useful at all. The idea is that the macro should generate this common place with all the shader sources and programs, so that the <code>init</code> function can compile and link all programs at program start.</p>\n\n<p>Despite the title, I am also ok with a solution that solves my problem differently, but I would prefer a solution where all programs can be compiled in the <code>init</code> function.</p>\n\n<p>EDIT:</p>\n\n<p>I could also imagine, that shade is not a macro, but a placeholder no-op function, the macro will then operate on the shade function, and by traversing the AST, it can find all calls to shade, and create everything that needs to be done in the init function.</p>\n"}, {"tags": ["rust", "lapack"], "answers": [{"tags": [], "owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "is_accepted": false, "score": 4, "last_activity_date": 1449259666, "last_edit_date": 1449259666, "creation_date": 1449259196, "answer_id": 34096468, "question_id": 34096388, "link": "https://stackoverflow.com/questions/34096388/what-do-letters-enclosed-by-two-single-quotes-next-to-a-function-argument-mean/34096468#34096468", "title": "What do letters enclosed by two single quotes next to a function argument mean?", "body": "<p>It creates a <code>u8</code> value with the ASCII value of the char between quote.</p>\n\n<p>For ASCII literals, it's the same as writing <code>'V' as u8</code>.</p>\n\n<p>Also, the <code>b</code> prefix on a double quoted string will create a byte array containing the UTF8 content of the string.</p>\n\n<pre><code>let s: &amp;[u8; 11] = b\"Hello world\";\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1449259284, "creation_date": 1449259284, "answer_id": 34096492, "question_id": 34096388, "link": "https://stackoverflow.com/questions/34096388/what-do-letters-enclosed-by-two-single-quotes-next-to-a-function-argument-mean/34096492#34096492", "title": "What do letters enclosed by two single quotes next to a function argument mean?", "body": "<p><code>b'A'</code> means to create a <em>byte literal</em>. Specifically, it will be a <code>u8</code> containing the ASCII value of the character:</p>\n\n<pre><code>fn main() {\n    let what = b'a';\n    println!(\"{}\", what);\n    // let () = what;\n}\n</code></pre>\n\n<p>The commented line shows you how to find the type.</p>\n\n<p><code>b\"hello\"</code> is similar, but produces a reference to an array of <code>u8</code>, a <em>byte string</em>:</p>\n\n<pre><code>fn main() {\n    let what = b\"hello\";\n    println!(\"{:?}\", what);\n    // let () = what;\n}\n</code></pre>\n\n<p>Things like this are documented in the <a href=\"http://doc.rust-lang.org/nightly/book/syntax-index.html\" rel=\"nofollow\"><em>Syntax Index</em></a> which is currently only available in the nightly version of the docs.</p>\n"}], "owner": {"reputation": 471, "user_id": 1398440, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/d9b4b4c9eff56e3701e2fe74ec87d790?s=128&d=identicon&r=PG", "display_name": "xgb84j", "link": "https://stackoverflow.com/users/1398440/xgb84j"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 665, "favorite_count": 0, "accepted_answer_id": 34096492, "answer_count": 2, "score": 1, "last_activity_date": 1449259666, "creation_date": 1449258877, "question_id": 34096388, "link": "https://stackoverflow.com/questions/34096388/what-do-letters-enclosed-by-two-single-quotes-next-to-a-function-argument-mean", "title": "What do letters enclosed by two single quotes next to a function argument mean?", "body": "<p>I tried using LAPACK bindings for Rust when I came over some syntax that I could not find anything about.</p>\n\n<p>The example code from <a href=\"https://github.com/stainless-steel/lapack\" rel=\"nofollow\">https://github.com/stainless-steel/lapack</a>:</p>\n\n<pre><code>let n = 3;\n\nlet mut a = vec![3.0, 1.0, 1.0, 1.0, 3.0, 1.0, 1.0, 1.0, 3.0];\nlet mut w = vec![0.0; n];\nlet mut work = vec![0.0; 4 * n];\nlet lwork = 4 * n as isize;\nlet mut info = 0;\n\nlapack::dsyev(b'V', b'U', n, &amp;mut a, n, &amp;mut w, &amp;mut work, lwork, &amp;mut info);\n\nfor (one, another) in w.iter().zip(&amp;[2.0, 2.0, 5.0]) {\n    assert!((one - another).abs() &lt; 1e-14);\n}\n</code></pre>\n\n<p>What does <em>b'V'</em> and <em>b'U'</em> mean?</p>\n"}, {"tags": ["polymorphism", "rust", "type-inference", "dynamic-cast"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1449259410, "post_id": 34096199, "comment_id": 55945265, "body": "This is referred to as <i>downcasting</i>. You should mark this as a duplicate of <a href=\"http://stackoverflow.com/q/27892375/155423\">stackoverflow.com/q/27892375/155423</a> or <a href=\"http://stackoverflow.com/q/25246443/155423\">stackoverflow.com/q/25246443/155423</a> or <a href=\"http://stackoverflow.com/q/33687447/155423\">stackoverflow.com/q/33687447/155423</a> or (insert more search results here)."}, {"owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449313132, "post_id": 34096199, "comment_id": 55959364, "body": "Thanks. But up, down... you&#39;re clearly talking about tree roots not branches ;-)"}], "owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1203, "favorite_count": 0, "closed_date": 1449501678, "answer_count": 0, "score": 0, "last_activity_date": 1449258100, "creation_date": 1449258100, "question_id": 34096199, "link": "https://stackoverflow.com/questions/34096199/dynamic-cast-run-time-type-inference-in-rust", "closed_reason": "Duplicate", "title": "Dynamic cast (run-time type inference) in Rust", "body": "<p>Is this type of polymorphism possible in Rust, or is it planned?</p>\n\n<p>I.e.</p>\n\n<pre><code>trait R { ... }\nstruct S { ... }\nimpl R for S { ... }\n\nlet r: Box&lt;R&gt; = Box::new(S { ... });\nlet s: Box&lt;S&gt; = dynamic_cast&lt;Box&lt;S&gt;&gt;(r).expect(\"r is a boxed S\");\n</code></pre>\n\n<p>I am aware that <code>std::mem::transmute</code> provides an unsafe way of doing this, but don't see any explicit support for dynamic_cast (which, I guess, is fine).</p>\n"}, {"tags": ["vector", "functional-programming", "rust"], "answers": [{"tags": [], "owner": {"reputation": 874, "user_id": 3842022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71d9729ff4035657e7d6366611c28614?s=128&d=identicon&r=PG&f=1", "display_name": "C. Quilley", "link": "https://stackoverflow.com/users/3842022/c-quilley"}, "is_accepted": true, "score": 13, "last_activity_date": 1569940858, "last_edit_date": 1569940858, "creation_date": 1449240103, "answer_id": 34090825, "question_id": 34090639, "link": "https://stackoverflow.com/questions/34090639/how-do-i-convert-a-vector-of-strings-to-a-vector-of-integers-in-a-functional-way/34090825#34090825", "title": "How do I convert a vector of strings to a vector of integers in a functional way?", "body": "<p>There's an iterator adapter <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\" rel=\"noreferrer\"><code>map</code></a>! You'd use it like this:</p>\n\n<pre><code>let bar: Vec&lt;u16&gt; = foo.split(\",\").map(|x| x.parse::&lt;u16&gt;().unwrap()).collect();\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.parse\" rel=\"noreferrer\"><code>parse</code></a> is a library function that relies on the trait <a href=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\" rel=\"noreferrer\"><code>FromStr</code></a>, and it can return an error, so we need to <code>unwrap()</code> the error type. (This is a good idea for a short example, but in real code, you will want to handle the error properly - if you have a value that's not a <code>u16</code> there, your program will just crash).</p>\n\n<p><code>map</code> takes a closure that takes it's parameter by value and then returns the iterator obtained by <em>lazily</em> applying that function. You're <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"noreferrer\"><code>collect</code></a>ing all of the values here, but if you only <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.take\" rel=\"noreferrer\"><code>take(5)</code></a> of them, you would only parse 5 of the strings.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 9, "last_activity_date": 1569941019, "last_edit_date": 1569941019, "creation_date": 1449240111, "answer_id": 34090830, "question_id": 34090639, "link": "https://stackoverflow.com/questions/34090639/how-do-i-convert-a-vector-of-strings-to-a-vector-of-integers-in-a-functional-way/34090830#34090830", "title": "How do I convert a vector of strings to a vector of integers in a functional way?", "body": "<p>You haven't fully specified your problem. Specifically, what should happen when one of the strings <em>cannot</em> be parsed into a number? When you parse a number from a string using <a href=\"http://doc.rust-lang.org/std/primitive.str.html#method.parse\" rel=\"nofollow noreferrer\"><code>parse</code></a>, it can fail. That is why the function returns a <code>Result</code>:</p>\n\n<pre><code>fn parse&lt;F&gt;(&amp;self) -&gt; Result&lt;F, F::Err&gt;\nwhere\n    F: FromStr,\n</code></pre>\n\n<p>Here's a solution that takes the vector, gets an iterator with <a href=\"http://doc.rust-lang.org/std/vec/struct.Vec.html#method.iter\" rel=\"nofollow noreferrer\"><code>iter</code></a>, changes each item using <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\" rel=\"nofollow noreferrer\"><code>map</code></a> and ultimately returns a <code>Result</code> using <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\"><code>collect</code></a>. If the parsing was a success, you get an <code>Ok</code>. If <em>any</em> failed, you get an <code>Err</code>: </p>\n\n<pre><code>fn main() {\n    let input = \"1,2,3\";\n    let strings: Vec&lt;_&gt; = input.split(\",\").collect();\n\n    let numbers: Result&lt;Vec&lt;u16&gt;, _&gt; = strings.iter().map(|x| x.parse()).collect();\n\n    println!(\"{:?}\", numbers);\n}\n</code></pre>\n\n<p>Or you could remove failed conversions by filtering out <code>Err</code> values with <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>flat_map</code></a>:</p>\n\n<pre><code>fn main() {\n    let input = \"1,2,3\";\n    let strings: Vec&lt;_&gt; = input.split(\",\").collect();\n\n    let numbers: Vec&lt;u16&gt; = strings.iter().flat_map(|x| x.parse()).collect();\n\n    println!(\"{:?}\", numbers);\n}\n</code></pre>\n\n<p>Of course, it's a <em>bit</em> silly to convert the string into a vector of strings and then convert it again to a vector of integers. If you actually have a comma-separated string and want numbers, do it in one go:</p>\n\n<pre><code>fn main() {\n    let input = \"1,2,3\";\n\n    let numbers: Result&lt;Vec&lt;u16&gt;, _&gt; = input.split(\",\").map(|x| x.parse()).collect();\n\n    println!(\"{:?}\", numbers);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43285372/155423\">Why does `Option` support `IntoIterator`?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": false, "score": 3, "last_activity_date": 1569941049, "last_edit_date": 1569941049, "creation_date": 1449240499, "answer_id": 34090963, "question_id": 34090639, "link": "https://stackoverflow.com/questions/34090639/how-do-i-convert-a-vector-of-strings-to-a-vector-of-integers-in-a-functional-way/34090963#34090963", "title": "How do I convert a vector of strings to a vector of integers in a functional way?", "body": "<p>My take as someone not really experienced in Rust yet.</p>\n\n<pre><code>fn main() {\n    let foo: &amp;str = \"1,2,3\"; // Parsing a string here\n    let bar: Vec&lt;&amp;str&gt; = foo.split(\",\").collect(); // Bar is a nice vector of &amp;str's\n\n    // here the magic happens\n    let baz = bar.iter().map(|x| x.parse::&lt;i64&gt;());\n\n    for x in baz {\n        match x {\n            Ok(i) =&gt; println!(\"{}\", i),\n            Err(_) =&gt; println!(\"parse failed\"),\n        }\n    }\n}\n</code></pre>\n\n<p>Note that since <code>parse</code> returns a <code>Result</code>, you have to extract the value from each parsed element. You might want to behave in a different way, e.g. filter only the succeeded results.</p>\n"}], "owner": {"reputation": 163, "user_id": 2225385, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2bc87c43f4c53db8d592db3b94a0f684?s=128&d=identicon&r=PG", "display_name": "Axuttaja", "link": "https://stackoverflow.com/users/2225385/axuttaja"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2655, "favorite_count": 1, "accepted_answer_id": 34090825, "answer_count": 3, "score": 6, "last_activity_date": 1569941049, "creation_date": 1449239532, "last_edit_date": 1569940730, "question_id": 34090639, "link": "https://stackoverflow.com/questions/34090639/how-do-i-convert-a-vector-of-strings-to-a-vector-of-integers-in-a-functional-way", "title": "How do I convert a vector of strings to a vector of integers in a functional way?", "body": "<p>I'm trying to convert <code>Vec&lt;&amp;str&gt;</code> to <code>Vec&lt;u16&gt;</code> but I can't figure out a functional way to do it.</p>\n\n<pre><code>let foo: &amp;str = \"1,2,3\"; // Parsing a string here\nlet bar: Vec&lt;&amp;str&gt; = foo.split(\",\").collect(); // Bar is a nice vector of &amp;str's\n</code></pre>\n\n<p>I need to get <code>bar</code> into a <code>Vec&lt;u16&gt;</code>.</p>\n"}, {"tags": ["rust", "mio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1449245217, "post_id": 34090362, "comment_id": 55937329, "body": "I haven&#39;t used MIO, but my (limited) understanding of async I/O is that your event loop isn&#39;t even notified unless there is data to read. Said another way, it should be <i>impossible</i> to block while trying to read \u2014 you&#39;d just get a partial read instead. I&#39;m sure I&#39;m missing something obvious though!"}, {"owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1449288519, "post_id": 34090362, "comment_id": 55954210, "body": "@Shepmaster As example, imagine I have (in pseudocode):  <code>run_in_new_coroutine(|miocoHandle, tcpStream|{   let stream = miocoHandle.wrap(tcpStream);   loop{     stream.read():     let outVal = someMailbox.read();     stream.write(outVal);   })</code>  When it reaches <code>stream.read</code>, that coroutine will be swapped out, and won&#39;t resume until the stream can be read. If this takes 500ms, for instance, then the mailbox won&#39;t be read for 500ms, as it will only be read after <code>stream.read()</code> is completed."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449331950, "post_id": 34090362, "comment_id": 55965218, "body": "That makes sense. I&#39;d encourage you to move that into your question as it helps people like me better understand the problem."}], "owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 743, "favorite_count": 3, "answer_count": 0, "score": 5, "last_activity_date": 1449239578, "creation_date": 1449238535, "last_edit_date": 1449239578, "question_id": 34090362, "link": "https://stackoverflow.com/questions/34090362/how-to-read-from-a-mio-tcpstream-with-a-timeout", "title": "How to read from a mio TcpStream with a timeout?", "body": "<p>I'm using <a href=\"https://github.com/dpc/mioco\" rel=\"noreferrer\">Mioco</a>. <code>mio::net::tcp::TcpStream</code> does not implement <code>Clone</code>, so it seems that it's not possible to share a <code>TcpStream</code> across multiple threads/coroutines (or if it is possible, I'm not sure how; I'm pretty new to Rust). I've hence assumed that for simultaneous reading/writing to a single <code>TcpStream</code>, it's necessary to use a single coroutine to do both the reading and writing. </p>\n\n<p>In order to avoid blocking indefinitely on reading when incoming data is infrequent, it seems like it would be necessary to use a timeout when reading from the <code>TcpStream</code>. <code>std::net::TcpStream</code> has <code>set_read_timeout</code> for achieving this, but I can't find an equivalent for <code>mio::net::tcp::TcpStream</code>. How would I go about this? Or is there a way to share the mio <code>TcpStream</code> across multiple coroutines, avoiding the need for a timeout?</p>\n"}, {"tags": ["rust", "dynamic-linking", "rust-cargo"], "comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1449235950, "post_id": 34082636, "comment_id": 55931017, "body": "Just a wild guess - use <code>cargo:rustc-flags=-C link-args=-rdynamic</code>. Arguments to the linker are passed through <code>-C link-args</code> option in rustc."}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1449450966, "post_id": 34082636, "comment_id": 55998612, "body": "@VladimirMatveev Tried it. No luck."}], "answers": [{"tags": [], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "is_accepted": true, "score": 2, "last_activity_date": 1453278848, "creation_date": 1453278848, "answer_id": 34895042, "question_id": 34082636, "link": "https://stackoverflow.com/questions/34082636/expose-symbols-to-dynamic-linker-when-linking-with-native-library-in-rust/34895042#34895042", "title": "Expose symbols to dynamic linker when linking with native library in Rust", "body": "<p>As of today, Rust toolchain discourages passing arbitrary flags to the linker. The closest we can do as a proper way is using <code>cargo rustc</code> and manually add the linking arguments.</p>\n\n<pre><code>cargo rustc -- -C link-args='-rdynamic'\n</code></pre>\n"}], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 1, "accepted_answer_id": 34895042, "answer_count": 1, "score": 3, "last_activity_date": 1453278848, "creation_date": 1449212404, "last_edit_date": 1449240607, "question_id": 34082636, "link": "https://stackoverflow.com/questions/34082636/expose-symbols-to-dynamic-linker-when-linking-with-native-library-in-rust", "title": "Expose symbols to dynamic linker when linking with native library in Rust", "body": "<p>I am building a binary executable in Rust and it needs to link to a native library, say <code>foo.a</code>. <code>foo.a</code> contains a symbol <code>void bar(void)</code>, which I would like to expose to the dynamic linker as a callback function that can be called by functions in a <code>dlopen</code>-style dynamically loaded library.</p>\n\n<p>This can be done in <code>ld</code> by supplying <code>-rdynamic</code> if we use <code>C</code> source.</p>\n\n<pre><code>gcc -rdynamic -o a_dynamic main.c foo.c\n</code></pre>\n\n<p>What is the proper way of doing this in Rust? I have tried using <code>cargo:rustc-flags=-rdynamic</code> in <code>build.rs</code>, as well as</p>\n\n<pre><code>#![feature(link_args)]\n#[link_args = \"-rdynamic\"]\n</code></pre>\n\n<p>Neither seems to work.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449201237, "post_id": 34079845, "comment_id": 55914292, "body": "FYI, Rust standard formatting is 4-space indents."}], "answers": [{"comments": [{"owner": {"reputation": 1154, "user_id": 2718447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/beb3947f85f2dcb663e9566b48c60a1c?s=128&d=identicon&r=PG", "display_name": "anjruu", "link": "https://stackoverflow.com/users/2718447/anjruu"}, "edited": false, "score": 0, "creation_date": 1449198786, "post_id": 34080095, "comment_id": 55913668, "body": "Thanks for the help! I&#39;ve marked <code>refine</code> with <code>where Self: Sized</code>, but when I try to call <code>Shape::refine(&amp;shape)</code> on object of type <code>Rc&lt;Shape&gt;</code>, I get an error saying that &quot;the trait core::marker::Sized is not implemented for the type Shape&quot;. Does the solution with the where clause only work for non-trait-objects?  Also, if I add a constraint on Shape like this: <code>trait Shape: Sized { ... }</code>, I&#39;m told that &quot;the trait Shape is not implemented for the type Shape&quot;, which, I&#39;ll admit, I find a little confusing."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 1154, "user_id": 2718447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/beb3947f85f2dcb663e9566b48c60a1c?s=128&d=identicon&r=PG", "display_name": "anjruu", "link": "https://stackoverflow.com/users/2718447/anjruu"}, "edited": false, "score": 0, "creation_date": 1449200269, "post_id": 34080095, "comment_id": 55914040, "body": "<code>Shape</code> designates two different things: a trait and a type. Rust tries to make the type <code>Shape</code> implement the trait <code>Shape</code> when possible, but adding a <code>Sized</code> constraint prevents that, since the type <code>Shape</code> is unsized (not all types implementing <code>Shape</code> have the same size). Make sure to read the book&#39;s chapter on <a href=\"http://doc.rust-lang.org/stable/book/trait-objects.html\" rel=\"nofollow noreferrer\">Trait Objects</a> to understand all the details."}, {"owner": {"reputation": 1154, "user_id": 2718447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/beb3947f85f2dcb663e9566b48c60a1c?s=128&d=identicon&r=PG", "display_name": "anjruu", "link": "https://stackoverflow.com/users/2718447/anjruu"}, "edited": false, "score": 0, "creation_date": 1449200386, "post_id": 34080095, "comment_id": 55914070, "body": "So, the answer is &quot;no, this is not possible in Rust&quot;?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 1154, "user_id": 2718447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/beb3947f85f2dcb663e9566b48c60a1c?s=128&d=identicon&r=PG", "display_name": "anjruu", "link": "https://stackoverflow.com/users/2718447/anjruu"}, "edited": false, "score": 0, "creation_date": 1449200757, "post_id": 34080095, "comment_id": 55914172, "body": "<code>Child</code> wants to store an <code>Rc&lt;Parent&gt;</code>, but what you have is an <code>Rc&lt;Shape&gt;</code>. I don&#39;t think you can go from an <code>Rc&lt;Shape&gt;</code> to an <code>Rc&lt;Parent&gt;</code>. Perhaps you could replace <code>Rc&lt;Shape&gt;</code> with <code>Box&lt;RefinableShape&gt;</code> everywhere?"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1449201276, "last_edit_date": 1449201276, "creation_date": 1449197395, "answer_id": 34080095, "question_id": 34079845, "link": "https://stackoverflow.com/questions/34079845/working-with-rc-and-object-safety/34080095#34080095", "title": "Working with Rc and Object Safety", "body": "<p><a href=\"https://doc.rust-lang.org/error-index.html#E0038\" rel=\"nofollow\">The help for error E0038</a> suggests that you can add <code>where Self: Sized</code> to a non-object-safe method to avoid the error. And indeed, it works:</p>\n\n<pre><code>trait Shape {\n    fn is_fully_refined(&amp;self) -&gt; bool { true }\n    fn refine(shape: &amp;Rc&lt;Self&gt;) -&gt; Vec&lt;Rc&lt;Shape&gt;&gt; where Self: Sized { Vec::new() }\n}\n</code></pre>\n\n<p>However, since the <code>refine</code> function uses <code>&amp;Rc&lt;Self&gt;</code>, you can't use the method syntax (<code>x.refine()</code>) to invoke it. Instead, you need to write <code>Shape::refine(&amp;x)</code>. If you want to be able to write the former, you'll need to move the <code>refine</code> function to another trait and implement that trait for each <code>Rc&lt;T&gt;</code> where <code>T</code> implements <code>Shape</code>. For example:</p>\n\n<pre><code>trait RefinableShape {\n    fn refine(&amp;self) -&gt; Vec&lt;Rc&lt;Shape&gt;&gt; { Vec::new() }\n}\n\nimpl RefinableShape for Rc&lt;Parent&gt; {\n    fn refine(&amp;self) -&gt; Vec&lt;Rc&lt;Shape&gt;&gt; {\n        let child = Child { parent: self.clone() };\n        vec![Rc::new(child)]\n    }\n}\n\nimpl RefinableShape for Rc&lt;Child&gt; { }\n</code></pre>\n"}], "owner": {"reputation": 1154, "user_id": 2718447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/beb3947f85f2dcb663e9566b48c60a1c?s=128&d=identicon&r=PG", "display_name": "anjruu", "link": "https://stackoverflow.com/users/2718447/anjruu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 34080095, "answer_count": 1, "score": 0, "last_activity_date": 1449201276, "creation_date": 1449195515, "last_edit_date": 1449199471, "question_id": 34079845, "link": "https://stackoverflow.com/questions/34079845/working-with-rc-and-object-safety", "title": "Working with Rc and Object Safety", "body": "<p>I'm writing a library that includes several geometric shapes. Each shape is either fully refined (meaning the rendering system can display it), or is made up of subshapes. Each shape has two methods: a method that checks if it is fully refined, and a method that gets a list of its subshapes, if any. Refinement is then done on each of those subshapes until I have a list of shapes, each of which is fully refined. Because I'm reading these shapes in from a file, I was hoping to use <code>Rc</code>s to simplify memory management. </p>\n\n<p>A few shapes need to have references to their \"parent\" shapes. I was hoping to use <code>Rc</code>s for these references as well. Because of this, the parent's refine method needs to take an <code>Rc</code>, since it needs to clone that <code>Rc</code> and give the clone to its children.</p>\n\n<p>All in all, here's what I would like to have:</p>\n\n<pre><code>trait Shape {\n  fn is_fully_refined(&amp;self) -&gt; bool { true }\n  fn refine(shape: &amp;Rc&lt;Self&gt;) -&gt; Vec&lt;Rc&lt;Shape&gt;&gt; { Vec::new() }\n}\n\nstruct Parent { ... }\n\nimpl Shape for Parent {\n  fn is_fully_refined(&amp;self) -&gt; bool { false }\n\n  fn refine(shape: &amp;Rc&lt;Parent&gt;) -&gt; Vec&lt;Rc&lt;Shape&gt;&gt; {\n    let child = Child { parent: shape.clone };\n    vec![child]\n  }\n}\n\nstruct Child { parent: Rc&lt;Parent&gt; }\n\nimpl Shape for Child { }\n</code></pre>\n\n<p>The problem is that <code>Shape</code> is not object safe because <code>refine</code> uses <code>Self</code>. Is there a way to structure this so that I can both have <code>Rc&lt;Shape&gt;</code> and a refine method that \"knows\" about the reference count, so it can be cloned? </p>\n\n<p>I would also like to be able to call <code>refine</code> on an <code>Rc&lt;Shape&gt;</code>, in order to recursively refine my shapes until I have a list of fully-refined shapes.</p>\n\n<p>I have seen extension traits used before, but I don't think that will work in this case. I would need to have a single <code>impl</code> for the hypothetical <code>ShapeExt</code>, or whatever, and each shape refines differently.</p>\n\n<p>I've also seen <code>where</code> clauses used to guard the methods that make a trait object safe, but then I couldn't call <code>refine</code> on an <code>Rc&lt;Shape&gt;</code> (I think). </p>\n\n<p>Is this possible in Rust, or do I need to restructure my code entirely?</p>\n"}, {"tags": ["performance", "floating-point", "rust"], "comments": [{"owner": {"reputation": 1976, "user_id": 966061, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c0439817e4f950db40f425724e73710?s=128&d=identicon&r=PG", "display_name": "kstep", "link": "https://stackoverflow.com/users/966061/kstep"}, "edited": false, "score": 3, "creation_date": 1449187336, "post_id": 34078460, "comment_id": 55910606, "body": "Could you please show your program so we have some context? Thank you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449201021, "post_id": 34078460, "comment_id": 55914234, "body": "More importantly, a screenshot of the trace is pretty useless. Look at the text form of the same data, and it will <i>tell you</i> what the containing item of <code>nearbyint</code> is (the small red rectangle). Follow it up the chain to see what is calling it."}, {"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "edited": false, "score": 0, "creation_date": 1449229332, "post_id": 34078460, "comment_id": 55927157, "body": "All functions around it are <code>iter::_LT$impl$GT$next::next::h\u2026yadayada</code> up until they become generic like <code>main()</code> (I suppose all my functions got inlined)."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1449201156, "last_edit_date": 1495541270, "creation_date": 1449201156, "answer_id": 34080637, "question_id": 34078460, "link": "https://stackoverflow.com/questions/34078460/what-rust-construct-uses-nearbyint-from-libsystem-m/34080637#34080637", "title": "What Rust construct uses nearbyint from libsystem_m?", "body": "<p>Doing a <a href=\"https://github.com/rust-lang/rust/search?q=nearbyint&amp;type=Code&amp;utf8=%E2%9C%93\" rel=\"nofollow noreferrer\">search for <code>nearbyint</code></a> finds the related symbols <code>nearbyintf32</code> and <code>nearbyintf64</code>. These <a href=\"https://github.com/rust-lang/rust/blob/1.4.0/src/libcore/intrinsics.rs#L484-L487\" rel=\"nofollow noreferrer\">are documented</a> as returning the nearest integer to a floating point value. However, there appears to be no calls to that specific function.</p>\n\n<p><code>fenv_access_off</code> <a href=\"https://stackoverflow.com/q/13096137/155423\">appears to be an OS X specific aspect of the math library</a>.</p>\n\n<p>The other thing in your trace is <code>round</code>. I can believe that <code>round</code> could use <code>nearbyint</code>. I also don't see any cases of <code>round</code> in the standard library that seem like they would occur in a tight loop.</p>\n\n<p>Beyond this, anything is pure guessing.</p>\n"}, {"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 2, "last_activity_date": 1449230838, "creation_date": 1449230838, "answer_id": 34088060, "question_id": 34078460, "link": "https://stackoverflow.com/questions/34078460/what-rust-construct-uses-nearbyint-from-libsystem-m/34088060#34088060", "title": "What Rust construct uses nearbyint from libsystem_m?", "body": "<p>I've reproduced it with:</p>\n\n<pre><code>fn main() {\n    let data:Vec&lt;_&gt; = (0..999999).map(|x|{\n        (x as f64).powf(2.2).round() as u8\n    }).collect();\n}\n</code></pre>\n\n<p>so it seems <code>as u8</code> is implemented using <code>nearbyint</code>.</p>\n\n<p>It's the same speed as C <code>uchar = round(pow(i, 2.2))</code>, so I'll have to replace it with a good'ol lookup table\u2026</p>\n"}], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 1, "accepted_answer_id": 34088060, "answer_count": 2, "score": 1, "last_activity_date": 1449230838, "creation_date": 1449186436, "last_edit_date": 1449200928, "question_id": 34078460, "link": "https://stackoverflow.com/questions/34078460/what-rust-construct-uses-nearbyint-from-libsystem-m", "title": "What Rust construct uses nearbyint from libsystem_m?", "body": "<p>I've profiled my program with Valgrind and Callgrind and found that most of the time is spent in the <code>nearbyint$fenv_access_off</code> function.</p>\n\n<p>I've found that it's a LLVM intrinsic, but which Rust language construct uses it? How can I avoid it?</p>\n\n<p><a href=\"https://i.stack.imgur.com/ImoKt.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ImoKt.png\" alt=\"call map\"></a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1449156212, "post_id": 34063272, "comment_id": 55892434, "body": "Welcome to the pain of generics w.r.t. arithmetic operations in Rust!"}], "answers": [{"comments": [{"owner": {"reputation": 61, "user_id": 4762509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c9a05352b9f269d1f752794094dfb082?s=128&d=identicon&r=PG&f=1", "display_name": "seb_odessa", "link": "https://stackoverflow.com/users/4762509/seb-odessa"}, "edited": false, "score": 0, "creation_date": 1449142426, "post_id": 34063894, "comment_id": 55882926, "body": "Thank you, but it was interesting to implement a fn that return a function without helper structs."}], "tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": false, "score": 3, "last_activity_date": 1449150521, "last_edit_date": 1449150521, "creation_date": 1449139518, "answer_id": 34063894, "question_id": 34063272, "link": "https://stackoverflow.com/questions/34063272/how-to-apply-trait-inside-a-closure-which-is-used-as-a-function-result/34063894#34063894", "title": "How to apply trait inside a closure which is used as a function result", "body": "<p>If you are OK with moving away from function calling, you could wrap the <code>x</code> in your own type:</p>\n\n<pre><code>use std::ops::Add;\n\nstruct Adder&lt;X&gt; { \n    x: X \n}\n\nimpl&lt;X: Copy&gt; Adder&lt;X&gt; {\n    fn add&lt;Y: Add&lt;X&gt;&gt;(&amp;self, y: Y) -&gt; &lt;Y as Add&lt;X&gt;&gt;::Output {\n        y + self.x\n    }\n}\n\nfn main() {\n    let x = Adder { x: 1usize };\n\n    x.add(2); // as opposed to x(2)\n}\n</code></pre>\n\n<p>This means you can get rid of <code>Box</code> and don't need to allocate anything. Implementing <code>Fn(..)</code> is not possible in stable Rust, and the unstable version may break in future Rust versions. Look at <a href=\"http://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"nofollow\"><code>std::ops::Fn</code></a> for further information.</p>\n"}, {"comments": [{"owner": {"reputation": 61, "user_id": 4762509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c9a05352b9f269d1f752794094dfb082?s=128&d=identicon&r=PG&f=1", "display_name": "seb_odessa", "link": "https://stackoverflow.com/users/4762509/seb-odessa"}, "edited": false, "score": 0, "creation_date": 1449142025, "post_id": 34063924, "comment_id": 55882641, "body": "The  <code>fn f&lt;&#39;a, T: Add&lt;Output=T&gt; + Copy + &#39;a&gt;(n: T) -&gt; Box&lt;Fn(T) -&gt; T + &#39;a&gt;</code> working fine, e.g: <code>assert_eq!(6, ff(2));</code> , but  <code>fn f2&lt;&#39;a, T: Add&lt;Output=T&gt; + &#39;a&gt;(n: T) -&gt; Box&lt;FnOnce(T) -&gt; T + &#39;a&gt;</code> seems unuseful for me. How I should use f2 ?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 61, "user_id": 4762509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c9a05352b9f269d1f752794094dfb082?s=128&d=identicon&r=PG&f=1", "display_name": "seb_odessa", "link": "https://stackoverflow.com/users/4762509/seb-odessa"}, "edited": false, "score": 0, "creation_date": 1449142591, "post_id": 34063924, "comment_id": 55883044, "body": "@seb_odessa please read the explanation below that example. I said that there are problems with it, including the problem with invocation of <code>Box&lt;FnOnce&gt;</code>."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 7, "last_activity_date": 1449152686, "last_edit_date": 1449152686, "creation_date": 1449139588, "answer_id": 34063924, "question_id": 34063272, "link": "https://stackoverflow.com/questions/34063272/how-to-apply-trait-inside-a-closure-which-is-used-as-a-function-result/34063924#34063924", "title": "How to apply trait inside a closure which is used as a function result", "body": "<p>There are several problems with the generic version.</p>\n\n<p>First, the error you have provided occurs because just <code>T: Add</code> is not enough to specify output type: you need to put a constraint onto the associated type <code>&lt;T as Add&gt;::Output</code> as well (see <a href=\"http://doc.rust-lang.org/std/ops/trait.Add.html\" rel=\"nofollow\"><code>Add</code></a> docs):</p>\n\n<pre><code>fn f&lt;T: Add&lt;Output=T&gt;&gt;(n: T) -&gt; Box&lt;Fn(T) -&gt; T&gt; {\n    Box::new(move |i: T| n + i)\n}\n</code></pre>\n\n<p>Alternatively, you can make the closure return the output type of <code>&lt;T as Add&gt;</code>:</p>\n\n<pre><code>fn f&lt;T: Add&gt;(n: T) -&gt; Box&lt;Fn(T) -&gt; T::Output&gt; {\n    Box::new(move |i: T| n + i)\n}\n</code></pre>\n\n<p>However, now you'll get the following error:</p>\n\n<pre><code>&lt;anon&gt;:4:10: 4:37 error: the parameter type `T` may not live long enough [E0310]\n&lt;anon&gt;:4     Box::new(move |i: T| n + i)\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n&lt;anon&gt;:4:10: 4:37 help: see the detailed explanation for E0310\n&lt;anon&gt;:4:10: 4:37 help: consider adding an explicit lifetime bound `T: 'static`...\n&lt;anon&gt;:4:10: 4:37 note: ...so that the type `[closure@&lt;anon&gt;:4:19: 4:36 n:T]` will meet its required lifetime bounds\n&lt;anon&gt;:4     Box::new(move |i: T| n + i)\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>The problem here is that <code>T</code> may contain references inside it (afterwards, it is a generic type - it can contain <em>anything</em>); however, <code>Box&lt;Fn(T) -&gt; T&gt;</code> implicitly means that anything inside this trait object must be <code>'static</code>, i.e. the compiler automatically adds <code>'static</code> constraint: <code>Box&lt;Fn(T) -&gt; T + 'static&gt;</code>. However, your closure captures <code>T</code> which can contain any references, not only <code>'static</code>.</p>\n\n<p>The most general way to fix it would be to add an explicit lifetime constraint of <code>T</code> and <code>Box&lt;Fn(T) -&gt; T&gt;</code>:</p>\n\n<pre><code>fn f&lt;'a, T: Add&lt;Output=T&gt; + 'a&gt;(n: T) -&gt; Box&lt;Fn(T) -&gt; T + 'a&gt; {\n    Box::new(move |i: T| n + i)\n}\n</code></pre>\n\n<p>Alternatively, you can specify that <code>T</code> is <code>'static</code>, though this unnecessarily limits the genericity of your code:</p>\n\n<pre><code>fn f&lt;T: Add&lt;Output=T&gt; + 'static&gt;(n: T) -&gt; Box&lt;Fn(T) -&gt; T&gt; {\n    Box::new(move |i: T| n + i)\n}\n</code></pre>\n\n<p>However, this still does not compile:</p>\n\n<pre><code>&lt;anon&gt;:4:31: 4:32 error: cannot move out of captured outer variable in an `Fn` closure\n&lt;anon&gt;:4     Box::new(move |i: T| n + i)\n                                  ^\n</code></pre>\n\n<p>This error happens because addition in Rust (i.e. <code>Add</code> trait) works by value - it consumes both arguments. For <code>Copy</code> types, like numbers, it is fine - they are always copied. However, the compiler can't assume that generic type parameters also designate <code>Copy</code> types because there is no respective bound, therefore it assumes that values of type <code>T</code> can only be moved around. However, you're specifying that the returned closure is <a href=\"http://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"nofollow\"><code>Fn</code></a>, so it takes its environment by reference. You can't move out of a reference, and this is what this error is about.</p>\n\n<p>There are several ways to fix this error, the simplest one being to add <code>Copy</code> bound:</p>\n\n<pre><code>fn f&lt;'a, T: Add&lt;Output=T&gt; + Copy + 'a&gt;(n: T) -&gt; Box&lt;Fn(T) -&gt; T + 'a&gt; {\n    Box::new(move |i: T| n + i)\n}\n</code></pre>\n\n<p>And now it compiles.</p>\n\n<p>One possible alternative would be to return <a href=\"http://doc.rust-lang.org/std/ops/trait.FnOnce.html\" rel=\"nofollow\"><code>FnOnce</code></a> closure which takes its environment by value:</p>\n\n<pre><code>fn f&lt;'a, T: Add&lt;Output=T&gt; + 'a&gt;(n: T) -&gt; Box&lt;FnOnce(T) -&gt; T + 'a&gt; {\n    Box::new(move |i: T| n + i)\n}\n</code></pre>\n\n<p>There are two problems with it, however. First, as its name implies, <code>FnOnce</code> can only be called once, because upon its first invocation its environment is consumed, and there is nothing to call it on the next time. This may be overly limiting. Second, unfortunately, Rust cannot call <code>Box&lt;FnOnce()&gt;</code> closures at all. This is an implementation problem and it should be solved in the future; for now there is an unstable <a href=\"http://doc.rust-lang.org/std/boxed/trait.FnBox.html\" rel=\"nofollow\"><code>FnBox</code></a> trait to work around this.</p>\n\n<p>Even another alternative would be to use references instead of values:</p>\n\n<pre><code>fn f&lt;'a, T: 'a&gt;(n: T) -&gt; Box&lt;Fn(T) -&gt; T + 'a&gt; where for&lt;'b&gt; &amp;'b T: Add&lt;T, Output=T&gt; {\n    Box::new(move |i: T| &amp;n + i)\n} \n</code></pre>\n\n<p>Now we specify that instead of <code>T</code>, <code>&amp;'b T</code> for any lifetime <code>'b</code> must be summable with <code>T</code>. Here we use the fact that <code>Add</code> trait is overloaded for references to primitive types as well. This is probably the most generic version of this function.</p>\n"}], "owner": {"reputation": 61, "user_id": 4762509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c9a05352b9f269d1f752794094dfb082?s=128&d=identicon&r=PG&f=1", "display_name": "seb_odessa", "link": "https://stackoverflow.com/users/4762509/seb-odessa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1449152686, "creation_date": 1449137908, "last_edit_date": 1449150209, "question_id": 34063272, "link": "https://stackoverflow.com/questions/34063272/how-to-apply-trait-inside-a-closure-which-is-used-as-a-function-result", "title": "How to apply trait inside a closure which is used as a function result", "body": "<p>I can't implement this LISP construction </p>\n\n<pre><code>(defun foo (n)\n  (lambda (i) (incf n i)))\n</code></pre>\n\n<p>in Rust.\nI have tried <a href=\"https://play.rust-lang.org/?gist=4ac3983866f53f6ed453&amp;version=stable\" rel=\"nofollow\">this</a>:</p>\n\n<pre><code>use std::ops::Add;\n\nfn f&lt;T: Add&gt;(n: T) -&gt; Box&lt;Fn(T) -&gt; T&gt; {\n    Box::new(move |i: T| n + i)\n} \n\nfn main() {\n    let adder = f(2);\n    assert_eq!(4, adder(2));\n}\n</code></pre>\n\n<p>But it causes an error:</p>\n\n<pre><code>error: mismatched types:\n expected `T`,\n    found `&lt;T as core::ops::Add&gt;::Output`\n(expected type parameter,\n    found associated type) [E0308]\n           Box::new(move |i: T| n + i)\n                                ^~~~~\n</code></pre>\n\n<p>Seems like the trait <code>Add</code> defined for the outer function was not transferred into the inner closure.</p>\n\n<p>Is it possible to implement such a construction?</p>\n\n<p>It is possible to implement this function with a concrete type instead of a generic:</p>\n\n<pre><code>fn f(n: i32) -&gt; Box&lt;Fn(i32) -&gt; i32&gt; {\n    Box::new(move |i| n + i)\n} \n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449149897, "post_id": 34058193, "comment_id": 55887828, "body": "Produce an <a href=\"/help/mcve\">MCVE</a> of your code and include it in your question. Otherwise we can&#39;t help you effectively."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449150846, "post_id": 34059370, "comment_id": 55888468, "body": "While it&#39;s very likely (say 99.99% chance) that this is because of poor unsafe code the user or a library wrote, there&#39;s always a slim possibility that something in the standard library has a bug. That&#39;s one more reason I advocate for showing the code in question; if there&#39;s a bug in Rust proper we need to get it fixed! ^_^"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 5, "last_activity_date": 1449124716, "creation_date": 1449124716, "answer_id": 34059370, "question_id": 34058193, "link": "https://stackoverflow.com/questions/34058193/how-to-handle-an-unknown-error-occurred-when-running-a-rust-program/34059370#34059370", "title": "How to handle &quot;An unknown error occurred&quot; when running a Rust program?", "body": "<p>According to the error you provided, this is not a problem with tooling (that is, Cargo and rustc both work correctly) but with your program:</p>\n\n<pre><code>Process didn't exit successfully: 'target/debug/ok_rust' (signal: 11)\n</code></pre>\n\n<p>Signal 11 means that a segmentation fault has happened in the program. Segfaults usually happen when invalid memory is accessed, for example, when a destroyed object is read. Rust is explicitly designed to avoid segfaults; if one happens, it means that one of the <code>unsafe</code> blocks in your program contains an error. This unsafe block may be the one you have written yourself or it may be in one of the libraries you use.</p>\n\n<p>Anyway, you need to find the exact place where the segfault happens. You can use a debugger (gdb or lldb, depending on your system) or you can add debug output to your program, with which you will likely be able to pinpoint the problematic line. Then you'll need to trace the problem back to one of the <code>unsafe</code> blocks. For example, if you find that the segfault happens when accessing a value through a reference, like</p>\n\n<pre><code>let x = some_struct.field;\n</code></pre>\n\n<p>where <code>some_struct: &amp;SomeStruct</code>, then it is likely that <code>some_struct</code> points to an invalid object; this can only happen if <code>some_struct</code> was created in an <code>unsafe</code> block, so you need to find where <code>some_structs</code> originates.</p>\n"}], "owner": {"reputation": 33, "user_id": 5633146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcd483f8a4192d51b5da6fc7a1213363?s=128&d=identicon&r=PG&f=1", "display_name": "fourthaugmentation", "link": "https://stackoverflow.com/users/5633146/fourthaugmentation"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 297, "favorite_count": 0, "accepted_answer_id": 34059370, "answer_count": 1, "score": 0, "last_activity_date": 1449237410, "creation_date": 1449118733, "last_edit_date": 1449237410, "question_id": 34058193, "link": "https://stackoverflow.com/questions/34058193/how-to-handle-an-unknown-error-occurred-when-running-a-rust-program", "title": "How to handle &quot;An unknown error occurred&quot; when running a Rust program?", "body": "<p>I am currently running <code>cargo run</code> and getting the most generic error, <code>An unknown error has occurred</code>.</p>\n\n<p>When I then run <code>cargo run --verbose</code> I get <code>Process didn't exit successfully: 'target/debug/ok_rust' (signal: 11)</code> which I have no clue how to handle.</p>\n\n<p>How do I debug this? What am I supposed to do? Test it with the nightly version, but the same libraries? How am I supposed to know if I'm responsible or if it's Rust?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 5633146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcd483f8a4192d51b5da6fc7a1213363?s=128&d=identicon&r=PG&f=1", "display_name": "fourthaugmentation", "link": "https://stackoverflow.com/users/5633146/fourthaugmentation"}, "edited": false, "score": 0, "creation_date": 1449113518, "post_id": 34057274, "comment_id": 55868659, "body": "Thank you! Specifically I created a <code>.cargo</code> one level up, with a file called <code>config</code> that has <code>paths = [&quot;.&#47;project&quot;]</code> with the project being in the ancestor directory containing the <code>.cargo</code> file."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1449113487, "last_edit_date": 1449113487, "creation_date": 1449112676, "answer_id": 34057274, "question_id": 34057112, "link": "https://stackoverflow.com/questions/34057112/how-do-i-tell-cargo-to-check-a-local-directory-for-a-replacement-dependency-and/34057274#34057274", "title": "How do I tell Cargo to check a local directory for a replacement dependency and use it?", "body": "<p>Check out the <a href=\"http://doc.crates.io/guide.html#overriding-dependencies\" rel=\"nofollow\">Cargo documentation on overriding a dependency</a>:</p>\n\n<blockquote>\n  <p>Cargo looks for a directory named <code>.cargo</code> up the directory hierarchy of your project [...] To specify overrides, create a <code>.cargo/config</code> file in some ancestor of your project\u2019s directory [...] Inside that file, put this:</p>\n\n<pre><code>paths = [\"/path/to/project\"]\n</code></pre>\n  \n  <p>This array should be filled with directories that contain a <code>Cargo.toml</code>.</p>\n</blockquote>\n"}], "owner": {"reputation": 33, "user_id": 5633146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcd483f8a4192d51b5da6fc7a1213363?s=128&d=identicon&r=PG&f=1", "display_name": "fourthaugmentation", "link": "https://stackoverflow.com/users/5633146/fourthaugmentation"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 542, "favorite_count": 0, "accepted_answer_id": 34057274, "answer_count": 1, "score": 2, "last_activity_date": 1449113487, "creation_date": 1449111716, "last_edit_date": 1449112931, "question_id": 34057112, "link": "https://stackoverflow.com/questions/34057112/how-do-i-tell-cargo-to-check-a-local-directory-for-a-replacement-dependency-and", "title": "How do I tell Cargo to check a local directory for a replacement dependency and use it?", "body": "<p>I am trying to understand how to change a broken dependency in Rust. I cloned the code from GitHub and updated the dependencies in the Cargo.toml so it can compile, but how do I use it in my project? </p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449105220, "post_id": 34055605, "comment_id": 55866353, "body": "@Shepmaster But then I get this error:  expected <code>&amp;collections::vec::Vec&lt;T&gt;</code>,     found <code>collections::vec::Vec&lt;T&gt;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1449105373, "post_id": 34055605, "comment_id": 55866384, "body": "Right \u2014 return the entire <code>Vec</code> (<code>type Item = Vec&lt;T&gt;</code>)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449105904, "post_id": 34055605, "comment_id": 55866535, "body": "Ah, I see. That works. I think my problem was that I wrote the rows iterator first (because it was easier) and the obvious way to do that was to borrow references to the rows that I already had, so then I tried to use references too for the columns for consistency. I should be able to go back and make the row iterator work like this too."}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1449106129, "answer_count": 0, "score": 0, "last_activity_date": 1449101731, "creation_date": 1449101731, "question_id": 34055605, "link": "https://stackoverflow.com/questions/34055605/conflicting-lifetime-requirement-when-iterator-yields-new-vector", "closed_reason": "Duplicate", "title": "Conflicting lifetime requirement, when iterator yields new vector", "body": "<p>I have a <code>Grid</code> struct like this:</p>\n\n<pre><code>pub struct Grid&lt;Item : Copy&gt; {\n    raw : Vec&lt;Vec&lt;Item&gt;&gt;\n}\n</code></pre>\n\n<p>I'm trying to rewrite different kinds of iterators over it (mostly as an exercise, so I want to do this even if there are \"better\" ways of solving the specific problem presented here).</p>\n\n<p>Iterating over rows was easy; the <code>raw</code> field is just a vector of rows, so I can yield a reference to each subsequent row each time. </p>\n\n<p>But I'm having difficulty with iterating over columns. I tried to construct a new Vec for each call to <code>next()</code>, but the reference doesn't live long enough - which makes sense. The code below is an attempt to store the reference to the temporary vec in the iterator struct, hoping to inherit the lifetime. But that doesn't work either:</p>\n\n<pre><code>pub struct ColIter&lt;'a, T&gt;\n    where T : 'a + Copy + Debug + Display + FromStr\n{\n    grid : &amp;'a Grid&lt;T&gt;,\n    index : usize,\n    col_temp : Vec&lt;T&gt;,\n}\n\nimpl &lt;'a,T&gt; ColIter&lt;'a,T&gt;\n    where T : 'a + Copy + Debug + Display + FromStr\n{\n    fn new( grid : &amp;'a Grid&lt;T&gt; ) -&gt; ColIter&lt;'a,T&gt; {\n        ColIter {\n            grid : grid,\n            index : 0,\n            col_temp : Vec::with_capacity(grid.width()),\n        }\n    }\n}\n\nimpl &lt;'a,T&gt; Iterator for ColIter&lt;'a,T&gt;\n    where T : Copy + Debug + Display + FromStr\n{\n    type Item = &amp;'a Vec&lt;T&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.index &lt; self.grid.height() {\n            for row in 0..self.grid.width() {\n                self.col_temp[row] = self.grid.raw[row][self.index];\n            }\n            self.index += 1;\n            Some( &amp; self.col_temp )    // &lt;-- ERROR HERE\n        }\n        else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>Which gives the error:</p>\n\n<pre><code>src/grid.rs:253:19: 253:34 error: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\nsrc/grid.rs:253             Some( &amp; self.col_temp )\n                                  ^~~~~~~~~~~~~~~\nsrc/grid.rs:247:5: 258:6 help: consider using an explicit lifetime parameter as shown: fn next(&amp;'a mut self) -&gt; Option&lt;Self::Item&gt;\n</code></pre>\n\n<p>The \"help\" line doesn't help, because the suggestion is incompatible with the trait.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1449104118, "post_id": 34055598, "comment_id": 55865994, "body": "Have you read <a href=\"http://doc.rust-lang.org/stable/book\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a> chapter on <a href=\"http://doc.rust-lang.org/stable/book/crates-and-modules.html\" rel=\"nofollow noreferrer\">crates and modules</a>? It contains examples of multiple nested directories."}, {"owner": {"reputation": 831, "user_id": 1843067, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/2CBR6.jpg?s=128&g=1", "display_name": "rohitmohta", "link": "https://stackoverflow.com/users/1843067/rohitmohta"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1449114034, "post_id": 34055598, "comment_id": 55868814, "body": "@Shepmaster Thank You for pointing me towards that. This topic is part of  Chapter 5 and I have not yet reached there. Code is working as expected. Another plus point, I understood the advantage of having both main.rs and lib.rs in same crate."}], "answers": [{"comments": [{"owner": {"reputation": 831, "user_id": 1843067, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/2CBR6.jpg?s=128&g=1", "display_name": "rohitmohta", "link": "https://stackoverflow.com/users/1843067/rohitmohta"}, "edited": false, "score": 1, "creation_date": 1449114128, "post_id": 34055761, "comment_id": 55868843, "body": "Thanks antoyo. Shepmaster&#39;s comment pointed me to the right chapter. Wish that topic was discussed in earlier chapter to avoid this."}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 831, "user_id": 1843067, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/2CBR6.jpg?s=128&g=1", "display_name": "rohitmohta", "link": "https://stackoverflow.com/users/1843067/rohitmohta"}, "edited": false, "score": 0, "creation_date": 1471358027, "post_id": 34055761, "comment_id": 65308218, "body": "If this answer helped you, could you please accept it?"}], "tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 9, "last_activity_date": 1449102746, "creation_date": 1449102746, "answer_id": 34055761, "question_id": 34055598, "link": "https://stackoverflow.com/questions/34055598/how-do-use-and-mod-work-when-there-are-nested-source-directories/34055761#34055761", "title": "How do &#39;use&#39; and &#39;mod&#39; work when there are nested source directories?", "body": "<p>You cannot use <code>::</code> in a <code>mod</code> declaration.</p>\n\n<p>You need a file <code>src/book/mod.rs</code>, containing:</p>\n\n<pre><code>pub mod ch01;\n</code></pre>\n\n<p>And in your <code>main.rs</code> file, use:</p>\n\n<pre><code>use self::book::ch01::formatting_example;\nmod book;\n</code></pre>\n"}], "owner": {"reputation": 831, "user_id": 1843067, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/2CBR6.jpg?s=128&g=1", "display_name": "rohitmohta", "link": "https://stackoverflow.com/users/1843067/rohitmohta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3144, "favorite_count": 0, "accepted_answer_id": 34055761, "answer_count": 1, "score": 8, "last_activity_date": 1449104044, "creation_date": 1449101698, "last_edit_date": 1449104044, "question_id": 34055598, "link": "https://stackoverflow.com/questions/34055598/how-do-use-and-mod-work-when-there-are-nested-source-directories", "title": "How do &#39;use&#39; and &#39;mod&#39; work when there are nested source directories?", "body": "<p>I am having difficulty in building a Rust binary project with multiple nested folders. The intent here is to practice all the examples listed in 'Rust By Example' in one single project and use <code>cargo run</code> to see all the output. I have tried various combinations of the <code>use</code> and <code>mod</code> keywords, but I'm unable to wrap my head around them.</p>\n\n<p>This is the error I get:</p>\n\n<pre><code>$ cargo run\n   Compiling rustbyexample v0.1.0 (file:///xxx/rustProjects/rustbyexample)\nsrc/main.rs:6:9: 6:11 error: expected one of `;` or `{`, found `::`\nsrc/main.rs:6 mod book::ch01;\n</code></pre>\n\n<p><strong>folder structure</strong></p>\n\n<pre><code>.\n|-- Cargo.lock\n|-- Cargo.toml\n|-- src\n|   |-- book\n|   |   |-- ch01\n|   |   |   |-- customDisplay.rs\n|   |   |   |-- display_list.rs\n|   |   |   |-- formatting.rs\n|   |   |   |-- mod.rs\n|   |   |   `-- tuple_example.rs\n|   |   `-- ch02\n|   |       `-- arrayandslices.rs\n|   |-- coursera\n|   |   `-- week1\n|   |       `-- caesarcipher.rs\n|   |-- lib.rs_neededforalibrary\n|   `-- main.rs\n`-- target\n`-- debug\n    |-- build\n    |-- deps\n    |-- examples\n    |-- native\n    `-- rustbyexample.d\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>use self::book::ch01;\n//use book::ch01::customDisplay::display_example as display_example;\n//use book::ch01::display_list::print_list_example as print_list;\n//use book::ch01::tuple_example::tuple_example as tuple_example;\n\nmod book::ch01;\n//mod formatting;\n//mod customDisplay;\n//mod display_list;\n//mod tuple_example;\n\nfn main() {\nprintln!(\"Main Rust Program to call others.\");\n\nprintln!(\"********** Formatting Example   ****************\");\nformatting_example();\n/*\nprintln!(\"********* Implementing Display Example *************\");\ndisplay_example();\n\nprintln!(\"**** Implement Display to Print Contents of List *****\");\nprint_list_example();\n\nprintln!(\"**** Implement Tuple Related Example ****\");\ntuple_example();\n*/\n}\n</code></pre>\n\n<p><strong>src/book/ch01/mod.rs</strong></p>\n\n<pre><code>pub use self::formatting::formatting_example;\n   //use book::ch01::customDisplay::display_example as display_example;\n   //use book::ch01::display_list::print_list_example as print_list;\n   //use book::ch01::tuple_example::tuple_example as tuple_example;\n\n   pub mod formatting;\n   //mod customDisplay;\n   //mod display_list;\n   //mod tuple_example;\n</code></pre>\n\n<p><strong>src/book/ch01/formatting.rs</strong></p>\n\n<pre><code>#[derive(Debug)]\nstruct Structure(i32);\n\n#[derive(Debug)]\nstruct Deep(Structure);\n\npub fn formatting_example() {\n    println!(\"{:?} months in a year.\", 12);\n\n    println!(\"{1:?} {0:?} is the {actor:?} name.\", \"Slater\", \"Christian\", actor=\"actor's\");\n\n    // `Structure` is printable!\n    println!(\"Now {:?} will print!\", Structure(3));\n\n    // The problem with `derive` is there is no control over how\n    // the results look. What if I want this to just show a `7`?\n    println!(\"Now {:?} will print!\", Deep(Structure(7)));\n}\n</code></pre>\n"}]