[{"tags": ["sql-server", "rust"], "answers": [{"tags": [], "owner": {"reputation": 1270, "user_id": 420156, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/YzDEM.jpg?s=128&g=1", "display_name": "allquixotic", "link": "https://stackoverflow.com/users/420156/allquixotic"}, "is_accepted": true, "score": 0, "last_activity_date": 1556741142, "creation_date": 1556741142, "answer_id": 55942058, "question_id": 55941926, "link": "https://stackoverflow.com/questions/55941926/tiberius-simple-query-as-per-documentation-compile-time-error/55942058#55942058", "title": "Tiberius simple_query as per documentation compile-time error", "body": "<p>Looks like there was a breaking change to futures_state_stream and I was using a version <em>too new</em> for this package, which caused the breakage.</p>\n\n<p>I had to downgrade futures_state_stream version to 0.1.0 until <a href=\"https://github.com/steffengy/tiberius/issues/75\" rel=\"nofollow noreferrer\">this issue</a> is resolved.</p>\n"}], "owner": {"reputation": 1270, "user_id": 420156, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/YzDEM.jpg?s=128&g=1", "display_name": "allquixotic", "link": "https://stackoverflow.com/users/420156/allquixotic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 55942058, "answer_count": 1, "score": 0, "last_activity_date": 1556741142, "creation_date": 1556740464, "question_id": 55941926, "link": "https://stackoverflow.com/questions/55941926/tiberius-simple-query-as-per-documentation-compile-time-error", "title": "Tiberius simple_query as per documentation compile-time error", "body": "\n\n<p>According to the <a href=\"https://docs.rs/tiberius/0.3.2/tiberius/index.html\" rel=\"nofollow noreferrer\">Tiberius documentation</a>, using the <code>SQLConnection::simple_query()</code> function is as simple as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate futures;\nextern crate futures_state_stream;\nextern crate tokio;\nextern crate tiberius;\nuse futures::Future;\nuse futures_state_stream::StateStream;\nuse tokio::executor::current_thread;\nuse tiberius::SqlConnection;\n\nfn main() {\n\n   // 1: for windows we demonstrate the hardcoded variant\n   // which is equivalent to:\n   //     let conn_str = \"server=tcp:localhost,1433;integratedSecurity=true;\";\n   //     let future = SqlConnection::connect(conn_str).and_then(|conn| {\n   // and for linux we use the connection string from an environment variable\n   let conn_str = if cfg!(windows) {\n       \"server=tcp:localhost,1433;integratedSecurity=true;\".to_owned()\n   } else {\n       ::std::env::var(\"TIBERIUS_TEST_CONNECTION_STRING\").unwrap()\n   };\n\n   let future = SqlConnection::connect(conn_str.as_str())\n       .and_then(|conn| {\n           conn.simple_query(\"SELECT 1+2\").for_each(|row| {\n               let val: i32 = row.get(0);\n               assert_eq!(val, 3i32);\n               Ok(())\n           })\n       })\n       .and_then(|conn| conn.simple_exec(\"create table #Temp(gg int);\"))\n       .and_then(|(_, conn)| conn.simple_exec(\"UPDATE #Temp SET gg=1 WHERE gg=1\"));\n\n   current_thread::block_on_all(future).unwrap();\n}\n</code></pre>\n\n<p>However, I am using tiberius crate verson 0.3.2 as follows, and I get a compile-time error. I can't tell what I'm doing wrong because the <code>QueryResult</code> type doesn't indicate what kind of wrapper I need to wrap the value in (there's no manually written documentation or examples in the QueryResult docs, only auto-generated API docs, which are quite cryptic for a new Rust programmer! :( ) </p>\n\n<p>I'm used to processing <code>StdResult</code>s and <code>Option</code>s with things like <code>Ok()</code> and <code>Err()</code> and <code>Some()</code>, and I feel like I need to do something like <code>Ok(rslt)</code> on line 7 below, but that gives me a compile-time error too.</p>\n\n<ul>\n<li>Question 1: Is the documentation correct? If my code doesn't compile, I'd think the documentation code wouldn't either... unless I'm using the wrong version of Rust (using stable) or unless the Tiberius docs are only correct for some older version of Tiberius.</li>\n<li>Question 2: How do I fix the compile-time error and do something equivalent to the doc example? I just want to run one trivial query and return the results processed into a string.</li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn get_users() -&gt; String {\n    let conn_str : &amp;str = &amp;::std::env::var(\"SQLCONN\").expect(\"Could not obtain SQLCONN\");\n    let mut output = String::new();\n    let first : bool = true;\n    let future = SqlConnection::connect(conn_str)\n    .and_then(|conn| {\n        if let rslt = conn.simple_query(\"SELECT \\\"A\\\", \\\"B\\\"\") {\n            rslt.for_each(|row| {\n                let account : &amp;str = row.get(0);\n                let charName : &amp;str = row.get(1);\n                if first == false {\n                    output.push_str(\"\\r\\n\");\n                }\n                output.push_str(account);\n                output.push_str(\" is logged in as \");\n                output.push_str(charName);\n                first = false;\n                Ok(())\n            })\n        }\n    });\n    block_on_all(future).unwrap();\n    output\n}\n</code></pre>\n\n<p>Error output:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0599]: no method named `for_each` found for type `tiberius::stmt::QueryResult&lt;tiberius::query::ResultSetStream&lt;std::boxed::Box&lt;dyn tiberius::BoxableIo&gt;, tiberius::query::QueryStream&lt;std::boxed::Box&lt;dyn tiberius::BoxableIo&gt;&gt;&gt;&gt;` in the current scope\n   --&gt; src\\main.rs:104:18\n    |\n104 |             rslt.for_each(|row| {\n    |                  ^^^^^^^^\n    |\n    = note: the method `for_each` exists but the following trait bounds were not satisfied:\n            `&amp;mut tiberius::stmt::QueryResult&lt;tiberius::query::ResultSetStream&lt;std::boxed::Box&lt;dyn tiberius::BoxableIo&gt;, tiberius::query::QueryStream&lt;std::boxed::Box&lt;dyn tiberius::BoxableIo&gt;&gt;&gt;&gt; : futures_state_stream::StateStream`\n            `&amp;mut tiberius::stmt::QueryResult&lt;tiberius::query::ResultSetStream&lt;std::boxed::Box&lt;dyn tiberius::BoxableIo&gt;, tiberius::query::QueryStream&lt;std::boxed::Box&lt;dyn tiberius::BoxableIo&gt;&gt;&gt;&gt; : std::iter::Iterator`\n    = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope, perhaps add a `use` for it:\n    |\n2   | use futures_state_stream::StateStream;\n    |\n</code></pre>\n"}, {"tags": ["enums", "rust", "signature"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 2, "creation_date": 1556740035, "post_id": 55941560, "comment_id": 98536908, "body": "Note the lack of a <code>&amp;</code> at the beginning of &#214;mer Erden&#39;s answer - you&#39;re not returning a reference, you&#39;re returning a struct that <i>contains</i> a reference."}], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 2, "last_activity_date": 1556740722, "last_edit_date": 1556740722, "creation_date": 1556739956, "answer_id": 55941820, "question_id": 55941560, "link": "https://stackoverflow.com/questions/55941560/specify-lifetime-for-enum-as-return-type/55941820#55941820", "title": "Specify lifetime for enum as return type", "body": "<p>It expects lifetime parameter for Slide, you'll need to set it explicitly</p>\n\n<pre><code> -&gt; Option&lt;Slide&lt;'a&gt;&gt; \n</code></pre>\n\n<p>The difference is :</p>\n\n<ul>\n<li><code>&amp;'a Option&lt;Slide&gt;</code> means that i'll borrow <code>Option&lt;Slide&gt;</code> for the lifetime <code>'a</code>,</li>\n<li><code>Option&lt;Slide&lt;'a&gt;&gt;</code> means that i'll create <code>Slide</code> in lifetime <code>'a</code> so the inner operations can use this lifetime explicitly.</li>\n</ul>\n"}], "owner": {"reputation": 101, "user_id": 10581715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7254ccdcd62ac9394830ffb21a0ca7d?s=128&d=identicon&r=PG&f=1", "display_name": "Peekaboo", "link": "https://stackoverflow.com/users/10581715/peekaboo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 222, "favorite_count": 0, "closed_date": 1556742183, "accepted_answer_id": 55941820, "answer_count": 1, "score": 0, "last_activity_date": 1556740722, "creation_date": 1556738653, "question_id": 55941560, "link": "https://stackoverflow.com/questions/55941560/specify-lifetime-for-enum-as-return-type", "closed_reason": "Duplicate", "title": "Specify lifetime for enum as return type", "body": "<p>I can't figure out the correct way to specify the lifetime for the return type of <code>get_best_slide</code> which happens to be an <code>Enum</code>. This enum keeps reference to either one of <code>best_h</code> or <code>best_v</code>.</p>\n\n<p>It looks a lot like the <code>longest</code> function example from the <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-annotations-in-function-signatures\" rel=\"nofollow noreferrer\">official doc</a> except the return type is an <code>Enum</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub enum Image {\n    Horizontal { image_id: usize },\n    Vertical { image_id: usize },\n}\n\npub enum Slide&lt;'a&gt; {\n    H { h: &amp;'a Image },\n    V { v: &amp;'a Image, other_v: &amp;'a Image },\n}\n\nfn get_best_slide&lt;'a&gt;(\n    best_score_h: usize,\n    best_h: Option&lt;&amp;'a Image&gt;,\n    best_score_v: usize,\n    best_v: Option&lt;(&amp;'a Image, &amp;'a Image)&gt;,\n) -&gt; &amp;'a Option&lt;Slide&gt; {\n    match (best_h, best_v) {\n        (None, None) =&gt; None,\n        (Some(h), None) =&gt; Some(Slide::H { h }),\n        (None, Some((v0, v1))) =&gt; Some(Slide::V { v: v0, other_v: v1 }),\n        (Some(h), Some((v0, v1))) =&gt; {\n            if best_score_h &gt;= best_score_v {\n                Some(Slide::H { h })\n            } else {\n                Some(Slide::V { v: v0, other_v: v1 })\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>compiler is not happy:</p>\n\n<pre><code>error[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:16:17\n   |\n16 | ) -&gt; &amp;'a Option&lt;Slide&gt; {\n   |                 ^^^^^ expected lifetime parameter\n   |\n   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `best_h` or `best_v`\n</code></pre>\n\n<p>Maybe the lifetime parameter I specified is not at the right place?</p>\n\n<ul>\n<li><code>&amp;'a Option&lt;Slide&gt;</code> looks wrong</li>\n<li>I also tried <code>Option&lt;&amp;'a Slide&gt;</code> (compiler complains all the same)</li>\n</ul>\n"}, {"tags": ["rust", "rust-actix", "actix-web"], "comments": [{"owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "edited": false, "score": 0, "creation_date": 1556735766, "post_id": 55940403, "comment_id": 98535198, "body": "<a href=\"https://stackoverflow.com/help/mcve\">stackoverflow.com/help/mcve</a>"}], "answers": [{"tags": [], "owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "is_accepted": false, "score": 2, "last_activity_date": 1557092735, "last_edit_date": 1557092735, "creation_date": 1556748815, "answer_id": 55943368, "question_id": 55940403, "link": "https://stackoverflow.com/questions/55940403/need-ip-address-as-string-for-rate-limiting-rust-actix/55943368#55943368", "title": "Need IP address as string for rate limiting - Rust Actix", "body": "<p>Figured it out:</p>\n\n<pre><code>fn chat_route(req: &amp;HttpRequest&lt;WsChatSessionState&gt;) -&gt; Result&lt;HttpResponse, Error&gt; {\n    ws::start(\n        req,\n        WSSession {\n            id: 0,\n            hb: Instant::now(),\n            ip: req.connection_info().remote().to_string(),\n        },\n    )\n}\n</code></pre>\n"}], "owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 556, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1557092735, "creation_date": 1556732829, "question_id": 55940403, "link": "https://stackoverflow.com/questions/55940403/need-ip-address-as-string-for-rate-limiting-rust-actix", "title": "Need IP address as string for rate limiting - Rust Actix", "body": "<p>I'm trying to implement a rate-limiter based on IP address, in a websocket application, but I can't figure out how to get the IP address as a string. I've been scouring the docs and there's no mention of IP address.</p>\n\n<p>I have a <code>addr: Recipient&lt;WSMessage&gt;</code> and a context.</p>\n\n<p>So far I've tried <code>ctx.address()</code> - Can't convert to string\n<code>msg.addr.tx.0</code> - Can't unbox bc its private.</p>\n"}, {"tags": ["vector", "rust", "thread-synchronization", "rayon"], "comments": [{"owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "edited": false, "score": 0, "creation_date": 1556731984, "post_id": 55939552, "comment_id": 98533545, "body": "IMHO It is not possible in the <code>safe</code> rust, you should use <code>unsafe</code> rust."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1556743794, "post_id": 55939552, "comment_id": 98538269, "body": "If the compiler is not able to verify that an operation is safe, but you can proof that it is, using unsafe code can be a good choice. One option would be to wrap the objects in the vector in an <code>UnsafeCell</code>."}, {"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1556744391, "post_id": 55939552, "comment_id": 98538477, "body": "@SvenMarnach As far as I see, the <code>UnsafeCell</code> would still not be usable in a parallel iterator, since it&#39;s not <code>Sync</code>. I could make a custom type and <code>unsafe impl Sync</code> like it shows in the standard library documentation of <code>struct UnsafeCell</code>, but I&#39;m not sure what responsibilities then fall onto my shoulders. If you feel comfortable with it, feel free to expand your comment to an answer."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1556797428, "post_id": 55948639, "comment_id": 98555327, "body": "Note: iterating the <code>indices_to_update</code> in reverse order would avoid the index juggling. Apart from that, this seems to be the best way to do this in safe Rust."}, {"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 0, "creation_date": 1556816556, "post_id": 55948639, "comment_id": 98565895, "body": "Thanks, that looks like the basis for a great solution. If I were to swap the HashSet for something that&#39;s easy to recursively split in two (e.g., binary tree, or perhaps <code>hibitset</code>), I could recursively split the vector in two using <code>split_at_mut</code>. This fits nicely onto Rayon&#39;s fork/join model. It&#39;ll probably be somewhat slower than a &#39;dirty&#39; <code>unsafe</code> solution, but it does show that the safe abstraction offered by <code>Vec</code> gets us very far. I&#39;m considering your submission as the answer, but I&#39;ll wait a bit longer to see if anyone else has neat insights like yours, Sven&#39;s or E_net4&#39;s."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 6, "last_activity_date": 1556849470, "last_edit_date": 1556849470, "creation_date": 1556786429, "answer_id": 55948639, "question_id": 55939552, "link": "https://stackoverflow.com/questions/55939552/simultaneous-mutable-access-to-arbitrary-indices-of-a-large-vector-that-are-guar/55948639#55948639", "title": "Simultaneous mutable access to arbitrary indices of a large vector that are guaranteed to be disjoint", "body": "<p>You can sort <code>indices_to_update</code> and extract mutable references by calling <code>split_*_mut</code>. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let len = big_vector_of_elements.len();\n\nwhile has_things_to_do() {\n    let mut tail = big_vector_of_elements.as_mut_slice();\n\n    let mut indices_to_update = compute_indices();\n    // I assumed compute_indices() returns unsorted vector\n    // to highlight the importance of sorted order\n    indices_to_update.sort();\n\n    let mut elems = Vec::new();\n\n    for idx in indices_to_update {\n        // cut prefix, so big_vector[idx] will be tail[0]\n        tail = tail.split_at_mut(idx - (len - tail.len())).1;\n\n        // extract tail[0]\n        let (elem, new_tail) = tail.split_first_mut().unwrap();\n        elems.push(elem);\n\n        tail = new_tail;\n    }\n}\n</code></pre>\n\n<p>Double check everything in this code; I didn't test it. Then you can call <code>elems.par_iter(...)</code> or whatever.</p>\n"}, {"comments": [{"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 0, "creation_date": 1557169695, "post_id": 56009251, "comment_id": 98667204, "body": "Hi, thanks for your contribution. I have two questions about your answer. First: my question was about <i>parallel</i> iteration over the results. Your solution does not provide support for that as-is, and I don&#39;t see how to easily add that due to your use of <code>btree_set::range</code>. Can you clarify how you would suggest to make your solution (rayon-)parallelizable? Second \u2014 and perhaps also because of the need for parallelism \u2014 I wonder why this solution would be correct without the use of e.g. a <code>std::cell::Cell</code> to inform the compiler about unexpected mutability."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 0, "creation_date": 1557170174, "post_id": 56009251, "comment_id": 98667387, "body": "@Thierry yes, connecting the concepts would be useful, wouldn&#39;t it? I&#39;ve updated with an example. Does that answer both pieces?"}, {"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 0, "creation_date": 1557171898, "post_id": 56009251, "comment_id": 98667999, "body": "Thanks again. Storing the indices in a vector seems suboptimal, and I&#39;m not sure what <code>par_bridge</code> does internally, but it looks like it too is not <i>as</i> good as an optimal solution could be; <i>if</i> it is safe to index as you propose. Inspired by your solution, I think manually checking the lower and upper bound of the indices, and then using the <code>par_iter</code> directly on the <code>BTreeSet</code> would be better. But that&#39;s because I envision the <code>BTreeSet</code> to play nice with rayon&#39;s fork/join semantics, but I honestly get lost in the code implementing the parallel iterator. Regardless, thanks, +1"}, {"owner": {"reputation": 364, "user_id": 12698762, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72fb85f4e4cca59cd759f7b50fb31e55?s=128&d=identicon&r=PG&f=1", "display_name": "Adam", "link": "https://stackoverflow.com/users/12698762/adam"}, "edited": false, "score": 0, "creation_date": 1603180571, "post_id": 56009251, "comment_id": 113947252, "body": "Is there a way to do this without having to pre-collect all the mutable pointers?, for example by implementing some sort of method that gives access to a mutable pointer of the array?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1600827275, "last_edit_date": 1600827275, "creation_date": 1557160784, "answer_id": 56009251, "question_id": 55939552, "link": "https://stackoverflow.com/questions/55939552/simultaneous-mutable-access-to-arbitrary-indices-of-a-large-vector-that-are-guar/56009251#56009251", "title": "Simultaneous mutable access to arbitrary indices of a large vector that are guaranteed to be disjoint", "body": "<p>I think this is a reasonable place to use <code>unsafe</code> code. The logic itself is safe but cannot be checked by the compiler because it relies on knowledge outside of the type system (the contract of <code>BTreeSet</code>, which itself relies on the implementation of <code>Ord</code> and friends for <code>usize</code>).</p>\n<p>In this sample, we preemptively bounds check all the indices via <code>range</code>, so each call to <code>add</code> is safe to use. Since we take in a set, we know that all the indices are disjoint, so we aren't introducing mutable aliasing. It's important to get the raw pointer from the slice to avoid aliasing between the slice itself and the returned values.</p>\n<pre><code>use std::collections::BTreeSet;\n\nfn uniq_refs&lt;'i, 'd: 'i, T&gt;(\n    data: &amp;'d mut [T],\n    indices: &amp;'i BTreeSet&lt;usize&gt;,\n) -&gt; impl Iterator&lt;Item = &amp;'d mut T&gt; + 'i {\n    let start = data.as_mut_ptr();\n    let in_bounds_indices = indices.range(0..data.len());\n\n    // I copied this from a Stack Overflow answer\n    // without reading the text that explains why this is safe\n    in_bounds_indices.map(move |&amp;i| unsafe { &amp;mut *start.add(i) })\n}\n\nuse std::iter::FromIterator;\n\nfn main() {\n    let mut scores = vec![1, 2, 3];\n\n    let selected_scores: Vec&lt;_&gt; = {\n        // The set can go out of scope after we have used it.\n        let idx = BTreeSet::from_iter(vec![0, 2]);\n        uniq_refs(&amp;mut scores, &amp;idx).collect()\n    };\n\n    for score in selected_scores {\n        *score += 1;\n    }\n\n    println!(&quot;{:?}&quot;, scores);\n}\n</code></pre>\n<p>Once you have used this function to find all the separate mutable references, you can use Rayon to modify them in parallel:</p>\n<pre><code>use rayon::prelude::*; // 1.0.3\n\nfn example(scores: &amp;mut [i32], indices: &amp;BTreeSet&lt;usize&gt;) {\n    let selected_scores: Vec&lt;_&gt; = uniq_refs(scores, indices).collect();\n    selected_scores.into_par_iter().for_each(|s| *s *= 2);\n\n    // Or\n\n    uniq_refs(scores, indices).par_bridge().for_each(|s| *s *= 2);\n}\n</code></pre>\n<p>You may wish to consider using a bitset instead of a <code>BTreeMap</code> to be more efficient, but this answer uses only the standard library.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/48922420/155423\">How do I use Rayon with an existing iterator?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 0, "creation_date": 1593083581, "post_id": 62564887, "comment_id": 110658269, "body": "Great answer, thanks. It looks like some features used here weren&#39;t available back when I asked the question (<code>as_slice_of_cells</code> was stabilized in august 2019), but at this point, this is probably the best answer."}, {"owner": {"reputation": 391, "user_id": 8591928, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/637c2b00cd7c0ce72111ad977c2b89da?s=128&d=identicon&r=PG&f=1", "display_name": "Sorin Bolos", "link": "https://stackoverflow.com/users/8591928/sorin-bolos"}, "edited": false, "score": 1, "creation_date": 1610035082, "post_id": 62564887, "comment_id": 116010803, "body": "So how would this be used in a multy thread context? Because it does not implement Sync the compiler complains <code>std::cell::Cell&lt;i32&gt; cannot be shared between threads safely</code>"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 6, "last_activity_date": 1600874422, "last_edit_date": 1600874422, "creation_date": 1593036987, "answer_id": 62564887, "question_id": 55939552, "link": "https://stackoverflow.com/questions/55939552/simultaneous-mutable-access-to-arbitrary-indices-of-a-large-vector-that-are-guar/62564887#62564887", "title": "Simultaneous mutable access to arbitrary indices of a large vector that are guaranteed to be disjoint", "body": "<p>When the compiler can't enforce that mutable references to a slice elements aren't exclusive, <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>Cell</code></a> is pretty nice.</p>\n<p>You can transform a <code>&amp;mut [T]</code> into a <code>&amp;Cell&lt;[T]&gt;</code> using <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html#method.from_mut\" rel=\"nofollow noreferrer\"><code>Cell::from_mut</code></a>, and then a <code>&amp;Cell&lt;[T]&gt;</code> into a <code>&amp;[Cell&lt;T&gt;]</code> using <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html#method.as_slice_of_cells\" rel=\"nofollow noreferrer\"><code>Cell::as_slice_of_cells</code></a>. All of this is zero-cost: It's just there to guide the type-system.</p>\n<p>A <code>&amp;[Cell&lt;T&gt;]</code> is like a <code>&amp;[mut T]</code>, if that were possible to write: A shared reference to a slice of mutable elements. What you can do with <code>Cell</code>s is limited to read or replace \u2014 you can't get a reference, mutable or not, to the wrapped elements themselves. Rust also knows that <code>Cell</code> isn't thread-safe (it does not implement <a href=\"https://doc.rust-lang.org/std/marker/trait.Sync.html\" rel=\"nofollow noreferrer\"><code>Sync</code></a>). This guarantees that everything is safe, at no dynamic cost.</p>\n<pre><code>fn main() {\n    use std::cell::Cell;\n\n    let slice: &amp;mut [i32] = &amp;mut [1, 2, 3];\n    let cell_slice: &amp;Cell&lt;[i32]&gt; = Cell::from_mut(slice);\n    let slice_cell: &amp;[Cell&lt;i32&gt;] = cell_slice.as_slice_of_cells();\n    \n    let two = &amp;slice_cell[1];\n    let another_two = &amp;slice_cell[1];\n\n    println!(&quot;This is 2: {:?}&quot;, two);\n    println!(&quot;This is also 2: {:?}&quot;, another_two);\n    \n    two.set(42);\n    println!(&quot;This is now 42!: {:?}&quot;, another_two);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1603467401, "post_id": 64502824, "comment_id": 114055864, "body": "This code produces errors when run in Miri: error: <i>Undefined Behavior: no item granting read access to tag &lt;untagged&gt; found in borrow stack</i> / <i>this indicates a potential bug in the program: it performed an invalid operation, but the rules it violated are still experimental</i>."}, {"owner": {"reputation": 364, "user_id": 12698762, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72fb85f4e4cca59cd759f7b50fb31e55?s=128&d=identicon&r=PG&f=1", "display_name": "Adam", "link": "https://stackoverflow.com/users/12698762/adam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1603467855, "post_id": 64502824, "comment_id": 114056068, "body": "Only tested it on my windows machine using rust 1.47. Yields the expected results."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1603468593, "post_id": 64502824, "comment_id": 114056396, "body": "Yes, that\u2019s one of the possible outcomes of undefined behavior. Another equally valid outcome is that your disk is erased."}, {"owner": {"reputation": 364, "user_id": 12698762, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72fb85f4e4cca59cd759f7b50fb31e55?s=128&d=identicon&r=PG&f=1", "display_name": "Adam", "link": "https://stackoverflow.com/users/12698762/adam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1603469513, "post_id": 64502824, "comment_id": 114056832, "body": "Why is this undefined behavior? all I&#39;ve done is create a mutable pointer and convince the compiler it&#39;s safe to share across threads. As far as I know, undefined behavior can only arise in this context if you point the pointer at something out of bounds."}], "tags": [], "owner": {"reputation": 364, "user_id": 12698762, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72fb85f4e4cca59cd759f7b50fb31e55?s=128&d=identicon&r=PG&f=1", "display_name": "Adam", "link": "https://stackoverflow.com/users/12698762/adam"}, "is_accepted": false, "score": 1, "last_activity_date": 1603466482, "last_edit_date": 1603466482, "creation_date": 1603466392, "answer_id": 64502824, "question_id": 55939552, "link": "https://stackoverflow.com/questions/55939552/simultaneous-mutable-access-to-arbitrary-indices-of-a-large-vector-that-are-guar/64502824#64502824", "title": "Simultaneous mutable access to arbitrary indices of a large vector that are guaranteed to be disjoint", "body": "<p>Since I've been dealing with a similar problem, here's my solution which I don't recommend using unless absolutely necessary:</p>\n<pre><code>struct EvilPtr&lt;T&gt; {\n    ptr: *mut T,\n}\nimpl&lt;T&gt; EvilPtr&lt;T&gt; {\n    fn new(inp: &amp;mut T) -&gt; Self {\n        EvilPtr { ptr: inp as *mut T }\n    }\n    unsafe fn deref(&amp;self) -&gt; *mut T {\n        return self.ptr;\n    }\n}\n\nunsafe impl&lt;T&gt; Sync for EvilPtr&lt;T&gt; {}\nunsafe impl&lt;T&gt; Send for EvilPtr&lt;T&gt; {}\n</code></pre>\n<p>Now you can do:</p>\n<pre><code>let indices: [usize; 10] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet mut arr: [i32; 10] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nlet e = EvilPtr::new(&amp;mut arr[0]);\nunsafe {\n    indices.par_iter().for_each(|x: &amp;usize| {\n        *e.deref().add(*x) += *x as i32;\n    });\n}\nprintln!(&quot;{:?}&quot;, arr);\n</code></pre>\n<p>If you absolutely need to do this, I recommend you bury it under some user friendly interface, where you can be sure no error can occur.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 5976009, "user_type": "registered", "profile_image": "https://graph.facebook.com/10153679442709093/picture?type=large", "display_name": "Carl", "link": "https://stackoverflow.com/users/5976009/carl"}, "is_accepted": false, "score": 0, "last_activity_date": 1610662029, "creation_date": 1610662029, "answer_id": 65727589, "question_id": 55939552, "link": "https://stackoverflow.com/questions/55939552/simultaneous-mutable-access-to-arbitrary-indices-of-a-large-vector-that-are-guar/65727589#65727589", "title": "Simultaneous mutable access to arbitrary indices of a large vector that are guaranteed to be disjoint", "body": "<p>I had a related issue. I needed to assign to arbitrary columns of a 2D array in parallel. I used ndarray myarray.<a href=\"https://docs.rs/ndarray/0.14.0/ndarray/iter/struct.AxisChunksIterMut.html\" rel=\"nofollow noreferrer\">axis_chunks_iter_mut(nd::Axis(1), 1)</a> to iterate over every column.</p>\n"}], "owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1267, "favorite_count": 0, "accepted_answer_id": 62564887, "answer_count": 5, "score": 12, "last_activity_date": 1610662029, "creation_date": 1556728842, "last_edit_date": 1565791893, "question_id": 55939552, "link": "https://stackoverflow.com/questions/55939552/simultaneous-mutable-access-to-arbitrary-indices-of-a-large-vector-that-are-guar", "title": "Simultaneous mutable access to arbitrary indices of a large vector that are guaranteed to be disjoint", "body": "<h2>Context</h2>\n\n<p>I have a case where multiple threads must update objects stored in a shared vector. However, the vector is very large, and the number of elements to update is relatively small.</p>\n\n<h2>Problem</h2>\n\n<p>In a minimal example, the set of elements to update can be identified by a (hash-)set containing the indices of elements to update. The code could hence look as follows:</p>\n\n<pre><code>let mut big_vector_of_elements = generate_data_vector();\n\nwhile has_things_to_do() {\n    let indices_to_update = compute_indices();\n    indices_to_update.par_iter() // Rayon parallel iteration\n       .map(|index| big_vector_of_elements[index].mutate())\n       .collect()?;\n}\n</code></pre>\n\n<p>This is obviously disallowed in Rust: <code>big_vector_of_elements</code> cannot be borrowed mutably in multiple threads at the same time. However, wrapping each element in, e.g., a <code>Mutex</code> lock seems unnecessary: this specific case would be safe without explicit synchronization. Since the indices come from a set, they are guaranteed to be distinct. No two iterations in the <code>par_iter</code> touch the same element of the vector.</p>\n\n<h2>Restating my question</h2>\n\n<p>What would be the best way of writing a program that mutates elements in a vector in parallel, where the synchronization is already taken care of by the selection of indices, but where the compiler does not understand the latter?</p>\n\n<p>A near-optimal solution would be to wrap all elements in <code>big_vector_of_elements</code> in some hypothetical <code>UncontendedMutex</code> lock, which would be a variant of <code>Mutex</code> which is ridiculously fast in the uncontended case, and which may take arbitrarily long when contention occurs (or even panics). Ideally, an <code>UncontendedMutex&lt;T&gt;</code> should also be of the same size and alignment as <code>T</code>, for any <code>T</code>.</p>\n\n<h2>Related, but different questions:</h2>\n\n<p>Multiple questions can be answered with \"use Rayon's parallel iterator\", \"use <code>chunks_mut</code>\", or \"use <code>split_at_mut</code>\":</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/28599334/how-do-i-run-parallel-threads-of-computation-on-a-partitioned-array\">How do I run parallel threads of computation on a partitioned array?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/31644152/processing-vec-in-parallel-how-to-do-safely-or-without-using-unstable-features\">Processing vec in parallel: how to do safely, or without using unstable features?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/33818141/how-do-i-pass-disjoint-slices-from-a-vector-to-different-threads\">How do I pass disjoint slices from a vector to different threads?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/39928051/can-different-threads-write-to-different-sections-of-the-same-vec\">Can different threads write to different sections of the same Vec?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/49354237/how-to-give-each-cpu-core-mutable-access-to-a-portion-of-a-vec\">How to give each CPU core mutable access to a portion of a Vec?</a></li>\n</ul>\n\n<p>These answers do not seem relevant here, since those solutions imply iterating over the entire <code>big_vector_of_elements</code>, and then for each element figuring out whether anything needs to be changed. Essentially, this means that such a solution would look as follows:</p>\n\n<pre><code>let mut big_vector_of_elements = generate_data_vector();\n\nwhile has_things_to_do() {\n    let indices_to_update = compute_indices();\n    for (index, mut element) in big_vector_of_elements.par_iter().enumerate() {\n        if indices_to_update.contains(index) {\n            element.mutate()?;\n        }\n    }\n}\n</code></pre>\n\n<p>This solution takes time proportionate to the size of <code>big_vector_of_elements</code>, whereas the first solution loops only over a number of elements proportionate to the size of <code>indices_to_update</code>.</p>\n"}, {"tags": ["vector", "rust", "iterator", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 11437196, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fc808f5a5ac379a9d6937fc7db77cec?s=128&d=identicon&r=PG&f=1", "display_name": "emp8", "link": "https://stackoverflow.com/users/11437196/emp8"}, "edited": false, "score": 0, "creation_date": 1556721304, "post_id": 55937569, "comment_id": 98528577, "body": "Thanks, Stargateur! That did the trick! Sorry for the first confusing code example!"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1556721551, "last_edit_date": 1556721551, "creation_date": 1556719596, "answer_id": 55937569, "question_id": 55937248, "link": "https://stackoverflow.com/questions/55937248/how-can-i-send-my-vec-to-a-function-taking-an-iterator-as-a-parameter/55937569#55937569", "title": "How can I send my Vec to a function taking an Iterator as a parameter?", "body": "<p>Your problem is that <code>iter()</code> generate an <code>Iterator</code> on reference not on the value. So you need to have a reference and a lifetime to your function. It's better to make a bound on <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a> that allow more generality.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn my_func&lt;'a, Iter&gt;(iter: Iter)\nwhere\n    Iter: IntoIterator&lt;Item = &amp;'a MyStruct&gt;,\n{\n    for i in iter {\n        // Do something\n    }\n}\n</code></pre>\n\n<p>Call like this <code>my_func(&amp;self.my_structs);</code> or <code>my_func(self.my_structs.iter());</code></p>\n"}], "owner": {"reputation": 23, "user_id": 11437196, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fc808f5a5ac379a9d6937fc7db77cec?s=128&d=identicon&r=PG&f=1", "display_name": "emp8", "link": "https://stackoverflow.com/users/11437196/emp8"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 55937569, "answer_count": 1, "score": 2, "last_activity_date": 1556721551, "creation_date": 1556718294, "last_edit_date": 1556721001, "question_id": 55937248, "link": "https://stackoverflow.com/questions/55937248/how-can-i-send-my-vec-to-a-function-taking-an-iterator-as-a-parameter", "title": "How can I send my Vec to a function taking an Iterator as a parameter?", "body": "<p>I have an issue where I've got a function that takes in an <code>Iterator</code> of a specific struct type, and I want to send in my Vector that contains this same struct-type as a parameter to the function.</p>\n\n<p>I do not understand what I am doing wrong. I have tried several different things:</p>\n\n<ul>\n<li>Sending the <code>vecName.iter()</code> leaving me with this <code>error: error[E0271]: type mismatch resolving &lt;std::slice::Iter&lt;'_, code_test_lib::gfx::AsteroidDrawData&gt; as std::iter::Iterator&gt;::Item == code_test_lib::gfx::AsteroidDrawData</code></li>\n<li>Sending the <code>vecName.into_iter()</code> leaving me with this <code>error: error[E0507]: cannot move out of borrowed content</code></li>\n<li>Sending the <code>&amp;vecName.iter()</code> giving me this <code>error: error[E0277]: &amp;std::slice::Iter&lt;'_, code_test_lib::gfx::AsteroidDrawData&gt; is not an iterator</code></li>\n<li>Sending the <code>&amp;vecName.into_iter()</code> giving me this: <code>error[E0277]: &amp;std::vec::IntoIter&lt;code_test_lib::gfx::AsteroidDrawData&gt; is not an iterator</code></li>\n</ul>\n\n<p>I don't know how I can send the <code>Vec</code> to the function as an <code>Iterator</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct MyStruct {\n    pub dataA: f32,\n    pub dataB: f32,\n}\n\nstruct MyProgram {\n    my_structs: Vec&lt;MyStruct&gt;,\n}\n\npub trait BaseFunctions {\n    fn new() -&gt; Self;\n    fn run(&amp;mut self);\n}\n\nimpl BaseFunctions for MyProgram {\n    fn new() -&gt; Self {\n\n        //Create some data\n        let mut vec = Vec::new();\n        for x in 0..5 {\n            vec.push(MyStruct{\n                dataA: 1.0,\n                dataB: 1.0,\n            });\n        }\n\n        Self {\n            my_structs: vec,\n        }\n    }\n\n    fn run(&amp;mut self) {\n\n        my_func(\n            self.my_structs.into_iter(),\n        );\n    }\n}\n\npub fn my_func&lt;Iter&gt;(iter: Iter)\nwhere\n    Iter: Iterator&lt;Item = MyStruct&gt;, {\n        for i in iter {\n            // Do something\n        }\n}\n\n\nfn main() {\n    let mut program = MyProgram::new();\n    program.run();\n}\n\n</code></pre>\n"}, {"tags": ["rust", "hashset", "refcell"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 2, "creation_date": 1556707717, "post_id": 55932914, "comment_id": 98522721, "body": "I don&#39;t think doing a <code>HashSet&lt;Ref&lt;_&gt;&gt;</code> is a good idea, because <code>Ref</code> is just a wrapper of <code>&amp;T</code> to be used as a return of <code>borrow()</code>. Why not doing a <code>HashSet&lt;NodeRef&lt;T&gt;&gt;</code>? It is an <code>Rc</code> after all so you can do <code>set.insert(node.clone())</code> (it also fails but it looks easier to fix)."}, {"owner": {"reputation": 11085, "user_id": 1884158, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/TZDGc.jpg?s=128&g=1", "display_name": "modulitos", "link": "https://stackoverflow.com/users/1884158/modulitos"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1556787937, "post_id": 55932914, "comment_id": 98550588, "body": "<code>node.clone()</code> returns a <code>RefCell&lt;Node&lt;T&gt;&gt;</code>, so I&#39;m running into the same issue where the <code>Hash</code> trait isn&#39;t implemented for <code>RefCell&lt;Node&lt;T&gt;&gt;</code>, and I&#39;m not allowed to implement the trait because <code>RefCell</code> isn&#39;t defined in my module. Maybe I should find another way to add my <code>NodeRef</code> type - which is an <code>Rc</code> - to my HashSet?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1556788154, "post_id": 55932914, "comment_id": 98550704, "body": "Actually, <code>node</code> is a <code>NodeRef</code>, that is an alias of <code>Rc&lt;RefCell&lt;Node&lt;T&gt;&gt;&gt;</code>. And you are not allowed to implement <code>Hash</code> for that, but then, take a look at <a href=\"https://stackoverflow.com/q/25413201/865874\">this possible duplicate</a>."}, {"owner": {"reputation": 11085, "user_id": 1884158, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/TZDGc.jpg?s=128&g=1", "display_name": "modulitos", "link": "https://stackoverflow.com/users/1884158/modulitos"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1557221062, "post_id": 55932914, "comment_id": 98682706, "body": "@rodrigo Thank you so much for the tip! This led me to finding the solution, which involved defining a wrapped type for which I can implement the <code>Hash</code> trait. I posted the solution below. Your advice is very much appreciated  \ud83d\ude4f"}], "answers": [{"tags": [], "owner": {"reputation": 11085, "user_id": 1884158, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/TZDGc.jpg?s=128&g=1", "display_name": "modulitos", "link": "https://stackoverflow.com/users/1884158/modulitos"}, "is_accepted": true, "score": 1, "last_activity_date": 1557221346, "last_edit_date": 1557221346, "creation_date": 1557220968, "answer_id": 56019436, "question_id": 55932914, "link": "https://stackoverflow.com/questions/55932914/how-to-implement-the-stdhashhash-trait-on-external-data-types-in-rust/56019436#56019436", "title": "How to implement the std::hash::Hash trait on external data types in Rust?", "body": "<p>To add existing types to a HashSet, I followed <a href=\"https://stackoverflow.com/questions/55932914/how-to-add-rcrefcellmystructt-types-to-a-hashset-in-rust#comment98550704_55932914\">@rodrigo's advice</a> in the comments above, and defined a new wrapped type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct HashedNode&lt;T&gt;(Rc&lt;RefCell&lt;Node&lt;T&gt;&gt;&gt;);\n</code></pre>\n\n<p>Doing so allowed me to implement the <code>std::hash::Hash</code> trait on my <code>Rc&lt;RefCell&lt;Node&lt;T&gt;&gt;&gt;</code> type, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T: Hash&gt; std::hash::Hash for HashedNode&lt;T&gt; {\n  fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n     // ... etc\n  }\n}\n</code></pre>\n\n<p>This allowed me to define a HashSet and use it as needed:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut set: HashSet&lt;HashedNode&lt;i32&gt;&gt; = HashSet::new();\n</code></pre>\n\n<p>Note that there were a few other workarounds needed, like implementing the <code>Eq</code> trait for my new <code>HashedNode</code> type, as well as implementing a <code>From</code> trait and <code>from_node</code> utility method.</p>\n\n<p>Here's the finished code from the example above:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::{RefCell, Ref};\nuse std::fmt;\nuse std::fmt::Display;\nuse std::ptr;\nuse std::rc::Rc;\nuse std::hash::{Hash, Hasher};\nuse std::collections::HashSet;\n\npub type NodeRef&lt;T&gt; = Rc&lt;RefCell&lt;Node&lt;T&gt;&gt;&gt;;\n\n// Used specifically for hashing needs, like HashSet:\npub struct HashedNode&lt;T&gt;(NodeRef&lt;T&gt;);\n\n#[derive(Debug)]\npub struct LinkedList&lt;T&gt; {\n    pub head: Option&lt;NodeRef&lt;T&gt;&gt;,\n}\n\n// #[derive(Hash)]\npub struct Node&lt;T&gt; {\n    pub data: T,\n    pub next: Option&lt;NodeRef&lt;T&gt;&gt;,\n}\n\nimpl&lt;T: fmt::Debug&gt; fmt::Debug for Node&lt;T&gt; {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Node {{ data: {:?}, next: {:?} }}\", self.data, self.next)\n    }\n}\n\nimpl&lt;T&gt; LinkedList&lt;T&gt;\nwhere\n    T: std::cmp::Eq\n        + std::hash::Hash\n        + std::clone::Clone\n        + std::cmp::PartialOrd\n        + std::cmp::PartialOrd\n        + std::fmt::Debug,\n{\n    pub fn new() -&gt; Self {\n        Self { head: None }\n    }\n\n    pub fn append(&amp;mut self, new_value: T) {\n        if let Some(tail) = self.tail() {\n            tail.borrow_mut().next = Some(Rc::new(RefCell::new(Node {\n                data: new_value,\n                next: None,\n            })));\n        } else {\n            self.head = Some(Rc::new(RefCell::new(Node {\n                data: new_value,\n                next: None,\n            })));\n        }\n    }\n\n    pub fn tail(&amp;self) -&gt; Option&lt;NodeRef&lt;T&gt;&gt; {\n        for node in self.iter() {\n            if let None = node.clone().borrow().next {\n                return Some(node);\n            }\n        }\n        None\n    }\n\n    pub fn iter(&amp;self) -&gt; Iter&lt;T&gt; {\n        Iter {\n            next: self.head.clone(),\n        }\n    }\n}\n\n#[derive(Debug)]\npub struct Iter&lt;T&gt; {\n    next: Option&lt;NodeRef&lt;T&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; Iterator for Iter&lt;T&gt; {\n    type Item = NodeRef&lt;T&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if let Some(next) = self.next.clone() {\n            // Set the new self.next:\n            if let Some(new_next) = next.borrow().next.clone() {\n                self.next = Some(new_next);\n            } else {\n                self.next = None;\n            }\n\n            return Some(next);\n        } else {\n            None\n        }\n    }\n}\n\nimpl&lt;T: Display&gt; Display for LinkedList&lt;T&gt; {\n    fn fmt(&amp;self, w: &amp;mut std::fmt::Formatter) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; {\n        write!(w, \"[\")?;\n        let mut node = self.head.clone();\n        while let Some(n) = node {\n            write!(w, \"{}\", n.borrow().data)?;\n            node = n.borrow().next.clone();\n            if node.is_some() {\n                write!(w, \", \")?;\n            }\n        }\n        write!(w, \"]\")\n    }\n}\n\nimpl&lt;T: PartialEq&gt; PartialEq for Node&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        if ptr::eq(self, other) {\n            // For loop detection - if the nodes share the same\n            // reference, they are equal.\n            return true;\n        }\n        self.data == other.data &amp;&amp; self.next == other.next\n    }\n\n    fn ne(&amp;self, other: &amp;Self) -&gt; bool {\n        if !ptr::eq(self, other) {\n            return true;\n        }\n        self.data != other.data &amp;&amp; self.next == other.next\n    }\n}\n\n// By implementing Eq, we are making the promise that our\n// implementation of PartialEq is reflexive.\nimpl&lt;T: Eq&gt; Eq for Node&lt;T&gt; {\n}\n\n\nimpl&lt;T: Hash&gt; std::hash::Hash for HashedNode&lt;T&gt; {\n    fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n        // TODO: make hash work for nodes that have the same data\n        self.0.borrow().data.hash(state);\n    }\n}\n\nimpl&lt;T&gt; From&lt;T&gt; for HashedNode&lt;T&gt; {\n    fn from(item: T) -&gt; Self {\n        HashedNode(Rc::new(RefCell::new(Node {\n            data: item,\n            next: None,\n        })))\n    }\n}\n\nimpl&lt;T&gt; HashedNode&lt;T&gt; {\n    pub fn from_node(node: NodeRef&lt;T&gt;) -&gt; Self {\n        HashedNode(node)\n    }\n}\n\n\nimpl&lt;T: PartialEq&gt; PartialEq for HashedNode&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        if ptr::eq(self, other) {\n            // For loop detection - if the nodes share the same\n            // reference, they are equal.\n            return true;\n        }\n        let other_node = other.0.borrow();\n        let self_node = self.0.borrow();\n        self_node.data == other_node.data &amp;&amp; self_node.next == other_node.next\n    }\n}\n\nimpl&lt;T: Eq&gt; Eq for HashedNode&lt;T&gt; {}\n\nimpl&lt;T: PartialEq&gt; PartialEq for LinkedList&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        self.head == other.head\n    }\n\n    fn ne(&amp;self, other: &amp;Self) -&gt; bool {\n        self.head != other.head\n    }\n}\n\nimpl&lt;T: Eq + std::fmt::Debug&gt; Eq for LinkedList&lt;T&gt; {}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn eq() {\n        let mut list = LinkedList::new();\n        list.append(1);\n        list.append(2);\n        list.append(3);\n        let mut list2 = LinkedList::new();\n        list2.append(1);\n        list2.append(2);\n        list2.append(3);\n\n        assert_eq!(list, list2);\n        list2 = LinkedList::new();\n        list2.append(3);\n        assert_ne!(list, list2);\n        list = LinkedList::new();\n        list.append(3);\n        assert_eq!(list, list2);\n    }\n\n    #[test]\n    fn append() {\n        let mut list = LinkedList::new();\n        list.append(1);\n        list.append(2);\n        list.append(3);\n        let mut list2 = LinkedList::new();\n        list2.append(1);\n        list2.append(2);\n        list2.append(3);\n\n        assert_eq!(list, list2);\n        list2.append(1);\n        assert_ne!(list, list2);\n        list.append(1);\n        assert_eq!(list, list2);\n    }\n\n    #[test]\n    // Tests that our nodes can be hashed and saved into a set.\n    fn hashset_iter_nodes() {\n        let node = Rc::new(RefCell::new(Node{ data: 9, next: None}));\n        let mut list = LinkedList::new();\n        list.append(1);\n        list.append(2);\n        list.append(3);\n        list.append_node(node.clone());\n\n        let mut set: HashSet&lt;HashedNode&lt;i32&gt;&gt; = HashSet::new();\n        // iterate over nodes, adding each node to our hashset:\n        for node in list.iter() {\n            set.insert(HashedNode::from_node(node));\n        }\n        assert_eq!(set.contains(&amp;HashedNode::from_node(node)), true);\n        assert_eq!(set.contains(&amp;HashedNode::from(4)), false);\n        assert_eq!(set.len(), 4);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 11085, "user_id": 1884158, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/TZDGc.jpg?s=128&g=1", "display_name": "modulitos", "link": "https://stackoverflow.com/users/1884158/modulitos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1032, "favorite_count": 0, "closed_date": 1557276987, "accepted_answer_id": 56019436, "answer_count": 1, "score": 0, "last_activity_date": 1557275061, "creation_date": 1556695578, "last_edit_date": 1557275061, "question_id": 55932914, "link": "https://stackoverflow.com/questions/55932914/how-to-implement-the-stdhashhash-trait-on-external-data-types-in-rust", "closed_reason": "Duplicate", "title": "How to implement the std::hash::Hash trait on external data types in Rust?", "body": "<p>I have a basic LinkedList implementation, where I want to iterate through my nodes, and add those nodes to a HashSet. I am unable to do this, however, because my nodes are wrapped in an <code>Rc&lt;RefCell&lt;Node&lt;T&gt;&gt;&gt;</code>, and I'm having trouble implementing the <code>std::hash::Hash</code> trait for my <code>std::cell::Ref&lt;'_, Node&lt;T&gt;&gt;</code> type.</p>\n\n<p>How can I implement the <code>Hash</code> trait for this example? Or am I missing something?</p>\n\n<p>Here is an example with a failing test case that attempts to add some nodes to a <code>HashSet</code>:</p>\n\n<p>Here is the source on Rust playground:\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d79329dcb70ba54ff803dbcd93bd47d0\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d79329dcb70ba54ff803dbcd93bd47d0</a></p>\n\n<p>Here is the source:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::{RefCell, Ref};\nuse std::fmt;\nuse std::fmt::Display;\nuse std::ptr;\nuse std::rc::Rc;\nuse std::hash::{Hash, Hasher};\nuse std::collections::HashSet;\n\npub type NodeRef&lt;T&gt; = Rc&lt;RefCell&lt;Node&lt;T&gt;&gt;&gt;;\n\n#[derive(Debug)]\npub struct LinkedList&lt;T&gt; {\n    pub head: Option&lt;NodeRef&lt;T&gt;&gt;,\n}\n\n// #[derive(Hash)]\npub struct Node&lt;T&gt; {\n    pub data: T,\n    pub next: Option&lt;NodeRef&lt;T&gt;&gt;,\n}\n\nimpl&lt;T: fmt::Debug&gt; fmt::Debug for Node&lt;T&gt; {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Node {{ data: {:?}, next: {:?} }}\", self.data, self.next)\n    }\n}\n\nimpl&lt;T&gt; LinkedList&lt;T&gt;\nwhere\n    T: std::cmp::Eq\n        + std::hash::Hash\n        + std::clone::Clone\n        + std::cmp::PartialOrd\n        + std::cmp::PartialOrd\n        + std::fmt::Debug,\n{\n    pub fn new() -&gt; Self {\n        Self { head: None }\n    }\n\n    pub fn append(&amp;mut self, new_value: T) {\n        if let Some(tail) = self.tail() {\n            tail.borrow_mut().next = Some(Rc::new(RefCell::new(Node {\n                data: new_value,\n                next: None,\n            })));\n        } else {\n            self.head = Some(Rc::new(RefCell::new(Node {\n                data: new_value,\n                next: None,\n            })));\n        }\n    }\n\n    pub fn tail(&amp;self) -&gt; Option&lt;NodeRef&lt;T&gt;&gt; {\n        for node in self.iter() {\n            if let None = node.clone().borrow().next {\n                return Some(node);\n            }\n        }\n        None\n    }\n\n    pub fn iter(&amp;self) -&gt; Iter&lt;T&gt; {\n        Iter {\n            next: self.head.clone(),\n        }\n    }\n}\n\n#[derive(Debug)]\npub struct Iter&lt;T&gt; {\n    next: Option&lt;NodeRef&lt;T&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; Iterator for Iter&lt;T&gt; {\n    type Item = NodeRef&lt;T&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if let Some(next) = self.next.clone() {\n            // Set the new self.next:\n            if let Some(new_next) = next.borrow().next.clone() {\n                self.next = Some(new_next);\n            } else {\n                self.next = None;\n            }\n\n            return Some(next);\n        } else {\n            None\n        }\n    }\n}\n\nimpl&lt;T: Display&gt; Display for LinkedList&lt;T&gt; {\n    fn fmt(&amp;self, w: &amp;mut std::fmt::Formatter) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; {\n        write!(w, \"[\")?;\n        let mut node = self.head.clone();\n        while let Some(n) = node {\n            write!(w, \"{}\", n.borrow().data)?;\n            node = n.borrow().next.clone();\n            if node.is_some() {\n                write!(w, \", \")?;\n            }\n        }\n        write!(w, \"]\")\n    }\n}\n\nimpl&lt;T: PartialEq&gt; PartialEq for Node&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        if ptr::eq(self, other) {\n            // For loop detection - if the nodes share the same\n            // reference, they are equal.\n            return true;\n        }\n        self.data == other.data &amp;&amp; self.next == other.next\n    }\n\n    fn ne(&amp;self, other: &amp;Self) -&gt; bool {\n        if !ptr::eq(self, other) {\n            return true;\n        }\n        self.data != other.data &amp;&amp; self.next == other.next\n    }\n}\n\n// By implementing Eq, we are making the promise that our\n// implementation of PartialEq is reflexive.\nimpl&lt;T: Eq&gt; Eq for Node&lt;T&gt; {\n}\n\n\nimpl&lt;T: Hash&gt; std::hash::Hash for Node&lt;T&gt; {\n    fn hash&lt;H&gt;(&amp;self, state: &amp;mut H)\n        where H: std::marker::Sized + Hasher\n    {\n        self.data.hash(state);\n        if let Some(next) = self.next.clone() {\n            next.borrow().hash(state);\n        }\n    }\n}\n\n// // TODO: HELP!!!\n// // Trying to implement Hash trait for Ref&lt;'_, Node&lt;T&gt;&gt;:\n// impl&lt;Node: Hash&gt; std::hash::Hash for Ref&lt;'_, Node&gt; {\n//     fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n//         self.data.hash(state);\n//         if let Some(next) = self.next.clone() {\n//             next.borrow().hash(state);\n//         }\n//     }\n// }\n\nimpl&lt;T: PartialEq&gt; PartialEq for LinkedList&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        self.head == other.head\n    }\n\n    fn ne(&amp;self, other: &amp;Self) -&gt; bool {\n        self.head != other.head\n    }\n}\n\nimpl&lt;T: Eq + std::fmt::Debug&gt; Eq for LinkedList&lt;T&gt; {}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn eq() {\n        let mut list = LinkedList::new();\n        list.append(1);\n        list.append(2);\n        list.append(3);\n        let mut list2 = LinkedList::new();\n        list2.append(1);\n        list2.append(2);\n        list2.append(3);\n\n        assert_eq!(list, list2);\n        list2 = LinkedList::new();\n        list2.append(3);\n        assert_ne!(list, list2);\n        list = LinkedList::new();\n        list.append(3);\n        assert_eq!(list, list2);\n    }\n\n    #[test]\n    fn append() {\n        let mut list = LinkedList::new();\n        list.append(1);\n        list.append(2);\n        list.append(3);\n        let mut list2 = LinkedList::new();\n        list2.append(1);\n        list2.append(2);\n        list2.append(3);\n\n        assert_eq!(list, list2);\n        list2.append(1);\n        assert_ne!(list, list2);\n        list.append(1);\n        assert_eq!(list, list2);\n    }\n\n    // TODO: fix this test case!\n    #[test]\n    fn hashset_iter_nodes() {\n        let mut list = LinkedList::new();\n        list.append(1);\n        list.append(2);\n        list.append(3);\n\n        // the trait bound `std::cell::Ref&lt;'_, Node&lt;{integer}&gt;&gt;:\n        // std::hash::Hash` is not satisfied (the trait `std::hash::Hash` is\n        // not implemented for `std::cell::Ref&lt;'_, Node&lt;{integer}&gt;&gt;`)\n        // [E0277]\n        // the trait bound `std::cell::Ref&lt;'_, Node&lt;{integer}&gt;&gt;:\n        // std::cmp::Eq` is not satisfied (the trait `std::cmp::Eq` is\n        // not implemented for `std::cell::Ref&lt;'_, Node&lt;{integer}&gt;&gt;`)\n        // [E0277]\n        let mut set = HashSet::new();\n        // iterate over nodes, adding each node to our hashset:\n        for node in list.iter() {\n            println!(\"iterating over node: {:?}\", node);\n            set.insert(&amp;node.borrow());\n        }\n        assert_eq!(set.len(), 3);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1556685331, "post_id": 55931616, "comment_id": 98516278, "body": "Thanks for the detailed reply. I have updated the question with the next method being called."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1556688618, "post_id": 55931616, "comment_id": 98516979, "body": "How far down do these integral ID&#39;s get passed? It might be cleanest to pass a vector of integers all the way down until this vector is iterated over - then convert it to a <code>&amp;str</code> as required in that loop."}, {"owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1556717883, "post_id": 55931616, "comment_id": 98526930, "body": "It doesn&#39;t go down any more levels. I think add_queue should do the conversion, as meta_handler.one().add_fetch_queue(ids).execute() is used by other functions where the original ids are alphanumeric. What do you think?"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1556721653, "post_id": 55931616, "comment_id": 98528765, "body": "I&#39;ll be honest - its a bit hard to give advice without seeing it as a whole. That said, my advice would just be to do the double-handling/conversions as far down the call stack as you can. If doing it inside <code>add_queue</code> is where you think it should sit then that sounds fine."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 2, "last_activity_date": 1556684888, "creation_date": 1556684888, "answer_id": 55931616, "question_id": 55931401, "link": "https://stackoverflow.com/questions/55931401/why-cant-i-return-a-vecstr-from-a-function/55931616#55931616", "title": "Why can&#39;t I return a Vec&lt;&amp;str&gt; from a function?", "body": "<p>The lifetime you've introduced is saying \"I am returning a vector of string references whose lifetime outlives this function\". That isn't true, because you're creating a <code>String</code> then storing a reference to it. That reference will die at the end of the scope the <code>String</code> is created in.</p>\n\n<p>To answer your question purely from a \"design\" POV:</p>\n\n<blockquote>\n  <p>should I be returning a Vec&lt;&amp;str> or just return a Vec of String type and let the caller handle the conversion?</p>\n</blockquote>\n\n<p>The method is called <code>latest_ids</code> .. and the ID's you're passing in are 64-bit integers. I think its acceptable given the name of the method that you should return 64-bit integers and the caller should do the conversion.</p>\n\n<pre><code>fn main() -&gt; std::io::Result&lt;()&gt; {\n\n    let ids: Vec&lt;String&gt; = latest_ids(5, 10).iter().map(|n| n.to_string()).collect();\n    let ids_as_string_references: Vec&lt;&amp;str&gt; = ids.iter().map(|n| &amp;**n).collect();\n\n    println!(\"{:?}\", ids_as_string_references);\n\n    Ok(())\n}\n\nfn latest_ids(current_id: u64, latest_id: u64) -&gt; Vec&lt;u64&gt; {\n    let mut ids = vec![];\n    let mut start = current_id;\n    while !(start &gt;= latest_id) {\n        start += 1;\n        ids.push(start);\n    }\n    ids\n}\n</code></pre>\n\n<p>Prints: <code>[\"6\", \"7\", \"8\", \"9\", \"10\"]</code></p>\n\n<p>The double handling here is because you asked for references. Depending on further context around the code, the double handling might not be required. If you update your question with more information about the next function that requires a vector of <code>&amp;str</code> references I can update my answer to help redesign it.</p>\n"}], "owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1344, "favorite_count": 0, "accepted_answer_id": 55931616, "answer_count": 1, "score": 5, "last_activity_date": 1593114993, "creation_date": 1556682567, "last_edit_date": 1593114993, "question_id": 55931401, "link": "https://stackoverflow.com/questions/55931401/why-cant-i-return-a-vecstr-from-a-function", "title": "Why can&#39;t I return a Vec&lt;&amp;str&gt; from a function?", "body": "<p>I am trying to return a <code>Vec&lt;&amp;str&gt;</code> but have been having issues converting <code>u64</code> to <code>&amp;str</code> inside the while loop:</p>\n<pre><code>fn latest_ids&lt;'a&gt;(current_id: u64, latest_id: u64) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut ids: Vec&lt;&amp;str&gt; = vec![];\n    let mut start = current_id;\n    while !(start &gt;= latest_id) {\n        start += 1;\n        ids.push(start.to_string().as_str());\n    }\n    ids\n}\n</code></pre>\n<blockquote>\n<p>cannot return value referencing temporary value</p>\n</blockquote>\n<p>If I return just a <code>Vec&lt;String&gt;</code> then it works fine.</p>\n<pre><code>fn latest_ids&lt;'a&gt;(current_id: u64, latest_id: u64) -&gt; Vec&lt;String&gt; {\n    let mut ids: Vec&lt;String&gt; = vec![];\n    let mut start = current_id;\n    while !(start &gt;= latest_id) {\n        start += 1;\n        ids.push(start.to_string());\n    }\n    ids\n}\n</code></pre>\n<p>The next function that is called after this requires a <code>&amp;str</code> type parameter so should I be returning a <code>Vec&lt;&amp;str&gt;</code> or just return a <code>Vec&lt;String&gt;</code> and let the caller handle the conversion?</p>\n<p>Next function to be called after getting the result of <code>latest_ids()</code>:</p>\n<pre><code>pub fn add_queue(job: &amp;Job, ids: Vec&lt;&amp;str&gt;) -&gt; Result&lt;(), QueueError&gt; {\n    let meta_handler = MetaService {};\n\n    match job.meta_type {\n        MetaType::One =&gt; meta_handler.one().add_fetch_queue(ids).execute(),\n        MetaType::Two =&gt; meta_handler.two().add_fetch_queue(ids).execute(),\n        MetaType::Three =&gt; meta_handler.three().add_fetch_queue(ids).execute(),\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 11435297, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-fRSMorrTC8U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rciZB6UAUH6beSuE_-TFO4rOfPgug/mo/photo.jpg?sz=128", "display_name": "Will H", "link": "https://stackoverflow.com/users/11435297/will-h"}, "edited": false, "score": 0, "creation_date": 1556679881, "post_id": 55931049, "comment_id": 98515344, "body": "The reason I was returning a &amp;str was that I then match on foo&#39;s result. It seemed tedious to write .to_string() after &quot;asdf&quot;, etc. Should I just be writing .to_string() and matching on Strings instead of &amp;str&#39;s then?"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 1, "user_id": 11435297, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-fRSMorrTC8U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rciZB6UAUH6beSuE_-TFO4rOfPgug/mo/photo.jpg?sz=128", "display_name": "Will H", "link": "https://stackoverflow.com/users/11435297/will-h"}, "edited": false, "score": 0, "creation_date": 1556683302, "post_id": 55931049, "comment_id": 98515936, "body": "I have updated my answer. Essentially you can slice it an compare it to a <code>&amp;str</code>."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 0, "last_activity_date": 1556683281, "last_edit_date": 1556683281, "creation_date": 1556678813, "answer_id": 55931049, "question_id": 55931018, "link": "https://stackoverflow.com/questions/55931018/passing-initialized-dummy-str-so-it-can-be-filled-by-a-function/55931049#55931049", "title": "Passing initialized dummy &amp;str so it can be filled by a function", "body": "<p>You don't need to pass a reference around, you can pass ownership of a local variable outside of the function no problem. <code>String</code>s also dereference into a <code>&amp;str</code> if you absolutely need one:</p>\n\n<pre><code>fn main() -&gt; std::io::Result&lt;()&gt; {\n    let n = 55;\n    let x = foo(n);\n\n    match &amp;x[..] {\n        \"querty\" =&gt; println!(\"Yep it was qwerty!\"),\n        _ =&gt; println!(\"Nope it wasn't qwerty :(\")\n    };\n\n    Ok(())\n}\n\nfn foo(n: u64) -&gt; String {\n    if n == 0 {\n        String::from(\"asdf\")\n    } else {\n        String::from(\"querty\")\n    }\n}\n</code></pre>\n\n<p>Prints \"Yep it was qwerty!\".</p>\n\n<p>Playground: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d7830c124171ab8a3c64f55a5c89590f\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d7830c124171ab8a3c64f55a5c89590f</a></p>\n\n<p>Edited to include matching as per your comment.</p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1556779443, "creation_date": 1556779443, "answer_id": 55946972, "question_id": 55931018, "link": "https://stackoverflow.com/questions/55931018/passing-initialized-dummy-str-so-it-can-be-filled-by-a-function/55946972#55946972", "title": "Passing initialized dummy &amp;str so it can be filled by a function", "body": "<p>In your example, you are returning static strings, so you can do this:</p>\n\n<pre><code>fn foo(n: u64) -&gt; &amp;'static str {\n    if n == 0 {\n        \"asdf\"\n    } else {\n        \"querty\"\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "is_accepted": false, "score": 0, "last_activity_date": 1608134661, "last_edit_date": 1608134661, "creation_date": 1556784566, "answer_id": 55948144, "question_id": 55931018, "link": "https://stackoverflow.com/questions/55931018/passing-initialized-dummy-str-so-it-can-be-filled-by-a-function/55948144#55948144", "title": "Passing initialized dummy &amp;str so it can be filled by a function", "body": "<p>You absolutely can do that, but you need to pass in a mutable reference, also you wouldn't be able to change the content of the <code>&amp;str</code> (if that's what you're intending to do; <code>&amp;str</code> are immutable in it self). You would just change <code>m</code> to point to another <code>&amp;str</code>. This works seemlessly because <code>&quot;asdf&quot;</code> &amp; <code>&quot;qwerty&quot;</code> are <code>'static</code> <code>str</code>s.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut m: &amp;str = &quot;&quot;;\n\n    foo(42, &amp;mut m);\n    dbg!(m);\n\n    foo(0, &amp;mut m);\n    dbg!(m);\n}\n\nfn foo(n: u64, m: &amp;mut &amp;str) {\n    if n == 0 {\n        *m = &quot;asdf&quot;;\n    } else {\n        *m = &quot;qwerty&quot;;\n    }\n}\n\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=de958d53198db1f7691ae953e1ffc63c\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=de958d53198db1f7691ae953e1ffc63c</a></p>\n"}], "owner": {"reputation": 1, "user_id": 11435297, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-fRSMorrTC8U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rciZB6UAUH6beSuE_-TFO4rOfPgug/mo/photo.jpg?sz=128", "display_name": "Will H", "link": "https://stackoverflow.com/users/11435297/will-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 55931049, "answer_count": 3, "score": -4, "last_activity_date": 1608134661, "creation_date": 1556678408, "question_id": 55931018, "link": "https://stackoverflow.com/questions/55931018/passing-initialized-dummy-str-so-it-can-be-filled-by-a-function", "title": "Passing initialized dummy &amp;str so it can be filled by a function", "body": "<p>My program initializes a variable \"mag\", and then passes it to a function that modifies it according to an int. </p>\n\n<pre><code>let n = some_number;\nlet m = \"\";\nx = foo(n, m);\n\nfn foo(n: u64, mut m: &amp;str) -&gt; &amp;str {\n    if n == 0 {\n        m = \"asdf\";\n    } else {\n        m = \"qwerty\";\n    return mag;\n}\n</code></pre>\n\n<p>However I get a complier warning that mag is never read. I can't return a variable created inside a function, so I have to initialize mag outside. Is there a better way of doing this?</p>\n"}, {"tags": ["haskell", "rust"], "answers": [{"comments": [{"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1556676444, "post_id": 55930784, "comment_id": 98514810, "body": "Oh, I was just missing the <code>move</code>. Thanks!"}], "tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 10, "last_activity_date": 1556675994, "creation_date": 1556675994, "answer_id": 55930784, "question_id": 55930767, "link": "https://stackoverflow.com/questions/55930767/is-it-possible-to-write-haskells-flip-function-in-rust/55930784#55930784", "title": "Is it possible to write Haskell&#39;s flip function in Rust?", "body": "<p>I'm not sure what error you're getting, but I was able to implement it properly with this code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2b7f5d2e4627fca0dc7291247e546198\" rel=\"noreferrer\">playground link for testing</a>):</p>\n\n<pre><code>fn flip&lt;A, B, C, F&gt;(f: F) -&gt; impl Fn(B, A) -&gt; C where F: Fn(A, B) -&gt;C {\n    move |a,b| f(b, a)\n}\n\nfn main() {\n    let sub = |a, b| a - b;\n    let flipped = flip(sub);\n    println!(\"Result: {}\", flipped(5, 10));\n}\n</code></pre>\n\n<p>Note the <code>move</code> keyword here, which is required to force the closure returned by <code>flip</code> to take ownership of <code>f</code>.</p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 1, "accepted_answer_id": 55930784, "answer_count": 1, "score": 5, "last_activity_date": 1556675994, "creation_date": 1556675783, "question_id": 55930767, "link": "https://stackoverflow.com/questions/55930767/is-it-possible-to-write-haskells-flip-function-in-rust", "title": "Is it possible to write Haskell&#39;s flip function in Rust?", "body": "<p>Haskell's <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:flip\" rel=\"noreferrer\">flip</a> function is defined as follows:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>flip :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c\nflip f x y =  f y x\n</code></pre>\n\n<p>All it does is take a function and return another function that has its two parameters reversed. If you called a function <code>f</code> as <code>f a b</code> (<code>f(a, b)</code> in Rust-like syntax), you would call <code>flip f</code> as <code>(flip f) b a</code>.</p>\n\n<p>My unsuccessful attempt at writing this in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn flip&lt;A, B, C, F: Fn(A, B) -&gt; C&gt;(f: F) -&gt; impl Fn(B, A) -&gt; C {\n    |a, b| f(b, a)\n}\n</code></pre>\n\n<p>Is it possible to write this in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "edited": false, "score": 0, "creation_date": 1557918686, "post_id": 55930340, "comment_id": 98925266, "body": "Can you expand on what your problems with using <code>Cow</code> are? Why do you not want to expose <code>Cow</code> as an input, and why is <code>Cow::to_mut</code> not good for your use case?"}], "owner": {"reputation": 45, "user_id": 2308478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70ef3c81d0cea54f6104274f8a0ee949?s=128&d=identicon&r=PG", "display_name": "Joe Mitchell", "link": "https://stackoverflow.com/users/2308478/joe-mitchell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 99, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1556671170, "creation_date": 1556671170, "question_id": 55930340, "link": "https://stackoverflow.com/questions/55930340/rust-idiom-for-clone-if-immutable-or-ref", "title": "Rust idiom for &quot;clone if immutable or ref&quot;", "body": "<p>I'm trying to make a generic method interface that takes several ref-types and tries to save a clone if possible. I have two issues:</p>\n\n<ol>\n<li>There are a lot of traits about referencing &amp; such, but I'm not sure how to apply them so that you can tell btwn value, mut value, ref, mut ref in a single generic function.</li>\n<li>Is there a best practice for clone if needed? I've played with Cow, From/Into, ToOwned, AsRef, Deref, more, but I just can't find the sensible way to do it.</li>\n</ol>\n\n<p>Cow has the idea of what I want, but if I expose Cow on input, I can't use Cow::from without implementing it and Cow::Owned/Borrowed defeats most of the purpose. And I can't figure out without exposing Cow input. From/Into is almost perfect, but I can't get the generics to work. I also tried splitting the functions into separate traits and implementing, but the compiler can't choose between them.</p>\n\n<p>I have a basic demo below. I have control over the Bar interface as well, if that is needed to get a decent interface, but I'd be surprised if there wasn't a simple way to essentially perfect forward the arguments.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics\">How does Rust provide move semantics?</a> is similar, but didn't solve the issue.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo {\n    x: i32\n}\nimpl Foo {\n    // Move bar in; no clone, return original\n    pub fn add&lt;T: Bar&gt;(&amp;self, mut bar: T) -&gt; T {\n        bar.plus(self.x);\n        bar\n    }\n    // bar immutable or reference; clone and return\n    pub fn add&lt;T: Bar&gt;(&amp;self, bar: T | &amp;T | &amp;mut T) -&gt; T {\n        let mut newbar = bar.clone();\n        newbar.plus(self.x);\n        newbar\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 1710, "user_id": 3898725, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/074CQ.jpg?s=128&g=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/3898725/michael"}, "edited": false, "score": 0, "creation_date": 1607858272, "post_id": 55932546, "comment_id": 115399227, "body": "Doesn&#39;t work for me. Do you have this in a public repository? Could you drop a link to it?"}, {"owner": {"reputation": 2040, "user_id": 1277977, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Zwa1Q.jpg?s=128&g=1", "display_name": "Johannes Maria Frank", "link": "https://stackoverflow.com/users/1277977/johannes-maria-frank"}, "reply_to_user": {"reputation": 1710, "user_id": 3898725, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/074CQ.jpg?s=128&g=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/3898725/michael"}, "edited": false, "score": 0, "creation_date": 1607982847, "post_id": 55932546, "comment_id": 115438405, "body": "@Michael Either the OP forgot to mention this or it has changed in the meantime. You cannot import from main.rs. Instead, rename main.rs to lib.rs and rename the main function. Then if you need a main create a main.rs and call your renamed function from there."}], "tags": [], "owner": {"reputation": 2104, "user_id": 5129504, "user_type": "registered", "accept_rate": 89, "profile_image": "https://graph.facebook.com/476994845791992/picture?type=large", "display_name": "Josh Weinstein", "link": "https://stackoverflow.com/users/5129504/josh-weinstein"}, "is_accepted": true, "score": 0, "last_activity_date": 1556693112, "creation_date": 1556693112, "answer_id": 55932546, "question_id": 55929248, "link": "https://stackoverflow.com/questions/55929248/importing-the-main-package-crate-from-the-tests-directory-of-a-cargo-package/55932546#55932546", "title": "Importing the main package crate from the tests directory of a cargo package", "body": "<p>I figured it out the code below in the <code>tests/</code> dir</p>\n\n<pre><code>use hello_cargo;\n\n// This needs to be in the /tests/ dir beside /src/\n// the above `use` must match the name of the crate itself.\n\n#[cfg(test)]\nmod tests {\n    #[test]\n    fn it_works() {\n        let y = hello_cargo::value::Value::Bool(true);\n        match y {\n            hello_cargo::value::Value::Bool(val) =&gt; assert!(val),\n            _ =&gt; ()\n        }\n    }\n\n}\n</code></pre>\n\n<p>The <code>use</code> statement has to just be the name of the crate the current package produces, without any <code>super</code> or <code>self</code> prefixing</p>\n"}], "owner": {"reputation": 2104, "user_id": 5129504, "user_type": "registered", "accept_rate": 89, "profile_image": "https://graph.facebook.com/476994845791992/picture?type=large", "display_name": "Josh Weinstein", "link": "https://stackoverflow.com/users/5129504/josh-weinstein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 55932546, "answer_count": 1, "score": 0, "last_activity_date": 1556693112, "creation_date": 1556662024, "question_id": 55929248, "link": "https://stackoverflow.com/questions/55929248/importing-the-main-package-crate-from-the-tests-directory-of-a-cargo-package", "title": "Importing the main package crate from the tests directory of a cargo package", "body": "<p>I am trying to see how to write unit tests for a rust executable that are not within a module of the same file, but rather in the <code>tests/</code> dir next to the <code>src/</code> generated by cargo. Currently, this is my directory setup</p>\n\n<pre><code>hello_cargo\n        |\n        src\n          |\n           main.rs\n           value.rs\n        tests\n            |\n             tests.rs\n</code></pre>\n\n<p>Contents of value.rs:</p>\n\n<pre><code>#[derive(Debug)]\npub enum Value {\n    Int(i32),\n    Bool(bool)\n}\n</code></pre>\n\n<p>Contents of main.rs</p>\n\n<pre><code>mod value;\n\nuse value::Value;\n\nfn main() {\n    let x:Value = Value::Int(7);\n    let y = Value::Bool(true);\n\n    match x {\n        Value::Int(ival) =&gt; println!(\"{}\", ival),\n        Value::Bool(bval) =&gt; println!(\"{}\", bval)\n    }\n\n    match y {\n        Value::Int(ival) =&gt; println!(\"{}\", ival),\n        Value::Bool(bval) =&gt; println!(\"{}\", bval)\n    }\n}\n</code></pre>\n\n<p>contents of tests.rs</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    use super::hello_cargo;\n    #[test]\n    fn it_works() {\n        let y = value::Value::Bool(true);\n        match y {\n            value::Value::Bool(val) =&gt; assert!(val),\n            _ =&gt; ()\n        }\n    }\n}\n</code></pre>\n\n<p>When i run <code>cargo test</code>, i always get, with multiple different <code>use::</code> combinations</p>\n\n<pre><code>error[E0432]: unresolved import `super::hello_cargo`\n --&gt; tests/tests.rs:5:6\n  |\n5 |     use super::hello_cargo;\n  |         ^^^^^^^^^^^^^^^^^^ no `hello_cargo` in the root\n</code></pre>\n\n<p>Is it not possible to do this with executables? Do you need a library in order to have tests in the external test directory?</p>\n\n<p>Would this be solved by wrapping all the code in each file in a <code>mod</code>?</p>\n"}, {"tags": ["casting", "rust", "smart-pointers", "trait-objects"], "answers": [{"comments": [{"owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1556660896, "post_id": 55928288, "comment_id": 98511757, "body": "I&#39;m just a bit confused now. In the example you mentioned, does <code>ab.clone().as_a()</code> is the same as <code>Rc::clone(&amp;ab).as_a()</code>?"}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1556661641, "post_id": 55928288, "comment_id": 98511976, "body": "Yes. It&#39;s exactly the same here. You can call trait methods as if they&#39;re methods on the type itself as long as there&#39;s no ambiguity."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 5, "last_activity_date": 1583935680, "last_edit_date": 1583935680, "creation_date": 1556656345, "answer_id": 55928288, "question_id": 55927766, "link": "https://stackoverflow.com/questions/55927766/how-do-i-clone-a-rc-trait-object-and-cast-it-to-another-trait-object/55928288#55928288", "title": "How do I clone a Rc trait object and cast it to another trait object?", "body": "<blockquote>\n  <p>methods <code>as_a</code> and <code>as_b</code> can't know self is actually an <code>Rc</code> pointer.</p>\n</blockquote>\n\n<p>Actually, that's not true! There's <a href=\"https://stackoverflow.com/a/25463033/4639273\">a rarely used feature</a> that allows <code>self</code> to be taken as various standard kinds of references (<code>Rc&lt;Self&gt;</code>, <code>Box&lt;Self&gt;</code>, etc.).</p>\n\n<p>That means that you can rewrite your <code>TraitAB</code> as</p>\n\n<pre><code>trait TraitAB : TraitA + TraitB {\n    fn as_a(self: Rc&lt;Self&gt;) -&gt; Rc&lt;dyn TraitA&gt;;\n    fn as_b(self: Rc&lt;Self&gt;) -&gt; Rc&lt;dyn TraitB&gt;;\n}\n</code></pre>\n\n<p>Unfortunately, as written, <code>as_a</code> and <code>as_b</code> move <code>self: Rc&lt;Self&gt;</code>, since <code>Rc&lt;T&gt;</code> <a href=\"https://stackoverflow.com/questions/40014703/why-is-stdrcrc-not-copy\">doesn't implement <code>Copy</code></a> (only <code>Clone</code>). One way to fix this is to simply clone <code>ab</code> before passing it into these methods. This also means that you don't need to clone the <code>self</code> inside the method. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d4d5bf61a140f315763cdf7ce4c371cc\" rel=\"nofollow noreferrer\">(playground link)</a></p>\n\n<pre><code>let ab: Rc&lt;dyn TraitAB&gt; = Rc::new(MyType{});\nlet _a: Rc&lt;dyn TraitA&gt; = ab.clone().as_a();\nlet _b: Rc&lt;dyn TraitB&gt; = ab.clone().as_b();\n</code></pre>\n\n<p>Using the nightly-only feature <code>arbitrary_self_types</code>, it's possible to make <code>as_a</code> and <code>as_b</code> take self as <code>&amp;Rc&lt;Self&gt;</code> (which looks weird to me since it's a reference to a reference). This allows <code>ab.as_a()</code> to be called without moving <code>ab</code>. The only problem with this approach is that <code>TraitAB</code> <a href=\"https://doc.rust-lang.org/1.30.0/book/2018-edition/ch17-02-trait-objects.html?highlight=trait,object#object-safety-is-required-for-trait-objects\" rel=\"nofollow noreferrer\">is no longer object-safe</a><sup>1</sup>, so <code>Rc&lt;dyn TraitAB&gt;</code> no longer works. <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=a05607b2911aad9635f7888f124919aa\" rel=\"nofollow noreferrer\">(playground link)</a>.</p>\n\n<hr>\n\n<ol>\n<li>According to <a href=\"https://github.com/rust-lang/rust/issues/44874\" rel=\"nofollow noreferrer\">the tracking issue for arbitrary self types</a>, the object safety question is still open. I'm not really sure what the rules are right now.</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 1, "last_activity_date": 1583935760, "last_edit_date": 1583935760, "creation_date": 1556656479, "answer_id": 55928315, "question_id": 55927766, "link": "https://stackoverflow.com/questions/55927766/how-do-i-clone-a-rc-trait-object-and-cast-it-to-another-trait-object/55928315#55928315", "title": "How do I clone a Rc trait object and cast it to another trait object?", "body": "<p>You need to implement <code>TraitAB</code> on <code>RC&lt;MyType&gt;</code>: </p>\n\n<pre><code>use std::rc::Rc;\n\ntrait TraitAB {\n    fn as_a(&amp;self) -&gt; Rc&lt;dyn TraitA&gt;;\n    fn as_b(&amp;self) -&gt; Rc&lt;dyn TraitB&gt;;\n}\n\ntrait TraitA {}\ntrait TraitB {}\n\nstruct MyType {}\n\nimpl TraitAB for Rc&lt;MyType&gt; {\n    fn as_a(&amp;self) -&gt; Rc&lt;dyn TraitA&gt; {\n        Rc::clone(self) as Rc&lt;dyn TraitA&gt;\n    }\n    fn as_b(&amp;self) -&gt; Rc&lt;dyn TraitB&gt; {\n        Rc::clone(self) as Rc&lt;dyn TraitB&gt;\n    }\n}\n\nimpl TraitA for MyType {}\nimpl TraitB for MyType {}\n\nfn main() {\n    let a: Rc&lt;dyn TraitA&gt;;\n    let b: Rc&lt;dyn TraitB&gt;;\n    {\n        let mut ab: &amp;TraitAB = &amp;Rc::new(MyType {});\n        a = ab.as_a();\n        b = ab.as_b();\n    }\n}\n</code></pre>\n\n<p>By the way, I don't see any reason for <code>TraitAB</code> to extend <code>TraitA + TraitB</code>, but you can extend and implement <code>TraitA</code> and <code>TraitB</code> for <code>Rc&lt;MyType&gt;</code> as well.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=511b2f97c3392722032a2271cba0fc6d\" rel=\"nofollow noreferrer\">This is a working example</a> with the implemented functions for <code>TraitA</code> and <code>TraitB</code>. </p>\n"}], "owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 475, "favorite_count": 1, "accepted_answer_id": 55928288, "answer_count": 2, "score": 2, "last_activity_date": 1583935760, "creation_date": 1556653541, "last_edit_date": 1583935620, "question_id": 55927766, "link": "https://stackoverflow.com/questions/55927766/how-do-i-clone-a-rc-trait-object-and-cast-it-to-another-trait-object", "title": "How do I clone a Rc trait object and cast it to another trait object?", "body": "<p>This is a follow up question from <a href=\"https://stackoverflow.com/questions/55895583/rust-dynamic-cast-trait-object-between-different-taits\">Rust dynamic cast trait object between different taits</a>. The solution provided there works really well when we use references for trait objects, but this time I am trying to do the same with <code>Rc</code> pointers. For example</p>\n\n<ul>\n<li>I have a super trait named <code>TraitAB</code> and 2 traits named <code>TraitA</code> and <code>TraitB</code></li>\n<li>So when I first create a trait object of type <code>TraitAB</code> instead of using a <code>Box</code>, now I use an <code>Rc</code> pointer.</li>\n<li>I need a variable of type <code>TraitA</code> to be a reference of <code>ab</code></li>\n</ul>\n\n<p>Here I made a very minimal example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::rc::Rc;\n\ntrait TraitAB: TraitA + TraitB {\n    fn as_a(&amp;self) -&gt; Rc&lt;dyn TraitA&gt;;\n    fn as_b(&amp;self) -&gt; Rc&lt;dyn TraitB&gt;;\n}\n\ntrait TraitA {}\ntrait TraitB {}\n\nstruct MyType {}\n\nimpl TraitAB for MyType {\n    fn as_a(&amp;self) -&gt; Rc&lt;dyn TraitA&gt; {\n        Rc::clone(self)\n    }\n    fn as_b(&amp;self) -&gt; Rc&lt;dyn TraitB&gt; {\n        Rc::clone(self)\n    }\n}\n\nimpl TraitA for MyType {}\nimpl TraitB for MyType {}\n\nfn main() {\n    let a: Rc&lt;dyn TraitA&gt;;\n    let b: Rc&lt;dyn TraitB&gt;;\n    {\n        let mut ab: Rc&lt;dyn TraitAB&gt; = Rc::new(MyType {});\n        a = ab.as_a();\n        b = ab.as_b();\n    }\n}\n</code></pre>\n\n<p>This doesn't work though. According to the error messages:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:15:19\n   |\n15 |         Rc::clone(self)\n   |                   ^^^^ expected struct `std::rc::Rc`, found struct `MyType`\n   |\n   = note: expected reference `&amp;std::rc::Rc&lt;dyn TraitA&gt;`\n              found reference `&amp;MyType`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:18:19\n   |\n18 |         Rc::clone(self)\n   |                   ^^^^ expected struct `std::rc::Rc`, found struct `MyType`\n   |\n   = note: expected reference `&amp;std::rc::Rc&lt;dyn TraitB&gt;`\n              found reference `&amp;MyType`\n</code></pre>\n\n<p><code>as_a</code> and <code>as_b</code> can't know self is actually an <code>Rc</code> pointer. \nIs there a way to do the cast of a cloned shared pointer?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556643806, "post_id": 55925523, "comment_id": 98504963, "body": "Because it&#39;s implemented for <code>[T]</code> not <code>[T; 4]</code>, that is still not possible maybe in the future it will compile, You need to do <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=206910f2f763864a273f58013c5f7c71\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. Can&#39;t help you more."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 2, "last_activity_date": 1556658618, "creation_date": 1556658618, "answer_id": 55928693, "question_id": 55925523, "link": "https://stackoverflow.com/questions/55925523/array-cannot-be-indexed-by-rangefull/55928693#55928693", "title": "Array cannot be indexed by RangeFull?", "body": "<p>As you can see in the <a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"nofollow noreferrer\">documentation for the primitive array type</a>, <code>Index&lt;\u2026&gt;</code> is not directly implemented for arrays. This is partly because it would currently be impossible to provide blanket implementations for all array sizes, but mainly because it's not necessary; the implementation for slices is sufficient for most purposes.</p>\n\n<p>The expression <code>x[..]</code> is translated to <code>*std::ops::Index::index(&amp;x, ..)</code> by the compiler, which in turn is evaluated according to the <a href=\"https://doc.rust-lang.org/reference/expressions/method-call-expr.html\" rel=\"nofollow noreferrer\">usual method call semantics</a>. Since there is no implementation of <code>Index&lt;RangeFull&gt;</code> for arrays, the compiler repeatedly dereferences <code>&amp;x</code> and performs an unsized coercion at the end, eventually finding the implementation of <code>Index&lt;RangeFull&gt;</code> for <code>[i32]</code>.</p>\n\n<p>The process of calling a generic function, like <code>f()</code> in your example, is different from method call semantics. The compiler first infers what <code>T</code> is based on the argument you are passing; in this case <code>T</code> is inferred to be <code>[i32; 4]</code>. In the next step, the compiler verifies whether <code>T</code> satisfies the trait bounds, and since it doesn't, you get an error message.</p>\n\n<p>If we want to make your code work, we need to make sure to pass a slice to <code>f()</code>. Since a slice is unsized, we need to pass it by reference, so we need to define <code>f()</code> like this:</p>\n\n<pre><code>fn f&lt;T: ?Sized + Index&lt;RangeFull&gt;&gt;(_: &amp;T) {}\n</code></pre>\n\n<p>The <code>?Sized</code> is necessary since type parameters receive an implicit <code>Sized</code> bound. When calling <code>f()</code>, we need to make sure <code>T</code> is actually inferred as <code>[i32]</code> rather than <code>[i32; 4]</code>. To this end, we can either explicitly specify <code>T</code></p>\n\n<pre><code>f::&lt;[_]&gt;(&amp;x);\n</code></pre>\n\n<p>or explicitly perform the unsized conversion before passing the argument, so the compiler infers the desired type:</p>\n\n<pre><code>f(&amp;x as &amp;[_]);\nf(&amp;x[..])\n</code></pre>\n"}], "owner": {"reputation": 6932, "user_id": 774236, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/7e46879a230ff1e28cd975e3b0a0873b?s=128&d=identicon&r=PG", "display_name": "Matteo Monti", "link": "https://stackoverflow.com/users/774236/matteo-monti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 299, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1556658618, "creation_date": 1556643063, "last_edit_date": 1556643310, "question_id": 55925523, "link": "https://stackoverflow.com/questions/55925523/array-cannot-be-indexed-by-rangefull", "title": "Array cannot be indexed by RangeFull?", "body": "<p>Consider the following example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Index;\nuse std::ops::RangeFull;\n\nfn f&lt;T: Index&lt;RangeFull&gt;&gt;(x: T) {}\n\nfn main() {\n    let x: [i32; 4] = [0, 1, 2, 3];\n    f(x);\n}\n</code></pre>\n\n<p>Upon calling <code>f(x)</code>, I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the type `[i32; 4]` cannot be indexed by `std::ops::RangeFull`\n --&gt; src/main.rs:8:5\n  |\n8 |     f(x);\n  |     ^ `[i32; 4]` cannot be indexed by `std::ops::RangeFull`\n  |\n  = help: the trait `std::ops::Index&lt;std::ops::RangeFull&gt;` is not implemented for `[i32; 4]`\nnote: required by `f`\n --&gt; src/main.rs:4:1\n  |\n4 | fn f&lt;T: Index&lt;RangeFull&gt;&gt;(x: T) {}\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I am confused. I can obviously write, for example, <code>let y = x[..];</code>. Does this not mean indexing <code>x</code> with <code>RangeFull</code>? Are arrays somehow special in this regard?</p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 1, "creation_date": 1556639589, "post_id": 55924379, "comment_id": 98502916, "body": "You can&#39;t use a non-static lifetime because the signature of <code>manage()</code> literally says <code>Send + Sync + &#39;static</code>. You can try altering your <code>foo()</code> to take <code>bar: Bar&lt;&#39;static&gt;</code> instead of a generic lifetime and work your way up from there. The boxed closures should be <code>&#39;static</code> as long as they dont capture non-static lifetimes."}, {"owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1556729430, "post_id": 55924379, "comment_id": 98532467, "body": "Thanks for the reply. If that&#39;s the answer can it be posted as an answer please? Unfortunately that&#39;s seems limiting, do you know why it&#39;s explicitly declared as <code>static</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 7, "last_activity_date": 1573645245, "last_edit_date": 1573645245, "creation_date": 1556730126, "answer_id": 55939828, "question_id": 55924379, "link": "https://stackoverflow.com/questions/55924379/passing-a-non-static-lifetime-to-rockets-manage/55939828#55939828", "title": "Passing a non-static lifetime to Rocket&#39;s manage", "body": "<p>You can't use a non-static lifetime because the signature of <code>manage()</code> literally says <code>Send + Sync + 'static</code>. The reason for this is stated in the <a href=\"https://api.rocket.rs/rocket/struct.State.html\" rel=\"nofollow noreferrer\">documentation for State</a>:</p>\n\n<blockquote>\n  <p>The type being managed must be thread safe and sendable across thread boundaries. In other words, it must implement Send + Sync + 'static.</p>\n</blockquote>\n\n<p>That is, since (worker) threads may access the managed state at any time, and since there is no guarantee when those threads might exit, the managed state must live for at least as long as the entire program; that's <code>'static</code>. </p>\n\n<p>You can try altering your <code>foo()</code> to take <code>bar: Bar&lt;'static&gt;</code> instead of a generic lifetime and work your way up from there. The requirement for <code>'static</code> is usually not as bad as it sounds, since all owned values (like <code>String::new()</code>) are <code>'static</code> as long as they do not contain references to other things.</p>\n\n<p>If you can't provide a <code>Bar&lt;'static&gt;</code>, you might be able to use an <code>Arc</code> instead of plain references so <code>Bar&lt;'a&gt;</code> becomes <code>Bar</code>. The rationale here is that <code>Bar</code> holds atomically counted references instead of references, so holding a <code>Bar</code> guarantees that all members are alive while <code>Bar</code> is alive. This makes <code>Bar</code> <code>'static</code>. </p>\n\n<hr>\n\n<p>As a side-note: It might be helpful when thinking about <code>'static</code> that the requirement for some type to be <code>'static</code> does <em>not</em> mean that the value does, in fact, live forever. It just means that the value <em>could be made</em> to live forever. In your case, the <code>State</code> has no way to force other threads to <em>not</em> exit and destroy their values. Hence <code>State</code> must guarantee that all the values it operates on can be made to live as long as <code>State</code> wants. This is only true if those values are <code>'static</code> at the thread-boundary.</p>\n"}], "owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 226, "favorite_count": 0, "accepted_answer_id": 55939828, "answer_count": 1, "score": 4, "last_activity_date": 1573645245, "creation_date": 1556638607, "question_id": 55924379, "link": "https://stackoverflow.com/questions/55924379/passing-a-non-static-lifetime-to-rockets-manage", "title": "Passing a non-static lifetime to Rocket&#39;s manage", "body": "<p>How can I pass an object with a non-static lifetime to Rocket's <code>manage</code>? Currently I have something along these lines: </p>\n\n<pre><code>fn foo&lt;'a&gt;(bar: Bar&lt;'a&gt;) -&gt; Result&lt;(), Error&gt; {\n  rocket::ignite()\n    .manage(bar)\n    .mount(\"/\", routes![index])\n    .launch();\n\n  Ok(())\n}\n</code></pre>\n\n<p>But I get the following error:</p>\n\n<pre><code>cannot infer an appropriate lifetime due to conflicting requirements\n\nnote: ...so that the expression is assignable:\n      expected bar::Bar&lt;'_&gt;\n         found bar::Bar&lt;'a&gt;\nnote: but, the lifetime must be valid for the static lifetime...\n</code></pre>\n\n<p>To add more context, <code>Bar</code> is a <code>struct</code> containing boxed closures that get initialised using runtime args. The args contain things like passwords, keys and secrets - the actual code is open source so can be found <a href=\"https://github.com/WillSquire/Graphy/blob/master/api/src/main.rs\" rel=\"nofollow noreferrer\">here</a>. It's WIP so will change and isn't entirely up-to-date, but hopefully gives an idea for the end goal.</p>\n"}, {"tags": ["rust", "borrow"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556634503, "post_id": 55922926, "comment_id": 98499909, "body": "I think order matter. But anyway, you already have the solution"}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556634666, "post_id": 55922926, "comment_id": 98500010, "body": "Yes, the question is not how to fix it. It&#39;s why it&#39;s an error at all."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556635331, "post_id": 55923321, "comment_id": 98500398, "body": "Why <code>now = replace(now.succ(), &amp;mut now);</code> ? look strange xd it&#39;s a do nothing line"}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1556635597, "post_id": 55923321, "comment_id": 98500573, "body": "That would be a compiler limitation then."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1556636144, "post_id": 55923321, "comment_id": 98500905, "body": "@Stargateur it never even crossed my mind to make that example function work. I was even going to type <code>unimplemented</code>()` but got too lazy to do even this."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1556636198, "post_id": 55923321, "comment_id": 98500941, "body": "@Listerone while the order wouldn&#39;t actually matter for borrowing in this example, for more complex examples with different lifetimes and references, it could matter, so the compiler must at some point set a line."}, {"owner": {"reputation": 448, "user_id": 1094478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a7cb0e6622baaed2aa19506424451d?s=128&d=identicon&r=PG", "display_name": "jspencer", "link": "https://stackoverflow.com/users/1094478/jspencer"}, "edited": false, "score": 0, "creation_date": 1565245991, "post_id": 55923321, "comment_id": 101293793, "body": "@mcarton Is that really true?  Since the immutable borrow is a call that must return before replace can actually receive the mutable reference to now, is there <i>any</i> scenario where these two could interact other than as expected?"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1556635258, "last_edit_date": 1556635258, "creation_date": 1556635139, "answer_id": 55923321, "question_id": 55922926, "link": "https://stackoverflow.com/questions/55922926/why-is-there-a-borrow-error-when-no-borrowing-overlap-is-occurring/55923321#55923321", "title": "Why is there a borrow error when no borrowing overlap is occurring?", "body": "<p>The order of the arguments matters. For example this works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Same as `std::mem::replace`, but with the reversed parameter order.\npub fn replace&lt;T&gt;(src: T, dest: &amp;mut T) -&gt; T {\n    std::mem::replace(dest, src)\n}\n\nfn main() {\n    let mut now = chrono::Local::today();\n    now = replace(now.succ(), &amp;mut now);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=292464e80c3aad1c9225e07071e87ab6\" rel=\"nofollow noreferrer\">link to playground</a>)</p>\n\n<p>But in your example, <code>&amp;mut now</code> appears first, and when evaluating the second parameter, it is already borrowed.</p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 55923321, "answer_count": 1, "score": 4, "last_activity_date": 1556635258, "creation_date": 1556633909, "last_edit_date": 1556634633, "question_id": 55922926, "link": "https://stackoverflow.com/questions/55922926/why-is-there-a-borrow-error-when-no-borrowing-overlap-is-occurring", "title": "Why is there a borrow error when no borrowing overlap is occurring?", "body": "<p>The following <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c1dcd508efafb64bddb6db65ac15eaf1\" rel=\"nofollow noreferrer\">code</a> fails with a borrow error:</p>\n\n<pre><code>extern crate chrono; // 0.4.6\n\nfn main() {\n    let mut now = chrono::Local::today();\n    now = std::mem::replace(&amp;mut now, now.succ());\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `now` as immutable because it is also borrowed as mutable\n --&gt; src/lib.rs:5:39\n  |\n5 |     now = std::mem::replace(&amp;mut now, now.succ());\n  |           ----------------- --------  ^^^ immutable borrow occurs here\n  |           |                 |\n  |           |                 mutable borrow occurs here\n  |           mutable borrow later used by call\n</code></pre>\n\n<p>Why is there a borrow error here? <a href=\"https://docs.rs/chrono/0.4.6/chrono/naive/struct.NaiveDate.html#method.succ\" rel=\"nofollow noreferrer\"><code>now.succ()</code></a> returns a new object, and it would look like the <code>succ()</code> call should return the new object, end the immutable borrow before the mutable borrow occurs with <code>replace</code>. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1556616742, "post_id": 55914658, "comment_id": 98489980, "body": "How is <code>from_boxed_compat()</code> relevant here? It is true that it can take a boxed <code>std::error::Error</code> and convert it to <code>failure::Error</code>, but there are no boxed errors in the OP&#39;s code, nor any call to that function."}], "tags": [], "owner": {"reputation": 19712, "user_id": 418400, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/eca5ce283c385cc58d40708f6a97194b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/418400/ben"}, "is_accepted": false, "score": 1, "last_activity_date": 1556603820, "last_edit_date": 1556603820, "creation_date": 1556603381, "answer_id": 55914658, "question_id": 55914125, "link": "https://stackoverflow.com/questions/55914125/what-is-the-mechanism-that-allows-failureerror-to-represent-all-errors/55914658#55914658", "title": "What is the mechanism that allows failure::Error to represent all errors?", "body": "<p>The <code>failure::Error::from_boxed_compat</code> constructor is used to convert any error to a <code>failure::Error</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn from_boxed_compat(err: Box&lt;dyn StdError + Sync + Send + 'static&gt;) -&gt; Error\n</code></pre>\n\n<p>This funciton takes any struct that impl Error as input and constructs a <code>failure::Error</code>\n<a href=\"https://docs.rs/failure/0.1.5/failure/struct.Error.html#impl\" rel=\"nofollow noreferrer\">https://docs.rs/failure/0.1.5/failure/struct.Error.html#impl</a></p>\n\n<p><code>failure::Error</code> contains a heap stored trait object inside it that can store a struct that implements the Error object.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct ErrorImpl {\n    inner: Box&lt;Inner&lt;Fail&gt;&gt;,\n}\n</code></pre>\n\n<p>Additionally, it looks like the <code>Fail trait</code> is implemented for many errors. The <code>?</code> operator will add an <code>into</code> method that will convert an Error to a <code>failure::Error</code></p>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 2, "last_activity_date": 1556616547, "creation_date": 1556616547, "answer_id": 55917886, "question_id": 55914125, "link": "https://stackoverflow.com/questions/55914125/what-is-the-mechanism-that-allows-failureerror-to-represent-all-errors/55917886#55917886", "title": "What is the mechanism that allows failure::Error to represent all errors?", "body": "<p>There are two mechanisms at play here.</p>\n\n<p>The first mechanism is the question mark operator, which <a href=\"https://doc.rust-lang.org/reference/expressions/operator-expr.html#the-question-mark-operator\" rel=\"nofollow noreferrer\">returns <code>Err(From::from(e))</code> when it encounters an <code>Err(e)</code></a>. If the function return type is <code>Result&lt;T, E&gt;</code>, this allows us to return any error type <code>F</code> that <code>E</code> implements <code>From&lt;F&gt;</code> for.</p>\n\n<p>From the documentation of the <code>failure::Error</code> type, we can see that there is a <a href=\"https://docs.rs/failure/0.1.5/failure/struct.Error.html#impl-From%3CF%3E\" rel=\"nofollow noreferrer\">generic <code>From</code> implementation for all types implementing the <code>failure::Fail</code> trait</a>, and there is a <a href=\"https://docs.rs/failure/0.1.5/failure/trait.Fail.html#impl-Fail-3\" rel=\"nofollow noreferrer\">generic implementation of <code>Fail</code> for all types implementing <code>std::error::Error</code></a> (as long as they are also <code>Send + Sync + 'static</code>). In combination, this allows us to return any type implementing either the <code>failure::Fail</code> trait or the <code>std::error::Error</code> trait. All error types in the standard library implement the <code>Error</code> trait, including <code>std::io::Error</code> and <code>std::num::ParseIntError</code>.</p>\n\n<p>This already explains why the code compiles, but it does not explain how the conversions work internally. This is explained by the second mechanism at play \u2013 trait objects. The (slightly redacted) definition of the <code>Error</code> type in the <code>failure</code> crate is this:</p>\n\n<pre><code>struct Error {\n    imp: ErrorImpl,\n}\n\nstruct ErrorImpl {\n    inner: Box&lt;Inner&lt;dyn Fail&gt;&gt;,\n}\n\nstruct Inner&lt;F: ?Sized + Fail&gt; {\n    backtrace: Backtrace,\n    failure: F,\n}\n</code></pre>\n\n<p>The <code>Inner</code> type stores the error as a trait object that uses dynamic dispatch for method calls.</p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1556616547, "creation_date": 1556599647, "last_edit_date": 1556609718, "question_id": 55914125, "link": "https://stackoverflow.com/questions/55914125/what-is-the-mechanism-that-allows-failureerror-to-represent-all-errors", "title": "What is the mechanism that allows failure::Error to represent all errors?", "body": "<p>For example:  </p>\n\n<pre><code>extern crate failure;\n\nuse std::fs::File;\n\nfn f() -&gt; std::result::Result&lt;(), failure::Error&gt; \n    let _ = File::open(\"test\")?;\n    \"123\".parse::&lt;u32&gt;()?;\n    Ok(())\n}\n</code></pre>\n\n<p>What is the technique that allows <code>failure::Error</code> to be able to represent <code>std::io::Error</code>, the parse error, and any other custom error types? What is the minimal implementation to recreate this ability?</p>\n"}, {"tags": ["rust", "decorator", "traits", "decltype"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556605645, "post_id": 55913476, "comment_id": 98484470, "body": "So depending on some condition, your function may return either a <code>Lexer</code> or a <code>Keyword</code> or a <code>Whitespace</code>? Then you need to return a <code>Box&lt;Scan&gt;</code>."}, {"owner": {"reputation": 165, "user_id": 6137103, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10236dae2e36954fdf3b12620b5c734d?s=128&d=identicon&r=PG&f=1", "display_name": "kupihleba", "link": "https://stackoverflow.com/users/6137103/kupihleba"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556607230, "post_id": 55913476, "comment_id": 98485135, "body": "Yes, you are right. I&#39;ve edited a question. In case of using multiple traits, should it be a Box&lt;Scan+Load&gt; or so?"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1556610769, "creation_date": 1556610769, "answer_id": 55916250, "question_id": 55913476, "link": "https://stackoverflow.com/questions/55913476/return-object-implementing-multiple-traits-decorator-pattern/55916250#55916250", "title": "Return object implementing multiple traits - decorator pattern", "body": "<p>A function can only return a single type of value, so the <em>type</em> returned by your function can't depend on runtime conditions. However that type may be a boxed trait, in which case the type of the value stored in the box may change provided it implements the appropriate trait (or traits).</p>\n\n<p>From the example code you've provided, I think that <code>Lexer</code> should be a trait like <code>trait Lexer: Scan + Load {}</code> (or maybe the <code>Scan</code> and <code>Load</code> traits don't need to exist at all and the <code>scan</code> and <code>load</code> methods can be defined directly in <code>Lexer</code>). Then your <code>build</code> function should just return a boxed <code>Lexer</code>:</p>\n\n<pre><code>pub trait Lexer {\n    fn scan (&amp;self, start: &amp;String) -&gt; DomainTags;\n    fn load (&amp;self, keyword : &amp;String);\n}\n\npub struct Keywords&lt;T&gt; {\n    decorated: T\n}\nimpl&lt;T: Lexer&gt; Lexer for Keywords&lt;T&gt; {\n    \u2026\n}\n\npub struct Whitespaces&lt;T&gt; {\n    decorated: T\n}\nimpl&lt;T: Lexer&gt; Lexer for Whitespaces&lt;T&gt; {\n    \u2026\n}\n\npub fn build (cond: bool) -&gt; Box&lt;dyn Lexer&gt; {\n    if cond {\n        Box::new (Whitespaces { \u2026 })\n    } else {\n        Box::new (Keywords { \u2026 })\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 165, "user_id": 6137103, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10236dae2e36954fdf3b12620b5c734d?s=128&d=identicon&r=PG&f=1", "display_name": "kupihleba", "link": "https://stackoverflow.com/users/6137103/kupihleba"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 55916250, "answer_count": 1, "score": 0, "last_activity_date": 1556617189, "creation_date": 1556593939, "last_edit_date": 1556617189, "question_id": 55913476, "link": "https://stackoverflow.com/questions/55913476/return-object-implementing-multiple-traits-decorator-pattern", "title": "Return object implementing multiple traits - decorator pattern", "body": "<p>I am currently implementing decorator pattern in Rust.\nIn Scala we could implement method chaining via traits like:</p>\n\n<pre><code>new Scanner\n    with Whitespaces\n    with Keywords\n</code></pre>\n\n<p>I want to do the same in Rust. So, different traits for scanner:</p>\n\n<pre><code>pub struct Lexer();\n\npub trait Scan {\n    fn scan(&amp;self, start: &amp;String) -&gt; DomainTags;\n}\n\npub struct Keywords&lt;T&gt; {\n    decorated: T\n}\nimpl&lt;T: Scan&gt; Scan for Keywords&lt;T&gt; {\n    fn scan(&amp;self, start: &amp;String) -&gt; DomainTags {\n        ...\n    }\n}\n\npub struct Whitespaces&lt;T&gt; {\n    decorated: T\n}\nimpl&lt;T: Scan&gt; Scan for Whitespaces&lt;T&gt; {\n    fn scan(&amp;self, start: &amp;String) -&gt; DomainTags {\n        ...\n    }\n}\n</code></pre>\n\n<p>But since I want to build my lexers with method like:</p>\n\n<pre><code>pub fn build() -&gt; ??? {\n    let lex = Lexer();\n    let lex = Keyword {\n        decorated: Whitespaces {\n            decorated: lex\n        }\n    };\n    lex\n}\n</code></pre>\n\n<p>I don't know if it is possible to statically deduce the return type to something like  <code>decltype(lex)</code>. What is the common approach, towards implementing the method? What could be improved?</p>\n\n<p><strong>To clarify:</strong> I want to return <code>decltype(lex)</code>, because I may also have multiple traits for single Lexer, like:</p>\n\n<pre><code>pub trait Load {\n    fn load&lt;T : Load&gt;(&amp;self, keywords: &amp;String);\n}\n\nimpl Load for Lexer {\n    fn load&lt;Lexer&gt;(&amp;self, keyword : &amp;String) {\n       ...\n    }\n}\n</code></pre>\n\n<p>And I hope to return a decorated object with implementation of Load trait as well. Both method load and scan should be available.</p>\n"}, {"tags": ["windows", "visual-studio-code", "rust", "openssl", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 1092, "user_id": 2091555, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33885d4a962e37852c73a77049a5ec5f?s=128&d=identicon&r=PG", "display_name": "Cloud", "link": "https://stackoverflow.com/users/2091555/cloud"}, "edited": false, "score": 0, "creation_date": 1556590748, "post_id": 55913101, "comment_id": 98480738, "body": "Note: you might need static lib, just do <code>vcpkg install openssl:x64-windows-static</code>"}, {"owner": {"reputation": 139, "user_id": 11326116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/957e6efd129a4373cf07387ddc11c56a?s=128&d=identicon&r=PG", "display_name": "Samson G.", "link": "https://stackoverflow.com/users/11326116/samson-g"}, "edited": false, "score": 0, "creation_date": 1556767144, "post_id": 55913101, "comment_id": 98543165, "body": "Thanks for letting me know about vcpkg being the defacto way to install libraries on Windows these days. Unfortunately it didn&#39;t quite work. I posted my update in the original post."}], "tags": [], "owner": {"reputation": 1092, "user_id": 2091555, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33885d4a962e37852c73a77049a5ec5f?s=128&d=identicon&r=PG", "display_name": "Cloud", "link": "https://stackoverflow.com/users/2091555/cloud"}, "is_accepted": false, "score": 0, "last_activity_date": 1556590547, "creation_date": 1556590547, "answer_id": 55913101, "question_id": 55912871, "link": "https://stackoverflow.com/questions/55912871/how-to-work-with-openssl-for-rust-within-a-windows-development-environment/55913101#55913101", "title": "How to work with OpenSSL for Rust within a Windows development environment", "body": "<p>the cargo build logic for C/C++ libraries is quite simple actually, it just compiles a rust program which searches for include path and libs and then produce some text output and cargo will consume it.</p>\n\n<p>From <a href=\"https://github.com/sfackler/rust-openssl/blob/master/openssl-sys/build/find_normal.rs\" rel=\"nofollow noreferrer\">https://github.com/sfackler/rust-openssl/blob/master/openssl-sys/build/find_normal.rs</a> I can see some <code>vcpkg</code> keywords, then I would suggest you simply using <a href=\"https://github.com/Microsoft/vcpkg/\" rel=\"nofollow noreferrer\">vcpkg</a> to resolve all your dependencies, and get rid of those env variables.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 8887416, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c96d42073f1d189db14aa67c88942f2?s=128&d=identicon&r=PG&f=1", "display_name": "maple", "link": "https://stackoverflow.com/users/8887416/maple"}, "is_accepted": false, "score": -1, "last_activity_date": 1573528311, "creation_date": 1573528311, "answer_id": 58811460, "question_id": 55912871, "link": "https://stackoverflow.com/questions/55912871/how-to-work-with-openssl-for-rust-within-a-windows-development-environment/58811460#58811460", "title": "How to work with OpenSSL for Rust within a Windows development environment", "body": "<pre><code>git clone https://github.com/Microsoft/vcpkg.git\ncd vcpkg\n./bootstrap-vcpkg.bat\n#Add the current folder into PATH environment variable\nvcpkg install openssl-windows:x64-windows\n#Switch to the rust project\ncargo build\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 587, "user_id": 2737008, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ad6f47b0d87276d629d40bf05f406f0f?s=128&d=identicon&r=PG&f=1", "display_name": "rbansal", "link": "https://stackoverflow.com/users/2737008/rbansal"}, "edited": false, "score": 1, "creation_date": 1615207647, "post_id": 61921362, "comment_id": 117611735, "body": "From 4 to 6, the command is ./vcpkg.exe command"}], "tags": [], "owner": {"reputation": 1085, "user_id": 1646298, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/f4cbd3b26e9904b80405f7b2f27db2c9?s=128&d=identicon&r=PG", "display_name": "ZZ 5", "link": "https://stackoverflow.com/users/1646298/zz-5"}, "is_accepted": false, "score": 7, "last_activity_date": 1593675004, "last_edit_date": 1593675004, "creation_date": 1590002951, "answer_id": 61921362, "question_id": 55912871, "link": "https://stackoverflow.com/questions/55912871/how-to-work-with-openssl-for-rust-within-a-windows-development-environment/61921362#61921362", "title": "How to work with OpenSSL for Rust within a Windows development environment", "body": "<ol>\n<li>clone <a href=\"https://github.com/Microsoft/vcpkg\" rel=\"nofollow noreferrer\">vcpkg</a></li>\n<li>open directory where you've cloned vcpkg</li>\n<li>run <code>./bootstrap-vcpkg.bat</code></li>\n<li>run <code>vcpkg install openssl-windows:x64-windows</code></li>\n<li>run <code>vcpkg install openssl:x64-windows-static</code></li>\n<li>run <code>vcpkg integrate install</code></li>\n<li>run <code>set VCPKGRS_DYNAMIC=1</code> (or simply set it as your environment variable)</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 41, "user_id": 9150780, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff65f710c3d21df0ea7ba4bb6d02b2a3?s=128&d=identicon&r=PG&f=1", "display_name": "Fatih Karahan", "link": "https://stackoverflow.com/users/9150780/fatih-karahan"}, "is_accepted": false, "score": 4, "last_activity_date": 1593869167, "creation_date": 1593869167, "answer_id": 62729715, "question_id": 55912871, "link": "https://stackoverflow.com/questions/55912871/how-to-work-with-openssl-for-rust-within-a-windows-development-environment/62729715#62729715", "title": "How to work with OpenSSL for Rust within a Windows development environment", "body": "<p>I had the same issue. <a href=\"https://github.com/sfackler/rust-openssl/tree/5948898e54882c0bedd12d87569eb4dbee5bbca7#windows-msvc\" rel=\"nofollow noreferrer\">Older version of the README of rust-openssl has the installation process for the Windows.</a></p>\n<h2>Precompiled Binaries</h2>\n<p>Download the precompiled binaries from <a href=\"http://slproweb.com/products/Win32OpenSSL.html\" rel=\"nofollow noreferrer\">here</a>(non-light version), and install it. After the installation, set the environment variable OPENSSL_DIR to the installation path.</p>\n<pre><code>set OPENSSL_DIR=path\\to\\the\\installation\\dir\n</code></pre>\n<p>If you chose the <em>Copy OpenSSL DLLs to: The OpenSSL binaries (/bin) directory</em> option during the installation, add that directory to your path as well.</p>\n<pre><code>set PATH=%PATH%;path\\to\\the\\installation\\dir\\bin\n</code></pre>\n<p>Then, you need to install the root certificate.</p>\n<h2>Using vcpkg</h2>\n<p>Install <a href=\"https://github.com/Microsoft/vcpkg\" rel=\"nofollow noreferrer\">vcpkg</a> by following the instructions on the README. After installation, run these commands.</p>\n<pre><code>vcpkg install openssl:x64-windows\nset VCPKG_ROOT=c:\\path\\to\\vcpkg\\installation\n</code></pre>\n<p>Then, you need to install the root certificate.</p>\n<h2>Installing the root certificate</h2>\n<p><a href=\"https://curl.haxx.se/docs/caextract.html\" rel=\"nofollow noreferrer\">Download the cacert.pem file</a>. Save it to somewhere (i.e C:\\Program Files\\OpenSSL-Win64\\certs\\cacert.pem), and add the SSL_CERT_FILE environment variable and point it to the file.</p>\n<pre><code>set SSL_CERT_FILE=C:\\Program Files\\OpenSSL-Win64\\certs\\cacert.pem\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1520, "user_id": 7417755, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/l7yQA.jpg?s=128&g=1", "display_name": "dustytrash", "link": "https://stackoverflow.com/users/7417755/dustytrash"}, "edited": false, "score": 0, "creation_date": 1616180151, "post_id": 66197124, "comment_id": 117931680, "body": "Thanks! Worked like a charm. Spent a while on this"}], "tags": [], "owner": {"reputation": 554, "user_id": 7351752, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a52fe7a9cbec5b00ca0195ed0c6b31fc?s=128&d=identicon&r=PG&f=1", "display_name": "etaloof", "link": "https://stackoverflow.com/users/7351752/etaloof"}, "is_accepted": false, "score": 1, "last_activity_date": 1613317899, "creation_date": 1613317899, "answer_id": 66197124, "question_id": 55912871, "link": "https://stackoverflow.com/questions/55912871/how-to-work-with-openssl-for-rust-within-a-windows-development-environment/66197124#66197124", "title": "How to work with OpenSSL for Rust within a Windows development environment", "body": "<p>None of the other answers worked for me but I got it working with vcpkg and static linking. Here is what I did (I was trying to install <a href=\"https://crates.io/crates/wrangler\" rel=\"nofollow noreferrer\">wrangler</a>, it worked after following the steps below and running <code>cargo install wrangler</code>).</p>\n<ol>\n<li><p>Install vcpkg (following the instructions from <a href=\"https://github.com/Microsoft/vcpkg#quick-start-windows\" rel=\"nofollow noreferrer\">https://github.com/Microsoft/vcpkg#quick-start-windows</a>). I ran this in a Visual Studio 2019 Developer Command Prompt (<code>%comspec% /k &quot;C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat&quot;</code>) but I don't know if this is necessary.</p>\n<pre class=\"lang-none prettyprint-override\"><code>cd C:\\\ngit clone https://github.com/microsoft/vcpkg\ncd vcpkg\nvcpkg\\bootstrap-vcpkg.bat\n</code></pre>\n</li>\n<li><p>From the same command prompt, install openssl</p>\n<pre class=\"lang-none prettyprint-override\"><code>vcpkg\\vcpkg install openssl:x64-windows-static\n</code></pre>\n</li>\n<li><p>Install the CA certificates (as described by <a href=\"https://stackoverflow.com/a/62729715\">Fatih Karan's answer</a> and the <a href=\"https://github.com/sfackler/rust-openssl/tree/5948898e54882c0bedd12d87569eb4dbee5bbca7#acquiring-root-certificates\" rel=\"nofollow noreferrer\">old README</a> of the <code>rust-openssl</code> project)</p>\n<pre class=\"lang-none prettyprint-override\"><code>mkdir &quot;C:\\Program Files\\OpenSSL-Win64\\certs&quot;\ncurl --remote-name --time-cond &quot;C:\\Program Files\\OpenSSL-Win64\\certs\\cacert.pem&quot; -o &quot;C:\\Program Files\\OpenSSL-Win64\\certs\\cacert.pem&quot; https://curl.se/ca/cacert.pem\n</code></pre>\n</li>\n<li><p>In a command prompt in your Rust project (or any other directory if you don't have a Rust project and just need to <code>cargo install</code> something), set the following environment variables:</p>\n<pre class=\"lang-none prettyprint-override\"><code>set OPENSSL_NO_VENDOR=1\nset RUSTFLAGS=-Ctarget-feature=+crt-static\nset SSL_CERT_FILE=C:\\OpenSSL-Win64\\certs\\cacert.pem\n</code></pre>\n<ul>\n<li><code>OPENSSL_NO_VENDOR</code> to <code>1</code>: Instruct the <code>openssl-sys</code> crate to use a pre-compiled openssl library. If this is not set it will try to compile it and fail (because <code>perl</code> is typically not available on Windows).</li>\n<li><code>RUSTFLAGS</code> to <code>-Ctarget-feature=+crt-static</code>: Instruct the Rust compiler (or more precisely the linker invoked by the Rust compiler) to produce a statically linked binary. If this is missing, the <code>vcpkg</code> crate (which is <a href=\"https://github.com/sfackler/rust-openssl/blob/71b6e3f81f9cf0d1772d00577873cc21ee8f86bf/openssl-sys/build/find_normal.rs#L220\" rel=\"nofollow noreferrer\">used</a> by the <code>openssl-sys</code> crate to <a href=\"https://docs.rs/vcpkg/0.2.11/src/vcpkg/lib.rs.html#1156\" rel=\"nofollow noreferrer\">find</a> the pre-compiled openssl library) will use the vcpkg triplet <code>x64-windows-static-md</code>. It seems that this triplet does not exist for <code>openssl</code>. With this environment variable, <code>vcpkg</code> will use the triplet <code>x64-windows-static</code> and this worked for me.</li>\n<li><code>SSL_CERT_FILE</code> to the location of <code>cacert.pem</code>: You need the root certificates in this file to make secure connections to servers.</li>\n</ul>\n</li>\n</ol>\n"}], "owner": {"reputation": 139, "user_id": 11326116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/957e6efd129a4373cf07387ddc11c56a?s=128&d=identicon&r=PG", "display_name": "Samson G.", "link": "https://stackoverflow.com/users/11326116/samson-g"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4397, "favorite_count": 2, "answer_count": 5, "score": 8, "last_activity_date": 1613317899, "creation_date": 1556588422, "last_edit_date": 1556767117, "question_id": 55912871, "link": "https://stackoverflow.com/questions/55912871/how-to-work-with-openssl-for-rust-within-a-windows-development-environment", "title": "How to work with OpenSSL for Rust within a Windows development environment", "body": "<p>I can't build my Rust project when I add an SSL dependency in my cargo file.\nThis isn't new to Windows, but I'd like to resolve the issue such that I can use Powershell and native Windows development to work on my Rust project.</p>\n\n<p>The dependency in question is the following:</p>\n\n<pre><code>[dependencies.ws]\nversion = \"0.8.0\"\nfeatures = [\"ssl\"]\n</code></pre>\n\n<p>When I run <code>cargo build</code>, I get a lot of errors regarding SSL as I'm on Windows so let us begin debugging this step by step.</p>\n\n<p>First errors:</p>\n\n<pre><code>PS C:\\Users\\sam\\vcs\\project&gt; cargo build\n   Compiling openssl-sys v0.9.43\nerror: failed to run custom build command for `openssl-sys v0.9.43`\nprocess didn't exit successfully: `C:\\Users\\sam\\vcs\\project\\target\\debug\\build\\openssl-sys-d964f46e4c48d206\\build-script-main` (exit code: 101)\n--- stdout\ncargo:rustc-cfg=const_fn\ncargo:rerun-if-env-changed=X86_64_PC_WINDOWS_MSVC_OPENSSL_LIB_DIR\nX86_64_PC_WINDOWS_MSVC_OPENSSL_LIB_DIR unset\ncargo:rerun-if-env-changed=OPENSSL_LIB_DIR\nOPENSSL_LIB_DIR unset\ncargo:rerun-if-env-changed=X86_64_PC_WINDOWS_MSVC_OPENSSL_INCLUDE_DIR\nX86_64_PC_WINDOWS_MSVC_OPENSSL_INCLUDE_DIR unset\ncargo:rerun-if-env-changed=OPENSSL_INCLUDE_DIR\nOPENSSL_INCLUDE_DIR unset\ncargo:rerun-if-env-changed=X86_64_PC_WINDOWS_MSVC_OPENSSL_DIR\nX86_64_PC_WINDOWS_MSVC_OPENSSL_DIR unset\ncargo:rerun-if-env-changed=OPENSSL_DIR\nOPENSSL_DIR unset\nnote: vcpkg did not find openssl as libcrypto and libssl: Aborted because VCPKGRS_DYNAMIC is not set\nnote: vcpkg did not find openssl as ssleay32 and libeay32: Aborted because VCPKGRS_DYNAMIC is not set\n</code></pre>\n\n<p>Alright, lets set <code>OPENSSL_LIB_DIR</code>, <code>OPENSSL_INCLUDE_DIR</code>, and <code>OPENSSL_DIR</code></p>\n\n<pre><code>$env:OPENSSL_LIB_DIR=\"C:\\OpenSSL-Win64\\lib\"\n$env:OPENSSL_INCLUDE_DIR=\"C:\\OpenSSL-Win64\\include\"\n$env:OPENSSL_DIR=\"C:\\OpenSSL-Win64\"\n</code></pre>\n\n<p>However, now running <code>cargo build</code> or <code>cargo run</code> actually compiles, but I don't think SSL works correctly since the code path that connects to the websocket fails with error none.</p>\n\n<p>I installed the latest (1.1.0j) full (non-slim) version of OpenSSL from the following website: <a href=\"https://slproweb.com/products/Win32OpenSSL.html\" rel=\"noreferrer\">https://slproweb.com/products/Win32OpenSSL.html</a></p>\n\n<p>The only environment variable it had set was: </p>\n\n<pre><code>OPENSSL_CONF: C:\\OpenSSL-Win64\\bin\\openssl.cfg\n</code></pre>\n\n<p>But I also added <code>C:\\OpenSSL-Win64\\bin</code> to my <code>PATH</code>.</p>\n\n<p>When <code>cargo build</code> actually compiled, the websocket fails with error <code>None</code></p>\n\n<p>The <code>on_error</code> block is executed on my Windows box, but my Linux machine never executes this code block.</p>\n\n<p>Just so we're on the same page, this is the output of the print statement:</p>\n\n<pre><code>fn on_error(&amp;mut self, err: ws::Error) {\n    println!(\"On Error, {}\", err)\n}\n</code></pre>\n\n<p>None isn't a very descriptive answer. So I assumed that I just needed some certs since OpenSSL doesn't come with certs.\nI downloaded a cacert.pem from somewhere online and placed it into the certs folder of the OpenSSL installation but that didn't make much difference either. Still the same <code>None</code> error.</p>\n\n<p>On my Linux box, I would expect the websocket connection to succeed and for the code to proceed to <code>on_open</code>:</p>\n\n<pre><code>fn on_open(&amp;mut self, _: ws::Handshake) -&gt; ws::Result&lt;()&gt; {\n...\n}\n</code></pre>\n\n<hr>\n\n<p>Has anyone worked through this OpenSSL issue on their Windows development environment?</p>\n\n<hr>\n\n<h2><em>UPDATE 0</em></h2>\n\n<p>As per Cloud's advice, I tried to use VCPKG. Unfortunately it didn't work.</p>\n\n<pre><code>PS C:\\Users\\sam\\vcs\\vcpkg&gt; .\\vcpkg.exe list\nopenssl-windows:x64-windows-static                 1.0.2q-2         OpenSSL is an open source project that provides ...\nopenssl-windows:x86-windows                        1.0.2q-2         OpenSSL is an open source project that provides ...\nopenssl:x64-windows-static                         0                OpenSSL is an open source project that provides ...\nopenssl:x86-windows                                0                OpenSSL is an open source project that provides ...\n</code></pre>\n\n<p>Then I set the variables in my powershell window:</p>\n\n<pre><code>PS C:\\Users\\sam\\vcs\\project&gt; $env:OPENSSL_DIR = 'C:\\Users\\sam\\vcs\\vcpkg\\installed\\x64-windows-static'\nPS C:\\Users\\sam\\vcs\\project&gt; $env:OPENSSL_STATIC = 'Yes'\nPS C:\\Users\\sam\\vcs\\project&gt; $env:VCPKGRS_DYNAMIC='1'\n</code></pre>\n\n<p>Then I ran <code>cargo clean</code> and then <code>cargo build</code> and I still got the same error where my websocket throws the error <code>None</code>.</p>\n\n<p>Still no luck here.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1556588820, "post_id": 55911322, "comment_id": 98480349, "body": "Try changing your function argument from <code>&amp;String</code> to <code>&amp;str</code>. I&#39;m on mobile, so full answer will arrive a bit later, but this seems to be the solution."}], "answers": [{"comments": [{"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1556665890, "post_id": 55913613, "comment_id": 98512965, "body": "Thank you. This resolved my issue. But you went further to explain how Traits work which, I think, on practical terms this answer is better than any of the books or tutorials I have went through."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1556681190, "post_id": 55913613, "comment_id": 98515570, "body": "Glad to hear it! Please check the edit - I&#39;ve tested (compiling, not running) the <code>&amp;str</code> case and added it to the answer, since this seem to work too."}], "tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 3, "last_activity_date": 1556681142, "last_edit_date": 1556681142, "creation_date": 1556595283, "answer_id": 55913613, "question_id": 55911322, "link": "https://stackoverflow.com/questions/55911322/how-to-implement-a-trait-for-a-function/55913613#55913613", "title": "How to implement a trait for a function", "body": "<p>Let's look at the documentation for the types and traits in question. Usually the required traits are implemented automatically on all the types where it is possible, and, in fact, if the type in question is not your own, the trait <em>has</em> to be implemented by the library. So, first of all we check the <a href=\"https://docs.rs/assert_cmd/0.11.1/assert_cmd/assert/trait.IntoOutputPredicate.html\" rel=\"nofollow noreferrer\"><code>assert_cmd</code> docs</a> to see what types can be used here.</p>\n\n<p>There are two implementations which can be of interest for us:</p>\n\n<pre><code>impl&lt;P&gt; IntoOutputPredicate&lt;StrOutputPredicate&lt;P&gt;&gt; for P\nwhere\n    P: Predicate&lt;str&gt;\n</code></pre>\n\n<pre><code>impl&lt;P&gt; IntoOutputPredicate&lt;P&gt; for P\nwhere\n    P: Predicate&lt;[u8]&gt;\n</code></pre>\n\n<p>Let's see now, <a href=\"https://docs.rs/predicates-core/1.0.0/predicates_core/trait.Predicate.html\" rel=\"nofollow noreferrer\">what is the <code>Predicate</code></a>. This ends in the <code>predicates-core</code> crate, so it seems that at least some of the items from the <code>predicates</code> crate (based on this core) will be possible to use.</p>\n\n<p>Now, let's try the other way round - look through the <a href=\"https://docs.rs/predicates/1.0.1/predicates/function/fn.function.html\" rel=\"nofollow noreferrer\">docs for <code>predicate::function</code></a>:</p>\n\n<pre><code>pub fn function&lt;F, T&gt;(function: F) -&gt; FnPredicate&lt;F, T&gt; \nwhere\n    F: Fn(&amp;T) -&gt; bool,\n    T: ?Sized, \n</code></pre>\n\n<p>Well then, we've got the type <code>FnPredicate</code> mentioned in the error message, so <a href=\"https://docs.rs/predicates/1.0.1/predicates/function/struct.FnPredicate.html\" rel=\"nofollow noreferrer\">what traits are implemented</a> by it?</p>\n\n<pre><code>impl&lt;F, T&gt; Predicate&lt;T&gt; for FnPredicate&lt;F, T&gt;\nwhere\n    F: Fn(&amp;T) -&gt; bool,\n    T: ?Sized, \n</code></pre>\n\n<p>Here it is! You've passed a closure taking <code>&amp;String</code>, so the <code>T</code> in this definition is inferred to be <code>String</code>, i.e. the implemented trait is <code>Predicate&lt;String&gt;</code>.</p>\n\n<p>Now, if you recall the first part, you'll see that there is no <code>Predicate&lt;String&gt;</code> there in implementations!</p>\n\n<h3>How to resolve this?</h3>\n\n<p>I see two possibilities, as for now:</p>\n\n<ol>\n<li>You can use the second implementation and make your predicate take reference to a byte slice <code>&amp;[u8]</code>. I can't test it with the library itself, since it isn't on the playground, but if I make this change just in closure, I <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3a1c02c0ffc457f6bd75508f2079c084\" rel=\"nofollow noreferrer\">immediately get the error</a>:</li>\n</ol>\n\n<pre><code>error[E0277]: can't compare `[u8]` with `str`\n --&gt; src/lib.rs:3:15\n  |\n3 |         if (x == \"You got it right!\" || x == \"You got it wrong!\") {\n  |               ^^ no implementation for `[u8] == str`\n  |\n  = help: the trait `std::cmp::PartialEq&lt;str&gt;` is not implemented for `[u8]`\n  = note: required because of the requirements on the impl of `std::cmp::PartialEq&lt;&amp;str&gt;` for `&amp;[u8]`\n</code></pre>\n\n<p>Fortunately, this is fairly easily fixed by changing string literals to byte strings (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=34c29b9f75cefcf156cf4e4fb4e24df2\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>let _ = |x: &amp;[u8]| {\n    x == b\"You got it right!\" || x == b\"You got it wrong!\"\n};\n</code></pre>\n\n<p>Note that I also took advantage of <a href=\"https://github.com/rust-lang/rust-clippy\" rel=\"nofollow noreferrer\">Clippy</a> hints to simplify the code in question (on playground it is under Tools button on the right side).</p>\n\n<p>Now, if you pass this closure into <code>predicate::function</code>, all should work fine.</p>\n\n<ol start=\"2\">\n<li>Another way is to use the first implementation - you can see that <code>Predicate&lt;str&gt;</code>, i.e. function predicate receiving <code>&amp;str</code>, is also supported, although in a bit more complex way. But for now this doesn't seem to be a problem, since the trait is implemented anyway - that's just one internal layer of indirection, but this is not your problem (<code>assert_cmd</code> crate should handle this itself). This code, in particular, compiles well:</li>\n</ol>\n\n<pre><code>use assert_cmd::{assert::OutputAssertExt, cargo::CommandCargoExt};\nuse predicates::prelude::*;\nuse std::process::Command;\n\nfn main() {\n    let hazard_predicate =\n        predicate::function(|x: &amp;str| x == \"You got it right!\" || x == \"You got it wrong!\");\n    let mut cmd = Command::cargo_bin(\"rust-starter\").expect(\"Calling binary failed\");\n    cmd.arg(\"hazard\").assert().stdout(hazard_predicate);\n}\n</code></pre>\n\n<h3>Side note</h3>\n\n<p>There is <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-o\">a long-standing question here</a> describing why this is bad to have the functions require <code>&amp;String</code> (or <code>&amp;Vec</code>, or <code>&amp;Box</code> - a reference to the owned container, it is). In short - you can replace <code>&amp;String</code> by <code>&amp;str</code>, and this will not be a restriction. Of course, library authors know that too and usually force you to have the most general way, where you have to work with the least indirection possible.</p>\n"}], "owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 197, "favorite_count": 0, "accepted_answer_id": 55913613, "answer_count": 1, "score": -1, "last_activity_date": 1556681142, "creation_date": 1556574965, "question_id": 55911322, "link": "https://stackoverflow.com/questions/55911322/how-to-implement-a-trait-for-a-function", "title": "How to implement a trait for a function", "body": "<p>I have the following code</p>\n\n<pre><code>let hazard_predicate = predicate::function(|x: &amp;String| {\n    if (x == \"You got it right!\" || x == \"You got it wrong!\") {\n        return true;\n    } else {\n        return false;\n    }\n});\nlet mut cmd = Command::cargo_bin(\"rust-starter\").expect(\"Calling binary failed\");\ncmd.arg(\"hazard\").assert().stdout(hazard_predicate);\n</code></pre>\n\n<p>It doesn't compile. It complains that hazard_predicate doesn't implement a particular trait.</p>\n\n<p>Here is the error message</p>\n\n<pre><code>error[E0277]: the trait bound \n `predicates::function::FnPredicate&lt;[closure@core/tests/test_cli.rs:31:48: 37:6], std::string::String&gt;: assert_cmd::assert::IntoOutputPredicate&lt;_&gt;` is not satisfied\n  --&gt; core/tests/test_cli.rs:39:32\n    |\n 39 |     cmd.arg(\"hazard\").assert().stdout(hazard_predicate);\n   |                                ^^^^^^ the trait `assert_cmd::assert::IntoOutputPredicate&lt;_&gt;` is not implemented for `predicates::function::FnPredicate&lt;[closure@core/tests/test_cli.rs:31:48: 37:6], std::string::String&gt;`\n\n error: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n</code></pre>\n\n<p>So How do I implement that trait for my predicate function?</p>\n"}, {"tags": ["struct", "rust", "tuples"], "comments": [{"owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556572079, "post_id": 55910367, "comment_id": 98476845, "body": "I need to use individual values in formulae a lot, and I want to avoid repeating <code>pixel.</code> part. Example <code>central_x=pixel.x+pixel.dx&#47;2.0</code> (it looks better in form of <code>central_x = x + dx&#47;2.0</code>)."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 3, "last_activity_date": 1556790490, "creation_date": 1556790490, "answer_id": 55949767, "question_id": 55910367, "link": "https://stackoverflow.com/questions/55910367/unpacking-structure-to-l-value-tuple-in-rust/55949767#55949767", "title": "Unpacking structure to l-value tuple in Rust", "body": "<p>An attentive reading of <a href=\"https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html#destructuring-structs\" rel=\"nofollow noreferrer\">chapter 18 of <em>The Rust Programming Language</em></a> is recommended here. One can use pattern matching to destructure arrays, enums, structs, and tuples.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let Pixel { x, y, dx, dy } = pixel;\n</code></pre>\n\n<p>This can even be employed in a function's parameter arguments.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo(Pixel { x, y, dx, dy }: Pixel) {\n\n}\n</code></pre>\n"}], "owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 397, "favorite_count": 0, "accepted_answer_id": 55949767, "answer_count": 1, "score": 0, "last_activity_date": 1556790490, "creation_date": 1556569502, "question_id": 55910367, "link": "https://stackoverflow.com/questions/55910367/unpacking-structure-to-l-value-tuple-in-rust", "title": "Unpacking structure to l-value tuple in Rust", "body": "<p>I have following structure:</p>\n\n<pre><code>struct Pixel{x:f64, y:f64, dx:f64, dy:f64}\n</code></pre>\n\n<p>I got this structure as argument into function. I want to reduce typing and unpack it:</p>\n\n<pre><code>fn foo(pixel:Pixel){\n    let (x, y, dx, dy) = pixel;\n}\n</code></pre>\n\n<p>This code does not compile. Are there any syntax sugar to avoid endless <code>pixel.x</code>, <code>pixel.dx</code>, etc? I want to have some easy way to 'extract' ( to alias) values of structure into my function. And I want to avoid verbosity of <code>let x = pixel.x; let dx = pixel.dx</code>, etc.</p>\n\n<p>Is there a concise way to do it? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556569943, "post_id": 55909798, "comment_id": 98476124, "body": "I would recommend reading the <a href=\"https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">&quot;Understanding Ownership&quot; chapter of <i>The Rust Programming Language</i></a> if you haven&#39;t yet. A reference to a function&#39;s local value could never outlive that lifetime <code>&#39;a</code>, defined by the caller."}, {"owner": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556571672, "post_id": 55909798, "comment_id": 98476716, "body": "Being more objective, is there a way that I can have a reference to a File inside of a struct other than manually creating it? (the function <code>new</code> is trying to create the file and returning a struct where the file reference is given for future use). In order to avoid doing: <code>CommitLog { file: File.create... }</code>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1556572018, "post_id": 55909798, "comment_id": 98476824, "body": "This raises the question: why do you want to keep only a reference? It seems to me that you would prefer <code>Foo</code> <i>owning</i> the file rather than borrowing it. (And please <a href=\"https://stackoverflow.com/posts/55909798/edit\">edit</a> the question to include all the details)"}], "answers": [{"tags": [], "owner": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "is_accepted": false, "score": 0, "last_activity_date": 1556574483, "creation_date": 1556574483, "answer_id": 55911250, "question_id": 55909798, "link": "https://stackoverflow.com/questions/55909798/struct-containing-reference-to-a-file-in-rust-fails-to-borrow/55911250#55911250", "title": "Struct containing reference to a file in Rust fails to borrow", "body": "<p>As @E_net4 mentioned, I don't want a mutable reference, yet I want to own the value. Rather than trying to play with lifetimes, I can basically just own the file and handle the whole struct as mutable when trying to write to the file!</p>\n\n<pre><code>use std::path::{ PathBuf };\nuse std::fs::File;\nuse std::io::Write;\nuse std::env;\n\n\n#[derive(Debug)]\npub struct Foo {\n    file:  File,\n}\n\nimpl Foo {\n    pub fn new(path: PathBuf) -&gt; Self {\n        Self { \n          file: File::create(path).unwrap(),\n        }\n    }\n\n    pub fn write(&amp;mut self, b: &amp;[u8]) -&gt; Result&lt;usize, std::io::Error&gt; {\n        self.file.write(b)\n    }\n}\n\nfn main() {\n    let mut tmp_dir = env::temp_dir();\n    tmp_dir.push(\"foo23\");\n    let mut f = Foo::new(tmp_dir);\n\n    f.write(b\"test2\").unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 809, "user_id": 1647226, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fb84d2df934999fc747feb4d7c758e2c?s=128&d=identicon&r=PG", "display_name": "Marcelo Boeira", "link": "https://stackoverflow.com/users/1647226/marcelo-boeira"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 226, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1556574483, "creation_date": 1556566760, "question_id": 55909798, "link": "https://stackoverflow.com/questions/55909798/struct-containing-reference-to-a-file-in-rust-fails-to-borrow", "title": "Struct containing reference to a file in Rust fails to borrow", "body": "<p>Not sure what I am missing here, the lifetime is declared, therefore the struct should use the path to create the file and return a Struct with the mutable File reference for me to be able to call \"write\" wrapper later...</p>\n\n<pre><code>use std::path::Path;\nuse std::fs::File;\n// use std::io::Write;\n\n#[derive(Debug)]\npub struct Foo&lt;'a&gt; {\n    file: &amp;'a mut File,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    pub fn new(path: &amp;'a Path) -&gt; Result&lt;Self, std::io::Error&gt; {\n        let mut f: &amp;'a File = &amp;File::create(path)?;\n\n        Ok(Self { file: &amp;mut f })\n    }\n\n    //pub fn write(&amp;self, b: [u8]) {\n    //    self.file.write(b);\n    //}\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>   | impl&lt;'a&gt; Foo&lt;'a&gt; {\n   |      -- lifetime `'a` defined here\n11 |     pub fn new(path: &amp;'a Path) -&gt; Result&lt;Self, std::io::Error&gt; {\n12 |         let mut f: &amp;'a File = &amp;File::create(path)?;\n   |                    --------    ^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n   |                    |\n   |                    type annotation requires that borrow lasts for `'a`\n...\n15 |     }\n   |     - temporary value is freed at the end of this statement\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1556557773, "post_id": 55907873, "comment_id": 98471188, "body": "A struct value, and a reference to a struct value are two different types from the standpoint of the typechecker. Is that perhaps what is throwing you off?"}, {"owner": {"reputation": 2104, "user_id": 5129504, "user_type": "registered", "accept_rate": 89, "profile_image": "https://graph.facebook.com/476994845791992/picture?type=large", "display_name": "Josh Weinstein", "link": "https://stackoverflow.com/users/5129504/josh-weinstein"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1556557848, "post_id": 55907873, "comment_id": 98471211, "body": "In the rust example, is s2 inferred as a reference or is it a new value created from a reference?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1556557957, "post_id": 55907873, "comment_id": 98471257, "body": "<code>&amp;s1</code> means you have a reference type."}, {"owner": {"reputation": 2104, "user_id": 5129504, "user_type": "registered", "accept_rate": 89, "profile_image": "https://graph.facebook.com/476994845791992/picture?type=large", "display_name": "Josh Weinstein", "link": "https://stackoverflow.com/users/5129504/josh-weinstein"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1556558370, "post_id": 55907873, "comment_id": 98471427, "body": "I see so it is not needed to explicitly declare on the <code>let</code> side. Make sense now."}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 2, "creation_date": 1556561336, "post_id": 55907873, "comment_id": 98472636, "body": "Another thing to clarify is that Rust typically <i>moves</i> values as opposed to copying them. If you were to add a line <code>let s3 = s1</code> to the Rust example, like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b434b04f47d10831a208c4d08d8b961b\" rel=\"nofollow noreferrer\">this</a>, then it would fail to compile as the value has been moved out of <code>s1</code> and into <code>s3</code>. The <code>Clone</code> trait can be used to explicitly create a new copy of a value (e.g. <code>let s3 = s1.clone()</code>), and the <code>Copy</code> trait can be used to allow implicit bit-for-bit copying (e.g. primitives like i32)."}], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1556606514, "post_id": 55913011, "comment_id": 98484814, "body": "An additional point to consider: Rust does much fewer implicit type conversions than C++, so the direct translation of the third line in the OP&#39;s C++ example (copy mode) is <code>let s3: String = s2;</code> and doesn&#39;t compile. It requires an explicit call to <code>s2.to_string()</code>."}], "tags": [], "owner": {"reputation": 4240, "user_id": 1541330, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9d7b0057ffc24e644c4a30ba599d7753?s=128&d=identicon&r=PG&f=1", "display_name": "U007D", "link": "https://stackoverflow.com/users/1541330/u007d"}, "is_accepted": true, "score": 2, "last_activity_date": 1556590112, "last_edit_date": 1556590112, "creation_date": 1556589800, "answer_id": 55913011, "question_id": 55907873, "link": "https://stackoverflow.com/questions/55907873/explicit-annotations-of-references-vs-values-in-rust/55913011#55913011", "title": "Explicit annotations of references vs values in rust", "body": "<h1>What is my type?</h1>\n\n<p>The type of <code>s2</code> is <code>&amp;std::string::String</code>, more commonly expressed as simply <code>&amp;String</code>.</p>\n\n<p><code>s2</code> is a borrow of <code>s1</code> in the form of a (read-only) reference (the <code>&amp;</code>), and would prevent <code>s1</code> from being written to (if it were mutable) while <code>s2</code> was in scope.</p>\n\n<h1>How can I determine this on my own in the future?</h1>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7163bd68b9c53f36c07be91b0264e103\" rel=\"nofollow noreferrer\">Sample code on Playground</a></p>\n\n<p>If you would like to ask the compiler to reveal the type of a particular binding, a common idiom is to use <code>let () = some_binding;</code>. The compiler will give you an error, revealing the type of <code>some_binding</code>.</p>\n\n<p>I noticed that the compiler seemed to 'help' by omitting the leading <code>&amp;</code>, so as you get comfortable with Rust, I recommend trying to call a dummy function with the wrong type, which reveals the binding's full type.  Here, the compiler does reveal the full type of the calling parameter, which you can see is <code>&amp;String</code>.</p>\n\n<h2>Explicitly Declaring Types (addressing OP's comment):</h2>\n\n<p>Regarding explicitly declaring the type on the <code>let</code> side of a declaration, as in C++ (<a href=\"https://herbsutter.com/2013/08/12/gotw-94-solution-aaa-style-almost-always-auto/\" rel=\"nofollow noreferrer\">see 'AAA'</a>), Rust supports something similar:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a: u32 = 42;\n\n// equvialent\nlet b = 42_u32;\n</code></pre>\n\n<p>For constructed types, the type will be whatever type the type constructor returns:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// seems somewhat redundant (since `String::new()` returns `String`) \n// but is perfectly legal\nlet c: String = String::new(\"Hello, world!\");\n\n// equivalent\nlet d = String::new(\"Hello, world!\");\n</code></pre>\n\n<p>So as long as the compiler can unambiguously determine the type from the right hand side, the type can be inferred for <code>let</code>.</p>\n\n<p>Note: the type specification is still mandatory for <code>const</code> bindings:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// error: despite the explicit type declaration on the RHS, the type is still required\n//const foo = 42_u32;\n\n// since the type must be explicitly defined specifying again on the RHS is redundant\n// (but legal):\nconst foo: u32 = 42_u32;\n\n// Rustic (idiomatic) for `const`\nconst bar: u32 = 42;\n</code></pre>\n"}], "owner": {"reputation": 2104, "user_id": 5129504, "user_type": "registered", "accept_rate": 89, "profile_image": "https://graph.facebook.com/476994845791992/picture?type=large", "display_name": "Josh Weinstein", "link": "https://stackoverflow.com/users/5129504/josh-weinstein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 0, "accepted_answer_id": 55913011, "answer_count": 1, "score": 1, "last_activity_date": 1556590112, "creation_date": 1556557450, "last_edit_date": 1556557764, "question_id": 55907873, "link": "https://stackoverflow.com/questions/55907873/explicit-annotations-of-references-vs-values-in-rust", "title": "Explicit annotations of references vs values in rust", "body": "<p>So in Rust, one thing I am puzzled with is the type inference ability when it comes to a value vs a reference. For example,</p>\n\n<pre><code>fn main() {\n    let s1 = String::from(\"h1\");\n    let s2 = &amp;s1;\n    println!(\"string is {}\", s1);\n} \n</code></pre>\n\n<p>The borrow checker allows this to compile, but I am not sure why? Is <code>s2</code> here a value or is it being inferred as a reference to s1?</p>\n\n<p>In C++, initializing a new value via a reference would create a copy, unless that variable was explicitly declared as a reference:</p>\n\n<pre><code>#include &lt;string&gt;\n\nint main(int argc, char const* argv[]) {\n    std::string s1(\"Hello\");\n    std::string&amp; s2 = s1; // reference\n    std::string s3 = s2; // copy\n}\n</code></pre>\n\n<p>So in rust, my question is, does type inference also apply to reference vs value situations? If so, when is when required to explicitly declare variables as references?</p>\n"}, {"tags": ["types", "rust", "integer"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556540805, "post_id": 55903243, "comment_id": 98462274, "body": "The default integer type is a signed one, but I cannot say much about the size"}, {"owner": {"reputation": 2409, "user_id": 2284570, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/9bd1d26aad2cfb7ece066d94c128d529?s=128&d=identicon&r=PG", "display_name": "user2284570", "link": "https://stackoverflow.com/users/2284570/user2284570"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556540896, "post_id": 55903243, "comment_id": 98462329, "body": "@hegel5000 what I wonder is if I do something after like <code>mut = mut + 20000004359729432973429745297452997799</code> there will be an overflow or it creates a special type which can store integers with arbitrary number of bytes\u202f?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1556541154, "post_id": 55903243, "comment_id": 98462504, "body": "Relevant: <a href=\"https://stackoverflow.com/q/38854408/1233251\">stackoverflow.com/q/38854408/1233251</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1556543614, "post_id": 55903243, "comment_id": 98463910, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/38854408/do-literal-integral-values-have-a-specific-type-in-rust\">Do literal integral values have a specific type in Rust?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556540839, "post_id": 55903378, "comment_id": 98462301, "body": "Where was it validated?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1556541003, "post_id": 55903378, "comment_id": 98462395, "body": "@FrenchBoiethios There is a link to the issue but I believe that the RFC repository only merge a RFC when it&#39;s accepted so by definition if a RFC is on the master branch, it has been accepted and still up to date. &quot;Eventually, somebody on the core team will either accept the RFC by merging the pull request, at which point the RFC is &#39;active&#39;, or reject it by closing the pull request.&quot; <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0002-rfc-process.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/0002-rfc-process.&zwnj;&#8203;md</a>"}, {"owner": {"reputation": 2409, "user_id": 2284570, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/9bd1d26aad2cfb7ece066d94c128d529?s=128&d=identicon&r=PG", "display_name": "user2284570", "link": "https://stackoverflow.com/users/2284570/user2284570"}, "edited": false, "score": 0, "creation_date": 1556541263, "post_id": 55903378, "comment_id": 98462558, "body": "@Stargateur is it also the same for integers returned by functions\u202f?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 2409, "user_id": 2284570, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/9bd1d26aad2cfb7ece066d94c128d529?s=128&d=identicon&r=PG", "display_name": "user2284570", "link": "https://stackoverflow.com/users/2284570/user2284570"}, "edited": false, "score": 4, "creation_date": 1556541764, "post_id": 55903378, "comment_id": 98462872, "body": "@user2284570 functions require to be explicit, so you can&#39;t write such functions. You only way would be to use generic, and let the compiler infer the type of the generic with a variable you didn&#39;t type, for exemple: <a href=\"https://play.integer32.com/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=95dcc2095b4b1744f314d85e54c58195\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}, {"owner": {"reputation": 128, "user_id": 4012426, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000105441681/picture?type=large", "display_name": "Hutch Moore", "link": "https://stackoverflow.com/users/4012426/hutch-moore"}, "edited": false, "score": 0, "creation_date": 1595872182, "post_id": 55903378, "comment_id": 111618840, "body": "Did they change the default? My IDE is telling me my numbers are i64. Maybe it&#39;s inferring that type from somewhere, idk."}, {"owner": {"reputation": 128, "user_id": 4012426, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000105441681/picture?type=large", "display_name": "Hutch Moore", "link": "https://stackoverflow.com/users/4012426/hutch-moore"}, "edited": false, "score": 0, "creation_date": 1595872799, "post_id": 55903378, "comment_id": 111619073, "body": "Never mind, it was coming from a library method return value, and that cascaded down to my integers of unmarked type."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 20, "last_activity_date": 1557155035, "last_edit_date": 1557155035, "creation_date": 1556540812, "answer_id": 55903378, "question_id": 55903243, "link": "https://stackoverflow.com/questions/55903243/what-is-the-default-integer-type-in-rust/55903378#55903378", "title": "What is the default integer type in Rust?", "body": "<p>There is <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0212-restore-int-fallback.md\" rel=\"noreferrer\">RFC 212</a>, which states:</p>\n\n<blockquote>\n  <p>Integer literals whose type is unconstrained will default to <code>i32</code></p>\n</blockquote>\n"}], "owner": {"reputation": 2409, "user_id": 2284570, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/9bd1d26aad2cfb7ece066d94c128d529?s=128&d=identicon&r=PG", "display_name": "user2284570", "link": "https://stackoverflow.com/users/2284570/user2284570"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1889, "favorite_count": 0, "accepted_answer_id": 55903378, "answer_count": 1, "score": 17, "last_activity_date": 1557155035, "creation_date": 1556540346, "last_edit_date": 1557155024, "question_id": 55903243, "link": "https://stackoverflow.com/questions/55903243/what-is-the-default-integer-type-in-rust", "title": "What is the default integer type in Rust?", "body": "<p>When doing something like:</p>\n\n<pre><code>let mut sum = 5 + 10;\n</code></pre>\n\n<p>What is the exact type of <code>sum</code>? Is it an arbitrary-size type which can\u2019t be overflowed?</p>\n"}, {"tags": ["rust", "closures", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1556543772, "post_id": 55902786, "comment_id": 98463987, "body": "With <code>move</code>, you are not actually moving the reference, but rather <i>copying</i> it, since immutable references are <code>Copy</code>. Otherwise it would be illegal to move the reference to two different closures."}], "tags": [], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "is_accepted": true, "score": 4, "last_activity_date": 1556538671, "creation_date": 1556538671, "answer_id": 55902786, "question_id": 55902644, "link": "https://stackoverflow.com/questions/55902644/keeping-a-value-by-reference-inside-a-closure/55902786#55902786", "title": "Keeping a value by reference inside a closure", "body": "<blockquote>\n  <p>I can use move but I'd like to do it by reference. How can I satisfy the compiler? </p>\n</blockquote>\n\n<p>You're doing it by reference in this case. <em>z</em> is already a reference, so you would <code>move</code> a reference. By leaving out the <code>move</code> you're creating a new reference of the type <code>&amp;'b &amp;'a str</code> (<code>&amp;'b</code> only living inside of your function).</p>\n"}], "owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 55902786, "answer_count": 1, "score": 1, "last_activity_date": 1556538671, "creation_date": 1556538153, "question_id": 55902644, "link": "https://stackoverflow.com/questions/55902644/keeping-a-value-by-reference-inside-a-closure", "title": "Keeping a value by reference inside a closure", "body": "<p>Given the following example I'd like to use <code>z</code> by reference inside my closures:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n  x: Box&lt;dyn Fn() + Send + Sync + 'a&gt;,\n  y: Box&lt;dyn Fn() + Send + Sync + 'a&gt;,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n  fn new(z: &amp;'a str) -&gt; Foo&lt;'a&gt; {\n    let x = Box::new(|| { z; });\n    let y = Box::new(|| { z; });\n    Foo {\n      x,\n      y,\n    }\n  }\n}\n</code></pre>\n\n<p>However, this implementation gives the error:</p>\n\n<p><code>closure may outlive the current function, but it borrows 'z', which is owned by the current function</code>.</p>\n\n<p>I can use <code>move</code> but I'd like to do it by reference. How can I satisfy the compiler? </p>\n\n<p>My current thoughts are to set the function and the closures to the same lifetime, but I wasn't able to find documentation on that.</p>\n"}, {"tags": ["rust", "embedded", "stm32f4discovery"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1556608133, "post_id": 55902075, "comment_id": 98485515, "body": "The error message shows a different path thatn you wrote in your &quot;steps taken so far&quot;. Triple check, that you are in the correct folder and the relative path is correct. Use an absolute path if necessary."}], "answers": [{"tags": [], "owner": {"reputation": 124, "user_id": 2542561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d6d5e9d310c9a44aef55a071385612b?s=128&d=identicon&r=PG", "display_name": "Muhammad Ovais", "link": "https://stackoverflow.com/users/2542561/muhammad-ovais"}, "is_accepted": true, "score": 1, "last_activity_date": 1556622600, "creation_date": 1556622600, "answer_id": 55919652, "question_id": 55902075, "link": "https://stackoverflow.com/questions/55902075/unable-to-connect-to-the-gdb-server-through-arm-none-eabi-gdb-command/55919652#55919652", "title": "Unable to connect to the GDB server through arm-none-eabi-gdb command", "body": "<p>Thanks hellow.. Your 'Triple check' statement works for me. Yes, it was the path issue which i had to change while debugging. It is rocking..</p>\n"}], "owner": {"reputation": 124, "user_id": 2542561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d6d5e9d310c9a44aef55a071385612b?s=128&d=identicon&r=PG", "display_name": "Muhammad Ovais", "link": "https://stackoverflow.com/users/2542561/muhammad-ovais"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1879, "favorite_count": 0, "accepted_answer_id": 55919652, "answer_count": 1, "score": 1, "last_activity_date": 1556622600, "creation_date": 1556536082, "last_edit_date": 1556608087, "question_id": 55902075, "link": "https://stackoverflow.com/questions/55902075/unable-to-connect-to-the-gdb-server-through-arm-none-eabi-gdb-command", "title": "Unable to connect to the GDB server through arm-none-eabi-gdb command", "body": "<p>I am following this <a href=\"https://docs.rust-embedded.org/discovery/05-led-roulette/flash-it.html\" rel=\"nofollow noreferrer\">tutorial</a>. I have compiled the code successfully, but when I try to run using command <code>arm-none-eabi-gdb -q thumbv7em-none-eabihf/debug/led-roulette</code> on terminal, it says that:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>C:\\Program Files (x86)\\GNU Tools ARM Embedded\\8 2018-q4-major\\bin\\arm-none-eabi-gdb.exe: warning: Couldn't determine a path for the index cache directory.\nthumbv7em-none-eabihf/debug/led-roulette: No such file or directory\n</code></pre>\n\n<p>Although, I have physically checked the path and the file does exist there.</p>\n\n<p>I am a beginner to stm32f3Discovery and trying to setup the device using the <a href=\"https://docs.rust-embedded.org/discovery/\" rel=\"nofollow noreferrer\">documentation</a></p>\n\n<p>Steps taken so far:</p>\n\n<ol>\n<li><p>Already added the target using:\n<code>rustup target add thumbv7em-none-eabihf</code></p></li>\n<li><p>Compiled the program using command:\n<code>cargo build --target thumbv7em-none-eabihf</code></p></li>\n<li><p>Getting correct output of the following command:\n<code>cargo readobj --target thumbv7em-none-eabihf --bin led-roulette -- -file-headers</code></p></li>\n<li><p>As I am on Windows, I've tried the following command to launch openOCD:\n<code>openocd -s C:\\OpenOCD\\scripts -f interface/stlink-v2-1.cfg -f target/stm32f3x.cfg</code></p></li>\n<li><p>Run this command to connect to gdb server, but failed:\n<code>arm-none-eabi-gdb -q target/thumbv7em-none-eabihf/debug/led-roulette</code></p></li>\n</ol>\n\n<p>The above command should work and connect GDB server, but it doesn't.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 340, "user_id": 6067158, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/4xUeR.jpg?s=128&g=1", "display_name": "Aarkon", "link": "https://stackoverflow.com/users/6067158/aarkon"}, "edited": false, "score": 1, "creation_date": 1556538553, "post_id": 55902143, "comment_id": 98461085, "body": "I think that qualifies for stupid simple. Thank you! Interesting though that I never came across this fact, despite the fact that I read the official language book\u2019s chapter on Cargo and dependencies. It must either completely have slipped my attention or what I\u2019m trying to do it is considered an edge case/too advanced for the book\u2019s scope."}], "tags": [], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "is_accepted": true, "score": 0, "last_activity_date": 1556536333, "creation_date": 1556536333, "answer_id": 55902143, "question_id": 55901986, "link": "https://stackoverflow.com/questions/55901986/local-dependency-not-found/55902143#55902143", "title": "Local dependency not found", "body": "<p>You can not use an executable (crate with a <em>main.rs</em> file) as a dependency. But you could move all shared things into a 3. library crate and use that as a dependency in both executables.</p>\n"}], "owner": {"reputation": 340, "user_id": 6067158, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/4xUeR.jpg?s=128&g=1", "display_name": "Aarkon", "link": "https://stackoverflow.com/users/6067158/aarkon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 55902143, "answer_count": 1, "score": 0, "last_activity_date": 1556536333, "creation_date": 1556535737, "question_id": 55901986, "link": "https://stackoverflow.com/questions/55901986/local-dependency-not-found", "title": "Local dependency not found", "body": "<p>I have a project containing two (binary) packages, front- and backend.  Both are created &amp; managed by cargo independently. In the frontend, I want to access some types declared in the backend, so I added to the frontend\u2019s <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies.myapp-backend]\npath = \"../myapp-backend\"\n</code></pre>\n\n<p>This matches my folder structure and <code>cargo-run</code> does not complain. Yet I can not use the crate in the frontend: When I add <code>extern crate myapp-backend</code> (or one of the variants with or without a <code>_</code> instead of <code>-</code>) to my frontend\u2019s <code>main.rs</code>, the compiler yells at me that it can\u2019t find the crate.</p>\n\n<p>To check wether the whole dependency statement in the Cargo.toml is evaluated at all, I flipped some letters which gave me an instant compilation error (it therefore <em>is</em> evaluated). Also, I exchanged the importing statement with <code>use myapp-backend</code>, again with variations on the hyphen, directly, which results in the expected <code>no 'myapp_backend' external crate</code>. I even used the alternative notation for an external dependency, with no effect:</p>\n\n<pre><code>myapp-backend = {path = \"../myapp-backend\"}\n</code></pre>\n\n<p>I am pretty sure I am missing something stupid simple, but after reading Cargo\u2019s documentation as well as Stack Overflow up and down for two days now, I dare to ask. ^^</p>\n"}, {"tags": ["rust", "rust-crates"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556528367, "post_id": 55899909, "comment_id": 98456078, "body": "And if you create a <code>move</code> closure? <code>data.filter(move |my_struct| { &#47;*...*&#47; }</code>"}, {"owner": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1556528877, "post_id": 55899909, "comment_id": 98456340, "body": "Hey there @FrenchBoiethios the same error would happen."}], "answers": [{"comments": [{"owner": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "edited": false, "score": 0, "creation_date": 1556611261, "post_id": 55905525, "comment_id": 98487042, "body": "Hi Rodrigo, thank you! In my mind, the elision was going to infer &#39;e and not &#39;s."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 2, "last_activity_date": 1556548264, "creation_date": 1556548264, "answer_id": 55905525, "question_id": 55899909, "link": "https://stackoverflow.com/questions/55899909/how-to-use-wirefilter-over-an-infinite-stream-of-data/55905525#55905525", "title": "How to use wirefilter over an infinite stream of data", "body": "<p>It looks like the problem is with the lifetime elision in return structs. In particular this code:</p>\n\n<pre><code>fn execution_context(&amp;self) -&gt; ExecutionContext {\n    //...\n}\n</code></pre>\n\n<p>is equivalent to this one:</p>\n\n<pre><code>fn execution_context&lt;'s&gt;(&amp;'s self) -&gt; ExecutionContext&lt;'s&gt; {\n    //...\n}\n</code></pre>\n\n<p>Which becomes obvious once you realize that <code>ExecutionContext</code> has an associated lifetime. </p>\n\n<p>The lifetime of <code>ExecutionContext</code> does not have to match that of the <code>MyStruct</code> so you probably want to write:</p>\n\n<pre><code>fn execution_context&lt;'e&gt;(&amp;self) -&gt; ExecutionContext&lt;'e&gt; {\n    //...\n}\n</code></pre>\n\n<p>or maybe:</p>\n\n<pre><code>fn execution_context&lt;'s, 'e&gt;(&amp;'s self) -&gt; ExecutionContext&lt;'e&gt;\nwhere 'e: 's {\n    //...\n}\n</code></pre>\n\n<p>depending on whether your context will eventually refer to any content of <code>MyStruct</code>.</p>\n"}], "owner": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 55905525, "answer_count": 1, "score": 1, "last_activity_date": 1556548264, "creation_date": 1556528011, "question_id": 55899909, "link": "https://stackoverflow.com/questions/55899909/how-to-use-wirefilter-over-an-infinite-stream-of-data", "title": "How to use wirefilter over an infinite stream of data", "body": "<p>I am writing a program to use <a href=\"http://github.com/cloudflare/wirefilter/\" rel=\"nofollow noreferrer\">wirefilter</a> in order to filter data from an infinite stream.</p>\n\n<p>But it seems that I cannot use a compiled ast in a loop because of lifetimes   and when I try to compile, this is the output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed data cannot be stored outside of its closure\n  --&gt; src/main.rs:34:33\n   |\n31 |     let filter = ast.compile();\n   |         ------ ...so that variable is valid at time of its declaration\n32 | \n33 |     for my_struct in data.filter(|my_struct| {\n   |                                  ----------- borrowed data cannot outlive this closure\n34 |         let execution_context = my_struct.execution_context();\n   |                                 ^^^^^^^^^ ----------------- cannot infer an appropriate lifetime...\n   |                                 |\n   |                                 cannot be stored outside of its closure\n\nerror: aborting due to previous error\n\nerror: Could not compile `wirefilter_playground`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>main.rs</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use wirefilter::{ExecutionContext, Scheme};\n\nlazy_static::lazy_static! {\n    static ref SCHEME: Scheme = Scheme! {\n        port: Int\n    };\n}\n\n#[derive(Debug)]\nstruct MyStruct {\n    port: i32,\n}\n\nimpl MyStruct {\n    fn scheme() -&gt; &amp;'static Scheme {\n        &amp;SCHEME\n    }\n\n    fn execution_context(&amp;self) -&gt; ExecutionContext {\n        let mut ctx = ExecutionContext::new(Self::scheme());\n        ctx.set_field_value(\"port\", self.port).unwrap();\n\n        ctx\n    }\n}\n\nfn main() -&gt; Result&lt;(), failure::Error&gt; {\n    let data = expensive_data_iterator();\n    let scheme = MyStruct::scheme();\n    let ast = scheme.parse(\"port in {2 5}\")?;\n    let filter = ast.compile();\n\n    for my_struct in data.filter(|my_struct| {\n        let execution_context = my_struct.execution_context();\n        filter.execute(&amp;execution_context).unwrap()\n    }).take(10) {\n        println!(\"{:?}\", my_struct);\n    }\n\n    Ok(())\n}\n\nfn expensive_data_iterator() -&gt; impl Iterator&lt;Item=MyStruct&gt; {\n    (0..).map(|port| MyStruct { port })\n}\n</code></pre>\n\n<p>Cargo.toml</p>\n\n<pre><code>[package]\nname = \"wirefilter_playground\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nwirefilter-engine = \"0.6.1\"\nfailure = \"0.1.5\"\nlazy_static = \"1.3.0\"\n</code></pre>\n\n<p>is it possible to make it work? I would like to yield only the filtered data for the final user otherwise the amount of data would be huge in memory.\nThank you in advance!</p>\n"}, {"tags": ["multithreading", "rust", "channel", "reference-counting", "rayon"], "comments": [{"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1556525582, "post_id": 55898706, "comment_id": 98454774, "body": "Is it maybe because of the lifetime? You can only pass <code>&#39;static</code> lifetimes to threads. Also what is the point in having <code>Arc&lt;&amp;&#39;a [u8; 8]&gt;</code>? Why not <code>Arc&lt;[u8; 8]&gt;</code>?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1556525716, "post_id": 55898706, "comment_id": 98454841, "body": "<a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html?search=slice#synthetic-implementations\" rel=\"nofollow noreferrer\"><code>Vec&lt;u8&gt;</code> implements <code>Send</code></a> so it can be put in an <code>Arc</code> and shared between threads. <code>array</code>s can&#39;t because they don&#39;t implement <code>Send</code>."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1556526039, "post_id": 55898706, "comment_id": 98454982, "body": "Ok, how is <a href=\"https://docs.rs/uuid/0.7.4/uuid/struct.Uuid.html#impl-Send\" rel=\"nofollow noreferrer\">UUID</a> getting the <i>Send</i> &amp; <i>Sync</i> auto-impl? Which is just a wrapper over <code>[u8; 16]</code>."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 1, "creation_date": 1556527502, "post_id": 55898706, "comment_id": 98455666, "body": "@chpio Good point. Actually, it looks like <code>u8</code> arrays <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1483e7d22da9c060c60f083c7f480be7\" rel=\"nofollow noreferrer\">do implement <code>Send</code></a> even though the <a href=\"https://doc.rust-lang.org/stable/std/primitive.array.html\" rel=\"nofollow noreferrer\">docs</a> don&#39;t mention it\u2026"}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1556527825, "post_id": 55898706, "comment_id": 98455825, "body": "Maybe it&#39;s not showing up in the docs, because of the <i>Send</i> &amp; <i>Sync</i> traits being auto traits, so they do not show up for generic types?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 1, "creation_date": 1556529528, "post_id": 55898706, "comment_id": 98456674, "body": "@chpio But <code>Vec</code> is a generic type and <code>Send</code> shows up <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html?search=slice#synthetic-implementations\" rel=\"nofollow noreferrer\">there</a>. It also shows up for <a href=\"https://doc.rust-lang.org/stable/std/primitive.u8.html#impl-Send\" rel=\"nofollow noreferrer\">primitive types</a>. Maybe the issue is that <code>array</code> is <i>both</i> generic and primitive?"}, {"owner": {"reputation": 554, "user_id": 1724337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aaf4f8012c881bd50f1baa5e123cfa3?s=128&d=identicon&r=PG", "display_name": "Ironlenny", "link": "https://stackoverflow.com/users/1724337/ironlenny"}, "edited": false, "score": 0, "creation_date": 1556557576, "post_id": 55898706, "comment_id": 98471104, "body": "I&#39;m glad I&#39;m not the only one stumped."}, {"owner": {"reputation": 554, "user_id": 1724337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aaf4f8012c881bd50f1baa5e123cfa3?s=128&d=identicon&r=PG", "display_name": "Ironlenny", "link": "https://stackoverflow.com/users/1724337/ironlenny"}, "reply_to_user": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1556559443, "post_id": 55898706, "comment_id": 98471863, "body": "@chpio In retrospect I don&#39;t need the Arc&lt;&amp;&#39;a [u8; 8]&gt;. I&#39;m still learning Rust."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 1, "creation_date": 1556563065, "post_id": 55898706, "comment_id": 98473419, "body": "@Ironlenny ah, yeah sorry for that, i thought it&#39;s causing the problem"}], "answers": [{"tags": [], "owner": {"reputation": 554, "user_id": 1724337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aaf4f8012c881bd50f1baa5e123cfa3?s=128&d=identicon&r=PG", "display_name": "Ironlenny", "link": "https://stackoverflow.com/users/1724337/ironlenny"}, "is_accepted": true, "score": 1, "last_activity_date": 1556560803, "creation_date": 1556560803, "answer_id": 55908583, "question_id": 55898706, "link": "https://stackoverflow.com/questions/55898706/calling-arcnew-inside-a-rayon-thread-results-in-garbage-compiler-errors/55908583#55908583", "title": "Calling `Arc::new()` Inside a Rayon Thread Results in Garbage Compiler Errors", "body": "<p>I got some help from the Rust Discord server. Turns out that <code>let file_id = self.convert_to_byte_array(file_id);</code> was the problem line. Which makes sense, I'm trying to move <code>self</code> into multiple threads, which obviously doesn't work. I just wish the compiler errors was more helpful.</p>\n"}], "owner": {"reputation": 554, "user_id": 1724337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4aaf4f8012c881bd50f1baa5e123cfa3?s=128&d=identicon&r=PG", "display_name": "Ironlenny", "link": "https://stackoverflow.com/users/1724337/ironlenny"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 55908583, "answer_count": 1, "score": 1, "last_activity_date": 1556560803, "creation_date": 1556522679, "last_edit_date": 1556559684, "question_id": 55898706, "link": "https://stackoverflow.com/questions/55898706/calling-arcnew-inside-a-rayon-thread-results-in-garbage-compiler-errors", "title": "Calling `Arc::new()` Inside a Rayon Thread Results in Garbage Compiler Errors", "body": "<p>I'm have a function that generates hashes from various inputs. One such hash I want to store as a <code>Arc&lt;[u8; 16]&gt;</code> so I can share it between threads and structs. Before, I was storing it as a <code>Vec&lt;u8&gt;</code>, passing it over channels and then converting it to <code>[u8; 16]</code> locally. Obviously inefficent, hence the <code>Arc&lt;[u8; 16]&gt;</code>. But when I made the converstion I got errors like this:</p>\n\n<pre><code>error[E0277]: `std::sync::mpsc::Sender&lt;Header&lt;'a, Body&lt;'a&gt;&gt;&gt;` cannot be shared between threads safely\n   --&gt; src/lib.rs:182:13\n    |\n182 |             spawn(move || {\n    |             ^^^^^ `std::sync::mpsc::Sender&lt;Header&lt;'a, Body&lt;'a&gt;&gt;&gt;` cannot be shared between threads safely\n    |\n    = help: within `CreatorPipeline&lt;Header&lt;'a, Body&lt;'a&gt;&gt;, std::sync::Arc&lt;[u8; 16]&gt;, (std::sync::Arc&lt;[u8; 16]&gt;, std::path::PathBuf, u64), (std::vec::Vec&lt;u8&gt;, u64, std::vec::Vec&lt;u8&gt;), Block, Body&lt;'a&gt;&gt;`, the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Sender&lt;Header&lt;'a, Body&lt;'a&gt;&gt;&gt;`\n    = note: required because it appears within the type `(std::sync::mpsc::Sender&lt;Header&lt;'a, Body&lt;'a&gt;&gt;&gt;, std::sync::mpsc::Receiver&lt;Header&lt;'a, Body&lt;'a&gt;&gt;&gt;)`\n    = note: required because it appears within the type `CreatorPipeline&lt;Header&lt;'a, Body&lt;'a&gt;&gt;, std::sync::Arc&lt;[u8; 16]&gt;, (std::sync::Arc&lt;[u8; 16]&gt;, std::path::PathBuf, u64), (std::vec::Vec&lt;u8&gt;, u64, std::vec::Vec&lt;u8&gt;), Block, Body&lt;'a&gt;&gt;`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `&amp;CreatorPipeline&lt;Header&lt;'a, Body&lt;'a&gt;&gt;, std::sync::Arc&lt;[u8; 16]&gt;, (std::sync::Arc&lt;[u8; 16]&gt;, std::path::PathBuf, u64), (std::vec::Vec&lt;u8&gt;, u64, std::vec::Vec&lt;u8&gt;), Block, Body&lt;'a&gt;&gt;`\n    = note: required because it appears within the type `[closure@src/lib.rs:182:19: 232:14 file:std::path::PathBuf, self:&amp;CreatorPipeline&lt;Header&lt;'a, Body&lt;'a&gt;&gt;, std::sync::Arc&lt;[u8; 16]&gt;, (std::sync::Arc&lt;[u8; 16]&gt;, std::path::PathBuf, u64), (std::vec::Vec&lt;u8&gt;, u64, std::vec::Vec&lt;u8&gt;), Block, Body&lt;'a&gt;&gt;, tx_main:std::sync::mpsc::Sender&lt;std::sync::Arc&lt;[u8; 16]&gt;&gt;, tx_input:std::sync::mpsc::Sender&lt;(std::sync::Arc&lt;[u8; 16]&gt;, std::path::PathBuf, u64)&gt;, tx_fd:std::sync::mpsc::Sender&lt;(std::vec::Vec&lt;u8&gt;, u64, std::vec::Vec&lt;u8&gt;)&gt;]`\n    = note: required by `rayon_core::spawn::spawn`\n</code></pre>\n\n<p>There are 11 more errors like that. All some variation of <code>Foo cannot be shared between threads safely</code>. <a href=\"https://gist.github.com/Ironlenny/28d5f086617761fc0891fb74c4475ef6\" rel=\"nofollow noreferrer\">Here's a gist with all the errors.</a></p>\n\n<p>Here's a snippet of my code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>...\n\n// File creation pipeline\npub struct CreatorPipeline&lt;A, B, C, D, E, F&gt; {\n    magic: Arc&lt;[u8; 8]&gt;,\n    rec_set_id: Arc&lt;RwLock&lt;Option&lt;&amp;'static [u8; 16]&gt;&gt;&gt;,\n    writes: (Sender&lt;A&gt;, Receiver&lt;A&gt;),           // A: Header&lt;Body&gt;\n    main: (Sender&lt;B&gt;, Receiver&lt;B&gt;),             // B: Arc&lt;[u8; 16]&gt;\n    input: (Sender&lt;C&gt;, Receiver&lt;C&gt;),            // C: (Arc&lt;[u8; 16]&gt;, File)\n    body: (Sender&lt;F&gt;, Receiver&lt;F&gt;),             // F: Body\n    file_description: (Sender&lt;D&gt;, Receiver&lt;D&gt;), // D: (Arc&lt;[u8; 16]&gt;, u64, Vec&lt;u8&gt;)\n    recovery: (Sender&lt;E&gt;, Receiver&lt;E&gt;),         // E: Block\n}\n\n\n\n// Creation pipeline methods\nimpl&lt;'a&gt;\n    CreatorPipeline&lt;\n        Header&lt;Body&lt;'a&gt;&gt;,          // writes Packet\n        Arc&lt;[u8; 16]&gt;,                 // main file_id\n        (Arc&lt;[u8; 16]&gt;, PathBuf, u64), // input (file_id, file, length)\n        (Vec&lt;u8&gt;, u64, Vec&lt;u8&gt;),       // file_description (name, length, hash_16k)\n        Block,                         // recovery Block\n        Body&lt;'a&gt;,                      // packet Body\n    &gt;\n{\n    ...\n\n    // First Stage: Create file ids and partial bodies for FileDescription. Send\n    // file ids, partial bodies and file readers to the correct channels.\n    fn create_file_id(&amp;self, files: Vec&lt;PathBuf&gt;) -&gt; Result&lt;(), ExitFailure&gt; {\n        let (tx_main, _) = &amp;self.main; // sender for create_main()\n        let (tx_input, _) = &amp;self.input; // sender for create_input()\n        let (tx_fd, _) = &amp;self.file_description; // sender for create_fd()\n\n        for file in files {\n            let tx_main = tx_main.clone();\n            let tx_input = tx_input.clone();\n            let tx_fd = tx_fd.clone();\n\n            // Spawn thread\n            spawn(move || {\n                let mut reader = File::open(&amp;file)\n                    .with_context(|_| format!(\"Could not open file {}\", file.display()))\n                    .unwrap();\n\n                // Get filename from path\n                let name = file\n                    .file_stem()\n                    .unwrap()\n                    .to_string_lossy()\n                    .into_owned()\n                    .into_bytes();\n\n                let length = {\n                    let metadata = metadata(&amp;file).unwrap();\n                    metadata.len()\n                };\n\n                // Hash first 16k of the file\n                let hash_16k = {\n                    let mut hasher_16k = Md5::new();\n                    let mut buffer = [0; 16384];\n                    reader.read(&amp;mut buffer).unwrap();\n                    for byte in buffer.iter() {\n                        hasher_16k.input([byte.clone()]);\n                    }\n\n                    let result = hasher_16k.result();\n                    let hash_16k = result.as_slice().to_owned();\n                    hash_16k\n                };\n\n                // Generate File ID\n                let file_id = {\n                    let mut hasher_file_id = Md5::new();\n                    hasher_file_id.input(&amp;hash_16k);\n                    hasher_file_id.input(&amp;length.to_le_bytes());\n                    hasher_file_id.input(&amp;name);\n                    let file_id = hasher_file_id.result().to_vec();\n                    let file_id = self.convert_to_byte_array(file_id);\n                    Arc::new(file_id) // Problem line\n                };\n\n                // Partial FileDescription (name, length, hash_16k)\n                let partial_body = (name, length, hash_16k);\n\n                // sender for channels\n                tx_main.send(Arc::clone(&amp;file_id)).unwrap();\n                tx_input.send((Arc::clone(&amp;file_id), file, length)).unwrap();\n                tx_fd.send(partial_body).unwrap();\n            });\n        }\n\n        Ok(())\n    }\n\n    ...\n}\n</code></pre>\n\n<p><a href=\"https://gist.github.com/Ironlenny/b9c8e1dc13b21e048146d446e2e6de8e\" rel=\"nofollow noreferrer\">Here's the full source.</a><br/>\n<a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\">Arc Documentation</a><br/>\n<a href=\"https://docs.rs/rayon/1.0.3/rayon/index.html\" rel=\"nofollow noreferrer\">Rayon Documentation</a></p>\n\n<p>Edit: Forgot to mention that I'm using 2018 edition stable.</p>\n"}, {"tags": ["dynamic", "casting", "rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1556529566, "post_id": 55895583, "comment_id": 98456694, "body": "Would you really use a dynamic cast in C++ for casting <i>laterally</i>? I can see that you can use it to downcast to a concrete type, but I have never encountered a use case for a lateral cast. For what it&#39;s worth, <a href=\"https://doc.rust-lang.org/std/index.html?search=downcast\" rel=\"nofollow noreferrer\">downcasting can be achieved using the <code>Any</code> trait</a>."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1556592126, "post_id": 55895583, "comment_id": 98480990, "body": "Could you elaborate more on how you&#39;re using these values and how you want to use them with <code>get_final_value</code>? One option for instance would before <code>get_final_value</code> to accept anything that implements some third trait, and then both <code>TraitA</code> and <code>TraitB</code> could expose a function to convert them into that third type."}], "answers": [{"comments": [{"owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1556514051, "post_id": 55896810, "comment_id": 98450576, "body": "I know I can use MyType directly. My question goes more towards the case where you already have a trait object and want to use it as a different trait object."}, {"owner": {"reputation": 64, "user_id": 5875980, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2dccd33d45f17c2e51781719d7142e8?s=128&d=identicon&r=PG&f=1", "display_name": "Peng Guanwen", "link": "https://stackoverflow.com/users/5875980/peng-guanwen"}, "reply_to_user": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 1, "creation_date": 1556515347, "post_id": 55896810, "comment_id": 98450869, "body": "You can use <a href=\"https://doc.rust-lang.org/std/any/trait.Any.html\" rel=\"nofollow noreferrer\"><code>Any</code></a> to cast type. But can you give a scenario where this is necessary?"}, {"owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "edited": false, "score": 0, "creation_date": 1556558392, "post_id": 55896810, "comment_id": 98471436, "body": "I added extra context on the original question about a more realistic scenario."}], "tags": [], "owner": {"reputation": 64, "user_id": 5875980, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a2dccd33d45f17c2e51781719d7142e8?s=128&d=identicon&r=PG&f=1", "display_name": "Peng Guanwen", "link": "https://stackoverflow.com/users/5875980/peng-guanwen"}, "is_accepted": false, "score": 1, "last_activity_date": 1556511693, "last_edit_date": 1556511693, "creation_date": 1556510726, "answer_id": 55896810, "question_id": 55895583, "link": "https://stackoverflow.com/questions/55895583/is-it-possible-to-cast-a-trait-object-to-another-trait-object/55896810#55896810", "title": "Is it possible to cast a trait object to another trait object?", "body": "<p>Using <code>Box&lt;MyType&gt;</code> instead of <code>Box&lt;dyn Trait&gt;</code> solves this problem.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let a = Box::new(MyType {});\n\n    TraitA::say_hello(&amp;*a);\n    TraitB::say_hello(&amp;*a);\n}\n</code></pre>\n\n<p>In this case there's no need to use trait objects. Rust has a different paradigm from C++. In most cases you can usually use generic types to solve problems.\nIf your problem is really suitable to solve with trait objects, you can refer to the <a href=\"https://doc.rust-lang.org/book/ch17-00-oop.html\" rel=\"nofollow noreferrer\">OOP chapter in the book</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 1049, "user_id": 6580990, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/kZNPw.jpg?s=128&g=1", "display_name": "stimulate", "link": "https://stackoverflow.com/users/6580990/stimulate"}, "edited": false, "score": 0, "creation_date": 1602436369, "post_id": 55914318, "comment_id": 113713388, "body": "This doesn&#39;t always work apparently, for example <code>Arc::downcast&lt;T&gt;(self)</code> requires <code>T</code> to be <code>dyn Any + Send + Sync</code> and does not allow trait objects from supertraits. At least I don&#39;t know how."}], "tags": [], "owner": {"reputation": 2080, "user_id": 9604966, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NeWpE.jpg?s=128&g=1", "display_name": "Jere", "link": "https://stackoverflow.com/users/9604966/jere"}, "is_accepted": true, "score": 5, "last_activity_date": 1583936104, "last_edit_date": 1583936104, "creation_date": 1556600982, "answer_id": 55914318, "question_id": 55895583, "link": "https://stackoverflow.com/questions/55895583/is-it-possible-to-cast-a-trait-object-to-another-trait-object/55914318#55914318", "title": "Is it possible to cast a trait object to another trait object?", "body": "<p>Another option is to create a trait that uses both <code>TraitA</code> and <code>TraitB</code> as supertraits and provides a cast to each type:</p>\n\n<pre><code>trait TraitC: TraitA + TraitB {\n    fn as_trait_a(&amp;self) -&gt; &amp;dyn TraitA;\n    fn as_trait_b(&amp;self) -&gt; &amp;dyn TraitB;\n}\n</code></pre>\n\n<p>Then have <code>MyType</code> implement it:</p>\n\n<pre><code>impl TraitC for MyType {\n    fn as_trait_a(&amp;self) -&gt; &amp;dyn TraitA {\n        self\n    }\n    fn as_trait_b(&amp;self) -&gt; &amp;dyn TraitB {\n        self\n    }\n}\n</code></pre>\n\n<p>Once you do that, you can use <code>TraitC</code> for your <code>Box</code> and your program logic that uses both <code>TraitA</code> and <code>TraitB</code> together.</p>\n\n<p>Sample main to show various ways to use:</p>\n\n<pre><code>fn test_a(a: &amp;TraitA) {\n    a.say_hello();\n}\nfn test_b(b: &amp;TraitB) {\n    b.say_hello();\n}\n\nfn main() {\n    let c: Box&lt;dyn TraitC&gt; = Box::new(MyType {});\n\n    TraitA::say_hello(&amp;*c);\n    TraitB::say_hello(&amp;*c);\n\n    c.as_trait_a().say_hello();\n    c.as_trait_b().say_hello();\n\n    test_a(c.as_trait_a());\n    test_b(c.as_trait_b());\n\n    let a: &amp;dyn TraitA = c.as_trait_a();\n    a.say_hello();\n    let b: &amp;dyn TraitB = c.as_trait_b();\n    b.say_hello();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6fa766d74d41e7112f871d23a2390262\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>If <code>A</code> and <code>B</code> do truly belong together, this better represents that and still gives you the freedom to use them separately if you desire.</p>\n"}], "owner": {"reputation": 290, "user_id": 9156640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cc37ec575a46246de4a809e7533e912?s=128&d=identicon&r=PG&f=1", "display_name": "dospro", "link": "https://stackoverflow.com/users/9156640/dospro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3495, "favorite_count": 2, "closed_date": 1583936018, "accepted_answer_id": 55914318, "answer_count": 2, "score": 6, "last_activity_date": 1583936104, "creation_date": 1556496207, "last_edit_date": 1583935990, "question_id": 55895583, "link": "https://stackoverflow.com/questions/55895583/is-it-possible-to-cast-a-trait-object-to-another-trait-object", "closed_reason": "Duplicate", "title": "Is it possible to cast a trait object to another trait object?", "body": "<p>I tried the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait TraitA {\n    fn say_hello(&amp;self) {\n        self.say_hello_from_a();\n    }\n    fn say_hello_from_a(&amp;self);\n}\n\ntrait TraitB {\n    fn say_hello(&amp;self) {\n        self.say_hello_from_b();\n    }\n    fn say_hello_from_b(&amp;self);\n}\n\nstruct MyType {}\n\nimpl TraitA for MyType {\n    fn say_hello_from_a(&amp;self) {\n        println!(\"Hello from A\");\n    }\n}\n\nimpl TraitB for MyType {\n    fn say_hello_from_b(&amp;self) {\n        println!(\"Hello from B\");\n    }\n}\n\nfn main() {\n    let a: Box&lt;dyn TraitA&gt; = Box::new(MyType {});\n    let b: Box&lt;dyn TraitB&gt;;\n\n    a.say_hello();\n    b = a;\n    b.say_hello();\n}\n</code></pre>\n\n<p>I get the following compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:34:9\n   |\n34 |     b = a;\n   |         ^ expected trait `TraitB`, found trait `TraitA`\n   |\n   = note: expected struct `std::boxed::Box&lt;dyn TraitB&gt;`\n              found struct `std::boxed::Box&lt;dyn TraitA&gt;`\n</code></pre>\n\n<p>I declared two traits and a type called <code>MyType</code> and implemented both traits for <code>MyType</code>. I created a new trait object <code>TraitA</code> of type <code>MyType</code> which I called <code>a</code>. Since <code>a</code> also implements <code>TraitB</code>, I thought it should be able to be casted as <code>TraitB</code>.</p>\n\n<p>I haven't figured out if it's even possible. If it is, how can I cast trait object <code>a</code> into <code>TraitB</code>?</p>\n\n<p>In C++, I would use something similar to <code>std::dynamic_pointer_cast&lt;TraitB&gt;(a);</code> for the same purpose.</p>\n\n<p>Here's an example of a case where I could use lateral casting: I have a struct with some data inside that represents some real life entity:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct MyType {\n    a: i32,\n    b: i32,\n}\n</code></pre>\n\n<p>Instances of this type can be used in at least two different parts of the code base. On both parts I need a behavior called <code>get_final_value</code>. </p>\n\n<p>The interesting part is that <code>get_final_value</code> should respond differently depending on who called it.</p>\n\n<ul>\n<li><p>Why don't I split the type into two different ones?: Technically, by design, <code>a</code> and <code>b</code> belong together, not to say that <code>get_final_value()</code> uses both values to compute the result.</p></li>\n<li><p>Why not use generics/static dispatch? Because <code>MyType</code> is just one example. In the real case I have different structs, all of them implementing both traits in different ways.</p></li>\n<li><p>Why not use <code>Any</code> trait? To be honest, I didn't know of it's existence until recently. I don't recall <em>The Rust Programming Language</em> mentioning it. Anyway, it seems you need to know the concrete type to do a cast from <code>Any</code> to that concrete type and then to the trait object. </p></li>\n</ul>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3358, "user_id": 852385, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5c0eac51aaa99541fb966854b5dcb131?s=128&d=identicon&r=PG", "display_name": "Helin Wang", "link": "https://stackoverflow.com/users/852385/helin-wang"}, "edited": false, "score": 0, "creation_date": 1556494019, "post_id": 55895312, "comment_id": 98447200, "body": "Interesting, function parameters and let bindings are implemented as patterns?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 3358, "user_id": 852385, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5c0eac51aaa99541fb966854b5dcb131?s=128&d=identicon&r=PG", "display_name": "Helin Wang", "link": "https://stackoverflow.com/users/852385/helin-wang"}, "edited": false, "score": 0, "creation_date": 1556516456, "post_id": 55895312, "comment_id": 98451177, "body": "@Helin Yes, and <code>for</code> loop bindings too. They are all different kinds of irrefutable bindings. <a href=\"https://stackoverflow.com/q/50644111/3650362\">This question</a> (I answered) addresses the meaning of <i>irrefutable</i>."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 3, "creation_date": 1556528190, "post_id": 55895312, "comment_id": 98455986, "body": "Though patterns in function parameters IMHO are not idiomatic. Using them would blur the line between interface and implementation, and make the interface harder to read for the user of the function."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1556493030, "creation_date": 1556493030, "answer_id": 55895312, "question_id": 55894911, "link": "https://stackoverflow.com/questions/55894911/match-with-a-variable-vs-match-with-a-placeholder/55895312#55895312", "title": "Match with a variable vs match with a placeholder?", "body": "<p>These are just patterns. <a href=\"https://doc.rust-lang.org/book/ch18-00-patterns.html\" rel=\"noreferrer\">Patterns are documented in more details further in the book</a>. There are many forms of patterns:</p>\n\n<ul>\n<li>Constants: <code>1</code>, <code>FOO</code></li>\n<li><code>enum</code> destructuring: <code>Some(y)</code>, <code>None</code></li>\n<li><code>struct</code> destructuring: <code>Point { x, y }</code></li>\n<li>Tuple destructuring: <code>(42, foo)</code></li>\n<li>Bindings: <code>foo</code>, <code>foo @ (42, bar)</code></li>\n<li>Ranges: <code>1 ... 42</code></li>\n<li>Placeholder: <code>_</code></li>\n<li>etc.</li>\n</ul>\n\n<p>There is no difference here between your two examples, however, named patterns are not often seen as a top-level pattern in a <code>match</code> expression, but rather in sub-patterns, such as <code>Some(foo)</code>. Named patterns are however extremely common for function parameters and <code>let</code> bindings.</p>\n"}], "owner": {"reputation": 3358, "user_id": 852385, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5c0eac51aaa99541fb966854b5dcb131?s=128&d=identicon&r=PG", "display_name": "Helin Wang", "link": "https://stackoverflow.com/users/852385/helin-wang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 55895312, "answer_count": 1, "score": 2, "last_activity_date": 1593114067, "creation_date": 1556488585, "last_edit_date": 1593114067, "question_id": 55894911, "link": "https://stackoverflow.com/questions/55894911/match-with-a-variable-vs-match-with-a-placeholder", "title": "Match with a variable vs match with a placeholder?", "body": "<pre><code>fn main() {\n    let f = 1;\n\n    match f {\n        foo =&gt; {\n            println!(&quot;{}&quot;, foo); // prints &quot;1&quot;\n        }\n    };\n\n    match f {\n        _ =&gt; {\n            println!(&quot;{}&quot;, f); // prints &quot;1&quot;\n        }\n    };\n}\n</code></pre>\n<p>Is there any difference between the two matches? And could anyone point me where the first match is documented? The Rust book (until chapter 9) seems only mention the placeholder <code>_</code>, but not &quot;you can put any name (e.g., <code>foo</code> in this case) as the match condition&quot;.</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1556481089, "post_id": 55893888, "comment_id": 98444517, "body": "Is calling <code>Foo::new()</code> really a burden? You <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2face33302089b6afb0fd966dc76753a\" rel=\"nofollow noreferrer\">can have a <code>static mut</code></a> in Rust, but this is not thread-safe, so it&#39;s usually not a good idea."}, {"owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1556515468, "post_id": 55893888, "comment_id": 98450908, "body": "It&#39;s not a burden. I learn Rust, and I&#39;m curious how to implement this. It&#39;s not like I&#39;ll do it in real code."}], "answers": [{"comments": [{"owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "edited": false, "score": 6, "creation_date": 1556481825, "post_id": 55894064, "comment_id": 98444714, "body": "Maybe it&#39;s better to mark <code>counting_function</code> unsafe in this case instead of using usafe inside the function as this function violates Rust&#39;s safety guarantees, so this should be visible to the callers of the function, along with an explaining comment under what circumstances it&#39;s safe to use the function."}], "tags": [], "owner": {"reputation": 39, "user_id": 3566751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34dc762d42e7108bb8ddddf34e097531?s=128&d=identicon&r=PG&f=1", "display_name": "aeveris", "link": "https://stackoverflow.com/users/3566751/aeveris"}, "is_accepted": false, "score": -2, "last_activity_date": 1556481192, "creation_date": 1556481192, "answer_id": 55894064, "question_id": 55893888, "link": "https://stackoverflow.com/questions/55893888/how-to-add-state-to-a-function-in-rust/55894064#55894064", "title": "How to add state to a function in Rust", "body": "<p>Your pseudocode almost works as is. To work with the <code>static mut</code> variable, you'll need to mark the accessing and modifying parts of your code as <code>unsafe</code> as these operations are not threadsafe.</p>\n\n<pre><code>fn counting_function() -&gt; u32 {\n    static mut counter: u32 = 0;\n    let retval = unsafe { counter };\n    unsafe {\n        counter += 1;\n    }\n    retval\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "is_accepted": false, "score": 2, "last_activity_date": 1556481306, "creation_date": 1556481306, "answer_id": 55894074, "question_id": 55893888, "link": "https://stackoverflow.com/questions/55893888/how-to-add-state-to-a-function-in-rust/55894074#55894074", "title": "How to add state to a function in Rust", "body": "<p>This is a thread safe variant using an atomic:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::atomic::{AtomicUsize, Ordering};\n\nfn counting_function() -&gt; usize {\n    static COUNTER: AtomicUsize = AtomicUsize::new(0);\n    let result = COUNTER.fetch_add(1, Ordering::Relaxed);\n    result\n}\n</code></pre>\n\n<p>But it's actually a code smell I'd say.</p>\n"}], "owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1556481306, "creation_date": 1556479928, "question_id": 55893888, "link": "https://stackoverflow.com/questions/55893888/how-to-add-state-to-a-function-in-rust", "title": "How to add state to a function in Rust", "body": "<p>Rust have anonymous closures with state. Can I do the same with named function?</p>\n\n<p>(invalid pseudocode)</p>\n\n<pre><code>fn counting_function()-&gt;i32 {\n  let mut static counter = 0;\n  counter = counter + 1;\n  return counter.clone();\n}\n</code></pre>\n\n<p>I understand I can use structs and functions/traits to do this. And I understand that iterators are the proper way to do it. But leaving aside structs with traits and iterators, can I do this without passing the any burden (of initializing structure) to caller?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556495419, "post_id": 55893216, "comment_id": 98447443, "body": "I think you could get a better answer if you say why you want do that"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1556572180, "post_id": 55893216, "comment_id": 98476866, "body": "<i>&quot;and store the result as <code>&amp;[u8]</code>.&quot;</i> a slice only borrows some data, and it cannot store more than its original length. This is starting to look even more like an XY problem."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 7, "last_activity_date": 1556480332, "last_edit_date": 1556480332, "creation_date": 1556478882, "answer_id": 55893731, "question_id": 55893216, "link": "https://stackoverflow.com/questions/55893216/how-to-concatenate-static-arrays-in-rust/55893731#55893731", "title": "How to concatenate static arrays in rust?", "body": "<p>It is not possible to concatenate two slices to a new slice with static lifetime without leaking memory.</p>\n\n<p>Slices are stored consecutively in memory. Concatenating two slices with static lifetime requires copying them to newly allocated memory, since the result also needs to be consecutive. This newly allocated memory will necessarily be owned by the current function, so you cannot return a reference to it.</p>\n\n<p>You will have to transfer ownership of the memory back to the caller instead:</p>\n\n<pre><code>pub fn concat_u8(first: &amp;[u8], second: &amp;[u8]) -&gt; Vec&lt;u8&gt; {\n    [first, second].concat()\n}\n</code></pre>\n\n<p>There is no need to require the inputs to have static lifetime anymore, and probably no need to implement this function at all, since calling it will be no shorter or clearer than simply inlining the code.</p>\n"}], "owner": {"reputation": 562, "user_id": 1956082, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1b168f4c853d4fd944a0c5976a628cd8?s=128&d=identicon&r=PG", "display_name": "allevo", "link": "https://stackoverflow.com/users/1956082/allevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4800, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1556570499, "creation_date": 1556475325, "last_edit_date": 1556570499, "question_id": 55893216, "link": "https://stackoverflow.com/questions/55893216/how-to-concatenate-static-arrays-in-rust", "title": "How to concatenate static arrays in rust?", "body": "<p>I have two static array of <code>u8</code> and I would implement a function to concatenate them. Something like that</p>\n\n<pre><code>fn concat_u8(first: &amp;'static [u8], second: &amp;'static [u8]) -&gt; &amp;'static [u8] {\n    &amp;[&amp;first[..], &amp;second[..]].concat()\n}\n</code></pre>\n\n<p>The compiler shows me the error <code>returns a reference to data owned by the current function</code>. That because the allocated memory will be free at the end of the function.</p>\n\n<p>How can I \"force\" the lifetime to be static?</p>\n\n<p><strong>Edit</strong></p>\n\n<p>I've a long running process.</p>\n\n<p>At start time, the process processes some input in order to calculate a result (ie <code>concat_u8</code>\u00a0function). The result is an array of <code>u8</code> and will be used in the rest of the process life in read-only.\nThe function <code>concat_u8</code>\u00a0couldn't be called after an \"internal <code>start</code> event\".</p>\n\n<p>I'd like not to use <code>Box</code> because the dynamic allocation implies a little overhead (maybe not measurable?) and store the result as <code>&amp;[u8]</code>.</p>\n\n<p>Have I any chance to do that?</p>\n\n<p>Have I any chance to do that without using an <code>unsafe</code> block?</p>\n"}, {"tags": ["rust", "closures", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 1, "last_activity_date": 1556474156, "creation_date": 1556474156, "answer_id": 55893065, "question_id": 55892854, "link": "https://stackoverflow.com/questions/55892854/how-to-add-lifetime-argument-to-closure-not-returning-a-reference/55893065#55893065", "title": "How to add lifetime argument to closure not returning a reference", "body": "<p>The compiler tells you what to do:</p>\n\n<pre><code>error: cannot infer an appropriate lifetime\n --&gt; src/lib.rs:2:9\n  |\n1 | fn get_cloned&lt;'a&gt;(obj: &amp;'a MyStruct) -&gt; impl Fn() -&gt; MyStruct {\n  |                                         --------------------- this return type evaluates to the `'static` lifetime...\n2 |         || {obj.clone()}\n  |         ^^^^^^^^^^^^^^^^ ...but this borrow...\n  |\nnote: ...can't outlive the lifetime 'a as defined on the function body at 1:15\n --&gt; src/lib.rs:1:15\n  |\n1 | fn get_cloned&lt;'a&gt;(obj: &amp;'a MyStruct) -&gt; impl Fn() -&gt; MyStruct {\n  |               ^^\nhelp: you can add a constraint to the return type to make it last less than `'static` and match the lifetime 'a as defined on the function body at 1:15\n  |\n1 | fn get_cloned&lt;'a&gt;(obj: &amp;'a MyStruct) -&gt; impl Fn() -&gt; MyStruct + 'a {\n  |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>You need to add <code>+ 'a</code> on the return type. The compiler will then tell you you're missing <code>move</code>, but after fixing that, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7bf207fbeec3895be2fe0d0295f901b4\" rel=\"nofollow noreferrer\">your code works</a>:</p>\n\n<pre><code>fn get_cloned&lt;'a&gt;(obj: &amp;'a MyStruct) -&gt; impl Fn() -&gt; MyStruct + 'a {\n    || {obj.clone()}\n}\n</code></pre>\n"}], "owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 658, "favorite_count": 0, "accepted_answer_id": 55893065, "answer_count": 1, "score": 0, "last_activity_date": 1556474167, "creation_date": 1556472696, "last_edit_date": 1556474167, "question_id": 55892854, "link": "https://stackoverflow.com/questions/55892854/how-to-add-lifetime-argument-to-closure-not-returning-a-reference", "title": "How to add lifetime argument to closure not returning a reference", "body": "<p>Assume you have a function returning a closure which works on a reference.\nSure, the object behind the reference must life at least as long as the closure is called.</p>\n\n<p>Here a very simple example, which demonstrates the problem. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn get_cloned&lt;'a&gt;(obj: &amp;'a MyStruct) -&gt; impl Fn() -&gt; MyStruct {\n    || {obj.clone()}\n}\n</code></pre>\n\n<p>The compiler states that the returned closure has lifetime <em>static</em>: </p>\n\n<blockquote>\n  <p>cannot infer an appropriate lifetime<br>\n  ...but this borrow...rustc<br>\n  main.rs(60, 56): this return type evaluates to the <code>'static</code> lifetime...<br>\n  main.rs(61, 5): ...but this borrow...</p>\n</blockquote>\n\n<p>How can I tell the compiler that I only use the result of the function (the closure) as long as the reference is valid?</p>\n\n<p>Thanks!</p>\n\n<p><strong>[Edit]</strong></p>\n\n<p>Do you need a dummy struct which holds the reference as well as the closure?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Dummy&lt;'a&gt;{\n  reference: &amp;'a MyStruct,\n  closure: Fn() -&gt; MyStruct\n}\n</code></pre>\n\n<p>?</p>\n\n<p>Assume that cloning is very costly and the closure might never be called. -> lazy evaluation is a must.</p>\n"}, {"tags": ["reference", "rust", "pattern-matching"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556455349, "post_id": 55889445, "comment_id": 98437589, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/55889445/edit\">edit</a> your question to include it. We cannot tell what crates (and their versions), types, traits, fields, etc. are present in the code. Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1556460051, "post_id": 55889445, "comment_id": 98438822, "body": "Assuming I understand what you&#39;re trying to do correctly, you might find <code>filter</code> and <code>take</code> methods useful: <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.filter\" rel=\"nofollow noreferrer\">filter</a>, <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.take\" rel=\"nofollow noreferrer\">take</a>. Whether or not using them will be more readable is another matter, though."}], "answers": [{"tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": false, "score": 1, "last_activity_date": 1557855696, "last_edit_date": 1557855696, "creation_date": 1557855121, "answer_id": 56135715, "question_id": 55889445, "link": "https://stackoverflow.com/questions/55889445/why-do-i-get-a-borrow-error-when-using-optionmap-but-not-when-manually-matchi/56135715#56135715", "title": "Why do I get a borrow error when using Option::map, but not when manually matching?", "body": "<blockquote>\n  <p>I kinda understand why the error is there; what I don't understand is how I don't get an error in the <code>match</code> version, because semantically I'm doing the same thing: reading into <code>maybe_job</code>, getting a borrow on <code>job</code> (so supposedly on <code>maybe_job</code> too), but still writing into <code>*maybe_job</code>.</p>\n</blockquote>\n\n<p>In the match case, the compiler helps you out by dropping the borrow on <code>job</code> before you write to <code>*maybe_job</code>. You can test this yourself - use <code>job</code> after you do <code>*maybe_job = None</code>, and you'll explicitly borrow <code>job</code> for too long, and the compiler will error.</p>\n\n<p>In the <code>map</code> case, the borrow which is the argument to the closure <code>|job|</code> is an immutable borrow on <code>maybe_job</code>. Accessing a variable from a closure is also a borrow (of the variable in the stack) so trying to assign to <code>*maybe_job</code> requires taking a mutable borrow on an already borrowed value.</p>\n\n<p>The reason the compiler allows one and not the other is simply a question of how complex the analysis can be - to automatically drop the borrow in <code>|job|</code>, the compiler would have to detect and ensure that <code>maybe_job.as_ref()</code> is the only borrow on <code>maybe_job</code> - which is very tricky. What happens if you do <code>maybe_job.as_ref().my_function().map(...)</code> - and <code>my_function()</code> copies the immutable reference?</p>\n"}], "owner": {"reputation": 29, "user_id": 6106459, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84a9829dc3a9a882d4a3e079904d0d22?s=128&d=identicon&r=PG&f=1", "display_name": "navaati", "link": "https://stackoverflow.com/users/6106459/navaati"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1557855696, "creation_date": 1556448171, "last_edit_date": 1556455446, "question_id": 55889445, "link": "https://stackoverflow.com/questions/55889445/why-do-i-get-a-borrow-error-when-using-optionmap-but-not-when-manually-matchi", "title": "Why do I get a borrow error when using Option::map, but not when manually matching?", "body": "<p>I have this working function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn clear_job(state: State&lt;MyState&gt;) -&gt; Option&lt;String&gt; {\n    let mut guard = state.job.lock().unwrap();\n    let maybe_job: &amp;mut Option&lt;Job&gt; = &amp;mut *guard;\n    // Job is not Copy nor Clone\n\n    match maybe_job {\n        None =&gt; None,\n        Some(job) =&gt; match job {\n            Job::InProgress { .. } =&gt; Some(\"Can't clear in progress job\".into()),\n            _ =&gt; {\n                *maybe_job = None;\n                Some(\"Job cleared\".into())\n            },\n        },\n    }\n}\n</code></pre>\n\n<p>I return <code>None</code> if I have <code>None</code> and <code>Some</code> if I have <code>Some</code>, which is\u2026 exactly what <code>Option::map()</code> is !</p>\n\n<p>I tried to rewrite this function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn clear_job(state: State&lt;MyState&gt;) -&gt; Option&lt;String&gt; {\n    let mut guard = state.job.lock().unwrap();\n    let maybe_job: &amp;mut Option&lt;Job&gt; = &amp;mut *guard;\n\n    maybe_job.as_ref().map(|job| match job {\n        Job::InProgress { .. } =&gt; \"Can't clear in progress job\".into(),\n        _ =&gt; {\n            *maybe_job = None;\n            \"Job cleared\".into()\n        },\n    })\n}\n</code></pre>\n\n<p>This gets me this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0500]: closure requires unique access to `maybe_job` but it is already borrowed\n   --&gt; src/main.rs:113:28\n    |\n113 |     maybe_job.as_ref().map(|job| match job {\n    |     ---------          --- ^^^^^ closure construction occurs here\n    |     |                  |\n    |     |                  first borrow later used by call\n    |     borrow occurs here\n...\n116 |             *maybe_job = None;\n    |              --------- second borrow occurs due to use of `maybe_job` in closure\n</code></pre>\n\n<p>I kinda understand why the error is there; what I don't understand is how I don't get an error in the <code>match</code> version, because semantically I'm doing the same thing: reading into <code>maybe_job</code>, getting a borrow on <code>job</code> (so supposedly on <code>maybe_job</code> too), but still writing into <code>*maybe_job</code>.</p>\n\n<p>Why am I allowed in the first version but not in the second? Is there a way to use <code>Option::map</code> in this situation?</p>\n"}, {"tags": ["rust", "rust-crates"], "answers": [{"comments": [{"owner": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "edited": false, "score": 0, "creation_date": 1556448646, "post_id": 55888863, "comment_id": 98436069, "body": "Cool, thanks for the answer!  Do you know how to make the same principle when you are working with a stream of data? I tried the same approach witha an interator and it does not seem to work too.  ``` fn main() -&gt; Result&lt;(), failure::Error&gt; {     let data = generate_data(); ...      let filtered = data.filter(|my_struct| filter.execute(&amp;my_struct.execution_context().unwrap()).unwr&zwnj;&#8203;ap());      Ok(()) }  fn generate_data() -&gt; impl Iterator&lt;Item=MyStruct&gt; {     (0..100).map(|port| MyStruct { port }) } ```"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "edited": false, "score": 0, "creation_date": 1556450055, "post_id": 55888863, "comment_id": 98436416, "body": "@JaysonReis The code is not readable in a comment, and &quot;it does not seem to work&quot; is not a useful problem description. Please ask a new question, possibly referencing this question if appropriate."}, {"owner": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "edited": false, "score": 0, "creation_date": 1556463380, "post_id": 55888863, "comment_id": 98439786, "body": "You are right, I will re-write the code and post another question."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 1, "last_activity_date": 1556443698, "creation_date": 1556443698, "answer_id": 55888863, "question_id": 55888777, "link": "https://stackoverflow.com/questions/55888777/what-to-do-when-a-dependency-can-be-expensive-to-create/55888863#55888863", "title": "What to do when a dependency can be expensive to create?", "body": "<p>You can separate the <em>declaration</em> of <code>data</code> from its assignment:</p>\n\n<pre><code>let data: Vec&lt;MyStruct&gt;;\nlet scheme = MyStruct::scheme();\nlet ast = scheme.parse(\"port in {2 5}\")?;\nlet filter = ast.compile();\ndata = (0..10).map(|i| MyStruct { port: i as i32 }).collect();\n</code></pre>\n\n<p>The lifetime of <code>data</code> is the same as in the first version of your code, while the assignment happens at the same time as in the second version.</p>\n"}], "owner": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 55888863, "answer_count": 1, "score": 0, "last_activity_date": 1556454891, "creation_date": 1556443010, "last_edit_date": 1556454891, "question_id": 55888777, "link": "https://stackoverflow.com/questions/55888777/what-to-do-when-a-dependency-can-be-expensive-to-create", "title": "What to do when a dependency can be expensive to create?", "body": "<p>I wrote a simple program to test Cloudflare's <a href=\"https://github.com/cloudflare/wirefilter\" rel=\"nofollow noreferrer\">wirefilter</a>, here is an example that works.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use wirefilter::{ExecutionContext, Scheme};\n\nlazy_static::lazy_static! {\n    static ref SCHEME: Scheme = Scheme! {\n        port: Int\n    };\n}\n\n#[derive(Debug)]\nstruct MyStruct {\n    port: i32,\n}\n\nimpl MyStruct {\n    fn scheme() -&gt; &amp;'static Scheme {\n        &amp;SCHEME\n    }\n\n    fn execution_context(&amp;self) -&gt; Result&lt;ExecutionContext, failure::Error&gt; {\n        let mut ctx = ExecutionContext::new(Self::scheme());\n        ctx.set_field_value(\"port\", self.port)?;\n\n        Ok(ctx)\n    }\n}\n\nfn main() -&gt; Result&lt;(), failure::Error&gt; {\n    let data: Vec&lt;MyStruct&gt; = (0..10).map(|i| MyStruct { port: i as i32 }).collect();\n    let scheme = MyStruct::scheme();\n    let ast = scheme.parse(\"port in {2 5}\")?;\n    let filter = ast.compile();\n\n    for i in data\n        .iter()\n        .filter(|d| filter.execute(&amp;d.execution_context().unwrap()).unwrap())\n    {\n        println!(\"{:?}\", i);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>this will print:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>MyStruct { port: 2 }\nMyStruct { port: 5 }\n</code></pre>\n\n<p>If I create the vector <code>data</code> <em>after</em> I validate the schema, the borrowing system will start to complain.</p>\n\n<p>I would like to validate the user input <code>\"port in {2 5}\"</code> before the creation of that vector which is an expensive operation, is there any way to do it?</p>\n\n<p>The second version of the code is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use wirefilter::{ExecutionContext, Scheme};\n\nlazy_static::lazy_static! {\n    static ref SCHEME: Scheme = Scheme! {\n        port: Int\n    };\n}\n\n#[derive(Debug)]\nstruct MyStruct {\n    port: i32,\n}\n\nimpl MyStruct {\n    fn scheme() -&gt; &amp;'static Scheme {\n        &amp;SCHEME\n    }\n\n    fn execution_context(&amp;self) -&gt; Result&lt;ExecutionContext, failure::Error&gt; {\n        let mut ctx = ExecutionContext::new(Self::scheme());\n        ctx.set_field_value(\"port\", self.port)?;\n\n        Ok(ctx)\n    }\n}\n\nfn main() -&gt; Result&lt;(), failure::Error&gt; {\n    let scheme = MyStruct::scheme();\n    let ast = scheme.parse(\"port in {2 5}\")?;\n    let filter = ast.compile();\n\n    let data: Vec&lt;MyStruct&gt; = (0..10).map(|i| MyStruct { port: i as i32 }).collect();\n    for i in data.iter().filter(|d| filter.execute(&amp;d.execution_context().unwrap()).unwrap()) {\n        println!(\"{:?}\", i);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>which will fail with this message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `data` does not live long enough\n  --&gt; src/main.rs:33:14\n   |\n33 |     for i in data.iter().filter(|d| filter.execute(&amp;d.execution_context().unwrap()).unwrap()) {\n   |              ^^^^ borrowed value does not live long enough\n...\n38 | }\n   | -\n   | |\n   | `data` dropped here while still borrowed\n   | borrow might be used here, when `filter` is dropped and runs the destructor for type `wirefilter::filter::Filter&lt;'_&gt;`\n   |\n   = note: values in a scope are dropped in the opposite order they are defined\n</code></pre>\n\n<p>It seems that I can parse the query before <code>data</code> is created, but I cannot compile it.</p>\n"}, {"tags": ["string", "rust", "default"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556442892, "post_id": 55887322, "comment_id": 98434738, "body": "I don&#39;t understand your question is already perfectly answered with a canonical question. Why not juste close as duplicate ? Your answer look useless."}, {"owner": {"reputation": 2818, "user_id": 1172350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/757373ec5a9f3631247eb0c3c8fdd44c?s=128&d=identicon&r=PG", "display_name": "dcoles", "link": "https://stackoverflow.com/users/1172350/dcoles"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556454242, "post_id": 55887322, "comment_id": 98437310, "body": "@Stargateur In my question it&#39;s an <code>Option&lt;&amp;String&gt;</code> to <code>Option&lt;&amp;str&gt;</code>. I didn&#39;t personally know enough Rust to say they&#39;re equivalent. Happy to close as a duplicate if that&#39;s the case.  Secondly working with a <code>HashMap&lt;_, String&gt;</code> is reasonably common, but the canonical answer for getting default values (<a href=\"https://stackoverflow.com/questions/41417660/how-does-one-create-a-hashmap-with-a-default-value-in-rust\" title=\"how does one create a hashmap with a default value in rust\">stackoverflow.com/questions/41417660/&hellip;</a>) doesn&#39;t work for <code>String</code>. Thus there&#39;s value in asking &quot;How do I get a default for a String map&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 2818, "user_id": 1172350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/757373ec5a9f3631247eb0c3c8fdd44c?s=128&d=identicon&r=PG", "display_name": "dcoles", "link": "https://stackoverflow.com/users/1172350/dcoles"}, "is_accepted": true, "score": 3, "last_activity_date": 1556472395, "last_edit_date": 1556472395, "creation_date": 1556430203, "answer_id": 55887367, "question_id": 55887322, "link": "https://stackoverflow.com/questions/55887322/returning-a-default-str-for-hashmap-string/55887367#55887367", "title": "Returning a default &amp;str for HashMap&lt;_, String&gt;", "body": "<p>It appears that the issue is that Rust does not automatically perform Deref coercion on the <code>Option&lt;&amp;String&gt;</code>, thus you must explictly convert to a <code>&amp;str</code> using something like <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.map_or\" rel=\"nofollow noreferrer\"><code>Option::map_or</code></a>:</p>\n\n<pre><code>let val = hashmap.get(\"key\").map_or(\"default\", String::as_str);\n</code></pre>\n\n<p>While this is the most direct method, there are several other alternatives for Deref coercion in this related answer: <a href=\"https://stackoverflow.com/a/31234028/1172350\">https://stackoverflow.com/a/31234028/1172350</a></p>\n"}], "owner": {"reputation": 2818, "user_id": 1172350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/757373ec5a9f3631247eb0c3c8fdd44c?s=128&d=identicon&r=PG", "display_name": "dcoles", "link": "https://stackoverflow.com/users/1172350/dcoles"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 444, "favorite_count": 0, "closed_date": 1556452481, "accepted_answer_id": 55887367, "answer_count": 1, "score": 0, "last_activity_date": 1556671214, "creation_date": 1556429655, "last_edit_date": 1556671214, "question_id": 55887322, "link": "https://stackoverflow.com/questions/55887322/returning-a-default-str-for-hashmap-string", "closed_reason": "Duplicate", "title": "Returning a default &amp;str for HashMap&lt;_, String&gt;", "body": "<p>I have a <code>HashMap&lt;_, String&gt;</code>for which I would like to either get the corresponding value of a key or return a default string. The most obvious approach would be to just use <code>unwrap_or</code>, but this fails with an type error:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:11:44\n   |\n11 |     let val = hashmap.get(key).unwrap_or(\"default\");\n   |                                            ^^^^^^^^^ expected struct `std::string::String`, found str\n   |\n   = note: expected type `&amp;std::string::String`\n              found type `&amp;'static str\n</code></pre>\n\n<p>I can work around this using an expression like <code>if let Some(val) = hashmap.get(key) { val } else { \"default\" }</code>, but I was wondering if there is a cleaner approach.</p>\n"}, {"tags": ["rust", "linker", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1556422405, "post_id": 55886779, "comment_id": 98431245, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/43826572/where-should-i-place-a-static-library-so-i-can-link-it-with-a-rust-program\">Where should I place a static library so I can link it with a Rust program?</a>"}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556422808, "post_id": 55886779, "comment_id": 98431302, "body": "@Stargateur: No, using <code>cargo:rustc-link-lib=m</code> in a build script is the same as calling <code>cargo rustc -- -lm</code> which does not work either."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556466056, "post_id": 55886779, "comment_id": 98440577, "body": "<i>fetching them using <code>dlsym</code></i> \u2014 doesn&#39;t that mean you need to dynamically open the library at runtime as well? See <a href=\"https://stackoverflow.com/q/22461457/155423\">Does Rust have a dlopen equivalent</a>"}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556466118, "post_id": 55886779, "comment_id": 98440598, "body": "@Shepmaster: No, <code>dlsym</code> looks into the executable as well as the dynamically linked libraries as well."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556520951, "post_id": 55886779, "comment_id": 98452753, "body": "I&#39;d say same as in C: don&#39;t use the <code>-l</code> flag, but instead pass the library directly: <code>link-args=&#47;path&#47;to&#47;libm.so</code>."}], "answers": [{"tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 2, "last_activity_date": 1556534676, "creation_date": 1556534676, "answer_id": 55901739, "question_id": 55886779, "link": "https://stackoverflow.com/questions/55886779/how-to-link-a-c-library-without-calling-one-of-its-functions/55901739#55901739", "title": "How to link a C library without calling one of its functions?", "body": "<p>It turns out that <code>rustc</code> call the linker with <code>-Wl,--as-needed</code>, so the solution for me was to disable this option:</p>\n\n<pre><code>[build]\nrustflags = [\"-C\", \"link-arg=-Wl,--no-as-needed\", \"-C\", \"link-arg=-lm\"]\n</code></pre>\n"}], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 55901739, "answer_count": 1, "score": 1, "last_activity_date": 1556534676, "creation_date": 1556422181, "last_edit_date": 1556465944, "question_id": 55886779, "link": "https://stackoverflow.com/questions/55886779/how-to-link-a-c-library-without-calling-one-of-its-functions", "title": "How to link a C library without calling one of its functions?", "body": "<p>I'd like to link with <code>-lm</code>. Right now, I'm doing it this way:</p>\n\n<pre><code>let _link_lm = f64::sin(3.0);\n</code></pre>\n\n<p>I tried putting this in <code>.cargo/config</code>:</p>\n\n<pre><code>[build]\nrustflags = [\"-C\", \"link-args=-lm\"]\n</code></pre>\n\n<p>This doesn't dynamically link the library.\nAlso, using <code>cargo:rustc-link-lib=m</code> in a build script is the same as calling <code>cargo rustc -- -lm</code> which does not work either.\nI check that the library is not linked with <code>ldd</code>.</p>\n\n<p>It matters to link the library because this is for a JIT compiler which can call these functions by fetching them using <code>dlsym</code>.</p>\n\n<p>How I\u00a0can link to this library without calling one of its functions?</p>\n"}, {"tags": ["r", "amazon-ec2", "rust", "centos"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1556410555, "post_id": 55885616, "comment_id": 98429762, "body": "This is an <b>exact duplicate</b> of <a href=\"https://stackoverflow.com/q/55769591/155423\">Rust compiler not found when installing gifski</a>"}, {"owner": {"reputation": 573, "user_id": 11388827, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e81b355ceee8591763c5822a1c34879b?s=128&d=identicon&r=PG&f=1", "display_name": "goollan", "link": "https://stackoverflow.com/users/11388827/goollan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556411670, "post_id": 55885616, "comment_id": 98429910, "body": "Any recommendations to connect the compiler?"}], "answers": [{"comments": [{"owner": {"reputation": 170794, "user_id": 190277, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dcf9672c1893e4b7c5d86ca1bc2bf88f?s=128&d=identicon&r=PG", "display_name": "Ben Bolker", "link": "https://stackoverflow.com/users/190277/ben-bolker"}, "edited": false, "score": 0, "creation_date": 1588283791, "post_id": 61532597, "comment_id": 108847989, "body": "OP said they were on CentOS (Red Hat derivative, yum-based), so an Ubuntu-focused solution might not help them."}], "tags": [], "owner": {"reputation": 1, "user_id": 13443957, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/9e12cbf25bc080199fcec493b57db06f?s=128&d=identicon&r=PG", "display_name": "Lucas Almir Cavalcante Minho", "link": "https://stackoverflow.com/users/13443957/lucas-almir-cavalcante-minho"}, "is_accepted": false, "score": 0, "last_activity_date": 1588280236, "creation_date": 1588280236, "answer_id": 61532597, "question_id": 55885616, "link": "https://stackoverflow.com/questions/55885616/error-configuration-failed-for-package-gifski/61532597#61532597", "title": "ERROR: configuration failed for package \u2018gifski\u2019", "body": "<p>If you're in linux Ubuntu, first install rust compiler:</p>\n\n<p>terminal > sudo apt-get install cargo</p>\n\n<p>then, install gifski from github:\ndevtool::install_github(\"r-rust/gifski\")</p>\n\n<p>or using remotes package:\nremotes::install_github(\"r-rust/gifski\") </p>\n\n<p>i hope i helped you.</p>\n"}], "owner": {"reputation": 573, "user_id": 11388827, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e81b355ceee8591763c5822a1c34879b?s=128&d=identicon&r=PG&f=1", "display_name": "goollan", "link": "https://stackoverflow.com/users/11388827/goollan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 549, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1588280236, "creation_date": 1556406450, "last_edit_date": 1556410597, "question_id": 55885616, "link": "https://stackoverflow.com/questions/55885616/error-configuration-failed-for-package-gifski", "title": "ERROR: configuration failed for package \u2018gifski\u2019", "body": "<p>I'd like to use the <code>gganimate</code> package, but it requires <code>gifski</code> which is failing.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>* installing *source* package \u2018gifski\u2019 ...\n** package \u2018gifski\u2019 successfully unpacked and MD5 sums checked\n------------------ RUST COMPILER NOT FOUND --------------------\n\nCargo was not found on the PATH. Please install cargo / rustc:\n\n - yum install cargo         (Fedora/CentOS)\n - apt-get install cargo     (Debian/Ubuntu)\n - brew install rustc        (MacOS)\n\nAlternatively install Rust from: &lt;https://www.rust-lang.org&gt;\n\n---------------------------------------------------------------\n\nERROR: configuration failed for package \u2018gifski\u2019\n* removing \u2018/home/User/R/x86_64-pc-linux-gnu-library/3.5/gifski\u2019\nWarning in install.packages :\n  installation of package \u2018gifski\u2019 had non-zero exit status\n</code></pre>\n\n<p>It says I need to install Rust, but I've done that. I ran these commands and then rebooted.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>curl https://sh.rustup.rs -sSf | sh\nexport PATH=\"$HOME/.cargo/bin:$PATH\"\n</code></pre>\n\n<p>I'm on a CentOS Linux machine hosted on EC2.</p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556405421, "post_id": 55884872, "comment_id": 98429027, "body": "I don&#39;t think those are the same signature. What does <code>db: State&lt;&amp;&#39;static Db&gt;</code> do?"}, {"owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556444970, "post_id": 55884872, "comment_id": 98435210, "body": "Nope, still the same error and compiles without warning."}], "answers": [{"tags": [], "owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "is_accepted": true, "score": 1, "last_activity_date": 1556456071, "last_edit_date": 1556456071, "creation_date": 1556455328, "answer_id": 55890356, "question_id": 55884872, "link": "https://stackoverflow.com/questions/55884872/rockets-state-errors-with-attempted-to-retrieve-unmanaged-state-when-using-an/55890356#55890356", "title": "Rocket&#39;s State errors with &quot;Attempted to retrieve unmanaged state&quot; when using an explicit lifetime?", "body": "<p>This seems to be the way to achieve the required result:</p>\n\n<pre><code>#[post(\"/foo\")]\npub fn foo_handler&lt;'a&gt;(db: State&lt;'a, Db&gt;) {\n  // ...\n}\n</code></pre>\n\n<p>A example helped in Rocket's <a href=\"https://api.rocket.rs/rocket/struct.State.html\" rel=\"nofollow noreferrer\">State</a> docs. I'd expect an error to be thrown for the above implementations though, as it's valid syntax.</p>\n"}, {"tags": [], "owner": {"reputation": 1618, "user_id": 1791856, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f123ff5b9de91e4b6a2fc52f2e28daa5?s=128&d=identicon&r=PG", "display_name": "Alex Moore-Niemi", "link": "https://stackoverflow.com/users/1791856/alex-moore-niemi"}, "is_accepted": false, "score": 0, "last_activity_date": 1593827608, "creation_date": 1593827608, "answer_id": 62724519, "question_id": 55884872, "link": "https://stackoverflow.com/questions/55884872/rockets-state-errors-with-attempted-to-retrieve-unmanaged-state-when-using-an/62724519#62724519", "title": "Rocket&#39;s State errors with &quot;Attempted to retrieve unmanaged state&quot; when using an explicit lifetime?", "body": "<p>I found this error resulted from failing to call <code>unwrap()</code> on the value I was initializing to be used in the <code>State</code>.</p>\n<pre><code>let index = load().unwrap(); // &lt;-- without unwrap, compiled but failed on request\nrocket::ignite()\n  .manage(index) // normal mount and so on here\n... etc ...\n</code></pre>\n"}], "owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 750, "favorite_count": 1, "accepted_answer_id": 55890356, "answer_count": 2, "score": 2, "last_activity_date": 1593827608, "creation_date": 1556399171, "last_edit_date": 1556444786, "question_id": 55884872, "link": "https://stackoverflow.com/questions/55884872/rockets-state-errors-with-attempted-to-retrieve-unmanaged-state-when-using-an", "title": "Rocket&#39;s State errors with &quot;Attempted to retrieve unmanaged state&quot; when using an explicit lifetime?", "body": "<p>When using Rocket's <code>State</code> with omitted lifetimes then a request to the route is handled ok:</p>\n\n<pre><code>#[post(\"/foo\")]\npub fn foo_handler(db: State&lt;Db&gt;) {\n    // ...\n}\n</code></pre>\n\n<p>However, if explicit lifetimes are provided then Rocket errors on requests with <code>Attempted to retrieve unmanaged state!</code>: </p>\n\n<pre><code>#[post(\"/foo\")]\npub fn foo_handler&lt;'a&gt;(db: State&lt;&amp;'a Db&gt;) {\n    // ...\n}\n</code></pre>\n\n<p>There's either something the compiler isn't picking up here or Rocket avoids a safety check, as this compiles ok without any error or warnings. Any ideas?</p>\n"}, {"tags": ["validation", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556390487, "post_id": 55883556, "comment_id": 98425813, "body": "Why not check if the parsed number is within the range 1...100?"}, {"owner": {"reputation": 142, "user_id": 6912202, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70c71e421aba1e9f586ca3933a84a201?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver Tu\u0161la", "link": "https://stackoverflow.com/users/6912202/oliver-tu%c5%a1la"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556391339, "post_id": 55883556, "comment_id": 98426041, "body": "Because I didn&#39;t know of its existence and I didn&#39;t know you can check in Ok argument as I would do it in its body and that would mean printing the message on two places. :)"}], "answers": [{"comments": [{"owner": {"reputation": 142, "user_id": 6912202, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70c71e421aba1e9f586ca3933a84a201?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver Tu\u0161la", "link": "https://stackoverflow.com/users/6912202/oliver-tu%c5%a1la"}, "edited": false, "score": 0, "creation_date": 1556391400, "post_id": 55883767, "comment_id": 98426055, "body": "The underscore by itself is always interpreted as Err?"}, {"owner": {"reputation": 5305, "user_id": 5818889, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6b8df2f6af3fd32042982001fac8407b?s=128&d=identicon&r=PG&f=1", "display_name": "glee8e", "link": "https://stackoverflow.com/users/5818889/glee8e"}, "reply_to_user": {"reputation": 142, "user_id": 6912202, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70c71e421aba1e9f586ca3933a84a201?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver Tu\u0161la", "link": "https://stackoverflow.com/users/6912202/oliver-tu%c5%a1la"}, "edited": false, "score": 3, "creation_date": 1556391625, "post_id": 55883767, "comment_id": 98426136, "body": "@OliverTu\u0161la No, it is a wildcard. It matches against anything. But remember &quot;match&quot; construct match each pattern from first to last, and pick the first pattern that matches. So in effect it matches aganist anything not yet matched. You can think of it as the last &quot;else&quot; branch in a huge if-elseif-elseif-elseif...-else clause."}], "tags": [], "owner": {"reputation": 5305, "user_id": 5818889, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6b8df2f6af3fd32042982001fac8407b?s=128&d=identicon&r=PG&f=1", "display_name": "glee8e", "link": "https://stackoverflow.com/users/5818889/glee8e"}, "is_accepted": true, "score": 4, "last_activity_date": 1556391199, "last_edit_date": 1556391199, "creation_date": 1556390673, "answer_id": 55883767, "question_id": 55883556, "link": "https://stackoverflow.com/questions/55883556/how-can-i-validate-the-number-of-digits-when-converting-from-a-string-by-chainin/55883767#55883767", "title": "How can I validate the number of digits when converting from a string by chaining matches?", "body": "<p>You don't need to chain match. You just need a different pattern:</p>\n\n<pre><code>let guess: u32 = match guess.trim().parse() {\n    Ok(num @ 1...100) =&gt; num,\n    _ =&gt; {\n        println!(\"Please type a number within 1-99.\");\n        continue;\n    },\n};\n</code></pre>\n\n<p>This pattern means \"If it's <code>Ok</code> and it has something bigger than 0 but smaller than 100, return its content, otherwise print message and continue.\"</p>\n"}, {"tags": [], "owner": {"reputation": 317, "user_id": 1430172, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eec739b7c4be422fce5ecfc80307f676?s=128&d=identicon&r=PG", "display_name": "Cory", "link": "https://stackoverflow.com/users/1430172/cory"}, "is_accepted": false, "score": 2, "last_activity_date": 1556391225, "last_edit_date": 1556391225, "creation_date": 1556390680, "answer_id": 55883769, "question_id": 55883556, "link": "https://stackoverflow.com/questions/55883556/how-can-i-validate-the-number-of-digits-when-converting-from-a-string-by-chainin/55883769#55883769", "title": "How can I validate the number of digits when converting from a string by chaining matches?", "body": "<p>You can chain matches like this:</p>\n\n<pre><code>let guess: u32 = match guess.trim().parse() {\n    Ok(num) =&gt; match guess.chars().count() {\n        1 | 2 =&gt; num,\n        _ =&gt; {\n            println!(\"Please type a number from 1 to 100.\");\n            continue;\n        }\n    },\n    Err(_) =&gt; {\n        println!(\"Please type a number.\");\n        continue;\n    },\n};\n</code></pre>\n\n<p>However, checking the string length is not what you really want. For example \"00023\" parses to \"23\" but has a strength length of 5.\nSince you have access to <code>num</code> in this context, you can match on its value directly!</p>\n\n<pre><code>// ...\nOk(num) =&gt; match num {\n    1..=100 =&gt; num,\n    _ =&gt; {\n        println!(\"Please type a number from 1 to 100.\");\n        continue;\n    }\n},\n// ...\n</code></pre>\n"}], "owner": {"reputation": 142, "user_id": 6912202, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70c71e421aba1e9f586ca3933a84a201?s=128&d=identicon&r=PG&f=1", "display_name": "Oliver Tu\u0161la", "link": "https://stackoverflow.com/users/6912202/oliver-tu%c5%a1la"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "accepted_answer_id": 55883767, "answer_count": 2, "score": 0, "last_activity_date": 1556391225, "creation_date": 1556389281, "last_edit_date": 1556390434, "question_id": 55883556, "link": "https://stackoverflow.com/questions/55883556/how-can-i-validate-the-number-of-digits-when-converting-from-a-string-by-chainin", "title": "How can I validate the number of digits when converting from a string by chaining matches?", "body": "<p>I just completed the <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">Programming a Guessing Game</a> chapter of <em>The Rust Programming Language</em>. I now want to add validation for the number of digits  but couldn't find a pleasing way to do it.</p>\n\n<p>I am able to achieve it by replacing</p>\n\n<pre><code>let guess: u32 = match guess.trim().parse() {\n    Ok(num) =&gt; num,\n    Err(_) =&gt; {\n        println!(\"Please type a number.\");\n        continue;\n    },\n};\n</code></pre>\n\n<p>with</p>\n\n<pre><code>let guess = guess.trim();\nif guess.parse::&lt;u32&gt;().is_err() || guess.chars().count() &gt; 2 {\n    println!(\"Please type a number from 1 to 100.\");\n    continue;\n}\nlet guess: u32 = match guess.parse() {\n    Ok(num) =&gt; num,\n    Err(_) =&gt; continue, // this will never happen\n};\n</code></pre>\n\n<p>The way I would prefer to do this is by somehow chaining matches, but I couldn't figure it out.</p>\n"}, {"tags": ["generics", "multidimensional-array", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556384465, "post_id": 55882605, "comment_id": 98424238, "body": "As I was force to do your job of provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, it&#39;s appear you have more than 1 error, please verify that this MCVE still reflect your problem and next time, do it yourself."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556384564, "post_id": 55882605, "comment_id": 98424260, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/29184358/155423\">How do I require a generic type implement an operation like Add, Sub, Mul, or Div in a generic function?</a> and <a href=\"https://stackoverflow.com/q/32551177/155423\">\u201cExpected type parameter\u201d error in the constructor of a generic struct</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55882605/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1556385988, "post_id": 55882605, "comment_id": 98424631, "body": "@Shepmaster no, it was a different problem related to how to use ndarray properly"}], "answers": [{"tags": [], "owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "is_accepted": true, "score": 0, "last_activity_date": 1556385970, "last_edit_date": 1556385970, "creation_date": 1556385909, "answer_id": 55883096, "question_id": 55882605, "link": "https://stackoverflow.com/questions/55882605/how-to-multiply-element-wise-in-a-ndarray-with-generics-in-rust/55883096#55883096", "title": "How to multiply element-wise in a ndarray with generics in Rust?", "body": "<p>If you want <code>T</code> to be used in that kind of operation, you must require <code>ndarray::ScalarOperand</code> for <code>T</code>. This is the fixed code:</p>\n\n<pre><code>use ndarray::{Array2, ScalarOperand};\nuse num::Float;\nuse std::ops::{AddAssign, MulAssign};\n\nfn gauss&lt;T&gt;(pivot: [usize; 2], table: &amp;mut Array2&lt;T&gt;)\nwhere\n    T: Float + MulAssign + AddAssign + ScalarOperand,\n{\n    for i in 0..table.len_of(Axis(0)) {\n        if i != pivot[0] {\n            // Aplicar GAUSS a la fila\n            let pivot_n = table[pivot];\n            let make_zero = table[[i, pivot[1]]];\n            // Multiplicar la fila de make_zero por pivot_n\n            let mut row_pivot = table.row(pivot[0]).to_owned();\n            let mut row_make_zero = table.row_mut(i);\n            row_make_zero *= pivot_n;\n            row_pivot *= -make_zero;\n            row_make_zero += &amp;row_pivot;\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 604, "user_id": 3884974, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a1f5eca7d4c975bd4ad5886c04a942fc?s=128&d=identicon&r=PG", "display_name": "Adri&#225;n Arroyo Calle", "link": "https://stackoverflow.com/users/3884974/adri%c3%a1n-arroyo-calle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 305, "favorite_count": 0, "accepted_answer_id": 55883096, "answer_count": 1, "score": 0, "last_activity_date": 1556385970, "creation_date": 1556382648, "last_edit_date": 1556384483, "question_id": 55882605, "link": "https://stackoverflow.com/questions/55882605/how-to-multiply-element-wise-in-a-ndarray-with-generics-in-rust", "title": "How to multiply element-wise in a ndarray with generics in Rust?", "body": "<p>I have a ndarray 2-dimensional array and I'm trying to multiply a row with the same number, as stated <a href=\"https://docs.rs/ndarray/0.12.1/ndarray/struct.ArrayBase.html#arithmetic-operations\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>It works fine when I'm working with a 2-dimensional array of <code>f64</code> but I want it to be generic to all kinds of floats. That's why I'm using <code>Float</code> from num-traits. However, it doesn't compile anymore.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use ndarray::{Array2, Axis};\n\nfn gauss(pivot: [usize; 2], table: &amp;mut Array2&lt;f64&gt;) {\n    for i in 0..table.len_of(Axis(0)) {\n        if i != pivot[0] {\n            let pivot_n = table[pivot];\n            let make_zero = table[[i, pivot[1]]];\n            let mut row_pivot = table.row(pivot[0]).to_owned();\n            let mut row_make_zero = table.row_mut(i);\n            row_make_zero *= pivot_n;\n            row_pivot *= -make_zero;\n            row_make_zero += &amp;row_pivot;\n        }\n    }\n}\n\nuse num::Float;\nuse std::ops::MulAssign;\n\nfn gauss_2&lt;T: Float + MulAssign&gt;(pivot: [usize; 2], table: &amp;mut Array2&lt;T&gt;) {\n    for i in 0..table.len_of(Axis(0)) {\n        if i != pivot[0] {\n            let pivot_n = table[pivot];\n            let make_zero = table[[i, pivot[1]]];\n            let mut row_pivot = table.row(pivot[0]).to_owned();\n            let mut row_make_zero = table.row_mut(i);\n            row_make_zero *= pivot_n;\n            row_pivot *= -make_zero;\n            row_make_zero += &amp;row_pivot;\n        }\n    }\n}\n</code></pre>\n\n<p>The error it shows is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:27:30\n   |\n27 |             row_make_zero *= pivot_n;\n   |                              ^^^^^^^ expected reference, found type parameter\n   |\n   = note: expected type `&amp;ndarray::ArrayBase&lt;_, _&gt;`\n              found type `T`\n\nerror[E0308]: mismatched types\n  --&gt; src/lib.rs:28:26\n   |\n28 |             row_pivot *= -make_zero;\n   |                          ^^^^^^^^^^ expected reference, found type parameter\n   |\n   = note: expected type `&amp;ndarray::ArrayBase&lt;_, _&gt;`\n              found type `T`\n\nerror[E0368]: binary assignment operation `+=` cannot be applied to type `ndarray::ArrayBase&lt;ndarray::ViewRepr&lt;&amp;mut T&gt;, ndarray::dimension::dim::Dim&lt;[usize; 1]&gt;&gt;`\n  --&gt; src/lib.rs:29:13\n   |\n29 |             row_make_zero += &amp;row_pivot;\n   |             -------------^^^^^^^^^^^^^^\n   |             |\n   |             cannot use `+=` on type `ndarray::ArrayBase&lt;ndarray::ViewRepr&lt;&amp;mut T&gt;, ndarray::dimension::dim::Dim&lt;[usize; 1]&gt;&gt;`\n   |\n   = note: an implementation of `std::ops::AddAssign` might be missing for `ndarray::ArrayBase&lt;ndarray::ViewRepr&lt;&amp;mut T&gt;, ndarray::dimension::dim::Dim&lt;[usize; 1]&gt;&gt;`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1556381095, "post_id": 55882237, "comment_id": 98423353, "body": "<code>Deserialize</code> is a macro, and that&#39;s just how they work. It is imported by: <code>#[macro_use] extern crate serde_derive;</code> (lines 19-20)"}], "answers": [{"comments": [{"owner": {"reputation": 362, "user_id": 123868, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/ae1af9b359c1f6d2816e552b75a89b80?s=128&d=identicon&r=PG", "display_name": "Manu", "link": "https://stackoverflow.com/users/123868/manu"}, "edited": false, "score": 1, "creation_date": 1556384792, "post_id": 55882436, "comment_id": 98424316, "body": "Thank you, using <code>use</code> statement makes lot of since.   I was thrown off by <code>Deserialize</code> being a trait not a macro, so I though <code>#[macro_use]</code> has noting to do with it. But apparently <code>#[derive(Deserialize)]</code> needs the  <code>#[proc_macro_derive(Deserialize, attributes(serde))]</code> macro, not the trait itself."}], "tags": [], "owner": {"reputation": 340, "user_id": 652278, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bbc401e0db6b59e8152fba482308e02?s=128&d=identicon&r=PG", "display_name": "sdht0", "link": "https://stackoverflow.com/users/652278/sdht0"}, "is_accepted": true, "score": 3, "last_activity_date": 1556384334, "last_edit_date": 1556384334, "creation_date": 1556381455, "answer_id": 55882436, "question_id": 55882237, "link": "https://stackoverflow.com/questions/55882237/how-can-i-find-where-a-symbol-used-in-derive-is-defined/55882436#55882436", "title": "How can I find where a symbol used in `derive` is defined?", "body": "<p>Notice the declaration:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate serde_derive;\n</code></pre>\n\n<p>(<a href=\"https://github.com/rust-lang/git2-rs/blob/718799c265d4e6fea635906cb57379a441021f3c/examples/status.rs#L19-L20\" rel=\"nofollow noreferrer\">source</a>)</p>\n\n<p>This brings <em>all</em> the macros defined in the <code>serde_derive</code> crate into scope. One of those is the <code>Deserialize</code> <em>macro</em> which helps implement the <code>Deserialize</code> trait.</p>\n\n<p>This was the old way of doing things. In the 2018 edition, the <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/macros/macro-changes.html\" rel=\"nofollow noreferrer\">preferred way is to import macros with the more familiar  <code>use</code> statements</a>.</p>\n"}], "owner": {"reputation": 362, "user_id": 123868, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/ae1af9b359c1f6d2816e552b75a89b80?s=128&d=identicon&r=PG", "display_name": "Manu", "link": "https://stackoverflow.com/users/123868/manu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 55882436, "answer_count": 1, "score": 1, "last_activity_date": 1556384334, "creation_date": 1556380104, "last_edit_date": 1556384313, "question_id": 55882237, "link": "https://stackoverflow.com/questions/55882237/how-can-i-find-where-a-symbol-used-in-derive-is-defined", "title": "How can I find where a symbol used in `derive` is defined?", "body": "<p>I come from a Java background, in which finding a symbol definition location is straightforward: it's ether in the same package or it comes via the imports.</p>\n\n<p>Here <code>Deserialize</code> is defined in the <code>serde</code> crate, yet the source file contains no references to <code>serde</code> crate:</p>\n\n<pre><code>#[derive(Deserialize)]\nstruct Args {\n    arg_spec: Vec&lt;String&gt;,\n    flag_short: bool,\n    flag_porcelain: bool,\n    flag_branch: bool,\n    flag_z: bool,\n    flag_ignored: bool,\n    flag_untracked_files: Option&lt;String&gt;,\n    flag_ignore_submodules: Option&lt;String&gt;,\n    flag_git_dir: Option&lt;String&gt;,\n    flag_repeat: bool,\n    flag_list_submodules: bool,\n}\n</code></pre>\n\n<p>(<a href=\"https://github.com/rust-lang/git2-rs/blob/718799c265d4e6fea635906cb57379a441021f3c/examples/status.rs#L27\" rel=\"nofollow noreferrer\">source</a>)</p>\n"}, {"tags": ["enums", "rust", "traits"], "comments": [{"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 1, "creation_date": 1556370440, "post_id": 55880623, "comment_id": 98420414, "body": "You can fix the first problem by adding type information, like <code>role.order::&lt;Role&gt;()</code>. The second/third problem may be originating from your decision to use type parameters instead of <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html#specifying-placeholder-types-in-trait-definitions-with-associated-types\" rel=\"nofollow noreferrer\">associated types</a>."}], "answers": [{"comments": [{"owner": {"reputation": 355, "user_id": 1574106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b194afd8e8777547fff445a99c918296?s=128&d=identicon&r=PG", "display_name": "Dave Mason", "link": "https://stackoverflow.com/users/1574106/dave-mason"}, "edited": false, "score": 0, "creation_date": 1556383005, "post_id": 55882361, "comment_id": 98423838, "body": "Perfect, thanks. As T and Self could be different, it&#39;s now clear why it couldn&#39;t infer the correct type."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1556381799, "last_edit_date": 1556381799, "creation_date": 1556380916, "answer_id": 55882361, "question_id": 55880623, "link": "https://stackoverflow.com/questions/55880623/how-do-i-have-a-trait-field-in-a-struct/55882361#55882361", "title": "How do I have a trait field in a struct?", "body": "<p>Something feels a little \"off\" with this trait:</p>\n\n<pre><code>pub trait RoleTrait {\n    fn owner&lt;T: RoleTrait&gt;() -&gt; T;\n    fn order&lt;T: RoleTrait&gt;(&amp;self) -&gt; usize;\n}\n</code></pre>\n\n<p>The <code>owner</code> method doesn't have a receiver (e.g. <code>self</code>), so it seems unnecessary to introduce a new type parameter; <code>Self</code> will do the same thing.</p>\n\n<p>In <code>order</code>, having a separate <code>T</code> is not <em>exactly</em> the same thing as just using <code>Self</code> - it allows <code>T</code> and <code>Self</code> to be a completely different implementations of <code>RoleTrait</code>. But this feels like quite a strange and unusual requirement, especially since <code>T</code> doesn't appear in the method signature.</p>\n\n<p>Your code can be fixed quite simply by following the more typical pattern:</p>\n\n<pre><code>pub trait RoleTrait {\n    fn owner() -&gt; Self;\n    fn order(&amp;self) -&gt; usize;\n}\n</code></pre>\n\n<hr>\n\n<p>This small change leads to all the type errors being resolved, and just leaving a couple of small borrow errors (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d260b28a3c6c8255d6a8263f827c54e1\" rel=\"nofollow noreferrer\">playground</a>), which can be quite easily addressed (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dad83bdf96dd2f41ecc15535e6933f43\" rel=\"nofollow noreferrer\">playground</a>).</p>\n"}], "owner": {"reputation": 355, "user_id": 1574106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b194afd8e8777547fff445a99c918296?s=128&d=identicon&r=PG", "display_name": "Dave Mason", "link": "https://stackoverflow.com/users/1574106/dave-mason"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 55882361, "answer_count": 1, "score": 2, "last_activity_date": 1556385653, "creation_date": 1556368706, "last_edit_date": 1556385653, "question_id": 55880623, "link": "https://stackoverflow.com/questions/55880623/how-do-i-have-a-trait-field-in-a-struct", "title": "How do I have a trait field in a struct?", "body": "<p>I have some code that I want to turn into a crate. But it includes a structure that contains a field that I want to be provided by the user of the crate. But I need functionality from that field, so I want to specify it as a trait.</p>\n\n<pre><code>pub trait RoleTrait {\n    fn owner&lt;T: RoleTrait&gt;() -&gt; T;\n    fn order&lt;T: RoleTrait&gt;(&amp;self) -&gt; usize;\n}\n\npub struct RequestInfo&lt;Role: RoleTrait + PartialEq&gt; {\n    role: Option&lt;Role&gt;,\n    name: String,\n}\n\nimpl&lt;Role: RoleTrait&gt; RequestInfo&lt;Role&gt;\nwhere\n    Role: std::cmp::PartialEq,\n{\n    fn name(&amp;self) -&gt; String {\n        self.name.to_string()\n    }\n\n    fn role(&amp;self) -&gt; &amp;Option&lt;Role&gt; {\n        &amp;self.role\n    }\n\n    fn is_owner(&amp;self) -&gt; bool {\n        if let Some(role) = self.role {\n            role == Role::owner()\n        } else {\n            false\n        }\n    }\n    fn order(&amp;self) -&gt; usize {\n        if let Some(role) = self.role {\n            role.order() + 1\n        } else {\n            0\n        }\n    }\n\n    fn from(name: String) -&gt; RequestInfo&lt;Role&gt; {\n        RequestInfo::&lt;Role&gt; {\n            role: None,\n            name: name,\n        }\n    }\n\n    fn with_role(name: String, role: Role) -&gt; RequestInfo&lt;Role&gt; {\n        RequestInfo::&lt;Role&gt; {\n            role: Some(role),\n            name: name,\n        }\n    }\n}\n</code></pre>\n\n<p>With two implementations of <code>RoleTrait</code>:</p>\n\n<pre><code>#[derive(PartialEq)]\npub enum CourseRole {\n    Professor,\n    Marker,\n    Student,\n}\n\nimpl RoleTrait for CourseRole {\n    fn owner&lt;T: RoleTrait&gt;() -&gt; T {\n        CourseRole::Professor\n    }\n\n    fn order&lt;T: RoleTrait&gt;(&amp;self) -&gt; usize {\n        if *self == CourseRole::Professor {\n            0\n        } else {\n            1\n        }\n    }\n}\n\n#[derive(PartialEq)]\npub enum BlogRole {\n    Owner,\n    Blogger,\n}\n\nimpl RoleTrait for BlogRole {\n    fn owner&lt;T: RoleTrait&gt;() -&gt; T {\n        BlogRole::Owner\n    }\n\n    fn order&lt;T: RoleTrait&gt;(&amp;self) -&gt; usize {\n        if *self == BlogRole::Owner {\n            0\n        } else {\n            1\n        }\n    }\n}\n</code></pre>\n\n<p>I get 3 errors with this.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:28:18\n   |\n28 |             role.order() + 1\n   |                  ^^^^^ cannot infer type for `T`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:55:9\n   |\n54 |     fn owner&lt;T: RoleTrait&gt;() -&gt; T {\n   |                                 - expected `T` because of return type\n55 |         CourseRole::Professor\n   |         ^^^^^^^^^^^^^^^^^^^^^ expected type parameter, found enum `CourseRole`\n   |\n   = note: expected type `T`\n              found type `CourseRole`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:72:9\n   |\n71 |     fn owner&lt;T: RoleTrait&gt;() -&gt; T {\n   |                                 - expected `T` because of return type\n72 |         BlogRole::Owner\n   |         ^^^^^^^^^^^^^^^ expected type parameter, found enum `BlogRole`\n   |\n   = note: expected type `T`\n              found type `BlogRole`\n</code></pre>\n\n<p>(and the second error repeated for the other enum)</p>\n\n<p>Frankly, I'm surprised (and pleased!) that some of my code is valid (like the references to <code>owner</code> in the trait). I had a lot more errors when I started writing this question, but I can't figure out these remaining ones since <code>T</code> looks so clear and <code>rustc</code> seems to have already figured out harder things. In the last 2 errors, it's almost like it doesn't realize that there is an implementation of the trait for the enum because it's in the middle of defining that implementation (but it obviously understands that in other places).</p>\n"}, {"tags": ["rust", "infinite-loop", "borrow-checker"], "comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1556300465, "post_id": 55872440, "comment_id": 98405035, "body": "You are telling the compiler that the pointers stored in <code>data</code> (and hence the whole struct <code>Demo</code>) must be valid for at least <code>&#39;a</code> , yet the value you push has a shorter lifespan - i.e. the instance of the struct outlives it. Although thi sis not an issue for your case, it&#39;s still a violation of the lifetime rules."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1556309740, "post_id": 55872440, "comment_id": 98408537, "body": "&quot;Settings are added to the struct as references to avoid boxing&quot; \u2013 If boxes are the alternative, should <code>Data</code> simply <i>own</i> the settings instead? This would solve your problem in a trivial way."}], "answers": [{"comments": [{"owner": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "edited": false, "score": 0, "creation_date": 1556300825, "post_id": 55872583, "comment_id": 98405158, "body": "Thanks for the suggestion, the problem is that the reference is effectively not static, only with a lifetime longer than bug."}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "reply_to_user": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "edited": false, "score": 1, "creation_date": 1556301451, "post_id": 55872583, "comment_id": 98405401, "body": "Could you post a more realistic example then? Where is that lifetime coming from? Remember that while this looks like an infinite loop, things can panic, stacks unwind and &quot;fire and forget&quot; lifetimes become unsafe memory all of the sudden."}, {"owner": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "edited": false, "score": 0, "creation_date": 1556302476, "post_id": 55872583, "comment_id": 98405853, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=88e4f92f0585143f0bbb833a81e02a99\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> Is closer to what I would want. It works fine if exit is inlined in main, but this is not really optimal from a user perspective"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "reply_to_user": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "edited": false, "score": 1, "creation_date": 1556304351, "post_id": 55872583, "comment_id": 98406624, "body": "<code>let a = &amp;|_shell: &amp;Demo| {}; self.callbacks.push(a);</code> will compile. Notice how the creation of the reference is moved."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": false, "score": 1, "last_activity_date": 1556310122, "last_edit_date": 1556310122, "creation_date": 1556300442, "answer_id": 55872583, "question_id": 55872440, "link": "https://stackoverflow.com/questions/55872440/rust-borrow-checker-in-infinite-loop/55872583#55872583", "title": "Rust: borrow checker in infinite loop", "body": "<p>The problem here is not so much that the borrow checker can't see the infinite loop but that you are actively lying to the compiler. When constructing the <code>Demo&lt;'a&gt;</code> in <code>main()</code>, the lifetime <code>'a</code> is a distinct lifetime (bound to the scope of <code>main()</code>). Within <code>bug()</code> you now push a new reference which has to last as long as <em>the lifetime 'a has already been established to be</em>. There is no way out of this.</p>\n\n<p>You can, however, create references which are guaranteed to live at least as long as <em>any</em> lifetime:</p>\n\n<pre><code>fn bug(mut self) -&gt; ! {\n    let a: &amp;'static u8 = &amp;8;\n    {\n        self.data.push(a);\n        {\n            self.forever();\n        }\n    }\n}\n</code></pre>\n\n<p>This will work, because no matter what <code>'a</code> is, <code>'static</code>will live at least as long.</p>\n"}, {"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1556309280, "creation_date": 1556309280, "answer_id": 55874334, "question_id": 55872440, "link": "https://stackoverflow.com/questions/55872440/rust-borrow-checker-in-infinite-loop/55874334#55874334", "title": "Rust: borrow checker in infinite loop", "body": "<p>Within an <code>impl&lt;'a&gt; Demo&lt;'a&gt;</code>, all the <code>self</code>s have the exact same type, for the exact same <code>'a</code>. But in your case, you are trying to shorten the lifetime. You can do this by rebinding <code>self</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut this = self;\n// the compiler infers that `this` must have a shorter lifetime:\nthis.data.push(&amp;a);\nthis.forever();\n</code></pre>\n\n<p>(<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d1a8a40cbe1700d863e4a181de50628e\" rel=\"nofollow noreferrer\">link to the playground</a>)</p>\n\n<p>Your other example can be fixed in a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=04ba718d3ca5cb87f893aea7db3ebdbc\" rel=\"nofollow noreferrer\">similar way</a>.</p>\n"}], "owner": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 215, "favorite_count": 0, "accepted_answer_id": 55874334, "answer_count": 2, "score": 0, "last_activity_date": 1556310122, "creation_date": 1556299729, "question_id": 55872440, "link": "https://stackoverflow.com/questions/55872440/rust-borrow-checker-in-infinite-loop", "title": "Rust: borrow checker in infinite loop", "body": "<p>I'm currently building an application with a main loop. Settings are added to the struct as references to avoid boxing. The problem is, even though it seems perfectly valid, the borrow checker does not validate infinite loops. As an example, this does not compile:</p>\n\n<pre><code>struct Demo&lt;'a&gt; {\n    data: Vec&lt;&amp;'a u8&gt;,\n}\n\nimpl&lt;'a&gt; Demo&lt;'a&gt; {\n    fn new(data: Vec&lt;&amp;'a u8&gt;) -&gt; Self {\n        Demo { data }\n    }\n\n    fn bug(mut self) -&gt; ! {\n        let a = 8;\n        {\n            self.data.push(&amp;a);\n            {\n                self.forever();\n            }\n        }\n    }\n\n    fn forever(self) -&gt; ! {\n        loop {\n            for dat in &amp;self.data {\n                println!(\"{}\", dat);\n            }\n        }\n    }\n}\n\nfn main() {\n    let v = vec![&amp;1, &amp;1, &amp;2, &amp;3];\n    Demo::new(v).bug();\n}\n</code></pre>\n\n<p>My question is: how could I refactor the code above to avoid boxing the data, but still being able to use a main loop.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1556296822, "post_id": 55871619, "comment_id": 98403572, "body": "don&#39;t think is possible currently, <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f161dbf52739e7d0c0107ec64df698f0\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>, congratulation for your intern compiler error"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1556297008, "post_id": 55871619, "comment_id": 98403650, "body": "I think this fails because traits are namespaces, but not scopes. However, I would have expected <code>Self::SIZE</code> to work; looks like a compiler bug (especially with the ICE that Stargateur found)."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1556300103, "post_id": 55871619, "comment_id": 98404916, "body": "<a href=\"https://github.com/rust-lang/rust/issues/42863\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/42863</a>"}], "answers": [{"comments": [{"owner": {"reputation": 6932, "user_id": 774236, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/7e46879a230ff1e28cd975e3b0a0873b?s=128&d=identicon&r=PG", "display_name": "Matteo Monti", "link": "https://stackoverflow.com/users/774236/matteo-monti"}, "edited": false, "score": 0, "creation_date": 1556297737, "post_id": 55871896, "comment_id": 98403956, "body": "Makes sense! :) Thanks."}], "tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": true, "score": 3, "last_activity_date": 1556297271, "creation_date": 1556297271, "answer_id": 55871896, "question_id": 55871619, "link": "https://stackoverflow.com/questions/55871619/associated-const-in-size-of-returned-array/55871896#55871896", "title": "Associated const in size of returned array", "body": "<p>You can achieve almost the same by using an associated type:</p>\n\n<pre><code>pub trait Representable {\n    type T;\n\n    fn get(&amp;self) -&gt; Self::T;\n    fn set(&amp;mut self, value: Self::T);\n}\n\npub struct ReprA;\nimpl Representable for ReprA{\n    type T = [u8; 10];\n\n    fn get(&amp;self) -&gt; Self::T{\n        unimplemented!()\n    }\n\n    fn set(&amp;mut self, value: Self::T){\n        unimplemented!()\n    }\n}\n\npub struct ReprB;\nimpl Representable for ReprB{\n    type T = [u8; 50];\n\n    fn get(&amp;self) -&gt; Self::T{\n        unimplemented!()\n    }\n\n    fn set(&amp;mut self, value: Self::T){\n        unimplemented!()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 6932, "user_id": 774236, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/7e46879a230ff1e28cd975e3b0a0873b?s=128&d=identicon&r=PG", "display_name": "Matteo Monti", "link": "https://stackoverflow.com/users/774236/matteo-monti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 358, "favorite_count": 0, "closed_date": 1556370235, "accepted_answer_id": 55871896, "answer_count": 1, "score": 1, "last_activity_date": 1556297271, "creation_date": 1556295993, "question_id": 55871619, "link": "https://stackoverflow.com/questions/55871619/associated-const-in-size-of-returned-array", "closed_reason": "Duplicate", "title": "Associated const in size of returned array", "body": "<p>Consider the following <code>trait</code>:</p>\n\n<pre><code>pub trait Representable {\n    const SIZE: usize;\n\n    fn get(&amp;self) -&gt; [u8; SIZE];\n    fn set(&amp;mut self, value: [u8; SIZE]);\n}\n</code></pre>\n\n<p>I would like to implement it for any <code>struct</code> that can be represented as a fixed-size array of bytes. To this end, I added to the <code>trait</code> an associated constant <code>SIZE</code> such that the representation returned by <code>get</code> and accepted by <code>set</code> is <code>SIZE</code> bytes long.</p>\n\n<p>However, when I try to compile I get this message:</p>\n\n<pre><code>error[E0425]: cannot find value `SIZE` in this scope\n --&gt; src/bytewise/representable.rs:4:27\n  |\n4 |     fn get(&amp;self) -&gt; [u8; SIZE];\n  |                           ^^^^ not found in this scope\n\nerror[E0425]: cannot find value `SIZE` in this scope\n --&gt; src/bytewise/representable.rs:5:35\n  |\n5 |     fn set(&amp;mut self, value: [u8; SIZE]);\n  |                                   ^^^^ not found in this scope\n</code></pre>\n\n<p>So, well, now I am confused. I can't think of much more than \"but... but it's right there\". What am I missing?</p>\n"}, {"tags": ["rust", "nom"], "answers": [{"tags": [], "owner": {"reputation": 3267, "user_id": 10992173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e89f4e8e1572a941554283f29a908620?s=128&d=identicon&r=PG&f=1", "display_name": "f9c69e9781fa194211448473495534", "link": "https://stackoverflow.com/users/10992173/f9c69e9781fa194211448473495534"}, "is_accepted": true, "score": 1, "last_activity_date": 1593116314, "last_edit_date": 1593116314, "creation_date": 1556301265, "answer_id": 55872765, "question_id": 55869575, "link": "https://stackoverflow.com/questions/55869575/how-to-perform-a-simple-while-loop-and-parse-blocks-of-binary-data-with-nom/55872765#55872765", "title": "How to perform a simple while loop and parse blocks of binary data with nom?", "body": "<p>You can use <a href=\"https://docs.rs/nom/4.2.3/nom/macro.many0.html\" rel=\"nofollow noreferrer\"><code>many0</code></a> to apply a parser 0 or more times (or <code>many1</code> if you require at least one pass).</p>\n<pre><code>named!(my_iterated_parser&lt;&amp;[u8], Vec&lt;SomethingParsed&gt;&gt;, many0!(my_parser));\n</code></pre>\n<p><a href=\"https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md\" rel=\"nofollow noreferrer\">Reference</a></p>\n"}], "owner": {"reputation": 9581, "user_id": 807239, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/fcjpR.jpg?s=128&g=1", "display_name": "Daniel Ribeiro", "link": "https://stackoverflow.com/users/807239/daniel-ribeiro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 259, "favorite_count": 0, "accepted_answer_id": 55872765, "answer_count": 1, "score": 2, "last_activity_date": 1593116314, "creation_date": 1556288333, "last_edit_date": 1556290623, "question_id": 55869575, "link": "https://stackoverflow.com/questions/55869575/how-to-perform-a-simple-while-loop-and-parse-blocks-of-binary-data-with-nom", "title": "How to perform a simple while loop and parse blocks of binary data with nom?", "body": "<p>Considering a binary file organized as segments of data, where the first 4 bytes are the segment type and the next 4 bytes are the segment length, and the remaining bytes are raw data. I can parse the first segment like:</p>\n\n<pre><code>named!(my_parser&lt;&amp;[u8], SomethingParsed&gt;, do_parse!(\n    segment_type: take!(4)      &gt;&gt;\n    segment_length: be_u32      &gt;&gt;\n    segment_data: take!(segment_length) &gt;&gt;\n\n    (SomethingParsed {segments: ?})\n))\n</code></pre>\n\n<p>How can I repeat that step until I reach the end of the file?</p>\n"}, {"tags": ["rust", "rust-actix", "actix-web"], "answers": [{"tags": [], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "is_accepted": false, "score": 1, "last_activity_date": 1562703173, "creation_date": 1562703173, "answer_id": 56959913, "question_id": 55868475, "link": "https://stackoverflow.com/questions/55868475/how-can-i-pass-query-string-to-httprequest-url-for-in-actix-web/56959913#56959913", "title": "How can I pass query string to HttpRequest.url_for() in actix-web?", "body": "<p><code>url_for</code> gives you a <code>Result&lt;Url, Error&gt;</code>, which you can unwrap and use <code>.set_query</code> on:</p>\n\n<pre><code>req.url_for(\"foo\", &amp;[\"1\", \"2\", \"3\"]).unwrap().set_query(Some(\"q=asdf\"));\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 11273155, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/00ac92c5063a08a0ea5c7689de812981?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/11273155/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 322, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1562703173, "creation_date": 1556284585, "question_id": 55868475, "link": "https://stackoverflow.com/questions/55868475/how-can-i-pass-query-string-to-httprequest-url-for-in-actix-web", "title": "How can I pass query string to HttpRequest.url_for() in actix-web?", "body": "<p><a href=\"https://docs.rs/actix-web/0.3.0/actix_web/struct.HttpRequest.html\" rel=\"nofollow noreferrer\">Documentation</a> about url_for.</p>\n\n<p>Code:</p>\n\n<pre><code>fn index(req: HttpRequest) -&gt; HttpResponse {\n    let url = req.url_for(\"foo\", &amp;[\"1\", \"2\", \"3\"]); // &lt;- generate url for \"foo\" resource\n    HTTPOk.into()\n}\n\nfn main() {\n    let app = Application::new()\n        .resource(\"/test/{one}/{two}/{three}\", |r| {\n             r.name(\"foo\");  // &lt;- set resource name, then it could be used in `url_for`\n             r.method(Method::GET).f(|_| httpcodes::HTTPOk);\n        })\n        .finish();\n}\n\n</code></pre>\n\n<p>How can I add to generated URL a query string like <code>?name=Alex</code>? Is there a nice built in way to do it using <code>HttpRequest.url_for()</code> (not just append like <code>url += query_str</code>)</p>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556289646, "post_id": 55868434, "comment_id": 98399811, "body": "What do you mean by <i>on purpose that&#39;s I can put attributes on entire files</i>?"}], "answers": [{"tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": false, "score": -1, "last_activity_date": 1556287249, "creation_date": 1556287249, "answer_id": 55869272, "question_id": 55868434, "link": "https://stackoverflow.com/questions/55868434/why-cant-i-import-module-from-different-file-in-same-directory/55869272#55869272", "title": "Why can&#39;t I import module from different file in same directory?", "body": "<p>The rust compiler resolves modules differently depending on where they're defined.</p>\n\n<p>When you use the <code>mod</code> keyword to declare an external module from the crate entry point (typically <code>main.rs</code> or <code>lib.rs</code>) or from a module root (<code>mod.rs</code>), the compiler will search for files adjacent to the declaring file. This is why it works properly when using <code>mod image.rs</code> in your <code>main.rs</code> file.</p>\n\n<p>In other cases, the compiler will search for files in the folder with the same name as the declaring file. In your case, this means that your <code>mod decoders;</code> line in <code>image.rs</code> results in the compiler searching for the module in the <code>image</code> subfolder - specifically checking <code>image/decoders.rs</code> and <code>image/decoders/mod.rs</code>.</p>\n\n<p>To fix this, you can either move <code>decoders.rs</code> to <code>image/decoders.rs</code> if you want to keep <code>decoders</code> as a submodule of <code>image</code>, or alternatively place <code>mod decoders;</code> in <code>main.rs</code> and leave the file where it is.</p>\n"}, {"comments": [{"owner": {"reputation": 164, "user_id": 3130610, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/NFRN5.jpg?s=128&g=1", "display_name": "Fernando Jascovich", "link": "https://stackoverflow.com/users/3130610/fernando-jascovich"}, "edited": false, "score": 1, "creation_date": 1599527278, "post_id": 55874751, "comment_id": 112794076, "body": "Thank you so much for this answer! This part saved my day: &gt; Means that decoders will now be &quot;owned&quot; or under image, which is impossible since only lib.rs, mod.rs or main.rs files can have modules in other files"}], "tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 6, "last_activity_date": 1617161723, "last_edit_date": 1617161723, "creation_date": 1556311679, "answer_id": 55874751, "question_id": 55868434, "link": "https://stackoverflow.com/questions/55868434/why-cant-i-import-module-from-different-file-in-same-directory/55874751#55874751", "title": "Why can&#39;t I import module from different file in same directory?", "body": "<p>What's happening is that when you try to import <code>decoders::Decoders</code> in <code>image.rs</code>, you need to go through the next level up, because using this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>mod decoders\n\nuse decoders::Decoders\n</code></pre>\n<p>Means that <code>decoders</code> will now be &quot;owned&quot; or under <code>image</code>, which means that the compiler will search in the <code>image</code> subdirectory for <code>decoders.rs</code>. So, to fix this, you can either change your file structure to this:</p>\n<pre><code>src/\n    main.rs\n    image.rs        ** or image/mod.rs\n    image/\n        decoder.rs\n</code></pre>\n<p>Or, use this in <code>main.rs</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>mod decoders;\nmod image;\n</code></pre>\n<p>and this in <code>image.rs</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use super::decoders::Decoders;\n//Or alternatively\nuse crate::decoders::Decoders;\n</code></pre>\n<p>Also, to fix your nested-mod problem, do the following in <code>decoders.rs</code>:</p>\n<pre><code>//Your code, no `mod Decoders`\n</code></pre>\n<p>and the following where you have your <code>mod decoders</code> statement:</p>\n<pre><code>#[your_attribs]\nmod decoders;\n</code></pre>\n"}], "owner": {"reputation": 307, "user_id": 6401100, "user_type": "registered", "accept_rate": 30, "profile_image": "https://www.gravatar.com/avatar/77880a0c70f3592fbf45e4a2624bbd35?s=128&d=identicon&r=PG&f=1", "display_name": "TheGreyBearded", "link": "https://stackoverflow.com/users/6401100/thegreybearded"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1408, "favorite_count": 0, "closed_date": 1556370265, "answer_count": 2, "score": 5, "last_activity_date": 1617161723, "creation_date": 1556284443, "last_edit_date": 1556285625, "question_id": 55868434, "link": "https://stackoverflow.com/questions/55868434/why-cant-i-import-module-from-different-file-in-same-directory", "closed_reason": "Duplicate", "title": "Why can&#39;t I import module from different file in same directory?", "body": "<p>My directory structure:</p>\n\n<pre><code>src\n    main.rs\n    image.rs\n    decoders.rs\n\n</code></pre>\n\n<p>When I try to import my decoders module in image.rs I get this:</p>\n\n<pre><code>error[E0583]: File not found for module `decoders`\n</code></pre>\n\n<p>decoders.rs:</p>\n\n<pre><code>pub mod Decoders {}\n</code></pre>\n\n<p>image.rs:</p>\n\n<pre><code>mod decoders\n\nuse decoders::Decoders\n\npub mod Image {}\n</code></pre>\n\n<p>Note: I am using a module that wraps the entire file on purpose that's I can put attributes on entire files. This is why it's not a duplicate of <a href=\"https://stackoverflow.com/questions/26388861/how-to-include-module-from-another-file-from-the-same-project\">How to include module from another file from the same project?</a></p>\n\n<p>The weird thing is, is that this syntax works perfectly fine when I try to import Image in main.rs:</p>\n\n<pre><code>mod image;\n\nuse image::Image;\n</code></pre>\n"}, {"tags": ["visual-studio-code", "rust", "rls"], "comments": [{"owner": {"reputation": 1, "user_id": 11417311, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/b10f3dc6702d9243bbd6f269744e0602?s=128&d=identicon&r=PG", "display_name": "Chris Dawe", "link": "https://stackoverflow.com/users/11417311/chris-dawe"}, "edited": false, "score": 0, "creation_date": 1556304109, "post_id": 55867797, "comment_id": 98844525, "body": "Do you have two Rust extensions installed and enabled by any chance?"}, {"owner": {"reputation": 1168, "user_id": 222167, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/3f43f2219b24130cce31e06577d6cc8c?s=128&d=identicon&r=PG", "display_name": "Fei", "link": "https://stackoverflow.com/users/222167/fei"}, "reply_to_user": {"reputation": 1, "user_id": 11417311, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/b10f3dc6702d9243bbd6f269744e0602?s=128&d=identicon&r=PG", "display_name": "Chris Dawe", "link": "https://stackoverflow.com/users/11417311/chris-dawe"}, "edited": false, "score": 0, "creation_date": 1556440327, "post_id": 55867797, "comment_id": 98844526, "body": "Might be the case but I don&#39;t know which extension added duplicated entries in default settings.json"}, {"owner": {"reputation": 1168, "user_id": 222167, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/3f43f2219b24130cce31e06577d6cc8c?s=128&d=identicon&r=PG", "display_name": "Fei", "link": "https://stackoverflow.com/users/222167/fei"}, "reply_to_user": {"reputation": 1, "user_id": 11417311, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/b10f3dc6702d9243bbd6f269744e0602?s=128&d=identicon&r=PG", "display_name": "Chris Dawe", "link": "https://stackoverflow.com/users/11417311/chris-dawe"}, "edited": false, "score": 0, "creation_date": 1557623887, "post_id": 55867797, "comment_id": 98844527, "body": "I have both rls and racer installed, is that a possible cause? Note this problem wasn&#39;t seen before, so it is more like a rust tool chain issue than vscode issue."}], "answers": [{"comments": [{"owner": {"reputation": 1311, "user_id": 2102478, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/fd9bff1d66bc50140705350906f65dad?s=128&d=identicon&r=PG", "display_name": "Pavel L", "link": "https://stackoverflow.com/users/2102478/pavel-l"}, "edited": false, "score": 1, "creation_date": 1582193262, "post_id": 56097219, "comment_id": 106695981, "body": "removing just <b>Rust kalitaalexey</b> extension did solve the same issue I have"}], "tags": [], "owner": {"reputation": 396, "user_id": 1032617, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/X23pT.jpg?s=128&g=1", "display_name": "Arto Kalishian", "link": "https://stackoverflow.com/users/1032617/arto-kalishian"}, "is_accepted": true, "score": 14, "last_activity_date": 1557727402, "last_edit_date": 1557727402, "creation_date": 1557647600, "answer_id": 56097219, "question_id": 55867797, "link": "https://stackoverflow.com/questions/55867797/duplicated-rls-configuration-each-time-rls-is-started-inside-vscode/56097219#56097219", "title": "&quot;duplicated RLS configuration&quot; each time RLS is started inside VSCode", "body": "<p>I've been through the same problem. I am not exactly sure of the proper solution but these workarounds have solved my problem.</p>\n\n<ol>\n<li>Remove all VSCode extensions that are Rust-related.</li>\n<li>Remove any Rust-related configuration in VSCode settings.json.</li>\n<li>If you are using Linux and you have done a lot of playing around, sometimes <code>$HOME/.cargo/registry</code> may be corrupt, so remove that folder if it helps.</li>\n<li>Restart VSCode.</li>\n<li><p>Install these extensions in order:</p>\n\n<ul>\n<li><p>Rust RLS official extension</p>\n\n<p>Do not install Rust kalitaalexey (Seems to be the conflicting cause).</p></li>\n<li><p>Rust Assist extension.</p></li>\n<li><p>vscode-rust-syntax extension.</p></li>\n<li><p>vsc-rustfmt extension.</p></li>\n<li><p>Cargo extension.</p></li>\n<li><p>Better TOML</p></li>\n</ul></li>\n</ol>\n\n<p>The combination of these extensions work OK for me. Specifically, the syntax formatting works with <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>I</kbd> and saving the file automatically does that.</p>\n\n<p>One last hint: Opening 2 Rust project folders in VSCode at the same time may cause an error message that states <code>Unable to find root directory</code>. Try to avoid that.</p>\n"}, {"tags": [], "owner": {"reputation": 573, "user_id": 6862530, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/--6atSEE0QhQ/AAAAAAAAAAI/AAAAAAAAACk/f-un3ANPfrA/photo.jpg?sz=128", "display_name": "Emanuel Lindstr&#246;m", "link": "https://stackoverflow.com/users/6862530/emanuel-lindstr%c3%b6m"}, "is_accepted": false, "score": 1, "last_activity_date": 1586512852, "creation_date": 1586512852, "answer_id": 61137935, "question_id": 55867797, "link": "https://stackoverflow.com/questions/55867797/duplicated-rls-configuration-each-time-rls-is-started-inside-vscode/61137935#61137935", "title": "&quot;duplicated RLS configuration&quot; each time RLS is started inside VSCode", "body": "<p>You most likely have two VS Code extensions installed that do the same thing. That was at least the problem in my case.</p>\n\n<p>Uninstall the extension <code>Rust</code> by <code>kalitaalexey</code> and keep the \"official\" extension <code>Rust (rls)</code> maintained by the Rust Language development team.</p>\n"}], "owner": {"reputation": 1168, "user_id": 222167, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/3f43f2219b24130cce31e06577d6cc8c?s=128&d=identicon&r=PG", "display_name": "Fei", "link": "https://stackoverflow.com/users/222167/fei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2202, "favorite_count": 4, "accepted_answer_id": 56097219, "answer_count": 2, "score": 8, "last_activity_date": 1586512852, "creation_date": 1556282109, "last_edit_date": 1557712806, "question_id": 55867797, "link": "https://stackoverflow.com/questions/55867797/duplicated-rls-configuration-each-time-rls-is-started-inside-vscode", "title": "&quot;duplicated RLS configuration&quot; each time RLS is started inside VSCode", "body": "<p>I upgraded my Rust environment via <code>rustup update</code> recently, then my VSCode reports an error each time I open my editor. Two repeated windows pop up at the bottom right corner of the editor, showing that</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Duplicated RLS configuration: rustfmt_path:rustfmt_path,rustfmt_path,,\nSource: Rust (rls) (Extension)\n</code></pre>\n\n<p>I can open VSCode's default settings.json and indeed find duplicated entries, but I'm not able to delete them. </p>\n\n<p>Restarting the extension can reproduce the problem, and I don't even know if the plugin itself is working properly or not.</p>\n"}, {"tags": ["generics", "casting", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556283226, "post_id": 55867367, "comment_id": 98396015, "body": "Note that you should take <code>self</code>, that make more sense"}, {"owner": {"reputation": 953, "user_id": 312632, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ff265721698489afeb7ceb7d3afde6e?s=128&d=identicon&r=PG", "display_name": "B_old", "link": "https://stackoverflow.com/users/312632/b-old"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556283445, "post_id": 55867367, "comment_id": 98396163, "body": "Could you elaborate on that? I don&#39;t have a <code>self</code> yet, because I just was about to create the <code>Point&lt;T&gt;</code>. Hence the <code>from&lt;U&gt;</code>, as a constructor so to speak."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556284217, "post_id": 55867367, "comment_id": 98396607, "body": "I not advice you to implement <code>From</code> there is a reason where there is no <code>From&lt;i32&gt; for f32</code> implementation, maybe do this, <a href=\"https://play.integer32.com/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=6aea7192ed830c36aa2a53c31f219ff1\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>, but be aware that like my exemple show, this could lead to strange behavior."}], "answers": [{"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1556286021, "post_id": 55867790, "comment_id": 98397728, "body": "The methods in traits <code>NumCast</code> and <code>ToPrimitive</code> return an <code>Option</code> because it is possible that the given value cannot be represented in the target type (e.g. you cannot hold <code>256</code> in a <code>u8</code>). These are indeed safer to use, since they can avoid odd situations. <code>AsPrimitive</code> disregards this, thus behaving exactly like the <code>as</code> operator."}, {"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1556286531, "post_id": 55867790, "comment_id": 98398073, "body": "Maybe implementing the newly stabilized <code>TryFrom</code> trait would be a good way to handle the <code>Optional</code> results?"}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 3, "last_activity_date": 1556282902, "last_edit_date": 1556282902, "creation_date": 1556282092, "answer_id": 55867790, "question_id": 55867367, "link": "https://stackoverflow.com/questions/55867367/how-to-convert-generic-primitive-types-in-rust/55867790#55867790", "title": "How to convert generic primitive types in Rust?", "body": "<p>you can use <a href=\"https://docs.rs/num/0.2.0/num/trait.ToPrimitive.html\" rel=\"nofollow noreferrer\">ToPrimitive</a> trait from <a href=\"https://crates.io/crates/num\" rel=\"nofollow noreferrer\">num</a><br>\nexample (you can avoid Option with AsPrimitive):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Point&lt;T&gt; {\n    pub x: T,\n    pub y: T,\n}\n\nimpl&lt;T: Copy + 'static&gt; Point&lt;T&gt; {\n    pub fn from&lt;U: num::cast::AsPrimitive&lt;T&gt;&gt;(other: Point&lt;U&gt;) -&gt; Point&lt;T&gt; {\n        Point {\n            x: other.x.as_(),\n            y: other.y.as_(),\n        }\n    }\n}\n\nfn do_stuff() {\n    let a = Point{x: 0i32, y: 0i32};\n    let b = Point::&lt;f32&gt;::from(a);\n}\n</code></pre>\n"}], "owner": {"reputation": 953, "user_id": 312632, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ff265721698489afeb7ceb7d3afde6e?s=128&d=identicon&r=PG", "display_name": "B_old", "link": "https://stackoverflow.com/users/312632/b-old"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2316, "favorite_count": 1, "closed_date": 1556370372, "accepted_answer_id": 55867790, "answer_count": 1, "score": 3, "last_activity_date": 1586272970, "creation_date": 1556280707, "last_edit_date": 1586272970, "question_id": 55867367, "link": "https://stackoverflow.com/questions/55867367/how-to-convert-generic-primitive-types-in-rust", "closed_reason": "Duplicate", "title": "How to convert generic primitive types in Rust?", "body": "<p>I would like to write something like the following:</p>\n\n<pre><code>pub struct Point&lt;T&gt; {\n    pub x: T,\n    pub y: T,\n}\n\nimpl&lt;T&gt; Point&lt;T&gt; {\n    pub fn from&lt;U&gt;(other: Point&lt;U&gt;) -&gt; Point&lt;T&gt; {\n        Point {\n            x: other.x as T,\n            y: other as T,\n        }\n    }\n}\n</code></pre>\n\n<p>This is not possible:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0605]: non-primitive cast: `U` as `T`\n --&gt; src/lib.rs:9:16\n  |\n9 |             x: other.x as T,\n  |                ^^^^^^^^^^^^\n  |\n  = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n</code></pre>\n\n<p>Looking at <a href=\"https://stackoverflow.com/questions/35766261/how-do-i-cast-generic-t-to-f32-if-i-know-that-its-possible\">How do I cast generic T to f32 if I know that it&#39;s possible?</a>, I learnt that the <code>From</code> trait doesn't work for <code>i32</code> to <code>f32</code> conversion, which is what I wanted originally.</p>\n\n<p>The simplest solution I can come up with is to write a function like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn float2_from_int2(v: Point&lt;i32&gt;) -&gt; Point&lt;f32&gt; {\n   Point::&lt;f32&gt;::new(v.x as f32, v.y as f32)\n}\n</code></pre>\n\n<p>Clearly Rust has no problem casting from <code>i32</code> to <code>f32</code>. Is there a nicer way to write this?</p>\n"}, {"tags": ["rust", "union"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556279265, "post_id": 55866975, "comment_id": 98393773, "body": "<i>&quot;Clearly the i case takes an i32, and the f case takes an f32&quot;</i> Why do you think so? How should the compiler deduce those two conditions in your opinion? By looking at the variable name?"}, {"owner": {"reputation": 20901, "user_id": 9476, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/f01cbd2238e2a78e4c43fa596f51d6a1?s=128&d=identicon&r=PG", "display_name": "Dmitri Nesteruk", "link": "https://stackoverflow.com/users/9476/dmitri-nesteruk"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556279548, "post_id": 55866975, "comment_id": 98393938, "body": "@hellow yes, absolutely, I&#39;ve added a CLion screenshot above"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556279634, "post_id": 55866975, "comment_id": 98393977, "body": "Please look at the suggested duplicate. I think it clearly solves your issue. Please note, that CLion is third party code and does not use the rust compiler AFAIK."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556279958, "post_id": 55866975, "comment_id": 98394155, "body": "Do you want to use <code>enum</code> ? please avoid screenshot"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556280076, "post_id": 55866975, "comment_id": 98394226, "body": "@Stargateur I think a screenshot is okay-ish here to debate (it proves his point why he thinks it should work). Although I wish it wouldn&#39;t be that big ^^"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556288618, "post_id": 55868215, "comment_id": 98399288, "body": "How does your answer differ from the suggested duplicate? Please avoid giving redundant information."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 1, "last_activity_date": 1556283656, "creation_date": 1556283656, "answer_id": 55868215, "question_id": 55866975, "link": "https://stackoverflow.com/questions/55866975/rust-is-claiming-that-this-pattern-case-is-unreachable-why/55868215#55868215", "title": "Rust is claiming that this pattern case is unreachable, why?", "body": "<p>from <a href=\"https://doc.rust-lang.org/reference/items/unions.html\" rel=\"nofollow noreferrer\">rust reference</a>:</p>\n\n<blockquote>\n  <p>Another way to access union fields is to use pattern matching. Pattern matching on union fields uses the same syntax as struct patterns, except that the pattern must specify exactly one field</p>\n</blockquote>\n\n<p>so no, union can't be matched like this. External documentation (or sources) is the only way to determine which union field should be used. That's why it is marked as unsafe</p>\n"}], "owner": {"reputation": 20901, "user_id": 9476, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/f01cbd2238e2a78e4c43fa596f51d6a1?s=128&d=identicon&r=PG", "display_name": "Dmitri Nesteruk", "link": "https://stackoverflow.com/users/9476/dmitri-nesteruk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 0, "closed_date": 1556294789, "answer_count": 1, "score": -1, "last_activity_date": 1556283656, "creation_date": 1556279162, "last_edit_date": 1556279530, "question_id": 55866975, "link": "https://stackoverflow.com/questions/55866975/rust-is-claiming-that-this-pattern-case-is-unreachable-why", "closed_reason": "Duplicate", "title": "Rust is claiming that this pattern case is unreachable, why?", "body": "<p>Given this code</p>\n\n<pre><code>union IntOrFloat {\n    i: i32,\n    f: f32,\n}\n\nfn process_value(iof: IntOrFloat) {\n    unsafe {\n        match iof {\n            IntOrFloat { i: 42 } =&gt; {\n                println!(\"meaning of life value\");\n            }\n            IntOrFloat { i } =&gt; {\n                println!(\"integer with value {}\", i);\n            }\n            IntOrFloat { f } =&gt; {\n                println!(\"f32 = {}\", f);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Rust is giving me the following warning:</p>\n\n<pre><code>warning: unreachable pattern\n   --&gt; src\\main.rs:445:13\n    |\n445 |             IntOrFloat { f } =&gt; {\n    |             ^^^^^^^^^^^^^^^^\n    |\n    = note: #[warn(unreachable_patterns)] on by default\n</code></pre>\n\n<p>Why am I getting this? Clearly the <code>i</code> case takes an <code>i32</code>, and the <code>f</code> case takes an <code>f32</code> and both are possible.</p>\n\n<p>Update: CLion agrees with me</p>\n\n<p><a href=\"https://i.stack.imgur.com/Zwcay.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Zwcay.png\" alt=\"CLion inference of union cases\"></a></p>\n"}, {"tags": ["json", "rust", "serde"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556278109, "post_id": 55866500, "comment_id": 98393125, "body": "Your Rust code won&#39;t compile. Rust is case sensitive, which means it&#39;s not <code>string</code>, but <a href=\"https://doc.rust-lang.org/std/string/struct.String.html\" rel=\"nofollow noreferrer\"><code>String</code></a>. Also fields should be written in camelCase, which means the first character is lowercase (e.g. <code>name</code> and `bar). But this is a convention, and not an enforcement. Please fix that and provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> best on <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">the playground</a> if possible."}], "owner": {"reputation": 280, "user_id": 455952, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1bUEd.jpg?s=128&g=1", "display_name": "chris", "link": "https://stackoverflow.com/users/455952/chris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 34, "favorite_count": 0, "closed_date": 1556279719, "answer_count": 0, "score": 1, "last_activity_date": 1556278030, "creation_date": 1556277508, "last_edit_date": 1556278030, "question_id": 55866500, "link": "https://stackoverflow.com/questions/55866500/how-can-i-map-json-fields-to-struct-fields-while-deserializing", "closed_reason": "Duplicate", "title": "How can I map JSON fields to struct fields while deserializing?", "body": "<p>Given some JSON:</p>\n\n<pre><code>{\n    \"name\": \"Dude\",\n    \"foo\": {\n      \"bar\": \"baz\"\n    }\n}\n</code></pre>\n\n<p>Assuming I want to map it to a struct like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Chump {\n    Name: string,\n    Bar: string,\n}\n</code></pre>\n\n<p>which means I'd like to map <code>Chump.Bar</code> to <code>foo.bar</code>, is there any way I can easily achieve this with <code>serde</code>? Or any other form of JSON (de)serializer?</p>\n\n<p>The only way I found so far is to use </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[serde(flatten)]\n</code></pre>\n\n<p>to get a <code>Map</code> of whatever gets left after parsing. Is there a better, more efficient way, maybe?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "edited": false, "score": 0, "creation_date": 1556274455, "post_id": 55865576, "comment_id": 98391312, "body": "I found a working solution shortly after posting. But I&#39;m happy to accept an answer with a better explanation of what is going on."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556276648, "post_id": 55865576, "comment_id": 98392386, "body": "Please use <code>rustfmt</code> to format your code. You can find it under tools in the upper right corner on <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">the playground</a>."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556277356, "post_id": 55865634, "comment_id": 98392742, "body": "A bit more quirky, but this works as well: <code>Some(self.data.as_mut()?.as_mut())</code>"}], "tags": [], "owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "is_accepted": false, "score": 0, "last_activity_date": 1556276714, "last_edit_date": 1556276714, "creation_date": 1556274417, "answer_id": 55865634, "question_id": 55865576, "link": "https://stackoverflow.com/questions/55865576/how-do-i-return-a-mutable-reference-to-an-optional-boxed-trait-stored-in-a-struc/55865634#55865634", "title": "How do I return a mutable reference to an Optional boxed Trait stored in a struct member", "body": "<p>It seems using destructuring syntax seems to solve this issue:\nThe following code compiles fine:</p>\n\n<pre><code>fn borrow_mut(&amp;mut self) -&gt; Option&lt;&amp;mut Baz&gt; {\n    match &amp;mut self.data {\n        Some(e) =&gt; Some(e.as_mut()),\n        None =&gt; None,\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 3, "last_activity_date": 1556277852, "last_edit_date": 1556277852, "creation_date": 1556277550, "answer_id": 55866511, "question_id": 55865576, "link": "https://stackoverflow.com/questions/55865576/how-do-i-return-a-mutable-reference-to-an-optional-boxed-trait-stored-in-a-struc/55866511#55866511", "title": "How do I return a mutable reference to an Optional boxed Trait stored in a struct member", "body": "<p>This happened because of a quirk in the compiler. Let us expand the lifetimes in <code>borrow_mut</code>:</p>\n\n<pre><code>fn borrow_mut&lt;'a&gt;(&amp;'a mut self) -&gt; Option&lt;&amp;'a mut dyn Baz&gt; {\n</code></pre>\n\n<p>The expression</p>\n\n<pre><code>self.data.as_mut().map(|x| &amp;mut **x)\n</code></pre>\n\n<p>was inferred to have the type <code>Option&lt;&amp;mut dyn (Baz + 'static)&gt;</code>, while the function expected the output <code>Option&lt;&amp;'a mut dyn (Baz + 'a)&gt;</code>. This subtle difference in lifetime constraints applied to the trait object cannot be resolved by plain coercion because mutable references are invariant with respect the trait object's lifetime.</p>\n\n<p>What we can do is either agree to output a mutable reference to <code>dyn Baz + 'static</code>:</p>\n\n<pre><code>fn borrow_mut&lt;'a&gt;(&amp;'a mut self) -&gt; Option&lt;&amp;'a mut (dyn Baz + 'static)&gt; {\n   self.data.as_mut().map(|x| x.as_mut())\n}\n</code></pre>\n\n<p>Or tell the compiler to resolve the expression to <code>Option&lt;&amp;'a mut (dyn Baz + 'a)&gt;</code> through other means, such as with a manual <code>match</code> statement, the <code>?</code> operator, or a cast.</p>\n\n<pre><code>impl Bar {\n    fn borrow_mut(&amp;mut self) -&gt; Option&lt;&amp;mut dyn Baz&gt; {\n        self.data.as_mut().map(|x| &amp;mut **x as &amp;mut dyn Baz)\n    }\n}\n</code></pre>\n\n<p>See also: <a href=\"https://stackoverflow.com/q/55200843/1233251\">Covariance of Box type in Rust</a></p>\n"}], "owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1241, "favorite_count": 0, "accepted_answer_id": 55866511, "answer_count": 2, "score": 4, "last_activity_date": 1556278161, "creation_date": 1556274216, "last_edit_date": 1556278161, "question_id": 55865576, "link": "https://stackoverflow.com/questions/55865576/how-do-i-return-a-mutable-reference-to-an-optional-boxed-trait-stored-in-a-struc", "title": "How do I return a mutable reference to an Optional boxed Trait stored in a struct member", "body": "<p>My goal is to return a mutable reference to a trait obejct that is stored in a Box.</p>\n\n<p>This seems related to this <a href=\"https://stackoverflow.com/questions/22282117/how-do-i-borrow-a-reference-to-what-is-inside-an-optiont\">question about borrowing references to optional struct members</a>, the main difference, however, seems to be the presence of a trait object.\nI'm also trying to return an Option instead of a Result. </p>\n\n<p>Trying to use the same approach seems to lead to a lifetime issue.  </p>\n\n<p>Sample code:</p>\n\n<pre><code>trait Baz {}\n\n#[derive(Debug)]\nstruct Foo;\n\nimpl Baz for Foo {}\n\nstruct Bar {\n    data: Option&lt;Box&lt;Baz&gt;&gt;,\n}\n\nenum BarErr {\n    Nope,\n}\n\nimpl Bar {\n    fn borrow_mut(&amp;mut self) -&gt; Option&lt;&amp;mut Baz&gt; {\n        self.data.as_mut().map(|x| &amp;mut **x)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=01e521fe855d7ad9b99badcddd689b28\" rel=\"nofollow noreferrer\">Playground link.</a></p>\n\n<p>Error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling playground v0.0.1 (/playground)\nerror[E0308]: mismatched types\n  --&gt; src/lib.rs:20:9\n   |\n20 |         self.data.as_mut().map(|x| &amp;mut **x)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n   |\n   = note: expected type `std::option::Option&lt;&amp;mut dyn Baz&gt;`\n              found type `std::option::Option&lt;&amp;mut (dyn Baz + 'static)&gt;`\nnote: the anonymous lifetime #1 defined on the method body at 19:5...\n  --&gt; src/lib.rs:19:5\n   |\n19 | /     fn borrow_mut(&amp;mut self) -&gt; Option&lt;&amp;mut Baz&gt; {\n20 | |         self.data.as_mut().map(|x| &amp;mut **x)\n21 | |     }\n   | |_____^\n   = note: ...does not necessarily outlive the static lifetime\n</code></pre>\n\n<p>I can't really see where the lifetime would get extended. </p>\n\n<p>Also trying to replace  <code>&amp;mut **x</code> with <code>as_mut</code> does not help.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1556275765, "post_id": 55865551, "comment_id": 98391967, "body": "<i>&quot;To iterate &amp;str I needed extract Iterator&quot;</i> no, you don&#39;t need to <code>collect</code> it to iterate over it. Just do <code>for splitted in line.split(&#39; &#39;) { ... }</code>"}], "tags": [], "owner": {"reputation": 667, "user_id": 981403, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/PrBma.png?s=128&g=1", "display_name": "Mazeryt", "link": "https://stackoverflow.com/users/981403/mazeryt"}, "is_accepted": true, "score": 0, "last_activity_date": 1556274129, "creation_date": 1556274129, "answer_id": 55865551, "question_id": 55865348, "link": "https://stackoverflow.com/questions/55865348/rust-split-lines-via-white-spaces-no-method-collect-found-for-type-str/55865551#55865551", "title": "Rust Split lines via white spaces: No method collect found for type &amp;str", "body": "<p>Ok, I figured out how to fix this issue, there were few things wrong in the example:</p>\n\n<ol>\n<li>I needed String not lines because of lifetime</li>\n<li>Mutability was not an issue here, so just removed</li>\n<li>To iterate &amp;str I needed extract Iterator? (not sure here, still, feel a little bit not comfortable with Rust docs...)</li>\n</ol>\n\n<pre><code>let s = String::from_utf8_lossy(&amp;output.stdout).to_string();\n\nfor line in s.lines() {\n    let vec: Vec&lt;&amp;str&gt; = line.split(' ').collect();\n\n    // Try to do something with a split... \n</code></pre>\n"}], "owner": {"reputation": 667, "user_id": 981403, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/PrBma.png?s=128&g=1", "display_name": "Mazeryt", "link": "https://stackoverflow.com/users/981403/mazeryt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1010, "favorite_count": 0, "accepted_answer_id": 55865551, "answer_count": 1, "score": 0, "last_activity_date": 1556274129, "creation_date": 1556273392, "question_id": 55865348, "link": "https://stackoverflow.com/questions/55865348/rust-split-lines-via-white-spaces-no-method-collect-found-for-type-str", "title": "Rust Split lines via white spaces: No method collect found for type &amp;str", "body": "<p>I am trying to process output from the command line by line, and I stuck with the processing <code>str::Lines</code>.\nI am trying to get for every line all words and process them (compare with some pattern)</p>\n\n<p>My code:</p>\n\n<pre><code>// output came properly from command\nlet mut lines = String::from_utf8_lossy(&amp;output.stdout).to_string().lines();\n\nfor line in lines {\n    let vec: Vec&lt;&amp;str&gt; = line.collect();\n\n    // Try to do something with a split...  \n</code></pre>\n\n<p>Compiler complains:</p>\n\n<pre><code>error[E0599]: no method named `collect` found for type `&amp;str` in the current scope\n   --&gt; src/main.rs:218:39\n    |\n218 |             let vec: Vec&lt;&amp;str&gt; = line.collect();\n    |                                       ^^^^^^^\n    |\n    = note: the method `collect` exists but the following trait bounds were not satisfied:\n            `&amp;mut &amp;str : std::iter::Iterator`\n            `&amp;mut str : std::iter::Iterator`\n</code></pre>\n\n<p>I think I can probably copy line as a string and try to convert it but, because I am new in Rust would like to have some advice/help how I can turn line more smoothly?</p>\n"}, {"tags": ["rust", "archlinux"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556272726, "post_id": 55865024, "comment_id": 98390412, "body": "might be because of the sudo. Can you try it without it (you may of course get a not perrmited)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1556272879, "post_id": 55865024, "comment_id": 98390492, "body": "Should be <code>&quot;-as&quot;, &quot;mkisofs&quot;</code> instead of <code>&quot;-as mkisofs&quot;</code>, should be <code>&quot;-iso-level&quot;, &quot;3&quot;</code> instead of <code>&quot;-iso-level 3&quot;</code> etc etc, please that basic"}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556276614, "post_id": 55865024, "comment_id": 98392365, "body": "@Stargateur Thanks. Splitting it as individual arguments solves the issue."}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 281, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1556272222, "creation_date": 1556272222, "question_id": 55865024, "link": "https://stackoverflow.com/questions/55865024/generating-iso-with-xorriso", "title": "Generating ISO with xorriso", "body": "<p>I'm trying to remaster ISO image of Archlinux using Rust.</p>\n\n<p>To get the ISO I need to run <code>xorriso</code> utility as external command using <code>duct</code> crate.</p>\n\n<p>However I get these (strange) errors (doesn't happen if I run it from shell script):</p>\n\n<pre><code>cmd!(\"sudo\",\"xorriso\", \"-x\", \"-as mkisofs\", \"-iso-level 3\", \"-full-iso9660-filenames\", iso_label, eltorito_boot, eltorito_cat, \"-no-emul-boot -boot-load-size 4 -boot-info-table\", isohybrid, \"-eltorito-alt-boot\", efi, \"-no-emul-boot -isohybrid-gpt-basdat\", output, root).run().context(\"Failed to create new ISO\")?\n\nxorriso : FAILURE : Not a known command:  '-as mkisofs'\n\nxorriso : FAILURE : Not a known command:  '-iso-level 3'\n\nxorriso : FAILURE : Not a known command:  '-full-iso9660-filenames'\n\nxorriso : FAILURE : Not a known command:  '-volid \"ARCH_201904\"'\n\nxorriso : FAILURE : Not a known command:  '-eltorito-boot \"isolinux/isolinux.bin\"'\n\nxorriso : FAILURE : Not a known command:  '-eltorito-catalog \"isolinux/boot.cat\"'\n\nxorriso : FAILURE : Not a known command:  '-no-emul-boot -boot-load-size 4 -boot-info-table'\n...\n</code></pre>\n"}, {"tags": ["linux", "rust", "filesystems", "disk-partitioning"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556271782, "post_id": 55864856, "comment_id": 98389891, "body": "Then add <code>\\0</code> after efi?"}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556271903, "post_id": 55864856, "comment_id": 98389953, "body": "@hellow I tried adding \\0, but without success."}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1556277481, "post_id": 55864856, "comment_id": 98392810, "body": "Seems I&#39;ve been looking into this the wrong way as I had similar issue <a href=\"https://stackoverflow.com/questions/55865024/generating-iso-with-xorriso\" title=\"generating iso with xorriso\">stackoverflow.com/questions/55865024/&hellip;</a>. Turns out all I have to do is split the argument. That means pass it as <code>cmd!(&quot;sgdisk&quot;, &quot;--new=0:0:+256MiB&quot;, &quot;--typecode=0:ef00&quot;, &quot;-c&quot;, &quot;0:efi&quot;, &amp;self.system)</code> and it works like charm."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1556281040, "post_id": 55864856, "comment_id": 98394734, "body": "@phodina Yup, you need to separate the arguments. Otherwise the whole argument is wrapped in a single string."}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 110, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1556272552, "creation_date": 1556271661, "last_edit_date": 1556272552, "question_id": 55864856, "link": "https://stackoverflow.com/questions/55864856/creating-new-partition-with-label-in-rust", "title": "Creating new partition with label in Rust", "body": "<p>I'm trying to partition the disk on my Linux machine using Rust.</p>\n\n<p>To format and create new partition I'm using <code>sgdisk</code> utility.</p>\n\n<pre><code>#[derive(Deserialize, Debug)]\npub struct Drives {\n    system: PathBuf,\n    home: Option&lt;PathBuf&gt;,\n}\n\nimpl Drives {\n\n  fn create_partitions(&amp;self) -&gt; Result&lt;()&gt; {\n\n  cmd!(\"sgdisk\", \"--new=0:0:+256MiB --typecode=0:ef00 -c 0:\\\"efi\\\"\", &amp;self.system).run().context(\"Failed to create EFI partition\")?;\n  Ok(())\n  }\n }\n</code></pre>\n\n<p>The command succeeds with creating a new partition, but unfortunately the label is missing.</p>\n\n<pre><code>sgdisk -p /dev/sda\n...\nNumber  Start (sector)    End (sector)  Size       Code  Name\n   1            2048          526335   256.0 MiB   8300  \n</code></pre>\n\n<p>The <code>cmd!</code> macro comes from <code>duct</code> crate which passes the content to <code>std::process::Command</code> underneath. Even if I directly call the external process I don't get the partition labeled. </p>\n\n<p>I suppose the issue is probably with passing the String to <code>sgdisk</code> expecting <strong>zero</strong> terminated ASCII string. If I call the same command in shell script it works.</p>\n"}, {"tags": ["struct", "rust", "mutability"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556271589, "post_id": 55864728, "comment_id": 98389779, "body": "Your reasoning is actually quite accurate: obtaining a <code>&amp;T</code> or a <code>&amp;mut T</code> is a very significant distinction. The usual convention for getters and the like is to have two separate methods and helper types. Following naming conventions: two methods <code>line(...)</code>/<code>line_mut(...)</code> and two types <code>Line</code>/<code>LineMut</code>."}, {"owner": {"reputation": 53, "user_id": 7853379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a14327d2a3b651612b6811e46ae8cb51?s=128&d=identicon&r=PG&f=1", "display_name": "Guillaume Dupont", "link": "https://stackoverflow.com/users/7853379/guillaume-dupont"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1556271833, "post_id": 55864728, "comment_id": 98389914, "body": "I see, in the end this makes sense in the context of Rust&#39;s (very peculiar!) type system (as explained in the answer you pinpointed in your first comment).  It does not feel &quot;conventional&quot; when you are used to having a lot of inference, but it is also very clean in the way it strongly demonstrate which is mutable and which is not"}], "owner": {"reputation": 53, "user_id": 7853379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a14327d2a3b651612b6811e46ae8cb51?s=128&d=identicon&r=PG&f=1", "display_name": "Guillaume Dupont", "link": "https://stackoverflow.com/users/7853379/guillaume-dupont"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 16, "favorite_count": 0, "closed_date": 1556272014, "answer_count": 0, "score": 0, "last_activity_date": 1556271201, "creation_date": 1556271201, "question_id": 55864728, "link": "https://stackoverflow.com/questions/55864728/mutability-of-field-of-struct-depending-on-mutability-ownership-of-variable", "closed_reason": "Duplicate", "title": "Mutability of field of struct depending on mutability/ownership of variable", "body": "<p>just a naive question from a Rust newbie; as you might expect it is regarding ownership and mutability...</p>\n\n<p>The problem is the following: I have some kind of array structure I use as a rectangular matrix.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Matrix {\n    lines: usize,\n    columns: usize,\n    content: Vec&lt;f32&gt;,\n}\n</code></pre>\n\n<p>Internally, the one-dimensional array <code>content</code> (with size <code>lines*columns</code>) represents a whole rectangle matrix <code>m</code> with <code>m(i,j) = content[i*columns+j]</code> for any given <code>i</code> and <code>j</code>.</p>\n\n<p>From this matrix I would like to extract a line. But for various reasons, I would also like to preserve the size of that line, i.e. the number of columns of the matrix (and eventually some extra information in general).</p>\n\n<p>For that, I use a new type, <code>Line</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Line&lt;'a&gt; {\n    columns: usize,\n    content: &amp;'a [f32],\n}\n</code></pre>\n\n<p>My guess is that I use a slice for representing a line, as it is a contiguous space in memory. I then can implement the <code>line()</code> function as such:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Matrix {\n    fn line(&amp;'a self, id: usize) -&gt; Line&lt;'a&gt; {\n        let realindex = id * self.columns;\n        &amp;self.content[realindex..realindex+self.columns]\n    }\n}\n</code></pre>\n\n<p>But there is a problem there: the <code>content</code> field of <code>Line</code> is immutable. I may want to modify the content of a <code>Line</code> hoping it will change the content of the owning matrix.</p>\n\n<p>In that case, I think I can write this and it would work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Line&lt;'a&gt; {\n    columns: usize,\n    content: &amp;'a mut [f32],\n}\n</code></pre>\n\n<p>And I can write some <code>line_mut</code> function for obtaining this structure:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Matrix {\n    fn line(&amp;'a mut self, id: usize) -&gt; Line&lt;'a&gt; {\n        let realindex = id * self.columns;\n        &amp;mut self.content[realindex..realindex+self.columns]\n    }\n}\n</code></pre>\n\n<p>But what happens if I want to simply get an immutable line from the matrix? With the first version of <code>Line</code> I cannot use <code>line_mut</code> and obtain a mutable line; conversely with the second version of <code>Line</code> I cannot use <code>line</code> and obtain an immutable line...</p>\n\n<p>The question is the following: am I missing something, or is that the way it is? In other word, is there a way to make Rust infer the mutability of some of the struct field in accordance with the required mutability when using the struct? Something like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a : Line = ...; // type of content = &amp;[f32]\nlet mut b : Line = ...; // type of = &amp;mut [f32]\n</code></pre>\n\n<p>If this is the way it is, what would be a good solution to ensure both feature (mutable line and immutable line) are available? Two distinct types (e.g. <code>ImmutLine</code> and <code>MutLine</code>)?</p>\n\n<p>I also saw <code>RefCell</code> and interior mutability, but I do not think it is quite useful in that case: I know at compile time if I want a mutable or an immutable line.</p>\n"}, {"tags": ["multithreading", "rust", "thread-safety"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556266683, "post_id": 55863488, "comment_id": 98387282, "body": "Please use <code>rustfmt</code> to format your code. You can find it under tools in the upper right corner on <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">the playground</a>. Also please <b>always</b> include the <b>full</b> error message."}, {"owner": {"reputation": 1976, "user_id": 966061, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c0439817e4f950db40f425724e73710?s=128&d=identicon&r=PG", "display_name": "kstep", "link": "https://stackoverflow.com/users/966061/kstep"}, "edited": false, "score": 0, "creation_date": 1556266940, "post_id": 55863488, "comment_id": 98387402, "body": "Your <code>MyStructUP&lt;&#39;a&gt;</code> still has a reference bound to some external lifetime <code>&#39;a</code>, no matter how hard you wrap it into <code>Arc</code> or something, and your code does not guarantee the reference inside your struct won&#39;t outlive thread you are running. You have to get rid of references inside your struct, so you can safely move it into your thread."}, {"owner": {"reputation": 53, "user_id": 9075747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/894965edd9e633ce1532895d398cb006?s=128&d=identicon&r=PG&f=1", "display_name": "Tal K", "link": "https://stackoverflow.com/users/9075747/tal-k"}, "edited": false, "score": 0, "creation_date": 1556267125, "post_id": 55863488, "comment_id": 98387484, "body": "Do you mean the reference to the closure or the references inside the vector? If I remove the reference to the closure then the struct does not have a known size at compile time, which results in an error."}], "owner": {"reputation": 53, "user_id": 9075747, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/894965edd9e633ce1532895d398cb006?s=128&d=identicon&r=PG&f=1", "display_name": "Tal K", "link": "https://stackoverflow.com/users/9075747/tal-k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1115, "favorite_count": 0, "closed_date": 1556370509, "answer_count": 0, "score": 0, "last_activity_date": 1556370517, "creation_date": 1556266511, "last_edit_date": 1556270328, "question_id": 55863488, "link": "https://stackoverflow.com/questions/55863488/how-to-use-a-method-on-a-struct-when-using-multiple-threads-in-rust", "closed_reason": "Duplicate", "title": "How to use a method on a struct when using multiple threads in Rust?", "body": "<p>I am trying to code a program that uses multiple threads in Rust, and I cannot get a method to work. I have a struct that has some fields (<code>MyStructUP</code>), and I wrapped it in another struct (<code>MyStruct</code>) that puts the old one in an <code>std::sync::Arc</code> and a <code>std::sync::Mutex</code>. the <code>MyStructUP</code> struct has a field that takes a vector of <code>MyStruct</code>, and there is also a method implemented on <code>MyStructUP</code> that calls itself on each <code>MyStruct</code> in that vector. when I try to make these recursive calls on new threads, I get the error about sharing data between threads safely.</p>\n\n<p>I understand the lifetime issue with the code (I tried solving it with the <code>Arc</code> that's wrapping the struct), and I think that I already prevented a data race using the <code>Mutex</code>, but the code still does not work.</p>\n\n<p>Here is a stripped down version of the code:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::thread;\n\npub struct MyStructUP&lt;'a&gt; {\n    pub output: Vec&lt;&amp;'a MyStruct&lt;'a&gt;&gt;,\n    pub post_exec: &amp;'a Fn(&amp;Self) -&gt; (),\n}\n\nimpl&lt;'a&gt; MyStructUP&lt;'a&gt; {\n    pub fn new(out: Vec&lt;&amp;'a MyStruct&lt;'a&gt;&gt;) -&gt; Self {\n        MyStructUP {\n            output: out,\n            post_exec: &amp;|n| {},\n        }\n    }\n    pub fn do_something(&amp;mut self) -&gt; () {\n        for val in self.output.iter_mut() {\n            let local_self = val.inner.clone();\n            thread::spawn(move || {\n                local_self.lock().unwrap().do_something();\n            });\n        }\n        (self.post_exec)(self)\n    }\n}\n\npub struct MyStruct&lt;'a&gt; {\n    pub inner: Arc&lt;Mutex&lt;MyStructUP&lt;'a&gt;&gt;&gt;,\n}\n\nimpl&lt;'a&gt; MyStruct&lt;'a&gt; {\n    pub fn new(out: Vec&lt;&amp;'a MyStruct&lt;'a&gt;&gt;) -&gt; Self {\n        MyStruct {\n            inner: Arc::new(Mutex::new(MyStructUP::new(out))),\n        }\n    }\n    pub fn do_something(&amp;self) -&gt; () {\n        self.inner.lock().unwrap().do_something();\n    }\n}\n</code></pre>\n\n<p>I expected the code to compile when I added the Arc and Mutex to wrap the struct, but the code still doesn't work, and I get the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP&lt;'a&gt;) + 'a)` cannot be shared between threads safely\n  --&gt; src/lib.rs:19:13\n   |\n19 |             thread::spawn(move || {\n   |             ^^^^^^^^^^^^^ `(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP&lt;'a&gt;) + 'a)` cannot be shared between threads safely\n   |\n   = help: the trait `std::marker::Sync` is not implemented for `(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP&lt;'a&gt;) + 'a)`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `&amp;'a (dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP&lt;'a&gt;) + 'a)`\n   = note: required because it appears within the type `MyStructUP&lt;'a&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Mutex&lt;MyStructUP&lt;'a&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;std::sync::Mutex&lt;MyStructUP&lt;'a&gt;&gt;&gt;`\n   = note: required because it appears within the type `[closure@src/lib.rs:19:27: 21:14 local_self:std::sync::Arc&lt;std::sync::Mutex&lt;MyStructUP&lt;'a&gt;&gt;&gt;]`\n   = note: required by `std::thread::spawn`\n</code></pre>\n\n<p>EDIT: I tried to remove every reference inside a struct field like kstep suggested. and got this code:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::thread;\n\npub struct MyStructUP {\n    pub output: Vec&lt;MyStruct&gt;,\n    pub post_exec: Arc&lt;Fn(&amp;Self) -&gt; ()&gt;,\n}\n\nimpl MyStructUP {\n    pub fn new(out: Vec&lt;MyStruct&gt;) -&gt; Self {\n        MyStructUP {\n            output: out,\n            post_exec: Arc::new(|n| {}),\n        }\n    }\n    pub fn do_something(&amp;mut self) -&gt; () {\n        for val in self.output.iter_mut() {\n            let local_self = val.inner.clone();\n            thread::spawn(move || {\n                local_self.lock().unwrap().do_something();\n            });\n        }\n        (self.post_exec)(self)\n    }\n}\n\npub struct MyStruct {\n    pub inner: Arc&lt;Mutex&lt;MyStructUP&gt;&gt;,\n}\n\nimpl&lt;'a&gt; MyStruct {\n    pub fn new(out: Vec&lt;MyStruct&gt;) -&gt; Self {\n        MyStruct {\n            inner: Arc::new(Mutex::new(MyStructUP::new(out))),\n        }\n    }\n    pub fn do_something(&amp;self) -&gt; () {\n        self.inner.lock().unwrap().do_something();\n    }\n}\n</code></pre>\n\n<p>But now I get 2 errors:</p>\n\n<pre><code>`(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP) + 'static)` cannot be sent between threads safely\n\n`(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP) + 'static)` cannot be sent between threads safely\n\nhelp: the trait `std::marker::Send` is not implemented for `(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP) + 'static)`\nnote: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP) + 'static)&gt;`\nnote: required because it appears within the type `MyStructUP`\nnote: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Mutex&lt;MyStructUP&gt;`\nnote: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;std::sync::Mutex&lt;MyStructUP&gt;&gt;`\nnote: required because it appears within the type `[closure@src\\main.rs:19:27: 21:14 local_self:std::sync::Arc&lt;std::sync::Mutex&lt;MyStructUP&gt;&gt;]`\nnote: required by `std::thread::spawn`\n</code></pre>\n\n<pre><code>`(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP) + 'static)` cannot be shared between threads safely\n\n`(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP) + 'static)` cannot be shared between threads safely\n\nhelp: the trait `std::marker::Sync` is not implemented for `(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP) + 'static)`\nnote: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;(dyn for&lt;'r&gt; std::ops::Fn(&amp;'r MyStructUP) + 'static)&gt;`\nnote: required because it appears within the type `MyStructUP`\nnote: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Mutex&lt;MyStructUP&gt;`\nnote: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;std::sync::Mutex&lt;MyStructUP&gt;&gt;`\nnote: required because it appears within the type `[closure@src\\main.rs:19:27: 21:14 local_self:std::sync::Arc&lt;std::sync::Mutex&lt;MyStructUP&gt;&gt;]`\nnote: required by `std::thread::spawn`\n</code></pre>\n"}, {"tags": ["rust", "slice"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1556265404, "creation_date": 1556265404, "answer_id": 55863196, "question_id": 55863195, "link": "https://stackoverflow.com/questions/55863195/how-to-create-a-slice-from-a-single-element-without-copying-that-element/55863196#55863196", "title": "How to create a slice from a single element without copying that element?", "body": "<p><strong>You can use <a href=\"https://doc.rust-lang.org/stable/std/slice/fn.from_ref.html\" rel=\"nofollow noreferrer\"><code>slice::from_ref</code></a></strong>.</p>\n\n<blockquote>\n  <p><code>fn from_ref&lt;T&gt;(s: &amp;T) -&gt; &amp;[T]</code></p>\n</blockquote>\n\n<p>In your code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=faef7f9c0a23b8ccc020e9856a6cb2ed\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::slice;\n\ntakes_slice(slice::from_ref(&amp;foo));\n</code></pre>\n\n<hr>\n\n<p>For mutable slices, you can use <a href=\"https://doc.rust-lang.org/stable/std/slice/fn.from_mut.html\" rel=\"nofollow noreferrer\"><code>slice::from_mut</code></a>. Also see <a href=\"https://stackoverflow.com/questions/32939974/can-i-create-a-slice-of-a-single-byte-u8\">this question</a> about that topic.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 0, "accepted_answer_id": 55863196, "answer_count": 1, "score": 3, "last_activity_date": 1556265404, "creation_date": 1556265404, "question_id": 55863195, "link": "https://stackoverflow.com/questions/55863195/how-to-create-a-slice-from-a-single-element-without-copying-that-element", "title": "How to create a slice from a single element without copying that element?", "body": "<p>I have a really big struct (on heap and on stack) that I use in a function. Most of the time, I want a simple variable of that struct, because I'm doing stuff with the big struct directly. At one point, however, I'm forced (by a function signature) to pass this struct inside of a slice.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct VeryBig(Vec&lt;String&gt;, [u64; 50]);\n\nfn takes_slice(_: &amp;[VeryBig]) {}\n\nfn main() {\n    let foo = VeryBig(vec![\"Ferris\".to_string(); 100], [27; 50]);\n\n    // Use `foo` directly a bunch of times\n\n    takes_slice(&amp;foo); // &lt;-- mismatched type\n\n    // Use `foo` directly a bunch of times\n}\n</code></pre>\n\n<p>This obviously and understandably leads to this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:10:17\n   |\n10 |     takes_slice(&amp;foo); // &lt;-- mismatched type\n   |                 ^^^^ expected slice, found struct `VeryBig`\n   |\n   = note: expected type `&amp;[VeryBig]`\n              found type `&amp;VeryBig`\n</code></pre>\n\n<p>So I wonder: what is the best way to solve this? I <em>could</em> just make <code>foo</code> a <code>[VeryBig; 1]</code>, but that would mean that I have to use <code>foo[0]</code> everywhere where I want to use the big struct directly -- annoying. Alternatively, I could put the big struct into an array temporarily, call <code>takes_slice</code> and move it out of the array again. But that's also not very nice.</p>\n\n<p>As far as I know, <code>&amp;T</code> and <code>&amp;[T]</code> should have the same memory layout (the pointee, not pointer), so I would expect there to be a way to reinterpret one as the other easily, but I haven't found such a feature.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556267211, "post_id": 55862797, "comment_id": 98387520, "body": "Tbh the function signature of <code>mean</code> is a little bit quirky, because I see no reason why they can&#39;t accept something like <code>fn mean&lt;I: Float&gt;(p: impl Iterator&lt;Item = I&gt;) -&gt; I;</code> and you were not forced to pass a slice"}], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1556266177, "post_id": 55863256, "comment_id": 98386995, "body": "&lt;pedant on&gt;It&#39;s usually better to do <a href=\"https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless\" rel=\"nofollow noreferrer\"><code>f64::from (*x)</code> instead of <code>*x as f64</code></a>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556266558, "post_id": 55863256, "comment_id": 98387209, "body": "Yes. You could refer to the error message <i>&quot;the trait <code>num_traits::float::Float</code> is not implemented for <code>{integer}</code>&quot;</i>, and explain that <code>Float</code> is obviously not implemented for an integer :)"}], "tags": [], "owner": {"reputation": 1177, "user_id": 3010432, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/44b95905eb32b6afd00bb42818120f2d?s=128&d=identicon&r=PG", "display_name": "tforgione", "link": "https://stackoverflow.com/users/3010432/tforgione"}, "is_accepted": true, "score": 1, "last_activity_date": 1556270258, "last_edit_date": 1556270258, "creation_date": 1556265626, "answer_id": 55863256, "question_id": 55862797, "link": "https://stackoverflow.com/questions/55862797/simple-rust-crate-function-integer-float-error/55863256#55863256", "title": "simple rust crate function integer/float error", "body": "<p>The problem is that the mean function wants to return the same type as the one in the slice. If it allowed integers, you could be able to compute the mean of [0, 1] and it would return 0 (1 / 2 as an integer). That's why statistical forces you to use floatting types.</p>\n\n<p>The following works on my machine</p>\n\n<pre><code>// cargo-deps: statistical\nextern crate statistical;\nuse statistical::*;\n\nfn main() {\n    let alist = [10, 20, 30, 40, 50];\n    let alist_f64: Vec&lt;f64&gt; = alist.iter().map(|x| f64::from(*x)).collect();\n    println!(\"mean of list: {}\", mean(&amp;alist_f64));\n}\n</code></pre>\n\n<p>It prints this</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>mean of list: 30\n</code></pre>\n\n<p>Note that the <code>collect</code> function will make a copy of the array. There would be a better way if the mean function would take an iterator as parameter but it doesn't seem to be the case.</p>\n"}], "owner": {"reputation": 20623, "user_id": 3522130, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f83ceae9da7eb5d15dba167d1ff9357e?s=128&d=identicon&r=PG&f=1", "display_name": "rnso", "link": "https://stackoverflow.com/users/3522130/rnso"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 55863256, "answer_count": 1, "score": 0, "last_activity_date": 1558662947, "creation_date": 1556263794, "last_edit_date": 1558662947, "question_id": 55862797, "link": "https://stackoverflow.com/questions/55862797/simple-rust-crate-function-integer-float-error", "title": "simple rust crate function integer/float error", "body": "<p>I am trying to run following rust source file as script using <a href=\"https://github.com/DanielKeep/cargo-script\" rel=\"nofollow noreferrer\">cargo-script</a>: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// cargo-deps: statistical\n\nextern crate statistical;\nuse statistical::*;\nfn main() {\n    let alist = [10, 20, 30, 40, 50];\n    println!(\"mean of list: {}\", mean(&amp;alist)); // not working\n}\n</code></pre>\n\n<p>However, I am getting following error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo script mystats.rs \n    Updating crates.io index\n   Compiling mystats v0.1.0 (/home/abcde/.cargo/script-cache/file-mystats-6e38bab8b3f0569c)\nerror[E0277]: the trait bound `{integer}: num_traits::float::Float` is not satisfied\n --&gt; mystats.rs:7:31\n  |\n7 |     println!(\"mean of list: {}\", mean(&amp;alist));  // not working\n  |                                  ^^^^ the trait `num_traits::float::Float` is not implemented for `{integer}`\n  |\n  = help: the following implementations were found:\n            &lt;f32 as num_traits::float::Float&gt;\n            &lt;f64 as num_traits::float::Float&gt;\n  = note: required by `statistical::mean`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: Could not compile `mystats`.\n\nTo learn more, run the command again with --verbose.\ninternal error: cargo failed with status 101\n</code></pre>\n\n<p>How can this integer/float problem be solved?</p>\n"}, {"tags": ["rust", "mio"], "comments": [{"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "edited": false, "score": 0, "creation_date": 1556743451, "post_id": 55862360, "comment_id": 98538173, "body": "Having a server run in a thread and using a channel to signal the thread to shut down is a MAJOR use case. Yes, you can poll the <code>Receiver</code> but unless you set the <code>TcpListener</code> to non blocking and poll it as well, you get no clean shut down. So, one has to mio - wait for both a channel and a listener."}], "answers": [{"comments": [{"owner": {"reputation": 1676, "user_id": 1903430, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/ZBVUf.png?s=128&g=1", "display_name": "fx-kirin", "link": "https://stackoverflow.com/users/1903430/fx-kirin"}, "edited": false, "score": 0, "creation_date": 1587967251, "post_id": 55942979, "comment_id": 108707007, "body": "Sadly, <code>mio-extras</code> is not compatible with latest <code>mio</code> 0.7.0."}], "tags": [], "owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "is_accepted": false, "score": 2, "last_activity_date": 1556751214, "last_edit_date": 1556751214, "creation_date": 1556746395, "answer_id": 55942979, "question_id": 55862360, "link": "https://stackoverflow.com/questions/55862360/register-a-channel-with-mio/55942979#55942979", "title": "Register a channel with mio", "body": "<p>There is now yet another mio crate, which has the channel related functionality: </p>\n\n<p><a href=\"https://github.com/dimbleby/mio-extras\" rel=\"nofollow noreferrer\">mio-extras</a></p>\n\n<p>So, all you have to do do is add that crate to your cargo.toml <code>[dependencies]</code>.<br>\nThen, in your <code>main.rs</code>, add <code>extern crate mio_extras</code> and you should have it all ready to be used.</p>\n\n<p>So, in case of my code snippet I added to the question, it eventually looks like this:</p>\n\n<pre><code>extern crate mio;\nextern crate mio_extras;\n\nuse std::io;\nuse mio::*;\nuse mio::net::*;\nuse mio_extras::channel::*;\nuse std::thread::*;\n\nfn guard_external_tcp_port( rx : mio_extras::channel::Receiver::&lt;u8&gt;) -&gt; () {\n    let poll = Poll::new().expect(\"could not create a new Poll instance.\");\n    const QUIT : Token = Token(0);\n    const CONNECT : Token = Token(1);\n\n\n    let mut events = Events::with_capacity(5);\n    poll.register(&amp;rx,QUIT,Ready::readable(),PollOpt::level() ).expect(\"could not register channel Receiver.\");\n\n\n    let addr : std::net::SocketAddr = \"127.0.0.1:8384\".parse().unwrap();\n    let listener = TcpListener::bind(&amp;addr).expect(\"tcp guard - bind failed!\");\n\n    poll.register(&amp;listener,CONNECT,Ready::all(),PollOpt::edge()).expect(\"could not register our listening socket.\");\n\n    let mut running : bool = true;\n    //listener.set_nonblocking(true).expect(\"cannot set tcp listener to nonblocking!\");\n    while running {\n        let _nevents = poll.poll(&amp;mut events,None).unwrap();\n        println!(\"poll returned!\");\n        for event in &amp;events {\n            match event.token() {\n                QUIT =&gt; running = false,\n                CONNECT =&gt; {\n                    match listener.accept() {\n                        Ok((_s,pa)) =&gt; {\n                            println!(\"tcp client connected: {} - closing it down.\"\n                                , pa);\n                        }\n                        Err(ref e) if e.kind() == io::ErrorKind::WouldBlock =&gt; {\n                            //wait_for_fd();\n                            continue;\n                        }\n                        Err(e) =&gt; panic!(\"encountered IO error: {}\", e),\n                    }\n                },\n                Token(_) =&gt; continue\n            }\n        }\n    }\n}\n\nfn start_tcpguard() -&gt; (JoinHandle&lt;()&gt;,Sender::&lt;u8&gt;) {\n    let (tx,rx) = mio_extras::channel::channel::&lt;u8&gt;();\n    let thrd = spawn(move || {\n        guard_external_tcp_port(rx);\n    });\n    (thrd,tx)\n}\n</code></pre>\n\n<p>I also tried the <code>sync_channel(0)</code> version and it fails to work as intended. The version in the code above, though works as far as poll receiving the shutdown event is concerned.</p>\n"}], "owner": {"reputation": 825, "user_id": 962828, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/78c370f00a14fb3bd59dc334082378cd?s=128&d=identicon&r=PG", "display_name": "Ulrar", "link": "https://stackoverflow.com/users/962828/ulrar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 365, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1556751214, "creation_date": 1556261990, "last_edit_date": 1556743774, "question_id": 55862360, "link": "https://stackoverflow.com/questions/55862360/register-a-channel-with-mio", "title": "Register a channel with mio", "body": "<p>In older versions of the mio doc I find mio::channel, which it seems was used to create a channel implementing <code>EventedFd</code> that can be registered with <code>Poll</code>.\nI also see on reddit that this was changed in favor of something else, but I can't figure out what the new way of registering a channel is.</p>\n\n<p>What is the current way to date of waiting on a channel (<code>std::sync::mpsc</code> or something else) with mio ? All I can find on google is link to the old versions of the mio docs.\nThanks !</p>\n\n<p>As I ran into the same problem, I hope it is okay I provide some code to make the question more easily understood:</p>\n\n<pre><code>use std::io;\nuse std::net::*; //{TcpListener,TcpStream,IpAddr,Ipv4Addr,SocketAddr};\nuse std::thread::*;\nuse std::sync::mpsc::*; //{Receiver,SyncSender,Sender,channel,sync_channel};\n\nfn poll_quit( rx : &amp;Receiver::&lt;u8&gt; ) -&gt; bool {\n    match rx.try_recv() {\n        Ok(_) =&gt; true,\n        Err(TryRecvError::Empty) =&gt; false,\n        Err(TryRecvError::Disconnected) =&gt; true\n    }\n}\n\nfn guard_external_tcp_port( rx : Receiver::&lt;u8&gt;) -&gt; () {\n    let listener = TcpListener::bind(\"127.0.0.1:8384\").expect(\"tcp guard - bind failed!\");\n    listener.set_nonblocking(true).expect(\"cannot set tcp listener to nonblocking!\");\n    while false == poll_quit(&amp;rx) {\n        match listener.accept() {\n            Ok((_s,pa)) =&gt; {\n                println!(\"tcp client connected: {} - closing it down.\"\n                    , pa);\n            }\n            Err(ref e) if e.kind() == io::ErrorKind::WouldBlock =&gt; {\n                //wait_for_fd();\n                continue;\n            }\n            Err(e) =&gt; panic!(\"encountered IO error: {}\", e),\n\n        }\n    }\n}\n\nfn start_tcpguard() -&gt; (JoinHandle&lt;()&gt;,SyncSender::&lt;u8&gt;) {\n    let (tx,rx) = sync_channel::&lt;u8&gt;(0);\n    let thrd = spawn(move || {\n        guard_external_tcp_port(rx);\n    });\n    (thrd,tx)\n}\n</code></pre>\n\n<p>Up to this point, I tried to do without mio but the problem is obvious: You want to block until either the shutdown channel message arrives OR the listener socket is being signaled. Enough incentive to switch to mio. Unless mio is not able to wait for a <code>Receiver</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556258195, "post_id": 55861524, "comment_id": 98383463, "body": "Please use <code>rustfmt</code> to format your code. You can find it under tools in the upper right corner on <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">the playground</a>."}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 10737422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55cbca2456ca295981206008ac9f8ed0?s=128&d=identicon&r=PG&f=1", "display_name": "shengjiew", "link": "https://stackoverflow.com/users/10737422/shengjiew"}, "edited": false, "score": 0, "creation_date": 1556260632, "post_id": 55861737, "comment_id": 98384394, "body": "It&#39;s known that implementing a trait means implementing all its methods. So implementing trait <code>Test</code> for <code>S</code>, it means both of <code>test</code> and <code>show</code> are implemented. Why rust accepts an <code>S</code> that does not conform all the type bound requirements exposed by <code>Test</code>&#39;s methods."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 11, "user_id": 10737422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55cbca2456ca295981206008ac9f8ed0?s=128&d=identicon&r=PG&f=1", "display_name": "shengjiew", "link": "https://stackoverflow.com/users/10737422/shengjiew"}, "edited": false, "score": 0, "creation_date": 1556262131, "post_id": 55861737, "comment_id": 98385033, "body": "@shengjiew Correct it has implementation of <code>show</code> , otherwise compiler would give an error like <code>show</code> method not found for <code>s</code>, imo the behavior is not different than <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fb2c9c936c8c13d1c88cac67d752a347\" rel=\"nofollow noreferrer\">this</a>, function is there but you cannot use for that type."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 0, "last_activity_date": 1556259128, "creation_date": 1556259128, "answer_id": 55861737, "question_id": 55861524, "link": "https://stackoverflow.com/questions/55861524/can-rust-traits-be-partially-implemented/55861737#55861737", "title": "Can Rust traits be partially implemented?", "body": "<blockquote>\n  <p>Can Rust traits be partially implemented?</p>\n</blockquote>\n\n<p>No. Either all in, or nothing.</p>\n\n<p>But why is one code compiling but the other won't.</p>\n\n<p>The reason is the extra bound on <code>show</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn show(&amp;self) where T: Display;\n</code></pre>\n\n<p>This means, that when you want to call this method, your <code>T</code> must implement <code>Display</code>. If it's not implemented, you can't call it.</p>\n\n<p>Rusts \"generics\" work different than C++ for example.</p>\n\n<p>In C++ you have <a href=\"https://en.wikipedia.org/wiki/SFINAE\" rel=\"nofollow noreferrer\">SFINAE</a> (Substitution failure is not an error). This is kind of <a href=\"https://stackoverflow.com/questions/4205130/what-is-duck-typing\">duck typing</a>.<br>\nRust works on bounds, that means you have to specify what kind of traits a your \"generic\" must impelement to use the functions. In this case you can call <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html#tymethod.fmt\" rel=\"nofollow noreferrer\"><code>Display::fmt</code></a> because you specified, that your <code>T</code> must implement that trait.</p>\n\n<p>This bound is not specified for your <code>test</code> method and therefore you can call it with whatever type you want.</p>\n"}], "owner": {"reputation": 11, "user_id": 10737422, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55cbca2456ca295981206008ac9f8ed0?s=128&d=identicon&r=PG&f=1", "display_name": "shengjiew", "link": "https://stackoverflow.com/users/10737422/shengjiew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1019, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1556259128, "creation_date": 1556257992, "last_edit_date": 1556258693, "question_id": 55861524, "link": "https://stackoverflow.com/questions/55861524/can-rust-traits-be-partially-implemented", "title": "Can Rust traits be partially implemented?", "body": "<p>I'm reading the book <em>Programming Rust</em>, and learned about Rust's traits and generic types. And I find that type bounds can be placed on the methods of a trait. Then I constructed the following trait and implemented it for a struct. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt::Display;\ntrait Test&lt;T&gt; {\n    fn show(&amp;self)\n    where\n        T: Display;\n    fn test(&amp;self);\n}\n\nstruct S&lt;T&gt; {\n    field: T,\n}\n\nimpl&lt;T&gt; Test&lt;T&gt; for S&lt;T&gt; {\n    fn show(&amp;self)\n    where\n        T: Display,\n    {\n        println!(\"My field: {}\", self.field);\n    }\n\n    fn test(&amp;self) {\n        println!(\"Just for test\");\n    }\n}\n</code></pre>\n\n<p>The follwing code would not compile just as expected:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct R;\n\nfn main() {\n    let s = S { field: R {} };\n    s.show();\n}\n</code></pre>\n\n<p>But the following code would compile and run.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct R;\n\nfn main() {\n    let s = S { field: R {} };\n    s.test();\n}\n</code></pre>\n\n<p>Shouldn't Rust just reject the code when <code>s</code> is defined as <code>S { field: R{} }</code>? Does it mean that <code>s</code> is an instance of <code>S</code> that implements <code>trait T</code> partially?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1556256442, "post_id": 55861067, "comment_id": 98382943, "body": "Can&#39;t check myself for now, but what if you pass here the path to crate itself (i.e. <code>~&#47;.cargo&#47;registry&#47;cache&#47;github.com-1ecc6299db9ec823&#47;regex-{v&zwnj;&#8203;ersion}.crate</code>)?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556257356, "post_id": 55861067, "comment_id": 98383197, "body": "Is there a specific reason not to use <code>cargo</code>?"}, {"owner": {"reputation": 20623, "user_id": 3522130, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f83ceae9da7eb5d15dba167d1ff9357e?s=128&d=identicon&r=PG&f=1", "display_name": "rnso", "link": "https://stackoverflow.com/users/3522130/rnso"}, "edited": false, "score": 1, "creation_date": 1556259023, "post_id": 55861067, "comment_id": 98383741, "body": "Cargo seem quite complex to a beginner like me."}, {"owner": {"reputation": 20623, "user_id": 3522130, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f83ceae9da7eb5d15dba167d1ff9357e?s=128&d=identicon&r=PG&f=1", "display_name": "rnso", "link": "https://stackoverflow.com/users/3522130/rnso"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1556262946, "post_id": 55861067, "comment_id": 98385449, "body": "@Cerberus : same errors occurs. I have added this in edit of my question above."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1556263756, "post_id": 55861067, "comment_id": 98385854, "body": "Cargo is much more simple then trying to get rustc parameters right. I&#39;d strongly advise to try it, and if you encounter some problems not covered by the Book, ask a separate question."}, {"owner": {"reputation": 8777, "user_id": 3102264, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/G69VV.jpg?s=128&g=1", "display_name": "mpromonet", "link": "https://stackoverflow.com/users/3102264/mpromonet"}, "edited": false, "score": 1, "creation_date": 1565268483, "post_id": 55861067, "comment_id": 101305916, "body": "The crate files are not libraries but a gzip archive of source code, in order to use it with -L, it is needed to uncompress it and build libraries."}, {"owner": {"reputation": 4260, "user_id": 5581893, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/362f3794da7a74277b3b2fb0b6b5b8ab?s=128&d=identicon&r=PG", "display_name": "datdinhquoc", "link": "https://stackoverflow.com/users/5581893/datdinhquoc"}, "edited": false, "score": 0, "creation_date": 1590107961, "post_id": 55861067, "comment_id": 109562926, "body": "@rnso have u gotten the answer? i want to use rustc instead of cargo also"}, {"owner": {"reputation": 20623, "user_id": 3522130, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f83ceae9da7eb5d15dba167d1ff9357e?s=128&d=identicon&r=PG&f=1", "display_name": "rnso", "link": "https://stackoverflow.com/users/3522130/rnso"}, "edited": false, "score": 0, "creation_date": 1590108818, "post_id": 55861067, "comment_id": 109563115, "body": "No. Apparently <code>cargo</code> has to be used. However, I could not continue to use Rust and I have gone to try other languages."}], "owner": {"reputation": 20623, "user_id": 3522130, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/f83ceae9da7eb5d15dba167d1ff9357e?s=128&d=identicon&r=PG&f=1", "display_name": "rnso", "link": "https://stackoverflow.com/users/3522130/rnso"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 171, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1559760807, "creation_date": 1556254925, "last_edit_date": 1559760807, "question_id": 55861067, "link": "https://stackoverflow.com/questions/55861067/rustc-l-command-not-finding-crate", "title": "rustc -L command not finding crate", "body": "<p>I am just starting to use rust. I have installed rust with cargo and subsequently installed some packages, so that now <code>~/.cargo/registry/cache/github.com-1ecc6299db9ec823</code> folder has many crates: </p>\n\n<pre><code>aho-corasick-0.5.3.crate   env_logger-0.4.3.crate    open-1.2.2.crate           regex-0.1.80.crate            textwrap-0.11.0.crate\naho-corasick-0.6.10.crate  gcc-0.3.55.crate          rand-0.3.23.crate          regex-0.2.11.crate            thread-id-2.0.0.crate\naho-corasick-0.7.3.crate   getrandom-0.1.2.crate     rand-0.4.6.crate           regex-1.1.6.crate             thread_local-0.2.7.crate\nansi_term-0.11.0.crate     hoedown-6.0.0.crate       rand-0.6.5.crate           regex-syntax-0.3.9.crate      thread_local-0.3.6.crate\natty-0.2.11.crate          itertools-0.5.10.crate    rand_chacha-0.1.1.crate    regex-syntax-0.5.6.crate      time-0.1.42.crate\nautocfg-0.1.2.crate        kernel32-sys-0.2.2.crate  rand_core-0.3.1.crate      regex-syntax-0.6.6.crate      toml-0.2.1.crate\nbitflags-0.5.0.crate       lazy_static-0.2.11.crate  rand_core-0.4.0.crate      rustc-serialize-0.3.24.crate  ucd-util-0.1.3.crate\nbitflags-1.0.4.crate       lazy_static-1.3.0.crate   rand_hc-0.1.0.crate        rustc_version-0.1.7.crate     unicode-width-0.1.5.crate\ncargo-script-0.2.8.crate   libc-0.2.51.crate         rand_isaac-0.1.1.crate     semver-0.1.20.crate           utf8-ranges-0.1.3.crate\ncfg-if-0.1.7.crate         log-0.3.9.crate           rand_jitter-0.1.3.crate    semver-0.5.1.crate            utf8-ranges-1.0.2.crate\nchan-0.1.23.crate          log-0.4.6.crate           rand_os-0.1.3.crate        semver-parser-0.6.2.crate     vec_map-0.8.1.crate\nclap-2.33.0.crate          memchr-0.1.11.crate       rand_pcg-0.1.2.crate       shaman-0.1.0.crate            winapi-0.2.8.crate\neither-1.5.2.crate         memchr-2.2.0.crate        rand_xorshift-0.1.1.crate  strsim-0.8.0.crate            winapi-build-0.1.1.crate\n</code></pre>\n\n<p>I now want to use rustc command with -L option for a simple source file from <a href=\"https://doc.rust-lang.org/cargo/guide/dependencies.html\" rel=\"nofollow noreferrer\">here</a>: </p>\n\n<pre><code>extern crate regex;\nuse regex::Regex;\nfn main() {\n    let re = Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\n    println!(\"Did our date match? {}\", re.is_match(\"2014-01-01\"));\n}\n</code></pre>\n\n<p>However, this fails with following error: </p>\n\n<pre><code>$ rustc -L ~/.cargo/registry/cache/github.com-1ecc6299db9ec823 hellomain.rs \nerror[E0463]: can't find crate for `regex`\n --&gt; hellomain.rs:4:1\n  |\n4 | extern crate regex;\n  | ^^^^^^^^^^^^^^^^^^^ can't find crate\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0463`.\n</code></pre>\n\n<p>Why is rustc not finding crate and how can this be corrected? Thanks for your help.</p>\n\n<p><strong>Edit:</strong> same error occurs even if I specify the crate file name: </p>\n\n<pre><code>$ rustc -L ~/.cargo/registry/cache/github.com-1ecc6299db9ec823/regex-1.1.6.crate hellomain.rs\nerror[E0463]: can't find crate for `regex`\n --&gt; hellomain.rs:4:1\n  |\n4 | extern crate regex;\n  | ^^^^^^^^^^^^^^^^^^^ can't find crate\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0463`.\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1556256619, "post_id": 55859983, "comment_id": 98382988, "body": "Because you <i>are</i> immutable borrowing it - to run <code>get_for_n</code> method, which borrows from <code>self</code> and releases this borrow, when returned value gets out of scope (that is, at the end of the match). You don&#39;t want the matched value to be invalidated by whatever the <code>stairs</code> function do to the cache."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556257545, "post_id": 55859983, "comment_id": 98383265, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/52846885/how-can-i-mutate-other-elements-of-a-hashmap-when-using-the-entry-pattern\">How can I mutate other elements of a HashMap when using the entry pattern?</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556257578, "post_id": 55859983, "comment_id": 98383273, "body": "Another possible duplicate would be <a href=\"https://stackoverflow.com/questions/36230889/what-is-the-idiomatic-way-to-implement-caching-on-a-function-that-is-not-a-struc\" title=\"what is the idiomatic way to implement caching on a function that is not a struc\">stackoverflow.com/questions/36230889/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556257648, "post_id": 55860939, "comment_id": 98383294, "body": "Please use <code>rustfmt</code> to format your code. You can find it under tools in the upper right corner of the playground."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556259879, "post_id": 55860939, "comment_id": 98384074, "body": "Or better <code>if let Some (x) = cache.get_for_n (n) { return x; } return stairs (cache, n-1);</code> which only calls <code>get_for_n</code> once."}, {"owner": {"reputation": 31, "user_id": 2518281, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/73b106a7ffff400c3252cc89f425bf49?s=128&d=identicon&r=PG", "display_name": "Nebu Pookins", "link": "https://stackoverflow.com/users/2518281/nebu-pookins"}, "edited": false, "score": 0, "creation_date": 1556328336, "post_id": 55860939, "comment_id": 98412715, "body": "<code>if let Some (x) = cache.get_for_n (n) { return x; } return stairs (cache, n-1);</code> also has the <code>cannot borrow *cache as mutable because it is also borrowed as immutable</code> problem."}], "tags": [], "owner": {"reputation": 138, "user_id": 10827651, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-JNBmJA0hPw0/AAAAAAAAAAI/AAAAAAAAADc/FCzwJHCNpfE/photo.jpg?sz=128", "display_name": "Niall Moore", "link": "https://stackoverflow.com/users/10827651/niall-moore"}, "is_accepted": false, "score": 1, "last_activity_date": 1556257621, "last_edit_date": 1556257621, "creation_date": 1556253876, "answer_id": 55860939, "question_id": 55859983, "link": "https://stackoverflow.com/questions/55859983/how-do-i-write-a-rust-function-that-can-both-read-and-write-to-a-cache/55860939#55860939", "title": "How do I write a rust function that can both read and write to a cache?", "body": "<p>Checking for <code>None</code> explicitly and returning before the immutable borrow works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn stairs(cache: &amp;mut CacheForMoves, n: usize) -&gt; &amp;Vec&lt;Vec&lt;usize&gt;&gt; {\n    if cache.get_for_n(n).is_none() {\n        return stairs(cache, n - 1);\n    } else {\n        cache.get_for_n(n).unwrap()\n    }\n}\n</code></pre>\n\n<p>However I don't like having to call the <code>get_for_n()</code> function twice</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f72aa6fc524d7e757e0841d90aae2017\" rel=\"nofollow noreferrer\">Rust playground link</a></p>\n"}, {"tags": [], "owner": {"reputation": 31, "user_id": 2518281, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/73b106a7ffff400c3252cc89f425bf49?s=128&d=identicon&r=PG", "display_name": "Nebu Pookins", "link": "https://stackoverflow.com/users/2518281/nebu-pookins"}, "is_accepted": true, "score": 0, "last_activity_date": 1556431639, "creation_date": 1556431639, "answer_id": 55887494, "question_id": 55859983, "link": "https://stackoverflow.com/questions/55859983/how-do-i-write-a-rust-function-that-can-both-read-and-write-to-a-cache/55887494#55887494", "title": "How do I write a rust function that can both read and write to a cache?", "body": "<p>I think I've got this figured out, so recording my answer in case someone else gets stuck with the same problem. This compiles and runs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nstruct CacheForMoves {\n    set_of_moves: Vec&lt;usize&gt;,\n    cache: HashMap&lt;usize, Vec&lt;Vec&lt;usize&gt;&gt;&gt;\n}\n\nimpl CacheForMoves {\n    fn new(set_of_moves: Vec&lt;usize&gt;) -&gt; CacheForMoves {\n        CacheForMoves {\n            set_of_moves: set_of_moves,\n            cache: HashMap::new()\n        }\n    }\n\n    fn get_for_n(&amp;self, n: usize) -&gt; Option&lt;&amp;Vec&lt;Vec&lt;usize&gt;&gt;&gt; {\n        self.cache.get(&amp;n)\n    }\n\n    fn insert_for_n(&amp;mut self, n: usize, value: Vec&lt;Vec&lt;usize&gt;&gt;) {\n        self.cache.insert(n, value);\n    }\n}\n\nfn stairs(cache: &amp;mut CacheForMoves, n: usize) -&gt; Vec&lt;Vec&lt;usize&gt;&gt; {\n    return match cache.get_for_n(n) {\n        Some(result) =&gt; result.clone(),\n        None =&gt; stairs(cache, n - 1)\n    }\n}\n\nfn main() {\n    let mut cache = CacheForMoves::new(vec![1, 2]);\n    cache.insert_for_n(1, vec![]);\n    let result = stairs(&amp;mut cache, 4);\n    println!(\"Found {} possible solutions: \", result.len());\n    for solution in result {\n        println!(\"{:?}\", solution);\n    }\n}\n</code></pre>\n\n<p>There are 2 main changes:</p>\n\n<ol>\n<li><code>stairs</code> no longer returns <code>&amp;Vec&lt;Vec&lt;usize&gt;&gt;</code> and instead returns <code>Vec&lt;Vec&lt;usize&gt;&gt;</code></li>\n<li>In the <code>Some(result)</code> case, we return <code>result.clone()</code> instead of <code>result</code>.</li>\n</ol>\n\n<p>2 is a consequence of 1, so let's focus on why 1 is necessary and why it fixes the problem. The <code>HashMap</code> owns the <code>Vec&lt;Vec&lt;usize&gt;&gt;</code>, and so when the original implementation returned a <code>&amp;Vec&lt;Vec&lt;usize&gt;&gt;</code>, it was returning a reference to a memory location owned by the <code>HashMap</code>. If someone were to mutate the <code>HashMap</code>, say by deleting an entry, since the <code>HashMap</code> owns the <code>Vec&lt;Vec&lt;usize&gt;&gt;</code>, the <code>HashMap</code> would conclude that it's safe to deallocate the memory being used by the <code>Vec&lt;Vec&lt;usize&gt;&gt;</code>, and I'd end up with a dangling reference.</p>\n\n<p>I can only return a <code>&amp;Vec&lt;Vec&lt;usize&gt;&gt;</code> as long as I can guarantee no one will mutate the <code>HashMap</code> for as long as the <code>&amp;Vec&lt;Vec&lt;usize&gt;&gt;</code> reference exists, and since I'm returning the <code>&amp;Vec&lt;Vec&lt;usize&gt;&gt;</code> reference to my caller, that essentially means I need to guarantee that the <code>HashMap</code> is immutable forever (since I have no idea what the caller might do).</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 11305496, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-JWGNCkxBrFU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd04_mbPW1X1Kwvw2Z5_23Fe_nsFg/mo/photo.jpg?sz=128", "display_name": "Fodil", "link": "https://stackoverflow.com/users/11305496/fodil"}, "is_accepted": false, "score": 1, "last_activity_date": 1556475607, "last_edit_date": 1556475607, "creation_date": 1556475222, "answer_id": 55893204, "question_id": 55859983, "link": "https://stackoverflow.com/questions/55859983/how-do-i-write-a-rust-function-that-can-both-read-and-write-to-a-cache/55893204#55893204", "title": "How do I write a rust function that can both read and write to a cache?", "body": "<p>Wrapping it in a <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\">Rc</a> is a possible solution.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\">Rc</a> is a \"reference counted\" pointer, and enables you to have multiple \"borrows\" to the same value. The count will be increased when you will invoke the \"clone\" method. When value is destroyed, the count will be decreased. And finally if the reference count hits 0, the pointer and its \"pointed\" value are destroyed.\nYou may want to use an <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\">Arc</a> in a concurrent environment (it basically is an Atomically reference counted\" pointer) or if you are making a crate, as it gives more flexibility. Arc will do the same work as Rc, except that count will be done atomically.</p>\n\n<p>That way, your ownership problem will be solved, without copying the whole Vec but by just having another pointer to the same \"value\".</p>\n\n<p>I also replaced by use of <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or_else\" rel=\"nofollow noreferrer\">Option::unwrap_or_else</a>, which is a more idiomatic way to unwrap an Option::Some(T), or compute lazily a default value in case of a Option::None.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\nuse std::rc::Rc;\n\nstruct CacheForMoves {\n    set_of_moves: Vec&lt;usize&gt;,\n    cache: HashMap&lt;usize, Vec&lt;Vec&lt;usize&gt;&gt;&gt;,\n}\n\nimpl CacheForMoves {\n    fn new(set_of_moves: Vec&lt;usize&gt;) -&gt; CacheForMoves {\n        CacheForMoves {\n            set_of_moves,\n            cache: HashMap::new(),\n        }\n    }\n\n    fn get_for_n(&amp;self, n: usize) -&gt; Option&lt;&amp;Vec&lt;Vec&lt;usize&gt;&gt;&gt; {\n        self.cache.get(&amp;n)\n    }\n\n    fn insert_for_n(&amp;mut self, n: usize, value: Vec&lt;Vec&lt;usize&gt;&gt;) {\n        self.cache.insert(n, value);\n    }\n}\n\nfn stairs(cache: &amp;Rc&lt;CacheForMoves&gt;, n: usize) -&gt; &amp;Vec&lt;Vec&lt;usize&gt;&gt; {\n    cache.get_for_n(n).unwrap_or_else(|| stairs(cache, n - 1))\n}\n\nfn main() {\n    let mut cache = Rc::new(CacheForMoves::new(vec![1, 2]));\n    Rc::get_mut(&amp;mut cache).unwrap().insert_for_n(1, vec![]);\n    let result = stairs(&amp;cache, 4);\n    println!(\"Found {} possible solutions: \", result.len());\n    for solution in result {\n        println!(\"{:?}\", solution);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 31, "user_id": 2518281, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/73b106a7ffff400c3252cc89f425bf49?s=128&d=identicon&r=PG", "display_name": "Nebu Pookins", "link": "https://stackoverflow.com/users/2518281/nebu-pookins"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 399, "favorite_count": 0, "accepted_answer_id": 55887494, "answer_count": 3, "score": 0, "last_activity_date": 1556475607, "creation_date": 1556245338, "last_edit_date": 1556329721, "question_id": 55859983, "link": "https://stackoverflow.com/questions/55859983/how-do-i-write-a-rust-function-that-can-both-read-and-write-to-a-cache", "title": "How do I write a rust function that can both read and write to a cache?", "body": "<h1>Original Problem Statement</h1>\n\n<p>I'm trying to write a function that can both read and write from a cache, but I'm running into a problem where the compiler says I can't both mutably and immutably borrow the cache.</p>\n\n<p>I've read through <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html</a> , <a href=\"https://naftuli.wtf/2019/03/20/rust-the-hard-parts/\" rel=\"nofollow noreferrer\">https://naftuli.wtf/2019/03/20/rust-the-hard-parts/</a> and random stack overflow/Reddit posts, but I can't see how to apply what they say to this code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nstruct CacheForMoves {\n    set_of_moves: Vec&lt;usize&gt;,\n    cache: HashMap&lt;usize, Vec&lt;Vec&lt;usize&gt;&gt;&gt;,\n}\n\nimpl CacheForMoves {\n    fn new(set_of_moves: Vec&lt;usize&gt;) -&gt; CacheForMoves {\n        CacheForMoves {\n            set_of_moves: set_of_moves,\n            cache: HashMap::new(),\n        }\n    }\n\n    fn get_for_n(&amp;self, n: usize) -&gt; Option&lt;&amp;Vec&lt;Vec&lt;usize&gt;&gt;&gt; {\n        self.cache.get(&amp;n)\n    }\n\n    fn insert_for_n(&amp;mut self, n: usize, value: Vec&lt;Vec&lt;usize&gt;&gt;) {\n        self.cache.insert(n, value);\n    }\n}\n\nfn stairs(cache: &amp;mut CacheForMoves, n: usize) -&gt; &amp;Vec&lt;Vec&lt;usize&gt;&gt; {\n    return match cache.get_for_n(n) {\n        Some(result) =&gt; result,\n        None =&gt; stairs(cache, n - 1),\n    };\n}\n\nfn main() {\n    let mut cache = CacheForMoves::new(vec![1, 2]);\n    cache.insert_for_n(1, vec![]);\n    let result = stairs(&amp;mut cache, 4);\n    println!(\"Found {} possible solutions: \", result.len());\n    for solution in result {\n        println!(\"{:?}\", solution);\n    }\n}\n</code></pre>\n\n<p>This produces the following compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*cache` as mutable because it is also borrowed as immutable\n  --&gt; stairs2.rs:28:18\n   |\n26 |     return match cache.get_for_n(n) {\n   |                  ----- immutable borrow occurs here\n27 |         Some(result) =&gt; result,\n28 |         None =&gt; stairs(cache, n - 1)\n   |                        ^^^^^ mutable borrow occurs here\n29 |     }\n30 | }\n   | - immutable borrow ends here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0502`.\n</code></pre>\n\n<p>I don't understand why it thinks I'm immutably borrowing <code>cache</code> on line 26. My understanding is <code>main</code> creates an instance of <code>CacheForMove</code> and owns that value. It's mutably-lending the value to the <code>stairs</code> function, and so now <code>stairs</code> has mutably borrowed the value. I expected to be able to invoke both <code>get_for_n</code> and <code>insert_for_n</code> on that mutably-borrowed reference.</p>\n\n<h1>Answers that I don't understand yet</h1>\n\n<h2>Is this a duplicate of <a href=\"https://stackoverflow.com/questions/52846885/how-can-i-mutate-other-elements-of-a-hashmap-when-using-the-entry-pattern\">How can I mutate other elements of a HashMap when using the entry pattern?</a> ?</h2>\n\n<p>In this SO question, the OP wants to have their update for one key in the cache depend on the value of a different key in the cache. I do eventually want to do that to, but I'm running into a problem before I get to that point. I'm not looking at other entries in the cache in order to compute \"this\" entry. The answers in that question says that they would need to split getting from the cache from inserting into the cache like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn compute(cache: &amp;mut HashMap&lt;u32, u32&gt;, input: u32) -&gt; u32 {\n    if let Some(entry) = cache.get(&amp;input) {\n        return *entry;\n    }\n\n    let res = if input &gt; 2 {\n        // Trivial placeholder for an expensive computation.\n        compute(cache, input - 1) + compute(cache, input - 2)\n    } else {\n        0\n    };\n    cache.insert(input, res);\n    res\n}\n</code></pre>\n\n<p>However, I believe my code already splits getting from inserting, and yet I still get a compile error.</p>\n\n<p>Even if I adapt the above example to match my API:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn stairs(cache: &amp;mut CacheForMoves, n: usize) -&gt; &amp;Vec&lt;Vec&lt;usize&gt;&gt; {\n    if let Some(entry) = cache.get_for_n(n) {\n        return entry;\n    }\n    let res = stairs(cache, n - 1);\n    cache.insert_for_n(n, res.clone());\n    res\n}\n</code></pre>\n\n<p>I still get the same error:</p>\n\n<pre><code>error[E0502]: cannot borrow `*cache` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:29:15\n   |\n25 | fn stairs(cache: &amp;mut CacheForMoves, n: usize) -&gt; &amp;Vec&lt;Vec&lt;usize&gt;&gt; {\n   |                  - let's call the lifetime of this reference `'1`\n26 |     if let Some(entry) = cache.get_for_n(n) {\n   |                          ----- immutable borrow occurs here\n27 |         return entry;\n   |                ----- returning this value requires that `*cache` is borrowed for `'1`\n28 |     }\n29 |     let res = stairs(cache, n - 1);\n   |               ^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n\nerror[E0499]: cannot borrow `*cache` as mutable more than once at a time\n  --&gt; src/main.rs:30:5\n   |\n25 | fn stairs(cache: &amp;mut CacheForMoves, n: usize) -&gt; &amp;Vec&lt;Vec&lt;usize&gt;&gt; {\n   |                  - let's call the lifetime of this reference `'1`\n...\n29 |     let res = stairs(cache, n - 1);\n   |                      ----- first mutable borrow occurs here\n30 |     cache.insert_for_n(n, res.clone());\n   |     ^^^^^ second mutable borrow occurs here\n31 |     res\n   |     --- returning this value requires that `*cache` is borrowed for `'1`\n\nerror: aborting due to 2 previous errors\n\nSome errors occurred: E0499, E0502.\nFor more information about an error, try `rustc --explain E0499`.\n</code></pre>\n\n<h2>Is this a duplicate of <a href=\"https://stackoverflow.com/questions/36230889/what-is-the-idiomatic-way-to-implement-caching-on-a-function-that-is-not-a-struc\">What is the idiomatic way to implement caching on a function that is not a struct method?</a> ?</h2>\n\n<p>In that SO question, the OP states they are unwilling to use a <code>struct</code>, and the answers provided use some combination of <code>unsafe</code>, <code>mutex</code>, <code>lazy_static!</code>, <code>RefCell</code>, and so on.</p>\n\n<p>I have the opposite issue. I am perfectly willing to use a <code>struct</code> (and in fact, I am using one in my original problem statement), but using <code>unsafe</code>, <code>mutex</code>, <code>lazy_static!</code>, and so on sound much more dangerous or complex to me.</p>\n\n<p>The OP of that question implies that if we could use a struct, the solution would be obvious. I would like to learn that obvious solution.</p>\n\n<h2>you are immutable borrowing it - to run get_for_n method, which borrows from self and releases this borrow, when returned value gets out of scope (that is, at the end of the match). You don't want the matched value to be invalidated by whatever the stairs function do to the cache.</h2>\n\n<p>The matched value is not used by whatever the <code>stairs</code> function does. In the implementation shown in the original problem statement:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn stairs(cache: &amp;mut CacheForMoves, n: usize) -&gt; &amp;Vec&lt;Vec&lt;usize&gt;&gt; {\n    return match cache.get_for_n(n) {\n        Some(result) =&gt; result,\n        None =&gt; stairs(cache, n - 1),\n    };\n}\n</code></pre>\n\n<p>I immutably borrow <code>cache</code> to get a cached value out of it. If there is a value available, I return it (without recursively calling <code>stairs</code> again). If there is no value, I expect <code>None</code> to be copyable (i.e. I can have my own copy of <code>None</code> on my stack; I no longer need to reference any data in <code>cache</code> at all). At this point, I expect to be able to safely mutably borrow <code>cache</code> to invoke <code>stairs(cache, n-1)</code>, because there are no other borrows (mutable or immutable) to cache.</p>\n\n<p>To really drive this point home, consider this alternative implementation of the stairs function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn stairs(cache: &amp;mut CacheForMoves, n: usize) -&gt; &amp;Vec&lt;Vec&lt;usize&gt;&gt; {\n    {\n        let maybe_result = cache.get_for_n(n);\n        if maybe_result.is_some() {\n            return maybe_result.unwrap();\n        }\n    }\n    return stairs(cache, n - 1);\n}\n</code></pre>\n\n<p>Here I've used a pair of curly braces to limit the scope of the immutable borrow. I perform an immutable borrow to populate <code>maybe_result</code>, and check whether it is a <code>Some</code>. If it is, I unwrap the internal value and return it. If not, I end my scope, and thus all borrows have gone out of scope and are now invalid. There are no borrows happening anymore.</p>\n\n<p>Then, I try to mutably borrow <code>cache</code> to recursively invoke <code>stairs</code>. This should be the only borrow happening at this point, and so I expect this borrow to succeed, but the compiler tells me:</p>\n\n<pre><code>error[E0502]: cannot borrow `*cache` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:32:12\n   |\n25 | fn stairs(cache: &amp;mut CacheForMoves, n: usize) -&gt; &amp;Vec&lt;Vec&lt;usize&gt;&gt; {\n   |                  - let's call the lifetime of this reference `'1`\n26 |     {\n27 |         let maybe_result = cache.get_for_n(n);\n   |                            ----- immutable borrow occurs here\n28 |         if maybe_result.is_some() {\n29 |             return maybe_result.unwrap();\n   |                    --------------------- returning this value requires that `*cache` is borrowed for `'1`\n...\n32 |     return stairs(cache, n - 1);\n   |            ^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0502`.\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1556260868, "post_id": 55859722, "comment_id": 98384500, "body": "I think this is an excellent example of some code that <i>should</i> work but doesn&#39;t; maybe file an issue with the Rust compiler? I would have thought NLL would solve this."}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1556247515, "creation_date": 1556247515, "answer_id": 55860215, "question_id": 55859722, "link": "https://stackoverflow.com/questions/55859722/optionally-push-item-to-vec-or-return-existing-item/55860215#55860215", "title": "Optionally push item to Vec or return existing item", "body": "<p>I think this is a limitation of current borrow checker, you can do this instead:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct F {\n    x: Vec&lt;Vec&lt;String&gt;&gt;,\n}\n\nimpl F {\n    fn foo(&amp;mut self, s: String) -&gt; &amp;[String] {\n        let ret = self.x.iter().position(|strings| strings.contains(&amp;s));\n\n        if let Some(ret) = ret {\n            &amp;self.x[ret]\n        } else {\n            self.x.push(vec![s]);\n            &amp;self.x.last().unwrap()\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 0, "last_activity_date": 1556370568, "last_edit_date": 1556370568, "creation_date": 1556258056, "answer_id": 55861539, "question_id": 55859722, "link": "https://stackoverflow.com/questions/55859722/optionally-push-item-to-vec-or-return-existing-item/55861539#55861539", "title": "Optionally push item to Vec or return existing item", "body": "<p><a href=\"https://stackoverflow.com/a/55860215/155423\">Stargateur is right</a> and the borrow checker cannot prove that your code is correct. We have to help it.</p>\n\n<p>Another possibility is to use an index while iterating over the <code>Vec</code>s.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct F {\n    x: Vec&lt;Vec&lt;String&gt;&gt;,\n}\n\nimpl F {\n    fn foo(&amp;mut self, s: String) -&gt; &amp;[String] {\n        for (i, strings) in self.x.iter().enumerate() {\n            if strings.contains(&amp;s) {\n                return &amp;self.x[i];\n            }\n        }\n\n        self.x.push(vec![s]);\n        self.x.last().unwrap()\n    }\n}\n</code></pre>\n\n<p>(Also use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.last\" rel=\"nofollow noreferrer\"><code>slice::last</code></a> instead of manually getting the index. It's more clear what you want to do).</p>\n"}], "owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 0, "closed_date": 1556370606, "accepted_answer_id": 55860215, "answer_count": 2, "score": 3, "last_activity_date": 1556370568, "creation_date": 1556242974, "last_edit_date": 1556257729, "question_id": 55859722, "link": "https://stackoverflow.com/questions/55859722/optionally-push-item-to-vec-or-return-existing-item", "closed_reason": "Duplicate", "title": "Optionally push item to Vec or return existing item", "body": "<p>I have a function that will either return a reference to existing item from a Vec, or push a new item onto the Vec and return a reference to that existing item. I created a basic exmple that illustrates what I want to do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct F {\n    x: Vec&lt;Vec&lt;String&gt;&gt;,\n}\n\nimpl F {\n    fn foo(&amp;mut self, s: String) -&gt; &amp;[String] {\n        for strings in &amp;self.x {\n            if strings.contains(&amp;s) {\n                return &amp;strings;\n            }\n        }\n\n        self.x.push(vec![s]);\n\n        &amp;self.x[self.x.len() - 1]\n    }\n}\n</code></pre>\n\n<p>But when I try to compile this, I get an error about lifetimes:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `self.x` as mutable because it is also borrowed as immutable\n  --&gt; src/lib.rs:13:9\n   |\n6  |     fn foo(&amp;mut self, s: String) -&gt; &amp;[String] {\n   |            - let's call the lifetime of this reference `'1`\n7  |         for strings in &amp;self.x {\n   |                        ------- immutable borrow occurs here\n8  |             if strings.contains(&amp;s) {\n9  |                 return &amp;strings;\n   |                        -------- returning this value requires that `self.x` is borrowed for `'1`\n...\n13 |         self.x.push(vec![s]);\n   |         ^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n</code></pre>\n\n<p>I don't understand this error, because in my mind the immutable borrow on line 7 is guaranteed to no longer exist by line 13, since the function will either have returned before line 13, or the for loop will have ended, and the borrow should end with it. What am I missing?</p>\n"}, {"tags": ["rust", "rust-diesel"], "answers": [{"comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1556239523, "post_id": 55859255, "comment_id": 98379710, "body": "In fact, putting an <code>i64</code> behind a reference is overkill IMO. I&#39;d just use <code>Option&lt;i64&gt;</code> directly."}, {"owner": {"reputation": 1676, "user_id": 2299084, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/96d021ccec6067dbbd79573a3b39a8d1?s=128&d=identicon&r=PG", "display_name": "user60561", "link": "https://stackoverflow.com/users/2299084/user60561"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1556244007, "post_id": 55859255, "comment_id": 98380567, "body": "@FrancisGagn&#233; Yup, that seems to work fine as well. However, I&#39;m following <a href=\"https://diesel.rs/guides/getting-started/\" rel=\"nofollow noreferrer\">diesel.rs/guides/getting-started</a> and have no idea why they did it that way there."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1556321514, "post_id": 55859255, "comment_id": 98411745, "body": "Using references for strings is totally fine. The function that does the insertion doesn&#39;t need ownership of a <code>String</code>. <code>&amp;str</code> can refer to strings on the heap or in static memory, so you can avoid putting fixed strings on the heap by using references. However, <code>i64</code> is small enough that putting it behind a reference actually makes things (imperceptibly) slower."}], "tags": [], "owner": {"reputation": 1676, "user_id": 2299084, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/96d021ccec6067dbbd79573a3b39a8d1?s=128&d=identicon&r=PG", "display_name": "user60561", "link": "https://stackoverflow.com/users/2299084/user60561"}, "is_accepted": true, "score": 3, "last_activity_date": 1556238649, "creation_date": 1556238649, "answer_id": 55859255, "question_id": 55859061, "link": "https://stackoverflow.com/questions/55859061/using-optiont-with-diesels-insertable-trait/55859255#55859255", "title": "Using Option&lt;T&gt; with Diesel&#39;s Insertable trait", "body": "<p>Modify <code>pub parent_id: &amp;'a Option&lt;i64&gt;</code> to place the <code>&amp;'a</code> inside of the Option: <code>pub parent_id: Option&lt;&amp;'a i64&gt;</code>.</p>\n"}], "owner": {"reputation": 1676, "user_id": 2299084, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/96d021ccec6067dbbd79573a3b39a8d1?s=128&d=identicon&r=PG", "display_name": "user60561", "link": "https://stackoverflow.com/users/2299084/user60561"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 589, "favorite_count": 0, "accepted_answer_id": 55859255, "answer_count": 1, "score": 1, "last_activity_date": 1556238649, "creation_date": 1556236646, "question_id": 55859061, "link": "https://stackoverflow.com/questions/55859061/using-optiont-with-diesels-insertable-trait", "title": "Using Option&lt;T&gt; with Diesel&#39;s Insertable trait", "body": "<p>I have the following model:</p>\n\n<pre><code>use diesel::prelude::*;\n\nuse crate::schema::category;\n\n#[derive(Debug, Identifiable, Queryable)]\n#[table_name = \"category\"]\npub struct Category {\n    pub id: i64,\n    pub name: String,\n    pub description: String,\n    pub parent_id: Option&lt;i64&gt;,\n}\n\n#[derive(Debug, Insertable)]\n#[table_name = \"category\"]\npub struct NewCategory&lt;'a&gt; {\n    pub name: &amp;'a str,\n    pub description: &amp;'a str,\n    pub parent_id: &amp;'a Option&lt;i64&gt;,\n}\n</code></pre>\n\n<p>and schema.rs:</p>\n\n<pre><code>table! {\n    category (id) {\n        id -&gt; Integer,\n        name -&gt; Text,\n        description -&gt; Text,\n        parent_id -&gt; Nullable&lt;Integer&gt;,\n    }\n}\n</code></pre>\n\n<p>However, when I try to compile this code, I get the following errors:</p>\n\n<pre><code>error[E0277]: the trait bound `std::option::Option&lt;i64&gt;: diesel::Expression` is not satisfied\n  --&gt; src/models/categories.rs:15:17\n   |\n15 | #[derive(Debug, Insertable)]\n   |                 ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `std::option::Option&lt;i64&gt;`\n   |\n   = note: required because of the requirements on the impl of `diesel::Expression` for `&amp;std::option::Option&lt;i64&gt;`\n\nerror[E0277]: the trait bound `std::option::Option&lt;i64&gt;: diesel::Expression` is not satisfied\n  --&gt; src/models/categories.rs:15:17\n   |\n15 | #[derive(Debug, Insertable)]\n   |                 ^^^^^^^^^^ the trait `diesel::Expression` is not implemented for `std::option::Option&lt;i64&gt;`\n   |\n   = note: required because of the requirements on the impl of `diesel::Expression` for `&amp;'a std::option::Option&lt;i64&gt;`\n</code></pre>\n\n<p>What do I need to get this to work? I've looked around, but the only similar issue that I've found is when someone had more than 16 columns in their table, which is not the case here.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1556234843, "post_id": 55858588, "comment_id": 98378868, "body": "Make them 1-element arrays (<code>[u8; 1]</code>) instead of bare <code>u8</code>s? I believe <code>rng.gen()</code> will work for arrays."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1556235206, "post_id": 55858588, "comment_id": 98378914, "body": "I would like to see a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> before trying to write a real answer, since we can&#39;t know the definitions of <code>database</code> or <code>WriteBatch</code>, for example. The <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playground</a> is a good place to start -- if you can reproduce your error there with a minimal example, it would help a lot."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1556235537, "post_id": 55858588, "comment_id": 98378978, "body": "Or maybe just <code>batch.put(&amp;v[..1], &amp;v[1..])</code> would work."}], "answers": [{"tags": [], "owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "is_accepted": false, "score": 0, "last_activity_date": 1556305838, "creation_date": 1556305838, "answer_id": 55873678, "question_id": 55858588, "link": "https://stackoverflow.com/questions/55858588/how-to-convert-u8-to-u8-in-rust/55873678#55873678", "title": "How to convert u8 to &amp;[u8] in Rust?", "body": "<p>The following works:</p>\n\n<pre><code>batch.put(&amp;v[0].as_bytes(), &amp;v[1].as_bytes())\n</code></pre>\n"}], "owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 405, "favorite_count": 0, "closed_date": 1556371043, "answer_count": 1, "score": -2, "last_activity_date": 1556305838, "creation_date": 1556232503, "question_id": 55858588, "link": "https://stackoverflow.com/questions/55858588/how-to-convert-u8-to-u8-in-rust", "closed_reason": "Duplicate", "title": "How to convert u8 to &amp;[u8] in Rust?", "body": "<p>I am new and lost in Rust a bit.</p>\n\n<p>I would like to add keys and values to a data store that has a put function that takes two byte string literals:</p>\n\n<pre><code>batch.put(b\"foxi\", b\"maxi\");\n</code></pre>\n\n<p>I generate a bunch of these k-v pairs:</p>\n\n<pre><code>for _ in 1..1000000 {\n    let mut ivec = Vec::new();\n    let s1: u8 = rng.gen();\n    let s2: u8 = rng.gen();\n    ivec.push(s1);\n    ivec.push(s2);\n    debug!(\"Adding key: {} and value {}\", s1, s2);\n    vec.push(ivec);\n}\nlet _ = database::write(db, vec);\n</code></pre>\n\n<p>I have a fn that tries to add them:</p>\n\n<pre><code>pub fn write(db: DB, vec: Vec&lt;Vec&lt;u8&gt;&gt;) {\n    let batch = WriteBatch::new();\n    for v in vec {\n        batch.put(v[0], v[1]);\n    }\n    db.write(&amp;batch).unwrap();\n}\n</code></pre>\n\n<p>When I try to compile this I get:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/database.rs:17:19\n   |\n17 |         batch.put(v[0], v[1]);\n   |                   ^^^^ expected &amp;[u8], found u8\n   |\n   = note: expected type `&amp;[u8]`\n              found type `u8`\n\nerror[E0308]: mismatched types\n  --&gt; src/database.rs:17:25\n   |\n17 |         batch.put(v[0], v[1]);\n   |                         ^^^^ expected &amp;[u8], found u8\n   |\n   = note: expected type `&amp;[u8]`\n              found type `u8`\n</code></pre>\n\n<p>I was ping-ponging with the borrow checker for a while now but I could not get it working. What is the best way to have byte literal strings from u8s?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 342, "user_id": 3717022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d20e5f607fdba5b5097e087d32649835?s=128&d=identicon&r=PG", "display_name": "aztecrex", "link": "https://stackoverflow.com/users/3717022/aztecrex"}, "edited": false, "score": 0, "creation_date": 1556233397, "post_id": 55858345, "comment_id": 98378586, "body": "Thanks @mcarton. I made a version that worked that way but I was hoping that errors (and some other) definitions could be made in an application assembly or wiring module--leaving the business logic testable in isolation."}, {"owner": {"reputation": 342, "user_id": 3717022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d20e5f607fdba5b5097e087d32649835?s=128&d=identicon&r=PG", "display_name": "aztecrex", "link": "https://stackoverflow.com/users/3717022/aztecrex"}, "edited": false, "score": 0, "creation_date": 1556233547, "post_id": 55858345, "comment_id": 98378623, "body": "The thing I don&#39;t get is why the compiler doesn&#39;t know to terminate when it finds that <code>T as Application</code> is what is being defined. Is it that it cannot for some reason or just that it&#39;s not implemented that way?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 342, "user_id": 3717022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d20e5f607fdba5b5097e087d32649835?s=128&d=identicon&r=PG", "display_name": "aztecrex", "link": "https://stackoverflow.com/users/3717022/aztecrex"}, "edited": false, "score": 0, "creation_date": 1556493709, "post_id": 55858345, "comment_id": 98447148, "body": "@aztecrex The compiler could catch the error before, but what would be the point? The code still couldn&#39;t compile because you&#39;ve never actually set <code>Error</code> anywhere, just set some constraints on it, and there is already logic in the compiler to prevent infinitely recursive bounds, which is the &quot;overflow evaluating the requirement&quot; error you got. There isn&#39;t much point in detecting that particular case given these."}, {"owner": {"reputation": 342, "user_id": 3717022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d20e5f607fdba5b5097e087d32649835?s=128&d=identicon&r=PG", "display_name": "aztecrex", "link": "https://stackoverflow.com/users/3717022/aztecrex"}, "edited": false, "score": 0, "creation_date": 1557195492, "post_id": 55858345, "comment_id": 98673604, "body": "not catch an error. by terminate I mean stop recursing. it seems there is enough information for the compiler to successfully complete the bounds computation without error"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 342, "user_id": 3717022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d20e5f607fdba5b5097e087d32649835?s=128&d=identicon&r=PG", "display_name": "aztecrex", "link": "https://stackoverflow.com/users/3717022/aztecrex"}, "edited": false, "score": 0, "creation_date": 1557224481, "post_id": 55858345, "comment_id": 98684644, "body": "But there isn&#39;t enough information! You&#39;ve never actually specified the type for <code>Error</code>. Even if you ignore the bound, you are missing a <code>type Error = </code>."}, {"owner": {"reputation": 342, "user_id": 3717022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d20e5f607fdba5b5097e087d32649835?s=128&d=identicon&r=PG", "display_name": "aztecrex", "link": "https://stackoverflow.com/users/3717022/aztecrex"}, "edited": false, "score": 0, "creation_date": 1557321862, "post_id": 55858345, "comment_id": 98725620, "body": "Yes.but the whole thing is not actually specifying a type, just a constraint. I am trying to express: &quot;given some type T with these constraints, whose associated Error type meets these other constraints that are dependent on T, here is how you implement Application.&quot; But in Rust, I do not have the opportunity to defer that concrete Error association. Something like <code>impl&lt;T,E&gt; ... { type Error = E; ... }</code> (not valid in Rust). Type families or some other way to express complex type functions would be nice. Thanks for the help."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1556230780, "creation_date": 1556230780, "answer_id": 55858345, "question_id": 55857823, "link": "https://stackoverflow.com/questions/55857823/overflow-evaluating-the-requirement-when-trying-to-defer-associated-types/55858345#55858345", "title": "&quot;overflow evaluating the requirement&quot; when trying to defer associated types", "body": "<p>A simpler example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9ddc3a96c3c103c1f475733117ca099c\" rel=\"nofollow noreferrer\">reproducing the same error</a> is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Foo {}\n\npub trait Application {\n    type Error;\n}\n\nimpl&lt;T&gt; Application for T where &lt;T as Application&gt;::Error: Foo {}\n</code></pre>\n\n<p>Your definition of <code>Application</code> is recursive. To know what <code>T</code>s implement <code>Application</code>, you need to evaluate <code>&lt;T as Application&gt;</code>, which requires the compiler to know what <code>T</code>s implement <code>Application</code>, and so on.</p>\n\n<p>In the implementation of <code>Application</code>, you have to choose a concrete <code>Error</code>, for example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9e8a5de472fc75c150ddcbd9576f51dd\" rel=\"nofollow noreferrer\">here with <code>String</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T&gt; Application for T\nwhere\n    T: CapabilityA + CapabilityB,\n    String: From&lt;&lt;T as CapabilityA&gt;::Error&gt;,\n    String: From&lt;&lt;T as CapabilityB&gt;::Error&gt;,\n{\n    type Error = String;\n\n    fn go(&amp;self) -&gt; Result&lt;(), Self::Error&gt; {\n        let a = self.perform_a()?;\n        let b = self.perform_b(&amp;a)?;\n        Ok(b)\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 342, "user_id": 3717022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d20e5f607fdba5b5097e087d32649835?s=128&d=identicon&r=PG", "display_name": "aztecrex", "link": "https://stackoverflow.com/users/3717022/aztecrex"}, "is_accepted": false, "score": 0, "last_activity_date": 1557323112, "creation_date": 1557323112, "answer_id": 56042269, "question_id": 55857823, "link": "https://stackoverflow.com/questions/55857823/overflow-evaluating-the-requirement-when-trying-to-defer-associated-types/56042269#56042269", "title": "&quot;overflow evaluating the requirement&quot; when trying to defer associated types", "body": "<p>Based on @mcarton's answer and its discussion, an alternative that does compile and expresses my intent is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait CapabilityA {\n    type Error;\n    fn perform_a(&amp;self) -&gt; Result&lt;String, Self::Error&gt;;\n}\n\npub trait CapabilityB {\n    type Error;\n    fn perform_b(&amp;self, a: &amp;str) -&gt; Result&lt;(), Self::Error&gt;;\n}\n\n\npub trait HasApplicationError: {\n    type Error;\n}\n\npub trait Application : HasApplicationError {\n    fn go(&amp;self) -&gt; Result&lt;(), Self::Error&gt;;\n}\n\nimpl&lt;T&gt; Application for T\nwhere\n    T: CapabilityA + CapabilityB + HasApplicationError,\n    &lt;T as HasApplicationError&gt;::Error: From&lt;&lt;T as CapabilityA&gt;::Error&gt; + From&lt;&lt;T as CapabilityB&gt;::Error&gt;,\n{\n    fn go(&amp;self) -&gt; Result&lt;(), Self::Error&gt; {\n        let a = self.perform_a()?;\n        let b = self.perform_b(&amp;a)?;\n        Ok(b)\n    }\n}\n\n</code></pre>\n\n<p>It is a little more code than I'd hoped but it seems fine.</p>\n"}], "owner": {"reputation": 342, "user_id": 3717022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d20e5f607fdba5b5097e087d32649835?s=128&d=identicon&r=PG", "display_name": "aztecrex", "link": "https://stackoverflow.com/users/3717022/aztecrex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 0, "accepted_answer_id": 55858345, "answer_count": 2, "score": 0, "last_activity_date": 1557323112, "creation_date": 1556227374, "last_edit_date": 1556230831, "question_id": 55857823, "link": "https://stackoverflow.com/questions/55857823/overflow-evaluating-the-requirement-when-trying-to-defer-associated-types", "title": "&quot;overflow evaluating the requirement&quot; when trying to defer associated types", "body": "<p>In Rust, I'm trying to defer types in order to test decoupled high-level logic. Ideally, I want to express the minimal relationship rules as type constraints on associated types. In this simplified example, the only critical relationship between the error types is that their values can be converted from low-level to high-level.</p>\n\n<p>While these relationships seem like they should terminate, the compiler faults with  \"overflow evaluating the requirement.\" I cannot determine if my type functions are flawed or if I am up against a known or unknown limitation in Rust. Example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait CapabilityA {\n    type Error;\n    fn perform_a(&amp;self) -&gt; Result&lt;String, Self::Error&gt;;\n}\n\npub trait CapabilityB {\n    type Error;\n    fn perform_b(&amp;self, a: &amp;str) -&gt; Result&lt;(), Self::Error&gt;;\n}\n\npub trait Application {\n    type Error;\n    fn go(&amp;self) -&gt; Result&lt;(), Self::Error&gt;;\n}\n\nimpl&lt;T&gt; Application for T\nwhere\n    T: CapabilityA + CapabilityB,\n    &lt;T as Application&gt;::Error: From&lt;&lt;T as CapabilityA&gt;::Error&gt; + From&lt;&lt;T as CapabilityB&gt;::Error&gt;,\n{\n    fn go(&amp;self) -&gt; Result&lt;(), Self::Error&gt; {\n        let a = self.perform_a()?;\n        let b = self.perform_b(&amp;a)?;\n        Ok(b)\n    }\n}\n</code></pre>\n\n<p>Compiler responds:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0275]: overflow evaluating the requirement `&lt;Self as Application&gt;::Error`\n  --&gt; src/lib.rs:11:1\n   |\n11 | / pub trait Application {\n12 | |     type Error;\n13 | |     fn go(&amp;self) -&gt; Result&lt;(), Self::Error&gt;;\n14 | | }\n   | |_^\n   |\n   = note: required because of the requirements on the impl of `Application` for `Self`\n</code></pre>\n"}, {"tags": ["types", "rust", "ownership"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1556225201, "post_id": 55856991, "comment_id": 98376036, "body": "Are you sure you have <code>HashMap&lt;String, Type&gt;</code> and not <code>HashMap&lt;String, &amp;Type&gt;</code>?"}, {"owner": {"reputation": 180, "user_id": 5218118, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/712c19ee522b71854d1e6d2d7d2639be?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Ludvigsen", "link": "https://stackoverflow.com/users/5218118/peter-ludvigsen"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1556225763, "post_id": 55856991, "comment_id": 98376261, "body": "@BenjaminLindley Yes. I have updated the question"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 3, "creation_date": 1556226145, "post_id": 55856991, "comment_id": 98376405, "body": "Then we&#39;ll need to see a <a href=\"https://stackoverflow.com/help/mcve\">complete example</a>."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1556260304, "post_id": 55856991, "comment_id": 98384259, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=36d425eb43f143cab1765d0bff8370ae\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> compiles for me; I don&#39;t see a relevant difference to your code. As a side note, that <code>map</code> can be written as <code>cloned()</code>."}, {"owner": {"reputation": 180, "user_id": 5218118, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/712c19ee522b71854d1e6d2d7d2639be?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Ludvigsen", "link": "https://stackoverflow.com/users/5218118/peter-ludvigsen"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556262408, "post_id": 55856991, "comment_id": 98385168, "body": "@Stargateur I have added a minimal example."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556264154, "post_id": 55856991, "comment_id": 98386051, "body": "You are currently cloning a reference cause your types doesn&#39;t implement <code>Clone</code>, with <code>cloned()</code> you would have a error compile but you don&#39;t cause well, sometime compile is helping too much, <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bb839420ad821fb4b37675dbd07aecae\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}, {"owner": {"reputation": 180, "user_id": 5218118, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/712c19ee522b71854d1e6d2d7d2639be?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Ludvigsen", "link": "https://stackoverflow.com/users/5218118/peter-ludvigsen"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1556265247, "post_id": 55856991, "comment_id": 98386555, "body": "@Stargateur Thank you a lot. You are welcome to write that as an answer."}], "owner": {"reputation": 180, "user_id": 5218118, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/712c19ee522b71854d1e6d2d7d2639be?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Ludvigsen", "link": "https://stackoverflow.com/users/5218118/peter-ludvigsen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "closed_date": 1556371597, "answer_count": 0, "score": 0, "last_activity_date": 1556262702, "creation_date": 1556223364, "last_edit_date": 1556262702, "question_id": 55856991, "link": "https://stackoverflow.com/questions/55856991/convert-from-hashmapstring-type-to-type", "closed_reason": "Duplicate", "title": "Convert from HashMap&lt;String, Type&gt; to &amp;[Type]", "body": "<p>I am yet another beginner in Rust who have trouble converting between my types. It boils down to that I have a <code>HashMap&lt;String, Type&gt;</code> and <code>&amp;[Type]</code> as input to another function.</p>\n\n<p>The doesn't need to be fast or efficient, so an elegant solution is preferred to an efficient one.</p>\n\n<p>My HashMap is in the variable called \"parsed_result\" and I've tried to convert it like this:</p>\n\n<pre><code>let mut secs: Vec&lt;_&gt; = parsed_result.values().map(|ms|ms.clone()).collect();\nlet mem_map = mem_planner::plan1(&amp;secs);\n</code></pre>\n\n<p>However, I only get the following compile error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src\\main.rs:17:38\n   |\n17 |     let mem_map = mem_planner::plan1(&amp;secs);\n   |                                      ^^^^^ expected slice, found struct `std::vec::Vec`\n   |\n   = note: expected type `&amp;[map_parser::MemorySection]`\n              found type `&amp;std::vec::Vec&lt;&amp;map_parser::MemorySection&gt;`\n</code></pre>\n\n<p>I do understand the error, but I have no idea to do the required transformation.</p>\n\n<p>If I just call the function with \u00b4parsed_result\u00b4 I get this error (should show the type of `parsed_result\u00b4)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src\\main.rs:24:38\n   |\n24 |     let mem_map = mem_planner::plan1(parsed_result);\n   |                                      ^^^^^^^^^^^^^ expected reference, found struct `std::collections::HashMap`\n   |\n   = note: expected type `&amp;[map_parser::MemorySection]`\n              found type `std::collections::HashMap&lt;std::string::String, map_parser::MemorySection&gt;`\n</code></pre>\n\n<p><strong>Minimal working example:</strong></p>\n\n<p>mem_parser.rs</p>\n\n<pre><code>use std::collections::HashMap;\n\npub struct MemoryObject {\n    name: String,\n    size: usize,\n}\n\npub struct MemorySection {\n    pub name: String,\n    pub size: usize,\n    pub objs: Vec&lt;MemoryObject&gt;,\n}\n\npub type MemMap = HashMap&lt;String, MemorySection&gt;;\n\npub fn parse() -&gt; MemMap {\n    let mut memory_sections = HashMap::new();\n\n    let section_name = \"key\".to_string();\n    let section_val = MemorySection {name: \"readable name\".to_string(), size: 10, objs: Vec::new() };\n\n    memory_sections.insert(section_name, section_val);\n\n    memory_sections\n\n}\n</code></pre>\n\n<p>main.rs</p>\n\n<pre><code>mod mem_parser;\n\nfn main() {\n\n    let parsed_result = mem_parser::parse();\n\n    let mut secs: Vec&lt;_&gt; = parsed_result.values().map(|ms| ms.clone()).collect();\n    let mem_map = plan1(&amp;secs);\n}\n\nfn plan1(objects: &amp;[mem_parser::MemorySection]) -&gt; () {\n    println!(\"Test\");\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 1, "creation_date": 1556220370, "post_id": 55856247, "comment_id": 98374052, "body": "It may be easier to generate a dynamic library and then link that in."}, {"owner": {"reputation": 342, "user_id": 5249205, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/f67119fe8c00d0533f1916962740a809?s=128&d=identicon&r=PG&f=1", "display_name": "Skarlett", "link": "https://stackoverflow.com/users/5249205/skarlett"}, "reply_to_user": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 0, "creation_date": 1556220649, "post_id": 55856247, "comment_id": 98374181, "body": "Yeah that maybe my approach if no one can figure this out."}, {"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 0, "creation_date": 1556222968, "post_id": 55856247, "comment_id": 98375211, "body": "Not sure how you allocate an executable memory page in Rust, but <a href=\"https://stackoverflow.com/questions/40936534/how-to-alloc-a-executable-memory-buffer\">examples in C++</a> show it&#39;s an operating-system specific thing. If Rust had this feature it&#39;d probably require surrounding it in <code>super_duper_unsafe { ... }</code>"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 7, "last_activity_date": 1556240062, "creation_date": 1556240062, "answer_id": 55859398, "question_id": 55856247, "link": "https://stackoverflow.com/questions/55856247/how-to-execute-raw-instructions-from-a-memory-buffer-in-rust/55859398#55859398", "title": "How to execute raw instructions from a memory buffer in Rust?", "body": "<p>Use <a href=\"https://doc.rust-lang.org/stable/std/mem/fn.transmute.html\" rel=\"noreferrer\"><code>mem::transmute</code></a> to cast a raw pointer to a function pointer type.</p>\n\n<pre><code>use std::mem;\n\nlet func: unsafe extern \"C\" fn() = mem::transmute(map.data());\nfunc();\n</code></pre>\n"}], "owner": {"reputation": 342, "user_id": 5249205, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/f67119fe8c00d0533f1916962740a809?s=128&d=identicon&r=PG&f=1", "display_name": "Skarlett", "link": "https://stackoverflow.com/users/5249205/skarlett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 855, "favorite_count": 2, "accepted_answer_id": 55859398, "answer_count": 1, "score": 4, "last_activity_date": 1556405732, "creation_date": 1556219895, "last_edit_date": 1556405732, "question_id": 55856247, "link": "https://stackoverflow.com/questions/55856247/how-to-execute-raw-instructions-from-a-memory-buffer-in-rust", "title": "How to execute raw instructions from a memory buffer in Rust?", "body": "<p>I'm attempting to make a buffer of memory executable, then execute it in Rust. I've gotten all the way until I need to cast the raw executable bytes as code/instructions. You can see a <strong>working example</strong> in C below.</p>\n\n<p>Extra details:</p>\n\n<ul>\n<li>Rust 1.34</li>\n<li>Linux</li>\n<li>CC 8.2.1</li>\n</ul>\n\n<pre class=\"lang-c prettyprint-override\"><code>unsigned char code[] = {\n0x55,                           //    push   %rbp\n0x48, 0x89, 0xe5,               //    mov    %rsp,%rbp\n0xb8, 0x37, 0x00, 0x00, 0x00,   //    mov    $0x37,%eax\n0xc9,                           //    leaveq\n0xc3                            //    retq\n};\n\n\nvoid reflect(const unsigned char *code) {\n  void *buf;\n\n  /* copy code to executable buffer */    \n  buf = mmap(0, sizeof(code), PROT_READ|PROT_WRITE|PROT_EXEC,MAP_PRIVATE|MAP_ANON,-1,0);\n  memcpy(buf, code, sizeof(code));\n\n  ((void (*) (void))buf)();\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate mmap;\n\nuse mmap::{MapOption, MemoryMap};\n\nunsafe fn reflect(instructions: &amp;[u8]) {\n    let map = MemoryMap::new(\n        instructions.len(),\n        &amp;[\n            MapOption::MapAddr(0 as *mut u8),\n            MapOption::MapOffset(0),\n            MapOption::MapFd(-1),\n            MapOption::MapReadable,\n            MapOption::MapWritable,\n            MapOption::MapExecutable,\n            MapOption::MapNonStandardFlags(libc::MAP_ANON),\n            MapOption::MapNonStandardFlags(libc::MAP_PRIVATE),\n        ],\n    )\n    .unwrap();\n\n    std::ptr::copy(instructions.as_ptr(), map.data(), instructions.len());\n    // How to cast into extern \"C\" fn() ?\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1556212938, "post_id": 55854498, "comment_id": 98370681, "body": "&quot;byte literal&quot; is not a type, you most likely mean <code>u8</code>. Also, how do you expect to convert <code>10000</code> to a byte?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1556215043, "post_id": 55854498, "comment_id": 98371632, "body": "I suspect you want to convert the integer to <code>&amp;[u8]</code> or <code>[u8; n]</code> in either big endian or little endian byte order, but without further information it&#39;s impossible to tell."}, {"owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "edited": false, "score": 0, "creation_date": 1556226442, "post_id": 55854498, "comment_id": 98376520, "body": "Thanks for clarifying."}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1556215112, "post_id": 55854964, "comment_id": 98371660, "body": "<code>&#39;f&#39;</code> is a <i>character literal</i> and has type <code>char</code>. A byte literal would be <code>b&#39;f&#39;</code> of type &#39;u8&#39;."}, {"owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1556226425, "post_id": 55854964, "comment_id": 98376512, "body": "Thanks for the explanation @SvenMarnach. This was not clear to me."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 4, "last_activity_date": 1556215104, "last_edit_date": 1556215104, "creation_date": 1556214257, "answer_id": 55854964, "question_id": 55854498, "link": "https://stackoverflow.com/questions/55854498/how-to-convert-an-integer-to-byte-literal-in-rust/55854964#55854964", "title": "How to convert an integer to byte literal in Rust?", "body": "<p>A <code>byte literal</code> is something like <code>b'f'</code>, a literal value written down. You probably mean a <code>byte</code>, which is usually a <code>u8</code>, sometimes an <code>i8</code>. You can use the <code>TryFrom</code>-trait on recent rust:</p>\n\n<pre><code>use std::convert::TryFrom;\n\nfn main() {\n    for i in 253..257 {\n        let u = u8::try_from(i).expect(\"Not all integers can be represented via u8\");\n        println!(\"{}\", u);\n    }\n}\n</code></pre>\n\n<p><code>u</code> inside the loop is an <code>u8</code>. The code will print 253, 254, 255 and crash on the iteration where <code>i</code> becomes larger than what a <code>u8</code> can represent.</p>\n"}], "owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 294, "favorite_count": 0, "closed_date": 1556371050, "accepted_answer_id": 55854964, "answer_count": 1, "score": -4, "last_activity_date": 1556215104, "creation_date": 1556212371, "question_id": 55854498, "link": "https://stackoverflow.com/questions/55854498/how-to-convert-an-integer-to-byte-literal-in-rust", "closed_reason": "Duplicate", "title": "How to convert an integer to byte literal in Rust?", "body": "<p>I am trying to convert an integer to byte literal in Rust:</p>\n\n<pre><code>for x in 0..10000 {\n  let key = x.to_???;\n  other_function(key);\n}\n</code></pre>\n\n<p>Could not find it in the docs.</p>\n"}, {"tags": ["rust", "stack-overflow"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1556203495, "post_id": 55851607, "comment_id": 98365742, "body": "I think the closest you can get is using <a href=\"https://github.com/japaric/cargo-call-stack\" rel=\"nofollow noreferrer\">cargo-call-stack</a> by japaric. But I&#39;m not sure if you can detect it with that."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1556204476, "post_id": 55851607, "comment_id": 98366409, "body": "Stack size is not necessarily known at compile time, so static detection is impossible in the general case (equivalent to the halting problem, I&#39;m 99% sure)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1556206336, "post_id": 55851607, "comment_id": 98367498, "body": "@trentcl: Well, actually... a number of embedded coding standards will specifically forbid recursion (and pointer-to-function calls) specifically to be able to determine the full call graph and infer the maximum stack size from there (though the analysis is performed on the assembly). It can even be possible to use recursion if you can prove that there is a bound on the number of recursive calls -- passing a &quot;steps&quot; integer if necessary to guarantee it -- in some coding standards. All those are simple, practical work-arounds around the halting problem."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1556206375, "post_id": 55851607, "comment_id": 98367519, "body": "I guess this is the time where we should speak about the <code>become</code> keyword, and its possible use to guarantee tail-recursion in the future..."}], "owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 109, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1556371443, "creation_date": 1556202208, "last_edit_date": 1556371443, "question_id": 55851607, "link": "https://stackoverflow.com/questions/55851607/can-rust-detect-a-possible-stack-overflow-at-compile-time", "title": "Can Rust detect a possible stack overflow at compile time?", "body": "<p>Can Rust detect a possible stack overflow at compile time? I found it can optimize tail recursion, but a generic recursion causes runtime error:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn rec(mut i: i32) {\n    i = i - 1;\n    if i &gt; 0 {\n        rec(i);\n    }\n    println!(\"{}\", i);\n}\n\nfn main() {\n    rec(100000000);\n}\n</code></pre>\n"}, {"tags": ["rust", "semantics", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1556197782, "post_id": 55849717, "comment_id": 98361935, "body": "tl;dr: the <code>self</code> borrow you take to call <code>foo</code> or <code>foo_mut</code> doesn&#39;t need to have the lifetime <code>&#39;a</code>. It works with <code>foo</code> because of variance, but the best solution is to just omit the unnecessary lifetime. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=665375c90b23715af61de84ea4804bc6\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1556198943, "post_id": 55849717, "comment_id": 98362758, "body": "If you want to dig deep into the reasons behind those semantics, take a look at <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html\" rel=\"nofollow noreferrer\">the variance of both reference kinds</a>. In particular, <code>&amp;mut T</code> is <i>invariant</i> over <code>T</code>, while <code>&amp;T</code> is <i>covariant</i> over <code>T</code>. This means that the compiler is forced to borrow <code>t</code> for the full lifetime <code>&#39;a</code> in <code>test1</code>. In <code>test2</code>, the compiler is allowed to shorten the lifetime (because of the covariance) so that the borrow is shorter."}], "owner": {"reputation": 1302, "user_id": 2491528, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/723f1b1cb73fa871f360bdea9bd17a8a?s=128&d=identicon&r=PG", "display_name": "Federico", "link": "https://stackoverflow.com/users/2491528/federico"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1556198734, "answer_count": 0, "score": 3, "last_activity_date": 1556197365, "creation_date": 1556196625, "last_edit_date": 1556197365, "question_id": 55849717, "link": "https://stackoverflow.com/questions/55849717/why-does-adding-mut-to-a-method-signature-causes-the-borrow-to-last-longer", "closed_reason": "Duplicate", "title": "Why does adding `mut` to a method signature causes the borrow to last longer?", "body": "<p>Consider the following program. The particularity is that the signature of <code>foo</code> and <code>foo_mut</code> require <code>self</code> to be borrowed for the lifetime <code>'a</code>, which is also the type parameter of <code>T&lt;'a&gt;</code> in the functions <code>test1&lt;'a&gt;</code> and <code>test2&lt;'a&gt;</code>.</p>\n\n<p><code>test2</code> compiles fine, but <code>test1</code> fails to compile. Why? Don't they have the same lifetime semantics? I expect both the functions to be rejected, because both <code>t.foo()</code> and <code>t.foo_mut()</code> should borrow <code>t</code> for <code>'a</code>, thus until the end of <code>test1</code> and <code>test2</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct T&lt;'a&gt;(&amp;'a u32);\n\nimpl&lt;'a&gt; T&lt;'a&gt; {\n    fn foo(&amp;'a self) {}\n    fn foo_mut(&amp;'a mut self) {}\n\n    fn bar_mut(&amp;mut self) {}\n}\n\nfn test1&lt;'a&gt;(mut t: T&lt;'a&gt;) {\n    t.foo_mut();\n    // The following call is rejected because `t` is still borrowed.\n    t.bar_mut();\n}\n\nfn test2&lt;'a&gt;(mut t: T&lt;'a&gt;) {\n    t.foo();\n    // The following call is allowed; it seems that `t` is not borrowed.\n    t.bar_mut();\n}\n\nfn main() {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `t` does not live long enough\n  --&gt; src/main.rs:11:5\n   |\n10 | fn test1&lt;'a&gt;(mut t: T&lt;'a&gt;) {\n   |          -- lifetime `'a` defined here\n11 |     t.foo_mut();\n   |     ^----------\n   |     |\n   |     borrowed value does not live long enough\n   |     argument requires that `t` is borrowed for `'a`\n...\n14 | }\n   | - `t` dropped here while still borrowed\n\nerror[E0499]: cannot borrow `t` as mutable more than once at a time\n  --&gt; src/main.rs:13:5\n   |\n10 | fn test1&lt;'a&gt;(mut t: T&lt;'a&gt;) {\n   |          -- lifetime `'a` defined here\n11 |     t.foo_mut();\n   |     -----------\n   |     |\n   |     first mutable borrow occurs here\n   |     argument requires that `t` is borrowed for `'a`\n12 |     // The following call is rejected because `t` is still borrowed.\n13 |     t.bar_mut();\n   |     ^ second mutable borrow occurs here\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8ecc38bac4e96fe3937a70a6f138a55f\" rel=\"nofollow noreferrer\">Link to Rust Playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1556195431, "post_id": 55849295, "comment_id": 98360468, "body": "Please dont use <code>_time</code> because <code>_</code> as prefix indicates, that that variable is not used, but you actually use that variable, so instead name it <code>time</code>."}, {"owner": {"reputation": 1809, "user_id": 4274475, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/b7d37b7f022503a0869af7bb8c2ace16?s=128&d=identicon&r=PG&f=1", "display_name": "Mr.Smithyyy", "link": "https://stackoverflow.com/users/4274475/mr-smithyyy"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556195556, "post_id": 55849295, "comment_id": 98360520, "body": "@hellow Believe it or not I originally had <code>time</code> but the compiler yelled at me to change it to <code>_time</code> and I couldn&#39;t find out a reason why."}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 5, "last_activity_date": 1556371404, "last_edit_date": 1556371404, "creation_date": 1556195571, "answer_id": 55849383, "question_id": 55849295, "link": "https://stackoverflow.com/questions/55849295/field-tv-sec-doesnt-exist-in-struct-systemtime/55849383#55849383", "title": "Field tv_sec doesn&#39;t exist in struct SystemTime", "body": "<p>You can't access <code>tv_sec</code> because that field is not public. This is called visibility and you can read about it in <a href=\"https://doc.rust-lang.org/1.30.0/book/second-edition/ch07-02-controlling-visibility-with-pub.html\" rel=\"nofollow noreferrer\">chapter 7.2 of the book</a>.</p>\n\n<p>You can only call public methods on <code>SystemTime</code> which can be found in the <a href=\"https://doc.rust-lang.org/std/time/struct.SystemTime.html\" rel=\"nofollow noreferrer\">API of <code>SystemTime</code></a>.</p>\n\n<hr>\n\n<p>The reason for the \"strange\" error message i, that although the debug representation suggests that it is a \"flat\" struct (e.g. it has two fields <code>tv_sec</code> and <code>tv_nsec</code>), <a href=\"https://doc.rust-lang.org/src/std/time.rs.html#119\" rel=\"nofollow noreferrer\">it is actually a tuple struct</a>, which means you have to call <code>.0</code> to get the inner field which then will result in the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0616]: field `0` of struct `std::time::SystemTime` is private\n  --&gt; src/main.rs:10:22\n   |\n10 |     println!(\"{:?}\", time.0);\n   |                      ^^^^^^\n</code></pre>\n\n<p>This is done to abstract over different OS; Windows handles the time differently than Unix, for example. </p>\n\n<hr>\n\n<p>If you want to get the \"age\" in seconds you can convert it to a <a href=\"https://doc.rust-lang.org/std/time/struct.Duration.html\" rel=\"nofollow noreferrer\"><code>Duration</code></a> by using <a href=\"https://doc.rust-lang.org/std/time/struct.SystemTime.html#method.elapsed\" rel=\"nofollow noreferrer\"><code>SystemTime::elapsed</code></a> which will give you back <code>Duration</code> where you can get the seconds by using <a href=\"https://doc.rust-lang.org/std/time/struct.Duration.html#method.as_secs\" rel=\"nofollow noreferrer\"><code>Duration::as_secs</code></a>.</p>\n"}], "owner": {"reputation": 1809, "user_id": 4274475, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/b7d37b7f022503a0869af7bb8c2ace16?s=128&d=identicon&r=PG&f=1", "display_name": "Mr.Smithyyy", "link": "https://stackoverflow.com/users/4274475/mr-smithyyy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 229, "favorite_count": 0, "accepted_answer_id": 55849383, "answer_count": 1, "score": 1, "last_activity_date": 1556371404, "creation_date": 1556195238, "last_edit_date": 1556371309, "question_id": 55849295, "link": "https://stackoverflow.com/questions/55849295/field-tv-sec-doesnt-exist-in-struct-systemtime", "title": "Field tv_sec doesn&#39;t exist in struct SystemTime", "body": "<p>I'm attempting to get the last time a file was modified but I am getting an error of field not found.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{fs, io, time};\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let metadata = fs::metadata(\"foo.txt\")?;\n    let _time: time::SystemTime = metadata.modified().unwrap();\n    let last_modified = _time.tv_sec;\n\n    println!(\"{:?}\", last_modified);\n    Ok(())\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0609]: no field `tv_sec` on type `std::time::SystemTime`\n --&gt; src/main.rs:6:31\n  |\n6 |     let last_modified = _time.tv_sec;\n  |                               ^^^^^^ unknown field\n</code></pre>\n\n<p>I have also tried using the result without unwrapping but then I get to the same point where I want to access the <code>tv_sec</code> field of the struct.</p>\n\n<p>As a reference before unwrapping the result is <code>Ok(SystemTime { tv_sec: 000, tv_nsec: 000 })</code> and after unwrapping it is just <code>SystemTime { tv_sec: 000, tv_nsec: 000 })</code>.</p>\n\n<p>I am very new to Rust but I have combed the docs and from the docs it seems I should be able to access the field of the <code>SystemTime</code> struct like that.</p>\n"}, {"tags": ["java", "dll", "rust", "java-native-interface"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556194262, "post_id": 55848950, "comment_id": 98359729, "body": "I reduced the code, because you only call <code>getDifferenceInAngleDegrees</code> so the rest is not needed here. Please comment or rollback if you feel different."}, {"owner": {"reputation": 51929, "user_id": 1524450, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BSzDV.png?s=128&g=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/1524450/michael"}, "edited": false, "score": 0, "creation_date": 1556194315, "post_id": 55848950, "comment_id": 98359768, "body": "It looks like your Rust functions are missing the Java class name. That is, <code>_Java_test_getDifferenceInAngleDegrees</code> etc."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1556194515, "post_id": 55848950, "comment_id": 98359890, "body": "Have you looked at <a href=\"https://docs.rs/jni/0.12.0/jni/\" rel=\"nofollow noreferrer\">docs.rs/jni/0.12.0/jni</a> ?"}, {"owner": {"reputation": 51929, "user_id": 1524450, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BSzDV.png?s=128&g=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/1524450/michael"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1556194536, "post_id": 55848950, "comment_id": 98359899, "body": "@hellow: Native functions referenced from Java need to be named in a specific manner: <i>&quot;A native method name is concatenated from the following components:  * the prefix Java_ * a mangled fully-qualified class name * an underscore (\u201c_\u201d) separator * a mangled method name * for overloaded native methods, two underscores (\u201c__\u201d) followed by the mangled argument signature&quot;</i>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1556194555, "post_id": 55848950, "comment_id": 98359909, "body": "How do you compile the Rust code? If you call <code>rustc</code> directly, can you show your command-line? If instead you use cargo, can you show your <code>Cargo.toml</code>?"}, {"owner": {"reputation": 51, "user_id": 11410466, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-UCTL0Rm-mQ4/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcFk8PjAH-pPRb43WyDkuNSCvj6rw/mo/photo.jpg?sz=128", "display_name": "Eadyn Thompson", "link": "https://stackoverflow.com/users/11410466/eadyn-thompson"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1556212018, "post_id": 55848950, "comment_id": 98370269, "body": "@hellow Hey, I&#39;ve tried all of the suggestions, but none of them seem to work. I&#39;m just compiling this through cargo build --release, and the cargo.toml contents was edited into the post. If you have any more suggestions, or have a specific plan in mind for implementation, that would be extremely helpful. Thanks!"}, {"owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "edited": false, "score": 0, "creation_date": 1556223688, "post_id": 55848950, "comment_id": 98375475, "body": "Try to run you app with <code>LD_DEBUG=all</code> or <code>LD_DEBUG=symbols</code> environmet variable. If the LD_DEBUG variable is set then the Linux dynamic linker will dump debug information which can be used to resolve most loading problems very quickly. (but linux only...)"}, {"owner": {"reputation": 199, "user_id": 1792188, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/425632da3fcfb0df5268a6d94fcadad9?s=128&d=identicon&r=PG", "display_name": "Dmitry Timofeev", "link": "https://stackoverflow.com/users/1792188/dmitry-timofeev"}, "edited": false, "score": 1, "creation_date": 1556570993, "post_id": 55848950, "comment_id": 98476496, "body": "As Michael mentioned, the native method name in native must have a certain format (no leading underscore as in the code currently).   Have you tried using the javac to produce a C header file with a proper signature: <code>javac -h . test.java</code>? You can just copy the method name from it."}, {"owner": {"reputation": 199, "user_id": 1792188, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/425632da3fcfb0df5268a6d94fcadad9?s=128&d=identicon&r=PG", "display_name": "Dmitry Timofeev", "link": "https://stackoverflow.com/users/1792188/dmitry-timofeev"}, "edited": false, "score": 0, "creation_date": 1556571049, "post_id": 55848950, "comment_id": 98476517, "body": "Also see the example in the library repository: <a href=\"https://github.com/jni-rs/jni-rs/blob/v0.12.1/example/mylib/src/lib.rs#L26\" rel=\"nofollow noreferrer\">github.com/jni-rs/jni-rs/blob/v0.12.1/example/mylib/src/&hellip;</a>"}], "owner": {"reputation": 51, "user_id": 11410466, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-UCTL0Rm-mQ4/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcFk8PjAH-pPRb43WyDkuNSCvj6rw/mo/photo.jpg?sz=128", "display_name": "Eadyn Thompson", "link": "https://stackoverflow.com/users/11410466/eadyn-thompson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 261, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1556196237, "creation_date": 1556194009, "last_edit_date": 1556196237, "question_id": 55848950, "link": "https://stackoverflow.com/questions/55848950/loading-rust-code-in-java-java-lang-unsatisfiedlinkerror", "title": "Loading Rust Code in Java, java.lang.UnsatisfiedLinkError:", "body": "<p>I have been learning rust over the past few weeks, and I think I reached a level of comfort with the language. For one of my personal projects, I'm having trouble calling rust code(compiled into a dll) from java.</p>\n\n<p>Here is what I have currently for the rust code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::f64;\nuse std::any::Any;\n\n#[no_mangle]\npub extern fn _Java_getDifferenceInAngleDegrees(env: *const (), jclass: *const (),from: f64, to: f64) -&gt; f64 {\n    let mut angle = to - from;\n    // Naive algorithm\n    while (angle &gt;= 180.0) {\n        angle -= 360.0;\n    }\n    while (angle &lt; -180.0) {\n        angle += 360.0;\n    }\n    angle\n}\n\nfn main() {\n    println!(\"a\");\n}\n</code></pre>\n\n<p>And here is how I try to load it in java</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>import java.io.File;\n\npublic class test{\n    public static native double getDifferenceInAngleDegrees(double from, double to);        \n\n    public static void main(String[] args) {\n        File f = new File(\"rustMath.dll\");\n        System.load(f.getAbsolutePath());\n        System.out.println(test.getDifferenceInAngleDegrees(120.0, 119.0));\n    }\n}\n</code></pre>\n\n<p>The error I get is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Exception in thread \"main\" java.lang.UnsatisfiedLinkError: test.getDifferenceInAngleDegrees(DD)D\n        at test.getDifferenceInAngleDegrees(Native Method)\n        at test.main(test.java:17)\n</code></pre>\n\n<p>Cargo.toml</p>\n\n<pre><code>[package]\nname = \"rustMath\"\nversion = \"0.1.0\"\nauthors = [\"22ethompson\"]\nedition = \"2018\"\n\n[lib]\ncrate-type = [\"cdylib\"]\npath = \"src/main.rs\"\n\n[profile.release]\nlto = true\n\n[dependencies]\njni = \"0.10.2\"\n</code></pre>\n"}]