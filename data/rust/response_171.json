[{"tags": ["rust", "ownership-semantics"], "answers": [{"comments": [{"owner": {"reputation": 26618, "user_id": 1283394, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6d7d7689f9562293f6106353a6b1a905?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1283394/stefan"}, "edited": false, "score": 0, "creation_date": 1524090105, "post_id": 49909810, "comment_id": 86835669, "body": "Do you have an example where pointer-equality cannot be preserved?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1524090348, "last_edit_date": 1524090348, "creation_date": 1524089731, "answer_id": 49909810, "question_id": 49909664, "link": "https://stackoverflow.com/questions/49909664/why-does-the-rust-book-present-assigning-a-variable-to-another-as-copying-the-to/49909810#49909810", "title": "Why does the Rust book present assigning a variable to another as copying the top-level structure?", "body": "<blockquote>\n  <p>Why is it presented that way </p>\n</blockquote>\n\n<p>Because that's a very close (if not exact) way of modeling Rust's ownership and moving semantics.</p>\n\n<blockquote>\n  <p>Would this alternate presentation result in a visible difference in semantics</p>\n</blockquote>\n\n<p>Yes. Rust's current semantics indicate that when a variable is moved, there's no guarantee that it remains at the same address. Your alternate presentation would suggest to readers that the address is <em>guaranteed</em> to be the same (\"because the picture told me so!\").</p>\n\n<p>This cannot be the case for every move, so it's not worth teaching people misleading semantics. It's hard to pinpoint specifics, but cases I'd expect to have a <em>higher</em> chance of the value moving:</p>\n\n<ul>\n<li>Transferring them across threads</li>\n<li>Returning values from a function \u2014 although (Named) Return Value Optimization can prevent this.</li>\n<li>When the value is \"very small\" \u2014 it's cheaper to copy it than to dereference memory.</li>\n</ul>\n\n<blockquote>\n  <p>why would the implementation make such a copy operation?</p>\n</blockquote>\n\n<p>The <strong>implementation</strong> doesn't necessarily make a copy. While the <strong>semantics</strong> provide no guarantee that the address stays the same, they also don't enforce that it <em>must</em> change. In fact, the optimizer spends time attempting to minimize all sorts of needless copies where it can. The particular example in question is extremely likely to not involve any copies.</p>\n"}], "owner": {"reputation": 26618, "user_id": 1283394, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/6d7d7689f9562293f6106353a6b1a905?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1283394/stefan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1524090348, "creation_date": 1524088879, "last_edit_date": 1524089916, "question_id": 49909664, "link": "https://stackoverflow.com/questions/49909664/why-does-the-rust-book-present-assigning-a-variable-to-another-as-copying-the-to", "title": "Why does the Rust book present assigning a variable to another as copying the top-level structure?", "body": "<p>In the <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-01-what-is-ownership.html\" rel=\"nofollow noreferrer\">section on ownership in <em>The Rust Programming Language</em></a>, <code>String</code>s are represented as a structure with 3 fields (with one of the 3 fields being a pointer to the actual byte vector). There is an example:</p>\n\n<pre><code>let s1 = String::from(\"hello\");\nlet s2 = s1;\n</code></pre>\n\n<p>The book explains this as copying the 3-field structure contained in <code>s1</code> to <code>s2</code> (but not the byte-vector) and then marking the structure contained in <code>s1</code> as \"invalid\" (figure 4-4).</p>\n\n<p>Why is it presented that way instead of presenting <code>s2</code> as pointing to the same top-level structure as <code>s1</code> and then marking <code>s1</code> as \"invalid\"?</p>\n\n<p>Would this alternate presentation result in a visible difference in semantics (or would it even cause problems)?  If not, is it because it better reflects the underlying implementation?  And if so, why would the implementation make such a copy operation?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1524086298, "post_id": 49909018, "comment_id": 86834201, "body": "There are <a href=\"https://stackoverflow.com/search?q=%22Borrowed+value+does+not+live+long+enough%22+is%3Aq\"><b>38</b> other questions with this exact error message</a>. The answerers who contribute to Stack Overflow do so with the intent that people in the future will actually <i>look</i> at those answers so we can stop answering the same question over and over. This question doesn&#39;t demonstrate the basic level of research effort of having looked at <i>any</i> of the questions that have already been asked."}, {"owner": {"reputation": 1789, "user_id": 4056372, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/285fed6a5df00f048a00732292105729?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/4056372/andrew"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1524087636, "post_id": 49909018, "comment_id": 86834772, "body": "Done, added playground and the error. I have to say though: I actually watched a couple of those questions, none of them seem to explained the issue really. And if there are 38 other questions like this, it seems like there&#39;s a reason for that. :)"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1524087814, "post_id": 49909018, "comment_id": 86834842, "body": "The borrow system is to prevent you from referencing memory that has gone out of scope. With your return type <code>Result&lt;Xyz&lt;&#39;a&gt;, &amp;&#39;a str&gt;</code>, what scope are you expecting that <code>&amp;str</code> to be from? It can&#39;t be from the function body, because the function has gone out of scope by then."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1524088281, "post_id": 49909018, "comment_id": 86835039, "body": "Also in the future please heed the important if <i>minimal</i> in the request above. Your code still reproduces the error with just <a href=\"https://play.rust-lang.org/?gist=6bfb81812716b0ea1fe3f0d68fae58f2&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 1789, "user_id": 4056372, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/285fed6a5df00f048a00732292105729?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/4056372/andrew"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1524088874, "post_id": 49909018, "comment_id": 86835260, "body": "@loganfsmyth I think I&#39;m starting to understand the problem. So if I&#39;m not mistaken an easy way to solve this would be to just simply return a <code>String</code>, instead of <code>&amp;str</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1524089451, "post_id": 49909714, "comment_id": 86835437, "body": "I&#39;m not sure the stripped-down reproduction is as helpful as it could be because it ignores the <code>?</code> operator which I think is causing part of the confusion, and ignores the rule-of-thumb that a returned reference must come from some input reference which is causing a different kind of confusion."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1524089499, "post_id": 49909714, "comment_id": 86835454, "body": "Then again, if the OP stripped down their own example we wouldn&#39;t have to guess where the confusion stems from..."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1524089565, "post_id": 49909714, "comment_id": 86835477, "body": "Fair point, that&#39;s certainly the downside of having to guess."}, {"owner": {"reputation": 1789, "user_id": 4056372, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/285fed6a5df00f048a00732292105729?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/4056372/andrew"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1524089727, "post_id": 49909714, "comment_id": 86835536, "body": "@turbulencetoo Well that&#39;s my stripped down version. My confusion was that - in the not stripped down version - both function (<code>new</code>\u02d9and <code>some_func</code> returned a global <code>&amp;&#39;static str</code> as Err, so I thought the compiler would know that the string would always exist. It seems like that&#39;s not how it works."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 1789, "user_id": 4056372, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/285fed6a5df00f048a00732292105729?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/4056372/andrew"}, "edited": false, "score": 0, "creation_date": 1524089852, "post_id": 49909714, "comment_id": 86835584, "body": "@Andrew Is the expectation that <code>some_func</code> will always return <code>Ok</code> or static <code>Err</code>? Your code would indeed work if you explicitly said <code>fn some_func(_val: &amp;mut String) -&gt; Result&lt;bool, &amp;&#39;static str&gt;</code> and thus it never risked returning a non-static string."}, {"owner": {"reputation": 1789, "user_id": 4056372, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/285fed6a5df00f048a00732292105729?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/4056372/andrew"}, "edited": false, "score": 0, "creation_date": 1524090261, "post_id": 49909714, "comment_id": 86835718, "body": "@loganfsmyth Oh my... even <code>Result&lt;bool, &amp;&#39;a str&gt;</code> worked. I actually kinda missed that. Thanks! Gotta get used to this. :) Still, what I don&#39;t understand is - in my stripped down version - why is it complaining about <code>qval</code> not living long enough? Shouldn&#39;t it say that the <code>Err</code> string that comes from <code>some_func</code> doesn&#39;t live long enough?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1524090396, "post_id": 49909714, "comment_id": 86835771, "body": "I updated my answer, see if that helps. Lifetime elision means that the <code>some_func</code> return lifetime is tied to the <code>_val</code> lifetime, thus tying the return value to <code>qval</code>."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1524096917, "post_id": 49909714, "comment_id": 86837476, "body": "This does a really good job of explaining the why&#39;s and the how&#39;s behind the most common case for this error, so it&#39;s a shame that the question is already at -2. If we could get this answer to turn up higher in the search results there might not be as many duplicates for this error message..."}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 4, "last_activity_date": 1524090593, "last_edit_date": 1524090593, "creation_date": 1524089171, "answer_id": 49909714, "question_id": 49909018, "link": "https://stackoverflow.com/questions/49909018/why-do-i-get-a-borrowed-value-does-not-live-long-enough-error-for-a-value-i-do/49909714#49909714", "title": "Why do I get a &quot;Borrowed value does not live long enough&quot; error for a value I don&#39;t need outside of a function?", "body": "<p>A trimmed down reproduction of your issue is</p>\n\n<pre><code>pub struct Xyz&lt;'a&gt; {\n    x: &amp;'a str\n}\n\nimpl&lt;'a&gt; Xyz&lt;'a&gt; {\n    pub fn new(_query: &amp;str) -&gt; Result&lt;Xyz&lt;'a&gt;, &amp;'a str&gt; {\n        let qval: String = String::new();\n\n        Err(&amp;qval)\n    }\n}\n</code></pre>\n\n<p>with the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `qval` does not live long enough\n  --&gt; src/main.rs:13:18\n   |\n13 |             Err(&amp;qval)\n   |                  ^^^^ borrowed value does not live long enough\n14 |         }\n   |         - borrowed value only lives until here\n</code></pre>\n\n<p>To understand this, I'd recommend taking a step back and thinking about what exactly your function is doing. You create a <code>String</code>, and then take a reference to it, and then return that reference.</p>\n\n<p>This is would be a classic case of <a href=\"https://cwe.mitre.org/data/definitions/416.html\" rel=\"nofollow noreferrer\">use-after-free</a>. From the standpoint of the language, the string no longer exists, so returning a reference to it does not make sense.</p>\n\n<p>Returning <code>&amp;str</code> <em>could</em> make sense, but only if you can guarantee that the <code>&amp;str</code> will only reference data that is still in scope, even after the function has returned. For instance, it would be valid to do <code>Err(&amp;query)</code> (or any subsection of <code>query</code>) <em>if</em> you adjust the function to be <code>fn new(query: &amp;'a str) -&gt;</code>, since then it is it is known that the return value lives as long as the input string.</p>\n\n<p>It is hard to tell from your example if that would be acceptable for usecase.</p>\n\n<p>The <em>simplest</em> would indeed be to return a <code>String</code> (or <code>Result&lt;Xyz&lt;'a&gt;, String&gt;&gt;</code> in your case, possibly with a <code>String</code> in the field for <code>Xyz</code> too). You could also consider returning something like a <a href=\"https://doc.rust-lang.org/beta/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\">Cow</a> which is <em>sometimes</em> a subsection of <code>query</code> or a static string, and <em>sometimes</em> a <code>String</code>.</p>\n\n<p>As a side-note, I'll also add that <code>Xyz::new(&amp;\"whatever=123\");</code> does not need the <code>&amp;</code> since it is already a reference. You can do</p>\n\n<pre><code>Xyz::new(\"whatever=123\");\n</code></pre>\n\n<p>just fine. Same for <code>&amp;\"\"</code>.</p>\n\n<blockquote>\n  <p>My confusion was that - in the not stripped down version - both function (<code>new</code> and <code>some_func</code> returned a global <code>&amp;'static str</code> as <code>Err</code>, so I thought the compiler would know that the string would always exist.</p>\n</blockquote>\n\n<p>This may be the core of the misunderstanding. When you declare</p>\n\n<pre><code>fn some_func(_val: &amp;mut String) -&gt; Result&lt;bool, &amp;str&gt; {\n</code></pre>\n\n<p>the <code>&amp;str</code> is not <code>'static</code>. Rust's <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-elision\" rel=\"nofollow noreferrer\">lifetime elision</a> logic means that this declaration will assume that the reference in the function argument and the reference in the return value have the same lifetime, meaning that what you've declared is</p>\n\n<pre><code>fn some_func&lt;'b&gt;(_val: &amp;'b mut String) -&gt; Result&lt;bool, &amp;'b str&gt; {\n</code></pre>\n\n<p>which triggers the error you are seeing. If you want it to be static, you'll need to say so, as</p>\n\n<pre><code>fn some_func(_val: &amp;mut String) -&gt; Result&lt;bool, &amp;'static str&gt; {\n</code></pre>\n\n<p>which would avoid the error, and require that <code>some_func</code> always returns a <code>'static</code> string.</p>\n"}], "owner": {"reputation": 1789, "user_id": 4056372, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/285fed6a5df00f048a00732292105729?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew", "link": "https://stackoverflow.com/users/4056372/andrew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 788, "favorite_count": 0, "accepted_answer_id": 49909714, "answer_count": 1, "score": 0, "last_activity_date": 1524090593, "creation_date": 1524085613, "last_edit_date": 1524088838, "question_id": 49909018, "link": "https://stackoverflow.com/questions/49909018/why-do-i-get-a-borrowed-value-does-not-live-long-enough-error-for-a-value-i-do", "title": "Why do I get a &quot;Borrowed value does not live long enough&quot; error for a value I don&#39;t need outside of a function?", "body": "<p>Why does this happen in this certain scenario? I'm new to Rust, read the 2nd edition book, but.. well, yeah, here I am. :)</p>\n\n<pre><code>fn main() {\n    Xyz::new(&amp;\"whatever=123\");\n}\n\npub struct Xyz&lt;'a&gt; {\n    x: &amp;'a str\n}\n\nimpl&lt;'a&gt; Xyz&lt;'a&gt; {\n    pub fn new(query: &amp;str) -&gt; Result&lt;Xyz&lt;'a&gt;, &amp;'a str&gt; {\n        let mut qkey: String = String::new();\n        let mut qval: String = String::new();\n\n        let mut is_key = true;\n        for (i, c) in query.chars().enumerate().skip(1) {\n            if c == '=' {\n                is_key = false;\n            } else if c == '&amp;' {\n                is_key = true;\n            } else if is_key {\n                qkey.push(c);\n            } else {\n                qval.push(c);\n            }\n\n            if c == '&amp;' || i == query.len() - 1 {\n                match qkey.as_ref() {\n                    \"whatever\" =&gt; {\n                        let _whatever = Xyz::some_func(&amp;mut qval)?;\n                    }\n                    _ =&gt; (),\n                }\n\n                qkey.clear();\n                qval.clear();\n            }\n        }\n        Ok(Xyz { \n            x: &amp;\"\"\n        })\n    }\n\n    fn some_func(_val: &amp;mut String) -&gt; Result&lt;bool, &amp;str&gt; {\n        Ok(true)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c72a34caabca57a1cf4b592d08df5d1a&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `qval` does not live long enough\n  --&gt; src/main.rs:29:61\n   |\n29 |                         let _whatever = Xyz::some_func(&amp;mut qval)?;\n   |                                                             ^^^^ borrowed value does not live long enough\n...\n41 |     }\n   |     - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 9:1...\n  --&gt; src/main.rs:9:1\n   |\n9  | impl&lt;'a&gt; Xyz&lt;'a&gt; {\n   | ^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I don't understand why the actual error happens. I know the note should help me understand the problem, but it doesn't. </p>\n\n<p>I don't need <code>qval</code> outside of this function, so why do I have to still keep it? Is there a conceptual error I made?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1524079562, "post_id": 49906483, "comment_id": 86830919, "body": "There&#39;s <a href=\"https://doc.rust-lang.org/book/second-edition/appendix-02-operators.html\" rel=\"nofollow noreferrer\">an entire appendix for all the symbols used in Rust</a>."}, {"owner": {"reputation": 6389, "user_id": 1291990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/698affa0b4beedb2f368e983e39af6a7?s=128&d=identicon&r=PG", "display_name": "Michael Dorst", "link": "https://stackoverflow.com/users/1291990/michael-dorst"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1524080415, "post_id": 49906483, "comment_id": 86831361, "body": "@Shepmaster whoa cool, thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 3176, "user_id": 1443496, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9261936847b5a31e15da6e86533d3de3?s=128&d=identicon&r=PG", "display_name": "Sean Allred", "link": "https://stackoverflow.com/users/1443496/sean-allred"}, "edited": false, "score": 0, "creation_date": 1558062120, "post_id": 49906536, "comment_id": 98984133, "body": "When I read <a href=\"https://doc.rust-lang.org/1.8.0/book/patterns.html#bindings\" rel=\"nofollow noreferrer\">the docs</a>, I think it finally clicked for me \u2013 but would I be correct in saying that pattern binding with <code>@</code> is shorthand for guards? E.g., <code>e if 1 &lt;= e &amp;&amp; e &lt;= 5</code>? Not saying the shorthand wouldn&#39;t be helpful / possibly make the source clearer (assuming the syntax is understood) \u2013 I just want to make sure I&#39;m not missing a use case of <code>@</code> in the spirit of &quot;what can you do with the <code>@</code> symbol&quot;."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "reply_to_user": {"reputation": 3176, "user_id": 1443496, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9261936847b5a31e15da6e86533d3de3?s=128&d=identicon&r=PG", "display_name": "Sean Allred", "link": "https://stackoverflow.com/users/1443496/sean-allred"}, "edited": false, "score": 2, "creation_date": 1558107474, "post_id": 49906536, "comment_id": 99004232, "body": "@SeanAllred That&#39;s certainly one way to look at it. In the examples I gave, you&#39;d basically be correct. The only thing I&#39;d mention is that patterns can be nested and <code>@</code> let&#39;s you bind different parts of a structure to various names: <code>a @ Some(p @ Point { x = 5, .. })</code> now <code>a</code> has type <code>Option&lt;Point&gt;</code> and <code>p</code> has type <code>Point</code>."}], "tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": true, "score": 20, "last_activity_date": 1524079470, "last_edit_date": 1524079470, "creation_date": 1524075751, "answer_id": 49906536, "question_id": 49906483, "link": "https://stackoverflow.com/questions/49906483/what-does-the-symbol-do-in-rust/49906536#49906536", "title": "What does the &#39;@&#39; symbol do in Rust?", "body": "<p>You can use the <code>@</code> symbol to bind a pattern to a name. As the <a href=\"https://doc.rust-lang.org/reference/expressions/match-expr.html\" rel=\"noreferrer\">Rust Reference demonstrates</a>:</p>\n\n<pre><code>let x = 1;\n\nmatch x {\n    e @ 1 ... 5 =&gt; println!(\"got a range element {}\", e),\n    _ =&gt; println!(\"anything\"),\n}\n</code></pre>\n\n<p>Assignments in Rust <a href=\"https://doc.rust-lang.org/book/second-edition/ch18-01-all-the-places-for-patterns.html#let-statements\" rel=\"noreferrer\">allow pattern expressions</a> (provided they are complete) and <a href=\"https://doc.rust-lang.org/book/second-edition/ch18-01-all-the-places-for-patterns.html#function-parameters\" rel=\"noreferrer\">argument lists are no exception</a>. In the specific case of <code>@</code>, this isn't very useful because you can already name the matched parameter. However, for completeness, here is an example which compiles:</p>\n\n<pre><code>enum MyEnum {\n    TheOnlyCase(u8),\n}\n\nfn my_fn(x @ MyEnum::TheOnlyCase(_): MyEnum) {}\n</code></pre>\n"}], "owner": {"reputation": 6389, "user_id": 1291990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/698affa0b4beedb2f368e983e39af6a7?s=128&d=identicon&r=PG", "display_name": "Michael Dorst", "link": "https://stackoverflow.com/users/1291990/michael-dorst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2891, "favorite_count": 1, "accepted_answer_id": 49906536, "answer_count": 1, "score": 17, "last_activity_date": 1614723503, "creation_date": 1524075512, "last_edit_date": 1524079425, "question_id": 49906483, "link": "https://stackoverflow.com/questions/49906483/what-does-the-symbol-do-in-rust", "title": "What does the &#39;@&#39; symbol do in Rust?", "body": "<p>I forgot to specify the type of a parameter and the error message was as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `:` or `@`, found `)`\n --&gt; src/main.rs:2:12\n  |\n2 | fn func(arg)\n  |            ^ expected one of `:` or `@` here\n</code></pre>\n\n<p>Which raises the question: what can you do with an <code>@</code> symbol? I don't remember reading about using the <code>@</code> symbol for anything. I also did some Googling and couldn't find anything. What does <code>@</code> do?</p>\n"}, {"tags": ["concurrency", "rust"], "answers": [{"comments": [{"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 0, "creation_date": 1524046622, "post_id": 49896588, "comment_id": 86809522, "body": "Thank you, such a simple answer that I overlooked since I was thinking of something more complicated. That being said, something funny happened. Annotating MyError with &lt;&#39;a&gt; had the side effect of making me annotate basically EVERY struct and function I have in my code with another lifetime, since MyError is the overall error for the module. Is this what&#39;s &quot;expected&quot;, or a symptom of me falling into some design-traps?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 1, "creation_date": 1524047829, "post_id": 49896588, "comment_id": 86810352, "body": "@Dash83: Once you introduce borrows then, yes, you&#39;re expected to annotate lifetimes.  It&#39;s not necessarily a design trap, just something you have to either accept, or change the design to not use borrows (assuming that&#39;s possible)."}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 0, "creation_date": 1524048004, "post_id": 49896588, "comment_id": 86810488, "body": "while that makes sense (I use lifetimes in some other parts of my code) this made me propagate a new lifetime through my entire codebase, even though this variation of the error only occurs in a single function that is only used in some situations. That&#39;s what I found very strange about it all."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 1, "creation_date": 1524048666, "post_id": 49896588, "comment_id": 86810939, "body": "To be honest, I probably wouldn&#39;t propagate <code>PoisonError</code> at all.  You could have a <code>Synch</code> variant <i>without</i> the payload.  You need to ask yourself if you&#39;re really doing anything worthwhile with the <code>PoisonError</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1524063048, "post_id": 49896588, "comment_id": 86821061, "body": "<i>The compiler suggesting unstable syntax as a solution is quite unfair.</i> \u2014 I don&#39;t think it&#39;s really suggesting the unstable syntax. It&#39;s more like it doesn&#39;t know the lifetime you wanted and so it puts in an underscore as a placeholder. Only recently has the underscore even become a possible concept for a lifetime."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1524063339, "post_id": 49896588, "comment_id": 86821289, "body": "@Shepmaster: I&#39;m aware, but that doesn&#39;t change that it <i>is now</i> suggesting unstable syntax.  Users shouldn&#39;t have to be aware that this is the case.  :P"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1524045132, "creation_date": 1524045132, "answer_id": 49896588, "question_id": 49895886, "link": "https://stackoverflow.com/questions/49895886/error-underscore-lifetimes-are-unstable-when-implementing-fromstdsyncpoi/49896588#49896588", "title": "&quot;error: underscore lifetimes are unstable&quot; when implementing From&lt;std::sync::PoisonError&gt;", "body": "<p>Like so:</p>\n\n<pre><code>#[derive(Debug)]\npub enum MyError&lt;'a&gt; {\n    Serialization(serde_json::Error),\n    Synch(PoisonError&lt;MutexGuard&lt;'a, Vec&lt;u8&gt;&gt;&gt;),\n}\n</code></pre>\n\n<p>The closest explanation I can find in the book is the section on <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-annotations-in-struct-definitions\" rel=\"nofollow noreferrer\">Lifetime Annotations in Struct Definitions</a> (<code>enum</code>s behave the same way).</p>\n\n<p>The compiler suggesting unstable syntax as a solution is <em>quite</em> unfair.</p>\n"}], "owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 49896588, "answer_count": 1, "score": 2, "last_activity_date": 1524062937, "creation_date": 1524043268, "last_edit_date": 1524062937, "question_id": 49895886, "link": "https://stackoverflow.com/questions/49895886/error-underscore-lifetimes-are-unstable-when-implementing-fromstdsyncpoi", "title": "&quot;error: underscore lifetimes are unstable&quot; when implementing From&lt;std::sync::PoisonError&gt;", "body": "<p>I'm working on a function that looks like this:</p>\n\n<pre><code>fn do_stuff(&amp;mut self, a: MyStruct) -&gt; Result&lt;(), MyError&gt; {\n    let x = try!(serde_json::to_vec(a));\n\n    let cache = Arc::clone(self.data); // Get shared reference\n    {\n        let cache = try!(cache.lock()); // Get lock\n        cache.push(x);\n    }\n\n    /* Do stuff with other resources */\n\n    Ok(())\n}\n</code></pre>\n\n<p>Where the definition of <code>MyError</code> is:</p>\n\n<pre><code>#[derive(Debug)]\npub enum MyError {\n    Serialization(serde_json::Error),\n    Synch(PoisonError&lt;MutexGuard&lt;'_, Vec&lt;u8&gt;&gt;&gt;),\n}\n</code></pre>\n\n<p>Before I even get to implementing <code>From&lt;std::sync::PoisonError&gt;</code> for <code>MyError</code>, the compiler already tells me the definition of the <code>Synch</code> variant of my enum is wrong:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: underscore lifetimes are unstable (see issue #44524)\n</code></pre>\n\n<p>The declaration using underscore lifetimes actually came from an earlier hint from the compiler when I was trying to figure out the error I should convert from when the <code>lock</code> operation fails. I read the aforementioned issue and that doesn't help me.</p>\n\n<p>What's the full type I should be converting from in order to catch the error from the <code>Mutex::lock</code> operation?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1524038927, "post_id": 49894224, "comment_id": 86804200, "body": "IMO this is more complicated than it needs to be; why not just let <code>App</code> own the <code>String</code> instead of borrowing it?"}, {"owner": {"reputation": 319, "user_id": 3645510, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/tJHA4.jpg?s=128&g=1", "display_name": "b1zzu", "link": "https://stackoverflow.com/users/3645510/b1zzu"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1524054196, "post_id": 49894224, "comment_id": 86814592, "body": "Hi @ljedrz, this is just a simplified example. In the real case, I can&#39;t substitute <code>String</code>."}], "answers": [{"tags": [], "owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "is_accepted": true, "score": 3, "last_activity_date": 1524062508, "last_edit_date": 1524062508, "creation_date": 1524040535, "answer_id": 49894929, "question_id": 49894224, "link": "https://stackoverflow.com/questions/49894224/type-mismatch-in-function-arguments/49894929#49894929", "title": "Type mismatch in function arguments", "body": "<p>The signature of the <code>command</code> function does not match with what <code>box_command</code> is expected to return.</p>\n\n<p><code>box_command</code> should have the following body:</p>\n\n<pre><code>fn box_command() -&gt; Box&lt;Fn(App) -&gt; String&gt; {\n    Box::new(move |app: App| -&gt; String { app.command() })\n}\n</code></pre>\n\n<p>The compiler is expecting an invocation which returns a <code>String</code>. The above change will allow <code>self</code> from the following statement to be passed as the <code>app</code> argument. Thus <code>app.command()</code> satisfies the entire flow and returns <code>String</code> from the invocation chain.</p>\n\n<pre><code>let result = App::validator_1(App::validator_2(App::box_command()))(self);\n</code></pre>\n"}], "owner": {"reputation": 319, "user_id": 3645510, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/tJHA4.jpg?s=128&g=1", "display_name": "b1zzu", "link": "https://stackoverflow.com/users/3645510/b1zzu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 616, "favorite_count": 0, "accepted_answer_id": 49894929, "answer_count": 1, "score": 1, "last_activity_date": 1524062508, "creation_date": 1524038294, "last_edit_date": 1524062408, "question_id": 49894224, "link": "https://stackoverflow.com/questions/49894224/type-mismatch-in-function-arguments", "title": "Type mismatch in function arguments", "body": "<p>I'm trying to write this small piece of code but I can't get it work. I have a very little experience in Rust, especially with lifetimes.</p>\n\n<p>I have reproduced the error in a smaller script:</p>\n\n<pre><code>fn main() {\n    let app = App {\n        name: &amp;String::from(\"Davide\"),\n    };\n    app.run();\n}\n\nstruct App&lt;'a&gt; {\n    name: &amp;'a String,\n}\n\nimpl&lt;'a&gt; App&lt;'a&gt; {\n    fn run(self) {\n        let result = App::validator_1(App::validator_2(App::box_command()))(self);\n        println!(\"{}\", result)\n    }\n\n    fn validator_1(next: Box&lt;Fn(App) -&gt; String&gt;) -&gt; Box&lt;Fn(App) -&gt; String&gt; {\n        Box::new(move |app: App| -&gt; String { next(app) })\n    }\n\n    fn validator_2(next: Box&lt;Fn(App) -&gt; String&gt;) -&gt; Box&lt;Fn(App) -&gt; String&gt; {\n        Box::new(move |app: App| -&gt; String { next(app) })\n    }\n\n    fn box_command() -&gt; Box&lt;Fn(App) -&gt; String&gt; {\n        Box::new(App::command)\n    }\n\n    fn command(self) -&gt; String {\n        format!(\"Hello {}!\", self.name)\n    }\n}\n</code></pre>\n\n<p>When I compile it, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in function arguments\n  --&gt; src/main.rs:27:9\n   |\n27 |         Box::new(App::command)\n   |         ^^^^^^^^^^^^^^^^^^^^^^ expected signature of `for&lt;'r&gt; fn(App&lt;'r&gt;) -&gt; _`\n...\n30 |     fn command(self) -&gt; String {\n   |     -------------------------- found signature of `fn(App&lt;'_&gt;) -&gt; _`\n   |\n   = note: required for the cast to the object type `for&lt;'r&gt; std::ops::Fn(App&lt;'r&gt;) -&gt; std::string::String`\n\nerror[E0271]: type mismatch resolving `for&lt;'r&gt; &lt;fn(App&lt;'_&gt;) -&gt; std::string::String {App&lt;'_&gt;::command} as std::ops::FnOnce&lt;(App&lt;'r&gt;,)&gt;&gt;::Output == std::string::String`\n  --&gt; src/main.rs:27:9\n   |\n27 |         Box::new(App::command)\n   |         ^^^^^^^^^^^^^^^^^^^^^^ expected bound lifetime parameter, found concrete lifetime\n   |\n   = note: required for the cast to the object type `for&lt;'r&gt; std::ops::Fn(App&lt;'r&gt;) -&gt; std::string::String`\n</code></pre>\n\n<p>I understand that the problem is somehow related to the lifetime of <code>name</code> in <code>App</code> but I don't know how to fix it.</p>\n"}, {"tags": ["rust", "mio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1523995882, "post_id": 49886603, "comment_id": 86789419, "body": "Practically, why does it matter? You need to write your code to handle blocking, otherwise there&#39;s no real reason to use MIO."}, {"owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523996131, "post_id": 49886603, "comment_id": 86789550, "body": "True, I thought <code>write()</code> on a nonblocking socket cannot block, but after revisiting <code>write(2)</code> docs, it&#39;s a valid scenario."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523996207, "post_id": 49886603, "comment_id": 86789591, "body": "<i>a nonblocking socket cannot block</i> \u2014 Isn&#39;t that why it returns an error telling you it would have blocked... instead of blocking?"}, {"owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523996792, "post_id": 49886603, "comment_id": 86789877, "body": "@Shepmaster Like I said, revisiting Linux <code>write(2)</code> I see that <code>EWOULDBLOCK</code> is a valid error. Didn&#39;t think that possible before, since it doesn&#39;t seem there&#39;s anything to block on, as <code>write(2)</code> can already return 0 bytes written in case the buffer is full or something. So I was thinking I was doing something wrong with Mio."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1523999985, "post_id": 49886603, "comment_id": 86791286, "body": "There&#39;s two different points in play here. Your main question is &quot;why does it block in this case&quot;, which is a valid enough question. In the comments you seem to be surprised at the <i>mechanism</i> of how non-blocking works. Non-blocking sockets work by returning an error whenever the write would have blocked."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "edited": false, "score": 0, "creation_date": 1524063294, "post_id": 49886603, "comment_id": 86821255, "body": "This type of error happens when there are no more free space for writing into the OS network stack buffer reserved to the connection. No idea why you hit this problem, you should not have such error in your scenario."}], "owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 275, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1523995825, "creation_date": 1523995548, "last_edit_date": 1523995825, "question_id": 49886603, "link": "https://stackoverflow.com/questions/49886603/why-would-the-first-write-to-mios-tcpstream-after-accepting-give-an-operation", "title": "Why would the first write to Mio&#39;s TcpStream after accepting give an &quot;operation would block&quot; error?", "body": "<p>With this code:</p>\n\n<pre><code>poll.poll(&amp;mut poll_events, Some(Duration::from_secs(0)));\nfor event in poll_events.iter() {\n    match event.token() {\n        LISTENER_TOKEN =&gt; {\n            let (mut stream, addr) = unwrap_or_continue!(\n                listener.accept(),\n                \"Failed to accept incoming connection\"\n            );\n            unwrap_or_continue!(\n                stream.write(\"Hello, world!\\n\".as_bytes()),\n                &amp;format!(\"Failed to write to {}\", addr)\n            );\n        }\n        _ =&gt; unreachable!()\n    }\n}\n</code></pre>\n\n<p>where <code>unwrap_or_continue!</code> just does <code>continue</code> on an error while reporting it, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Failed to write to 127.0.0.1:49231: operation would block\n</code></pre>\n\n<p>Why would it block, the socket just got accepted and it's a first write?</p>\n"}, {"tags": ["string", "rust", "match", "literals"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1523993880, "post_id": 49886160, "comment_id": 86788457, "body": "Because a <code>&amp;str</code> is a reference, not a value."}, {"owner": {"reputation": 429, "user_id": 9493700, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a23eed35c131c6b9ba2d88a6f2ff64e?s=128&d=identicon&r=PG&f=1", "display_name": "robfuscator", "link": "https://stackoverflow.com/users/9493700/robfuscator"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523997672, "post_id": 49886160, "comment_id": 86790314, "body": "@Shepmaster Thanks for pointing out my mistakes. The question you have linked is very similar to mine, but I like to know why it works with the <code>if</code> comparison but not with a <code>match</code>."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 2, "creation_date": 1524013209, "post_id": 49886160, "comment_id": 86795151, "body": "It is simply because the compiler handles them both differently. The <code>if</code> statement delegates to the <code>PartialEq</code> implementation. The <code>match</code> doesn&#39;t have this special handling in the compiler and therefore requires a bit of help. The two constructs are compiled differently anyway so I&#39;m not sure how this would work for the internals of the compiler. The <code>if</code> conditional becomes a simple branch whereas the <code>match</code> does appear (according to the LLVM IR) to be somewhat of a <code>switch</code> when compiled down."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1524033352, "post_id": 49886160, "comment_id": 86800930, "body": "If there are just two possible outcomes (like in your second example), an <code>if else</code> is a perfectly fine construct to use."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 46, "last_activity_date": 1524061354, "last_edit_date": 1524061354, "creation_date": 1524013172, "answer_id": 49889545, "question_id": 49886160, "link": "https://stackoverflow.com/questions/49886160/why-can-i-compare-a-string-to-a-str-using-if-but-not-when-using-match/49889545#49889545", "title": "Why can I compare a String to a &amp;str using if, but not when using match?", "body": "<blockquote>\n  <p>I want to know why the comparison works when <code>if</code> but not using <code>match</code>.</p>\n</blockquote>\n\n<p>It's not so much about <code>if</code> and more because you've used <code>==</code> in the condition. The condition in an <code>if</code> statement is any expression of type <code>bool</code>; you just happen to have chosen to use <code>==</code> there.</p>\n\n<p>The <code>==</code> operator is really a function associated with <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"noreferrer\">the <code>PartialEq</code> trait</a>. This trait can be implemented for any <em>pair</em> of types. And, for convenience, <code>String</code> has implementations for <code>PartialEq&lt;str&gt;</code> and <code>PartialEq&lt;&amp;str&gt;</code>, among others - and vice versa.</p>\n\n<p>On the other hand, <code>match</code> expressions use <a href=\"https://doc.rust-lang.org/1.2.0/book/patterns.html\" rel=\"noreferrer\">pattern matching</a> for comparison, not <code>==</code>. A <code>&amp;'static str</code> literal, like <code>\"holla!\"</code>, is a valid pattern, but it can never match a <code>String</code>, which is a completely different type.</p>\n\n<p>Pattern matching lets you concisely compare parts of complex structures, even if the whole thing isn't equal, as well as bind variables to pieces of the match. While <code>String</code>s don't really benefit from that, it's very powerful for other types, and has an entirely different purpose than <code>==</code>.</p>\n\n<p>Note that you can use pattern matching with <code>if</code> by instead using the <code>if let</code> construct. Your example would look like this:</p>\n\n<pre><code>if let \"holla!\" = &amp;*s {\n    println!(\"it worked!\");\n}\n</code></pre>\n\n<p>Conversely, one way to use <code>==</code> inside a <code>match</code> is like this:</p>\n\n<pre><code>match s {\n    _ if s == \"holla!\" =&gt; println!(\"it worked!\"),\n    _ =&gt; println!(\"nothing\"),\n}\n</code></pre>\n\n<p>Or, as @ljedrz suggested:</p>\n\n<pre><code>match s == \"holla!\" {\n    true =&gt; println!(\"it worked!\"), \n    _ =&gt; println!(\"nothing\")\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 369, "user_id": 10841058, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71942c955ba88b3f8765b181d7451c2d?s=128&d=identicon&r=PG&f=1", "display_name": "Nei", "link": "https://stackoverflow.com/users/10841058/nei"}, "is_accepted": false, "score": 2, "last_activity_date": 1612483562, "creation_date": 1612483562, "answer_id": 66055715, "question_id": 49886160, "link": "https://stackoverflow.com/questions/49886160/why-can-i-compare-a-string-to-a-str-using-if-but-not-when-using-match/66055715#66055715", "title": "Why can I compare a String to a &amp;str using if, but not when using match?", "body": "<p>As @peter-hall said, there's a mismatch of types because <code>match</code> expressions use pattern matching, which is different from the <code>==</code> that are associated with the <code>PartialEq</code> trait.</p>\n<p>There a second way to resolve this issue, by casting your <code>String</code> into an <code>&amp;str</code> (a string slice) :</p>\n<pre><code>match &amp;s[..] {\n    &quot;holla!&quot; =&gt; println!(&quot;it worked!&quot;),\n    &quot;Hallo!&quot; =&gt; println!(&quot;with easy to read matches !&quot;),\n    _ =&gt; println!(&quot;nothing&quot;),\n}\n</code></pre>\n"}], "owner": {"reputation": 429, "user_id": 9493700, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a23eed35c131c6b9ba2d88a6f2ff64e?s=128&d=identicon&r=PG&f=1", "display_name": "robfuscator", "link": "https://stackoverflow.com/users/9493700/robfuscator"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 22536, "favorite_count": 5, "accepted_answer_id": 49889545, "answer_count": 2, "score": 26, "last_activity_date": 1612483562, "creation_date": 1523993658, "last_edit_date": 1523999699, "question_id": 49886160, "link": "https://stackoverflow.com/questions/49886160/why-can-i-compare-a-string-to-a-str-using-if-but-not-when-using-match", "title": "Why can I compare a String to a &amp;str using if, but not when using match?", "body": "<p>I'm trying to implement a function that reads command line arguments and compares them to hard-coded string literals.</p>\n\n<p>When I do the comparison with an <code>if</code> statement it works like a charm:</p>\n\n<pre><code>fn main() {\n    let s = String::from(\"holla!\");\n\n    if s == \"holla!\" {\n        println!(\"it worked!\");\n    }\n}\n</code></pre>\n\n<p>But using a <code>match</code> statement (which I guess would be more elegant):</p>\n\n<pre><code>fn main() {\n    let s = String::from(\"holla!\");\n\n    match s {\n        \"holla!\" =&gt; println!(\"it worked!\"),\n        _ =&gt; println!(\"nothing\"),\n    }\n}\n</code></pre>\n\n<p>I keep getting an error from the compiler that a <code>String</code> was expected but a <code>&amp;static str</code> was found:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:5:9\n  |\n5 |         \"holla!\" =&gt; println!(\"it worked!\"),\n  |         ^^^^^^^^ expected struct `std::string::String`, found reference\n  |\n  = note: expected type `std::string::String`\n             found type `&amp;'static str`\n</code></pre>\n\n<p>I've seen <a href=\"https://stackoverflow.com/q/25383488/155423\">How to match a String against string literals in Rust?</a> so I know how to fix it, but I want to know <em>why</em> the comparison works when <code>if</code> but not using <code>match</code>.</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1523989731, "post_id": 49884246, "comment_id": 86786214, "body": "What will be the future use of futures in Futures 0.3, only future know."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1523986966, "creation_date": 1523986966, "answer_id": 49884373, "question_id": 49884246, "link": "https://stackoverflow.com/questions/49884246/how-do-i-merge-streams-in-futures-0-2/49884373#49884373", "title": "How do I merge Streams in Futures 0.2?", "body": "<p>If you review the <a href=\"https://docs.rs/futures/0.1.21/futures/stream/trait.Stream.html#method.merge\" rel=\"nofollow noreferrer\">most recent documentation for <code>Stream</code> in 0.1.21</a>, you will see this note:</p>\n\n<blockquote>\n  <p>Deprecated: functionality provided by <code>select</code> now</p>\n</blockquote>\n\n<p><code>select</code> is a method of the <a href=\"https://docs.rs/futures/0.2/futures/trait.StreamExt.html#method.select\" rel=\"nofollow noreferrer\"><code>StreamExt</code> trait</a>.</p>\n"}], "owner": {"reputation": 8915, "user_id": 940300, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/7IWb0.jpg?s=128&g=1", "display_name": "Basic Coder", "link": "https://stackoverflow.com/users/940300/basic-coder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 0, "accepted_answer_id": 49884373, "answer_count": 1, "score": 0, "last_activity_date": 1523986966, "creation_date": 1523986546, "last_edit_date": 1523986813, "question_id": 49884246, "link": "https://stackoverflow.com/questions/49884246/how-do-i-merge-streams-in-futures-0-2", "title": "How do I merge Streams in Futures 0.2?", "body": "<p>As stated <a href=\"https://docs.rs/futures/0.1.11/futures/stream/trait.Stream.html#method.merge\" rel=\"nofollow noreferrer\">in the documentation for Futures 0.1</a>, <code>Stream</code> provided a <code>merge</code> method to merge two <code>Stream</code>s. What is the equivalent in Futures <strong>0.2</strong>?</p>\n\n<p>I do not want to zip the <code>Stream</code>s. </p>\n"}, {"tags": ["multithreading", "rust", "thread-safety"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1523981516, "post_id": 49882769, "comment_id": 86781659, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> or your current solution. It&#39;s much better to have some code than to make guesses."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1523982284, "post_id": 49882769, "comment_id": 86782111, "body": "Have you seen <a href=\"https://crates.io/crates/rayon\" rel=\"nofollow noreferrer\">Rayon</a>: <i>Simple work-stealing parallelism for Rust</i>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1523982593, "post_id": 49882769, "comment_id": 86782304, "body": "I believe your question to be answered by the answers in <a href=\"https://stackoverflow.com/q/28654978/155423\">Lifetime troubles sharing references between threads</a>, <a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a>, and <a href=\"https://stackoverflow.com/q/40035731/155423\">How do I share a generic struct between threads using Arc&lt;Mutex&lt;MyStruct&lt;T&gt;&gt;&gt;?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/49882769/edit\">edit</a> your question to explain the differences (in addition to providing a MCVE)."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1523988689, "post_id": 49882769, "comment_id": 86785678, "body": "Look for scoped threads and scoped threadpools"}], "answers": [{"tags": [], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "is_accepted": false, "score": 0, "last_activity_date": 1524028481, "creation_date": 1524028481, "answer_id": 49891646, "question_id": 49882769, "link": "https://stackoverflow.com/questions/49882769/how-do-i-express-a-guarantee-that-one-thread-will-outlive-another-allowing-me-t/49891646#49891646", "title": "How do I express a guarantee that one thread will outlive another, allowing me to share references without &#39;static?", "body": "<p>There is no trivial way to do this.</p>\n\n<p>Any <code>F</code> passed to <code>thread::spawn</code> must be <code>'static</code>; you cannot assert a lifetime on the thread, or bound it to a specific scope; the function you supply must be static, so you cannot use a closure with a custom lifetime for this purpose.</p>\n\n<p>The work around for this is to <code>unsafe</code> all the things; here are two typical examples:</p>\n\n<p><a href=\"https://github.com/Kimundi/scoped-threadpool-rs/blob/master/src/lib.rs#L209\" rel=\"nofollow noreferrer\">https://github.com/Kimundi/scoped-threadpool-rs/blob/master/src/lib.rs#L209</a></p>\n\n<p><a href=\"https://github.com/crossbeam-rs/crossbeam-utils/blob/master/src/scoped.rs#L326\" rel=\"nofollow noreferrer\">https://github.com/crossbeam-rs/crossbeam-utils/blob/master/src/scoped.rs#L326</a></p>\n\n<p>Practically speaking, there is no significantly more 'elegant' solution than just using <code>Arc</code>. You could also try coordinating using channels, using an existing solution like <a href=\"https://crates.io/crates/scoped_threadpool\" rel=\"nofollow noreferrer\">scoped_threadpool</a> or write your own, but I strongly advise against re-inventing the wheel and writing your own implementation using unsafe, its very easy to mess up. </p>\n\n<p>Personally, I think something like <a href=\"https://stackoverflow.com/questions/30557152/is-it-possible-to-send-closures-via-channels\">Is it possible to send closures via channels?</a> would suit your purpose, but without more details, its hard to know.</p>\n"}], "owner": {"reputation": 84, "user_id": 3334751, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j8WKs.jpg?s=128&g=1", "display_name": "aaronlangford31", "link": "https://stackoverflow.com/users/3334751/aaronlangford31"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "closed_date": 1525107539, "answer_count": 1, "score": 0, "last_activity_date": 1525107565, "creation_date": 1523981115, "last_edit_date": 1523982357, "question_id": 49882769, "link": "https://stackoverflow.com/questions/49882769/how-do-i-express-a-guarantee-that-one-thread-will-outlive-another-allowing-me-t", "closed_reason": "Duplicate", "title": "How do I express a guarantee that one thread will outlive another, allowing me to share references without &#39;static?", "body": "<p>I'm working on a task scheduling framework in Rust that uses work stealing between executors. Each executor has it's own thread which I have spawned using code that looks like this:</p>\n\n<p><code>let t_handle = thread::spawn(move || {...}</code></p>\n\n<p>Abstractly, there must be a way for this thread to be able to see the work queues of other threads and perform a stealing operation on that queue.</p>\n\n<p>The way I'm doing this right now is by passing a function (<code>Fn()</code>) into the struct's <code>new</code> method called <code>on_steal</code> which closes over a borrow of <code>vec&lt;Stealer&gt;</code>.</p>\n\n<p>Rust yells at me in two places:</p>\n\n<ul>\n<li>First it wants a lifetime parameter for <code>on_steal</code>, and specifically it's asking for <code>static</code>.</li>\n<li>After blessing that <code>on_steal</code> with <code>'static</code>, the lifetime for my borrow of <code>vec&lt;Stealer&gt;</code> becomes an issue.</li>\n</ul>\n\n<p>The solution I have currently is to wrap my <code>vec&lt;Stealer&gt;</code> in a <code>Arc&lt;mutex&lt;_&gt;&gt;</code>, which is fine. But I'm wondering if there is a more elegant solution for specifying lifetime params of threads in Rust.</p>\n\n<p>I'm looking to express some kind of guarantee that one thread will outlive another, thus allowing me to lend out references from the more longevous thread to the shorter lived thread without requiring those refs to be static.</p>\n"}, {"tags": ["rust", "structopt"], "answers": [{"comments": [{"owner": {"reputation": 9885, "user_id": 1039947, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/eYRpr.png?s=128&g=1", "display_name": "kmp", "link": "https://stackoverflow.com/users/1039947/kmp"}, "edited": false, "score": 0, "creation_date": 1523974519, "post_id": 49878355, "comment_id": 86776663, "body": "thanks, can I ask though, what if I had, say, an &quot;in&quot; argument too - same rule as out, so now I can&#39;t use this right?  I wondered if I could use flatten somehow but that doesn&#39;t seem to work"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 9885, "user_id": 1039947, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/eYRpr.png?s=128&g=1", "display_name": "kmp", "link": "https://stackoverflow.com/users/1039947/kmp"}, "edited": false, "score": 0, "creation_date": 1523976403, "post_id": 49878355, "comment_id": 86778130, "body": "@kmp The <a href=\"https://stackoverflow.com/a/49881009/4498831\">Shepmaster&#39;s answer</a> is the right thing to do while mine is kinda hacky."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1523968670, "creation_date": 1523968670, "answer_id": 49878355, "question_id": 49877823, "link": "https://stackoverflow.com/questions/49877823/how-to-make-an-argument-optional-based-on-the-presence-of-another-one-in-structo/49878355#49878355", "title": "How to make an argument optional based on the presence of another one in structopt?", "body": "<p>I would use subcommand:</p>\n\n<pre><code>#![feature(custom_attribute)]\n#[macro_use] extern crate structopt;\n\nuse structopt::StructOpt;\nuse std::path::PathBuf;\n\n#[derive(StructOpt)]\n#[structopt(name = \"test\")]\nenum Git {\n    #[structopt(name = \"--version\")]\n    Version,\n    #[structopt(name = \"--out\")]\n    Fetch(PathBuf),\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 15, "last_activity_date": 1523976412, "last_edit_date": 1523976412, "creation_date": 1523975935, "answer_id": 49881009, "question_id": 49877823, "link": "https://stackoverflow.com/questions/49877823/how-to-make-an-argument-optional-based-on-the-presence-of-another-one-in-structo/49881009#49881009", "title": "How to make an argument optional based on the presence of another one in structopt?", "body": "<p>Use <code>required_unless</code>:</p>\n\n<pre><code>#[derive(Debug, StructOpt)]\n#[structopt(name = \"structopt_playing\", about = \"Just playing\")]\nstruct Opt {\n    #[structopt(short = \"v\", long = \"version\")]\n    version: bool,\n\n    #[structopt(short = \"o\", long = \"out\", parse(from_os_str), required_unless = \"version\")]\n    //                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    output_file: Option&lt;PathBuf&gt;,\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ./target/debug/stropt\nerror: The following required arguments were not provided:\n    --out &lt;output_file&gt;\n\nUSAGE:\n    stropt --out &lt;output_file&gt;\n\nFor more information try --help\n\n$ ./target/debug/stropt --out hello\nNow I'm going to need to do something with \"hello\"\n\n$ ./target/debug/stropt --version\nVersion: 0.1.0\n</code></pre>\n\n<p>There are a large number of related configuration options provided by Clap:</p>\n\n<ul>\n<li><code>required_unless</code></li>\n<li><code>required_unless_all</code></li>\n<li><code>required_unless_one</code></li>\n<li><code>conflicts_with</code></li>\n<li><code>conflicts_with_all</code></li>\n<li><code>requires</code></li>\n<li><code>requires_if</code></li>\n<li><code>requires_ifs</code></li>\n<li><code>required_if</code></li>\n<li><code>required_ifs</code></li>\n<li><code>requires_all</code></li>\n</ul>\n\n<p>A side note: you don't need to use <code>#![feature(custom_attribute)]</code> in this code at all.</p>\n"}], "owner": {"reputation": 9885, "user_id": 1039947, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/eYRpr.png?s=128&g=1", "display_name": "kmp", "link": "https://stackoverflow.com/users/1039947/kmp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2004, "favorite_count": 0, "accepted_answer_id": 49881009, "answer_count": 2, "score": 6, "last_activity_date": 1524856136, "creation_date": 1523967158, "last_edit_date": 1524856136, "question_id": 49877823, "link": "https://stackoverflow.com/questions/49877823/how-to-make-an-argument-optional-based-on-the-presence-of-another-one-in-structo", "title": "How to make an argument optional based on the presence of another one in structopt?", "body": "<p>I have a command line tool that has two possible arguments:</p>\n\n<ul>\n<li><code>--version</code> (which will print out the version number and quit)</li>\n<li><code>--out</code> (which is the path to some output file into which magic is going to be poured).</li>\n</ul>\n\n<p>If a user passes <code>--version</code> I do not care about <code>--out</code> since I print the version and I am done <strong>but</strong> if they do not pass <code>--version</code> I want <code>--out</code> to be required.</p>\n\n<p>This is what I have but I wonder if there's any way to do this using only structopt?</p>\n\n<p><em>It seems like I may end up needing to make all my arguments optional and do all the validation myself...</em></p>\n\n<pre><code>#![feature(custom_attribute)]\n#[macro_use]\nextern crate structopt;\n\nuse structopt::StructOpt;\nuse std::path::PathBuf;\n\n#[derive(Debug, StructOpt)]\n#[structopt(name = \"structopt_playing\", about = \"Just playing\")]\nstruct Opt {\n    #[structopt(short = \"v\", long = \"version\")]\n    version: bool,\n\n    #[structopt(short = \"o\", long = \"out\", parse(from_os_str))]\n    output_file: Option&lt;PathBuf&gt;,\n}\n\nconst VERSION: &amp;'static str = env!(\"CARGO_PKG_VERSION\");\n\nfn main() {\n\n    let opt = Opt::from_args();\n    if opt.version {\n        println!(\"Version: {}\", VERSION);\n        return;\n    }\n\n    if !opt.output_file.is_some() {\n        println!(\"Oh, now I feel like I'm alone...you need to pass --out\");\n        return;\n    }\n\n    println!(\"Now I'm going to need to do something with {:?}\", \n        opt.output_file.unwrap());\n}\n</code></pre>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1523937131, "post_id": 49869510, "comment_id": 86754430, "body": "<a href=\"https://play.rust-lang.org/?gist=e4a658f8f1f93d753c310f9aa98b11eb&amp;version=stable\" rel=\"nofollow noreferrer\">No, it doesn&#39;t</a>."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1523938119, "post_id": 49869510, "comment_id": 86754721, "body": "I&#39;m very interested to know what compiler you&#39;re using and/or what you define as &quot;compiles and runs&quot;."}, {"owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "edited": false, "score": 0, "creation_date": 1523938184, "post_id": 49869510, "comment_id": 86754747, "body": "I meant <code>rustc</code> and I&#39;m using cargo."}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1523939313, "post_id": 49869510, "comment_id": 86755043, "body": "There is no default typing in the edited post. It&#39;s <code>Vec&lt;u64&gt;</code>, you can tell because you&#39;re calling <code>u64::from_string</code> which is a <code>Result&lt;u64,_&gt;</code>, and <code>expect</code> which unwraps that value."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1523940684, "post_id": 49869510, "comment_id": 86755486, "body": "I&#39;m sure this is a duplicate of <i>something</i>, but I added an answer because I wasn&#39;t sure if this could truly be called a duplicate of the &quot;default int literal type&quot; problem linked in my answer."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1523955011, "post_id": 49869510, "comment_id": 86762543, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/41996784/what-is-the-integer-in-a-compiler-error-message\">What is the {integer} in a compiler error message?</a>"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1523956082, "post_id": 49869510, "comment_id": 86763262, "body": "@E_net4 the original question was unrelated to integers (and without apparent duplicates), but I think the asker got discouraged by the comments; I don&#39;t know how to treat this question now, though."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1523956328, "post_id": 49869510, "comment_id": 86763437, "body": "@ljedrz Perhaps there could be a better duplicate target, all right. But let&#39;s put things this way: the question has already been answered, new answers are unlikely to add more value, and the duplicate completes the missing knowledge (the best answer there says that <code>i32</code> is the default integral type). There is nothing to be discouraged by, and the outcome turned out more positive than it could have been for a question which had its MCVE changed multiple times."}], "answers": [{"comments": [{"owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "edited": false, "score": 0, "creation_date": 1524041538, "post_id": 49870163, "comment_id": 86805805, "body": "This line makes the context very clear &quot; When you push something to the vector, the compiler knows &quot;oh, this is the kind of object I should be expecting&quot;. very precise answer."}], "tags": [], "owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "is_accepted": true, "score": 13, "last_activity_date": 1523940632, "creation_date": 1523940632, "answer_id": 49870163, "question_id": 49869510, "link": "https://stackoverflow.com/questions/49869510/what-is-the-default-type-of-vecnew-in-rust/49870163#49870163", "title": "What is the default type of `Vec::new()` in rust?", "body": "<p><code>Vec::new()</code> relies on its context for information. When you push something to the vector, the compiler knows \"oh, this is the kind of object I should be expecting\". But since your example is pushing the integer literal <code>1</code>, this appears to be related to <a href=\"https://stackoverflow.com/questions/41996784/what-is-the-integer-in-a-compiler-error-message/41996902#41996902\">the default type of an integer literal.</a></p>\n\n<p>In Rust, an untyped integer literal will be assigned a value at compile time according to the context. For example:</p>\n\n<pre><code>let a = 1u8;\nlet b = 2;\nlet c = a + b;\n</code></pre>\n\n<p><code>b</code> and <code>c</code> will be <code>u8</code>s; <code>a + b</code> assigns <code>b</code> to be the same type as <code>a</code>, and the output of the operation is a <code>u8</code> as a result.</p>\n\n<p>If no type is specified, the compiler appears to pick <code>i32</code> (per <a href=\"https://play.rust-lang.org/?gist=821d099623bb6f36dd1aafcf08835ec3&amp;version=nightly\" rel=\"noreferrer\">this playground experiment</a>). So in your specific example, and as seen in the playground, <code>numbers</code> would be a <code>Vec&lt;i32&gt;</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 5, "last_activity_date": 1523949114, "creation_date": 1523949114, "answer_id": 49871955, "question_id": 49869510, "link": "https://stackoverflow.com/questions/49869510/what-is-the-default-type-of-vecnew-in-rust/49871955#49871955", "title": "What is the default type of `Vec::new()` in rust?", "body": "<p>Vectors in Rust are generic, which means that they don't have a default type - unless by default you mean <a href=\"https://stackoverflow.com/questions/30399780/what-does-vect-mean\"><code>Vec&lt;T&gt;</code></a> (<code>T</code> is a generic type parameter) or <a href=\"https://stackoverflow.com/questions/34363984/what-is-vec/34364132\"><code>Vec&lt;_&gt;</code></a> (<code>_</code> is a <a href=\"https://stackoverflow.com/questions/45033804/what-is-the-correct-term-for-in-a-type-hint\">type placeholder</a>).</p>\n\n<p>If the compiler doesn't find any related type annotation or isn't able to infer the element type using type inference, it will refuse to build the code:</p>\n\n<pre><code>let mut numbers = Vec::new();\n\nerror[E0282]: type annotations needed\n --&gt; src/main.rs:2:23\n  |\n2 |     let mut numbers = Vec::new();\n  |         -----------   ^^^^^^^^ cannot infer type for `T`\n  |         |\n  |         consider giving `numbers` a type\n</code></pre>\n\n<p>You can verify it further by trying to use <a href=\"https://stackoverflow.com/questions/21747136/how-do-i-print-the-type-of-a-variable-in-rust/21747400#21747400\">a trick to find out the type of a variable</a>:</p>\n\n<pre><code>let mut numbers = Vec::new();\nlet () = numbers;\n\nerror[E0308]: mismatched types\n --&gt; src/main.rs:4:9\n  |\n3 |     let () = numbers;\n  |         ^^ expected struct `std::vec::Vec`, found ()\n  |\n  = note: expected type `std::vec::Vec&lt;_&gt;` // Vec&lt;_&gt;\n             found type `()`\n</code></pre>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2421, "favorite_count": 0, "accepted_answer_id": 49870163, "answer_count": 2, "score": 3, "last_activity_date": 1598612103, "creation_date": 1523936314, "last_edit_date": 1598612103, "question_id": 49869510, "link": "https://stackoverflow.com/questions/49869510/what-is-the-default-type-of-vecnew-in-rust", "title": "What is the default type of `Vec::new()` in rust?", "body": "<p>I'm new to Rust. I understand that Rust predicts the type of bindings at compile time. The below code compiles and runs.</p>\n\n<pre><code>fn main() {\n    let mut numbers = Vec::new();\n    numbers.push(1);\n}\n</code></pre>\n\n<p>What is the default type of the <code>numbers</code> vector?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 48006, "user_id": 96588, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/425fed56a46504d37ec907d99b09ecde?s=128&d=identicon&r=PG", "display_name": "l0b0", "link": "https://stackoverflow.com/users/96588/l0b0"}, "edited": false, "score": 2, "creation_date": 1523930931, "post_id": 49868671, "comment_id": 86753058, "body": "Please include the relevant code (ideally a <a href=\"https://stackoverflow.com/help/mcve\">minimal, complete and verifiable example</a>) in the question."}], "answers": [{"tags": [], "owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "is_accepted": false, "score": 0, "last_activity_date": 1523937441, "creation_date": 1523937441, "answer_id": 49869683, "question_id": 49868671, "link": "https://stackoverflow.com/questions/49868671/unit-test-for-function-in-different-directory-is-giving-error/49869683#49869683", "title": "Unit test for function in different directory is giving error", "body": "<p>In Rust, tests that exist under a <code>tests</code> directory are what's known as \"black box\" tests and treat the tested crate as if it were an <code>extern</code> library. What you want is</p>\n\n<pre><code>extern crate chapter1;\n\n// ...\n</code></pre>\n\n<p>If you want to do white box tests (and have access to the private members), create a module that only compiles under <code>#[cfg(test)]</code> like so:</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    #[test]\n    fn test_foo() {\n        // may use any `use` declaration as if this were any\n        // other module\n        use super::Something;\n    }\n }\n</code></pre>\n\n<p>You can also create a file just like a normal module, and only wrap the corresponding <code>mod</code> declaration like so: <code>#[cfg(test)] mod tests;</code></p>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 728, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1596043091, "creation_date": 1523929983, "last_edit_date": 1596043091, "question_id": 49868671, "link": "https://stackoverflow.com/questions/49868671/unit-test-for-function-in-different-directory-is-giving-error", "title": "Unit test for function in different directory is giving error", "body": "<p>I'm trying to write a unit test for the GCD code written <a href=\"https://github.com/rajcspsg/ProgrammingRust/blob/master/src/chapter1/gcd.rs\" rel=\"nofollow noreferrer\">here</a>. I'm also trying to write unit tests for this function. The test is <a href=\"https://github.com/rajcspsg/ProgrammingRust/blob/master/tests/gcd.rs\" rel=\"nofollow noreferrer\">here</a> </p>\n\n<p>This is the directory structure of the project:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ProgrammingRust $ tree\n.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 chapter1\n\u2502   \u2502   \u251c\u2500\u2500 cmd_line_args.rs\n\u2502   \u2502   \u2514\u2500\u2500 gcd.rs\n\u2502   \u2514\u2500\u2500 main.rs\n\u251c\u2500\u2500 target\n\u2502   \u251c\u2500\u2500 debug\n\u2502   \u2502   \u251c\u2500\u2500 \n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 chapter1\n    \u2514\u2500\u2500 gcd.rs\n\n48 directories, 108 files\n</code></pre>\n\n<p>When I try to run the tests, I get this error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `chapter1`\n--&gt; tests/gcd.rs:1:7\n1 |   use chapter1;\n  |       ^^^^^^^^ no `chapter1` in the root\n\nerror[E0425]: cannot find function `gcd` in this scope\n--&gt; tests/gcd.rs:10:20\n   |\n10 |         assert_eq!(gcd(15, 14), 1);\n   |                    ^^^ not found in this scope\n</code></pre>\n\n<p>I want to access the function in <code>src/chapter1/gcd.rs</code> at <code>tests/gcd.rs</code>, but I don't know how to link the function <code>gcd.rs</code> to a test in the <code>tests</code> folder.</p>\n"}, {"tags": ["sql", "rust"], "comments": [{"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 4, "creation_date": 1523919014, "post_id": 49867358, "comment_id": 86750192, "body": "In addition to being invalid syntactically, this is 100% vulnerable to SQL injection. You <b>must</b> use a driver with support for prepared statements with placeholder values."}, {"owner": {"reputation": 1084, "user_id": 4302668, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/EmGum.png?s=128&g=1", "display_name": "Michael Hewson", "link": "https://stackoverflow.com/users/4302668/michael-hewson"}, "edited": false, "score": 1, "creation_date": 1524074803, "post_id": 49867358, "comment_id": 86828358, "body": "I looked hard, but didn&#39;t find the syntax error. Where is it?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1523919848, "last_edit_date": 1523919848, "creation_date": 1523919173, "answer_id": 49867396, "question_id": 49867358, "link": "https://stackoverflow.com/questions/49867358/is-a-rust-function-which-generates-a-string-of-sql-vulnerable-to-sql-injection/49867396#49867396", "title": "Is a Rust function which generates a String of SQL vulnerable to SQL injection?", "body": "<h1>Yes, this is vulnerable</h1>\n\n<p>This isn't Rust-specific or SQLite-specific; if you generate a SQL string using user-provided parameters in <em>any</em> language for <em>any</em> database, <em>it is vulnerable</em>.</p>\n\n<blockquote>\n  <p>I'm not very familiar with SQL injection</p>\n</blockquote>\n\n<p>There's simply no excuse to remain in this state. <a href=\"https://www.owasp.org/index.php/SQL_Injection\" rel=\"noreferrer\">Go out there and learn</a>; we will wait...</p>\n\n<hr>\n\n<p>The TL;DR is that a malicious user can specify values for <code>repo.name</code>, <code>repo.scm</code>, or <code>repo.path</code> that, when combined, generates SQL that does not do what you want:</p>\n\n<pre><code>fn main() {\n    let sql = format!(\n        \"INSERT INTO repositories (name, scm, path) VALUES ({}, {}, {})\",\n        r#\"\"hi\", \"from\", \"injection\"); DROP TABLE repositories; --\"#, \n        \"\",\n        \"\"\n    );\n    println!(\"{}\", sql);\n}\n</code></pre>\n\n<pre class=\"lang-sql prettyprint-override\"><code>INSERT INTO repositories (name, scm, path) VALUES (\"hi\", \"from\", \"injection\"); DROP TABLE repositories; --, , )\n</code></pre>\n\n<p>The fix is to use appropriate quoting/parameterization mechanisms. I'd encourage you to use an access abstraction layer like <a href=\"http://diesel.rs/\" rel=\"noreferrer\">Diesel</a>. Doing so, your code would look something like this untested code:</p>\n\n<pre><code>insert_into(repositories)\n    .values((name.eq(repo.name), scm.eq(repo.scm), path.eq(repo.path)))\n    .execute(conn);\n</code></pre>\n\n<p>Or you can make it nicer as</p>\n\n<pre><code>insert_into(repositories)\n    .values(repo)\n    .execute(conn);\n</code></pre>\n\n<p>If you don't want to use Diesel for whatever reason, direct drivers <a href=\"https://docs.rs/rusqlite/0.13.0/rusqlite/\" rel=\"noreferrer\">like rusqlite</a> provide similar mechanisms, shown in this untested code:</p>\n\n<pre><code>conn.execute(\n    \"INSERT INTO repositories (name, scm, path) VALUES (?1, ?2, ?3)\",\n    &amp;[&amp;repo.name, &amp;repo.scm, &amp;repo.path],\n).unwrap();\n</code></pre>\n"}], "owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 770, "favorite_count": 0, "accepted_answer_id": 49867396, "answer_count": 1, "score": 4, "last_activity_date": 1523920019, "creation_date": 1523918898, "last_edit_date": 1523920019, "question_id": 49867358, "link": "https://stackoverflow.com/questions/49867358/is-a-rust-function-which-generates-a-string-of-sql-vulnerable-to-sql-injection", "title": "Is a Rust function which generates a String of SQL vulnerable to SQL injection?", "body": "<p>I have the following Rust function which creates a <code>String</code> of an SQL statement for a SQLite database.</p>\n\n<pre><code>fn add_repo_statement(repo: &amp;Repo) -&gt; String {\n    format!(\"INSERT INTO repositories (name, scm, path)\n            VALUES ({}, {}, {})\", repo.name, repo.scm, repo.path)\n}\n</code></pre>\n\n<p>I'm not very familiar with SQL injection; is such a Rust function vulnerable to SQL injection? If yes, what exactly is the problem and possible solution?</p>\n"}, {"tags": ["rust", "llvm", "llvm-c++-api"], "comments": [{"owner": {"reputation": 3193, "user_id": 6608866, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/395a0bd6f09706e701866702448c5924?s=128&d=identicon&r=PG&f=1", "display_name": "PaulR", "link": "https://stackoverflow.com/users/6608866/paulr"}, "edited": false, "score": 0, "creation_date": 1523964281, "post_id": 49866755, "comment_id": 86769049, "body": "AFAIK LLVMOrcGetSymbolAddress only looks at exported symbols (in the C++ API this is optional). Are there any suspicious function attributes? Also this may fail on Windows, because there is (or was) a bug in the flag translation, but I guess by your file names that you are not using it."}, {"owner": {"reputation": 21, "user_id": 9490708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0143146908790de08f606dfc7b61842e?s=128&d=identicon&r=PG&f=1", "display_name": "Riez", "link": "https://stackoverflow.com/users/9490708/riez"}, "reply_to_user": {"reputation": 3193, "user_id": 6608866, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/395a0bd6f09706e701866702448c5924?s=128&d=identicon&r=PG&f=1", "display_name": "PaulR", "link": "https://stackoverflow.com/users/6608866/paulr"}, "edited": false, "score": 0, "creation_date": 1523964816, "post_id": 49866755, "comment_id": 86769398, "body": "This is what the run function looks like in IR (after optimization):      define i64 @run(i64 %r.input) local_unnamed_addr {          }  I&#39;m not using Windows indeed, I&#39;m on MacOS. What does looking only at exporting symbols imply? I&#39;m sorry, I&#39;m kind of new at compilers. I based my code on what I found in the unit tests of LLVM (<a href=\"https://github.com/llvm-mirror/llvm/blob/master/unittests/ExecutionEngine/Orc/OrcCAPITest.cpp\" rel=\"nofollow noreferrer\">github.com/llvm-mirror/llvm/blob/master/unittests/&hellip;</a>), which seems to be doing mostly the same thing."}, {"owner": {"reputation": 3193, "user_id": 6608866, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/395a0bd6f09706e701866702448c5924?s=128&d=identicon&r=PG&f=1", "display_name": "PaulR", "link": "https://stackoverflow.com/users/6608866/paulr"}, "edited": false, "score": 0, "creation_date": 1523966983, "post_id": 49866755, "comment_id": 86770970, "body": "In C a <code>static</code> function would not be exported (to other translation units). AFAIK the decision in the JIT is made using OS-specific attributes. I just had similar problems related to this, yours may well be unrelated. If you have the time to build LLVM from source you could most easily check this by editing LLVMOrcGetSymbolAddress to pass <code>false</code> as last parameter to findSymbolAddress"}, {"owner": {"reputation": 21, "user_id": 9490708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0143146908790de08f606dfc7b61842e?s=128&d=identicon&r=PG&f=1", "display_name": "Riez", "link": "https://stackoverflow.com/users/9490708/riez"}, "reply_to_user": {"reputation": 3193, "user_id": 6608866, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/395a0bd6f09706e701866702448c5924?s=128&d=identicon&r=PG&f=1", "display_name": "PaulR", "link": "https://stackoverflow.com/users/6608866/paulr"}, "edited": false, "score": 0, "creation_date": 1523970788, "post_id": 49866755, "comment_id": 86773805, "body": "Thanks, I will try building it from source and see what happens. Out of curiosity, do you remember what fixed it for you in the end?"}, {"owner": {"reputation": 3193, "user_id": 6608866, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/395a0bd6f09706e701866702448c5924?s=128&d=identicon&r=PG&f=1", "display_name": "PaulR", "link": "https://stackoverflow.com/users/6608866/paulr"}, "edited": false, "score": 0, "creation_date": 1523971399, "post_id": 49866755, "comment_id": 86774279, "body": "On Windows, the underlying LLVM bug was not fixed at the time and we had to make it expose non-exported symbols which was no problem for our usecase and easy with the C++ API. On MacOS and Linux, JIT is much better supported, so an LLVM bug seems less likely. Should your program work with the modified findSymbol, you can extend your question with some IR, and try to find out why the symbol was not exported."}, {"owner": {"reputation": 21, "user_id": 9490708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0143146908790de08f606dfc7b61842e?s=128&d=identicon&r=PG&f=1", "display_name": "Riez", "link": "https://stackoverflow.com/users/9490708/riez"}, "reply_to_user": {"reputation": 3193, "user_id": 6608866, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/395a0bd6f09706e701866702448c5924?s=128&d=identicon&r=PG&f=1", "display_name": "PaulR", "link": "https://stackoverflow.com/users/6608866/paulr"}, "edited": false, "score": 0, "creation_date": 1523976526, "post_id": 49866755, "comment_id": 86778247, "body": "Unfortunately modifying the <code>findSymbol</code> call did not work, still getting the same assert error. I&#39;m not sure if this information helps, but using MCJIT and <code>LLVMGetFunctionAddress</code> worked without a problem, but I need ORC so that I generate code/compile on the fly."}], "owner": {"reputation": 21, "user_id": 9490708, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0143146908790de08f606dfc7b61842e?s=128&d=identicon&r=PG&f=1", "display_name": "Riez", "link": "https://stackoverflow.com/users/9490708/riez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 522, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1523976854, "creation_date": 1523915300, "last_edit_date": 1523976854, "question_id": 49866755, "link": "https://stackoverflow.com/questions/49866755/rust-llvm-orc-jit-cannot-find-symbol-address", "title": "Rust + LLVM ORC JIT cannot find symbol address", "body": "<p>I have been trying to use the ORC JIT compiler from the LLVM C bindings in Rust, but I keep running into the problem that <code>LLVMOrcGetSymbolAddress</code> is not able to find the symbol of my function <code>run</code> in the module I provide it. The code below combines the most important parts of my code that unfortunately doesn't work. All goes well until the last part of <code>foo</code>, where an error is returned because the function cannot be found. The function is definitely in the module, as <code>LLVMGetNamedFunction</code> is able to find it, but somehow the ORC engine cannot see it. Can anyone see what I am doing wrong? I am using LLVM 6.0 and the <code>llvm-sys</code> Rust bindings. Everything works fine if I use MCJIT but I need ORC for lazy compilation. </p>\n\n<pre><code>fn foo(module: LLVMModuleRef) -&gt; Result&lt;I64Func, LlvmError&gt; {\n    let def_triple = LLVMGetDefaultTargetTriple();\n    let mut target_ref = ptr::null_mut();\n    let mut error_str = ptr::null_mut();\n\n    // Get target from default triple\n    if LLVMGetTargetFromTriple(def_triple, &amp;mut target_ref, &amp;mut error_str) != 0 {\n        let msg = format!(\"Creating target from triple failed: {}\", CStr::from_ptr(error_str).to_str().unwrap());\n        LLVMDisposeMessage(def_triple);\n        LLVMDisposeMessage(error_str);\n        return Err(LlvmError(msg));\n    }\n\n    // Check if JIT is available\n    if LLVMTargetHasJIT(target_ref) == 0 {\n        let msg = format!(\"Cannot do JIT on this platform\");\n        LLVMDisposeMessage(def_triple);\n        return Err(LlvmError(msg));\n    }\n\n    // Create target machine\n    let tm_ref = LLVMCreateTargetMachine(target_ref, \n                                         def_triple,\n                                         CString::new(\"\").unwrap().as_ptr(), \n                                         CString::new(\"\").unwrap().as_ptr(),\n                                         llvm_opt_level(optimization_level)?,\n                                         LLVMRelocMode::LLVMRelocDefault,\n                                         LLVMCodeModel::LLVMCodeModelJITDefault);\n    LLVMDisposeMessage(def_triple);\n    let engine = LLVMOrcCreateInstance(tm_ref);\n\n    // Add eagerly compiled IR\n    let mut handle = LLVMOrcModuleHandle::default();\n    let shared_module = LLVMOrcMakeSharedModule(module);\n    let ctx = engine as *mut libc::c_void;\n    map_orc_err(engine, LLVMOrcAddEagerlyCompiledIR(engine, \n                                                    &amp;mut handle, \n                                                    shared_module, \n                                                    symbol_resolver_callback, \n                                                    ctx))?;\n\n    // Find function named 'run'\n    let c_name = CString::new(\"run\").unwrap().as_ptr();\n    let mut func_addr = LLVMOrcTargetAddress::default();\n    map_orc_err(engine, LLVMOrcGetSymbolAddress(engine, &amp;mut func_addr, c_name))?;\n    if func_addr == 0 {\n        // This errors always gets thrown\n        return Err(LlvmError(format!(\"No function named {} in module\", name)));\n    }\n    let function: I64Func = mem::transmute(func_addr);\n\n    Ok(function)\n}\n\nextern \"C\" fn symbol_resolver_callback(symbol: *const libc::c_char, ctx: *mut libc::c_void) -&gt; LLVMOrcTargetAddress {\n    let mut address = LLVMOrcTargetAddress::default();\n    let engine: LLVMOrcJITStackRef = ctx as LLVMOrcJITStackRef;\n\n    unsafe { LLVMOrcGetSymbolAddress(engine, &amp;mut address, symbol) };\n\n    address\n}\n\nunsafe fn map_orc_err(engine: LLVMOrcJITStackRef, error_code: LLVMOrcErrorCode) -&gt; Result&lt;(), LlvmError&gt; {\n    match error_code {\n        LLVMOrcErrorCode::LLVMOrcErrSuccess =&gt; Ok(()),\n        LLVMOrcErrorCode::LLVMOrcErrGeneric =&gt; {\n            let c_str: &amp;CStr = CStr::from_ptr(LLVMOrcGetErrorMsg(engine));\n            let str_slice: &amp;str = c_str.to_str().unwrap();\n            let str_buf: String = str_slice.to_owned();\n            Err(LlvmError(str_buf))\n        }\n    }\n}\n</code></pre>\n\n<p>EDIT: I tried downgrading to LLVM 4.0 just to see what effect that might have. I still cannot resolve the function, but now I'm getting an assertion error:</p>\n\n<pre><code>Assertion failed: (!Name.empty() &amp;&amp; \"getNameWithPrefix requires non-empty name\"), function getNameWithPrefixImpl, file /tmp/llvm-4.0-20180412-49671-1pw0nxu/llvm-4.0.1.src/lib/IR/Mangler.cpp, line 37.\n</code></pre>\n\n<p>EDIT 2: Below is some basic IR for which the engine fails to find the function address:</p>\n\n<pre><code>define i64 @bar(i64 %arg) {\n    %1 = add i64 %arg, 1\n    ret i64 %1\n}\n\ndefine i64 @run(i64 %arg) {\n    %1 = add i64 %arg, 1\n    %2 = call i64 @bar(i64 %1)\n    ret i64 %2\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1523906675, "post_id": 49864390, "comment_id": 86744961, "body": "Use trait + generic. I am pretty sure this is a duplicate."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1523906923, "post_id": 49864390, "comment_id": 86745060, "body": "I get: <i>&quot;error: the trait bound <code>Cow&lt;&#39;_, str&gt;: From&lt;Option&lt;&amp;str&gt;&gt;</code> is not satisfied&quot;</i>. If I remove the <code>Cow</code> constraint then it all works."}, {"owner": {"reputation": 604, "user_id": 540761, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0afdadc2029bb39daa3e49d90fcabe52?s=128&d=identicon&r=PG", "display_name": "synek317", "link": "https://stackoverflow.com/users/540761/synek317"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1523907382, "post_id": 49864390, "comment_id": 86745267, "body": "@Boiethios could you please give some more details?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523907455, "post_id": 49864390, "comment_id": 86745306, "body": "<i>the best solution to handle <code>&quot;foo&quot;</code> or <code>&quot;foo&quot;.to_string()</code> is <code>Into&lt;Cow&lt;&#39;a, str&gt;&gt;</code></i> \u2014 I don&#39;t know that I agree with that at all. Like most everything in programming, it depends."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1523907531, "post_id": 49864390, "comment_id": 86745348, "body": "I&#39;m not 100% sure that the function signature is valid. Even if you pass some concrete type for <code>O</code>, there isn&#39;t necessarily a unique <code>T</code> that corresponds, is there?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1523907638, "post_id": 49864390, "comment_id": 86745405, "body": "@PeterHall or &quot;worse&quot;, there might be <i>multiple</i> types (or paths) that do correspond. Then the code to run would be ambiguous."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1523953553, "post_id": 49864390, "comment_id": 86761625, "body": "@synek317 To emulate function overloading: <a href=\"https://stackoverflow.com/a/25265605/4498831\">stackoverflow.com/a/25265605/4498831</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1523953620, "post_id": 49864390, "comment_id": 86761663, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/25265527/how-can-i-approximate-method-overloading\">How can I approximate method overloading?</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1523955993, "post_id": 49864390, "comment_id": 86763198, "body": "<a href=\"https://play.rust-lang.org/?gist=96a8296f5ed0272257bb8ba6061ece3f&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1523910018, "last_edit_date": 1523910018, "creation_date": 1523908481, "answer_id": 49865228, "question_id": 49864390, "link": "https://stackoverflow.com/questions/49864390/can-a-function-accept-an-argument-of-type-option-or-str-or-string/49865228#49865228", "title": "Can a function accept an argument of type Option or &amp;str or String?", "body": "<p>I'm pretty sure you cannot create a function like this and still have it be ergonomically used. The problem is that there can be zero, one, or multiple potential paths through the generic types:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>            +-----------+\n            |           |\n  +---------&gt; Option&lt;B&gt; +----------------------+\n  |         |           |                      |\n+-+-+       +-----------+          +-----------v----------+\n|   |                              |                      |\n| A |                              | Option&lt;Cow&lt;'a, str&gt;&gt; |\n|   |                              |                      |\n+-+-+       +-----------+          +-----------^----------+\n  |         |           |                      |\n  +---------&gt; Option&lt;C&gt; +----------------------+\n            |           |\n            +-----------+\n</code></pre>\n\n<p>That's why you are getting the error you are: It's unclear what the concrete type of <code>T</code> should be, thus the caller would have to provide it to the compiler. Here I use the <em>turbofish</em>:</p>\n\n<pre><code>foo::&lt;&amp;str, _&gt;(Some(\"aaa\"));\nfoo::&lt;String, _&gt;(Some(\"aaa\".to_string()));\nfoo::&lt;&amp;str, Option&lt;&amp;str&gt;&gt;(None);\n</code></pre>\n\n<p>I'd suggest re-evaluating your API design. Possible directions include:</p>\n\n<ol>\n<li><p>Creating a custom struct and implementing <code>From</code> for specific concrete types (e.g. <code>&amp;str</code>, <code>Option&lt;String&gt;</code>, etc.). Passing <code>None</code> will still have the problem because it's unclear what type of <code>None</code> it is: an <code>Option&lt;&amp;str&gt;</code> or <code>Option&lt;String&gt;</code>?</p>\n\n<pre><code>use std::borrow::Cow;\n\nfn foo&lt;'a, C&gt;(_bar: C)\nwhere\n    C: Into&lt;Config&lt;'a&gt;&gt;,\n{\n}\n\nstruct Config&lt;'a&gt;(Option&lt;Cow&lt;'a, str&gt;&gt;);\n\nimpl&lt;'a&gt; From&lt;&amp;'a str&gt; for Config&lt;'a&gt; {\n    fn from(other: &amp;'a str) -&gt; Config&lt;'a&gt; {\n        Config(Some(other.into()))\n    }\n}\n\nimpl From&lt;String&gt; for Config&lt;'static&gt; {\n    fn from(other: String) -&gt; Config&lt;'static&gt; {\n        Config(Some(other.into()))\n    }\n}\n\nimpl&lt;'a&gt; From&lt;Option&lt;&amp;'a str&gt;&gt; for Config&lt;'a&gt; {\n    fn from(other: Option&lt;&amp;'a str&gt;) -&gt; Config&lt;'a&gt; {\n        Config(other.map(Into::into))\n    }\n}\n\nimpl From&lt;Option&lt;String&gt;&gt; for Config&lt;'static&gt; {\n    fn from(other: Option&lt;String&gt;) -&gt; Config&lt;'static&gt; {\n        Config(other.map(Into::into))\n    }\n}\n\nfn main() {\n    foo(\"aaa\");\n    foo(\"aaa\".to_string());\n\n    foo(Some(\"aaa\"));\n    foo(Some(\"aaa\".to_string()));\n    foo(None::&lt;&amp;str&gt;);\n}\n</code></pre></li>\n<li><p>Switch to a builder pattern \u2014\u00a0my preferred direction:</p>\n\n<pre><code>use std::borrow::Cow;\n\n#[derive(Debug, Clone, Default)]\nstruct Foo&lt;'a&gt; {\n    name: Option&lt;Cow&lt;'a, str&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn new() -&gt; Self {\n        Self::default()\n    }\n\n    fn name&lt;S&gt;(mut self, name: S) -&gt; Self\n    where\n        S: Into&lt;Cow&lt;'a, str&gt;&gt;,\n    {\n        self.name = Some(name.into());\n        self\n    }\n\n    fn go(self) {\n        println!(\"The name is {:?}\", self.name)\n    }\n}\n\nfn main() {\n    Foo::new().go();\n    Foo::new().name(\"aaa\").go();\n    Foo::new().name(\"aaa\".to_string()).go();\n}\n</code></pre>\n\n<p>Note that this removes the need for the caller to specify <code>Some</code> at all; using the <code>name</code> function implies presence. You could make a <code>without_name</code> function to set it back to <code>None</code> if needed.</p></li>\n</ol>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/37886379/155423\">Pass None into a function that accepts Option</a></li>\n<li><a href=\"https://stackoverflow.com/q/42141129/155423\">Create a generic struct with Option&lt;T&gt; without specifying T when instantiating with None</a></li>\n</ul>\n"}], "owner": {"reputation": 604, "user_id": 540761, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0afdadc2029bb39daa3e49d90fcabe52?s=128&d=identicon&r=PG", "display_name": "synek317", "link": "https://stackoverflow.com/users/540761/synek317"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 654, "favorite_count": 0, "accepted_answer_id": 49865228, "answer_count": 1, "score": 3, "last_activity_date": 1523910018, "creation_date": 1523904970, "last_edit_date": 1523906843, "question_id": 49864390, "link": "https://stackoverflow.com/questions/49864390/can-a-function-accept-an-argument-of-type-option-or-str-or-string", "title": "Can a function accept an argument of type Option or &amp;str or String?", "body": "<p>I'm trying to create a fast, flexible and convenient API that accepts an optional string parameter. I wish the user to be able to pass:</p>\n\n<ul>\n<li><code>None</code></li>\n<li><code>\"foo\"</code></li>\n<li><code>\"foo\".to_string()</code></li>\n<li><code>Some(\"foo\")</code> (equivalent to <code>\"foo\"</code>)</li>\n<li><code>Some(\"foo\".to_string())</code> (equivalent to <code>\"foo\".to_string()</code>)</li>\n</ul>\n\n<p>As far as I know, the best solution to handle <code>\"foo\"</code> or <code>\"foo\".to_string()</code> is <code>Into&lt;Cow&lt;'a, str&gt;&gt;</code>. On the other hand, the best solution to handle <code>\"foo\"</code> or <code>Some(\"foo\")</code> is <code>Into&lt;Option&lt;&amp;'a str&gt;&gt;</code>.</p>\n\n<p>Thus I tried with this but it doesn't compile:</p>\n\n<pre><code>fn foo&lt;'a, T, O&gt;(_bar: O)\nwhere\n    T: Into&lt;Cow&lt;'a, str&gt;&gt;,\n    O: Into&lt;Option&lt;T&gt;&gt;,\n</code></pre>\n\n\n\n<pre><code>foo(Some(\"aaa\"));\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0283]: type annotations required: cannot resolve `_: std::convert::Into&lt;std::borrow::Cow&lt;'_, str&gt;&gt;`\n  --&gt; src/main.rs:12:5\n   |\n12 |     foo(Some(\"aaa\"));\n   |     ^^^\n   |\nnote: required by `foo`\n  --&gt; src/main.rs:3:1\n   |\n3  | / fn foo&lt;'a, T, O&gt;(_bar: O)\n4  | | where\n5  | |     T: Into&lt;Cow&lt;'a, str&gt;&gt;,\n6  | |     O: Into&lt;Option&lt;T&gt;&gt;,\n7  | | {}\n   | |__^\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=06b2d72871ac81b705f2b8f2ca94ffe7&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Is it possible to make it work?</p>\n"}, {"tags": ["rust", "rust-pin"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1725, "user_id": 1170857, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46e689f74969edede9e5acd75843151c?s=128&d=identicon&r=PG", "display_name": "udoprog", "link": "https://stackoverflow.com/users/1170857/udoprog"}, "edited": false, "score": 2, "creation_date": 1523895829, "post_id": 49860839, "comment_id": 86739097, "body": "@udoprog: I have reworded the section in question. I did not wish to &quot;bash&quot; the OP, just draw attention to the fact that the use of <code>unsafe</code> (and raw pointers) was likely deliberate, and a clue as to the issue."}, {"owner": {"reputation": 155, "user_id": 5717561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c60400cf7a07b049f47d3d0bd8680a1?s=128&d=identicon&r=PG&f=1", "display_name": "S&#233;bastien Chapuis", "link": "https://stackoverflow.com/users/5717561/s%c3%a9bastien-chapuis"}, "edited": false, "score": 0, "creation_date": 1523922210, "post_id": 49860839, "comment_id": 86751028, "body": "@MatthieuM: Thanks for your answer. Now I understand the problem with my code. I was hoping Pin could solve this issue with self referential structures... It seems that rental and owning-ref are the only solutions for now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 155, "user_id": 5717561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c60400cf7a07b049f47d3d0bd8680a1?s=128&d=identicon&r=PG&f=1", "display_name": "S&#233;bastien Chapuis", "link": "https://stackoverflow.com/users/5717561/s%c3%a9bastien-chapuis"}, "edited": false, "score": 0, "creation_date": 1523923585, "post_id": 49860839, "comment_id": 86751338, "body": "@S&#233;bastienChapuis it does &quot;solve&quot; the overall issue, in a fashion. The problem is that values are not guaranteed to remain at a stable address, and references require that they do. See <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a> for a larger discussion and details. I expect that rental and owning-ref will be updated to <i>use</i> <code>Pin</code> / <code>PinBox</code> instead of their own custom &quot;stable address&quot; traits."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 7, "last_activity_date": 1523896114, "last_edit_date": 1523896114, "creation_date": 1523891930, "answer_id": 49860839, "question_id": 49860149, "link": "https://stackoverflow.com/questions/49860149/how-to-use-the-pin-struct-with-self-referential-structures/49860839#49860839", "title": "How to use the Pin struct with self-referential structures?", "body": "<blockquote>\n  <p>Is it possible to use variables with lifetime parameters with <code>Pin</code>?</p>\n</blockquote>\n\n<p>Probably.</p>\n\n<blockquote>\n  <p>The difference between my code and the code in the blog post is that I'm using a variable with a lifetime parameter, instead of a raw pointer.</p>\n</blockquote>\n\n<p>This changes <strong>everything</strong>: the Rust language makes no guarantee on the validity of pointers, but makes strict guarantees on the validity of references.</p>\n\n<p>Let's examine the lifetime issue of references and see why the article specifically used raw pointers (and <code>unsafe</code> code) to overcome the issue.</p>\n\n<hr>\n\n<p>The signature of <a href=\"https://doc.rust-lang.org/nightly/std/mem/struct.Pin.html#method.get_mut\" rel=\"noreferrer\"><code>Pin::get_mut</code></a> is:</p>\n\n<blockquote>\n<pre><code>pub unsafe fn get_mut&lt;'b&gt;(this: &amp;'b mut Pin&lt;'a, T&gt;) -&gt; &amp;'b mut T\n</code></pre>\n</blockquote>\n\n<p>That is, the reference is only valid as long as the reference to <code>Pin</code> is valid.</p>\n\n<p>Since <code>Pin</code> is passed by value as argument, it is dropped at the end of the function scope. Yet, you attempt to retain a reference to it beyond that point. This is <strong>unsafe</strong>.</p>\n\n<p>Using raw pointers is fine (unchecked), because whoever attempts to use the raw pointer will need to use an <code>unsafe</code> block, taking responsibility for ensuring that the pointer is indeed valid.</p>\n"}], "owner": {"reputation": 155, "user_id": 5717561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c60400cf7a07b049f47d3d0bd8680a1?s=128&d=identicon&r=PG&f=1", "display_name": "S&#233;bastien Chapuis", "link": "https://stackoverflow.com/users/5717561/s%c3%a9bastien-chapuis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3322, "favorite_count": 3, "accepted_answer_id": 49860839, "answer_count": 1, "score": 7, "last_activity_date": 1586558794, "creation_date": 1523889979, "last_edit_date": 1586558794, "question_id": 49860149, "link": "https://stackoverflow.com/questions/49860149/how-to-use-the-pin-struct-with-self-referential-structures", "title": "How to use the Pin struct with self-referential structures?", "body": "<p>I'm trying to use the new <a href=\"https://doc.rust-lang.org/nightly/std/mem/struct.Pin.html\" rel=\"nofollow noreferrer\"><code>Pin</code></a> feature. After reading <a href=\"https://www.ralfj.de/blog/2018/04/05/a-formal-look-at-pinning.html\" rel=\"nofollow noreferrer\">this blog post</a>, I've started to write some code:</p>\n\n<pre><code>#![feature(pin, arbitrary_self_types)]\nuse std::mem::Pin;\n\npub struct Foo {\n    var: i32,\n}\n\npub struct FooRef&lt;'i&gt; {\n    ref_var: &amp;'i i32,\n    other: i32,\n}\n\npub struct SimpleRef&lt;'data&gt; {\n    foo: Box&lt;Foo&gt;,\n    bar: Option&lt;FooRef&lt;'data&gt;&gt;,\n}\n\nimpl&lt;'data&gt; SimpleRef&lt;'data&gt; {\n    fn new() -&gt; SimpleRef&lt;'data&gt; {\n        SimpleRef {\n            foo: Box::new({ Foo { var: 42 } }),\n            bar: None,\n        }\n    }\n\n    fn init(mut self: Pin&lt;SimpleRef&lt;'data&gt;&gt;) {\n        let this: &amp;mut SimpleRef = unsafe { Pin::get_mut(&amp;mut self) };\n        let a = FooRef {\n            ref_var: &amp;this.foo.var,\n            other: 12,\n        };\n        this.bar = Some(a);\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>But I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n  --&gt; src/main.rs:27:45\n   |\n27 |         let this: &amp;mut SimpleRef = unsafe { Pin::get_mut(&amp;mut self) };\n   |                                             ^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 26:5...\n  --&gt; src/main.rs:26:5\n   |\n26 | /     fn init(mut self: Pin&lt;SimpleRef&lt;'data&gt;&gt;) {\n27 | |         let this: &amp;mut SimpleRef = unsafe { Pin::get_mut(&amp;mut self) };\n28 | |         let a = FooRef {\n29 | |             ref_var: &amp;this.foo.var,\n...  |\n32 | |         this.bar = Some(a);\n33 | |     }\n   | |_____^\nnote: ...but the lifetime must also be valid for the lifetime 'data as defined on the impl at 18:1...\n  --&gt; src/main.rs:18:1\n   |\n18 | impl&lt;'data&gt; SimpleRef&lt;'data&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = note: ...so that the expression is assignable:\n           expected &amp;mut std::mem::Pin&lt;'_, SimpleRef&lt;'_&gt;&gt;\n              found &amp;mut std::mem::Pin&lt;'_, SimpleRef&lt;'data&gt;&gt;\n</code></pre>\n\n<p>The difference between my code and the code in the blog post is that I'm using a variable with a lifetime parameter, instead of a raw pointer.<br>\nIs it possible to use variables with lifetime parameters with <code>Pin</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1523887407, "post_id": 49859102, "comment_id": 86733293, "body": "A definition of a struct <i>and</i> an implementation inside a body of a function? You might want to restructure your code, because this is not very readable."}], "answers": [{"tags": [], "owner": {"reputation": 59, "user_id": 7482754, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af0e56bde7a998d705b7d2188bf6562a?s=128&d=identicon&r=PG", "display_name": "thatlittlegit", "link": "https://stackoverflow.com/users/7482754/thatlittlegit"}, "is_accepted": true, "score": 1, "last_activity_date": 1523893662, "last_edit_date": 1523893662, "creation_date": 1523889531, "answer_id": 49859992, "question_id": 49859102, "link": "https://stackoverflow.com/questions/49859102/struct-property-accessable-from-method-but-not-from-outside/49859992#49859992", "title": "Struct property accessable from method but not from outside", "body": "<p>When I initialize the <code>Tokenizer</code>, I use:</p>\n\n<pre><code>let mut tok = Tokenizer::new(html.clone(), std::default::Default::default());\n</code></pre>\n\n<p>The problem is that I'm telling the Tokenizer to use <code>html.<b>clone()</b></code> instead of <code>html</code>. As such, it is writing <code>returned_vec</code> to the cloned object, not <code>html</code>. Changing a few things, such as using a variable with mutable references, fixes this problem.</p>\n\n\n"}], "owner": {"reputation": 59, "user_id": 7482754, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af0e56bde7a998d705b7d2188bf6562a?s=128&d=identicon&r=PG", "display_name": "thatlittlegit", "link": "https://stackoverflow.com/users/7482754/thatlittlegit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 49859992, "answer_count": 1, "score": 0, "last_activity_date": 1523893662, "creation_date": 1523887059, "question_id": 49859102, "link": "https://stackoverflow.com/questions/49859102/struct-property-accessable-from-method-but-not-from-outside", "title": "Struct property accessable from method but not from outside", "body": "<p>I'm trying to build a basic web crawler in Rust, which I'm trying to port to <a href=\"https://github.com/servo/html5ever\" rel=\"nofollow noreferrer\">html5ever</a>. As of right now, I have a function with a struct inside that is supposed to return a <code>Vec&lt;String&gt;</code>. It gets this <code>Vec</code> from the struct in the return statement. Why does it always return an empty vector? (Does it have anything to do with the lifetime parameters?)</p>\n\n<pre><code>fn find_urls_in_html&lt;'a&gt;(\n    original_url: &amp;Url,\n    raw_html: String,\n    fetched_cache: &amp;Vec&lt;String&gt;,\n) -&gt; Vec&lt;String&gt; {\n    #[derive(Clone)]\n    struct Sink&lt;'a&gt; {\n        original_url: &amp;'a Url,\n        returned_vec: Vec&lt;String&gt;,\n        fetched_cache: &amp;'a Vec&lt;String&gt;,\n    }\n\n    impl&lt;'a&gt; TokenSink for Sink&lt;'a&gt; {\n        type Handle = ();\n\n        fn process_token(&amp;mut self, token: Token, _line_number: u64) -&gt; TokenSinkResult&lt;()&gt; {\n            trace!(\"token {:?}\", token);\n            match token {\n                TagToken(tag) =&gt; {\n                    if tag.kind == StartTag &amp;&amp; tag.attrs.len() != 0 {\n                        let _attribute_name = get_attribute_for_elem(&amp;tag.name);\n\n                        if _attribute_name == None {\n                            return TokenSinkResult::Continue;\n                        }\n                        let attribute_name = _attribute_name.unwrap();\n\n                        for attribute in &amp;tag.attrs {\n                            if &amp;attribute.name.local != attribute_name {\n                                continue;\n                            }\n\n                            trace!(\"element {:?} found\", tag);\n                            add_urls_to_vec(\n                                repair_suggested_url(\n                                    self.original_url,\n                                    (&amp;attribute.name.local, &amp;attribute.value),\n                                ),\n                                &amp;mut self.returned_vec,\n                                &amp;self.fetched_cache,\n                            );\n                        }\n                    }\n                }\n                ParseError(error) =&gt; {\n                    warn!(\"error parsing html for {}: {:?}\", self.original_url, error);\n                }\n                _ =&gt; {}\n            }\n            return TokenSinkResult::Continue;\n        }\n    }\n\n    let html = Sink {\n        original_url: original_url,\n        returned_vec: Vec::new(),\n        fetched_cache: fetched_cache,\n    };\n\n    let mut byte_tendril = ByteTendril::new();\n    {\n        let tendril_push_result = byte_tendril.try_push_bytes(&amp;raw_html.into_bytes());\n\n        if tendril_push_result.is_err() {\n            warn!(\"error pushing bytes to tendril: {:?}\", tendril_push_result);\n            return Vec::new();\n        }\n    }\n\n    let mut queue = BufferQueue::new();\n    queue.push_back(byte_tendril.try_reinterpret().unwrap());\n    let mut tok = Tokenizer::new(html.clone(), std::default::Default::default()); // default default! default?\n    let feed = tok.feed(&amp;mut queue);\n\n    return html.returned_vec;\n}\n</code></pre>\n\n<p>The output ends with no warning (and a panic, caused by another function due to this being empty). Can anyone help me figure out what's going on?</p>\n\n<p>Thanks in advance.</p>\n"}, {"tags": ["macos", "rust", "dynamic-linking"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1523885327, "post_id": 49858271, "comment_id": 86731724, "body": "Basically, if you didn&#39;t install runtime library into your system that can&#39;t work. Now, how to install this is some thing I don&#39;t know."}], "owner": {"reputation": 116848, "user_id": 55075, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8bbc94977312d285045b2412257b6cb8?s=128&d=identicon&r=PG", "display_name": "kenorb", "link": "https://stackoverflow.com/users/55075/kenorb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 334, "favorite_count": 1, "closed_date": 1523893024, "answer_count": 0, "score": 2, "last_activity_date": 1523892896, "creation_date": 1523884505, "last_edit_date": 1523892896, "question_id": 49858271, "link": "https://stackoverflow.com/questions/49858271/how-to-execute-a-simple-rust-program-compiled-with-prefer-dynamic", "closed_reason": "Duplicate", "title": "How to execute a simple Rust program compiled with prefer-dynamic?", "body": "<p>I've installed Rust compiler via <code>brew install rust</code> and I have the following Hello World program:</p>\n\n<pre><code>fn main() {\n    println!(\"Hello World!\");\n}\n</code></pre>\n\n<p>I've compiled it via: <code>rustc -Cprefer-dynamic hello.rs</code> for a smaller size.</p>\n\n<p>However I've got the following error when executing it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ ./hello \ndyld: Library not loaded: @rpath/libstd-99517fd8418575af.dylib\n  Referenced from: mydir/./hello\n  Reason: image not found\nAbort trap: 6\n</code></pre>\n\n<p>Here is the output from <code>otool</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ otool -L hello\nhello:\n    @rpath/libstd-99517fd8418575af.dylib (compatibility version 0.0.0, current version 0.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.0.0)\n    /usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0)\n</code></pre>\n\n<p>What I am missing?</p>\n"}, {"tags": ["string", "rust", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 5, "last_activity_date": 1523892811, "last_edit_date": 1523892811, "creation_date": 1523879314, "answer_id": 49856591, "question_id": 49856439, "link": "https://stackoverflow.com/questions/49856439/why-cant-i-use-a-str-in-trim-matches-like-in-trim-right-matches/49856591#49856591", "title": "Why can&#39;t I use a &amp;str in trim_matches() like in trim_right_matches()?", "body": "<p>These two functions have similar signatures, but if you look closer you'll notice that their search patterns are actually different:</p>\n\n<p><code>trim_right_matches</code>:</p>\n\n<pre><code>pub fn trim_right_matches&lt;'a, P&gt;(&amp;'a self, pat: P) -&gt; &amp;'a str\nwhere\n    P: Pattern&lt;'a&gt;,\n    &lt;P as Pattern&lt;'a&gt;&gt;::Searcher: ReverseSearcher&lt;'a&gt; // ReverseSearcher\n</code></pre>\n\n<p><code>trim_matches</code>:</p>\n\n<pre><code>pub fn trim_matches&lt;'a, P&gt;(&amp;'a self, pat: P) -&gt; &amp;'a str\nwhere\n    P: Pattern&lt;'a&gt;,\n    &lt;P as Pattern&lt;'a&gt;&gt;::Searcher: DoubleEndedSearcher&lt;'a&gt; // DoubleEndedSearcher\n</code></pre>\n\n<p>In <a href=\"https://doc.rust-lang.org/stable/std/str/pattern/trait.DoubleEndedSearcher.html#examples\" rel=\"nofollow noreferrer\">the docs for <code>DoubleEndedSearcher</code></a> you can find the explanation why <code>&amp;str</code> can't be a <code>DoubleEndedSearcher</code>:</p>\n\n<blockquote>\n  <p><code>(&amp;str)::Searcher</code> is not a <code>DoubleEndedSearcher</code> because the pattern <code>\"aa\"</code>\n  in the haystack <code>\"aaa\"</code> matches as either <code>\"[aa]a\"</code> or <code>\"a[aa]\"</code>, depending\n  from which side it is searched.</p>\n</blockquote>\n\n<p>As for why your workaround works:</p>\n\n<pre><code>\"[(foo)]\".trim_matches(&amp;['(', '[', ']', ')'] as &amp;[_]));\n</code></pre>\n\n<p>It's because it is actually not matching on a <code>&amp;str</code>, but on <code>&amp;[char]</code>, which is not a string slice but a slice of an array of characters, which is a valid <code>DoubleEndedSearcher</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 639, "user_id": 5515741, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/682630a1255cc563c0fd53ad1820f6b0?s=128&d=identicon&r=PG&f=1", "display_name": "blz", "link": "https://stackoverflow.com/users/5515741/blz"}, "edited": false, "score": 0, "creation_date": 1523881493, "post_id": 49856663, "comment_id": 86728957, "body": "I thought that <code>trim_matches</code> in rust was same as <code>trim</code> in PHP."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 639, "user_id": 5515741, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/682630a1255cc563c0fd53ad1820f6b0?s=128&d=identicon&r=PG&f=1", "display_name": "blz", "link": "https://stackoverflow.com/users/5515741/blz"}, "edited": false, "score": 0, "creation_date": 1523883236, "post_id": 49856663, "comment_id": 86730225, "body": "Not quite. And unfortunately the documentation for this is not ideal."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 5, "last_activity_date": 1523879539, "creation_date": 1523879539, "answer_id": 49856663, "question_id": 49856439, "link": "https://stackoverflow.com/questions/49856439/why-cant-i-use-a-str-in-trim-matches-like-in-trim-right-matches/49856663#49856663", "title": "Why can&#39;t I use a &amp;str in trim_matches() like in trim_right_matches()?", "body": "<p>The first bit of code doesn't do what you think. It trims exactly the string <code>\")]\"</code> from the end, but it would not modify the string <code>\"([foo])\"</code>. In other words, passing a string to the trim functions means \"trim exactly this string\", not \"trim all of the characters occurring in this string\". The code that doesn't compile wouldn't do what you want, because it would only trim away the exact string <code>\"[()]\"</code>, and this doesn't occur in your examples.</p>\n\n<p>Passing an array of chars instead trims all of the characters individually, no matter what order.</p>\n\n<p>So you want the array of chars, even though passing a string looks so much more convenient.</p>\n\n<p>As for why the code you wrote doesn't compile, ljedrz answered that part.</p>\n"}], "owner": {"reputation": 639, "user_id": 5515741, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/682630a1255cc563c0fd53ad1820f6b0?s=128&d=identicon&r=PG&f=1", "display_name": "blz", "link": "https://stackoverflow.com/users/5515741/blz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 942, "favorite_count": 0, "accepted_answer_id": 49856663, "answer_count": 2, "score": 3, "last_activity_date": 1523892811, "creation_date": 1523878888, "last_edit_date": 1523892759, "question_id": 49856439, "link": "https://stackoverflow.com/questions/49856439/why-cant-i-use-a-str-in-trim-matches-like-in-trim-right-matches", "title": "Why can&#39;t I use a &amp;str in trim_matches() like in trim_right_matches()?", "body": "<p>In <code>trim_right_matches</code> I can pass a string value:</p>\n\n<pre><code>println!(\"{}\", \"[(foo)]\".trim_right_matches(\")]\"));\n// [(foo\n</code></pre>\n\n<p>I cannot, however, use a string value in <code>trim_matches</code>:</p>\n\n<pre><code>println!(\"{}\", \"[(foo)]\".trim_matches(\"[()]\"));\n</code></pre>\n\n<p>Because I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::str::pattern::StrSearcher&lt;'_, '_&gt;: std::str::pattern::DoubleEndedSearcher&lt;'_&gt;` is not satisfied\n --&gt; test.rs:2:27\n  |\n2 |     println!(\"{}\", \"[(foo)]\".trim_matches(\"[()]\"));\n  |                              ^^^^^^^^^^^^ the trait `std::str::pattern::DoubleEndedSearcher&lt;'_&gt;` is not implemented for `std::str::pattern::StrSearcher&lt;'_, '_&gt;`\nerror: aborting due to previous error\n</code></pre>\n\n<p>The following code works:</p>\n\n<pre><code>println!(\"{}\", \"[(foo)]\".trim_matches(&amp;['(', '[', ']', ')'] as &amp;[_]));\n// foo\n</code></pre>\n\n<p>However, it is long and not as easy to read as a single string value; I want to be able to use a string value like with <code>trim_right_matches</code>.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 917, "user_id": 3014263, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rFh51.jpg?s=128&g=1", "display_name": "AbhiNickz", "link": "https://stackoverflow.com/users/3014263/abhinickz"}, "edited": false, "score": 0, "creation_date": 1523857491, "post_id": 49849878, "comment_id": 86715065, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/49712872/refactoring-to-workspace-structure-causes-extern-crate-imports-to-not-work\">Refactoring to workspace structure causes extern crate imports to not work</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523892696, "post_id": 49849878, "comment_id": 86737238, "body": "What do you want the behavior to be? Should <code>cargo build --all</code> put all the build artifacts of the workspace members of <code>project_b_dependency</code> into the <code>myworkspace</code> target directory?"}, {"owner": {"reputation": 603, "user_id": 5426649, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06e8dc32d97b1f0deb88bba090f58e46?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier", "link": "https://stackoverflow.com/users/5426649/olivier"}, "edited": false, "score": 0, "creation_date": 1523933765, "post_id": 49849878, "comment_id": 86753630, "body": "Yes, that&#39;s the behavior I desired. Thankfully, everyone was able to answer my question."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1614761150, "post_id": 49851819, "comment_id": 117480497, "body": "Does that mean that the workspace <code>project_b_dependency</code> can only be imported all at once? Or can I import only one of its crates?"}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 3, "last_activity_date": 1523892596, "last_edit_date": 1523892596, "creation_date": 1523864087, "answer_id": 49851819, "question_id": 49849878, "link": "https://stackoverflow.com/questions/49849878/how-to-deal-with-multiple-nested-workspace-roots/49851819#49851819", "title": "How to deal with multiple nested workspace roots?", "body": "<p>It seems that nested workspaces are quite difficult to manage, so\none possibility is to change the layout of you project: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 myworkspace\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.lock\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 project_a\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 lib.rs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 project_b\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 lib.rs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 project_b_dependency\n    \u251c\u2500\u2500 Cargo.toml\n    \u2514\u2500\u2500 src\n        \u2514\u2500\u2500 lib.rs\n</code></pre>\n\n<p>in <code>myworkspace/Cargo.toml</code>:</p>\n\n<pre><code>[workspace]\nmembers= [\"project_a\", \"project_b\"]\n</code></pre>\n\n<p>In <code>myworkspace/project_b/Cargo.toml</code></p>\n\n<pre><code>[dependencies]\nproject_b_dependency = {path = \"../../project_b_dependency\"}\n</code></pre>\n\n<p>I've tried to use <code>workspace.exclude</code> property with your layout but without success.</p>\n"}, {"comments": [{"owner": {"reputation": 141, "user_id": 7243716, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7974d294c117bff77e49d0313bc2d899?s=128&d=identicon&r=PG&f=1", "display_name": "Raphael D", "link": "https://stackoverflow.com/users/7243716/raphael-d"}, "edited": false, "score": 0, "creation_date": 1603967117, "post_id": 49852150, "comment_id": 114205474, "body": "Since this post, it&#39;s currently possible as <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-workspace-section\" rel=\"nofollow noreferrer\">the docs</a> now state. Also : <code>An empty [workspace] table can be used with a [package] to conveniently create a workspace with the package and all of its path dependencies.</code>"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 5, "last_activity_date": 1523876353, "last_edit_date": 1523876353, "creation_date": 1523865222, "answer_id": 49852150, "question_id": 49849878, "link": "https://stackoverflow.com/questions/49849878/how-to-deal-with-multiple-nested-workspace-roots/49852150#49852150", "title": "How to deal with multiple nested workspace roots?", "body": "<p>Workspaces can't be nested; as <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-workspace-section\" rel=\"nofollow noreferrer\">the docs</a> state:</p>\n\n<blockquote>\n  <p>A crate may either specify package.workspace or specify <code>[workspace]</code>.\n  That is, <strong>a crate cannot both be a root crate in a workspace (contain\n  <code>[workspace]</code>) and also be a member crate of another workspace</strong> (contain\n  <code>package.workspace</code>).</p>\n</blockquote>\n\n<p>The Cargo <a href=\"https://github.com/nox/rust-rfcs/blob/master/text/1525-cargo-workspace.md#validating-a-workspace\" rel=\"nofollow noreferrer\">workspace RFC</a> also specified this:</p>\n\n<blockquote>\n  <p>A workspace is valid if these two properties hold:</p>\n  \n  <ul>\n  <li><strong>A workspace has only one root crate (that with <code>[workspace]</code> in <code>Cargo.toml</code>)</strong>.</li>\n  <li>All workspace crates defined in <code>workspace.members</code> point back to the workspace root with <code>package.workspace</code>.</li>\n  </ul>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 1079, "user_id": 334103, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0cb246de47e5ecdf401055766c600b9d?s=128&d=identicon&r=PG", "display_name": "jolestar", "link": "https://stackoverflow.com/users/334103/jolestar"}, "is_accepted": false, "score": 0, "last_activity_date": 1568179857, "creation_date": 1568179857, "answer_id": 57882663, "question_id": 49849878, "link": "https://stackoverflow.com/questions/49849878/how-to-deal-with-multiple-nested-workspace-roots/57882663#57882663", "title": "How to deal with multiple nested workspace roots?", "body": "<p>I find a method to keep git submodule.</p>\n\n<ol>\n<li>Add submodule project's workspace members to parent Cargo.toml</li>\n<li>Remove submodule project's Cargo.toml</li>\n<li>Use submodule_name/crate path to define dependency.</li>\n</ol>\n"}], "owner": {"reputation": 603, "user_id": 5426649, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/06e8dc32d97b1f0deb88bba090f58e46?s=128&d=identicon&r=PG&f=1", "display_name": "Olivier", "link": "https://stackoverflow.com/users/5426649/olivier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2278, "favorite_count": 0, "accepted_answer_id": 49851819, "answer_count": 3, "score": 3, "last_activity_date": 1568179857, "creation_date": 1523854704, "last_edit_date": 1523892557, "question_id": 49849878, "link": "https://stackoverflow.com/questions/49849878/how-to-deal-with-multiple-nested-workspace-roots", "title": "How to deal with multiple nested workspace roots?", "body": "<p>How can you have multiple nested workspace with Cargo?</p>\n\n<p>I have the following project structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>myworkspace\n\u251c\u2500\u2500 project_a\n\u2502\u00a0  \u2514\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 project_b\n\u2502\u00a0  \u2514\u2500\u2500 Cargo.toml\n\u2502   \u2514\u2500\u2500 project_b_dependency\n|       \u2514\u2500\u2500 Cargo.toml\n\u2514\u2500\u2500 Cargo.toml\n</code></pre>\n\n<p>Where <code>project_b_dependency</code> is a big library which is a git submodule which has a workspace by itself.</p>\n\n<p>I get an error when I run <code>cargo build</code> because there is a workspace within a workspace.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\nerror: multiple workspace roots found in the same workspace:\n  /myworkspace\n  /myworkspace/project_b/project_b_dependency\n</code></pre>\n\n<p>Is there a simple work-around? I want to keep <code>project_b_dependency</code> in source control as a submodule.</p>\n\n<p>This is not a duplicate of <a href=\"https://stackoverflow.com/questions/49712872/refactoring-to-workspace-structure-causes-extern-crate-imports-to-not-work\">Refactoring to workspace structure causes extern crate imports to not work</a> because I want to know how I can deal with nested workspaces.</p>\n"}, {"tags": ["windows", "rust", "lldb"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523833282, "post_id": 49847553, "comment_id": 86710116, "body": "<a href=\"https://github.com/Microsoft/WSL/issues/2028\" rel=\"nofollow noreferrer\">Are you using WSL</a>?"}, {"owner": {"reputation": 3629, "user_id": 379639, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/4fa63505dd4dd4691b87d30508b1bfd3?s=128&d=identicon&r=PG", "display_name": "Xavier Shay", "link": "https://stackoverflow.com/users/379639/xavier-shay"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523833614, "post_id": 49847553, "comment_id": 86710182, "body": "not intentionally? First I&#39;ve heard of it. The above was run with powershell."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523897407, "post_id": 49847553, "comment_id": 86739941, "body": "From where did you get LLDB? It&#39;s not installed as part of Rust or Windows, AFAICT."}, {"owner": {"reputation": 3629, "user_id": 379639, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/4fa63505dd4dd4691b87d30508b1bfd3?s=128&d=identicon&r=PG", "display_name": "Xavier Shay", "link": "https://stackoverflow.com/users/379639/xavier-shay"}, "edited": false, "score": 0, "creation_date": 1523907993, "post_id": 49847553, "comment_id": 86745583, "body": "followed instructions at <a href=\"https://github.com/vadimcn/vscode-lldb/wiki/Installing-LLDB\" rel=\"nofollow noreferrer\">github.com/vadimcn/vscode-lldb/wiki/Installing-LLDB</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1523899182, "last_edit_date": 1523899182, "creation_date": 1523898407, "answer_id": 49862756, "question_id": 49847553, "link": "https://stackoverflow.com/questions/49847553/process-launch-failed-unknown-error-when-trying-to-run-rust-program-via-lldb/49862756#49862756", "title": "&quot;process launch failed: unknown error&quot; when trying to run Rust program via LLDB", "body": "<p>I do not believe you can use LLDB to debug a 64-bit Rust program on Windows.</p>\n\n<p>The <a href=\"https://lldb.llvm.org/\" rel=\"nofollow noreferrer\">LLDB home page states</a>:</p>\n\n<blockquote>\n  <ul>\n  <li>Windows local user-space debugging for i386 (*)</li>\n  </ul>\n  \n  <p>(*) Support for Windows is under active development. Basic\n  functionality is expected to work, with functionality improving\n  rapidly.</p>\n</blockquote>\n\n<p>And the LLDB extension for <a href=\"https://github.com/vadimcn/vscode-lldb/wiki/Installing-on-Windows\" rel=\"nofollow noreferrer\">Visual Studio Code states</a> (emphasis mine):</p>\n\n<blockquote>\n  <p>At the moment, Windows port of LLDB is known to work reliably only\n  with 32-bit binaries and DWARF debug info:</p>\n  \n  <ul>\n  <li>LLDB's support of MSVC .PDB debug info format is incomplete. Only DWARF debug info works reliably.</li>\n  <li>The 64-bit LLDB is very unstable, so I cannot recommend using it. Unfortunately, 32-bit debuggers are limited to debugging 32-bit\n  processes only.</li>\n  </ul>\n  \n  <p>In practice, the above means that for C++ programs, you'll need to\n  compile with i686 MinGW toolchain (not MSVC!). <strong>For Rust you'll need to\n  use i686-pc-windows-gnu</strong>.</p>\n</blockquote>\n\n<p>Thus, at this point in time, I would not recommend attempting to use LLDB. Since you have installed the MSVC toolchain, I advise you to investigate installing something native, such as <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debugger-download-tools\" rel=\"nofollow noreferrer\">WinDbg</a>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/0zQEF.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/0zQEF.png\" alt=\"WinDbg on 64-bit Rust program\"></a></p>\n"}], "owner": {"reputation": 3629, "user_id": 379639, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/4fa63505dd4dd4691b87d30508b1bfd3?s=128&d=identicon&r=PG", "display_name": "Xavier Shay", "link": "https://stackoverflow.com/users/379639/xavier-shay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1240, "favorite_count": 0, "accepted_answer_id": 49862756, "answer_count": 1, "score": 3, "last_activity_date": 1523899182, "creation_date": 1523832745, "last_edit_date": 1523897180, "question_id": 49847553, "link": "https://stackoverflow.com/questions/49847553/process-launch-failed-unknown-error-when-trying-to-run-rust-program-via-lldb", "title": "&quot;process launch failed: unknown error&quot; when trying to run Rust program via LLDB", "body": "<p>I am unable to launch Rust binaries with LLDB on Windows 10:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; cat test.rs\nfn main() {\n    println!(\"hello\");\n}\n&gt; rustc --version --verbose\nrustc 1.25.0 (84203cac6 2018-03-25)\nbinary: rustc\ncommit-hash: 84203cac67e65ca8640b8392348411098c856985\ncommit-date: 2018-03-25\nhost: x86_64-pc-windows-msvc\nrelease: 1.25.0\nLLVM version: 6.0\n&gt; rustc -g test.rs\n&gt; .\\test.exe\nhello\n&gt; lldb --version\nlldb version 6.0.0 (https://github.com/llvm-mirror/lldb.git revision 38001b27c9f319a3112271ca44fa0e1912583570)\n  clang revision b3bac44cb354b63214b16fab24b5c0ffd392ec02\n  llvm revision bbbe81ad6ad6db7ccb332df1f1932a5589a7eeca\n&gt; lldb test.exe\n(lldb) target create \"test.exe\"\nCurrent executable set to 'test.exe' (x86_64).\n(lldb) process launch\nerror: process launch failed: unknown error\n</code></pre>\n\n<p>LLDB works fine for other executables on my system, for example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; lldb C:\\Windows\\system32\\cmd.exe\n(lldb) target create \"C:\\\\Windows\\\\system32\\\\cmd.exe\"\nCurrent executable set to 'C:\\Windows\\system32\\cmd.exe' (i686).\n(lldb) process launch\nProcess 15944 launching\n(lldb) Process 15944 launched: 'C:\\Windows\\system32\\cmd.exe' (i686)\n</code></pre>\n\n<p>LLDB and Rust are both fresh installs.</p>\n\n<p>Is there a way to get more information from LLDB about why it isn't working?</p>\n"}, {"tags": ["multithreading", "concurrency", "rust"], "comments": [{"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 1, "creation_date": 1523822962, "post_id": 49846056, "comment_id": 86707503, "body": "you could just pass mpsc senders to reach thread and consume only one result on the receiver side."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523824008, "post_id": 49846056, "comment_id": 86707820, "body": "I believe your question is already answered by <a href=\"https://stackoverflow.com/q/35883390/155423\">How to check if a thread has finished in Rust?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/49846056/edit\">edit</a> your question to explain how this question is not answered by those answers."}, {"owner": {"reputation": 5549, "user_id": 775982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/87058ec6a2d1628e392fc444e8c159df?s=128&d=identicon&r=PG", "display_name": "Caspar", "link": "https://stackoverflow.com/users/775982/caspar"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1523938038, "post_id": 49846056, "comment_id": 86754694, "body": "@the8472 yes, that is what I meant by &quot;using a shared queue/channels/similar&quot; - I&#39;m after a neater approach than that."}, {"owner": {"reputation": 5549, "user_id": 775982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/87058ec6a2d1628e392fc444e8c159df?s=128&d=identicon&r=PG", "display_name": "Caspar", "link": "https://stackoverflow.com/users/775982/caspar"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523938183, "post_id": 49846056, "comment_id": 86754746, "body": "@Shepmaster I have edited the question to clarify that I&#39;m after an existing solution for collecting results; I think with your linked Q I would still need to roll &quot;collecting the results in a queue&quot; myself (thanks for the pointer though!)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523969269, "post_id": 49846056, "comment_id": 86772676, "body": "A side note on idiomatic Rust: you really should import some types. Having so many fully-qualified things is just ugly."}, {"owner": {"reputation": 5549, "user_id": 775982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/87058ec6a2d1628e392fc444e8c159df?s=128&d=identicon&r=PG", "display_name": "Caspar", "link": "https://stackoverflow.com/users/775982/caspar"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1524024951, "post_id": 49846056, "comment_id": 86797771, "body": "@Shepmaster yep, am aware. This was meant to be a cut down example with some types fully qualified for clarity &amp; ease of copy-pasting, but at some point I went a bit overboard :)"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1523892479, "post_id": 49846652, "comment_id": 86737095, "body": "This does not, in any way, guarantee that the outputs will be shown in order though. There is a race condition between setting the variable and reading it: multiple threads could be &quot;ready&quot; when the main thread acts, and it will never know which was first."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1523894643, "post_id": 49846652, "comment_id": 86738408, "body": "The concept of &quot;first&quot; thread finishing doesn&#39;t really make sense anyway. This will join the threads roughly in the order they are finished, with threads that finish around the same time treated in creation order, which is sufficient in most cases. This is for example what the <code>WaitAny</code> method guarantees in C#: &quot;If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.&quot;"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1523895409, "post_id": 49846652, "comment_id": 86738837, "body": "I <i>fully</i> agree. However, I think this (inherent) limitation should be mentioned in the answer itself. For example, a MPSC queue to communicate the index of the thread (posted from the thread) would be more precise... and move the race to whoever locks the queue first."}, {"owner": {"reputation": 5549, "user_id": 775982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/87058ec6a2d1628e392fc444e8c159df?s=128&d=identicon&r=PG", "display_name": "Caspar", "link": "https://stackoverflow.com/users/775982/caspar"}, "edited": false, "score": 0, "creation_date": 1523938763, "post_id": 49846652, "comment_id": 86754893, "body": "Is there any advantage to using a <code>Condvar</code> over using an <code>mpsc::channel</code>? I appreciate the pointer in that direction (especially since Condvar&#39;s API is a bit tricky) but it seems like it has more moving parts than a channel-based solution, and I haven&#39;t spotted any upside yet."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 1, "last_activity_date": 1523825385, "creation_date": 1523825385, "answer_id": 49846652, "question_id": 49846056, "link": "https://stackoverflow.com/questions/49846056/is-there-an-api-to-race-n-threads-or-n-closures-on-n-threads-to-completion/49846652#49846652", "title": "Is there an API to race N threads (or N closures on N threads) to completion?", "body": "<p>These problems can be solved by using a <a href=\"https://en.wikipedia.org/wiki/Monitor_(synchronization)#Condition_variables\" rel=\"nofollow noreferrer\">condition variable</a>:</p>\n\n<pre><code>use std::sync::{Arc, Condvar, Mutex};\n\n#[derive(Debug)]\nstruct Output(i32);\n\nenum State {\n    Starting,\n    Joinable,\n    Joined,\n}\n\nfn main() {\n    let pair = Arc::new((Mutex::new(Vec::new()), Condvar::new()));\n    let mut spawned_threads = Vec::new();\n\n    let &amp;(ref lock, ref cvar) = &amp;*pair;\n    for i in 0..10 {\n        let my_pair = pair.clone();\n        let join_handle: ::std::thread::JoinHandle&lt;Output&gt; = ::std::thread::spawn(move || {\n            // pretend to do some work that takes some amount of time\n            ::std::thread::sleep(::std::time::Duration::from_millis(\n                (1000 - (100 * i)) as u64,\n            ));\n\n            let &amp;(ref lock, ref cvar) = &amp;*my_pair;\n            let mut joinable = lock.lock().unwrap();\n            joinable[i] = State::Joinable;\n            cvar.notify_one();\n            Output(i as i32) // then pretend to return the `Output` of that work\n        });\n        lock.lock().unwrap().push(State::Starting);\n        spawned_threads.push(Some(join_handle));\n    }\n\n    let mut should_stop = false;\n    while !should_stop {\n        let locked = lock.lock().unwrap();\n        let mut locked = cvar.wait(locked).unwrap();\n\n        should_stop = true;\n        for (i, state) in locked.iter_mut().enumerate() {\n            match *state {\n                State::Starting =&gt; {\n                    should_stop = false;\n                }\n                State::Joinable =&gt; {\n                    *state = State::Joined;\n                    println!(\"{:?}\", spawned_threads[i].take().unwrap().join());\n                }\n                State::Joined =&gt; (),\n            }\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=ca64bf104883a1ae69501d165605485f&amp;version=stable\" rel=\"nofollow noreferrer\">(playground link)</a></p>\n\n<p>I'm not claiming this is the simplest way to do it. The condition variable will awake the main thread every time a child thread is done. The list can show the state of each thread, if one is (about to) finish, it can be joined.</p>\n"}, {"comments": [{"owner": {"reputation": 5549, "user_id": 775982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/87058ec6a2d1628e392fc444e8c159df?s=128&d=identicon&r=PG", "display_name": "Caspar", "link": "https://stackoverflow.com/users/775982/caspar"}, "edited": false, "score": 0, "creation_date": 1524023738, "post_id": 49878557, "comment_id": 86797453, "body": "re not just sticking blocks together - with respect, it&#39;s not necessary to talk down to me :) I was asking with the idea in mind that, if it didn&#39;t already exist, I could write that crate, or if someone else writes it later then I&#39;d like to make it easy to find via this question. But if it did already exist, then I would much rather not reinvent the wheel."}, {"owner": {"reputation": 5549, "user_id": 775982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/87058ec6a2d1628e392fc444e8c159df?s=128&d=identicon&r=PG", "display_name": "Caspar", "link": "https://stackoverflow.com/users/775982/caspar"}, "edited": false, "score": 0, "creation_date": 1524024674, "post_id": 49878557, "comment_id": 86797690, "body": "To answer your implied question, nothing terrible. But to give an idea of why I&#39;d rather reuse an existing solution than roll my own, your snippet doesn&#39;t handle panics in spawned threads, so maybe <code>Output</code> needs to be <code>Result&lt;Output, String&gt;</code>, but what if <code>panic=abort</code> so that catching panics doesn&#39;t work, maybe set a panic hook instead, except then I need to preserve any existing panic hook.. maybe instead use a shared <code>Arc</code>&#39;s decreased reference count to detect the panic, hmm - etc. All solvable, but it&#39;s easier to reuse a good solution. After all, I wouldn&#39;t reinvent <code>lazy_static</code> either!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1523969996, "last_edit_date": 1523969996, "creation_date": 1523969167, "answer_id": 49878557, "question_id": 49846056, "link": "https://stackoverflow.com/questions/49846056/is-there-an-api-to-race-n-threads-or-n-closures-on-n-threads-to-completion/49878557#49878557", "title": "Is there an API to race N threads (or N closures on N threads) to completion?", "body": "<p><strong>No</strong>, there is no such API.</p>\n\n<p>You've already been presented with multiple options to solve your problem:</p>\n\n<ul>\n<li>Use <a href=\"https://stackoverflow.com/a/35883773/155423\">channels</a></li>\n<li>Use <a href=\"https://stackoverflow.com/a/49846652/155423\">a <code>CondVar</code></a></li>\n<li>Use <a href=\"https://crates.io/crates/futures\" rel=\"nofollow noreferrer\">futures</a></li>\n</ul>\n\n<p>Sometimes when programming, you have to go beyond sticking pre-made blocks together. This is supposed to be a <em>fun</em> part of programming. I encourage you to embrace it. Go create your ideal API using the components available and publish it to <a href=\"https://crates.io/\" rel=\"nofollow noreferrer\">crates.io</a>.</p>\n\n<hr>\n\n<p>I really don't see what's so terrible about the channels version:</p>\n\n<pre><code>use std::{sync::mpsc, thread, time::Duration};\n\n#[derive(Debug)]\nstruct Output(i32);\n\nfn main() {\n    let (tx, rx) = mpsc::channel();\n\n    for i in 0..10 {\n        let tx = tx.clone();\n        thread::spawn(move || {\n            thread::sleep(Duration::from_millis((1000 - (100 * i)) as u64));\n            tx.send(Output(i)).unwrap();\n        });\n    }\n    // Don't hold on to the sender ourselves\n    // Otherwise the loop would never terminate\n    drop(tx);\n\n    for r in rx {\n        println!(\"{:?}\", r);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5549, "user_id": 775982, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/87058ec6a2d1628e392fc444e8c159df?s=128&d=identicon&r=PG", "display_name": "Caspar", "link": "https://stackoverflow.com/users/775982/caspar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1523969996, "creation_date": 1523821378, "last_edit_date": 1523968927, "question_id": 49846056, "link": "https://stackoverflow.com/questions/49846056/is-there-an-api-to-race-n-threads-or-n-closures-on-n-threads-to-completion", "title": "Is there an API to race N threads (or N closures on N threads) to completion?", "body": "<p>Given several threads that complete with an <code>Output</code> value, how do I get the first <code>Output</code> that's produced? Ideally while still being able to get the remaining <code>Output</code>s later in the order they're produced, and bearing in mind that some threads may or may not terminate.</p>\n\n<p>Example:</p>\n\n<pre><code>struct Output(i32);\n\nfn main() {\n    let mut spawned_threads = Vec::new();\n\n    for i in 0..10 {\n        let join_handle: ::std::thread::JoinHandle&lt;Output&gt; = ::std::thread::spawn(move || {\n            // pretend to do some work that takes some amount of time\n            ::std::thread::sleep(::std::time::Duration::from_millis(\n                (1000 - (100 * i)) as u64,\n            ));\n            Output(i) // then pretend to return the `Output` of that work\n        });\n        spawned_threads.push(join_handle);\n    }\n\n    // I can do this to wait for each thread to finish and collect all `Output`s\n    let outputs_in_order_of_thread_spawning = spawned_threads\n        .into_iter()\n        .map(::std::thread::JoinHandle::join)\n        .collect::&lt;Vec&lt;::std::thread::Result&lt;Output&gt;&gt;&gt;();\n\n    // but how would I get the `Output`s in order of completed threads?\n}\n</code></pre>\n\n<p>I could solve the problem myself using a shared queue/channels/similar, but are there built-in APIs or existing libraries which could solve this use case for me more elegantly?</p>\n\n<p>I'm looking for an API like:</p>\n\n<pre><code>fn race_threads&lt;A: Send&gt;(\n    threads: Vec&lt;::std::thread::JoinHandle&lt;A&gt;&gt;\n) -&gt; (::std::thread::Result&lt;A&gt;, Vec&lt;::std::thread::JoinHandle&lt;A&gt;&gt;) {\n    unimplemented!(\"so far this doesn't seem to exist\")\n}\n</code></pre>\n\n<p>(<a href=\"https://github.com/rayon-rs/rayon\" rel=\"nofollow noreferrer\">Rayon</a>'s <a href=\"https://docs.rs/rayon/*/rayon/fn.join.html\" rel=\"nofollow noreferrer\"><code>join</code></a> is the closest I could find, but a) it only races 2 closures rather than an arbitrary number of closures, and b) the thread pool w/ work stealing approach doesn't make sense for my use case of having some closures that might run forever.)</p>\n\n<p>It is possible to solve this use case using pointers from <a href=\"https://stackoverflow.com/q/35883390/155423\">How to check if a thread has finished in Rust?</a> just like it's possible to solve this use case using an MPSC channel, however here I'm after a clean API to race <code>n</code> threads (or failing that, <code>n</code> closures on <code>n</code> threads).</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 14, "last_activity_date": 1552668465, "last_edit_date": 1552668465, "creation_date": 1523813333, "answer_id": 49844828, "question_id": 49844681, "link": "https://stackoverflow.com/questions/49844681/where-are-modules-installed-by-cargo-stored-in-a-rust-project/49844828#49844828", "title": "Where are modules installed by Cargo stored in a Rust project?", "body": "<p>Crates are installed globally for the current user, not per project. Currently, they are stored in <code>&lt;user directory&gt;/.cargo/registry</code>. </p>\n\n<ul>\n<li>Mac: <code>/Users/&lt;username&gt;/.cargo/registry</code></li>\n<li>Or, in general on Mac, Linux &amp; Unix: <code>$HOME/.cargo/registry</code></li>\n<li>Windows 10: <code>\\Users\\&lt;username&gt;\\.cargo\\registry</code></li>\n</ul>\n\n<p>There is an <a href=\"https://github.com/rust-lang/rfcs/pull/1615\" rel=\"noreferrer\">RFC in progress</a> to standardise this, and use the location that users of each platform would more likely expect.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/38050995/155423\">How can the location of Cargo&#39;s configuration directory be overridden?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28069678/155423\">Where does Cargo put the git requirements?</a></li>\n</ul>\n"}], "owner": {"reputation": 1376, "user_id": 7213112, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/933ad5b40bde4c78aef7faa4cd136434?s=128&d=identicon&r=PG&f=1", "display_name": "sidoshi", "link": "https://stackoverflow.com/users/7213112/sidoshi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1963, "favorite_count": 1, "accepted_answer_id": 49844828, "answer_count": 1, "score": 10, "last_activity_date": 1552668465, "creation_date": 1523812486, "last_edit_date": 1523813392, "question_id": 49844681, "link": "https://stackoverflow.com/questions/49844681/where-are-modules-installed-by-cargo-stored-in-a-rust-project", "title": "Where are modules installed by Cargo stored in a Rust project?", "body": "<p>In NodeJS, all the packages installed by NPM are stored in the <code>node_modules/</code> directory. Is there any such directory in Rust? Are the crates installed somewhere globally?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": true, "score": 5, "last_activity_date": 1523800600, "last_edit_date": 1523800600, "creation_date": 1523795355, "answer_id": 49841915, "question_id": 49841847, "link": "https://stackoverflow.com/questions/49841847/passing-the-contents-of-a-refcellmut-t-to-a-function/49841915#49841915", "title": "Passing the contents of a RefCell&lt;&amp;mut T&gt; to a function", "body": "<blockquote>\n  <p><code>push_5(*num_cell.borrow_mut());</code></p>\n</blockquote>\n\n<p>Remove the <code>*</code> and the compiler suggests</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:14:12\n   |\n14 |     push_5(num_cell.borrow_mut());\n   |            ^^^^^^^^^^^^^^^^^^^^^\n   |            |\n   |            expected mutable reference, found struct `std::cell::RefMut`\n   |            help: consider mutably borrowing here: `&amp;mut num_cell.borrow_mut()`\n   |\n   = note: expected type `&amp;mut std::vec::Vec&lt;usize&gt;`\n              found type `std::cell::RefMut&lt;'_, &amp;mut std::vec::Vec&lt;usize&gt;&gt;`\n</code></pre>\n\n<p><code>push_5(&amp;mut num_cell.borrow_mut());</code> compiles.</p>\n\n<p><code>push_5(num_cell.borrow_mut().as_mut());</code> does too</p>\n"}], "owner": {"reputation": 194, "user_id": 7732825, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/42efe0f0ead85ed3e4ac7685e982be7b?s=128&d=identicon&r=PG&f=1", "display_name": "Morten Lohne", "link": "https://stackoverflow.com/users/7732825/morten-lohne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 778, "favorite_count": 0, "accepted_answer_id": 49841915, "answer_count": 1, "score": 3, "last_activity_date": 1523800600, "creation_date": 1523794918, "last_edit_date": 1523800552, "question_id": 49841847, "link": "https://stackoverflow.com/questions/49841847/passing-the-contents-of-a-refcellmut-t-to-a-function", "title": "Passing the contents of a RefCell&lt;&amp;mut T&gt; to a function", "body": "<p>Calling methods on a borrowed <code>RefCell&lt;&amp;mut T&gt;</code> (That is, a <code>Ref&lt;&amp;mut T&gt;</code>) works as expected, but I can't seem to pass it to a function. Consider the following code:</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn main() {\n    let mut nums = vec![1, 2, 3];\n    foo(&amp;mut nums);\n    println!(\"{:?}\", nums);\n}\n\nfn foo(nums: &amp;mut Vec&lt;usize&gt;) {\n    let num_cell = RefCell::new(nums);\n\n    num_cell.borrow_mut().push(4);\n\n    push_5(*num_cell.borrow_mut());\n}\n\nfn push_5(nums: &amp;mut Vec&lt;usize&gt;) {\n    nums.push(4);\n}\n</code></pre>\n\n<p><code>num_cell.borrow_mut().push(4)</code> works, but <code>push_5(*num_cell.borrow_mut())</code> errors with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0389]: cannot borrow data mutably in a `&amp;` reference\n  --&gt; src/main.rs:14:12\n   |\n14 |     push_5(*num_cell.borrow_mut());\n   |            ^^^^^^^^^^^^^^^^^^^^^^ assignment into an immutable reference\n</code></pre>\n\n<p>After dereferencing the <code>Ref</code>, I expected to get the mutable reference inside so the error doesn't really make sense to me. What gives?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1523730946, "last_edit_date": 1523730946, "creation_date": 1523730639, "answer_id": 49834813, "question_id": 49834574, "link": "https://stackoverflow.com/questions/49834574/why-it-is-not-possible-to-use-the-syntax-in-expressions/49834813#49834813", "title": "Why it is not possible to use the ... syntax in expressions?", "body": "<p>For the same reason that you cannot use <code>&amp;*$#</code> in expressions: it's not allowed by Rust's grammar. <a href=\"https://github.com/rust-lang/rust/issues/28237\" rel=\"noreferrer\">Rust decided to use different syntax for inclusive ranges</a>. If you really care about the complete details, you can go read all 350+ comments on that issue.</p>\n\n<p>The <a href=\"https://github.com/rust-lang/rust/issues/28237#issuecomment-304145654\" rel=\"noreferrer\">TL;DR</a>:</p>\n\n<ul>\n<li>No particular syntax was liked by everyone</li>\n<li><code>...</code> is too close to a typo of <code>..</code></li>\n<li><code>...</code> in patterns is already stabilized and must be supported forever, but it will be deprecated at some point and <code>..=</code> will be preferred for that as well.</li>\n</ul>\n\n<p>The error message tells you the appropriate syntax to use instead:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>   = help: Use `..` if you need an exclusive range (a &lt; b)\n   = help: or `..=` if you need an inclusive range (a &lt;= b)\n</code></pre>\n</blockquote>\n\n<pre><code>fn how_many(x: i32) -&gt; &amp;'static str {\n    match x {\n        0 =&gt; \"no oranges\",\n        1 =&gt; \"an orange\",\n        2 | 3 =&gt; \"two or three oranges\",\n        9..=11 =&gt; \"approximately 10 oranges\",\n        _ =&gt; \"few oranges\",\n    }\n}\n\nfn pattern_matching() {\n    for x in 0..13 {\n        println!(\"{} : I have {} \", x, how_many(x));\n    }\n}\n\nfn main() {\n    println!(\"{:?}\", 2..=6);\n    pattern_matching();\n}\n</code></pre>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1026, "favorite_count": 0, "accepted_answer_id": 49834813, "answer_count": 1, "score": 2, "last_activity_date": 1523730946, "creation_date": 1523729075, "last_edit_date": 1523730547, "question_id": 49834574, "link": "https://stackoverflow.com/questions/49834574/why-it-is-not-possible-to-use-the-syntax-in-expressions", "title": "Why it is not possible to use the ... syntax in expressions?", "body": "<p>I'm trying understand the <code>...</code> syntax. Consider the following program:</p>\n\n<pre><code>fn how_many(x: i32) -&gt; &amp;'static str {\n    match x {\n        0 =&gt; \"no oranges\",\n        1 =&gt; \"an orange\",\n        2 | 3 =&gt; \"two or three oranges\",\n        9...11 =&gt; \"approximately 10 oranges\",\n        _ =&gt; \"few oranges\",\n    }\n}\n\nfn pattern_matching() {\n    for x in 0..13 {\n        println!(\"{} : I have {} \", x, how_many(x));\n    }\n}\n\nfn main() {\n    // println!(\"{:?}\", (2...6));\n    pattern_matching();\n}\n</code></pre>\n\n<p>In the above program, the <code>9...11</code> used in pattern matching compiles fine. \nWhen I try to use the same in like <code>println!(\"{:?}\", (2...6));</code> I get compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `...` syntax cannot be used in expressions\n  --&gt; src/main.rs:18:24\n   |\n18 |     println!(\"{:?}\", (2...6));\n   |                        ^^^\n   |\n   = help: Use `..` if you need an exclusive range (a &lt; b)\n   = help: or `..=` if you need an inclusive range (a &lt;= b)\n</code></pre>\n\n<p>I'm trying to understand why it is not possible to use within <code>println</code>.</p>\n"}, {"tags": ["scope", "rust", "shared-ptr", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 22, "last_activity_date": 1523732595, "last_edit_date": 1523732595, "creation_date": 1523728600, "answer_id": 49834496, "question_id": 49834414, "link": "https://stackoverflow.com/questions/49834414/what-is-the-rust-equivalent-of-cs-shared-ptr/49834496#49834496", "title": "What is the Rust equivalent of C++&#39;s shared_ptr?", "body": "<p>Either <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"noreferrer\"><code>Rc</code></a> or <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"noreferrer\"><code>Arc</code></a> is the replacement for <code>shared_ptr</code>. Which you choose depends on what level of thread-safety you need for the shared data; <code>Rc</code> is for non-threaded cases and <code>Arc</code> is when you need threads:</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let a = Rc::new(String::from(\"ping\"));\n    let b = a.clone();\n\n    println!(\"{{{}, {}}}\", a, b);\n}\n</code></pre>\n\n<p>Like <code>shared_ptr</code>, this does <strong>not</strong> copy the <code>String</code> itself. It only increases a reference counter at runtime when <code>clone</code> is called and decreases the counter when each copy goes out of scope.</p>\n\n<p>Unlike <code>shared_ptr</code>, <code>Rc</code> and <code>Arc</code> have better thread semantics. <a href=\"https://youtu.be/lkgszkPnV8g?t=1267\" rel=\"noreferrer\"><code>shared_ptr</code> is semi-thread-safe</a>. <code>shared_ptr</code>'s reference counter itself is thread-safe, but the shared data is not \"magically\" made thread safe. </p>\n\n<p>If you use <code>shared_ptr</code> in a threaded program, you still have more work to do to ensure it's safe. In a non-threaded program, you are paying for some thread-safety you don't need.</p>\n\n<p>If you wish to allow mutating the shared value, you will need to switch to runtime borrow checking as well. This is provided by types like <code>Cell</code>, <code>RefCell</code>, <code>Mutex</code> etc. <code>RefCell</code> is appropriate for <code>String</code> and <code>Rc</code>:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\nfn main() {\n    let a = Rc::new(RefCell::new(String::from(\"ping\")));\n    let b = a.clone();\n\n    println!(\"{{{}, {}}}\", a.borrow(), b.borrow());\n\n    a.borrow_mut().push_str(\"pong\");\n    println!(\"{{{}, {}}}\", a.borrow(), b.borrow());\n}\n</code></pre>\n\n<blockquote>\n  <p>we can count the number of references to each object during the compilation time and call free only when the last reference goes out of the scope.</p>\n</blockquote>\n\n<p>That's almost exactly what Rust does with references. It doesn't <em>actually</em> use a counter, but it only lets you use references to a value while that value is guaranteed to remain at the same memory address.</p>\n\n<p>C++'s <code>shared_ptr</code> does <strong>not</strong> do this at compile-time. <code>shared_ptr</code>, <code>Rc</code>, and <code>Arc</code> are all runtime constructs that maintain a counter.</p>\n\n<blockquote>\n  <p>Is it possible to make a reference to the object without invalidate the first reference?</p>\n</blockquote>\n\n<p>That's exactly what Rust does with references, and what you've already done:</p>\n\n<pre><code>fn main() {\n    let a = String::from(\"ping\");\n    let b = &amp;a;\n\n    println!(\"{{{}, {}}}\", a, b);\n}\n</code></pre>\n\n<p>Even better, the compiler will stop you from using <code>b</code> as soon as <code>a</code> is no longer valid.</p>\n\n<blockquote>\n  <p>because Rust's variables are copied by reference instead of by value</p>\n</blockquote>\n\n<p>This is not true. When you assign a value, ownership of the value is transferred to the new variable. Semantically, the memory address of the variable has changed and thus reading that address could lead to memory unsafety.</p>\n\n<blockquote>\n  <p>should we take the habit to only work with a reference</p>\n</blockquote>\n\n<p>Yes, using references, <em>when possible</em>, is the most idiomatic choice. These require zero runtime overhead and the compiler will tell you about errors, as opposed to encountering them at runtime.</p>\n\n<p>There's certainly times where <code>Rc</code> or <code>Arc</code> are useful. Often they are needed for cyclic data structures. You shouldn't feel bad about using them if you cannot get plain references to work.</p>\n\n<blockquote>\n  <p>with a reference of a reference?</p>\n</blockquote>\n\n<p>This is a bit of a downside, as the extra indirection is unfortunate. If you really needed to, you can reduce it. If you don't need to modify the string, you can switch to an <code>Rc&lt;str&gt;</code> instead:</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let a: Rc&lt;str&gt; = Rc::from(\"ping\");\n    let b = a.clone();\n\n    println!(\"{{{}, {}}}\", a, b);\n}\n</code></pre>\n\n<p>If you need to keep the ability to modify the <code>String</code> sometimes, you can also explicitly convert a <code>&amp;Rc&lt;T&gt;</code> to a <code>&amp;T</code>:</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let a = Rc::new(String::from(\"ping\"));\n    let b = a.clone();\n\n    let a_s: &amp;str = &amp;*a;\n    let b_s: &amp;str = &amp;*b;\n\n    println!(\"{{{}, {}}}\", a_s, b_s);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39065232/155423\">What is the right smart pointer to have multiple strong references and allow mutability?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30275982/155423\">When I can use either Cell or RefCell, which should I choose?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30831037/155423\">Situations where Cell or RefCell is the best choice</a></li>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31685697/155423\">How to build an Rc&lt;str&gt; or Rc&lt;[T]&gt;?</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=lkgszkPnV8g\" rel=\"noreferrer\">CppCon 2017: Louis Brandy \u201cCuriously Recurring C++ Bugs at Facebook\u201d</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 1823, "user_id": 4718768, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/AqNiS.jpg?s=128&g=1", "display_name": "tirz", "link": "https://stackoverflow.com/users/4718768/tirz"}, "edited": false, "score": 0, "creation_date": 1523729309, "post_id": 49834555, "comment_id": 86684383, "body": "Thanks for the comment about clone() :)"}, {"owner": {"reputation": 1823, "user_id": 4718768, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/AqNiS.jpg?s=128&g=1", "display_name": "tirz", "link": "https://stackoverflow.com/users/4718768/tirz"}, "edited": false, "score": 0, "creation_date": 1523729791, "post_id": 49834555, "comment_id": 86684511, "body": "Yeah, that&#39;s an anti-pattern, but a great example to see that a is still usable."}], "tags": [], "owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "is_accepted": false, "score": 6, "last_activity_date": 1523731097, "last_edit_date": 1523731097, "creation_date": 1523728992, "answer_id": 49834555, "question_id": 49834414, "link": "https://stackoverflow.com/questions/49834414/what-is-the-rust-equivalent-of-cs-shared-ptr/49834555#49834555", "title": "What is the Rust equivalent of C++&#39;s shared_ptr?", "body": "<blockquote>\n  <p>Maybe we can simply count the number of references to each object during the compile time and call free only when the last reference goes out of the scope.</p>\n</blockquote>\n\n<p>You're on the right track! This is what <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> is for. It's a smart pointer type very much like <code>std::shared_ptr</code> in C++. It frees memory only after the last pointer instance has gone out of scope:</p>\n\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    let a = Rc::new(String::from(\"ping\"));\n\n    // clone() here does not copy the string; it creates another pointer\n    // and increments the reference count\n    let b = a.clone();\n\n    println!(\"{{{}, {}}}\", *a, *b);\n}\n</code></pre>\n\n<p>Since you only get immutable access to <code>Rc</code>'s contents (it's shared after all, and shared mutability is forbidden in Rust) you need interior mutability to be able to change its contents, implemented via <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>Cell</code></a> or <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>:</p>\n\n<pre><code>use std::rc::Rc;\nuse std::cell::RefCell;\n\nfn main() {\n    let a = Rc::new(RefCell::new(String::from(\"Hello\")));\n    let b = a.clone();\n\n    a.borrow_mut() += \", World!\";\n\n    println!(\"{}\", *b); // Prints \"Hello, World!\"\n}\n</code></pre>\n\n<p>But most of the time, you shouldn't need to use <code>Rc</code> (or its thread safe brother <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a>) at all. Rust's ownership model mostly allows you to avoid the overhead of reference counting by declaring the <code>String</code> instance in one place and using references to it everywhere else, just like you did in your second snippet. Try focusing on that and use <code>Rc</code> only if really necessary, such as when you implement a graph-like structure.</p>\n"}], "owner": {"reputation": 1823, "user_id": 4718768, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/AqNiS.jpg?s=128&g=1", "display_name": "tirz", "link": "https://stackoverflow.com/users/4718768/tirz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3529, "favorite_count": 2, "accepted_answer_id": 49834496, "answer_count": 2, "score": 6, "last_activity_date": 1523732595, "creation_date": 1523727998, "last_edit_date": 1523729085, "question_id": 49834414, "link": "https://stackoverflow.com/questions/49834414/what-is-the-rust-equivalent-of-cs-shared-ptr", "title": "What is the Rust equivalent of C++&#39;s shared_ptr?", "body": "<p>Why is this syntax not allowed in Rust:</p>\n\n<pre><code>fn main() {\n    let a = String::from(\"ping\");\n    let b = a;\n\n    println!(\"{{{}, {}}}\", a, b);\n}\n</code></pre>\n\n<p>When I tried to compile this code, I got:</p>\n\n<blockquote>\n   <pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `a`\n --&gt; src/main.rs:5:28\n  |\n3 |     let b = a;\n  |         - value moved here\n4 | \n5 |     println!(\"{{{}, {}}}\", a, b);\n  |                            ^ value used here after move\n  |\n  = note: move occurs because `a` has type `std::string::String`, which does not implement the `Copy` trait\n</code></pre>\n</blockquote>\n\n<p>In fact, we can simply make a reference - which does not the same at runtime:</p>\n\n<pre><code>fn main() {\n    let a = String::from(\"ping\");\n    let b = &amp;a;\n\n    println!(\"{{{}, {}}}\", a, b);\n}\n</code></pre>\n\n<p>And it works:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>{ping, ping}\n</code></pre>\n</blockquote>\n\n<p>According to <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-01-what-is-ownership.html\" rel=\"noreferrer\">the Rust Book</a> it is to avoid double free bugs because Rust's variables are copied by reference instead of by value. Rust will simply invalidate the first object and make it unusable...</p>\n\n<p><a href=\"https://i.stack.imgur.com/JIIG8.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/JIIG8.png\" alt=\"enter image description here\"></a></p>\n\n<p>We have to do something like this:</p>\n\n<p><a href=\"https://i.stack.imgur.com/kwEWi.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/kwEWi.png\" alt=\"enter image description here\"></a></p>\n\n<p>I like the idea of copying by reference, but why automatically invalidate the first one?</p>\n\n<p>It should be possible to avoid the double free with a different method. For example, C++ already has a great tool to allow multiple free calls... The <a href=\"http://en.cppreference.com/w/cpp/memory/shared_ptr\" rel=\"noreferrer\"><code>shared_ptr</code></a> calls free only when no other pointer points to the object - it seems to be very similar to what we are actually doing, with the difference that <code>shared_ptr</code> has a counter.</p>\n\n<p>For example, we can count the number of references to each object during the compilation time and call <code>free</code> only when the last reference goes out of the scope.</p>\n\n<p>But Rust is a young language; maybe they haven't had the time to implement something similar? Has Rust planned to allow a second reference to an object without invalidate the first one or should we take the habit to only work with a reference of a reference?</p>\n"}, {"tags": ["arrays", "rust", "breadth-first-search"], "answers": [{"comments": [{"owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "edited": false, "score": 0, "creation_date": 1523695226, "post_id": 49827593, "comment_id": 86674273, "body": "Thanks for your help."}, {"owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "edited": false, "score": 0, "creation_date": 1523716788, "post_id": 49827593, "comment_id": 86680415, "body": "Would you advise me where can I find more information about Option in rust. Because I find a similar problem with queue.pop_back()."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "edited": false, "score": 2, "creation_date": 1523717286, "post_id": 49827593, "comment_id": 86680600, "body": "@madeinQuant In the book, <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch06-02-match.html#matching-with-optiont\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/book/second-edition/&hellip;</a>"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 3, "last_activity_date": 1523676412, "creation_date": 1523676412, "answer_id": 49827593, "question_id": 49827366, "link": "https://stackoverflow.com/questions/49827366/how-to-convert-iter-next-to-an-array-index/49827593#49827593", "title": "How to convert iter.next() to an array index?", "body": "<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow noreferrer\"><code>iter.next()</code></a> return an <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>Option</code></a>, you just need to deconstruct it:</p>\n\n<pre><code>for i in 0..cells[s].len() {\n    let x = match iter.next() {\n        Some(x) =&gt; *x,\n        None =&gt; return,\n    };\n    v[x] = 1;\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "edited": false, "score": 0, "creation_date": 1523695202, "post_id": 49828410, "comment_id": 86674270, "body": "Thanks for helping me."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1523685308, "creation_date": 1523685308, "answer_id": 49828410, "question_id": 49827366, "link": "https://stackoverflow.com/questions/49827366/how-to-convert-iter-next-to-an-array-index/49828410#49828410", "title": "How to convert iter.next() to an array index?", "body": "<p>Rust's <code>for</code> loops can iterate for you, so you don't need to explicitly create an iterator or call <code>next()</code>. The <code>Option</code> will already be unwrapped inside the loop, because the loop automatically ends when <code>next()</code> returns <code>None</code>.</p>\n\n<pre><code>for &amp;i in &amp;cells[s] {\n    v[i] = 1;  \n}\n</code></pre>\n\n<p>This saves you having to keep track of index variables just to create a loop. And the code is a lot shorter and more readable.</p>\n"}, {"tags": [], "owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "is_accepted": false, "score": 0, "last_activity_date": 1524062298, "last_edit_date": 1524062298, "creation_date": 1524021438, "answer_id": 49890599, "question_id": 49827366, "link": "https://stackoverflow.com/questions/49827366/how-to-convert-iter-next-to-an-array-index/49890599#49890599", "title": "How to convert iter.next() to an array index?", "body": "<p>This is the final version</p>\n\n<pre><code>fn bfs(s: usize) {\n    let mut cells = vec![LinkedList::&lt;usize&gt;::new(); 4];\n    let mut traversal = LinkedList::new();\n    let mut queue = LinkedList::new();\n\n    for (i, cell) in cells.iter_mut().enumerate() {\n        cell.push_front(i);\n    }\n\n    cells[0].push_back(1);\n    cells[0].push_back(2);\n\n    cells[1].push_back(2);\n\n    cells[2].push_back(0);\n    cells[2].push_back(3);\n\n    cells[3].push_back(3);\n\n    let mut v = vec![0; 4];\n    let mut done = false;\n    let c = s;\n\n    while !done {\n        for &amp;x in &amp;cells[c] {\n            if v[x] == 0 {\n                v[x] = 1;\n                queue.push_back(x);\n                traversal.push_back(x)\n            }\n        }\n\n        let c = queue.pop_back();\n\n        if queue.is_empty() {\n            // walkthrough\n            for i in 0..cells.len() {\n                if v[i] == 0 {\n                    v[i] = 1;\n                    queue.push_back(i);\n                    traversal.push_back(i)\n                }\n            }\n\n            if queue.is_empty() {\n                done = true;\n            }\n        }\n    }\n\n    println!(\"{:?}\", traversal);\n}\n</code></pre>\n"}], "owner": {"reputation": 1318, "user_id": 5329711, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/8KGqg.gif?s=128&g=1", "display_name": "madeinQuant", "link": "https://stackoverflow.com/users/5329711/madeinquant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 448, "favorite_count": 1, "answer_count": 3, "score": 2, "last_activity_date": 1524062298, "creation_date": 1523673865, "last_edit_date": 1524021423, "question_id": 49827366, "link": "https://stackoverflow.com/questions/49827366/how-to-convert-iter-next-to-an-array-index", "title": "How to convert iter.next() to an array index?", "body": "<p>I would implement an array <code>v</code> to mark the current vertex as visited. However, <code>iter.next()</code> cannot be an index of <code>LinkedList</code> or an index of an array. </p>\n\n<ol>\n<li>The output of <code>iter.next()</code> is not an integer, it is an option <code>Some</code>.</li>\n<li>How to use the value in <code>Some</code>? If I would use value in <code>Some</code> as an index of array. Should I convert the value into an integer?</li>\n</ol>\n\n\n\n<pre><code>fn bfs(s: usize) {\n    let mut cells = vec![LinkedList::&lt;usize&gt;::new(); 4];\n\n    for (i, cell) in cells.iter_mut().enumerate() {\n        cell.push_front(i);\n    }\n\n    cells[0].push_back(1);\n    cells[0].push_back(2);\n\n    cells[1].push_back(2);\n\n    cells[2].push_back(0);\n    cells[2].push_back(3);\n\n    cells[3].push_back(3);\n\n    let mut iter = cells[s].iter();\n    let mut v = vec![0; 4];\n\n    // Entry point\n    for i in 0..cells[s].len() {\n        // It is incorrect, \"iter.next()\" it cannot be a index of LinkedList\n        // vector \"v\" to keep track of which vertex has been traversed\n        //v[iter.next()] = 1;\n    }\n}\n\nfn main() {\n    bfs(2);\n}\n</code></pre>\n"}, {"tags": ["rust", "visual-studio-code", "keyboard-shortcuts"], "comments": [{"owner": {"reputation": 420, "user_id": 5133139, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qltJF.jpg?s=128&g=1", "display_name": "\u30af\u30ea\u30db", "link": "https://stackoverflow.com/users/5133139/%e3%82%af%e3%83%aa%e3%83%9b"}, "edited": false, "score": 2, "creation_date": 1523644723, "post_id": 49822696, "comment_id": 86662190, "body": "Does F5 not work for you? You could also rebind &quot;Start without debugging (Ctrl + F5)&quot; to whatever you want in <code>File &gt; Preferences &gt; Keyboard Shortcuts</code>."}, {"owner": {"reputation": 4136, "user_id": 1675230, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9f9cdd386245eff27ad111fbd849a588?s=128&d=identicon&r=PG", "display_name": "Soldalma", "link": "https://stackoverflow.com/users/1675230/soldalma"}, "reply_to_user": {"reputation": 420, "user_id": 5133139, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qltJF.jpg?s=128&g=1", "display_name": "\u30af\u30ea\u30db", "link": "https://stackoverflow.com/users/5133139/%e3%82%af%e3%83%aa%e3%83%9b"}, "edited": false, "score": 0, "creation_date": 1523658448, "post_id": 49822696, "comment_id": 86667514, "body": "<code>F5</code> does not work even after making the changes suggested by Boiethios."}], "answers": [{"comments": [{"owner": {"reputation": 4136, "user_id": 1675230, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9f9cdd386245eff27ad111fbd849a588?s=128&d=identicon&r=PG", "display_name": "Soldalma", "link": "https://stackoverflow.com/users/1675230/soldalma"}, "edited": false, "score": 0, "creation_date": 1523658358, "post_id": 49824265, "comment_id": 86667486, "body": "Thanks. I made some progress. Still, when I hit <code>F5</code> I get this message on the terminal:<code>&gt; Executing task: C:\\Projects\\bitbucket3\\RustProjects\\hello_test3\\cargo build  &lt;</code> . But nothing else happens. I used your <code>launch.json</code> (with another file name) and <code>tasks.json</code> and I installed the C/C++ and Native Debug extensions. In any case, even if I end up being able to debug, I realize that I do not understand the role of the <code>.json</code> files and what is happening. Is there a reference that explains all this?"}, {"owner": {"reputation": 4136, "user_id": 1675230, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9f9cdd386245eff27ad111fbd849a588?s=128&d=identicon&r=PG", "display_name": "Soldalma", "link": "https://stackoverflow.com/users/1675230/soldalma"}, "edited": false, "score": 0, "creation_date": 1523659767, "post_id": 49824265, "comment_id": 86667885, "body": "I managed to do it using the <code>launch.json</code> from this URL: &lt;<a href=\"http://www.brycevandyk.com/debug-rust-on-windows-with-visual-studio-code-and-the-msvc-debugger/\" rel=\"nofollow noreferrer\">brycevandyk.com/&hellip;</a>&gt;. It works but I get many messages like <code>Loaded &#39;C:\\Windows\\System32\\ntdll.dll&#39;. Cannot find or open the PDB file</code> on the Debug Console.`"}, {"owner": {"reputation": 420, "user_id": 5133139, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qltJF.jpg?s=128&g=1", "display_name": "\u30af\u30ea\u30db", "link": "https://stackoverflow.com/users/5133139/%e3%82%af%e3%83%aa%e3%83%9b"}, "edited": false, "score": 0, "creation_date": 1523688285, "post_id": 49824265, "comment_id": 86672781, "body": "Do you encounter the same messages with <code>Ctrl + F5</code> ? If not try swapping this Shortcut with a single key as I suggested in my comment."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 4136, "user_id": 1675230, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9f9cdd386245eff27ad111fbd849a588?s=128&d=identicon&r=PG", "display_name": "Soldalma", "link": "https://stackoverflow.com/users/1675230/soldalma"}, "edited": false, "score": 0, "creation_date": 1523737533, "post_id": 49824265, "comment_id": 86686776, "body": "@Soldalma I never used those things in Windows, only Linux, and it worked fine at first."}, {"owner": {"reputation": 4136, "user_id": 1675230, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9f9cdd386245eff27ad111fbd849a588?s=128&d=identicon&r=PG", "display_name": "Soldalma", "link": "https://stackoverflow.com/users/1675230/soldalma"}, "edited": false, "score": 0, "creation_date": 1523738317, "post_id": 49824265, "comment_id": 86687007, "body": "Working fine now, I am happy since that was my first day with Rust."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 4136, "user_id": 1675230, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9f9cdd386245eff27ad111fbd849a588?s=128&d=identicon&r=PG", "display_name": "Soldalma", "link": "https://stackoverflow.com/users/1675230/soldalma"}, "edited": false, "score": 0, "creation_date": 1523738479, "post_id": 49824265, "comment_id": 86687062, "body": "@Soldalma Oh, nice! Feel free to edit my answer if you think that you can add details about how to make it to work."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 2, "last_activity_date": 1523649462, "creation_date": 1523649462, "answer_id": 49824265, "question_id": 49822696, "link": "https://stackoverflow.com/questions/49822696/how-do-i-create-a-shortcut-key-for-rust-cargo-run/49824265#49824265", "title": "How do I create a shortcut key for Rust: cargo run?", "body": "<p>I use this in my <code>launch.json</code>:</p>\n\n<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug\",\n            \"type\": \"gdb\",\n            \"request\": \"launch\",\n            \"target\": \"./target/debug/my_program\",\n            \"cwd\": \"${workspaceRoot}\",\n            \"preLaunchTask\": \"Cargo build\"\n        }\n    ]\n}\n</code></pre>\n\n<p>of course, you must have a \"Cargo build\" task in the <code>tasks.json</code>:</p>\n\n<pre><code>\"tasks\": [\n    {\n        \"label\": \"Cargo build\",\n        \"command\": \"cargo build\",\n        \"group\": {\n            \"kind\": \"build\",\n            \"isDefault\": true\n        }\n    }\n]\n</code></pre>\n\n<p>Then when I press <kbd>F5</kbd>, I can run my program in debug mode.</p>\n"}], "owner": {"reputation": 4136, "user_id": 1675230, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9f9cdd386245eff27ad111fbd849a588?s=128&d=identicon&r=PG", "display_name": "Soldalma", "link": "https://stackoverflow.com/users/1675230/soldalma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1482, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1523651802, "creation_date": 1523642167, "last_edit_date": 1523651802, "question_id": 49822696, "link": "https://stackoverflow.com/questions/49822696/how-do-i-create-a-shortcut-key-for-rust-cargo-run", "title": "How do I create a shortcut key for Rust: cargo run?", "body": "<p>I am just starting with Rust and VSCode. </p>\n\n<p>If I hit <kbd>F1</kbd> and choose <code>Tasks: Run Task</code>, I see a list of tasks. If I choose the <code>Run: cargo run</code> task and hit <code>Enter</code>, it is executed in the terminal.</p>\n\n<p>So three keystrokes are needed. Is there a way to assign a shortcut key so that this could be done with one keystroke?</p>\n\n<p>Observation: <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>B</kbd> makes a list with two items appear: <code>Rust: cargo build</code> and <code>Rust: cargo check</code>. </p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1523643922, "post_id": 49821121, "comment_id": 86661792, "body": "Idiomatic Rust uses <code>PascalCase</code> for enum variants."}], "answers": [{"tags": [], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "is_accepted": false, "score": 0, "last_activity_date": 1523637758, "creation_date": 1523637758, "answer_id": 49821671, "question_id": 49821121, "link": "https://stackoverflow.com/questions/49821121/lifetime-mismatch-when-migrating-a-free-function-to-a-trait/49821671#49821671", "title": "Lifetime mismatch when migrating a free function to a trait", "body": "<p>Solved by thinking about  <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-02-advanced-lifetimes.html\" rel=\"nofollow noreferrer\">trait lifetime subtyping</a></p>\n\n<p>Defining the trait with a associated lifetime:</p>\n\n<pre><code>pub trait GetValue&lt;'c,T&gt; {\n    fn get_value&lt;'a : 'c&gt;(&amp;'c self, k : &amp;str, entity : &amp;'a [Entry]) -&gt; Option&lt;T&gt;;\n}\n</code></pre>\n\n<p>and then the implementation telling Rust that the return type is dependent on <code>self</code> and not <code>entity</code></p>\n\n<pre><code>impl&lt;'c&gt; GetValue&lt;'c,&amp;'c str&gt; for &amp;'c [Entry] {\n    fn get_value&lt;'a : 'c&gt;(&amp;'c self, k : &amp;str, entity : &amp;'a [Entry]) -&gt; Option&lt;&amp;'c str&gt; {\n        entity\n        .iter()\n        .filter_map(|x| match x {\n            &amp;Entry::STR(ref key,ref v) =&gt; if key.as_ref().unwrap().as_str() == k { Some(v.as_str()) } else { None },\n            _ =&gt; None\n        })\n            .next()\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": false, "score": 1, "last_activity_date": 1523644035, "last_edit_date": 1523644035, "creation_date": 1523643072, "answer_id": 49822899, "question_id": 49821121, "link": "https://stackoverflow.com/questions/49821121/lifetime-mismatch-when-migrating-a-free-function-to-a-trait/49822899#49822899", "title": "Lifetime mismatch when migrating a free function to a trait", "body": "<p>By replacing <code>&amp;'a [Entry]</code> and <code>&amp;'a str</code> respectively with <code>Self</code> and <code>T</code> in the signature of your <code>get_value</code> method, you get rid of explicit lifetimes in your trait definition. As a consequence, the definition of <code>GetValue</code> becomes independent of the types <code>&amp;'a [Entry]</code> and <code>&amp;'a str</code>, which are specific to your concrete implementation for <code>&amp;'a [Entry]</code>. As a side effect your lifetime issue will go away.</p>\n\n<pre><code>pub trait GetValue&lt;T&gt; {\n    fn get_value(self, k: &amp;str) -&gt; Option&lt;T&gt;;\n}\n\nimpl&lt;'a&gt; GetValue&lt;&amp;'a str&gt; for &amp;'a [Entry] {\n    fn get_value(self, k: &amp;str) -&gt; Option&lt;&amp;'a str&gt; {\n        self.iter()\n            .filter_map(|x| match x {\n                &amp;Entry::STR(ref key, ref v) =&gt; \n                    if key.as_ref().unwrap().as_str() == k {\n                        Some(v.as_str())\n                    } else {\n                        None\n                    },\n                _ =&gt; None,\n            })\n            .next()\n    }\n}\n</code></pre>\n\n<p>This way, <code>get_value</code> consumes <code>self</code>. In your implementation for <code>&amp;'a [Entry]</code> the method <code>get_value</code> consumes something of type <code>&amp;'a [Entry]</code>. Immutable references are <code>Copy</code>, so in this implementation <code>get_value</code> actually only consumes a copy (something of type <code>&amp;'a [Entry]</code> is still usable after having called <code>get_value</code> on it). </p>\n\n<p><code>GetValue</code> could also be implemented for something which is not <code>Copy</code>. Calling <code>get_value</code> on an instance of such a type would then consume this instance. If you want <code>get_value</code> to be more restrictive in this aspect, you can let it take <code>&amp;'a self</code> as argument instead of <code>self</code>. This requires an explicit lifetime <code>'a</code> on your trait:</p>\n\n<pre><code>pub trait GetValue&lt;'a, T&gt; {\n    fn get_value(&amp;'a self, k: &amp;str) -&gt; Option&lt;T&gt;;\n}\n\nimpl&lt;'a&gt; GetValue&lt;'a, &amp;'a str&gt; for [Entry] {\n    fn get_value(&amp;'a self, k: &amp;str) -&gt; Option&lt;&amp;'a str&gt; { ... }\n}\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 246, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1523644035, "creation_date": 1523635518, "last_edit_date": 1523643901, "question_id": 49821121, "link": "https://stackoverflow.com/questions/49821121/lifetime-mismatch-when-migrating-a-free-function-to-a-trait", "title": "Lifetime mismatch when migrating a free function to a trait", "body": "<p>I implemented this small function which returns a reference to a value in a enum. This works fine:</p>\n\n<pre><code>pub enum Entry {\n    COMMENT,\n    NUM(Option&lt;String&gt;, f64),\n    STR(Option&lt;String&gt;, String),\n    VNUM(Option&lt;String&gt;, Vec&lt;f64&gt;),\n    VSTR(Option&lt;String&gt;, Vec&lt;String&gt;),\n}\n\npub fn get_value&lt;'b&gt;(k: &amp;str, entity: &amp;'b [Entry]) -&gt; Option&lt;&amp;'b str&gt; {\n    entity\n        .iter()\n        .filter_map(|x| match x {\n            &amp;Entry::STR(ref key, ref v) =&gt; if key.as_ref().unwrap().as_str() == k {\n                Some(v.as_str())\n            } else {\n                None\n            },\n            _ =&gt; None,\n        })\n        .next()\n}\nfn main() {\n    let v = vec![\n        Entry::STR(Some(\"foo\".to_string()), \"bar\".to_string()),\n        Entry::NUM(Some(\"baz\".to_string()), 1234f64),\n    ];\n    let x: Option&lt;&amp;str&gt; = get_value(\"foo\", &amp;v);\n}\n</code></pre>\n\n<p>To imbue some polymorphism, I wanted to move this to a trait so that I can call it for different types</p>\n\n<pre><code>pub trait GetValue&lt;T&gt; {\n    fn get_value&lt;'a&gt;(k: &amp;str, entity: &amp;'a [Entry]) -&gt; Option&lt;&amp;'a str&gt;;\n}\n\nimpl&lt;'a&gt; GetValue&lt;&amp;'a str&gt; for &amp;'a [Entry] {\n    fn get_value(k: &amp;str, entity: &amp;'a [Entry]) -&gt; Option&lt;&amp;'a str&gt; {\n        entity\n            .iter()\n            .filter_map(|x| match x {\n                &amp;Entry::STR(ref key, ref v) =&gt; if key.as_ref().unwrap().as_str() == k {\n                    Some(v.as_str())\n                } else {\n                    None\n                },\n                _ =&gt; None,\n            })\n            .next()\n    }\n}\n</code></pre>\n\n<p>but get the following errors despite not intentionally changing the lifetime specifications. What have I missed?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: method not compatible with trait\n  --&gt; src/main.rs:14:5\n   |\n14 |     fn get_value(k: &amp;str, entity: &amp;'a [Entry]) -&gt; Option&lt;&amp;'a str&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n   |\n   = note: expected type `fn(&amp;str, &amp;'a [Entry]) -&gt; std::option::Option&lt;&amp;'a str&gt;`\n              found type `fn(&amp;str, &amp;'a [Entry]) -&gt; std::option::Option&lt;&amp;'a str&gt;`\nnote: the lifetime 'a as defined on the method body at 14:5...\n  --&gt; src/main.rs:14:5\n   |\n14 |     fn get_value(k: &amp;str, entity: &amp;'a [Entry]) -&gt; Option&lt;&amp;'a str&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...does not necessarily outlive the lifetime 'a as defined on the impl at 13:1\n  --&gt; src/main.rs:13:1\n   |\n13 | impl&lt;'a&gt; GetValue&lt;&amp;'a str&gt; for &amp;'a [Entry] {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0308]: method not compatible with trait\n  --&gt; src/main.rs:14:5\n   |\n14 |     fn get_value(k: &amp;str, entity: &amp;'a [Entry]) -&gt; Option&lt;&amp;'a str&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n   |\n   = note: expected type `fn(&amp;str, &amp;'a [Entry]) -&gt; std::option::Option&lt;&amp;'a str&gt;`\n              found type `fn(&amp;str, &amp;'a [Entry]) -&gt; std::option::Option&lt;&amp;'a str&gt;`\nnote: the lifetime 'a as defined on the impl at 13:1...\n  --&gt; src/main.rs:13:1\n   |\n13 | impl&lt;'a&gt; GetValue&lt;&amp;'a str&gt; for &amp;'a [Entry] {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...does not necessarily outlive the lifetime 'a as defined on the method body at 14:5\n  --&gt; src/main.rs:14:5\n   |\n14 |     fn get_value(k: &amp;str, entity: &amp;'a [Entry]) -&gt; Option&lt;&amp;'a str&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 3, "creation_date": 1523621323, "post_id": 49816517, "comment_id": 86647595, "body": "Try <code>impl&lt;T&gt; MetaTrait for T where T: MyTrait</code>."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 5600, "user_id": 594138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57577324241ffa414154a4eb7589c3b6?s=128&d=identicon&r=PG", "display_name": "Tom Regner", "link": "https://stackoverflow.com/users/594138/tom-regner"}, "edited": false, "score": 0, "creation_date": 1523622279, "post_id": 49816517, "comment_id": 86648219, "body": "@Tom Regner: probably the title is too generic but this question has to do with trait objects, I don&#39;t think it is a duplication."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1523624338, "post_id": 49816517, "comment_id": 86649665, "body": "@attdona the issue and the possible solutions in the duplicate are the same; <code>(&amp;jim as &amp;HasBed).sleep();</code> and <code>(&amp;jane as &amp;HasTent).sleep();</code> would also work there."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "reply_to_user": {"reputation": 5600, "user_id": 594138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57577324241ffa414154a4eb7589c3b6?s=128&d=identicon&r=PG", "display_name": "Tom Regner", "link": "https://stackoverflow.com/users/594138/tom-regner"}, "edited": false, "score": 0, "creation_date": 1523624653, "post_id": 49816517, "comment_id": 86649852, "body": "Thanks! At first it was not obvious for me. Now it is clear, thanks also to @Tom Regner. I will mark as duplicate."}], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1195, "favorite_count": 1, "closed_date": 1523624664, "answer_count": 0, "score": 0, "last_activity_date": 1523620816, "creation_date": 1523620816, "question_id": 49816517, "link": "https://stackoverflow.com/questions/49816517/implement-a-trait-for-another-trait", "closed_reason": "Duplicate", "title": "Implement a trait for another trait", "body": "<p>Consider this snippet:</p>\n\n<pre><code>struct Foo(i32);\n\ntrait MetaTrait {\n    fn generic(&amp;self, n: i32);\n}\n\ntrait MyTrait {\n    fn my_method(&amp;self, x: i32);\n}\n\nimpl MetaTrait for MyTrait {\n    fn generic(&amp;self, x: i32) {\n        self.my_method(x);\n    }\n}\n\nimpl MyTrait for Foo {\n    fn my_method(&amp;self, n: i32) {\n        println!(\"doing something with {}\", n);\n    }\n}\n\nfn my_dynamic_fun&lt;T: MetaTrait + ?Sized&gt;(arg: &amp;T) {\n    arg.generic(100);\n}\n\nfn main() {\n    let foo = Foo(42);\n    my_dynamic_fun(&amp;foo);\n}\n</code></pre>\n\n<p>It gives the error:</p>\n\n<pre><code>  --&gt; src/main.rs:30:5\n   |\n30 |     my_dynamic_fun(&amp;foo);\n   |     ^^^^^^^^^^^^^^ the trait `MetaTrait` is not implemented for `Foo`\n   |\n</code></pre>\n\n<p>Instead an explicit type cast works:</p>\n\n<pre><code>my_dynamic_fun(&amp;foo as &amp;MyTrait);\n</code></pre>\n\n<p>Probably I've not completely grasped the concept of a trait implementation for a trait ...\nbut why the compiler is not able to infer that a <code>Foo</code> implements <code>MyTrait</code> that implements <code>MetaTrait</code>?</p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1523611478, "post_id": 49812806, "comment_id": 86641479, "body": "Just to be sure: <code>try_decrypt_data</code> returns the decrypted data as <code>String</code>? And if an error occurs you want to return the string <code>&quot;No parameters named pass&quot;</code>, yes? So what if the decrypted data is exactly <code>&quot;No parameters named pass&quot;</code>? How would you be able to tell if an error occurred or if that&#39;s just what the decrypted data is?"}, {"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1523612669, "post_id": 49812806, "comment_id": 86642169, "body": "@Lukas Kalbertodt  The actual try_decrypt_data returns a Result, which I then unwrap with <code>unwrap_or(&quot;...&quot;).to_string()</code>, but that had nothing to do with the question, so I left it out here to keep it simple."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574284334, "post_id": 49813360, "comment_id": 104181968, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=88d3b266caf1e9bc67ca8845d3586822\" rel=\"nofollow noreferrer\">Using a <code>match</code></a> would avoid the <code>unwrap</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574286979, "post_id": 49813360, "comment_id": 104183061, "body": "<a href=\"https://stackoverflow.com/a/51345372/155423\">Another example</a> of how such a macro could be written."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1574284368, "last_edit_date": 1574284368, "creation_date": 1523610860, "answer_id": 49813360, "question_id": 49812806, "link": "https://stackoverflow.com/questions/49812806/returning-default-value-from-function-when-result-is-error/49813360#49813360", "title": "Returning default value from function when result is error", "body": "<p>There is no such utility, but you can always write a macro:</p>\n\n<pre><code>macro_rules! return_if_err {\n    ( $to_test:expr, $default:expr ) =&gt; (\n        if $to_test.is_err() {\n            return $default;\n        }\n    )\n}\n\nfn pop_or_default(mut v: Vec&lt;i32&gt;) -&gt; i32 {\n    let result = v.pop();\n    return_if_err!(result.ok_or(()), 123);\n\n    result.unwrap()\n}\n\nfn main() {\n    assert_eq!(pop_or_default(vec![]), 123);\n}\n</code></pre>\n\n<p>You <a href=\"https://stackoverflow.com/q/52027634/155423\">cannot return from an outer scope from a closure</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1523664130, "post_id": 49815497, "comment_id": 86668772, "body": "Thanks, this answers the question, but seems like a lot of work to reduce 2 lines of code :D. While in this case it is just a personal project where I know what decrypt the output will look like, in future I think I will return a result and have a wrapper function actually returning strings to the client."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1523617330, "creation_date": 1523617330, "answer_id": 49815497, "question_id": 49812806, "link": "https://stackoverflow.com/questions/49812806/returning-default-value-from-function-when-result-is-error/49815497#49815497", "title": "Returning default value from function when result is error", "body": "<p>This is <em>kind of</em> possible, but usually not a good idea, especially not in your example (I will explain that later). </p>\n\n<p>You cannot easily return a <code>String</code> and make <code>?</code> return a default value, but you can define your own string type and implement <a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Try.html\" rel=\"noreferrer\"><code>std::ops::Try</code></a> for it. Note that <code>Try</code> is still unstable!</p>\n\n<p>Let's see how this would work:</p>\n\n<pre><code>// Just wrap a string\nstruct StringlyResult {\n    s: String,\n}\n\n// Convenience conversion \nimpl From&lt;String&gt; for StringlyResult {\n    fn from(s: String) -&gt; Self {\n        Self { s }\n    }\n}\n\n// The impl that allows us to use the ? operator\nimpl std::ops::Try for StringlyResult {\n    type Ok = String;\n    type Error = String;\n\n    fn into_result(self) -&gt; Result&lt;Self::Ok, Self::Error&gt; {\n        if self.s == \"No parameters named pass\" {\n            Err(self.s)\n        } else {\n            Ok(self.s)\n        }\n    }\n\n    fn from_error(s: Self::Error) -&gt; Self {\n        if s != \"No parameters named pass\" {\n            panic!(\"wat\");\n        }\n        Self { s }\n    }\n\n    fn from_ok(s: Self::Ok) -&gt; Self {\n        if s == \"No parameters named pass\" {\n            panic!(\"wat\");\n        }\n        Self { s } \n    }\n}\n</code></pre>\n\n<p>With that we can implement <code>index()</code> like this:</p>\n\n<pre><code>fn index() -&gt; StringlyResult {\n    let temp = some_func(\"pass\")\n        .map_err(|_| \"No parameters named pass\")?; \n    try_decrypt_data(&amp;temp).into()\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=0c458e5a57c3dd204591107ada9d7cc8&amp;version=nightly\" rel=\"noreferrer\">Complete code on the Playground</a>)</p>\n\n<p>So yes, the <code>Try</code> trait enables users to use the <code>?</code> operator with their own types. </p>\n\n<hr>\n\n<p>However, as presented in your example, this is <strong>a terrible idea</strong>. You probably already noticed the \"<em>wat</em>\" sections in my code above. The problem is that your OK-type already exhausts the whole type (all instances of the type are valid OK-instances). </p>\n\n<p>Consider a function <code>get_file_size() -&gt; u64</code>. Now this function can fail (i.e. it cannot determine the file size). You couldn't just return <code>0</code> to signal a failure occurred. How would the caller of your function distinguish between an environment in which the function cannot determine the file size and an environment where there the file is actually 0 bytes large?</p>\n\n<p>Similarly, how would the caller of your function distinguish the situation in which an error occurred and the situation in which the decrypted text is literally <code>\"No parameters named pass\"</code>? The caller can't! And that's bad.</p>\n\n<p>Notice that there is something similar, which is not as bad, but still not really idiomatic in Rust: <code>get_file_size() -&gt; i64</code>. Here, we <em>could</em> return <code>-1</code> to signal a failure. And this is less bad because <code>-1</code> can never be a valid file size! (in other words, not all instances of your type are valid OK-instances). However, in this case it is still super easy to forget to check for errors. That's why in Rust, we always want to use <code>Result</code>.</p>\n\n<hr>\n\n<p>To make error handling easier, consider using <a href=\"https://crates.io/crates/failure\" rel=\"noreferrer\">the crate <code>failure</code></a>. With that, you can easily use strings as error messages without sacrificing type safety or sanity of your program. Example:</p>\n\n<pre><code>use failure::{Error, ResultExt};\n\nfn index() -&gt; Result&lt;String, Error&gt; {\n    let temp = some_func(\"pass\")\n        .context(\"No parameters named pass\")?; \n    Ok(try_decrypt_data(&amp;temp)?)\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1574296781, "creation_date": 1574296781, "answer_id": 58965529, "question_id": 49812806, "link": "https://stackoverflow.com/questions/49812806/returning-default-value-from-function-when-result-is-error/58965529#58965529", "title": "Returning default value from function when result is error", "body": "<p>I would create an inner function that uses a <code>Result</code>. This allows you to use the question-mark operator for the various error messages / default values that you'd like to return. You can then call the inner function and take either the success value or error value:</p>\n\n<pre><code>fn index() -&gt; String {\n    fn inner() -&gt; Result&lt;String, String&gt; {\n        let t1 = some_func(\"pass\").map_err(|_| \"No parameters named pass\")?;\n        let t2 = some_func2(t1).map_err(|_| \"A second error\")?;\n        let t3 = some_func3(t2).map_err(|_| \"A third error\")?;\n        Ok(t3)\n    }\n\n    match inner() {\n        Ok(v) =&gt; v,\n        Err(v) =&gt; v,\n    }\n}\n</code></pre>\n\n<p>There's an unstable feature called <a href=\"https://github.com/rust-lang/rust/issues/31436\" rel=\"nofollow noreferrer\"><em>try blocks</em></a> that promises to make this slightly less bulky:</p>\n\n<pre><code>#![feature(try_blocks)]\n\nfn index() -&gt; String {\n    let v = try {\n        let t1 = some_func(\"pass\").map_err(|_| \"No parameters named pass\")?;\n        let t2 = some_func2(t1).map_err(|_| \"A second error\")?;\n        some_func3(t2).map_err(|_| \"A third error\")?\n    };\n\n    match v {\n        Ok(v) =&gt; v,\n        Err(v) =&gt; v,\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1269, "favorite_count": 0, "accepted_answer_id": 49815497, "answer_count": 3, "score": 2, "last_activity_date": 1574296781, "creation_date": 1523609118, "last_edit_date": 1523611753, "question_id": 49812806, "link": "https://stackoverflow.com/questions/49812806/returning-default-value-from-function-when-result-is-error", "title": "Returning default value from function when result is error", "body": "<p>Is there something similar to the <code>?</code> shortcut which instead of returning a result from a function when there is an error, returns a predefined value?</p>\n\n<p>Basically I want to know if it is possible to do the following in one line:</p>\n\n<pre><code>fn index() -&gt; String {\n    let temp = some_func(\"pass\"); // some_func returns a Result \n    if temp.is_err() {\n        return \"No parameters named pass\".to_string();\n    }\n    try_decrypt_data(temp.unwrap())\n}\n</code></pre>\n\n<p>I tried using <code>unwrap_or_else()</code>, but that just returns the closure not the outer function. i.e.</p>\n\n<pre><code>try_decrypt_data(params.get(\"pass\").unwrap_or_else(|| return \"No parameters named pass\".to_string(); )) // This doesn't work\n</code></pre>\n"}, {"tags": ["rust", "closures", "ownership", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1523610463, "post_id": 49811763, "comment_id": 86640818, "body": "I think OP wanted the closure to own <code>T</code>. In your code the closure doesn&#39;t own <code>T</code>, but merely a reference to <code>T</code>. So the semantics of handling the returned <code>Box</code> are vastly different."}], "tags": [], "owner": {"reputation": 73, "user_id": 5357514, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15542f29a2cdf117aa113f1481849c5b?s=128&d=identicon&r=PG&f=1", "display_name": "SK.Chen", "link": "https://stackoverflow.com/users/5357514/sk-chen"}, "is_accepted": false, "score": 1, "last_activity_date": 1523644095, "last_edit_date": 1523644095, "creation_date": 1523605251, "answer_id": 49811763, "question_id": 49806352, "link": "https://stackoverflow.com/questions/49806352/cannot-infer-an-appropriate-lifetime-for-a-closure-that-returns-a-reference/49811763#49811763", "title": "Cannot infer an appropriate lifetime for a closure that returns a reference", "body": "<p>You expect the type <code>T</code> to have lifetime <code>'a</code>, but <code>t</code> is not a reference to a value of type <code>T</code>. The function takes ownership of the variable <code>t</code> by argument passing:</p>\n\n<pre><code>// t is moved here, t lifetime is the scope of the function\nfn foo&lt;'a, T: 'a&gt;(t: T)\n</code></pre>\n\n<p>You should do:</p>\n\n<pre><code>fn foo&lt;'a, T: 'a&gt;(t: &amp;'a T) -&gt; Box&lt;Fn() -&gt; &amp;'a T + 'a&gt; {\n    Box::new(move || t)\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1523611076, "post_id": 49812810, "comment_id": 86641229, "body": "&quot;<i>every function object in Rust can be called with a by-value <code>self</code> argument</i>&quot; -- very nice observation! I totally missed that."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 9, "last_activity_date": 1523644274, "last_edit_date": 1523644274, "creation_date": 1523609129, "answer_id": 49812810, "question_id": 49806352, "link": "https://stackoverflow.com/questions/49806352/cannot-infer-an-appropriate-lifetime-for-a-closure-that-returns-a-reference/49812810#49812810", "title": "Cannot infer an appropriate lifetime for a closure that returns a reference", "body": "<blockquote>\n  <p>What I expect:</p>\n  \n  <ul>\n  <li>The type <code>T</code> has lifetime <code>'a</code>.</li>\n  <li>The value <code>t</code> live as long as <code>T</code>.</li>\n  </ul>\n</blockquote>\n\n<p>This makes no sense. A value cannot \"live as long\" as a type, because a type doesn't live. \"<code>T</code> has lifetime <code>'a</code>\" is a very imprecise statement, easy to misunderstand. What <code>T: 'a</code> really means is \"instances of <code>T</code> must stay valid at least as long as lifetime <code>'a</code>. For example, T must not be a reference with a lifetime shorter than <code>'a</code>, or a struct containing such a reference. Note that this has nothing to do with forming references <em>to</em> <code>T</code>, i.e. <code>&amp;T</code>.</p>\n\n<p>The value <code>t</code>, then, lives as long as its lexical scope (it's a function parameter) says it does, which has nothing to do with <code>'a</code> at all.</p>\n\n<blockquote>\n  <ul>\n  <li><code>t</code> moves to the closure, so the closure live as long as <code>t</code></li>\n  </ul>\n</blockquote>\n\n<p>This is also incorrect. The closure lives as long as the closure does lexically. It is a temporary in the result expression, and therefore lives until the end of the result expression. <code>t</code>'s lifetime concerns the closure not at all, since it has its own <code>T</code> variable inside, the capture of <code>t</code>. Since the capture is a copy/move of <code>t</code>, it is not in any way affected by <code>t</code>'s lifetime.</p>\n\n<p>The temporary closure is then moved into the box's storage, but that's a new object with its own lifetime. The lifetime of <em>that</em> closure is bound to the lifetime of the box, i.e. it is the return value of the function, and later (if you store the box outside the function) the lifetime of whatever variable you store the box in.</p>\n\n<p>All of that means that a closure that returns a reference to its own capture state must bind the lifetime of that reference to its own reference. Unfortunately, <strong>this is not possible</strong>.</p>\n\n<p>Here's why:</p>\n\n<p>The <code>Fn</code> trait implies the <code>FnMut</code> trait, which in turn implies the <code>FnOnce</code> trait. That is, <em>every</em> function object in Rust can be called with a by-value <code>self</code> argument. This means that every function object must be still valid being called with a by-value <code>self</code> argument and returning the same thing as always.</p>\n\n<p>In other words, trying to write a closure that returns a reference to its own captures expands to roughly this code:</p>\n\n<pre><code>struct Closure&lt;T&gt; {\n    captured: T,\n}\nimpl&lt;T&gt; FnOnce&lt;()&gt; for Closure&lt;T&gt; {\n    type Output = &amp;'??? T; // what do I put as lifetime here?\n    fn call_once(self, _: ()) -&gt; Self::Output {\n        &amp;self.captured // returning reference to local variable\n                       // no matter what, the reference would be invalid once we return\n    }\n}\n</code></pre>\n\n<p>And this is why what you're trying to do is fundamentally impossible. Take a step back, think of what you're actually trying to accomplish with this closure, and find some other way to accomplish it.</p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 19, "last_activity_date": 1586908738, "last_edit_date": 1586908738, "creation_date": 1523610346, "answer_id": 49813195, "question_id": 49806352, "link": "https://stackoverflow.com/questions/49806352/cannot-infer-an-appropriate-lifetime-for-a-closure-that-returns-a-reference/49813195#49813195", "title": "Cannot infer an appropriate lifetime for a closure that returns a reference", "body": "<p>Very interesting question! I <em>think</em> I understood the problem(s) at play here. Let me try to explain.</p>\n\n<p><strong><em>tl;dr</em>: closures cannot return references to values captured by moving, because that would be a reference to <code>self</code>. Such a reference cannot be returned because the <code>Fn*</code> traits don't allow us to express that.</strong> This is basically the same as the <a href=\"https://stackoverflow.com/questions/30422177/how-do-i-write-an-iterator-that-returns-references-to-itself\"><em>streaming iterator problem</em></a> and could be fixed via GATs (generic associated types).</p>\n\n<hr>\n\n<h3>Implementing it manually</h3>\n\n<p>As you probably know, when you write a closure, the compiler will generate a struct and <code>impl</code> blocks for the appropriate <code>Fn</code> traits, so closures are basically syntax sugar. Let's try to avoid all that sugar and build your type manually.</p>\n\n<p>What you want is a type which <em>owns</em> another type and can return references to that owned type. And you want to have a function which returns a boxed instance of said type. </p>\n\n<pre><code>struct Baz&lt;T&gt;(T);\n\nimpl&lt;T&gt; Baz&lt;T&gt; {\n    fn call(&amp;self) -&gt; &amp;T {\n        &amp;self.0\n    }\n}\n\nfn make_baz&lt;T&gt;(t: T) -&gt; Box&lt;Baz&lt;T&gt;&gt; {\n    Box::new(Baz(t))\n}\n</code></pre>\n\n<p>This is pretty equivalent to your boxed closure. Let's try to use it:</p>\n\n<pre><code>let outside = {\n    let s = \"hi\".to_string();\n    let baz = make_baz(s);\n    println!(\"{}\", baz.call()); // works\n\n    baz\n};\n\nprintln!(\"{}\", outside.call()); // works too\n</code></pre>\n\n<p>This works just fine. The string <code>s</code> is moved into the <code>Baz</code> type and that <code>Baz</code> instance is moved into the <code>Box</code>. <code>s</code> is now owned by <code>baz</code> and then by <code>outside</code>.</p>\n\n<p>It gets more interesting when we add a single character:</p>\n\n<pre><code>let outside = {\n    let s = \"hi\".to_string();\n    let baz = make_baz(&amp;s);  // &lt;-- NOW BORROWED!\n    println!(\"{}\", baz.call()); // works\n\n    baz\n};\n\nprintln!(\"{}\", outside.call()); // doesn't work!\n</code></pre>\n\n<p>Now we cannot make the lifetime of <code>baz</code> bigger than the lifetime of <code>s</code>, since <code>baz</code> contains a reference to <code>s</code> which would be an dangling reference of <code>s</code> would go out of scope earlier than <code>baz</code>. </p>\n\n<p>The point I wanted to make with this snippet: we didn't need to annotate any lifetimes on the type <code>Baz</code> to make this safe; Rust figured it out on its own and enforces that <code>baz</code> lives no longer than <code>s</code>. This will be important below.</p>\n\n<h3>Writing a trait for it</h3>\n\n<p>So far we only covered the basics. Let's try to write a trait like <code>Fn</code> to get closer to your original problem:</p>\n\n<pre><code>trait MyFn {\n    type Output;\n    fn call(&amp;self) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>In our trait, there are no function parameters, but otherwise it's fairly identical to <a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Fn.html\" rel=\"nofollow noreferrer\">the real <code>Fn</code> trait</a>.</p>\n\n<p>Let's implement it!</p>\n\n<pre><code>impl&lt;T&gt; MyFn for Baz&lt;T&gt; {\n    type Output = ???;\n    fn call(&amp;self) -&gt; Self::Output {\n        &amp;self.0\n    }\n}\n</code></pre>\n\n<p>Now we have a problem: what do we write instead of <code>???</code>? Naively one would write <code>&amp;T</code>... but we need a lifetime parameter for that reference. Where do we get one? What lifetime does the return value even have? </p>\n\n<p>Let's check the function we implemented before:</p>\n\n<pre><code>impl&lt;T&gt; Baz&lt;T&gt; {\n    fn call(&amp;self) -&gt; &amp;T {\n        &amp;self.0\n    }\n}\n</code></pre>\n\n<p>So here we use <code>&amp;T</code> without lifetime parameter too. But this only works because of lifetime elision. Basically, the compiler fills in the blanks so that <code>fn call(&amp;self) -&gt; &amp;T</code> is equivalent to:</p>\n\n<pre><code>fn call&lt;'s&gt;(&amp;'s self) -&gt; &amp;'s T\n</code></pre>\n\n<p>Aha, so the lifetime of the returned reference is bound to the <code>self</code> lifetime! (more experienced Rust users might already have a feeling where this is going...). </p>\n\n<p>(As a side note: why is the returned reference not dependent on the lifetime of <code>T</code> itself? If <code>T</code> references something non-<code>'static</code> then this has to be accounted for, right? Yes, but it is already accounted for! Remember that no instance of <code>Baz&lt;T&gt;</code> can ever live longer than the thing <code>T</code> might reference. So the <code>self</code> lifetime is already shorter than whatever lifetime <code>T</code> might have. Thus we only need to concentrate on the <code>self</code> lifetime)</p>\n\n<p>But how do we express that in the trait impl? Turns out: <strong>we can't</strong> (yet). This problem is regularly mentioned in the context of <em>streaming iterators</em> -- that is, iterators that return an item with a lifetime bound to the <code>self</code> lifetime. In today's Rust, it is sadly impossible to implement this; the type system is not strong enough. </p>\n\n<h3>What about the future?</h3>\n\n<p>Luckily, there is an <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">RFC \"Generic Associated Types\"</a> which was merged some time ago. This RFC extends the Rust type system to allow associated types of traits to be generic (over other types and lifetimes).</p>\n\n<p>Let's see how we can make your example (kinda) work with GATs (according to the RFC; this stuff doesn't work yet \u2639). First we have to change the trait definition:</p>\n\n<pre><code>trait MyFn {\n    type Output&lt;'a&gt;;   // &lt;-- we added &lt;'a&gt; to make it generic\n    fn call(&amp;self) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>The function signature hasn't changed in the code, but notice that lifetime elision kicks in! The above <code>fn call(&amp;self) -&gt; Self::Output</code> is equivalent to:</p>\n\n<pre><code>fn call&lt;'s&gt;(&amp;'s self) -&gt; Self::Output&lt;'s&gt;\n</code></pre>\n\n<p>So the lifetime of the associated type is bound to the <code>self</code> lifetime. Just as we wanted! The <code>impl</code> looks like this:</p>\n\n<pre><code>impl&lt;T&gt; MyFn for Baz&lt;T&gt; {\n    type Output&lt;'a&gt; = &amp;'a T;\n    fn call(&amp;self) -&gt; Self::Output {\n        &amp;self.0\n    }\n}\n</code></pre>\n\n<p>To return a boxed <code>MyFn</code> we would need to write this (according to <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md#using-associated-type-constructors-in-bounds\" rel=\"nofollow noreferrer\">this section of the RFC</a>:</p>\n\n<pre><code>fn make_baz&lt;T&gt;(t: T) -&gt; Box&lt;for&lt;'a&gt; MyFn&lt;Output&lt;'a&gt; = &amp;'a T&gt;&gt; {\n    Box::new(Baz(t))\n}\n</code></pre>\n\n<p>And what if we want to use the <em>real</em> <code>Fn</code> trait? As far as I understand, we can't, even with GATs. I think it's impossible to change the existing <code>Fn</code> trait to use GATs in a backwards compatible manner. So it's likely that the standard library will keep the less powerful trait as is. (side note: how to evolve the standard library in backwards incompatible ways to use new language features is something <a href=\"https://internals.rust-lang.org/t/evolving-the-standard-library-through-what/5874\" rel=\"nofollow noreferrer\">I wondered about</a> a few times already; so far I haven't heard of any real plan in this regards; I hope the Rust team comes up with something...)</p>\n\n<hr>\n\n<h3>Summary</h3>\n\n<p>What you want is not technically impossible or unsafe (we implemented it as a simple struct and it works). However, unfortunately it is impossible to express what you want in the form of closures/<code>Fn</code> traits in Rust's type system right now. This is the same problem <em>streaming iterators</em> are dealing with. </p>\n\n<p>With the planned GAT feature, it is possible to express all of this in the type system. However, the standard library would need to catch up somehow to make your exact code possible.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1523644351, "creation_date": 1523644351, "answer_id": 49823212, "question_id": 49806352, "link": "https://stackoverflow.com/questions/49806352/cannot-infer-an-appropriate-lifetime-for-a-closure-that-returns-a-reference/49823212#49823212", "title": "Cannot infer an appropriate lifetime for a closure that returns a reference", "body": "<p>The other answers are top-notch, but I wanted to chime in with another reason your original code couldn't work. A big problem lies in the signature:</p>\n\n<pre><code>fn foo&lt;'a, T: 'a&gt;(t: T) -&gt; Box&lt;Fn() -&gt; &amp;'a T + 'a&gt;\n</code></pre>\n\n<p>This says that the <em>caller</em> may specify <em>any</em> lifetime when calling <code>foo</code> and the code will be valid and memory-safe. That cannot possibly be true for this code. It wouldn't make sense to call this with <code>'a</code> set to <code>'static</code>, but nothing about this signature would prevent that.</p>\n"}], "owner": {"reputation": 345, "user_id": 9634339, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/960b1ba25c33738e16429fb253e1c048?s=128&d=identicon&r=PG&f=1", "display_name": "xardas", "link": "https://stackoverflow.com/users/9634339/xardas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1816, "favorite_count": 7, "accepted_answer_id": 49813195, "answer_count": 4, "score": 21, "last_activity_date": 1586908738, "creation_date": 1523569554, "last_edit_date": 1547784635, "question_id": 49806352, "link": "https://stackoverflow.com/questions/49806352/cannot-infer-an-appropriate-lifetime-for-a-closure-that-returns-a-reference", "title": "Cannot infer an appropriate lifetime for a closure that returns a reference", "body": "<p>Considering the following code:</p>\n\n<pre><code>fn foo&lt;'a, T: 'a&gt;(t: T) -&gt; Box&lt;Fn() -&gt; &amp;'a T + 'a&gt; {\n    Box::new(move || &amp;t)\n}\n</code></pre>\n\n<p>What I expect:</p>\n\n<ul>\n<li>The type T has lifetime <code>'a</code>.</li>\n<li>The value <code>t</code> live as long as <code>T</code>.</li>\n<li><code>t</code> moves to the closure, so the closure live as long as <code>t</code></li>\n<li>The closure returns a reference to <code>t</code> which was moved to the closure. So the reference is valid as long as the closure exists.</li>\n<li>There is no lifetime problem, the code compiles.</li>\n</ul>\n\n<p>What actually happens:</p>\n\n<ul>\n<li>The code does not compile:</li>\n</ul>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n --&gt; src/lib.rs:2:22\n  |\n2 |     Box::new(move || &amp;t)\n  |                      ^^\n  |\nnote: first, the lifetime cannot outlive the lifetime  as defined on the body at 2:14...\n --&gt; src/lib.rs:2:14\n  |\n2 |     Box::new(move || &amp;t)\n  |              ^^^^^^^^^^\nnote: ...so that closure can access `t`\n --&gt; src/lib.rs:2:22\n  |\n2 |     Box::new(move || &amp;t)\n  |                      ^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the function body at 1:8...\n --&gt; src/lib.rs:1:8\n  |\n1 | fn foo&lt;'a, T: 'a&gt;(t: T) -&gt; Box&lt;Fn() -&gt; &amp;'a T + 'a&gt; {\n  |        ^^\n  = note: ...so that the expression is assignable:\n          expected std::boxed::Box&lt;(dyn std::ops::Fn() -&gt; &amp;'a T + 'a)&gt;\n             found std::boxed::Box&lt;dyn std::ops::Fn() -&gt; &amp;T&gt;\n</code></pre>\n\n<p>I do not understand the conflict. How can I fix it?</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 420, "user_id": 5133139, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qltJF.jpg?s=128&g=1", "display_name": "\u30af\u30ea\u30db", "link": "https://stackoverflow.com/users/5133139/%e3%82%af%e3%83%aa%e3%83%9b"}, "edited": false, "score": 0, "creation_date": 1523731150, "post_id": 49804878, "comment_id": 86684881, "body": "Looks like you are encountering this limitation: Input to an expression macro may not refer to hygienic identifiers of local variables (<a href=\"https://github.com/dtolnay/proc-macro-hack/issues/15\" rel=\"nofollow noreferrer\">#15</a>)."}, {"owner": {"reputation": 31, "user_id": 9637994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TnKPQ.png?s=128&g=1", "display_name": "mosh", "link": "https://stackoverflow.com/users/9637994/mosh"}, "reply_to_user": {"reputation": 420, "user_id": 5133139, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qltJF.jpg?s=128&g=1", "display_name": "\u30af\u30ea\u30db", "link": "https://stackoverflow.com/users/5133139/%e3%82%af%e3%83%aa%e3%83%9b"}, "edited": false, "score": 0, "creation_date": 1523834972, "post_id": 49804878, "comment_id": 86710425, "body": "Oh, I should have seen issues before asking. Thanks!"}], "owner": {"reputation": 31, "user_id": 9637994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TnKPQ.png?s=128&g=1", "display_name": "mosh", "link": "https://stackoverflow.com/users/9637994/mosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2067, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1523562959, "creation_date": 1523562959, "question_id": 49804878, "link": "https://stackoverflow.com/questions/49804878/cannot-find-value-a-in-this-scope-in-rust-macro", "title": "&quot;cannot find value `a` in this scope&quot; in Rust macro", "body": "<p>I created macro for printing, using proc-macro-hack.<br>\nThen this error occured though I already have defined <code>a</code>.</p>\n\n<p>Following is the code.</p>\n\n<p>On decl crate,</p>\n\n<pre><code>proc_macro_expr_decl! {\n    /// Function for printing to the standard output.\n    ///\n    /// First argument can be literal or not literal.\n    gprint! =&gt; gprint_impl\n}\n</code></pre>\n\n<p>On impl crate,</p>\n\n<pre><code>use syn::{Expr, ExprTuple, parse_str};\nuse quote::ToTokens;\nfn _print_impl(input: &amp;str, print_name: &amp;str) -&gt; String {\n    let mut input_with_parens = String::with_capacity(input.len() + 2);\n    input_with_parens.push('(');\n    input_with_parens.push_str(input);\n    input_with_parens.push(')');\n    let tuple = parse_str::&lt;ExprTuple&gt;(&amp;input_with_parens)\n        .unwrap_or_else(|_| panic!(\"expected arguments is expressions separated by comma, found {}\", input))\n    let mut arg_iter = tuple.elems.iter();\n    let first = arg_iter.next();\n    if first.is_none() {\n        return \"()\".to_string();\n    }\n    let first = first.unwrap();\n    let mut s = String::new();\n    if let &amp;Expr::Lit(ref lit) = first {\n        s.push_str(print_name);\n        s.push('(');\n        s.push_str(&amp;lit.into_tokens().to_string());\n    } else {\n        s.push_str(print_name);\n        s.push_str(\"(\\\"{}\\\", \");\n        s.push_str(&amp;first.into_tokens().to_string());\n    }\n    for arg in arg_iter {\n        s.push_str(\", \");\n        s.push_str(&amp;arg.into_tokens().to_string());\n    }\n    s.push(')');\n    s\n}\n\nproc_macro_expr_impl! {\n    pub fn gprint_impl(input: &amp;str) -&gt; String {\n        _print_impl(input, \"print!\")\n    }\n}\n</code></pre>\n\n<p>And tried using this macro,</p>\n\n<pre><code>fn main() {\n    let a = 0;\n    gprint!(a);\n}\n</code></pre>\n\n<p>error occured:</p>\n\n<pre><code>error[E0425]: cannot find value `a` in this scope\n</code></pre>\n\n<p>Why?</p>\n"}, {"tags": ["c#", "rust"], "comments": [{"owner": {"reputation": 84066, "user_id": 5311735, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6rhPk.jpg?s=128&g=1", "display_name": "Evk", "link": "https://stackoverflow.com/users/5311735/evk"}, "edited": false, "score": 1, "creation_date": 1523548607, "post_id": 49800598, "comment_id": 86616780, "body": "If I understand correctly - you don&#39;t need to do this. Just pass pointer to instance method exactly the same way you do for static - .net will handle it for you."}, {"owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "reply_to_user": {"reputation": 84066, "user_id": 5311735, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6rhPk.jpg?s=128&g=1", "display_name": "Evk", "link": "https://stackoverflow.com/users/5311735/evk"}, "edited": false, "score": 0, "creation_date": 1523549745, "post_id": 49800598, "comment_id": 86617494, "body": "@Evk It works! thanks, didn&#39;t cross my mind to even try without the instance pointer.  Any idea how that magic works? Does the pointer passed to Rust point to a wrapper function created by the CLR which remembers the this pointer and pushes it to the stack before calling the instance method?"}, {"owner": {"reputation": 84066, "user_id": 5311735, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6rhPk.jpg?s=128&g=1", "display_name": "Evk", "link": "https://stackoverflow.com/users/5311735/evk"}, "edited": false, "score": 0, "creation_date": 1523550289, "post_id": 49800598, "comment_id": 86617765, "body": "Basically yes. .net delegate has Target property, so it&#39;s not purely a function pointer. GetFunctionPointerForDelegate preserves this semantics. You can read a bit more here: <a href=\"https://stackoverflow.com/q/20600380/5311735\">stackoverflow.com/q/20600380/5311735</a>"}, {"owner": {"reputation": 84066, "user_id": 5311735, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6rhPk.jpg?s=128&g=1", "display_name": "Evk", "link": "https://stackoverflow.com/users/5311735/evk"}, "edited": false, "score": 0, "creation_date": 1523550408, "post_id": 49800598, "comment_id": 86617815, "body": "Also pay attention to keep delegate alive, otherwise garbage collector might collect it before (or during) rust executes it, which will lead to surprising results. .NET cannot know that delegate is used by unmanaged code, so you should take care of that yourself."}, {"owner": {"reputation": 84066, "user_id": 5311735, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6rhPk.jpg?s=128&g=1", "display_name": "Evk", "link": "https://stackoverflow.com/users/5311735/evk"}, "edited": false, "score": 0, "creation_date": 1523550731, "post_id": 49800598, "comment_id": 86617996, "body": "Though keeping alive is important only if callback can be executed later than you pass it. If rust only executes callback during the same function you pass it in (doesn&#39;t store it for later use) - .net should keep it alive itself."}, {"owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "reply_to_user": {"reputation": 84066, "user_id": 5311735, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6rhPk.jpg?s=128&g=1", "display_name": "Evk", "link": "https://stackoverflow.com/users/5311735/evk"}, "edited": false, "score": 0, "creation_date": 1523551371, "post_id": 49800598, "comment_id": 86618369, "body": "@Evk isn\u2019t that risky ? Can\u2019t the delegate or the instance move around the heap even if neither of them was collected?"}, {"owner": {"reputation": 84066, "user_id": 5311735, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6rhPk.jpg?s=128&g=1", "display_name": "Evk", "link": "https://stackoverflow.com/users/5311735/evk"}, "edited": false, "score": 0, "creation_date": 1523553076, "post_id": 49800598, "comment_id": 86619308, "body": "They can, but this is handled correctly by .net, as far as I know. A bit more info here: <a href=\"https://stackoverflow.com/q/45786857/5311735\">stackoverflow.com/q/45786857/5311735</a>"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1523752661, "post_id": 49800598, "comment_id": 86690191, "body": "Usually, you don&#39;t even need to call <code>Marshal.GetFunctionPointerForDelegate</code> manually; you can just declare the function pointer argument with a delegate type instead of <code>IntPtr</code>."}], "owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 618, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1523547283, "creation_date": 1523547283, "question_id": 49800598, "link": "https://stackoverflow.com/questions/49800598/passing-a-c-instance-method-to-rust-as-a-callback", "title": "Passing a C# instance method to Rust as a callback?", "body": "<p>I'm trying to pass a C# method to Rust to be used as a callback.\nI've managed to pass a static function and it works fine (see below).</p>\n\n<p>Now I'd like to call an instance method, which means that the <code>trigger</code> function below should also receive an opaque (<code>libc::c_void</code>) this pointer.\nHow can I get the <code>IntPtr</code> which Rust should pass as the instance pointer to the callback function?</p>\n\n<p>C#</p>\n\n<pre><code>    class Program\n    {\n        delegate void PrintFn(int x);\n\n        public static void Main(string[] args)\n        {\n            PrintFn fn = Print;\n            var ptr = Marshal.GetFunctionPointerForDelegate(fn);\n            IntPtr handle = IntPtr.Zero;\n            create(ptr, out handle);\n            trigger(handle, 3);\n        }\n\n        public static void Print(int x)\n        {\n            Console.WriteLine($\"C#: {x}\");\n        }\n\n        [DllImport(@\"/path/to/rust/dll\")]\n        public static extern int create(IntPtr readFn, out IntPtr callback);\n\n        [DllImport(@\"/path/to/rust/dll\")]\n        public static extern int trigger(IntPtr handle, int x);\n    }\n</code></pre>\n\n<p>Rust:</p>\n\n<pre><code>use std::boxed::Box;\n\npub struct RustCallback {\n    callback: extern \"stdcall\" fn(i32),\n}\n\nimpl RustCallback {\n    fn new(callback: extern \"stdcall\" fn(i32)) -&gt; RustCallback {\n        RustCallback {\n            callback: read_fn,\n        }\n    }\n}\n\npub fn set_output_arg&lt;T&gt;(out: *mut T, value: T) {\n    unsafe { *out.as_mut().unwrap() = value };\n}\n\n#[no_mangle]\npub extern \"C\" fn create(callback: extern \"stdcall\" fn(i32), sc: *mut *mut RustCallback)  -&gt; u32 {\n    set_output_arg(sc, Box::into_raw(Box::new(RustCallback::new(callback))));\n    0\n}\n\n#[no_mangle]\npub extern \"C\" fn trigger(sc: *mut RustCallback, x: i32)  -&gt;  u32 {\n    let sc = unsafe { sc.as_mut().unwrap() };\n    let f = sc.read_fn;\n    f(x);\n    0\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "edited": false, "score": 0, "creation_date": 1523549312, "post_id": 49800096, "comment_id": 86617227, "body": "Many thanks @DK. Just to be sure ... I understand your explanation as: an <code>expr</code> evaluate to a value and has a type, but <code>&amp;self</code> and function arguments are not expressions. Is it right?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "edited": false, "score": 0, "creation_date": 1523549409, "post_id": 49800096, "comment_id": 86617289, "body": "The <code>self</code> argument is special and isn&#39;t anything specific that you can directly match.  The other arguments are combinations of patterns and types.  So no, they&#39;re not expressions."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1523545873, "creation_date": 1523545873, "answer_id": 49800096, "question_id": 49799962, "link": "https://stackoverflow.com/questions/49799962/what-macro-fragment-specifier-should-i-use-to-match-a-method-declaration-when-us/49800096#49800096", "title": "What macro fragment specifier should I use to match a method declaration when using a macro to define a trait?", "body": "<p>Whilst it's technically possible to properly match the arguments of a trait method... it's not worth the hassle.  Just match them as raw tokens:</p>\n\n<pre><code>macro_rules! decorated_trait (\n    ($tid:ident {\n        $( fn $b:ident($($args:tt)*) );*\n    }) =&gt; {\n        trait $tid {\n            fn default_function(&amp;self, _x: i32, _y: &amp;str) {\n            }\n\n            $( fn $b( $( $args )* ); )*\n        }\n    };\n);\n</code></pre>\n\n<p>The reason your macro doesn't work is that arguments are not types.  They are a single optional \"<code>self</code>-ish\" argument that can take several different forms, followed by zero or more <code>pattern: type</code> pairs, except where they don't have a pattern.</p>\n\n<p>Like I said, not worth the hassle.</p>\n"}], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 49800096, "answer_count": 1, "score": 1, "last_activity_date": 1523577036, "creation_date": 1523545479, "last_edit_date": 1523577036, "question_id": 49799962, "link": "https://stackoverflow.com/questions/49799962/what-macro-fragment-specifier-should-i-use-to-match-a-method-declaration-when-us", "title": "What macro fragment specifier should I use to match a method declaration when using a macro to define a trait?", "body": "<p>I'm trying to define a trait using a macro.</p>\n\n<p>I've not found a fragment specifier that match a method declaration and \nthe best I managed to get is the following:</p>\n\n<pre><code>macro_rules! decorated_trait (\n    ($tid:ident {\n        $( fn $b:ident($($args:expr),*) );*\n    }) =&gt; {\n        trait $tid {\n            fn default_function(&amp;self, _x: i32, _y: &amp;str) {\n            }\n\n            $( fn $b( $( $args ),* ); )*\n        }\n    };\n);\n\ndecorated_trait!(MyTrait { \n    fn my_function(&amp;self, x: i32);\n    fn another(&amp;self)\n});\n\nstruct Foo {}\n\nimpl MyTrait for Foo {\n\n    fn my_function(&amp;self) {\n        self.default_function(1, \"bar\");\n    }\n\n    fn another(&amp;self) {}\n}\n\nfn main() {\n    let _foo = Foo{};\n}\n</code></pre>\n\n<p>And the error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected type, found `&amp;self`\n  --&gt; src/main.rs:11:26\n   |\n11 |               $( fn $b( $( $args ),* ); )*\n   |                            ^^^^^\n</code></pre>\n"}, {"tags": ["rust", "closures", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1523540729, "post_id": 49797411, "comment_id": 86611038, "body": "<i>&quot;I cannot move it because <code>Client</code> doesn&#39;t implement <code>Copy</code>&quot;</i> A better interpretation of that error message is that an attempt to use <code>client</code> was made after it was moved to the closure."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1523540930, "post_id": 49797411, "comment_id": 86611198, "body": "Nevertheless, the subsection of the book on <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch16-01-threads.html#using-move-closures-with-threads\" rel=\"nofollow noreferrer\">using <code>move</code> closures with threads</a> shows that exact error. If you need to reuse that value outside that thread scope, <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch16-03-shared-state.html\" rel=\"nofollow noreferrer\">shared state</a> might be needed, as you already predicted."}], "answers": [{"comments": [{"owner": {"reputation": 642, "user_id": 5903220, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/291d29cf6adac0a479244f2f8cc82e54?s=128&d=identicon&r=PG&f=1", "display_name": "cdelmas", "link": "https://stackoverflow.com/users/5903220/cdelmas"}, "edited": false, "score": 0, "creation_date": 1523542836, "post_id": 49798696, "comment_id": 86612517, "body": "Yeepee!! This is almost (I wrote <code>Arc::clone(&amp;client)</code> instead of <code>client.clone()</code>) the code I just finished to write! Thank you for the very precise answer, because I&#39;m pretty sure I would have spent a huge amount of time to understand the reasons why I need Arc&lt;Mutex&lt;&gt;&gt; in this situation. Very insightful exercise :) Anyway, I will try to study this case further."}, {"owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "reply_to_user": {"reputation": 642, "user_id": 5903220, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/291d29cf6adac0a479244f2f8cc82e54?s=128&d=identicon&r=PG&f=1", "display_name": "cdelmas", "link": "https://stackoverflow.com/users/5903220/cdelmas"}, "edited": false, "score": 0, "creation_date": 1523547088, "post_id": 49798696, "comment_id": 86615766, "body": "The relationship betwenn the <code>Fn</code> traits can be a bit confusing at first, but The Book has <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html\" rel=\"nofollow noreferrer\">a chapter</a> on that. For <code>Mutex</code>, <code>Arc</code> and cousins see <a href=\"https://doc.rust-lang.org/book/second-edition/ch16-03-shared-state.html\" rel=\"nofollow noreferrer\">this chapter</a>. Both long, but worth the read :)"}], "tags": [], "owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "is_accepted": true, "score": 3, "last_activity_date": 1523542228, "last_edit_date": 1523542228, "creation_date": 1523541920, "answer_id": 49798696, "question_id": 49797411, "link": "https://stackoverflow.com/questions/49797411/how-to-set-a-lifetime-to-a-value-captured-in-a-closure/49798696#49798696", "title": "How to set a lifetime to a value captured in a closure?", "body": "<p>Let's look at the requirements. You want to call <a href=\"https://docs.rs/statsd/0.10.0/statsd/client/struct.Client.html#method.incr\" rel=\"nofollow noreferrer\"><code>statsd::Client::incr(&amp;mut client, metric)</code></a> from inside the closure, so you need mutable access to <code>client</code>. This is a variable you close over with <code>||</code>.</p>\n\n<p>Now <a href=\"https://api.rocket.rs/rocket/fairing/enum.AdHoc.html#method.on_request\" rel=\"nofollow noreferrer\"><code>AdHoc::on_request&lt;F&gt;(f: F)</code></a> requires <code>F: Fn(...) + Send + Sync + 'static</code>. <code>Fn</code> means you only have immutable access to your capture via <code>&amp;self</code>. The <code>'static</code> bound means the capture cannot be a reference itself, so it requires <code>move ||</code>. Finally <code>Sync</code> means you can't use <code>Cell</code> or <code>RefCell</code> to get a mutable reference from <code>&amp;self.client</code>, since Rocket will share it between threads.</p>\n\n<p>Just like you suspected, the canonical solution to have shared mutable access through a <code>Send + Sync</code> value is to use <code>Arc&lt;Mutex&lt;_&gt;&gt;</code>. This also solves the problem of \"losing access by moving\". Your code would look like the following (untested):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let client = Arc::new(Mutex::new(\n        Client::new(\"127.0.0.1:9125\", \"miniserver-rs\").unwrap()));\n\n    // shallow-clone the Arc to move it into closure\n    let rocket_client = client.clone();\n    rocket::ignite()\n        .attach(AdHoc::on_request(move |request, data|{\n            rocket_client.lock()\n                .unwrap()\n                .incr(\"http.requests\");\n\n            println!(\"Request URI: {}\", request.uri());\n        }))\n       .mount(\"/\", routes![index])\n       .launch();\n\n   client.lock()\n       .unwrap()\n       .incr(\"server.bootstrap\");\n}\n</code></pre>\n"}], "owner": {"reputation": 642, "user_id": 5903220, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/291d29cf6adac0a479244f2f8cc82e54?s=128&d=identicon&r=PG&f=1", "display_name": "cdelmas", "link": "https://stackoverflow.com/users/5903220/cdelmas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 418, "favorite_count": 0, "accepted_answer_id": 49798696, "answer_count": 1, "score": 1, "last_activity_date": 1523576389, "creation_date": 1523538457, "last_edit_date": 1523576389, "question_id": 49797411, "link": "https://stackoverflow.com/questions/49797411/how-to-set-a-lifetime-to-a-value-captured-in-a-closure", "title": "How to set a lifetime to a value captured in a closure?", "body": "<p>I wrote what I think is simple code:</p>\n\n<pre><code>#![feature(plugin)]\n#![plugin(rocket_codegen)]\n\nextern crate rocket;\nextern crate statsd;\n\nuse rocket::{Data, Request};\nuse rocket::fairing::AdHoc;\nuse statsd::Client;\n\n#[get(\"/\")]\nfn index() -&gt; &amp;'static str {\n    \"Hello, World\"\n}\n\nfn main() {\n    let mut client = Client::new(\"127.0.0.1:9125\", \"miniserver-rs\").unwrap();\n\n    rocket::ignite()\n        .attach(AdHoc::on_request(|request, data|{\n            client.incr(\"http.requests\");\n            println!(\"Request URI: {}\", request.uri());\n        }))\n       .mount(\"/\", routes![index])\n       .launch();\n   client.incr(\"server.bootstrap\");\n}\n</code></pre>\n\n<p>I try to send some metrics on each request, but I get the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling miniserver-rs v0.1.0 (main.rs)\nerror[E0373]: closure may outlive the current function, but it borrows `client`, which is owned by the current function\n  --&gt; src\\main.rs:19:33\n   |\n19 |       .attach(AdHoc::on_request(|request, _data|{\n   |                                 ^^^^^^^^^^^^^^^^ may outlive borrowed value `client`\n20 |           client.incr(\"http.requests\");\n   |           ------ `client` is borrowed here help: to force the closure to take ownership of `client` (and any other referenced variables), use the `move` keyword\n   |\n19 |       .attach(AdHoc::on_request(move |request, _data|{\n   |                                 ^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0387]: cannot borrow data mutably in a captured outer variable in an `Fn` closure\n  --&gt; src\\main.rs:20:11\n   |\n20 |           client.incr(\"http.requests\");\n   |           ^^^^^^\n   |\nhelp: consider changing this closure to take self by mutable reference\n  --&gt; src\\main.rs:19:33\n   |\n19 |         .attach(AdHoc::on_request(|request, _data|{\n   |  _________________________________^\n20 | |           client.incr(\"http.requests\");\n21 | |           println!(\"Request URI: {}\", request.uri());\n22 | |       }))\n   | |_______^\n</code></pre>\n\n<p>I understand that <code>client</code> is captured in a closure and owned by another function (<code>main</code>) that could live less than the closure. I cannot <code>move</code> it because <code>Client</code> doesn't implement <code>Copy</code>, so the reference could not be used afterwards.</p>\n\n<p>I also understand that I cannot borrow mutable data in a closure (<code>Client</code> is mutable). After a lot of search, I can conclude I need to use <code>Arc</code>/<code>Rc</code> in combination with <code>Mutex</code>/<code>RwLock</code>/<code>RefCell</code>, but before going further, I want to be sure it is required.</p>\n"}]