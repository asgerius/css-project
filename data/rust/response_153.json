[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513283643, "post_id": 47803862, "comment_id": 82605722, "body": "See also <a href=\"https://stackoverflow.com/q/32956050/155423\">How to create a static string at compile time</a>"}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 7, "last_activity_date": 1569461267, "last_edit_date": 1569461267, "creation_date": 1513220141, "answer_id": 47805176, "question_id": 47803862, "link": "https://stackoverflow.com/questions/47803862/how-can-i-create-100-distinct-labels-with-type-static-str/47805176#47805176", "title": "How can I create 100 distinct labels with type &amp;&#39;static str?", "body": "<p>You cannot.</p>\n\n<p>Lifetimes are descriptive, not prescriptive: you can't create a string and say \"this data has the <code>'static</code> lifetime.\" Rust makes you write lifetime annotations like <code>'static</code> so that the compiler can check your work. In the case of building a string in a runtime loop, you can't safely call it <code>'static</code> because it's not. (See also <a href=\"https://stackoverflow.com/questions/28108689/how-to-initialize-a-variable-with-a-lifetime\">How to initialize a variable with a lifetime?</a>)</p>\n\n<p>But that doesn't mean you don't have any options.</p>\n\n<h3>Avoiding lifetimes altogether</h3>\n\n<p>Possibly what you're looking for is just to avoid annotating <code>Node</code> with a lifetime parameter, like <code>Node&lt;'a&gt;</code>. In which case, just use <code>String</code> instead:</p>\n\n<pre><code>struct Node {\n    datum: String,\n    edges: Vec&lt;Rc&lt;RefCell&lt;Node&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>This is idiomatic and most likely the best option. If you're sure you will never need <code>String</code>'s methods after creating it, and you don't want to store its capacity, you can call <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.into_boxed_str\" rel=\"nofollow noreferrer\"><code>String::into_boxed_str</code></a> to make it a <code>Box&lt;str&gt;</code> instead. This is the same storage-wise as <code>&amp;'static str</code>, but the heap storage for the <code>str</code> will be reclaimed when the <code>Node</code> is dropped.</p>\n\n<p>You could even use <code>Rc&lt;str&gt;</code>, which is also the same storage as <code>&amp;'static str</code> but cheaper to clone than a <code>Box</code>.</p>\n\n<h3>Making non-static data <code>'static</code> by leaking</h3>\n\n<p>If you really <em>want</em> to, you can \"fake\" a <code>&amp;'static str</code> by making a <code>Box&lt;str&gt;</code> and leaking it -- i.e. discarding the knowledge that it's a <code>Box</code> so that its backing memory will <em>never</em> be reclaimed. Since Rust 1.26, you can use <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.leak\" rel=\"nofollow noreferrer\"><code>Box::leak</code></a>; I'll make a helper function to create the labels:</p>\n\n<pre><code>fn label(i: u32) -&gt; &amp;'static str {\n    let s = format!(\"A{}\", i);\n    Box::leak(s.into_boxed_str())\n}\nfor i in 0..100 {\n    let a = Node::new(label(i));\n    let b = Node::new(label(i+1));\n    // ...\n}\n</code></pre>\n\n<p>The main thing this gives you is that <code>&amp;</code> references are <code>Copy</code>. But <code>Node</code> isn't <code>Copy</code> anyway, so why not just use <code>Box</code>?</p>\n\n<h3>Generating labels at or before compile time</h3>\n\n<p>If you need a string that's <em>actually</em> <code>'static</code>, it has to be there at compile time. As far as I know, <code>macro_rules</code> macros aren't powerful enough to do this, but you can always generate code. Here's one possibility:</p>\n\n<pre><code>// This part can be generated by a build script, or in your editor:\nstatic LABELS: [&amp;'static str; 100] = [\n    \"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\", \"A11\", \"A12\", \"A13\", \"A14\",\n    \"A15\", \"A16\", \"A17\", \"A18\", \"A19\", \"A20\", \"A21\", \"A22\", \"A23\", \"A24\", \"A25\", \"A26\", \"A27\",\n    \"A28\", \"A29\", \"A30\", \"A31\", \"A32\", \"A33\", \"A34\", \"A35\", \"A36\", \"A37\", \"A38\", \"A39\", \"A40\",\n    \"A41\", \"A42\", \"A43\", \"A44\", \"A45\", \"A46\", \"A47\", \"A48\", \"A49\", \"A50\", \"A51\", \"A52\", \"A53\",\n    \"A54\", \"A55\", \"A56\", \"A57\", \"A58\", \"A59\", \"A60\", \"A61\", \"A62\", \"A63\", \"A64\", \"A65\", \"A66\",\n    \"A67\", \"A68\", \"A69\", \"A70\", \"A71\", \"A72\", \"A73\", \"A74\", \"A75\", \"A76\", \"A77\", \"A78\", \"A79\",\n    \"A80\", \"A81\", \"A82\", \"A83\", \"A84\", \"A85\", \"A86\", \"A87\", \"A88\", \"A89\", \"A90\", \"A91\", \"A92\",\n    \"A93\", \"A94\", \"A95\", \"A96\", \"A97\", \"A98\", \"A99\", \"A100\",\n];\nfor i in 0..100 {\n    let a = Node::new(LABELS[i]);\n    // ...\n}\n</code></pre>\n\n<p>This might not seem like the most elegant solution, but it has several advantages over the above suggestions. The strings don't have to be allocated, so they're as cheap as possible. The code size is smaller. The resulting code is easier for the compiler to optimize. It's easy to generate <code>LABELS</code> with an editor macro or a one-liner in your scripting language of choice. It's also trivial to check, because it's just a list of increasing integers. The biggest reason why you would want to avoid code generation is if 100 is a number that may change and you don't want to edit multiple locations in the code when that happens. In that case runtime generation (using one of the ideas above) is probably your best bet.</p>\n"}], "owner": {"reputation": 35, "user_id": 7597967, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/257a4bcce6256015a132905d4f9659dc?s=128&d=identicon&r=PG", "display_name": "user18953", "link": "https://stackoverflow.com/users/7597967/user18953"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 47805176, "answer_count": 1, "score": 3, "last_activity_date": 1569461267, "creation_date": 1513209088, "last_edit_date": 1513222730, "question_id": 47803862, "link": "https://stackoverflow.com/questions/47803862/how-can-i-create-100-distinct-labels-with-type-static-str", "title": "How can I create 100 distinct labels with type &amp;&#39;static str?", "body": "<p>I am trying to create a graph using <code>RefCell</code> and <code>Rc</code>. I want to create 100 nodes in a loop with string labels. This is the graph representation:</p>\n\n<pre><code>struct Node {\n    datum: &amp;'static str,\n    edges: Vec&lt;Rc&lt;RefCell&lt;Node&gt;&gt;&gt;,\n}\n\nimpl Node {\n    fn new(datum: &amp;'static str) -&gt; Rc&lt;RefCell&lt;Node&gt;&gt; {\n        Rc::new(RefCell::new(Node {\n            datum: datum,\n            edges: Vec::new(),\n        }))\n    }\n}\n</code></pre>\n\n<p>This is the loop I am writing to create nodes:</p>\n\n<pre><code>for i in 0..100 {\n    let a = Node::new(concat!(\"A\", i));\n    let b = Node::new(concat!(\"A\", i + 1));\n    {\n        let mut mut_root = a.borrow_mut();\n        mut_root.edges.push(b.clone());\n    }\n}\n</code></pre>\n\n<p>This is the error I am getting:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected a literal\n  --&gt; src/main.rs:17:40\n   |\n17 |         let a = Node::new(concat!(\"A\", i));\n   |                                        ^\n\nerror: expected a literal\n  --&gt; src/main.rs:18:40\n   |\n18 |         let b = Node::new(concat!(\"A\", i + 1));\n   |                                        ^^^^^\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1513202504, "post_id": 47802714, "comment_id": 82566914, "body": "Thanks, <code>Itertools::tuples</code> is cool. I had tried <code>...().collect::&lt;(i32, i32)&gt;</code> to get those tuples but was informed that it was basically nonsense"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 2, "creation_date": 1513236825, "post_id": 47802714, "comment_id": 82577294, "body": "Just as a note: I think this makes a flat stream of numbers, and then picks them in pairs. I.e. it doesn&#39;t care whether the input is <code>1: 2\\n3: 4\\n</code>, <code>1\\n2\\n3\\n4\\n</code> or <code>1: 2: 3: 4</code> (also it ignores all parse errors afaict)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1513264475, "post_id": 47802714, "comment_id": 82594734, "body": "@Stefan yep! The original code ignored the parse errors as well (<code>filter_map(|n| n.parse::&lt;i32&gt;().ok())</code>), I just wrote it shorter. It also makes the assumption that the key and the value are the same integer type."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1572530797, "last_edit_date": 1572530797, "creation_date": 1513202201, "answer_id": 47802714, "question_id": 47802539, "link": "https://stackoverflow.com/questions/47802539/collect-iterators-of-length-2-into-hashmap/47802714#47802714", "title": "Collect iterators of length 2 into HashMap", "body": "<p><code>HashMap</code> implements <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#impl-FromIterator%3C(K%2C%20V)%3E\" rel=\"nofollow noreferrer\"><code>FromIterator&lt;(K, V)&gt;</code></a>. Then it's just a matter of converting the text into an iterator of tuples. I like using <a href=\"https://docs.rs/itertools/0.8.1/itertools/trait.Itertools.html#method.tuples\" rel=\"nofollow noreferrer\"><code>Itertools::tuples</code></a>:</p>\n\n<pre><code>const INPUT: &amp;str = r#\"0: 3\n1: 2\n2: 4\n4: 8\n6: 5\n8: 6\"#;\n\nextern crate itertools;\n\nuse std::collections::HashMap;\nuse itertools::Itertools;\n\nfn main() {\n    let z: HashMap&lt;u8, u8&gt; = INPUT\n        .lines()\n        .flat_map(|l| l.split(\":\"))\n        .flat_map(|n| n.trim().parse())\n        .tuples()\n        .collect();\n\n    println!(\"{:?}\", z);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30441698/155423\">How do I create a map from a list in a functional way?</a></li>\n</ul>\n"}], "owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1980, "favorite_count": 0, "accepted_answer_id": 47802714, "answer_count": 1, "score": 5, "last_activity_date": 1572530797, "creation_date": 1513201323, "last_edit_date": 1513201693, "question_id": 47802539, "link": "https://stackoverflow.com/questions/47802539/collect-iterators-of-length-2-into-hashmap", "title": "Collect iterators of length 2 into HashMap", "body": "<p>I'm able to parse my input into effectively an <code>Iterator&lt;Iterator&lt;i32&gt;&gt;</code> where each inner iterator is length 2. The input looks like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0: 3\n1: 2\n2: 4\n4: 8\n6: 5\n8: 6\n...\n</code></pre>\n\n<p>I can parse this with:</p>\n\n<pre><code>input.lines()\n     .map(|line| line.split(\": \")\n                     .filter_map(|n| n.parse::&lt;i32&gt;().ok()))\n</code></pre>\n\n<p>The best way I came up with to put this into a <code>HashMap</code> is:</p>\n\n<pre><code>let mut tmp_map: HashMap&lt;i32, i32&gt; = HashMap::new();\nfor mut pair in input.lines()\n                     .map(|line| line.split(\": \")\n                                     .filter_map(|n| n.parse::&lt;i32&gt;().ok()))\n{\n    tmp_map.insert(pair.next().unwrap(), pair.next().unwrap());\n}\n</code></pre>\n\n<p>...which seems very unwieldy. Is there a way to collect this iterator into a <code>HashMap</code>?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=f6a80f40ec0ba0380c9c539a4b740ecb&amp;version=undefined\" rel=\"noreferrer\">Playground</a></p>\n"}, {"tags": ["struct", "iterator", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513182116, "post_id": 47797743, "comment_id": 82556286, "body": "You haven&#39;t shown <i>any</i> attempt at solving your own problem. Stack Overflow isn&#39;t a service where people write code for you; it is expected that you show some research or effort."}, {"owner": {"reputation": 31, "user_id": 9092224, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98ce4d39f585c6e5c69f0b3a97528dfc?s=128&d=identicon&r=PG&f=1", "display_name": "galvares", "link": "https://stackoverflow.com/users/9092224/galvares"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513192512, "post_id": 47797743, "comment_id": 82562195, "body": "But I do not know much about Rust, sir. That&#39;s why I&#39;m asking for some help.  The basic way I know to iterate would be to use .iter(), but it does not deepen the levels in the structure. I would have to do a recursive function, but the type treatment got complicated for me now."}, {"owner": {"reputation": 31, "user_id": 9092224, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98ce4d39f585c6e5c69f0b3a97528dfc?s=128&d=identicon&r=PG&f=1", "display_name": "galvares", "link": "https://stackoverflow.com/users/9092224/galvares"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513195093, "post_id": 47797743, "comment_id": 82563463, "body": "And I did not ask to create code for myself. I just asked what would be the best way to iterate through multi-levels. The person might well respond only to something like &quot;use this syscall X, or structure in a Y-way, or do it recursively using Z or W&quot;. Or just pointing some documentation or example in the internet."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513195377, "post_id": 47797743, "comment_id": 82563647, "body": "You haven&#39;t even described what &quot;correct&quot; means. You may need to read up on <a href=\"https://en.wikipedia.org/wiki/Breadth-first_search\" rel=\"nofollow noreferrer\">Breadth-first search</a> and <a href=\"https://en.wikipedia.org/wiki/Depth-first_search\" rel=\"nofollow noreferrer\">Depth-first search</a>."}, {"owner": {"reputation": 31, "user_id": 9092224, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98ce4d39f585c6e5c69f0b3a97528dfc?s=128&d=identicon&r=PG&f=1", "display_name": "galvares", "link": "https://stackoverflow.com/users/9092224/galvares"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513195669, "post_id": 47797743, "comment_id": 82563794, "body": "&quot;correct&quot; based on language best pratices; and now, with this links, you help me. thanks."}], "answers": [{"comments": [{"owner": {"reputation": 31, "user_id": 9092224, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98ce4d39f585c6e5c69f0b3a97528dfc?s=128&d=identicon&r=PG&f=1", "display_name": "galvares", "link": "https://stackoverflow.com/users/9092224/galvares"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513241270, "post_id": 47804579, "comment_id": 82579494, "body": "Incredible! This is what I call &#39;correct&#39; :) Thanks for the effort. Now my mission is to understand piece by piece."}], "tags": [], "owner": {"reputation": 31, "user_id": 9092224, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98ce4d39f585c6e5c69f0b3a97528dfc?s=128&d=identicon&r=PG&f=1", "display_name": "galvares", "link": "https://stackoverflow.com/users/9092224/galvares"}, "is_accepted": false, "score": 2, "last_activity_date": 1513222321, "last_edit_date": 1513222321, "creation_date": 1513214821, "answer_id": 47804579, "question_id": 47797743, "link": "https://stackoverflow.com/questions/47797743/how-to-correctly-iterate-all-records-of-a-multi-level-depth-structure-in-rust/47804579#47804579", "title": "How to correctly iterate all records of a multi-level depth structure in Rust?", "body": "<p>I created a simple recursive function to handle the problem and everything is fine now. I do not know what was my mistake yesterday when I created this topic. The real problem is little different from what I asked for, but the essence is the same:</p>\n\n<pre><code>use std::vec::Vec;\n\nstruct Node {\n    id: i64,\n    nodes: Vec&lt;Node&gt;,\n    focused: bool,\n}\n\nstruct Controller {\n    focused: i32,\n}\n\nimpl Controller {\n    fn get_focused(&amp;mut self) -&gt; i32 {\n        let nodes: Node = ....; // code skipped. represented with JSON object above, but with 'focused' member\n\n        for node in nodes.iter() {\n            self.focused = self.node_iterator(node);\n        }\n        self.focused\n    }\n\n    fn node_iterator(&amp;self, node: Node) -&gt; i32 {\n        let mut focused: i32 = 0;\n\n        if node.nodes.len() &gt; 0 {\n            for n in node.nodes.iter() {\n                if n.nodes.len() &gt; 0 {\n                    focused = self.node_iterator(n);\n                    if focused &gt; 0 {\n                        return focused;\n                    }\n                } else {\n                    if n.focused == true {\n                        focused = n.id as i32;\n                        return focused;\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n}\n\nfn main() {\n    let mut controller = Controller { focused: 0 };\n\n    controller.get_focused();\n\n    println!(\"{}\", controller.focused);\n}\n</code></pre>\n"}], "owner": {"reputation": 31, "user_id": 9092224, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/98ce4d39f585c6e5c69f0b3a97528dfc?s=128&d=identicon&r=PG&f=1", "display_name": "galvares", "link": "https://stackoverflow.com/users/9092224/galvares"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "answer_count": 1, "score": -4, "last_activity_date": 1513222321, "creation_date": 1513181970, "question_id": 47797743, "link": "https://stackoverflow.com/questions/47797743/how-to-correctly-iterate-all-records-of-a-multi-level-depth-structure-in-rust", "title": "How to correctly iterate all records of a multi-level depth structure in Rust?", "body": "<p>I would like to know how to iterate correctly in Rust all results contained in a data structure arranged like this:</p>\n\n<pre><code>struct Node {\n    id: i64,\n    nodes: Vec&lt;Node&gt;\n}\n</code></pre>\n\n<p>Where the records inserted in this structure have several levels of depth. Something like:</p>\n\n<pre><code>{id: 1, nodes: [\n    {id: 2, nodes: [ \n        {id: 3, nodes: []}, \n        {id: 4, nodes: []},\n        {id: 5, nodes: [\n            {id: 6, nodes: []},\n            {id: 7, nodes: [\n                {id: 8, nodes: []},\n                {id: 9, nodes: []}\n            ]}\n        ]}\n    ]}\n]};\n</code></pre>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 1, "last_activity_date": 1513181995, "last_edit_date": 1513181995, "creation_date": 1513181299, "answer_id": 47797518, "question_id": 47797167, "link": "https://stackoverflow.com/questions/47797167/overload-a-method-using-traits/47797518#47797518", "title": "Overload a method using traits", "body": "<p>IMO, the idiomatic way would be writing something like what you did, and then add the ergonomics with:</p>\n\n<pre><code>impl PdlDict {\n    fn update&lt;T: UpdatePdl&gt;(&amp;self, object_name: &amp;str, name: &amp;str, t: T) {\n        t.update(&amp;self, object_name, name)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 653, "favorite_count": 0, "closed_date": 1513182028, "accepted_answer_id": 47797518, "answer_count": 1, "score": 0, "last_activity_date": 1513533542, "creation_date": 1513180214, "last_edit_date": 1513533542, "question_id": 47797167, "link": "https://stackoverflow.com/questions/47797167/overload-a-method-using-traits", "closed_reason": "Duplicate", "title": "Overload a method using traits", "body": "<p>I'm struggling to simulate method overloading using traits in Rust where there are multiple types involved.</p>\n\n<p>In C++ I would write</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>struct PdlDict {\n     void update(const string&amp;,const string&amp;, double x) {...}\n     void update(const string&amp;,const string&amp;, const string x) {...}\n};\n</code></pre>\n\n<p>and call it</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code> PdlDict d;\n d.update(123.0);\n d.update(\"foo\");\n</code></pre>\n\n<p>In Rust for this <code>PdlDict</code> struct</p>\n\n<pre><code>pub struct PdlDict {\n    pub pdl_items: Vec&lt;PdlItem&gt;,\n}\nimpl PdlDict {\n    fn new() -&gt; PdlDict {\n        PdlDict {\n            pdl_items: Vec::new(),\n        }\n    }\n}\n</code></pre>\n\n<p>I implemented this trait which works</p>\n\n<pre><code>trait UpdatePdl {\n    fn update(&amp;self, item: &amp;PdlDict, object_name: &amp;str, name: &amp;str);\n}\nimpl&lt;'a&gt; UpdatePdl for &amp;'a str {\n    fn update(&amp;self, item: &amp;PdlDict, object_name: &amp;str, name: &amp;str) {}\n}\nimpl&lt;'a&gt; UpdatePdl for f32 {\n    fn update(&amp;self, item: &amp;PdlDict, object_name: &amp;str, name: &amp;str) {}\n}\n</code></pre>\n\n<p>Calling doesn't feel ergonomic as I have to pass the object that want to update as the first argument:</p>\n\n<pre><code>\"bar\".update(&amp;pdl, \"r\", \"result\");\n64.0.update(&amp;pdl, \"r\", \"result\");\n</code></pre>\n\n<p>What is the a more appropriate way to achieve the same semantics in a idiomatic Rust way?</p>\n\n<p>I suspect it's a combination of traits and templates but I can't think how to approach this.</p>\n\n<p><strong>Edit</strong>\nNote this question is not asking how to implement inheritance using traits. I've already done this in this example and it works fine. It's asking for an way of expressing inheritance in a style as given above</p>\n"}, {"tags": ["node.js", "rust", "webassembly"], "comments": [{"owner": {"reputation": 4190, "user_id": 2110623, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a5f1b5f95d5b3bb75901fb546cd1c52d?s=128&d=identicon&r=PG", "display_name": "aochagavia", "link": "https://stackoverflow.com/users/2110623/aochagavia"}, "edited": false, "score": 2, "creation_date": 1513174429, "post_id": 47794390, "comment_id": 82551074, "body": "WebAssembly only knows four types: <code>i32</code>, <code>i64</code>, <code>f32</code> and <code>f64</code>. You are passing a <code>String</code>, so that is of course not going to work. I suggest you check out <a href=\"https://www.hellorust.com/demos/sha1/index.html\" rel=\"nofollow noreferrer\">this example</a> of returning a String through pointers"}, {"owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "edited": false, "score": 0, "creation_date": 1513174712, "post_id": 47794390, "comment_id": 82551247, "body": "You&#39;re returning a type which is not &#39;native&#39; to WebAssembly. For how to return a string from Rust, see this question: <a href=\"https://stackoverflow.com/questions/47529643/how-to-return-a-string-or-similar-from-rust-in-webassembly\" title=\"how to return a string or similar from rust in webassembly\">stackoverflow.com/questions/47529643/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513176932, "post_id": 47794390, "comment_id": 82552786, "body": "Just saying: your function can be written: <code>(0..10).map(|x| x.to_string()).collect::&lt;Vec&lt;_&gt;&gt;().join(&quot;-&quot;)</code>"}], "owner": {"reputation": 346, "user_id": 364321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3f78cc690fb952fc09f9fa408c546b35?s=128&d=identicon&r=PG", "display_name": "Darktalker", "link": "https://stackoverflow.com/users/364321/darktalker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 63, "favorite_count": 0, "closed_date": 1513179998, "answer_count": 0, "score": 0, "last_activity_date": 1513180094, "creation_date": 1513172341, "last_edit_date": 1513180094, "question_id": 47794390, "link": "https://stackoverflow.com/questions/47794390/why-does-a-rust-function-returning-a-string-return-an-undefined-value-in-webasse", "closed_reason": "Duplicate", "title": "Why does a Rust function returning a String return an undefined value in WebAssembly?", "body": "<p>I tried to compile this Rust code into WebAssembly:</p>\n\n<pre><code>#[no_mangle]\npub fn rust_function() -&gt; String {\n    let mut a = vec![];\n    for x in 0..100 {\n        a.push(x);\n    }\n    return a.iter()\n        .map(|x| format!(\"{}\", x))\n        .collect::&lt;Vec&lt;_&gt;&gt;()\n        .join(\"-\");\n}\n</code></pre>\n\n<p>When I execute it with WebAssembly in NodeJS, it gives an undefined result:</p>\n\n<pre><code>const fs = require('fs');\nconst buf = fs.readFileSync('target/wasm32-unknown-unknown/release/hello_world.wasm');\nfunction toUint8Array(buf) {\n  var u = new Uint8Array(buf.length)\n  for (var i = 0; i &lt; buf.length; ++i) {\n    u[i] = buf[i]\n  }\n  return u\n}\n\nconst arrayBuffer = toUint8Array(buf);\nconst result = WebAssembly.instantiate(arrayBuffer);\n\nresult.then((res)=&gt;{\n  console.log(res.instance.exports.rust_function());\n})\n</code></pre>\n\n<p>It works well for other targets.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1877, "user_id": 138862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53c9c95983f35e5e61fa0ef0046ebfe?s=128&d=identicon&r=PG", "display_name": "Tedil", "link": "https://stackoverflow.com/users/138862/tedil"}, "edited": false, "score": 0, "creation_date": 1513173014, "post_id": 47794480, "comment_id": 82550118, "body": "Thanks, I didn&#39;t know about the for any/all syntax :)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1513173060, "post_id": 47794480, "comment_id": 82550157, "body": "There are issues with using the <i>same</i> lifetime at both type and method level; it causes some kind of &quot;anchoring&quot;. I&#39;ve seen the trick use to make a value immovable for example. In general, whenever this comes up it means there&#39;s a design problem."}, {"owner": {"reputation": 1877, "user_id": 138862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53c9c95983f35e5e61fa0ef0046ebfe?s=128&d=identicon&r=PG", "display_name": "Tedil", "link": "https://stackoverflow.com/users/138862/tedil"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1513173162, "post_id": 47794480, "comment_id": 82550224, "body": "@MatthieuM. I thought so, it seemed weird to me to restrict the API like that. But since I just started learning rust, I wasn&#39;t quite sure if I was the problem or the API was"}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 3, "last_activity_date": 1513172647, "creation_date": 1513172647, "answer_id": 47794480, "question_id": 47793968, "link": "https://stackoverflow.com/questions/47793968/why-does-the-compiler-infer-different-lifetimes-for-a-trait-and-its-implementati/47794480#47794480", "title": "Why does the compiler infer different lifetimes for a trait and its implementation?", "body": "<p>The boxed trait object needs to work with all lifetimes for the reference to <code>Smth</code>:</p>\n\n<pre><code>let some_foo: Box&lt;for&lt;'a&gt; Foo&lt;&amp;'a Smth&gt;&gt; = Box::new(Baz {});\n</code></pre>\n\n<p>Maybe someone else can explain why the compiler couldn't derive a working lifetime :)</p>\n"}], "owner": {"reputation": 1877, "user_id": 138862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53c9c95983f35e5e61fa0ef0046ebfe?s=128&d=identicon&r=PG", "display_name": "Tedil", "link": "https://stackoverflow.com/users/138862/tedil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 47794480, "answer_count": 1, "score": 4, "last_activity_date": 1513172647, "creation_date": 1513170960, "question_id": 47793968, "link": "https://stackoverflow.com/questions/47793968/why-does-the-compiler-infer-different-lifetimes-for-a-trait-and-its-implementati", "title": "Why does the compiler infer different lifetimes for a trait and its implementation?", "body": "<p>I'm currently using <a href=\"https://github.com/maciejkula/rustlearn\" rel=\"nofollow noreferrer\">rustlearn</a> to evaluate different classification models. The problem I ran into basically boils down to this:</p>\n\n<pre><code>trait Foo&lt;T&gt; {\n    fn bar(&amp;self, x: T);\n}\n\nstruct Baz;\n\nstruct Smth;\n\nimpl&lt;'a&gt; Foo&lt;&amp;'a Smth&gt; for Baz {\n    fn bar(&amp;self, x: &amp;Smth) {}\n}\n\nfn main() {\n    let some_foo: Box&lt;Baz&gt; = Box::new(Baz {});  // ok\n    // let some_foo: Box&lt;Foo&lt;&amp;Smth&gt;&gt; = Box::new(Baz {});  // not ok\n    let x = Smth {};\n    some_foo.bar(&amp;x);\n}\n</code></pre>\n\n<p>While it is possible to type <code>some_foo</code> as <code>Box&lt;Baz&gt;</code>, it is not possible to use <code>Box&lt;Foo&lt;&amp;Smth&gt;&gt;</code> instead, since it will cause the compiler to complain about <code>&amp;x</code> being dropped (at the end of <code>main</code>) while still borrowed (in <code>bar</code>). This is (I think) due to the fact that <code>x</code> is created <em>after</em> <code>some_foo</code>, hence <code>x</code> gets dropped <em>before</em> <code>some_foo</code>.\nMoving the creation of <code>x</code> such that it occurs before the creation of <code>some_foo</code> would be a solution; but let's assume that's not possible\u00b9.</p>\n\n<p>I still don't quite get why the code is valid for <code>some_foo: Box&lt;Baz&gt;</code> but not for <code>some_foo: Box&lt;Foo&lt;&amp;Smth&gt;&gt;</code>. What is it that the compiler cannot know (otherwise it wouldn't need to complain)?</p>\n\n<hr>\n\n<p>\u00b9 because you have a collection of models which you wish to crossvalidate , i.e. <code>model.fit(x, y)</code> where <code>x, y</code> are subsets of larger <code>(X, Y)</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1513165438, "post_id": 47792150, "comment_id": 82545357, "body": "Add <code>use std::iter::Iterator;</code> to the top of your file. The <code>Iterator</code> method needs to be in scope to use the <code>rev</code> method defined in it."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 1, "creation_date": 1513166735, "post_id": 47792150, "comment_id": 82546096, "body": "@EvilTak <code>Iterator</code> is in the prelude, so you never have to <code>use</code> it. The error message clearly says that the trait bounds are not satisfied. &quot;The following trait is implemented but not in scope&quot; is a different message."}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513167235, "post_id": 47792150, "comment_id": 82546396, "body": "@trentcl Ah, misread the error. Read &quot;the following trait...&quot; and instantly assumed an out-of-scope error :)"}], "answers": [{"comments": [{"owner": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "edited": false, "score": 0, "creation_date": 1513166377, "post_id": 47792332, "comment_id": 82545880, "body": "Thanks a lot for this quick answer! Just to understand the error message better, <code>std::string::String : std::iter::Iterator</code> is telling me the String doesn&#39;t implement the trait, I get that now. What does the second line, <code>str : std::iter::Iterator</code> mean? Is that just a reference to the file where the rev method is defined?"}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "edited": false, "score": 0, "creation_date": 1513167559, "post_id": 47792332, "comment_id": 82546581, "body": "Is there any way to avoid the creation of a <code>Vec</code> during <code>collect::&lt;Vec&lt;String&gt;&gt;</code>? (i.e. joining without temporary vectors)"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "edited": false, "score": 2, "creation_date": 1513167900, "post_id": 47792332, "comment_id": 82546807, "body": "@SquattingSlavInTracksuit since <code>String</code> implements <code>Deref&lt;Target=str&gt;</code>, it inherits all the methods of <code>str</code>. The error indicates that neither <code>String</code> nor the methods it inherits from <code>str</code> allow it to be treated like an <code>Iterator</code>."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "edited": false, "score": 0, "creation_date": 1513168045, "post_id": 47792332, "comment_id": 82546904, "body": "@VittorioRomeo perhaps someone with a stronger Iterator-foo will find a way :)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1513168572, "post_id": 47792332, "comment_id": 82547226, "body": "@ljedrz: It&#39;s doable with <code>fold</code> (see <a href=\"https://play.rust-lang.org/?gist=262563bc48d4afb5dddda9182aecec3f&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>) but still doesn&#39;t avoid the intermediate <code>String</code> in <code>map</code>, and is kinda uglyish."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "edited": false, "score": 2, "creation_date": 1513168939, "post_id": 47792332, "comment_id": 82547430, "body": "@VittorioRomeo The <code>itertools</code> crate <a href=\"https://docs.rs/itertools/0.7.4/itertools/trait.Itertools.html#method.join\" rel=\"nofollow noreferrer\">has a <code>join</code> method</a> that lets you <a href=\"https://play.rust-lang.org/?gist=316d478469879565933a669f654a9c67&amp;version=stable\" rel=\"nofollow noreferrer\">just drop the second <code>collect</code></a>. (Also note that <code>reverse_string</code> doesn&#39;t need <code>&amp;mut</code> anymore)"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 3, "last_activity_date": 1513166338, "last_edit_date": 1513166338, "creation_date": 1513165883, "answer_id": 47792332, "question_id": 47792150, "link": "https://stackoverflow.com/questions/47792150/how-to-mutate-iterator-elements-in-rust-to-reverse-substrings/47792332#47792332", "title": "How to mutate iterator elements in Rust to reverse substrings", "body": "<p>Here's my attempt:</p>\n\n<pre><code>fn reverse_string(input: &amp;mut str) -&gt; String {\n    input.split('/') // split the input string by '/'\n         .map(|x| x.chars().rev().collect::&lt;String&gt;()) // reverse the sections and collect them\n         .collect::&lt;Vec&lt;String&gt;&gt;() // collect the reversed sections into a vector of Strings\n         .join(\"/\") // join the strings so they are connected by '/' again\n}\n\nfn main() {\n    let mut s = String::from(\"abc/def/ghi\");\n\n    println!(\"{}\", reverse_string(&amp;mut s)); // cba/fed/ihg\n}\n</code></pre>\n\n<p>The main error in your code was that you tried to iterate a <code>String</code>, but it doesn't implement <code>Iterator</code>; it needs to be iterated over either its <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.chars\" rel=\"nofollow noreferrer\"><code>.chars()</code></a> or <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.bytes\" rel=\"nofollow noreferrer\"><code>.bytes()</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1513169631, "post_id": 47793521, "comment_id": 82547895, "body": "Notes: (1) I have not found a way to append an <code>Iterator&lt;Item = char&gt;</code> to a <code>String</code> and (2) I wonder if there&#39;s a way to generate an <code>Iterator</code> of <code>Iterator</code> and then flatten the hell out of it with a <code>flat_join</code> call or something."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1513169568, "creation_date": 1513169568, "answer_id": 47793521, "question_id": 47792150, "link": "https://stackoverflow.com/questions/47792150/how-to-mutate-iterator-elements-in-rust-to-reverse-substrings/47793521#47793521", "title": "How to mutate iterator elements in Rust to reverse substrings", "body": "<p>If you are learning iterators, I suggest first deciding <em>what</em> you want to do, before actually doing it.</p>\n\n<p>For example, here is an example with a single memory allocation:</p>\n\n<pre><code>fn reverse_string(input: &amp;str) -&gt; String {\n    let mut result = String::with_capacity(input.len());\n\n    for portion in input.split('/') {\n        if !result.is_empty() {\n            result.push('/');\n        }\n        for c in portion.chars().rev() {\n            result.push(c);\n        }\n    }\n\n    result\n}\n</code></pre>\n\n<p>Iterators generally are focused on <em>pure</em> methods which do not modify their environment. Unfortunately, this can lead to inefficiencies here as this would imply creating and dropping <code>String</code> left and right.</p>\n\n<p>Now, technically you <em>can</em> mutate the environment in <code>map</code> (it takes a <code>FnMut</code>), it's just frowned upon because by convention readers expect it to be pure.</p>\n\n<p>As a result, when you want to bring additional state in, <code>Iterator::fold</code> is the go-to method:</p>\n\n<pre><code>fn reverse_string(input: &amp;str) -&gt; String {\n    input\n        .split('/')\n        .fold(\n            String::with_capacity(input.len()),\n            |mut acc, portion| {\n                if !acc.is_empty() {\n                    acc.push('/');\n                }\n                for c in portion.chars().rev() {\n                    acc.push(c);\n                }\n                acc\n            }\n        )\n}\n</code></pre>\n\n<p>The first argument is an accumulator, which is passed to each invocation of the closure, which then return it. Finally, at the end of the <code>fold</code> call, the accumulator is then returned.</p>\n\n<p>This is equivalent to the first function, both in terms of logic and efficiency, but honestly here I kinda prefer the <code>for</code> version to be honest.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 3, "last_activity_date": 1513173677, "creation_date": 1513173677, "answer_id": 47794857, "question_id": 47792150, "link": "https://stackoverflow.com/questions/47792150/how-to-mutate-iterator-elements-in-rust-to-reverse-substrings/47794857#47794857", "title": "How to mutate iterator elements in Rust to reverse substrings", "body": "<p>Reversing by <code>.chars()</code> may be acceptable sometimes... but why did Ukraine become Australia?</p>\n\n<pre><code>println!(\"{}\", reverse_string(\"abc/d\ud83c\uddfa\ud83c\udde6f/ghi\")); // prints cba/f\ud83c\udde6\ud83c\uddfad/ihg\n</code></pre>\n\n<p>(Each flag emoji is made of two code points that spell a country code, and Australia's (AU) is the reverse of Ukraine's (UA). Strange things can also happen with non-emoji characters, like n\u0303.)</p>\n\n<p>Fortunately, this is easy to fix with the <code>unicode-segmentation</code> crate; let's just take <a href=\"https://stackoverflow.com/a/47793521/3650362\">Matthieu's solution</a>, replacing <code>chars()</code> with <code>graphemes(true)</code> and <code>push</code> with <code>push_str</code>:</p>\n\n<pre><code>extern crate unicode_segmentation;\nuse unicode_segmentation::UnicodeSegmentation;\n\nfn reverse_string(input: &amp;str) -&gt; String {\n    let mut result = String::with_capacity(input.len());\n\n    for portion in input.split('/') {\n        if !result.is_empty() {\n            result.push('/');\n        }\n        for g in portion.graphemes(true).rev() {\n            result.push_str(g);\n        }\n    }\n\n    result\n}\n</code></pre>\n\n<p>Now all our flags look right again (<a href=\"https://play.rust-lang.org/?gist=f5a71ad1f5c0c461babb367fde285b36&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>).</p>\n"}], "owner": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1126, "favorite_count": 1, "accepted_answer_id": 47793521, "answer_count": 3, "score": 5, "last_activity_date": 1513193211, "creation_date": 1513165273, "last_edit_date": 1513193211, "question_id": 47792150, "link": "https://stackoverflow.com/questions/47792150/how-to-mutate-iterator-elements-in-rust-to-reverse-substrings", "title": "How to mutate iterator elements in Rust to reverse substrings", "body": "<p>I am trying to make a function that will do the following:<br>\n<strong>input:</strong> a <code>String</code> of arbitrary length of the form \"abc/def/ghi\"<br>\n<strong>output:</strong> a <code>String</code> where all the substrings separated by \"/\" are reversed; in this example, the output would be \"cba/fed/ihg\".</p>\n\n<p>More than the function itself, I care about the general principle behind mutating an iterator generated by the <code>split()</code> function.</p>\n\n<p>Below is my best effort:</p>\n\n<pre><code>fn reverse_string(input: &amp;mut str) -&gt; String {\n    input\n        .to_string()\n        .split('/')\n        .map(move |x| x.to_string().rev())\n        .collect::&lt;String&gt;()\n}\n</code></pre>\n\n<p>The compiler complains that</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `rev` found for type `std::string::String` in the current scope\n --&gt; src/main.rs:5:37\n  |\n5 |         .map(move |x| x.to_string().rev())\n  |                                     ^^^\n  |\n  = note: the method `rev` exists but the following trait bounds were not satisfied:\n          `&amp;mut std::string::String : std::iter::Iterator`\n          `&amp;mut str : std::iter::Iterator`\n</code></pre>\n\n<p>What does that mean and how can I resolve this problem?</p>\n"}, {"tags": ["struct", "rust", "closures"], "answers": [{"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1513164186, "post_id": 47791799, "comment_id": 82544636, "body": "Even shorter: <code>wrap(1, |x| D {x})</code>"}, {"owner": {"reputation": 154, "user_id": 6261816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5ba543809a6a39a1fec992b8bf8721e8?s=128&d=identicon&r=PG&f=1", "display_name": "lukwol", "link": "https://stackoverflow.com/users/6261816/lukwol"}, "edited": false, "score": 0, "creation_date": 1513332697, "post_id": 47791799, "comment_id": 82622692, "body": "Apparently enum variants with named data like this <code>enum A&lt;T&gt; { B { x: T } }</code> needs to be initialized the same way."}], "tags": [], "owner": {"reputation": 868, "user_id": 4051512, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/8bd3beb8e3334400c9d43118b2206a62?s=128&d=identicon&r=PG&f=1", "display_name": "papagaga", "link": "https://stackoverflow.com/users/4051512/papagaga"}, "is_accepted": true, "score": 3, "last_activity_date": 1513180470, "last_edit_date": 1513180470, "creation_date": 1513164065, "answer_id": 47791799, "question_id": 47791312, "link": "https://stackoverflow.com/questions/47791312/initialize-struct-with-fields-using-closure/47791799#47791799", "title": "Initialize struct with fields using closure", "body": "<p>'structs without named fields' aren't exactly structs but tuple structs. Whereas the name of a tuple struct can be used the same way as a function name, it isn't true for a struct name. Using the struct name to instantiate one struct, you have to specify the name of the parameters:</p>\n\n<pre><code>println!(\"{:?}\", wrap(1, |i|(D { x: i }))); // doesn't sound good, but works\n</code></pre>\n"}], "owner": {"reputation": 154, "user_id": 6261816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5ba543809a6a39a1fec992b8bf8721e8?s=128&d=identicon&r=PG&f=1", "display_name": "lukwol", "link": "https://stackoverflow.com/users/6261816/lukwol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "accepted_answer_id": 47791799, "answer_count": 1, "score": 0, "last_activity_date": 1513180470, "creation_date": 1513162555, "last_edit_date": 1513180392, "question_id": 47791312, "link": "https://stackoverflow.com/questions/47791312/initialize-struct-with-fields-using-closure", "title": "Initialize struct with fields using closure", "body": "<p>It's possible to initialize a tuple struct <code>A</code> or enum <code>B</code> by passing the constructor as a closure parameter to the <code>wrap</code> function.</p>\n\n<p>This doesn't work for struct <code>D</code>, which has named field <code>x</code>:</p>\n\n<pre><code>fn wrap&lt;A, B, F&gt;(item: A, f: F) -&gt; B\nwhere\n    F: Fn(A) -&gt; B,\n{\n    f(item)\n}\n\n#[derive(Debug)]\nstruct A&lt;T&gt;(T);\n\n#[derive(Debug)]\nenum B&lt;T&gt; {\n    C(T),\n}\n\n#[derive(Debug)]\nstruct D&lt;T&gt; {\n    x: T,\n}\n\nfn main() {\n    println!(\"{:?}\", wrap(1, A)); // prints A(1)\n    println!(\"{:?}\", wrap(1, B::C)); // prints C(1)\n    // println!(\"{:?}\", wrap(1, D)); // sounds good, doesn\u2019t work\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=f6ff6dea234ea5f7936f2b5f14e7a241&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Is it possible to somehow make it work for structs with named fields?</p>\n"}, {"tags": ["rust", "type-conversion", "numbers"], "answers": [{"comments": [{"owner": {"reputation": 1983, "user_id": 939280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/luAYh.jpg?s=128&g=1", "display_name": "Ka\u011fan Kayal", "link": "https://stackoverflow.com/users/939280/ka%c4%9fan-kayal"}, "edited": false, "score": 2, "creation_date": 1513150372, "post_id": 47786517, "comment_id": 82536355, "body": "With this understanding, I tried <code>println!(&quot;{}&quot;, 500u16 as u8);</code> and get 244. I assume &quot;safe&quot; means here just the fact that we cannot mess with the memory, but we still might end up with a completly wrong number. Since I hesitate to call this &quot;safe&quot; from the math point of view, I suggest to replace &quot;casts are purely &quot;safe&quot;&quot; with &quot;casts are only &quot;memory safe&quot;, but might change the value&quot; or so in your answer. This way, a future reader would have a stronger warning about potential bugs they can still create and would avoid a false sense of \u201csafety\u201d."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1513152331, "post_id": 47786517, "comment_id": 82537310, "body": "<a href=\"https://doc.rust-lang.org/stable/reference/unsafety.html\" rel=\"nofollow noreferrer\">rust reference: Unsafety</a>: &quot;Unsafe operations are those that potentially violate the memory-safety guarantees of Rust&#39;s static semantics.&quot;"}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 1, "creation_date": 1513154369, "post_id": 47786517, "comment_id": 82538369, "body": "@kazemakase thank you, that is what I want to say. I&#39;ll edit the answer."}], "tags": [], "owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "is_accepted": false, "score": 18, "last_activity_date": 1513154434, "last_edit_date": 1513154434, "creation_date": 1513144868, "answer_id": 47786517, "question_id": 47786322, "link": "https://stackoverflow.com/questions/47786322/why-is-type-conversion-from-u64-to-usize-allowed-using-as-but-not-from/47786517#47786517", "title": "Why is type conversion from u64 to usize allowed using `as` but not `From`?", "body": "<p><code>as</code> casts are fundamentally different from <code>From</code> conversions. <code>From</code> conversions are \"<strong><em>simple</em></strong> and safe\" whereas <code>as</code> casts are purely \"safe\". When considering numeric types, <code>From</code> conversions exist only when the output is guaranteed to be the <em>same</em>, i.e. there is no loss of information (no truncation or flooring or loss of precision). <code>as</code> casts, however, do not have this limitation.</p>\n\n<p>Quoting the docs, </p>\n\n<blockquote>\n  <p>The size of [<code>usize</code>] is \"how many bytes it takes to reference any location in memory. For example, on a 32 bit target, this is 4 bytes and on a 64 bit target, this is 8 bytes.\" </p>\n</blockquote>\n\n<p>Since the size depends on the target architecture and cannot be determined before compilation, there is no guarantee that a <code>From</code> conversion between a numeric type and <code>usize</code> is possible. An <code>as</code> cast, however, will always operate by the rules listed <a href=\"https://doc.rust-lang.org/book/first-edition/casting-between-types.html#numeric-casts\" rel=\"noreferrer\">here</a>.</p>\n\n<p>For instance, on a 32-bit system, <code>usize</code> is equivalent to <code>u32</code>. Since a <code>usize</code> is smaller than a <code>u64</code>, there can be loss of information (truncation) when converting a <code>u64</code> into a <code>usize</code> and hence a <code>From</code> conversion cannot exist. However, the size of a <code>usize</code> is always guaranteed to be 8 bits or greater and a <code>u8</code> to <code>usize</code> <code>From</code> conversion will always exist.</p>\n"}, {"comments": [{"owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "edited": false, "score": 3, "creation_date": 1528554837, "post_id": 47797347, "comment_id": 88557575, "body": "But surprisingly you can&#39;t (currently) use <code>TryFrom</code> when going the other way: <a href=\"https://github.com/rust-lang/rust/issues/49415\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/49415</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1555010800, "last_edit_date": 1555010800, "creation_date": 1513180787, "answer_id": 47797347, "question_id": 47786322, "link": "https://stackoverflow.com/questions/47786322/why-is-type-conversion-from-u64-to-usize-allowed-using-as-but-not-from/47797347#47797347", "title": "Why is type conversion from u64 to usize allowed using `as` but not `From`?", "body": "<p>As already mentioned, converting from a 64-bit value to a <code>usize</code> might cause truncation; you might lose data when a <code>usize</code> is 16 or 32 bits.</p>\n\n<p>Fallable conversions are covered by the <a href=\"https://doc.rust-lang.org/std/convert/trait.TryFrom.html\" rel=\"noreferrer\"><code>TryFrom</code> trait</a>, available in Rust 1.34:</p>\n\n<pre><code>use std::convert::TryFrom;\n\nfn main() {\n    let a: u64 = 5;\n    let b = a as usize;\n    let b = usize::try_from(a);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/50437732/155423\">How do I convert a usize to a u32 using TryFrom?</a></li>\n</ul>\n"}], "owner": {"reputation": 1983, "user_id": 939280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/luAYh.jpg?s=128&g=1", "display_name": "Ka\u011fan Kayal", "link": "https://stackoverflow.com/users/939280/ka%c4%9fan-kayal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11010, "favorite_count": 1, "answer_count": 2, "score": 22, "last_activity_date": 1555718256, "creation_date": 1513143937, "last_edit_date": 1555718256, "question_id": 47786322, "link": "https://stackoverflow.com/questions/47786322/why-is-type-conversion-from-u64-to-usize-allowed-using-as-but-not-from", "title": "Why is type conversion from u64 to usize allowed using `as` but not `From`?", "body": "<p>The first conversion using 'as' compiles, but the second one using the 'From' trait does not:</p>\n\n<pre><code>fn main() {\n    let a: u64 = 5;\n    let b = a as usize;\n    let b = usize::from(a);\n}\n</code></pre>\n\n<p>Using Rust 1.34.0, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `usize: std::convert::From&lt;u64&gt;` is not satisfied\n --&gt; src/main.rs:4:13\n  |\n4 |     let b = usize::from(a);\n  |             ^^^^^^^^^^^ the trait `std::convert::From&lt;u64&gt;` is not implemented for `usize`\n  |\n  = help: the following implementations were found:\n            &lt;usize as std::convert::From&lt;bool&gt;&gt;\n            &lt;usize as std::convert::From&lt;std::num::NonZeroUsize&gt;&gt;\n            &lt;usize as std::convert::From&lt;u16&gt;&gt;\n            &lt;usize as std::convert::From&lt;u8&gt;&gt;\n  = note: required by `std::convert::From::from`\n</code></pre>\n\n<p>When I replace <code>u64</code> with <code>u8</code>, there is no more error. From the error message, I understand that the <code>From</code> trait is implemented only for <code>u8</code>, but not for the other integer types.</p>\n\n<p>If there is a good reason for that, then why shouldn't the conversion using 'as' should also fail to compile?</p>\n"}, {"tags": ["rust", "serde", "toml"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513141752, "post_id": 47785720, "comment_id": 82532881, "body": "<i>but I did not succeed</i> \u2014 why did you not show how you didn&#39;t succeed? Does the code not compile? Does the code not work as expected? What happened? What TOML file did you try to decode?"}, {"owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513142328, "post_id": 47785720, "comment_id": 82533060, "body": "Thanks for your comment. Let me a minute to update the question with my attempt."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1513144040, "post_id": 47785720, "comment_id": 82533690, "body": "Serde itself has <a href=\"https://github.com/serde-rs/serde/blob/master/serde/src/de/mod.rs#L262\" rel=\"nofollow noreferrer\">some examples of what is expected here</a>. Specifically it looks like you want to use <code>Error::custom(....)</code>."}], "answers": [{"comments": [{"owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "edited": false, "score": 0, "creation_date": 1513168409, "post_id": 47788031, "comment_id": 82547119, "body": "the crate <i>config</i> is necessary to use config::Config as show in Settings::new(). It&#39;s not possible to reproduce in play-rust since it doesn&#39;t have crate config, but the code doesn&#39;t need any change to reproduce the error. What issues did you have to fix?"}, {"owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "edited": false, "score": 0, "creation_date": 1513174882, "post_id": 47788031, "comment_id": 82551361, "body": "@oli_obk_ker I really appreciate your advice. I got lost playing with the lifetime and passing the deserializer by reference and in the end the solution was quite simple. Also IDEA had played tricks on me about the visibility of <code>serde :: de :: Error :: custom</code>. Anyway, thank you for your time! I&#39;ll post the solution to share it with anyone who has the same problem."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "edited": false, "score": 1, "creation_date": 1513243583, "post_id": 47788031, "comment_id": 82580812, "body": "Reproduction in the playground: <a href=\"https://play.rust-lang.org/?gist=ca29c20db012f5688204a62631b5d218&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> The <code>new</code> method is not necessary for your repro ;)"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 3, "last_activity_date": 1513151675, "creation_date": 1513151675, "answer_id": 47788031, "question_id": 47785720, "link": "https://stackoverflow.com/questions/47785720/deserialize-toml-string-to-enum-using-config-rs/47788031#47788031", "title": "Deserialize TOML string to enum using config-rs", "body": "<p>First of all, your example does not compile far enough to get to the errors you are describing. Please take care to produce an <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> next time. Bonus points for getting it to work on <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">https://play.rust-lang.org</a> (which is possible, the <code>extern crate config</code> is entirely unnecessary in your example).</p>\n\n<p>After fixing up all the compilation issues, your first error is simply fixed by  changing the function API to match the one suggested <a href=\"https://serde.rs/field-attrs.html#serdedeserializewith--path\" rel=\"nofollow noreferrer\">in the serde docs</a></p>\n\n<pre><code>-fn deserialize_with&lt;     D&gt;(deserializer: D) -&gt; Result&lt;RotationPolicyType, D::Error&gt; where D: Deserializer\n+fn deserialize_with&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;RotationPolicyType, D::Error&gt; where D: Deserializer&lt;'de&gt;\n</code></pre>\n\n<p>The error tried to help you there. It told you that <code>Deserializer</code> is missing a lifetime parameter.</p>\n\n<p>The second function is telling you that <code>D</code> has no associated type <code>Error</code>. Which it can only have if <code>D</code> would implement <code>Deserializer&lt;'de&gt;</code>. But you specified that <code>&amp;'de mut D</code> implements <code>Deserializer&lt;'de&gt;</code>. Finding the solution to this problem is left as an exercise to the reader.</p>\n"}, {"tags": [], "owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "is_accepted": false, "score": 1, "last_activity_date": 1513175498, "creation_date": 1513175498, "answer_id": 47795476, "question_id": 47785720, "link": "https://stackoverflow.com/questions/47785720/deserialize-toml-string-to-enum-using-config-rs/47795476#47795476", "title": "Deserialize TOML string to enum using config-rs", "body": "<p>Following the advice of @oli-obk-ker the solution was quite simple:</p>\n\n<pre><code>use std::env;\nuse config::{Config, File, Environment};\nuse std::path::PathBuf;\nuse serde;\nuse serde::de::Deserializer;\nuse serde::Deserialize;\n\npub trait DeserializeWith: Sized {\n    fn deserialize_with&lt;'de, D&gt;(de: D) -&gt; Result&lt;Self, D::Error&gt;\n        where D: Deserializer&lt;'de&gt;;\n}\n\n#[derive(Debug, Deserialize, Eq, PartialEq, Clone)]\npub enum RotationPolicyType {\n    ByDuration,\n    ByDay\n}\n\nimpl DeserializeWith for RotationPolicyType {\n    fn deserialize_with&lt;'de, D&gt;(de: D) -&gt; Result&lt;Self, D::Error&gt; where D: Deserializer&lt;'de&gt; {\n        let s = String::deserialize(de)?;\n\n        match s.as_ref() {\n            \"ByDuration\" =&gt; Ok(RotationPolicyType::ByDuration),\n            \"ByDay\" =&gt; Ok(RotationPolicyType::ByDay),\n            _ =&gt; Err(serde::de::Error::custom(\"error trying to deserialize rotation policy config\"))\n        }\n    }\n}\n\n#[derive(Debug, Deserialize, Clone)]\npub struct FileConfig {\n    pub rotations: i32,\n    #[serde(deserialize_with=\"RotationPolicyType::deserialize_with\")]\n    pub rotation_policy_type: RotationPolicyType,\n}\n\n#[derive(Debug, Deserialize, Clone)]\npub struct Settings {\n    pub threads: i32,\n    pub file_writer: FileConfig,\n}\n\nimpl Settings {\n    pub fn new() -&gt; Self {\n        let mut s = Config::new();\n        s.merge(File::with_name(\"config/default\")).unwrap();\n        s.merge(File::with_name(\"config/local\").required(false)).unwrap();\n        s.merge(Environment::with_prefix(\"app\")).unwrap();\n        s.deserialize().unwrap()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1070, "favorite_count": 0, "accepted_answer_id": 47788031, "answer_count": 2, "score": 3, "last_activity_date": 1538858928, "creation_date": 1513140917, "last_edit_date": 1538858928, "question_id": 47785720, "link": "https://stackoverflow.com/questions/47785720/deserialize-toml-string-to-enum-using-config-rs", "title": "Deserialize TOML string to enum using config-rs", "body": "<p>I'm using config-rs to load the configuration from a TOML file and I want to deserialize a string to an enum. I tried to solve it using the <code>deserialize_with</code> feature of serde_derive but I don't know how to return a suitable Error to satisfy the function signature. How can I achieve it?</p>\n\n<p>My dependencies:</p>\n\n<pre><code>config = \"0.7\"\nserde_derive = \"1.0\"\nserde = \"1.0\"\ntoml = \"0.4\"\n</code></pre>\n\n<p>Example code where it's intended to deserialize the enum <code>RotationPolicyType</code>:</p>\n\n<pre><code>extern crate config;\nextern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate toml;\n\nuse std::env;\nuse config::{Config, Environment, File};\nuse std::path::PathBuf;\nuse serde;\nuse serde::de::Deserializer;\nuse serde::Deserialize;\n\n#[derive(Debug, Deserialize, Clone)]\npub enum RotationPolicyType {\n    ByDuration,\n    ByDay,\n}\n\n#[derive(Debug, Deserialize, Clone)]\npub struct FileConfig {\n    pub rotations: i32,\n    #[serde(deserialize_with=\"deserialize_with\")]\n    pub rotation_policy_type: RotationPolicyType,\n}\n\n#[derive(Debug, Deserialize, Clone)]\npub struct Settings {\n    pub threads: usize,\n    pub file_writer: FileConfig,\n}\n\nimpl Settings {\n    pub fn new() -&gt; Self {\n        let mut s = Config::new();\n        s.merge(File::with_name(\"config/default\")).unwrap();\n        s.merge(File::with_name(\"config/local\").required(false))\n            .unwrap();\n        s.merge(Environment::with_prefix(\"app\")).unwrap();\n        s.deserialize().unwrap()\n    }\n}\n\n\nfn deserialize_with&lt;D&gt;(deserializer: D) -&gt; Result&lt;RotationPolicyType, D::Error&gt; where D: Deserializer {\n    let s = String::deserialize(deserializer)?;\n\n    match s.as_ref() {\n        \"ByDuration\" =&gt; Ok(RotationPolicyType::ByDuration),\n        \"ByDay\" =&gt; Ok(RotationPolicyType::ByDay),\n        _ =&gt; Err(serde::de::Error::custom(\"error trying to deserialize rotation policy config\"))\n    }\n}\n\n\n\nfn deserialize_with2&lt;'de, D&gt;(deserializer: &amp;'de mut D) -&gt; Result&lt;RotationPolicyType, D::Error&gt; where &amp;'de mut D: Deserializer&lt;'de&gt; {\n    let s = String::deserialize(deserializer)?;\n\n    match s.as_ref() {\n        \"ByDuration\" =&gt; Ok(RotationPolicyType::ByDuration),\n        \"ByDay\" =&gt; Ok(RotationPolicyType::ByDay),\n        _ =&gt; Err(serde::de::Error::custom(\"error trying to deserialize rotation policy config\"))\n    }\n}\n</code></pre>\n\n<p>Compilation error with <em>deserialize_with</em>:</p>\n\n<pre><code>error[E0106]: missing lifetime specifier\n  --&gt; src/settings.rs:30:94\n   |\n30 |     fn deserialize_with&lt;D&gt;(deserializer: D) -&gt; Result&lt;RotationPolicyType, D::Error&gt; where D: Deserializer {\n   |                                                                                              ^^^^^^^^^^^^ expected lifetime parameter\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Compilation error with <em>deserialize_with2</em>:</p>\n\n<pre><code>error[E0220]: associated type `Error` not found for `D`\n  --&gt; src/settings.rs:42:90\n   |\n42 |     fn deserialize_with2&lt;'de, D&gt;(deserializer: &amp;'de mut D) -&gt; Result&lt;RotationPolicyType, D::Error&gt; where &amp;'de mut D: Deserializer&lt;'de&gt; {\n   |                                                                                          ^^^^^^^^ associated type `Error` not found\n\nerror: aborting due to previous error\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1513140504, "post_id": 47784458, "comment_id": 82532563, "body": "Instead of directly storing a reference to a node, store them by id (or <code>name</code>, in this case) and look them up from <code>np.map</code> when needed."}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "reply_to_user": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1513140598, "post_id": 47784458, "comment_id": 82532585, "body": "@EvilTak Thanks for the suggestion. While that would work, I&#39;m looking for something that works with the borrow-checker rather than around it."}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1513141196, "post_id": 47784458, "comment_id": 82532733, "body": "Not sure why you would want that, when an easier solution (except maybe <code>Rc</code>s) exists. Why fight the borrow checker (or work with it) when you don&#39;t <i>need</i> to? The borrow checker is simply a safety mechanism to prevent references outliving content. You would only want to work with the borrow checker if you <i>have</i> to use borrows."}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "reply_to_user": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1513143707, "post_id": 47784458, "comment_id": 82533552, "body": "@EvilTak Because at some point I will need to store something in two places, it&#39;s a common thing in programming, and I won&#39;t be able to work around it. I&#39;d rather learn how to do it now while I&#39;m messing around with puzzles than later under time pressure on complicated production code."}, {"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1513144001, "post_id": 47784458, "comment_id": 82533663, "body": "Ah, then the best way is <code>Rc</code> or <code>Arc</code> combined with a <code>Cell</code> if you need mutability."}], "answers": [{"comments": [{"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1513134014, "post_id": 47784641, "comment_id": 82531080, "body": "Thank you for your answer. I&#39;ve updated the question to illustrate why copying is not an option, sorry for not having that in the first place. Using <code>&amp;</code> on the iteration worked, thank you for the explanation. And yes, I am using AoC to learn idiomatic Rust. Hmm... reference counting would work, but it seems like working around the borrower instead of with it? I&#39;ll give it a shot anyway."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 1, "creation_date": 1513135228, "post_id": 47784641, "comment_id": 82531350, "body": "&quot;copying is not an option&quot; - I imagine you&#39;re referring to my use of <code>clone()</code> in the code? If you re-read my answer I give you an explanation of whats happening behind the scenes here. The only thing that is cloned is the <code>Rc</code> instance. Behind the scenes, the <code>Rc</code> copies the pointer to what you&#39;ve wrapped (which will be your child nodes). There is no copying/cloning of the <code>Node</code> instances here... just the <code>Rc</code> instances. Another thing to be aware of is that &quot;copy&quot; and &quot;clone&quot; individually mean specific things in Rust and confusing the two can often lead to subtle bugs :)"}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1513135447, "post_id": 47784641, "comment_id": 82531410, "body": "I get how Rc works. Perl uses reference counting, and I do a lot of Perl. I just wanted to make you aware of the update to the problem as I saw you were actively editing your answer. Could this be solved instead with lifetimes? I&#39;m trying to understand them."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 1, "creation_date": 1513135881, "post_id": 47784641, "comment_id": 82531524, "body": "Sorry about that, my edit was trying to emphasise the new instance of <code>Rc</code> versus implying a big clone/copy operation. &quot;Could this be solved instead with lifetimes?&quot; - <a href=\"https://play.rust-lang.org/?gist=caed33057205018a8d774c2481320c1f&amp;version=stable\" rel=\"nofollow noreferrer\">well yes, it can if you want</a>, however it requires restructuring of your code and I often try to avoid that when answering questions because the MCVE&#39;s people create generally strip away a lot of the surrounding code. Lifetimes and their use in Rust , require a bit more context around the actual code in use and so applying them can cause confusion"}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1513139312, "post_id": 47784641, "comment_id": 82532274, "body": "Yes, that was what I&#39;m looking for, thank you! I&#39;ll go make sense of it. <a href=\"https://github.com/schwern/adventofcode.rust/tree/324ed2c7b8d0fd642b973bf40a930054789d9739/2017/day07/src\" rel=\"nofollow noreferrer\">Here&#39;s the real code for reference</a>. Any comments are appreciated."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": false, "score": 4, "last_activity_date": 1513136631, "last_edit_date": 1513136631, "creation_date": 1513132402, "answer_id": 47784641, "question_id": 47784458, "link": "https://stackoverflow.com/questions/47784458/how-do-i-store-a-struct-in-two-places/47784641#47784641", "title": "How do I store a struct in two places?", "body": "<p>One option is unsafe code ... but I would suggest avoiding that if you're using the Advent of Code to learn idiomatic Rust and not just drop all the safety its trying to give you.</p>\n\n<p>Another option is to reference count the <code>Node</code> instances so that the borrow checker is happy and the compiler knows how to clean things up. The <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>std::rc::Rc</code></a> type does this for you ... and essentially <a href=\"https://doc.rust-lang.org/src/alloc/rc.rs.html#869-872\" rel=\"nofollow noreferrer\">every call to <code>clone()</code> just increments a reference count</a> and returns a new <code>Rc</code> instance. Then every time an object is dropped, the <code>Drop</code> implementation just decrements the reference count.</p>\n\n<p>As for the iteration .. <code>for x in y</code> is syntactic sugar for <code>for x in y.into_iter()</code>. This is attempting to move the contents of <code>children</code> out of <code>node</code> (notice in <a href=\"https://doc.rust-lang.org/1.12.1/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\">the <code>IntoIterator</code> trait</a>, <code>into_iter(self)</code> takes ownership of <code>self</code>). To rectify this, you can ask for a reference instead when iterating, using <code>for x in &amp;y</code>. This essentially becomes <code>for x in y.iter()</code>, which does not move the contents.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=2d0ac1780c9fb79fc32f69718fa96093&amp;version=stable\" rel=\"nofollow noreferrer\">Here are these suggestions in action</a>.</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::rc::Rc;\n\nstruct NodeParser {\n    map: HashMap&lt;String, Rc&lt;Node&gt;&gt;,\n    root: Option&lt;Node&gt;,\n}\n\n#[derive(Debug)]\nstruct Node {\n    name: String,\n    children: Option&lt;Vec&lt;Rc&lt;Node&gt;&gt;&gt;,\n}\n\nfn main() {\n    let mut np = NodeParser{\n        map: HashMap::new(),\n        root: None,\n    };\n\n    let a = Rc::new(Node{ name: \"a\".to_string(), children: None });\n    np.map.insert( a.name.clone(), a.clone() );\n\n    let b = Rc::new(Node{ name: \"b\".to_string(), children: None });\n    np.map.insert( b.name.clone(), b.clone() );\n\n    let c = Rc::new(Node{\n        name: \"c\".to_string(),\n        children: Some(vec![a, b])\n    });\n    np.map.insert( c.name.clone(), c.clone() );\n\n    let node = np.map.get(\"c\").unwrap();\n    for child in &amp;node.children {\n        println!(\"{:?}\", child);\n    }\n}\n</code></pre>\n\n<p>EDIT: I will expand on my comment here. <a href=\"https://play.rust-lang.org/?gist=caed33057205018a8d774c2481320c1f&amp;version=stable\" rel=\"nofollow noreferrer\">You can use lifetimes here too if you want</a>, but I'm concerned that the lifetime solution will work against the MCVE and won't work once applied to <em>the actual problem</em> the OP (not just of this question... others as well) actually has. Lifetimes are tricky in Rust and small things like re-ordering the instantiation of variables to allow the lifetime solution can throw people off. My concern being they will run into lifetime issues and therefore the answers won't be appropriate to their actual situation even if it works for the MCVE. Maybe I overthink that though..</p>\n"}], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1513141372, "creation_date": 1513130912, "last_edit_date": 1513141372, "question_id": 47784458, "link": "https://stackoverflow.com/questions/47784458/how-do-i-store-a-struct-in-two-places", "title": "How do I store a struct in two places?", "body": "<p>I'm doing Advent Of Code Day 7 in Rust. I have to parse a tree out of order like so:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a(10)\nc(5) -&gt; a, b\nb(20)\n</code></pre>\n\n<p>That says <code>c</code> is the root with <code>a</code> and <code>b</code> as its children.</p>\n\n<p>I handle this by parsing each line, making an object, and storing it in a hash by name. If it shows up later as a child, like <code>a</code>, I can use that hash to lookup the object and apply it as a child. If it shows up as a child before being defined, like <code>b</code>, I can create a partial version and update it via the hash.  The above would be something like:</p>\n\n<pre><code>let mut np = NodeParser{\n    map: HashMap::new(),\n    root: None,\n};\n\n{\n    // This would be the result of parsing \"a(10)\".\n    {\n        let a = Node{\n            name: \"a\".to_string(),\n            weight: Some(10),\n            children: None\n        };\n        np.map.insert( a.name.clone(), a );\n    }\n\n    // This is the result of parsing \"c(5) -&gt; a, b\".\n    // Note that it creates 'b' with incomplete data.\n    {\n        let b = Node{\n            name: \"b\".to_string(),\n            weight: None,\n            children: None\n        };\n        np.map.insert(\"b\".to_string(), b);\n\n        let c = Node{\n            name: \"c\".to_string(),\n            weight: Some(5),\n            children: Some(vec![\n                *np.map.get(\"a\").unwrap(),\n//              ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n\n                *np.map.get(\"b\").unwrap()\n//              ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n            ])\n        };\n        np.map.insert( c.name.clone(), c );\n    }\n\n    // Parsing \"b(20)\", it's already seen b, so it updates it.\n    // This also updates the entry in c.children. It avoids\n    // having to search all nodes for any with b as a child.\n    {\n        let mut b = np.map.get_mut( \"b\" ).unwrap();\n        b.weight = Some(20);\n    }\n}\n</code></pre>\n\n<p>I might want to look up a node and look at its children.</p>\n\n<pre><code>// And if I wanted to look at the children of c...\nlet node = np.map.get(\"c\").unwrap();\nfor child in node.children.unwrap() {\n//           ^^^^ cannot move out of borrowed content\n    println!(\"{:?}\", child);\n}\n</code></pre>\n\n<p>Rust does not like this. It doesn't like that both <code>NodeParser.map</code> and <code>Node.children</code> own a node.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; /Users/schwern/tmp/test.rs:46:21\n   |\n46 |                     *np.map.get(\"a\").unwrap(),\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; /Users/schwern/tmp/test.rs:49:21\n   |\n49 |                     *np.map.get(\"b\").unwrap()\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>It doesn't like that the <code>for</code> loop is trying to borrow the node to iterate because I've already borrowed the node from the <code>NodeParser</code> that owns it.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; /Users/schwern/tmp/test.rs:68:18\n   |\n68 |     for child in node.children.unwrap() {\n   |                  ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I think I understand what I'm doing wrong, but I'm not sure how to make it right.</p>\n\n<p>How should I construct this to make the borrower happy? Because of the way <code>NodeParser.map</code> and <code>Node.children</code> must be linked, copying is not an option.</p>\n\n<p><a href=\"https://gist.github.com/schwern/6168d8df293360dce9adc9699e6e098e\" rel=\"nofollow noreferrer\">Here is the code to test with</a>. In the real code both <code>Node</code> and <code>NodeParser</code> have implementations and methods.</p>\n"}, {"tags": ["javascript", "pointers", "rust", "shared-memory", "webassembly"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1513106217, "post_id": 47779600, "comment_id": 82521115, "body": "<i>using <code>no_std</code></i> \u2014 The correct way is to <a href=\"https://play.integer32.com/?gist=283ea95febab14842fe0ee0318a413d3&amp;version=nightly\" rel=\"nofollow noreferrer\">generate a dynamic library</a>. I&#39;m not sure why that information has yet to be picked up by the community."}, {"owner": {"reputation": 7934, "user_id": 484342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ec93a90077d90d75dfd5e53ef968af62?s=128&d=identicon&r=PG", "display_name": "Samo", "link": "https://stackoverflow.com/users/484342/samo"}, "edited": false, "score": 0, "creation_date": 1513108524, "post_id": 47779600, "comment_id": 82522332, "body": "Ah, these both look promising, thanks! Can I assume that some of the code in this example is irrelevent? e.g. <code>eh_personality()</code>? :)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 7934, "user_id": 484342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ec93a90077d90d75dfd5e53ef968af62?s=128&d=identicon&r=PG", "display_name": "Samo", "link": "https://stackoverflow.com/users/484342/samo"}, "edited": false, "score": 0, "creation_date": 1513109289, "post_id": 47779600, "comment_id": 82522747, "body": "@Samo If you use <code>no_std</code>, you need to provide some symbols otherwise provided by the standard library for the code to link, including the ones you see in the code here.  I don&#39;t know what items exactly are needed; it depends on your code, but you can simply let the compiler tell you."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513111663, "post_id": 47779600, "comment_id": 82523895, "body": "@Shepmaster <code>cdylib</code> looks fine in the playground, but on my local system I still need <code>no_std</code> (and <code>panic_fmt</code>) to get rid of a lot of crap.  Thanks for the hint though, wanted to try this for some time and never got around to it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513111816, "post_id": 47779600, "comment_id": 82523980, "body": "@Stefan You also need to use <a href=\"https://github.com/alexcrichton/wasm-gc\" rel=\"nofollow noreferrer\">wasm-gc</a>,  which <a href=\"https://github.com/integer32llc/rust-playground/blob/master/compiler/base/cargo-wasm#L41-L42\" rel=\"nofollow noreferrer\">the playground uses</a>."}, {"owner": {"reputation": 2150, "user_id": 460138, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/5b73cb6573d6fccb3529ac558ba1ce36?s=128&d=identicon&r=PG", "display_name": "starwed", "link": "https://stackoverflow.com/users/460138/starwed"}, "edited": false, "score": 0, "creation_date": 1524942038, "post_id": 47779600, "comment_id": 87176020, "body": "Since <a href=\"https://github.com/rust-lang/rust/pull/48125\" rel=\"nofollow noreferrer\">wasm_import_memory was removed</a> this example no longer compiles."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 2150, "user_id": 460138, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/5b73cb6573d6fccb3529ac558ba1ce36?s=128&d=identicon&r=PG", "display_name": "starwed", "link": "https://stackoverflow.com/users/460138/starwed"}, "edited": false, "score": 1, "creation_date": 1524957287, "post_id": 47779600, "comment_id": 87179750, "body": "@starwed should be fixed now in the answer... although such things are expected to happen with unstable features :) it also seems wasm-gc isn&#39;t needed anymore (at least not for this small example), cdylib and lto are doing a good job."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 4, "last_activity_date": 1524957167, "last_edit_date": 1524957167, "creation_date": 1513104602, "answer_id": 47779600, "question_id": 47778074, "link": "https://stackoverflow.com/questions/47778074/how-to-resolve-function-pointers-in-rust-webassembly/47779600#47779600", "title": "How to resolve function pointers in Rust &amp; WebAssembly", "body": "<p>It seems so far the WebAssembly backend in Rust doesn't provide a way import or export the (function) <code>table</code>; the index <code>f</code> is just fine, but <code>imports.env.table</code> is not the same table used by the <code>wasm</code> instance (i.e. empty).</p>\n\n<p>Also you should use <code>extern fn</code> in FFI.</p>\n\n<p>If you want to take a look under the hood the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Playground</a> provides some nice WebAssembly optimizations, check out this example:</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0b38378e1dd9877ad32ac13af71739b2&amp;version=nightly&amp;mode=release\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>#![crate_type = \"cdylib\"]\n#![feature(link_args)]\n#![allow(unused_attributes)] // link_args actually is used\n#![link_args = \"--import-memory\"]\n\nextern \"C\" {\n    fn peekaboo(f: extern \"C\" fn(u32) -&gt; u32);\n}\n\n#[no_mangle]\npub fn run() {\n    extern \"C\" fn plus_one(x: u32) -&gt; u32 {\n        x + 1\n    }\n\n    unsafe {\n        peekaboo(plus_one);\n    }\n}\n</code></pre>\n\n<p>The result should look like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(module\n  (type $t0 (func))\n  (type $t1 (func (param i32) (result i32)))\n  (type $t2 (func (param i32)))\n  (import \"env\" \"peekaboo\" (func $peekaboo (type $t2)))\n  (import \"env\" \"memory\" (memory $env.memory 17))\n  (func $run (export \"run\") (type $t0)\n    (call $peekaboo\n      (i32.const 1)))\n  (func $playground::run::plus_one::h85275af105f0cc85 (type $t1) (param $p0 i32) (result i32)\n    (i32.add\n      (get_local $p0)\n      (i32.const 1)))\n  (table $T0 2 2 anyfunc)\n  (elem (i32.const 1) $playground::run::plus_one::h85275af105f0cc85))\n</code></pre>\n\n<p>If you want to reproduce this locally add this in your <code>Cargo.toml</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[lib]\ncrate-type = [\"cdylib\"]\n\n[profile.release]\nlto = true\n</code></pre>\n\n<p>And build with <code>cargo +nightly build --release --target wasm32-unknown-unknown</code> (assuming a <a href=\"https://rustup.rs/\" rel=\"nofollow noreferrer\">rustup</a> setup with a <code>nightly</code> toolchain and <code>wasm32-unknown-unknown</code> target enabled for the <code>nightly</code> toolchain).</p>\n"}], "owner": {"reputation": 7934, "user_id": 484342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ec93a90077d90d75dfd5e53ef968af62?s=128&d=identicon&r=PG", "display_name": "Samo", "link": "https://stackoverflow.com/users/484342/samo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 731, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1524957167, "creation_date": 1513098829, "last_edit_date": 1513103466, "question_id": 47778074, "link": "https://stackoverflow.com/questions/47778074/how-to-resolve-function-pointers-in-rust-webassembly", "title": "How to resolve function pointers in Rust &amp; WebAssembly", "body": "<p>I want to provide a WebAssembly module with an external JavaScript function that accepts a Rust function pointer.</p>\n\n<p>Once this JS module is initialized, it will call the <code>run()</code> function from the <code>.wasm</code> module, and that will in turn call <code>peekaboo</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>window.Module = {};\n\nconst imports = {\n  env: {\n    memoryBase: 0,\n    tableBase: 0,\n    memory: new WebAssembly.Memory({ initial: 256 }),\n    table: new WebAssembly.Table({ initial: 4, element: 'anyfunc' })\n  }\n};\n\nimports.env.peekaboo = function(f) {\n  const fn = imports.env.table.get(f);\n  return fn(2);\n};\n\nfetch('game.wasm')\n  .then(response =&gt; response.arrayBuffer())\n  .then(bytes =&gt; WebAssembly.compile(bytes))\n  .then(mod =&gt; WebAssembly.instantiate(mod, imports))\n  .then(mod =&gt; {\n    mod.exports.run();\n\n    Module.memory = imports.env.memory;\n    Module.dealloc_str = mod.exports.dealloc_str;\n  });\n</code></pre>\n\n<p>The examples I've seen indicate that if I import the <code>memory</code> in this way, I should be able to use the <code>table</code> to resolve my function pointer. Here is the Rust code:</p>\n\n<pre><code>#![feature(wasm_import_memory)]\n#![wasm_import_memory]\n\nextern \"C\" {\n    fn peekaboo(f: fn(u32) -&gt; u32);\n}\n\nfn main() {}\n\n#[no_mangle]\npub fn run() {\n    let plus_one = |x: u32| -&gt; u32 { x + 1 };\n\n    unsafe {\n        peekaboo(plus_one);\n    }\n}\n</code></pre>\n\n<p>Everything compiles fine but when I execute the <code>peekaboo</code> function, the <code>fn</code> variable is <code>null</code>, indicating that the table was unable to find the function pointer. Therefore executing <code>fn(2)</code> blows up with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Uncaught (in promise) TypeError: fn is not a function\n</code></pre>\n\n<p>I more or less followed <a href=\"https://stackoverflow.com/questions/45387728/calling-a-c-style-function-pointer-in-a-webassembly-from-javascript\">this example</a> but since I'm working in Rust, the translation is not 1-to-1. I suspect that I've overlooked something that's not obvious to me because I'm new to both Rust and WebAssembly. Can anyone spot my mistake?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3054, "user_id": 1040813, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/d44b0710caabf1273f748e3ef3dc3e8c?s=128&d=identicon&r=PG", "display_name": "marxin", "link": "https://stackoverflow.com/users/1040813/marxin"}, "edited": false, "score": 0, "creation_date": 1513181485, "post_id": 47775228, "comment_id": 82555885, "body": "Yes I will add another condition to make sure its not happening (start == num). Thank you for help!"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 10, "last_activity_date": 1546974461, "last_edit_date": 1546974461, "creation_date": 1513089537, "answer_id": 47775228, "question_id": 47773849, "link": "https://stackoverflow.com/questions/47773849/borrow-two-mutable-values-from-the-same-hashmap/47775228#47775228", "title": "Borrow two mutable values from the same HashMap", "body": "<p>If you can change your datatypes and your function signature, you can use a <code>RefCell</code> to create <a href=\"https://doc.rust-lang.org/std/cell/index.html\" rel=\"nofollow noreferrer\">interior mutability</a>:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::collections::{HashMap, HashSet};\n\nfn populate_connections(\n    start: i32,\n    num: i32,\n    conns: &amp;HashMap&lt;i32, RefCell&lt;HashSet&lt;i32&gt;&gt;&gt;,\n    ancs: &amp;mut HashSet&lt;i32&gt;,\n) {\n    let mut orig_conns = conns.get(&amp;start).unwrap().borrow_mut();\n    let pipes = conns.get(&amp;num).unwrap().borrow();\n\n    for pipe in pipes.iter() {\n        if !ancs.contains(pipe) &amp;&amp; !orig_conns.contains(pipe) {\n            ancs.insert(*pipe);\n            orig_conns.insert(*pipe);\n            populate_connections(start, num, conns, ancs);\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>Note that if <code>start == num</code>, the thread will panic because this is an attempt to have both mutable and immutable access to the same <code>HashSet</code>.</p>\n\n<h3>Safe alternatives to <code>RefCell</code></h3>\n\n<p>Depending on your exact data and code needs, you can also use types like <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>Cell</code></a> or one of the <a href=\"https://doc.rust-lang.org/std/sync/atomic/index.html\" rel=\"nofollow noreferrer\">atomics</a>. These have lower memory overhead than a <code>RefCell</code> and only a small effect on codegen. </p>\n\n<p>In multithreaded cases, you may wish to use a <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a> or <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\"><code>RwLock</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1541423450, "post_id": 53146512, "comment_id": 93200399, "body": "You actually only need the last line to be in the <code>unsafe</code> block, the rest can be moved before it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1541423559, "post_id": 53146512, "comment_id": 93200452, "body": "@PeterHall technically that&#39;s correct, but I tend to be of the school of thought that the <code>unsafe</code> block should encompass all of the code that makes the code actually safe."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1541423609, "post_id": 53146512, "comment_id": 93200479, "body": "Also, I&#39;m not sure that this completely solves OP&#39;s problem (even if it answers the title question) because his example code needs to borrow the <code>HashMap</code> mutably again, which won&#39;t work if he just updates his code to use your function like this: <code>let (mut orig_conns, mut pipes) = get_mut_pair(conns, &amp;start, &amp;num);</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1541424484, "post_id": 53146512, "comment_id": 93200962, "body": "@PeterHall no, it wasn&#39;t intended to, but I forgot to state that directly. Thank you for the reminder."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1614354740, "last_edit_date": 1614354740, "creation_date": 1541374078, "answer_id": 53146512, "question_id": 47773849, "link": "https://stackoverflow.com/questions/47773849/borrow-two-mutable-values-from-the-same-hashmap/53146512#53146512", "title": "Borrow two mutable values from the same HashMap", "body": "<p>If you can <strong>guarantee</strong> that your two indices are different, you can use unsafe code and avoid interior mutability:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn get_mut_pair&lt;'a, K, V&gt;(conns: &amp;'a mut HashMap&lt;K, V&gt;, a: &amp;K, b: &amp;K) -&gt; (&amp;'a mut V, &amp;'a mut V)\nwhere\n    K: Eq + std::hash::Hash,\n{\n    unsafe {\n        let a = conns.get_mut(a).unwrap() as *mut _;\n        let b = conns.get_mut(b).unwrap() as *mut _;\n        assert_ne!(a, b, &quot;The two keys must not resolve to the same value&quot;);\n        (&amp;mut *a, &amp;mut *b)\n    }\n}\n</code></pre>\n<p>This code tries to have an abundance of caution. An assertion enforces that the two values are distinct pointers before converting them back into mutable references and we explicitly add lifetimes to the returned variables.</p>\n<p>You should understand the nuances of unsafe code before blindly using this solution. Notably, <strong><a href=\"https://stackoverflow.com/revisions/53146512/6\">previous versions of this answer</a> were incorrect</strong>. Thanks to @oberien for finding the unsoundness in the original implementation of this and proposing a fix. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d396290ecb215fb00027f7dd1e547c39\" rel=\"nofollow noreferrer\">This playground</a> demonstrates how purely safe Rust code could cause the old code to result in memory unsafety.</p>\n<hr />\n<p>Note that this function <strong>doesn't</strong> attempt to solve the original problem, which is vastly more complex than verifying that <em>two</em> indices are disjoint. The original problem requires:</p>\n<ul>\n<li>tracking <em>three</em> disjoint borrows, two of which are mutable and one that is immutable.</li>\n<li>tracking the recursive call\n<ul>\n<li>must not modify the <code>HashMap</code> in any way which would cause resizing, which would invalidate any of the existing references from a previous level.</li>\n<li>must not alias any of the references from a previous level.</li>\n</ul>\n</li>\n</ul>\n<p>Using something like <code>RefCell</code> is a <em>much</em> simpler way to ensure you do not trigger memory unsafety.</p>\n"}], "owner": {"reputation": 3054, "user_id": 1040813, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/d44b0710caabf1273f748e3ef3dc3e8c?s=128&d=identicon&r=PG", "display_name": "marxin", "link": "https://stackoverflow.com/users/1040813/marxin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1678, "favorite_count": 1, "accepted_answer_id": 47775228, "answer_count": 2, "score": 8, "last_activity_date": 1614354740, "creation_date": 1513085331, "last_edit_date": 1541373386, "question_id": 47773849, "link": "https://stackoverflow.com/questions/47773849/borrow-two-mutable-values-from-the-same-hashmap", "title": "Borrow two mutable values from the same HashMap", "body": "<p>I have the following code:</p>\n\n<pre><code>use std::collections::{HashMap, HashSet};\n\nfn populate_connections(\n    start: i32,\n    num: i32,\n    conns: &amp;mut HashMap&lt;i32, HashSet&lt;i32&gt;&gt;,\n    ancs: &amp;mut HashSet&lt;i32&gt;,\n) {\n    let mut orig_conns = conns.get_mut(&amp;start).unwrap();\n    let pipes = conns.get(&amp;num).unwrap();\n\n    for pipe in pipes.iter() {\n        if !ancs.contains(pipe) &amp;&amp; !orig_conns.contains(pipe) {\n            ancs.insert(*pipe);\n            orig_conns.insert(*pipe);\n            populate_connections(start, num, conns, ancs);\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>The logic is not very important, I'm trying to create a function which will itself and walk over pipes.</p>\n\n<p>My issue is that this doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*conns` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:10:17\n   |\n9  |     let mut orig_conns = conns.get_mut(&amp;start).unwrap();\n   |                          ----- mutable borrow occurs here\n10 |     let pipes = conns.get(&amp;num).unwrap();\n   |                 ^^^^^ immutable borrow occurs here\n...\n19 | }\n   | - mutable borrow ends here\n\nerror[E0499]: cannot borrow `*conns` as mutable more than once at a time\n  --&gt; src/main.rs:16:46\n   |\n9  |     let mut orig_conns = conns.get_mut(&amp;start).unwrap();\n   |                          ----- first mutable borrow occurs here\n...\n16 |             populate_connections(start, num, conns, ancs);\n   |                                              ^^^^^ second mutable borrow occurs here\n...\n19 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>I don't know how to make it work. At the beginning, I'm trying to get two <code>HashSet</code>s stored in a <code>HashMap</code> (<code>orig_conns</code> and <code>pipes</code>).</p>\n\n<p>Rust won't let me have both mutable and immutable variables at the same time. I'm confused a bit because this will be completely different objects but I guess if <code>&amp;start</code> == <code>&amp;num</code>, then I would have two different references to the same object (one mutable, one immutable).</p>\n\n<p>Thats ok, but then how can I achieve this? I want to iterate over one <code>HashSet</code> and read and modify other one. Let's assume that they won't be the same <code>HashSet</code>.</p>\n"}, {"tags": ["windows", "rust"], "comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 2, "creation_date": 1513071465, "post_id": 47768379, "comment_id": 82499718, "body": "Can you produce the same behavior by producing an c++-executable and packing it into <code>.zip</code> archive? If so, when this behavior is not related to any language but to unpacking an executable from a <code>.zip</code> archive."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1513076008, "post_id": 47768379, "comment_id": 82502524, "body": "Related: <a href=\"https://stackoverflow.com/questions/252226/signing-a-windows-exe-file\" title=\"signing a windows exe file\">stackoverflow.com/questions/252226/signing-a-windows-exe-fil&zwnj;&#8203;e</a>"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1513091121, "creation_date": 1513068265, "last_edit_date": 1513091121, "question_id": 47768379, "link": "https://stackoverflow.com/questions/47768379/executable-security-warning-on-windows", "title": "Executable security warning on Windows", "body": "<p>When I build an executable for Windows with <code>cargo build --release</code> and zip the executable file with its resources, then unzip and run it from another Windows computer, it displays a big warning about security. I never saw this warning before on Windows, even on not-so-reliable application. </p>\n\n<p>The warning message says the application is unsigned and has no editor (it's in french, and it does not displays anymore since I accepted, so I can't paste it, sorry). I have to click twice to accept, then it runs the windows default antivirus.</p>\n\n<p>Not sure it's really related to Rust programming, maybe more about windows executable, but <strong>is there a way to limit this kind of security alert</strong> when building a windows application with Cargo?</p>\n\n<p>PS: I don't know where to start, sorry if I am not in the right place for this kind of question.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1513076114, "post_id": 47767954, "comment_id": 82502592, "body": "You can just write this <code>Ordering::Less =&gt; 1,</code> in your match arms. The brackets are not required."}], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1513088063, "post_id": 47768045, "comment_id": 82510308, "body": "That should be <code>self.position -= self.position.cmp(&amp;destination) as i8;</code>"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 4, "last_activity_date": 1513090007, "last_edit_date": 1513090007, "creation_date": 1513066755, "answer_id": 47768045, "question_id": 47767954, "link": "https://stackoverflow.com/questions/47767954/is-there-a-built-in-conversion-from-rusts-ordering-to-integers/47768045#47768045", "title": "Is there a built-in conversion from Rust&#39;s Ordering::* to integers?", "body": "<p>Yes, you can cast them to signed integers (which can be verified in <a href=\"https://doc.rust-lang.org/stable/src/core/cmp.rs.html#207-217\" rel=\"nofollow noreferrer\">the source of cmp::Ordering</a>):</p>\n\n<pre><code>use std::cmp::Ordering;\n\nfn main() {\n    println!(\"{}\", Ordering::Less as i8);    // -1\n    println!(\"{}\", Ordering::Equal as i32);   // 0\n    println!(\"{}\", Ordering::Greater as i64); // 1\n}\n</code></pre>\n\n<p>In your case this could be used as follows:</p>\n\n<pre><code>self.position -= self.position.cmp(&amp;destination) as i8; // or a different, more suitable signed integer\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1513087963, "creation_date": 1513087963, "answer_id": 47774721, "question_id": 47767954, "link": "https://stackoverflow.com/questions/47767954/is-there-a-built-in-conversion-from-rusts-ordering-to-integers/47774721#47774721", "title": "Is there a built-in conversion from Rust&#39;s Ordering::* to integers?", "body": "<p>Like @ljedrz said, you can convert the <code>Ordering</code> to an integer. Another option, which may be clearer is to remember that you can use <code>if</code> as an expression:</p>\n\n<pre><code>self.position += if destination &gt; self.position      {  1 }\n                 else if destination &lt; self.position { -1 }\n                 else                                {  0 };\n</code></pre>\n"}], "owner": {"reputation": 48006, "user_id": 96588, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/425fed56a46504d37ec907d99b09ecde?s=128&d=identicon&r=PG", "display_name": "l0b0", "link": "https://stackoverflow.com/users/96588/l0b0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "accepted_answer_id": 47768045, "answer_count": 2, "score": 1, "last_activity_date": 1513090007, "creation_date": 1513066428, "last_edit_date": 1513067416, "question_id": 47767954, "link": "https://stackoverflow.com/questions/47767954/is-there-a-built-in-conversion-from-rusts-ordering-to-integers", "title": "Is there a built-in conversion from Rust&#39;s Ordering::* to integers?", "body": "<p>To increment or decrement something based on whether it's below or above some other value, I can do this:</p>\n\n<pre><code>if destination &gt; self.position {\n    self.position += 1;\n} else if destination &lt; self.position {\n    self.position -= 1;\n}\n</code></pre>\n\n<p>or this:</p>\n\n<pre><code>self.position += match self.position.cmp(&amp;destination) {\n    Ordering::Less =&gt; {\n        1\n    }\n    Ordering::Greater =&gt; {\n        -1\n    }\n    Ordering::Equal =&gt; {\n        0\n    }\n}\n</code></pre>\n\n<p>The latter is IMO clearer, but much more verbose. Is there a way convert these <code>Ordering</code> values to integers (-1, 0, 1), similar to <a href=\"https://secure.php.net/manual/en/language.operators.comparison.php\" rel=\"nofollow noreferrer\">PHP's spaceship operator</a>, or otherwise reduce the verbosity of this code?</p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1513067795, "post_id": 47767910, "comment_id": 82497547, "body": "I am not sure to understand your question (or your intent), but why do not you give a slice or an iterator to the function? For example: if your input is <code>let input = 5</code>, repeat the number: <code>let slice = iter::repeat(input).take(the_number_you_want).collect()</code> and feed it to your function."}, {"owner": {"reputation": 42073, "user_id": 113632, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/f0aa6977c75f54ca9033d4f4d0244023?s=128&d=identicon&r=PG", "display_name": "dimo414", "link": "https://stackoverflow.com/users/113632/dimo414"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513068691, "post_id": 47767910, "comment_id": 82498040, "body": "@Boiethios the function signatures are fixed - I agree something like an iterator would be reasonable, but for my purposes here the functions need positional arguments. This MCVE is a toy example - my actual use case is more complex but this is the part I&#39;m unsure about."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513072227, "post_id": 47767910, "comment_id": 82500192, "body": "If you want a kind of overload polymorphism, the best is to create a struct with all your parameters and give it to the func as unique parameter; then you implement <code>From</code> trait for a bunch of tuples with all the combinations you want. Or you use the builder pattern that is very idiomatic in Rust. But if you cannot change the functions signatures, this does not work (and even, I wonder how one can help you). Maybe you should be more explicit in you question, because in current state, it <i>seems</i> too broad to be correctly answered."}, {"owner": {"reputation": 42073, "user_id": 113632, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/f0aa6977c75f54ca9033d4f4d0244023?s=128&d=identicon&r=PG", "display_name": "dimo414", "link": "https://stackoverflow.com/users/113632/dimo414"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513074278, "post_id": 47767910, "comment_id": 82501466, "body": "@Boiethios I don&#39;t see how it&#39;s too broad - I&#39;m looking for a better way to implement <code>expand!</code> such that all the cases don&#39;t have do be individually enumerated. I&#39;ve intentionally tried to narrow the scope of the question."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1513094886, "post_id": 47767910, "comment_id": 82514819, "body": "A <a href=\"https://doc.rust-lang.org/1.12.0/book/compiler-plugins.html\" rel=\"nofollow noreferrer\">compiler plugin</a> might be the only way to achieve this."}, {"owner": {"reputation": 42073, "user_id": 113632, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/f0aa6977c75f54ca9033d4f4d0244023?s=128&d=identicon&r=PG", "display_name": "dimo414", "link": "https://stackoverflow.com/users/113632/dimo414"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1513120291, "post_id": 47767910, "comment_id": 82527516, "body": "@user4815162342 thanks, I may have to dive into that. I&#39;d been trying to avoid it... :)"}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 0, "last_activity_date": 1610724173, "creation_date": 1610724173, "answer_id": 65738779, "question_id": 47767910, "link": "https://stackoverflow.com/questions/47767910/passing-an-argument-to-a-function-n-times/65738779#65738779", "title": "Passing an argument to a function n times", "body": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=53341d9013bf5107d0182fd1eeb039d8\" rel=\"nofollow noreferrer\">Here</a>'s a function <code>expand</code> that can simply be called with the name of your function, and returns the &quot;expanded&quot; version. I.e. you can use it like this:</p>\n<pre><code>fn main() {\n    let state = 15;\n    let vs: Vec&lt;Box&lt;dyn Fn(i32) -&gt; i32&gt;&gt; = vec![\n        expand(foo),\n        expand(bar),\n        expand(baz),\n        expand(|x| x+1), // with lambdas\n        expand(move |x| x+state), // with stateful lambdas\n    ];\n    for f in &amp;vs {\n        println!(&quot;{:?}&quot;, f(1));\n    }\n}\n\nfn foo(x: i32) -&gt; i32 { x }\nfn bar(x1: i32, x2: i32) -&gt; i32 { x1 + x2 }\nfn baz(x1: i32, x2: i32, x3: i32) -&gt; i32 { x1 + x2 + x3 }\n</code></pre>\n<p>It works by defining a trait <code>TExpand</code> that is implemented for function types. As far as I can see, I must make the <code>impl</code>s distinct (thus the <code>TplDummy</code> parameter).</p>\n<pre><code>trait TExpand&lt;T, R, TplDummy&gt; {\n    fn call(&amp;self, t: T) -&gt; R;\n}\nmacro_rules! ignore_ident{\n    ($id:ident, $($t:tt)*) =&gt; {$($t)*};\n}\nmacro_rules! impl_expand{\n    () =&gt; {};\n    ($t0:ident $($t:ident)*) =&gt; {\n        impl_expand!($($t)*);\n        impl&lt;T: Copy, R, F:Fn($(ignore_ident!($t, T),)*)-&gt;R&gt; TExpand&lt;T, R, ($(ignore_ident!($t, T),)*)&gt; for F {\n            #[allow(unused_variables)] // for nullary function\n            fn call(&amp;self, t: T) -&gt; R {\n                (self)($(ignore_ident!($t, t),)*)\n            }\n        }\n    }\n}\nimpl_expand!(t0 t1 t2 t3);\n\nfn expand&lt;TplDummy, T, R, F:TExpand&lt;T, R, TplDummy&gt;+'static&gt;(f: F) -&gt; Box&lt;dyn Fn(T)-&gt;R&gt; {\n    Box::new(move |t| f.call(t))\n}\n</code></pre>\n<p>You can expand the range of the argument counts by adjusting the call to <code>impl_expand</code>.</p>\n"}], "owner": {"reputation": 42073, "user_id": 113632, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/f0aa6977c75f54ca9033d4f4d0244023?s=128&d=identicon&r=PG", "display_name": "dimo414", "link": "https://stackoverflow.com/users/113632/dimo414"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 232, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1610724173, "creation_date": 1513066213, "question_id": 47767910, "link": "https://stackoverflow.com/questions/47767910/passing-an-argument-to-a-function-n-times", "title": "Passing an argument to a function n times", "body": "<p>I'm experimenting with different patterns in Rust, and wanted to try to dynamically invoke one of several functions with similar signatures, but different numbers of arguments. For example:</p>\n\n<pre><code>fn foo(x: i32) -&gt; i32 { x }\nfn bar(x1: i32, x2: i32) -&gt; i32 { x1 + x2 }\nfn baz(x1: i32, x2: i32, x3: i32) -&gt; i32 { x1 + x2 + x3 }\n</code></pre>\n\n<p>I'd like to be able to pass a value in for <em>all</em> the parameters to these methods, so that they could be called interchangeably - so if the input was <code>5</code> I'd like to be able to call <code>foo(5)</code>, <code>bar(5, 5)</code>, or <code>baz(5, 5, 5)</code>, and so on.</p>\n\n<p>It seems like this would be best done by a macro or other syntax extension, but I'm not sure the best way to express it. What I have so far is just a brute-force enumeration of the cases, but this seems both tedious (to re-write the same expression for every case) and brittle (it doesn't support n+1 arguments):</p>\n\n<pre><code>// Takes a function and an expected number of args and returns a closure that\n// takes exactly one arg and passes it n times to the given function.\nmacro_rules! expand {\n    ($func:ident, 0) =&gt; { Box::new(|_n: i32| $func()) };\n    ($func:ident, 1) =&gt; { Box::new(|n: i32| $func(n)) };\n    ($func:ident, 2) =&gt; { Box::new(|n: i32| $func(n, n)) };\n    ($func:ident, 3) =&gt; { Box::new(|n: i32| $func(n, n, n)) };\n}\n</code></pre>\n\n<p>I came across <a href=\"http://danielkeep.github.io/tlborm/book/pat-push-down-accumulation.html\" rel=\"nofollow noreferrer\">this pattern</a> which seems similar, but it still requires enumerating each case separately.</p>\n\n<p>Is there a better approach that can more flexibly wrap a <code>fn(X, ...)</code> as a function that takes exactly one <code>X</code>?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c85904d88833c87621c6d831425ae95a&amp;version=stable\" rel=\"nofollow noreferrer\">Playground example</a></p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 1793, "user_id": 5049318, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/doxmu.jpg?s=128&g=1", "display_name": "Abrar Hossain", "link": "https://stackoverflow.com/users/5049318/abrar-hossain"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513046444, "post_id": 47764477, "comment_id": 82490450, "body": "@trentcl I apologize if the snapshot bothered you. At the time seemed like the best idea"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513046770, "post_id": 47764477, "comment_id": 82490541, "body": "Error messages are good to have in text, not only for potential answerers but for future askers who might have the same question. Not a big deal."}, {"owner": {"reputation": 1793, "user_id": 5049318, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/doxmu.jpg?s=128&g=1", "display_name": "Abrar Hossain", "link": "https://stackoverflow.com/users/5049318/abrar-hossain"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513046848, "post_id": 47764477, "comment_id": 82490558, "body": "@trentcl I got your point. Any pointers regarding why the compiler error?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513049701, "post_id": 47764477, "comment_id": 82491202, "body": "For what it&#39;s worth, once you fix the lifetime issue, you probably want to take a different approach to the body of the function. You need to write code to match the entire pattern at any point in the string -- what you have won&#39;t work because you&#39;re only trying to match a single character at a time (unless you want to change <code>pat</code> to be type <code>u8</code>). Familiarize yourself with the operations available on <a href=\"https://doc.rust-lang.org/std/str/\" rel=\"nofollow noreferrer\">str</a> and <a href=\"https://doc.rust-lang.org/std/primitive.slice.html\" rel=\"nofollow noreferrer\">slices</a>, there are several that might be useful."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 7, "last_activity_date": 1600113380, "last_edit_date": 1600113380, "creation_date": 1513048382, "answer_id": 47764791, "question_id": 47764477, "link": "https://stackoverflow.com/questions/47764477/missing-lifetime-operator/47764791#47764791", "title": "Missing Lifetime Operator", "body": "<p>The error message tells you what's wrong, although not how to fix it:</p>\n<pre class=\"lang-none prettyprint-override\"><code>  = help: this function's return type contains a borrowed value, but the\nsignature does not say whether it is borrowed from `s` or `pat`\n</code></pre>\n<p>The compiler uses lifetimes to determine whether code is safe or not. Part of that is knowing what each reference could be borrowing from. The signature:</p>\n<pre><code>fn str_split(s: &amp;str, pat: &amp;str) -&gt; &amp;str\n</code></pre>\n<p>does not indicate whether <code>str_split</code> returns a reference into <code>s</code> or a reference into <code>pat</code>, so Rust can't tell how to check the validity of the reference. (See also <a href=\"https://stackoverflow.com/q/27097710/3650362\">this question</a> for a version of this where the function has no reference arguments at all.)</p>\n<p>To fix this, you need to introduce a <em>lifetime parameter</em>:</p>\n<pre><code>fn str_split&lt;'a&gt;(s: &amp;'a str, pat: &amp;str) -&gt; &amp;'a str\n</code></pre>\n<p>This says, roughly, &quot;If you borrow a string for some lifetime <code>'a</code>, you can call <code>str_split</code> on it (and another string) and get back a reference also valid for lifetime <code>'a</code>.&quot; <code>&amp;pat</code> is not annotated with <code>'a</code>, because the result does not borrow from <code>pat</code>, only from <code>s</code>.</p>\n<p>The Rust Programming Language <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">has a chapter on lifetimes</a> that addresses this very issue and I would strongly recommend you read it; Rust's lifetimes go beyond merely preventing dangling pointers.</p>\n<hr />\n<p>Although not part of the question, the the body of this function is a one-liner. Unless this is purely a learning exercise, don't do more work than you have to:</p>\n<pre><code>fn str_split&lt;'a&gt;(s: &amp;'a str, pat: &amp;str) -&gt; &amp;'a str {\n    s.split(pat).next().unwrap_or(s)\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1793, "user_id": 5049318, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/doxmu.jpg?s=128&g=1", "display_name": "Abrar Hossain", "link": "https://stackoverflow.com/users/5049318/abrar-hossain"}, "edited": false, "score": 0, "creation_date": 1513050832, "post_id": 47764843, "comment_id": 82491475, "body": "Thanks so much for explaining. Helped a lot."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 5, "last_activity_date": 1513048802, "last_edit_date": 1592644375, "creation_date": 1513048802, "answer_id": 47764843, "question_id": 47764477, "link": "https://stackoverflow.com/questions/47764477/missing-lifetime-operator/47764843#47764843", "title": "Missing Lifetime Operator", "body": "<p><code>&amp;str</code> is a shorthand for <code>&amp;'a str</code>, where <code>'a</code> is some lifetime parameter that needs to be declared beforehand. In some simple cases. it's possible to omit these lifetime parameters and the compiler will expand it for you. However, there are some cases where you need to declare the lifetimes explicitly.</p>\n<p>From <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-elision\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language, Second Edition</em></a> (emphasis mine), here are the rules regarding omitted lifetime parameters:</p>\n<blockquote>\n<ol>\n<li><p>Each parameter that is a reference gets its own lifetime parameter. In other words, a function with one parameter gets one lifetime parameter: <code>fn foo&lt;'a&gt;(x: &amp;'a i32)</code>, a function with two arguments gets two separate lifetime parameters: <code>fn foo&lt;'a, 'b&gt;(x: &amp;'a i32, y: &amp;'b i32)</code>, and so on.</p>\n</li>\n<li><p>If there is <strong>exactly one</strong> input lifetime parameter, that lifetime is assigned to all output lifetime parameters: <code>fn foo&lt;'a&gt;(x: &amp;'a i32) -&gt; &amp;'a i32</code>.</p>\n</li>\n<li><p>If there are multiple input lifetime parameters, but one of them is <code>&amp;self</code> or <code>&amp;mut self</code> because this is a method, then the lifetime of <code>self</code> is assigned to all output lifetime parameters. This makes writing methods much nicer.</p>\n</li>\n</ol>\n</blockquote>\n<p>The problem with your function is that it has two input lifetime parameters, therefore the compiler will not choose one for you. You have to write your function like this:</p>\n<pre><code>fn str_split&lt;'a&gt;(s: &amp;'a str, pat: &amp;str) -&gt; &amp;'a str {\n    s\n}\n</code></pre>\n<p>If this syntax is new to you, make sure you read <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">the chapter on lifetimes</a>.</p>\n<p>Why can't the compiler just figure it out by itself? Because Rust has a principle that the signature of a function should not change because of a change in its implementation. It simplifies the compiler (it doesn't have to deal with interdependent functions whose signatures have not been fully determined) and it also simplifies the maintenance of your own code. For example, if you were to change the implementation of your function like so:</p>\n<pre><code>fn str_split(s: &amp;str, pat: &amp;str) -&gt; &amp;str {\n    pat\n}\n</code></pre>\n<p>then the output's lifetime parameter would have to be linked to <code>pat</code>'s lifetime parameter. In a library, this is a breaking change; you don't want breaking changes to slip by without you noticing!</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1513086590, "post_id": 47765157, "comment_id": 82509334, "body": "I assume you don&#39;t want to just use <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.split\" rel=\"nofollow noreferrer\"><code>split</code></a> or <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.split_whitespace\" rel=\"nofollow noreferrer\"><code>split_whitespace</code></a> (I updated my answer with a <code>split</code>-based version), but even so, you can achieve this more simply without treating the string as bytes. <a href=\"https://play.rust-lang.org/?gist=ee555511c1034da0182ea0b5df194cf7&amp;version=stable\" rel=\"nofollow noreferrer\">Examples.</a>"}, {"owner": {"reputation": 1693, "user_id": 5731861, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iKaMT.png?s=128&g=1", "display_name": "Felipe Valdes", "link": "https://stackoverflow.com/users/5731861/felipe-valdes"}, "edited": false, "score": 1, "creation_date": 1564061216, "post_id": 47765157, "comment_id": 100913643, "body": "As a rule of thumb I always try to return String from rust functions, that makes my life easier"}], "tags": [], "owner": {"reputation": 1793, "user_id": 5049318, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/doxmu.jpg?s=128&g=1", "display_name": "Abrar Hossain", "link": "https://stackoverflow.com/users/5049318/abrar-hossain"}, "is_accepted": false, "score": 0, "last_activity_date": 1513051284, "creation_date": 1513051284, "answer_id": 47765157, "question_id": 47764477, "link": "https://stackoverflow.com/questions/47764477/missing-lifetime-operator/47765157#47765157", "title": "Missing Lifetime Operator", "body": "<p>Thanks to everyone for explaining the error and the reasons behind it. I have fixed the code and made some changes which I would like to explain. First thanks to @trentcl for noting that the pattern matching was semantically wrong. The reason being that the search was for the pattern was done by matching against each bytes in the array rather than the whole array itself. This prompted me to change the function to  only return the words by splitting on the first occurrence of space character <code>' '</code>. \nAlso the function signature needed a lifetime trait to be included to make to it compile correctly. The working code is presented below:</p>\n\n<pre><code>// 4 Demo with string spliting\nfn demo4() {\n     let s = String::from(\"Elijah Wood\");\n     let firstname = str_split(&amp;s);\n     println!(\"First name of actor: {}\", firstname);\n}\n// splits a string at first space\nfn str_split&lt;'a&gt;(s : &amp;'a str) -&gt; &amp;'a str {\n    let bytes = s.as_bytes();\n    for(i, &amp;item) in bytes.iter().enumerate() {\n         if item == b' ' {\n             return &amp;s[0..i];\n         }\n    }\n    &amp;s[..]\n}\n</code></pre>\n"}], "owner": {"reputation": 1793, "user_id": 5049318, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/doxmu.jpg?s=128&g=1", "display_name": "Abrar Hossain", "link": "https://stackoverflow.com/users/5049318/abrar-hossain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 993, "favorite_count": 0, "accepted_answer_id": 47764791, "answer_count": 3, "score": 4, "last_activity_date": 1600113380, "creation_date": 1513045817, "last_edit_date": 1513091644, "question_id": 47764477, "link": "https://stackoverflow.com/questions/47764477/missing-lifetime-operator", "title": "Missing Lifetime Operator", "body": "<p>I have the following code in Rust. I know that I am not supposed to return references to local variables, and in this case I am not. The string to split is passed as a <code>&amp;str</code> reference and, after determining the split boundary, I am returning <code>&amp;s[0..idx]</code> where <code>idx</code> is the end of the boundary. I was confident that this would not result in a \"dangling\" reference related error. However, it turns out I was wrong!</p>\n\n<pre><code>fn demo4() {\n    let mut s = String::from(\"Elijah Wood\");\n    let firstname = str_split(&amp;s, &amp;String::from(\" \"));\n    println!(\"First name of actor: {}\", firstname);\n}\n// can handle both &amp;str and &amp;String\nfn str_split(s: &amp;str, pat: &amp;str) -&gt; &amp;str {\n    let bytes = s.as_bytes();\n    let b_pat = pat.as_bytes();\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        if item == b_pat {\n            return &amp;s[0..i];\n        }\n    }\n    &amp;s[..]\n}\n\nfn main() {\n    demo4();\n}\n</code></pre>\n\n<p>I am getting the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:7:37\n  |\n7 | fn str_split(s: &amp;str, pat: &amp;str) -&gt; &amp;str {\n  |                                     ^ expected lifetime parameter\n  |\n  = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `s` or `pat`\n</code></pre>\n\n<p>Any explanation is greatly appreciated.</p>\n"}, {"tags": ["inheritance", "struct", "enums", "rust", "composition"], "comments": [{"owner": {"reputation": 42073, "user_id": 113632, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/f0aa6977c75f54ca9033d4f4d0244023?s=128&d=identicon&r=PG", "display_name": "dimo414", "link": "https://stackoverflow.com/users/113632/dimo414"}, "edited": false, "score": 0, "creation_date": 1513042478, "post_id": 47764050, "comment_id": 82489566, "body": "&quot;<i>when I tried it, it doesn&#39;t seem to have been implemented yet</i>&quot; care to share what you tried? The errors you ran into? Put it on <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">play.rust-lang.org</a> so others can run it too."}], "answers": [{"comments": [{"owner": {"reputation": 750, "user_id": 2752635, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/ede062c91480ee21cd5dea23e7ce9b74?s=128&d=identicon&r=PG&f=1", "display_name": "Thomas", "link": "https://stackoverflow.com/users/2752635/thomas"}, "edited": false, "score": 0, "creation_date": 1513103635, "post_id": 47764250, "comment_id": 82519804, "body": "I up voted it because it would work around the problem, but I&#39;m holding out choosing it for the solution because it seems like there should be a better way.  I guess I was expecting tighter control out of a systems programming language."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1513043877, "creation_date": 1513043877, "answer_id": 47764250, "question_id": 47764050, "link": "https://stackoverflow.com/questions/47764050/simulating-field-inheritence-with-composition/47764250#47764250", "title": "Simulating field inheritence with composition", "body": "<p>The proposed syntax for common fields in enums hasn't been implemented as of Rust 1.22. The only option right now is plain old composition. If you want to be able to operate generically on multiple types that contain an <code>A</code>, you may be able to define a trait that provides access to that <code>A</code> and implement it on all of those types:</p>\n\n<pre><code>trait HaveA {\n    fn a(&amp;self) -&gt; &amp;A;\n    fn a_mut(&amp;mut self) -&gt; &amp;mut A;\n}\n\nimpl HaveA for B {\n    fn a(&amp;self) -&gt; &amp;A {\n        &amp;self.parent\n    }\n\n    fn a_mut(&amp;mut self) -&gt; &amp;mut A {\n        &amp;mut self.parent\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 750, "user_id": 2752635, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/ede062c91480ee21cd5dea23e7ce9b74?s=128&d=identicon&r=PG&f=1", "display_name": "Thomas", "link": "https://stackoverflow.com/users/2752635/thomas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 352, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1590461805, "creation_date": 1513042085, "last_edit_date": 1513090651, "question_id": 47764050, "link": "https://stackoverflow.com/questions/47764050/simulating-field-inheritence-with-composition", "title": "Simulating field inheritence with composition", "body": "<p>I have several pairs of structs for which the fields of one is a perfect superset of the other.  I'd like to simulate some kind of inheritance so I don't have to have separate cases for each struct since that would almost double my code.</p>\n\n<p>In a language like C, I could simulate inheritance of fields with something like this:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct A\n{\n    int a;\n};\n\nstruct B\n{\n    struct A parent;\n    int b;\n};\n\nmain()\n{\n    struct B test1;\n    struct A *test2 = &amp;test1;\n    test2-&gt;a = 7;\n}\n</code></pre>\n\n<p>I want to do something like this in Rust.  I read about something like that <a href=\"http://smallcultfollowing.com/babysteps/blog/2015/08/20/virtual-structs-part-3-bringing-enums-and-structs-together/#common-fields\" rel=\"nofollow noreferrer\">here</a> but when I tried it, it doesn't seem to have been implemented yet.  Is there any way to do reuse the fields in a struct inside another without separate case handling?</p>\n\n<p>Here is the enum syntax I tried:</p>\n\n<pre><code>enum Top\n{\n    a: i32,\n    A {},\n    B {\n        b: i32\n    }\n}\n</code></pre>\n\n<p>And this is my error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `(`, `,`, `=`, `{`, or `}`, found `:`\n --&gt; src/main.rs:3:6\n  |\n3 |     a: i32,\n  |      ^ expected one of `(`, `,`, `=`, `{`, or `}` here\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=27ef5c590501a0b92168b8324c5017ec&amp;version=nightly\" rel=\"nofollow noreferrer\">Link</a> to some sample execution.</p>\n"}, {"tags": ["rust", "move-semantics"], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 14, "last_activity_date": 1531820338, "last_edit_date": 1531820338, "creation_date": 1513021575, "answer_id": 47760256, "question_id": 47760006, "link": "https://stackoverflow.com/questions/47760006/why-does-the-compiler-not-complain-that-an-iterator-moved-to-a-for-loop-is-immut/47760256#47760256", "title": "Why does the compiler not complain that an iterator moved to a for loop is immutable?", "body": "<blockquote>\n  <p>The book says the for loop took ownership of v1_iter and made it mutable behind the scenes,</p>\n</blockquote>\n\n<p>Exactly, and one can make an even simpler example:</p>\n\n<pre><code>let v = vec![1,2,3];\nlet mut x = v;\nx.push(0);\n</code></pre>\n\n<p>Note that <code>v</code> and <code>x</code> are separate variable bindings: for as long as the variable <code>v</code> retained our 3-element vector, the contract of the variable was that the vector will not be mutated. However, the vector was moved to <code>x</code>, which declares that mutability is acceptable. The same applies to function calls:</p>\n\n<pre><code>fn foo(mut x: Vec&lt;i32&gt;) {\n    x.push(0);\n}\n\nlet v = vec![1,2,3];\nfoo(v);\n</code></pre>\n\n<p>This is safe because only one of the variables owns the vector at any point of its lifetime. Once <code>v</code> was moved to <code>x</code>, <code>v</code> can no longer be used. Likewise, in your code, <code>v1_iter</code> can no longer be used after the for loop.</p>\n\n<blockquote>\n  <p>but can you convert an immutable variable to mutable?</p>\n</blockquote>\n\n<p>Both snippets work because the value was moved to a new variable declared as <code>mut</code>. However, once a variable is declared as immutable (or mutable), that variable stays so for all of its lifetime, and that cannot be changed. So the answer is no, but ownership semantics enable moving values across variables with different mutability guarantees.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><p><a href=\"https://stackoverflow.com/q/28587698/1233251\">What&#39;s the difference between placing &quot;mut&quot; before a variable name and after the &quot;:&quot;?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/q/50124680/1233251\">Why does Rust allow mutation through a reference field using an immutable binding?</a></p></li>\n</ul>\n"}], "owner": {"reputation": 196, "user_id": 7119758, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5878a5823807d87ba772915a02435c40?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammed", "link": "https://stackoverflow.com/users/7119758/mohammed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "accepted_answer_id": 47760256, "answer_count": 1, "score": 9, "last_activity_date": 1531820338, "creation_date": 1513020501, "last_edit_date": 1513091205, "question_id": 47760006, "link": "https://stackoverflow.com/questions/47760006/why-does-the-compiler-not-complain-that-an-iterator-moved-to-a-for-loop-is-immut", "title": "Why does the compiler not complain that an iterator moved to a for loop is immutable?", "body": "<p>I am reading the second edition of the Rust Book and I found the following sample in the iterators section:</p>\n\n<pre><code>let v1 = vec![1, 2, 3];\nlet v1_iter = v1.iter();    \nfor val in v1_iter {\n    println!(\"Got: {}\", val);\n}\n</code></pre>\n\n<p>Why does the compiler not complain that <code>v1_iter</code> is immutable? The book says the for loop took ownership of <code>v1_iter</code> and made it mutable behind the scenes, but can you convert an immutable variable to mutable?</p>\n"}, {"tags": ["generics", "rust"], "answers": [{"tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 3, "last_activity_date": 1513018814, "creation_date": 1513018814, "answer_id": 47759609, "question_id": 47759124, "link": "https://stackoverflow.com/questions/47759124/returning-a-generic-struct-from-new/47759609#47759609", "title": "Returning a generic struct from new", "body": "<p>I think you may be misunderstanding the syntax used to initialise structs - as it stands, your function is trying to set the <code>reader</code> and <code>writer</code> fields of the struct to <code>R</code> and <code>W</code>, not the parameters that you're passing in!</p>\n\n<p>It should look like this:</p>\n\n<pre><code>impl&lt;R, W&gt; Sender&lt;R, W&gt; {\n    pub fn new(reader: R, writer: W) -&gt; Sender&lt;R, W&gt; {\n        Sender {\n            reader: reader, // field name on the left, value on the right\n            writer: writer,\n        }\n    }\n}\n</code></pre>\n\n<p>Because the struct field and your parameters have the same names, <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1682-field-init-shorthand.md\" rel=\"nofollow noreferrer\">you can also use the field init shorthand syntax</a>:</p>\n\n<pre><code>impl&lt;R, W&gt; Sender&lt;R, W&gt; {\n    pub fn new(reader: R, writer: W) -&gt; Sender&lt;R, W&gt; {\n        Sender { reader, writer }\n    }\n}\n</code></pre>\n\n<p>I'd recommend reading <a href=\"https://doc.rust-lang.org/book/second-edition/ch05-01-defining-structs.html\" rel=\"nofollow noreferrer\">Chapter 5 of 'The Rust Programming Language'</a> if you haven't already - it covers all of this stuff.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6467981"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 825, "favorite_count": 0, "accepted_answer_id": 47759609, "answer_count": 1, "score": 2, "last_activity_date": 1513091503, "creation_date": 1513016987, "last_edit_date": 1513091503, "question_id": 47759124, "link": "https://stackoverflow.com/questions/47759124/returning-a-generic-struct-from-new", "title": "Returning a generic struct from new", "body": "<p>I want to return a generic struct. The idea is that I want to have the actual implementation output to STDIN per the standard, but for testing purposes I'd like to substitute it with a vector or something else so I can easily test the output. The solution I have so far is:</p>\n\n<pre><code>#[derive(Debug)]\npub struct Sender&lt;R, W&gt; {\n    pub reader: R,\n    pub writer: W,\n}\n\n#[derive(Debug)]\npub struct Sender&lt;R, W&gt; {\n    pub reader: R,\n    pub writer: W,\n}\n\nimpl&lt;R, W&gt; Sender&lt;R, W&gt; {\n    pub fn new&lt;R, W&gt;(reader: R, writer: W) -&gt; Sender&lt;R, W&gt; {\n        Sender {\n            reader: R,\n            writer: W,\n        }\n    }\n}\n</code></pre>\n\n<p>The errors I'm getting:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0423]: expected value, found type parameter `R`\n  --&gt; src/main.rs:10:21\n   |\n10 |             reader: R,\n   |                     ^ not a value\n\nerror[E0423]: expected value, found type parameter `W`\n  --&gt; src/main.rs:11:21\n   |\n11 |             writer: W,\n   |                     ^ not a value\n\nerror[E0601]: main function not found\n\nerror[E0194]: type parameter `R` shadows another type parameter of the same name\n --&gt; src/main.rs:8:16\n  |\n7 | impl&lt;R, W&gt; Sender&lt;R, W&gt; {\n  |      - first `R` declared here\n8 |     pub fn new&lt;R, W&gt;(reader: R, writer: W) -&gt; Sender&lt;R, W&gt; {\n  |                ^ shadows another type parameter\n\nerror[E0194]: type parameter `W` shadows another type parameter of the same name\n --&gt; src/main.rs:8:19\n  |\n7 | impl&lt;R, W&gt; Sender&lt;R, W&gt; {\n  |         - first `W` declared here\n8 |     pub fn new&lt;R, W&gt;(reader: R, writer: W) -&gt; Sender&lt;R, W&gt; {\n  |                   ^ shadows another type parameter\n</code></pre>\n\n<p>This makes sense to me, it doesn't know the concrete type of <code>R</code>. I figured giving the generic parameters in the function would have solved that though, but that gives this additional error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>34 | impl&lt;R, W&gt; Sender&lt;R, W&gt; {\n   |          - first `R` declared here\n35 |   pub fn new&lt;R, W&gt;(reader: R, writer: W) -&gt; Sender&lt;R, W&gt; {\n   |              ^ shadows another type parameter\n</code></pre>\n\n<p>That doesn't work because <code>new&lt;R, W&gt;</code> declares a <em>different</em> (but same named!) <code>R</code> and <code>W</code>.</p>\n\n<p>Is there a way to do this that doesn't require me to make two different <code>new</code> functions, one for memory read/write and the other for STDIN read/write?</p>\n"}, {"tags": ["macos", "rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 3, "creation_date": 1512997180, "post_id": 47753519, "comment_id": 82467455, "body": "MacOS doesn&#39;t usually display a console at all. How are you launching the application?"}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1512997408, "post_id": 47753519, "comment_id": 82467626, "body": "double click from finder on the file generated by <code>cargo build --release</code>. Mac info says it&#39;s a <code>Unix executable</code>."}], "answers": [{"tags": [], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "is_accepted": true, "score": 1, "last_activity_date": 1513067070, "creation_date": 1513067070, "answer_id": 47768107, "question_id": 47753519, "link": "https://stackoverflow.com/questions/47753519/is-there-an-attribute-like-windows-subsystemwindows-for-macos/47768107#47768107", "title": "Is there an attribute like `#![windows_subsystem(windows)]` for macOS?", "body": "<p>Cargo builds Unix-style executable. </p>\n\n<p>In order to not open the terminal on launch, you have to create an OSX application wrapper, a.k.a <a href=\"https://developer.apple.com/library/content/documentation/CoreFoundation/Conceptual/CFBundles/BundleTypes/BundleTypes.html#//apple_ref/doc/uid/10000123i-CH101-SW1\" rel=\"nofollow noreferrer\">bundle</a>. You could use <a href=\"https://github.com/burtonageo/cargo-bundle\" rel=\"nofollow noreferrer\">cargo-bundle</a> for this need.</p>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 47768107, "answer_count": 1, "score": 0, "last_activity_date": 1513090750, "creation_date": 1512997040, "last_edit_date": 1513090750, "question_id": 47753519, "link": "https://stackoverflow.com/questions/47753519/is-there-an-attribute-like-windows-subsystemwindows-for-macos", "title": "Is there an attribute like `#![windows_subsystem(windows)]` for macOS?", "body": "<p>According to <a href=\"https://blog.rust-lang.org/2017/06/08/Rust-1.18.html\" rel=\"nofollow noreferrer\">this release note</a>, there is a new <code>#![windows_subsystem(windows)]</code> attribute that does not display a console when running a windowed application. It works on Windows and everything is fine.</p>\n\n<p>I don't know what to do to make it work for macOS too. When I launch my app on macOS, it displays a console. Is there a way to hide the console even for a Mac application?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1513007495, "post_id": 47753068, "comment_id": 82474090, "body": "Question to people familiar with the plans for non-lexical lifetimes:  Will this code simply work once NLLs are implemented?  To me it looks like it could."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1513043035, "post_id": 47753068, "comment_id": 82489701, "body": "@SvenMarnach From what I understand of NLLs, yes, this code should simply work."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1514122574, "post_id": 47753068, "comment_id": 82891151, "body": "NLLs have landed in Nightly, and this indeed works out fo the box: <a href=\"https://play.rust-lang.org/?gist=04eaefe9e322e3b959ff7fca62e829f7&amp;version=nightly\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1512998416, "post_id": 47753810, "comment_id": 82468205, "body": "If you wish a <code>drain_filter</code> to be added to <code>VecDeque</code>, the simplest way to get it is to create a RFC to propose it, then implement it. I surmise it should not be too complicated using <code>Vec</code> as an example."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512999165, "post_id": 47753810, "comment_id": 82468675, "body": "@MatthieuM. I know nothing about the processes in Rust. This is not the &quot;simplest&quot; for me. I am far more afraid by the &quot;administrative&quot; side of the thing than technical."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1513001528, "post_id": 47753810, "comment_id": 82470141, "body": "Maybe simplest wasn&#39;t the right word... &quot;quickest&quot; might be better. Another option would be to mention it on IRC and hope someone picks it up. It&#39;s a small enough task that someone wanted to get their toes wet in the Rust standard library could reasonably handle it."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1513001562, "post_id": 47753810, "comment_id": 82470161, "body": "For what its worth, <a href=\"https://github.com/rust-lang/rust/pull/46262\" rel=\"nofollow noreferrer\"><code>drain_filter</code> was added to <code>LinkedList</code> without an RFC</a> (only 2 weeks ago!), so I&#39;d imagine you wouldn&#39;t necessarily need one for this either."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1513002522, "post_id": 47753810, "comment_id": 82470731, "body": "@JoeClay Actually, the RFC has already been already done, it seems: <a href=\"https://github.com/rust-lang/rfcs/issues/2140\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/2140</a>"}, {"owner": {"reputation": 890, "user_id": 5501815, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d0b9c93b5d747f3fe91ba62c21c02fa?s=128&d=identicon&r=PG&f=1", "display_name": "Sebastiaan", "link": "https://stackoverflow.com/users/5501815/sebastiaan"}, "edited": false, "score": 1, "creation_date": 1513002639, "post_id": 47753810, "comment_id": 82470813, "body": "I was hoping not having to use a flag variable, but all in all this is a reasonably clean solution, and hey, it works ;)"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1513003468, "post_id": 47753810, "comment_id": 82471361, "body": "@Boiethios: The issues section of the RFCs repo mainly contains suggestions for RFCs, rather than the RFCs themselves (which are filed as pull requests) - as far as I can tell, nobody took that issue forward as a full RFC."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1516756728, "last_edit_date": 1516756728, "creation_date": 1512998086, "answer_id": 47753810, "question_id": 47753068, "link": "https://stackoverflow.com/questions/47753068/pop-elements-conditional-on-their-content/47753810#47753810", "title": "Pop elements conditional on their content", "body": "<p>You can do it this way:</p>\n\n<pre><code>use std::collections::VecDeque;\n\nfn main() {\n    let mut vec1 = VecDeque::new();\n    vec1.push_back(2.);\n\n    let mut vec2 = VecDeque::new();\n    vec2.push_back(1.);\n\n    loop {\n        let pop_vec1;\n\n        if let (Some(x), Some(y)) = (vec1.front_mut(), vec2.front_mut()) {\n            if x &lt; y {\n                *y -= *x;\n                pop_vec1 = true;\n            } else {\n                *x -= *y;\n                pop_vec1 = false;\n            }\n        } else {\n            break;\n        }\n\n        if pop_vec1 {\n            vec1.pop_front();\n        } else {\n            vec2.pop_front();\n        }\n    }\n\n    assert_eq!(vec2.len(), 0);\n    assert_eq!(vec1.pop_front(), Some(1.));\n}\n</code></pre>\n\n<p>or if you prefer a loop with less lines:</p>\n\n<pre><code>loop {\n    let pop_vec1 = match (vec1.front_mut(), vec2.front_mut()) {\n        (Some(ref x), Some(ref mut y)) if x &lt; y =&gt; { **y -= **x; true },\n        (Some(x), Some(y)) =&gt; { *x -= *y; false },\n        _ =&gt; break,\n    };\n\n    VecDeque::pop_front(if pop_vec1 { &amp;mut vec1 } else { &amp;mut vec2 });\n}\n</code></pre>\n\n<p>Not very elegant, but it works.</p>\n\n<p><code>VecDeque</code> is missing a method <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.drain_filter\" rel=\"nofollow noreferrer\">like <code>Vec::drain_filter</code></a>. Maybe the Rust team will add it.</p>\n"}], "owner": {"reputation": 890, "user_id": 5501815, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d0b9c93b5d747f3fe91ba62c21c02fa?s=128&d=identicon&r=PG&f=1", "display_name": "Sebastiaan", "link": "https://stackoverflow.com/users/5501815/sebastiaan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 1, "accepted_answer_id": 47753810, "answer_count": 1, "score": 4, "last_activity_date": 1516756728, "creation_date": 1512995609, "last_edit_date": 1513091082, "question_id": 47753068, "link": "https://stackoverflow.com/questions/47753068/pop-elements-conditional-on-their-content", "title": "Pop elements conditional on their content", "body": "<p>The borrow-checker is giving me a hard time to find an elegant implementation. Here is a minimal example:</p>\n\n<pre><code>use std::collections::VecDeque;\n\nfn main() {\n    let mut vec1 = VecDeque::new();\n    vec1.push_back(2.);\n\n    let mut vec2 = VecDeque::new();\n    vec2.push_back(1.);\n\n    while let (Some(x), Some(y)) = (vec1.front_mut(), vec2.front_mut()) {\n        if x &lt; y {\n            *y -= *x;\n            vec1.pop_front();\n        } else {\n            *x -= *y;\n            vec2.pop_front();\n        }\n    }\n\n    assert_eq!(vec2.len(), 0);\n    assert_eq!(vec1.pop_front(), Some(1.));\n}\n</code></pre>\n\n<p>This will not compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `vec1` as mutable more than once at a time\n  --&gt; src/main.rs:13:13\n   |\n10 |     while let (Some(x), Some(y)) = (vec1.front_mut(), vec2.front_mut()) {\n   |                                     ---- first mutable borrow occurs here\n...\n13 |             vec1.pop_front();\n   |             ^^^^ second mutable borrow occurs here\n...\n18 |     }\n   |     - first borrow ends here\n\nerror[E0499]: cannot borrow `vec2` as mutable more than once at a time\n  --&gt; src/main.rs:16:13\n   |\n10 |     while let (Some(x), Some(y)) = (vec1.front_mut(), vec2.front_mut()) {\n   |                                                       ---- first mutable borrow occurs here\n...\n16 |             vec2.pop_front();\n   |             ^^^^ second mutable borrow occurs here\n17 |         }\n18 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>The <code>if x &lt; y</code> scope is necessarily nested in <code>x</code> and <code>y</code>'s scope, so how then can I mutate <code>vec1</code>/<code>vec2</code> conditional on their first element?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1512986764, "post_id": 47750234, "comment_id": 82461073, "body": "Matthieu&#39;s answer is correct; this works, because the lifetime-explicit signature of your function is basically <code>fn largest&lt;&#39;a, T: PartialOrd + Clone&gt;(list: &amp;&#39;a [T]) -&gt; &amp;&#39;a T</code>."}, {"owner": {"reputation": 4924, "user_id": 2862719, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yzhk5.png?s=128&g=1", "display_name": "m00am", "link": "https://stackoverflow.com/users/2862719/m00am"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1512988579, "post_id": 47750234, "comment_id": 82462121, "body": "Thank you @ljedrz I will revisit this after the next chapter, but if I infer correctly what is means, then my output shares a lifetime (<code>&#39;a</code>) with the reference to list that I put in (and is available as long as the input is still alive), right?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1512988647, "post_id": 47750234, "comment_id": 82462167, "body": "Yes, precisely."}], "answers": [{"comments": [{"owner": {"reputation": 4924, "user_id": 2862719, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yzhk5.png?s=128&g=1", "display_name": "m00am", "link": "https://stackoverflow.com/users/2862719/m00am"}, "edited": false, "score": 0, "creation_date": 1512988382, "post_id": 47750369, "comment_id": 82462024, "body": "Thank you very much :) This helped me a lot. Also thank you for reminding me that I can use <code>let l: &amp;[T]</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 4924, "user_id": 2862719, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yzhk5.png?s=128&g=1", "display_name": "m00am", "link": "https://stackoverflow.com/users/2862719/m00am"}, "edited": false, "score": 8, "creation_date": 1512988706, "post_id": 47750369, "comment_id": 82462203, "body": "@m00am: For debugging purposes, a useful trick is to use <code>let x: () = ...;</code> and then let the compiler tell you what the type is in the error message."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 8, "last_activity_date": 1512986569, "creation_date": 1512986569, "answer_id": 47750369, "question_id": 47750234, "link": "https://stackoverflow.com/questions/47750234/why-is-this-not-a-dangling-reference/47750369#47750369", "title": "Why is this not a dangling reference?", "body": "<p>Because <code>l</code> does not have the type you think it does:</p>\n\n<pre><code>fn largest&lt;T: PartialOrd&gt;(list: &amp;[T]) -&gt; &amp;T {\n    let l: &amp;[T] = list.clone();\n    let mut largest = &amp;l[0];\n\n    for item in l {\n        if item &gt; &amp;largest {\n            largest = item;\n        }\n    }\n\n    largest\n}\n</code></pre>\n\n<p><code>l</code> is a <em>reference</em> too, cloning a slice actually just returns the slice itself, with the same lifetime.</p>\n\n<p>Therefore it's perfectly fine to take references into the slice, and your return value borrows the original slice.</p>\n"}], "owner": {"reputation": 4924, "user_id": 2862719, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/yzhk5.png?s=128&g=1", "display_name": "m00am", "link": "https://stackoverflow.com/users/2862719/m00am"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 47750369, "answer_count": 1, "score": 3, "last_activity_date": 1513089664, "creation_date": 1512986137, "last_edit_date": 1513089664, "question_id": 47750234, "link": "https://stackoverflow.com/questions/47750234/why-is-this-not-a-dangling-reference", "title": "Why is this not a dangling reference?", "body": "<p>I am following the second edition of the <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\">TRPL book</a> (second edition) and am a little confused by one of the tasks. At the end of <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-02-traits.html#fixing-the-largest-function-with-trait-bounds\" rel=\"nofollow noreferrer\">section 10.2</a> (Traits) I am asked to reimplement the <code>largest</code> function using the <code>Clone</code> trait. (Note that at this point I have not learned anything about lifetimes yet.) I implemented the following</p>\n\n<pre><code>fn largest&lt;T: PartialOrd + Clone&gt;(list: &amp;[T]) -&gt; &amp;T {\n    let l = list.clone();\n    let mut largest = &amp;l[0];\n\n    for item in l {\n        if item &gt; &amp;largest {\n            largest = item;\n        }\n    }\n\n    largest\n}\n</code></pre>\n\n<p>This returns a reference to an item of the cloned list. And, lo and behold, it compiles. Why is this not a dangling reference (as described in <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#dangling-references\" rel=\"nofollow noreferrer\">section 4.2</a>)?</p>\n\n<p>As far as I understand it, <code>largest</code> contains a reference to an item of a  (cloned) copy of <code>list</code>, but should <code>l</code> not go out of scope and thus invalidate the reference after <code>largest</code> has finished?</p>\n"}, {"tags": ["function", "hashmap", "rust"], "answers": [{"comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1512984674, "post_id": 47749630, "comment_id": 82459794, "body": "I would use two separate parameters for the tuple elements. Doesn&#39;t matter if the two elements have the same type, as long as they can both be turned into strings."}, {"owner": {"reputation": 11374, "user_id": 437679, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/ded1c591320cc2be6aa8109d02a74640?s=128&d=identicon&r=PG", "display_name": "Martin Algesten", "link": "https://stackoverflow.com/users/437679/martin-algesten"}, "edited": false, "score": 0, "creation_date": 1512995590, "post_id": 47749630, "comment_id": 82466432, "body": "Magical! Thanks!"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 5, "last_activity_date": 1512984902, "last_edit_date": 1512984902, "creation_date": 1512984049, "answer_id": 47749630, "question_id": 47749437, "link": "https://stackoverflow.com/questions/47749437/how-do-i-declare-a-function-that-accepts-anything-that-can-be-turned-into-hashma/47749630#47749630", "title": "How do I declare a function that accepts anything that can be turned into HashMap&lt;String,String&gt;", "body": "<p>You forgot to pass the <code>Item</code>'s tuple elements as types (as opposed to traits). The following should work:</p>\n\n<pre><code>fn set_map&lt;S: Into&lt;String&gt;, T: Into&lt;String&gt;, I: IntoIterator&lt;Item=(S, T)&gt;&gt;(fields: I) {\n    ...\n}\n</code></pre>\n\n<p>Two different parameters <code>S</code> and <code>T</code> instead of just one allow you to have different <code>Into&lt;String&gt;</code> types in the tuple.</p>\n"}], "owner": {"reputation": 11374, "user_id": 437679, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/ded1c591320cc2be6aa8109d02a74640?s=128&d=identicon&r=PG", "display_name": "Martin Algesten", "link": "https://stackoverflow.com/users/437679/martin-algesten"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 47749630, "answer_count": 1, "score": 2, "last_activity_date": 1513091336, "creation_date": 1512983335, "last_edit_date": 1513091336, "question_id": 47749437, "link": "https://stackoverflow.com/questions/47749437/how-do-i-declare-a-function-that-accepts-anything-that-can-be-turned-into-hashma", "title": "How do I declare a function that accepts anything that can be turned into HashMap&lt;String,String&gt;", "body": "<p>I have a struct that looks like this:</p>\n\n<pre><code>struct Fields {\n    map: HashMap&lt;String, String&gt;\n}\n</code></pre>\n\n<p>For ergonomics, I want a function that accepts both <code>&amp;str</code> and <code>String</code>. I read that <code>HashMap</code> has a trait <code>FromIterator&lt;(K, V)&gt;</code>, so at an abstract level I could work from <em>anything</em> that produces an iterator of pairs that turns into strings. </p>\n\n<p>Analogously, if I want a function that accepts anything that can be turned into a <code>String</code>, I can use the bound <code>T: Into&lt;String&gt;</code>.</p>\n\n<p>Can the same be done for an iterator of pairs that can be turned into strings? Conceptually:</p>\n\n<pre><code>fn set_map&lt;I: IntoIterator&lt;Item=(Into&lt;String&gt;, Into&lt;String&gt;)&gt;&gt;(fields: I) {\n    // ...\n}\n</code></pre>\n\n<p>This errors with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::convert::Into&lt;std::string::String&gt; + 'static: std::marker::Sized` is not satisfied\n --&gt; src/main.rs:1:1\n  |\n1 | / fn set_map&lt;I: IntoIterator&lt;Item = (Into&lt;String&gt;, Into&lt;String&gt;)&gt;&gt;(fields: I) {\n2 | |     // ...\n3 | | }\n  | |_^ `std::convert::Into&lt;std::string::String&gt; + 'static` does not have a constant size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `std::convert::Into&lt;std::string::String&gt; + 'static`\n  = note: only the last element of a tuple may have a dynamically sized type\n\nerror[E0038]: the trait `std::convert::Into` cannot be made into an object\n --&gt; src/main.rs:1:1\n  |\n1 | fn set_map&lt;I: IntoIterator&lt;Item = (Into&lt;String&gt;, Into&lt;String&gt;)&gt;&gt;(fields: I) {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::Into` cannot be made into an object\n  |\n  = note: the trait cannot require that `Self : Sized`\n</code></pre>\n"}, {"tags": ["utf-8", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "edited": false, "score": 0, "creation_date": 1512991969, "post_id": 47751271, "comment_id": 82464224, "body": "As far as I understand it, <code>OsString</code> for Windows is actually backed by <code>Wtf8Buf</code> but the only way to construct that <code>OsString</code> is with <code>from_wide</code>. Some documentation: <a href=\"https://doc.rust-lang.org/nightly/std/ffi/struct.OsString.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nightly/std/ffi/struct.OsString.html</a>  In particular &quot;On Windows, strings are often arbitrary sequences of non-zero 16-bit values, interpreted as UTF-16 when it is valid to do so.&quot;  Tho it&#39;s all very confusing to me. Is the result of <code>OsString::from_wide(vec.as_slice()).into_string().unwrap_err&zwnj;&#8203;()</code> given <code>vec: Vec&lt;u16&gt;</code> generated by your algorithm never a panic?"}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "edited": false, "score": 0, "creation_date": 1512997331, "post_id": 47751271, "comment_id": 82467565, "body": "I&#39;m pretty sure that the generated sequence is not valid UTF-16 (because it contains a surrogate outside a pair); such sequence, when converted to WTF-8, cannot be valid UTF-8 (because the conversions are lossless, and converting UTF-8 back to WTF-16 would end in valid UTF-16 - but lossless means it has to be same as the original invalid UTF-16)."}, {"owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "edited": false, "score": 0, "creation_date": 1513000029, "post_id": 47751271, "comment_id": 82469234, "body": "Right, thanks for clearing that up. Tested it and it seems to work great. Cheers!"}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 1, "last_activity_date": 1512989435, "creation_date": 1512989435, "answer_id": 47751271, "question_id": 47749164, "link": "https://stackoverflow.com/questions/47749164/the-set-of-wtf-8-strings-that-are-ill-formed-utf-8-as-16-bit-slices/47751271#47751271", "title": "The set of WTF-8 strings that are ill-formed UTF-8 as 16-bit slices", "body": "<p>It isn't completely clear to me whether you want to generate a string in <code>WTF-16 \\ UTF-16</code> or <code>WTF-8 \\ UTF-8</code>.  I think generating a WTF-16 string that isn't valid UTF-16 is probably easier, so here it goes:</p>\n\n<p>You need to make sure at least one (16-bit) \"character\" is a surrogate that is not part of a surrogate pair.  (This example might also generate <code>NUL</code> characters in the string.)</p>\n\n<pre><code>extern crate rand;\n\nuse rand::Rng;\n\npub fn gen_wtf16_invalid_utf16&lt;R&gt;(r: &amp;mut R, len: usize) -&gt; Vec&lt;u16&gt;\nwhere\n    R: Rng,\n{\n    assert!(len &gt; 0);\n    let mut buf = Vec::with_capacity(len);\n    for _ in 0..len {\n        buf.push(r.next_u32() as u16);\n    }\n    // make element at position `p` a surrogate that is not part \n    // of a surrogate pair\n    let p = r.gen_range(0, len-1);\n    // if first elem or previous entry is not a leading surrogate\n    let gen_trail = (0 == p) || (0xd800 != buf[p-1] &amp; 0xfc00);\n    // if last element or succeeding entry is not a traililng surrogate\n    let gen_lead = (p == len-1) || (0xdc00 != buf[p+1] &amp; 0xfc00);\n    let (force_bits_mask, force_bits_value) = if gen_trail {\n        if gen_lead {\n            // trailing or leading surrogate\n            (0xf800, 0xd800)\n        } else {\n            // trailing surrogate\n            (0xfc00, 0xdc00)\n        }\n    } else {\n        // leading surrogate\n        debug_assert!(gen_lead);\n        (0xfc00, 0xd800)\n    };\n    debug_assert_eq!(0, (force_bits_value &amp; !force_bits_mask));\n    buf[p] = (buf[p] &amp; !force_bits_mask) | force_bits_value;\n    buf\n}\n\nfn main() {\n    let s = gen_wtf16_invalid_utf16(&amp;mut rand::thread_rng(), 10);\n    for c in &amp;s {\n        println!(\"0x{:04x}\", c);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2204, "user_id": 1063961, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/s9gRK.png?s=128&g=1", "display_name": "Centril", "link": "https://stackoverflow.com/users/1063961/centril"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "accepted_answer_id": 47751271, "answer_count": 1, "score": 3, "last_activity_date": 1512989435, "creation_date": 1512982210, "question_id": 47749164, "link": "https://stackoverflow.com/questions/47749164/the-set-of-wtf-8-strings-that-are-ill-formed-utf-8-as-16-bit-slices", "title": "The set of WTF-8 strings that are ill-formed UTF-8 as 16-bit slices", "body": "<p>I'm trying to define the set of 16-bit slices (Rust: <code>&amp;[u16]</code>) that are valid WTF-8 (when re-encoded), but not valid UTF-8 (when re-encoded), so that I can randomly generate such a slice. This in an effort to generate all the possible <code>std::ffi::OsString</code>s on Windows machines that do not parse into a <code>String</code>.</p>\n\n<p>The conversion <code>&amp;[u16] -&gt; OsString</code> is done via <a href=\"https://doc.rust-lang.org/nightly/std/os/windows/ffi/trait.OsStringExt.html#tymethod.from_wide\" rel=\"nofollow noreferrer\"><code>std::os::windows::ffi::OsStringExt::from_wide</code></a>. This redirects into <code>libstd/sys_common/wtf8.rs</code> which defines the operation as:</p>\n\n<pre><code>/// Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.\n///\n/// This is lossless: calling `.encode_wide()` on the resulting string\n/// will always return the original code units.\npub fn from_wide(v: &amp;[u16]) -&gt; Wtf8Buf {\n    let mut string = Wtf8Buf::with_capacity(v.len());\n    for item in char::decode_utf16(v.iter().cloned()) {\n        match item {\n            Ok(ch) =&gt; string.push_char(ch),\n            Err(surrogate) =&gt; {\n                let surrogate = surrogate.unpaired_surrogate();\n                // Surrogates are known to be in the code point range.\n                let code_point = unsafe {\n                    CodePoint::from_u32_unchecked(surrogate as u32)\n                };\n                // Skip the WTF-8 concatenation check,\n                // surrogate pairs are already decoded by decode_utf16\n                string.push_code_point_unchecked(code_point)\n            }\n        }\n    }\n    string\n}\n</code></pre>\n\n<p>The conversion <code>OsString -&gt; Result&lt;String, Wtf8Buf&gt;</code> is done via <code>into_string</code> in the same file:</p>\n\n<pre><code>/// Consumes the WTF-8 string and tries to convert it to UTF-8.\n///\n/// This does not copy the data.\n///\n/// If the contents are not well-formed UTF-8\n/// (that is, if the string contains surrogates),\n/// the original WTF-8 string is returned instead.\npub fn into_string(self) -&gt; Result&lt;String, Wtf8Buf&gt; {\n    match self.next_surrogate(0) {\n        None =&gt; Ok(unsafe { String::from_utf8_unchecked(self.bytes) }),\n        Some(_) =&gt; Err(self),\n    }\n}\n</code></pre>\n\n<p>With <code>next_surrogate</code> defined as:</p>\n\n<pre><code>#[inline]\nfn next_surrogate(&amp;self, mut pos: usize) -&gt; Option&lt;(usize, u16)&gt; {\n    let mut iter = self.bytes[pos..].iter();\n    loop {\n        let b = *iter.next()?;\n        if b &lt; 0x80 {\n            pos += 1;\n        } else if b &lt; 0xE0 {\n            iter.next();\n            pos += 2;\n        } else if b == 0xED {\n            match (iter.next(), iter.next()) {\n                (Some(&amp;b2), Some(&amp;b3)) if b2 &gt;= 0xA0 =&gt; {\n                    return Some((pos, decode_surrogate(b2, b3)))\n                }\n                _ =&gt; pos += 3\n            }\n        } else if b &lt; 0xF0 {\n            iter.next();\n            iter.next();\n            pos += 3;\n        } else {\n            iter.next();\n            iter.next();\n            iter.next();\n            pos += 4;\n        }\n    }\n}\n</code></pre>\n\n<p>What I want to do is design an algorithm that generates a <code>Vec&lt;u16&gt;</code> such that <code>OsString::from_wide(vec.as_slice()).into_string().unwrap_err()</code> never panics and gives back a <code>OsString</code>. The set of <code>OsString</code>s should of course be maximal and not use a trivial constant.</p>\n\n<p>To do this, and to simplify, we can define two operations:</p>\n\n<ul>\n<li><code>encode_wide : &amp;[u8] -&gt; &amp;[u16]</code></li>\n<li><code>valid_wtf8_invalid_utf8 : () -&gt; Gen&lt;Vec&lt;u8&gt;&gt;</code> where <code>Gen</code> is some sort of monad for generating typed random data.</li>\n</ul>\n\n<p>By mapping the functor given by <code>valid_wtf8_invalid_utf8()</code> with <code>encode_wide</code> we can get <code>Gen&lt;Vec&lt;u16&gt;&gt;</code>, in turn, from this we may get <code>Gen&lt;OsString&gt;</code>.</p>\n\n<p>However - I'm not sure how to define the operations <code>encode_wide</code> and <code>valid_wtf8_invalid_utf8</code>. Is there some more direct approach I can take rather than reversing the logic of the given functions?</p>\n\n<p>Since <code>Gen</code> is held abstract I don't expect to get executable code - but pseudocode or other high level instructions would be neat. Thanks =)</p>\n"}, {"tags": ["struct", "rust", "mutability"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 10, "last_activity_date": 1512978294, "last_edit_date": 1512978294, "creation_date": 1512977887, "answer_id": 47748296, "question_id": 47748091, "link": "https://stackoverflow.com/questions/47748091/how-can-i-make-only-certain-struct-fields-mutable/47748296#47748296", "title": "How can I make only certain struct fields mutable?", "body": "<p>Citing <a href=\"https://doc.rust-lang.org/book/first-edition/structs.html\" rel=\"noreferrer\">The Book</a>:</p>\n\n<blockquote>\n  <p>Rust does not support field mutability at the language level, so you cannot write something like this:</p>\n</blockquote>\n\n<pre><code>struct Point {\n    mut x: i32, // This causes an error.\n    y: i32,\n}\n</code></pre>\n\n<p>You need interior mutability, which is nicely described in <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html#examples\" rel=\"noreferrer\">the standard docs</a>:</p>\n\n<pre><code>use std::cell::Cell; \n\npub struct Test {\n    pub x: Cell&lt;i32&gt;,\n    pub y: i32\n}\n\nfn main() {\n    // note lack of mut:\n    let test = Test {\n        x: Cell::new(1), // interior mutability using Cell\n        y: 0\n    };\n\n    test.x.set(2);\n    assert_eq!(test.x.get(), 2);\n}\n</code></pre>\n\n<p>And, if you wanted to incorporate it in a function:</p>\n\n<pre><code>impl Test {\n    pub fn mutateit(&amp;self) { // note: no mut again\n        self.x.set(self.x.get() + 1);\n    }\n}\n\nfn main() {\n    let test = Test {\n        x: Cell::new(1),\n        y: 0\n    };\n\n    test.mutateit();\n    assert_eq!(test.x.get(), 2);\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6467981"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2884, "favorite_count": 3, "accepted_answer_id": 47748296, "answer_count": 1, "score": 9, "last_activity_date": 1513089431, "creation_date": 1512976801, "last_edit_date": 1513089431, "question_id": 47748091, "link": "https://stackoverflow.com/questions/47748091/how-can-i-make-only-certain-struct-fields-mutable", "title": "How can I make only certain struct fields mutable?", "body": "<p>I have a struct:</p>\n\n<pre><code>pub struct Test {\n    pub x: i32,\n    pub y: i32,\n}\n</code></pre>\n\n<p>I'd like to have a function that mutates this \u2014 easy:</p>\n\n<pre><code>pub fn mutateit(&amp;mut self) {\n    self.x += 1;\n}\n</code></pre>\n\n<p>This makes the entire struct mutable for the duration of the function call of <code>mutateit</code>, correct? I <em>only</em> want to mutate <code>x</code>, and I don't want to mutate <code>y</code>. Is there any way to just mutably borrow <code>x</code>?</p>\n"}, {"tags": ["rust", "command-line-interface", "rust-crates", "clap"], "answers": [{"comments": [{"owner": {"reputation": 1983, "user_id": 939280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/luAYh.jpg?s=128&g=1", "display_name": "Ka\u011fan Kayal", "link": "https://stackoverflow.com/users/939280/ka%c4%9fan-kayal"}, "edited": false, "score": 0, "creation_date": 1512977617, "post_id": 47747444, "comment_id": 82456550, "body": "Thanks for helping, but neither workarounds worked for me. The first one sounds like -h would not work anymore, which is not my intention. The second one doesn&#39;t work at all. I defined .arg(Arg::with_name(&quot;QUESTION_MARK&quot;).short(&quot;?&quot;) but later when I check if it the user entered a ? by calling value_of(&quot;QUESTION_MARK&quot;), it returns None... And even if that would work, after calling .get_matches(), it seems it consumes App and returns clap::ArgMatches, which doesn&#39;t have a sort of print_help function, but only usage(), which is not what I was looking for."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 1983, "user_id": 939280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/luAYh.jpg?s=128&g=1", "display_name": "Ka\u011fan Kayal", "link": "https://stackoverflow.com/users/939280/ka%c4%9fan-kayal"}, "edited": false, "score": 2, "creation_date": 1513042695, "post_id": 47747444, "comment_id": 82489615, "body": "@Ka\u011fanKayal In that case, you might want to fill a new <a href=\"https://github.com/kbknapp/clap-rs/issues\" rel=\"nofollow noreferrer\">issue</a> on Clap&#39;s repository. Basically, what you&#39;re asking for is the ability to define <i>short</i> aliases (the <code>alias</code> functions on <code>Arg</code> only define aliases for the <code>--long</code> option syntax)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 0, "last_activity_date": 1512973292, "creation_date": 1512973292, "answer_id": 47747444, "question_id": 47746869, "link": "https://stackoverflow.com/questions/47746869/is-there-a-way-to-make-clap-treat-the-same-way-as-h/47747444#47747444", "title": "Is there a way to make clap treat -? the same way as -h?", "body": "<p>As of Clap 2.29.0, there's no built-in way to add multiple short names for the same option.</p>\n\n<p><a href=\"https://docs.rs/clap/2.29.0/clap/struct.App.html#method.help_short\" rel=\"nofollow noreferrer\"><code>App::help_short</code></a> lets you override the default <code>-h</code> option for help, but although the function accepts a string, <a href=\"https://github.com/kbknapp/clap-rs/blob/e0f8479e0f6522af24484abc79aee24d60b939d2/src/app/parser.rs#L85-L91\" rel=\"nofollow noreferrer\">it only cares about the first character (after stripping leading dashes)</a>. <a href=\"https://docs.rs/clap/2.29.0/clap/struct.Arg.html#method.short\" rel=\"nofollow noreferrer\"><code>Arg::short</code></a> does <a href=\"https://github.com/kbknapp/clap-rs/blob/e0f8479e0f6522af24484abc79aee24d60b939d2/src/args/arg.rs#L330-L333\" rel=\"nofollow noreferrer\">the same</a>.</p>\n\n<p>You could define the <code>-?</code> option as a separate option, and handle it yourself by calling <a href=\"https://docs.rs/clap/2.29.0/clap/struct.App.html#method.print_help\" rel=\"nofollow noreferrer\"><code>App::print_help</code></a>. This will have the effect of displaying <code>-?</code> separately in the help text, although you can <a href=\"https://docs.rs/clap/2.29.0/clap/struct.Arg.html#method.hidden\" rel=\"nofollow noreferrer\">hide</a> the option.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1516072979, "post_id": 48272830, "comment_id": 83530909, "body": "1 \u2014 Don&#39;t run it through <code>cargo</code>, which does its own command line handling. 2 \u2014 <i>most shells assign a special meaning</i> \u2014 running on bash: <code>.&#47;target&#47;debug&#47;echo -?</code> -&gt; <code>[&quot;.&#47;target&#47;debug&#47;echo&quot;, &quot;-?&quot;]</code>. One shell does, one doesn&#39;t. You&#39;ll need to cite some statistics to claim &quot;most&quot;."}, {"owner": {"reputation": 1354, "user_id": 1074744, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0694d753f7e2b3839c9d4dce5feff668?s=128&d=identicon&r=PG", "display_name": "Tom Barron", "link": "https://stackoverflow.com/users/1074744/tom-barron"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1516113489, "post_id": 48272830, "comment_id": 83551249, "body": "@Shepmaster: Thanks for calling me on my vague claim. I thought I remembered something about &#39;?&#39; being handled weirdly by the shells. I tried to use -? for help, like the OP, many years ago before eventually figuring out what I point out in my update and giving it up. The point is, -? is not a good option to use on Unix-like systems with shells in the Bourne family because of the potential inconsistent behavior due to file name matching."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1516115227, "post_id": 48272830, "comment_id": 83552428, "body": "Using your set of shells and <code>echo -?</code> prints <code>-?</code> in each case on my machine, so your point is that if you have a file starting with a dash, then using <code>-?</code> can cause problems?"}, {"owner": {"reputation": 1354, "user_id": 1074744, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0694d753f7e2b3839c9d4dce5feff668?s=128&d=identicon&r=PG", "display_name": "Tom Barron", "link": "https://stackoverflow.com/users/1074744/tom-barron"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1516126250, "post_id": 48272830, "comment_id": 83559643, "body": "Yes. If you have a file that matches -? (i.e., starts with dash and contains one other character), -? will return the file name, not &#39;-?&#39;. The program can&#39;t control the environment it runs in and -? behaves differently (at least in the set of shells we&#39;re talking about) depending on the contents of the current working directory. So using it as a command line option opens the door to obscure and weird bugs that are hard to figure out."}, {"owner": {"reputation": 1983, "user_id": 939280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/luAYh.jpg?s=128&g=1", "display_name": "Ka\u011fan Kayal", "link": "https://stackoverflow.com/users/939280/ka%c4%9fan-kayal"}, "edited": false, "score": 0, "creation_date": 1516365718, "post_id": 48272830, "comment_id": 83667928, "body": "Thanks for the interesting hints. I have no experiance with zsh. I use a mixture of bash, os-x and the windows 7 terminal. My anti-example is tar. This veteran understands -? and it doesn&#39;t understand -h and I grew up with that;-) My second example is python. It supports both. That shows to me that -? or -h is a preference of the developer. I would like to support both so that."}, {"owner": {"reputation": 1983, "user_id": 939280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/luAYh.jpg?s=128&g=1", "display_name": "Ka\u011fan Kayal", "link": "https://stackoverflow.com/users/939280/ka%c4%9fan-kayal"}, "edited": false, "score": 0, "creation_date": 1516367478, "post_id": 48272830, "comment_id": 83668996, "body": "Actually, to my understanding, the questionmark alone has a special meaning. For example if I have a file called <code>abc</code> and then do <code>ls a?c</code> I get <code>abc</code> as expected. But this doesn&#39;t mean that there is a special meaning for <code>-?</code> When I type <code>ls -?</code> it returns <code>invalid option</code>. In other words, bash passes <code>-?</code> very well to ls. It is just ls, which doesn&#39;t understand the -? option."}, {"owner": {"reputation": 1354, "user_id": 1074744, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0694d753f7e2b3839c9d4dce5feff668?s=128&d=identicon&r=PG", "display_name": "Tom Barron", "link": "https://stackoverflow.com/users/1074744/tom-barron"}, "reply_to_user": {"reputation": 1983, "user_id": 939280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/luAYh.jpg?s=128&g=1", "display_name": "Ka\u011fan Kayal", "link": "https://stackoverflow.com/users/939280/ka%c4%9fan-kayal"}, "edited": false, "score": 0, "creation_date": 1516469136, "post_id": 48272830, "comment_id": 83704744, "body": "@Ka\u011fanKayal: In bash on Mac OS X, if I do &quot;touch -- -a; ls -?&quot; I get the same output as &quot;ls -a&quot;. (If you want to remove the &#39;-a&#39; file, you can do &#39;rm -- -a&#39;.)"}], "tags": [], "owner": {"reputation": 1354, "user_id": 1074744, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0694d753f7e2b3839c9d4dce5feff668?s=128&d=identicon&r=PG", "display_name": "Tom Barron", "link": "https://stackoverflow.com/users/1074744/tom-barron"}, "is_accepted": false, "score": -1, "last_activity_date": 1516113266, "last_edit_date": 1516113266, "creation_date": 1516065434, "answer_id": 48272830, "question_id": 47746869, "link": "https://stackoverflow.com/questions/47746869/is-there-a-way-to-make-clap-treat-the-same-way-as-h/48272830#48272830", "title": "Is there a way to make clap treat -? the same way as -h?", "body": "<p>Tried to make this a comment, but it won't fit.</p>\n\n<p>Another issue you're going to run into with this, at least on Unix-like systems, is that most shells assign a special meaning to '?'. I have a Rust program that just prints out the arguments it finds on the command line.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; $ cargo run one two three\n    Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\n     Running `target/debug/cmdl one two three`\n[\"target/debug/cmdl\", \"one\", \"two\", \"three\"]\nargs len: 4\narg: target/debug/cmdl\narg: one\narg: two\narg: three\n</code></pre>\n\n<p>When I pass it <code>-?</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; $ cargo run -?\nzsh: no matches found: -?\n</code></pre>\n\n<p>I can pass in <code>-?</code> if I quote it and put <code>--</code> in front of it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt; $ cargo run -- \"-?\"\n    Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\n     Running `target/debug/cmdl '-?'`\n[\"target/debug/cmdl\", \"-?\"]\nargs len: 2\narg: target/debug/cmdl\narg: -?\n</code></pre>\n\n<p>It seems like that's a bit much to expect of someone looking for help but maybe it's friendlier on the OP's platform. I'm working on Mac OS X.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>Most of the Bourne-based shells on Unix-like systems interpret ? as a globbing wildcard for matching a single character in file names. I don't know about fish but I've checked out /bin/sh, /bin/ksh, /bin/bash, and /bin/zsh below.</p>\n\n<p>If you use -? as a command line option with these shells and there's a filename in the working directory that consists of a hyphen followed by a single character, your program will see the file name rather than the \"-?\" because the shell will do the substitution before the command line ever gets to your program.</p>\n\n<p>Some of the shells (notably zsh) will stumble over -? before even checking files, as noted in my original message.</p>\n\n<p>As shown below, if -? is enclosed in quotes, the shell won't mess with it but that's not something I'd expect most folks to know. I wouldn't even trust myself to remember that when I'm trying to find the help page for a program I'm not familiar with.</p>\n\n<pre><code>$ /bin/sh\n$ ls\n-a      -bb     -ccc    a       bb      ccc\n$ echo -?\n-a\n$ echo ?\na\n$ echo ??\n-a bb\n$ echo \"-?\"\n-?\n\n$ /bin/ksh\n$ ls\n-a      -bb     -ccc    a       bb      ccc\n$ echo ?\na\n$ echo -?\n-a\n$ echo ??\n-a bb\n$ echo \"-?\"\n-?\n\n$ /bin/bash\n$ ls\n-a      -bb     -ccc    a       bb      ccc\n$ echo ?\na\n$ echo -?\n-a\n$ echo ??\n-a bb\n$ echo \"-?\"\n-?\n\n$ /bin/zsh\n$ ls\n-a   -bb  -ccc a    bb   ccc\n$ echo ?\na\n$ echo -?\n-a\n$ echo ??\n-a bb\n$ echo \"-?\"\n-?\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1983, "user_id": 939280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/luAYh.jpg?s=128&g=1", "display_name": "Ka\u011fan Kayal", "link": "https://stackoverflow.com/users/939280/ka%c4%9fan-kayal"}, "is_accepted": true, "score": 1, "last_activity_date": 1516742227, "last_edit_date": 1516742227, "creation_date": 1516741643, "answer_id": 48410827, "question_id": 47746869, "link": "https://stackoverflow.com/questions/47746869/is-there-a-way-to-make-clap-treat-the-same-way-as-h/48410827#48410827", "title": "Is there a way to make clap treat -? the same way as -h?", "body": "<p>I had opened an issue at the <a href=\"https://github.com/kbknapp/clap-rs/issues/1127\" rel=\"nofollow noreferrer\">clap repository</a>. The author / main contributor has answered there. Here is a copy of the code, which answers the question:</p>\n\n<pre><code>extern crate clap;\n\nuse std::env;\nuse std::process;\n\nuse clap::{App, Arg};\n\nfn main() {\n    // We build the App instance and save it, so we can\n    // use it later if needed\n    let mut app = App::new(\"prog\").arg(\n        Arg::with_name(\"help\")\n            .short(\"?\")\n            .help(\"Also prints the help message\"),\n    );\n\n    // We call this method which will do all the\n    //parsing, but not consume our App instance\n    let res = app.get_matches_from_safe_borrow(env::args_os());\n\n    // This calls all the normal clap error messages\n    // if one should exist\n    let matches = res.unwrap_or_else(|e| e.exit());\n\n    // Now we check for ?\n    if matches.is_present(\"help\") {\n        let _ = app.print_help();\n        println!(\"\"); // adds a newline\n        process::exit(0);\n    }\n\n    // Now we can use matches like normal...\n}\n</code></pre>\n"}], "owner": {"reputation": 1983, "user_id": 939280, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/luAYh.jpg?s=128&g=1", "display_name": "Ka\u011fan Kayal", "link": "https://stackoverflow.com/users/939280/ka%c4%9fan-kayal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 459, "favorite_count": 0, "accepted_answer_id": 48410827, "answer_count": 3, "score": 2, "last_activity_date": 1516742227, "creation_date": 1512969676, "last_edit_date": 1513186299, "question_id": 47746869, "link": "https://stackoverflow.com/questions/47746869/is-there-a-way-to-make-clap-treat-the-same-way-as-h", "title": "Is there a way to make clap treat -? the same way as -h?", "body": "<p>The clap crate implements built-in behaviour for the <code>-h</code> option, but it doesn't seem to do the same for <code>-?</code>. Is there a way to tell it to do so?</p>\n"}, {"tags": ["tree", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1512963109, "post_id": 47745883, "comment_id": 82452174, "body": "Related question about the same problem: <a href=\"https://stackoverflow.com/questions/47737084/how-can-i-simultaneously-iterate-over-a-rust-hashmap-and-modify-some-of-its-valu\" title=\"how can i simultaneously iterate over a rust hashmap and modify some of its valu\">stackoverflow.com/questions/47737084/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512964271, "post_id": 47745883, "comment_id": 82452450, "body": "<a href=\"https://play.integer32.com/?gist=ca9dc6d0ed675d3aac7116168b042366&amp;version=stable\" rel=\"nofollow noreferrer\">Yes, it&#39;s possible</a>."}], "answers": [{"comments": [{"owner": {"reputation": 123967, "user_id": 251153, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=128&d=identicon&r=PG", "display_name": "zneak", "link": "https://stackoverflow.com/users/251153/zneak"}, "edited": false, "score": 0, "creation_date": 1512967437, "post_id": 47746193, "comment_id": 82453125, "body": "To be clear, I&#39;m not stuck at finding the root node; I made a set of every node name and every child node name and computed the difference to get the root (the root being the only node that is not a child of anything else)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1512964286, "creation_date": 1512964286, "answer_id": 47746193, "question_id": 47745883, "link": "https://stackoverflow.com/questions/47745883/how-can-i-deserialize-a-tree-of-references-in-rust/47746193#47746193", "title": "How can I deserialize a tree of references in Rust?", "body": "<p>It's easier to model a tree using owned values rather than immutable references: a node owns its immediate children. However, since the objective of problem 7 is to <em>find</em> the root node, it's probably not the best option.</p>\n\n<p>The primary solution for solving the problem of conflicting borrows is to defer borrow checking to runtime by using <a href=\"https://doc.rust-lang.org/stable/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>.</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::collections::HashMap;\n\nstruct Program {\n    name: String,\n    children: Vec&lt;String&gt;,\n}\n\nstruct ProgramNode&lt;'a&gt; {\n    name: &amp;'a str,\n    children: RefCell&lt;Vec&lt;&amp;'a ProgramNode&lt;'a&gt;&gt;&gt;,\n}\n\nimpl&lt;'a&gt; ProgramNode&lt;'a&gt; {\n    fn new(input: &amp;'a Program) -&gt; ProgramNode { panic!(); }\n}\n\nfn parse_programs() -&gt; Vec&lt;Program&gt; { panic!(); }\n\nfn main() {\n    let programs = parse_programs();\n\n    let mut program_nodes = HashMap::new();\n    for program in &amp;programs {\n        program_nodes.insert(&amp;program.name, ProgramNode::new(&amp;program));\n    }\n\n    for program in &amp;programs {\n        let mut program_node = program_nodes.get(&amp;program.name).unwrap();\n        for child in &amp;program.children {\n            program_node.children.borrow_mut().push(&amp;program_nodes.get(&amp;child).unwrap());\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513090179, "post_id": 47752066, "comment_id": 82511789, "body": "If you have parent pointers, you no longer have a tree, you have a <i>graph</i>. This idea of using indices is the design behind <a href=\"https://crates.io/crates/petgraph\" rel=\"nofollow noreferrer\">petgraph</a>."}], "tags": [], "owner": {"reputation": 868, "user_id": 4051512, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/8bd3beb8e3334400c9d43118b2206a62?s=128&d=identicon&r=PG&f=1", "display_name": "papagaga", "link": "https://stackoverflow.com/users/4051512/papagaga"}, "is_accepted": false, "score": 0, "last_activity_date": 1513089997, "last_edit_date": 1513089997, "creation_date": 1512992055, "answer_id": 47752066, "question_id": 47745883, "link": "https://stackoverflow.com/questions/47745883/how-can-i-deserialize-a-tree-of-references-in-rust/47752066#47752066", "title": "How can I deserialize a tree of references in Rust?", "body": "<p>I found it easier to implement certain tree-like objects in Rust as vectors of nodes.</p>\n\n<p>Each node has an id, which is its position in the vector, and this id is used as a pointer.</p>\n\n<pre><code>struct Node {\n    parent: usize,\n    children: Vec&lt;usize&gt;,\n}\n</code></pre>\n\n<p>Root is trivially at position 0.</p>\n\n<p>Whenever you create a <code>Node</code> by pushing it onto the tree-vector, the tree-vector returns its length prior to the insertion as an id for the new <code>Node</code>.</p>\n\n<p>If you also need to delete nodes, you have to refine the implementation a bit.</p>\n"}], "owner": {"reputation": 123967, "user_id": 251153, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=128&d=identicon&r=PG", "display_name": "zneak", "link": "https://stackoverflow.com/users/251153/zneak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 193, "favorite_count": 0, "accepted_answer_id": 47746193, "answer_count": 2, "score": 1, "last_activity_date": 1513089997, "creation_date": 1512961370, "last_edit_date": 1512963481, "question_id": 47745883, "link": "https://stackoverflow.com/questions/47745883/how-can-i-deserialize-a-tree-of-references-in-rust", "title": "How can I deserialize a tree of references in Rust?", "body": "<p>I started using Rust yesterday for this year's Advent of Code. Challenge 7 has you parse a tree structure from a text file. Inputs look like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>root -&gt; child1, child2\nchild1 -&gt; child3\nchild2\nchild3\n</code></pre>\n\n<p>This format represents a tree that starts at \"root\"; \"root\" has two children (\"child1\" and \"child2\"), and \"child1\" has one child (\"child3\"). \"child2\" and \"child3\" have no children. The site will never send you input that has cycles.</p>\n\n<p>Parsing is not a problem but I'm having trouble building the tree structure.</p>\n\n<p>If this were C++, I'd write this:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>struct Program {\n    string name;\n    vector&lt;string&gt; children;\n};\n\nstruct ProgramNode {\n    string&amp; name;\n    vector&lt;ProgramNode*&gt; children;\n\n    ProgramNode(string&amp; name);\n};\n\nvector&lt;Program&gt; programs = parse_programs();\nunordered_map&lt;string, ProgramNode&gt; program_nodes;\nfor (Program&amp; program : programs) {\n    program_nodes.emplace(program.name, ProgramNode(program.name));\n}\n\nfor (Program&amp; program : programs) {\n    ProgramNode&amp; node = program_nodes.at(program.name);\n    for (string&amp; child : program.children) {\n        node.children.push_back(&amp;program_nodes.at(child));\n    }\n}\n</code></pre>\n\n<p>This builds a map of name to \"program\" in a first step, and in a second step it fills in the references to \"child programs\". This is safe if you assume that <code>program_map</code> doesn't outlive <code>programs</code>. Then, if you know the name of the root node, you can do <code>ProgramNode&amp; root = program_nodes.at(root_name)</code> and play with your tree.</p>\n\n<p>I'm trying to write the same thing in Rust, but I'm having issues with the borrow checker. So far I have something like this (with uninteresting details <code>panic</code>'d out):\n    use std::collections::HashMap;</p>\n\n<pre><code>struct Program {\n    name: String,\n    children: Vec&lt;String&gt;,\n}\n\nstruct ProgramNode&lt;'a&gt; {\n    name: &amp;'a str,\n    children: Vec&lt;&amp;'a ProgramNode&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; ProgramNode&lt;'a&gt; {\n    fn new(input: &amp;'a Program) -&gt; ProgramNode {\n        panic!();\n    }\n}\n\nfn parse_programs() -&gt; Vec&lt;Program&gt; {\n    panic!();\n}\n\nfn main() {\n    let programs = parse_programs();\n\n    let mut program_nodes = HashMap::new();\n    for program in &amp;programs {\n        program_nodes.insert(&amp;program.name, ProgramNode::new(&amp;program));\n    }\n\n    for program in &amp;programs {\n        let mut program_node = program_nodes.get_mut(&amp;program.name).unwrap();\n        for child in &amp;program.children {\n            program_node\n                .children\n                .push(&amp;program_nodes.get_mut(&amp;child).unwrap());\n        }\n    }\n}\n</code></pre>\n\n<p>This doesn't build: the borrow checker is Very Unhappy that I'm trying to double-borrow as mutable from the loop that builds the tree.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:36:63\n   |\n36 |                 .push(&amp;program_nodes.get_mut(&amp;child).unwrap());\n   |                        -------------------------------------- ^ temporary value dropped here while still borrowed\n   |                        |\n   |                        temporary value created here\n...\n39 | }\n   | - temporary value needs to live until here\n   |\n   = note: consider using a `let` binding to increase its lifetime\n\nerror[E0499]: cannot borrow `program_nodes` as mutable more than once at a time\n  --&gt; src/main.rs:32:32\n   |\n32 |         let mut program_node = program_nodes.get_mut(&amp;program.name).unwrap();\n   |                                ^^^^^^^^^^^^^ second mutable borrow occurs here\n...\n36 |                 .push(&amp;program_nodes.get_mut(&amp;child).unwrap());\n   |                        ------------- first mutable borrow occurs here\n...\n39 | }\n   | - first borrow ends here\n\nerror[E0499]: cannot borrow `program_nodes` as mutable more than once at a time\n  --&gt; src/main.rs:36:24\n   |\n32 |         let mut program_node = program_nodes.get_mut(&amp;program.name).unwrap();\n   |                                ------------- first mutable borrow occurs here\n...\n36 |                 .push(&amp;program_nodes.get_mut(&amp;child).unwrap());\n   |                        ^^^^^^^^^^^^^ second mutable borrow occurs here\n37 |         }\n38 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>Of course, the borrow checker is absolutely correct. Which leads me to the question: is what I'm trying to do possible at all?</p>\n"}, {"tags": ["rust", "cygwin", "gnu"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513090518, "post_id": 47763272, "comment_id": 82511998, "body": "<i>I had to include libntdll.a in the repo</i> \u2014 that seems like an extremely brittle solution."}, {"owner": {"reputation": 410, "user_id": 1612915, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/EpMS1.png?s=128&g=1", "display_name": "mattmc", "link": "https://stackoverflow.com/users/1612915/mattmc"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513123550, "post_id": 47763272, "comment_id": 82528459, "body": "Any other ideas @Shepmaster?"}], "tags": [], "owner": {"reputation": 410, "user_id": 1612915, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/EpMS1.png?s=128&g=1", "display_name": "mattmc", "link": "https://stackoverflow.com/users/1612915/mattmc"}, "is_accepted": true, "score": 2, "last_activity_date": 1513035987, "creation_date": 1513035987, "answer_id": 47763272, "question_id": 47744477, "link": "https://stackoverflow.com/questions/47744477/linking-ntdll-in-rust-application-using-cygwin-while-targeting-x86-64-pc-windows/47763272#47763272", "title": "Linking NTDLL in Rust application using Cygwin while targeting x86_64-pc-windows-gnu", "body": "<p>I figured out how to do it by looking at the <a href=\"https://github.com/retep998/winapi-rs\" rel=\"nofollow noreferrer\">winapi crate repository</a>.</p>\n\n<p>Since, 0.2.8 of the crate doesn't support the RtlGetVersion() DLL function, I had to include libntdll.a in the repo. Once that's was done, I had to create a custom build script to include the source path of the library.</p>\n\n<p>```</p>\n\n<pre><code>/// build.rs\n/// Run custom functionality when a build executes\nfn main() {\n    use std::env::var;\n    use std::path::Path;\n\n    // When targeting x86_64-pc-windows-gnu, we need to include the DLL libraries\n    // found in the lib/x86_64 directory\n    if var(\"TARGET\").map(|target| target == \"x86_64-pc-windows-gnu\").unwrap_or(false) {\n        let dir = var(\"CARGO_MANIFEST_DIR\").unwrap();\n        println!(\"cargo:rustc-link-search=native={}\", Path::new(&amp;dir).join(\"lib/x86_64\").display());\n    }\n\n    // When targeting i686-pc-windows-gnu, we need to include the DLL libraries\n    // found in the lib/i686 directory\n    if var(\"TARGET\").map(|target| target == \"i686-pc-windows-gnu\").unwrap_or(false) {\n        let dir = var(\"CARGO_MANIFEST_DIR\").unwrap();\n        println!(\"cargo:rustc-link-search=native={}\", Path::new(&amp;dir).join(\"lib/i686\").display());\n    }\n}\n</code></pre>\n\n<p>```</p>\n"}, {"tags": [], "owner": {"reputation": 482, "user_id": 5286593, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-TEsNm6kITnY/AAAAAAAAAAI/AAAAAAAAAPA/fyrLkdEoX40/photo.jpg?sz=128", "display_name": "AldaronLau", "link": "https://stackoverflow.com/users/5286593/aldaronlau"}, "is_accepted": false, "score": 0, "last_activity_date": 1615683320, "creation_date": 1615683320, "answer_id": 66620059, "question_id": 47744477, "link": "https://stackoverflow.com/questions/47744477/linking-ntdll-in-rust-application-using-cygwin-while-targeting-x86-64-pc-windows/66620059#66620059", "title": "Linking NTDLL in Rust application using Cygwin while targeting x86_64-pc-windows-gnu", "body": "<p>The ntdll.dll file is not on the path by default for the GNU windows target, so you can add it by writing the following in a build.rs file:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    println!(r&quot;cargo:rustc-link-search=C:\\windows\\system32&quot;);\n}\n</code></pre>\n"}], "owner": {"reputation": 410, "user_id": 1612915, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/EpMS1.png?s=128&g=1", "display_name": "mattmc", "link": "https://stackoverflow.com/users/1612915/mattmc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 338, "favorite_count": 1, "accepted_answer_id": 47763272, "answer_count": 2, "score": 1, "last_activity_date": 1615683320, "creation_date": 1512947633, "last_edit_date": 1512948166, "question_id": 47744477, "link": "https://stackoverflow.com/questions/47744477/linking-ntdll-in-rust-application-using-cygwin-while-targeting-x86-64-pc-windows", "title": "Linking NTDLL in Rust application using Cygwin while targeting x86_64-pc-windows-gnu", "body": "<p>I opened a pull request in <a href=\"https://github.com/DarkEld3r/os_info/pull/45\" rel=\"nofollow noreferrer\">DarkEld3r's os_info repository</a> to retrieve the actual Windows version and edition name.</p>\n\n<p>The application needs to link to ntdll.dll in order to use <a href=\"https://msdn.microsoft.com/en-us/library/mt723418(v=vs.85).aspx\" rel=\"nofollow noreferrer\"><code>RtlGetVersion()</code></a>. The DLL is linked correctly when the target is set to <code>x86_64-pc-windows-msvc</code> while using Cygwin and the normal Windows console. When the target is <code>x86_64-pc-windows-gnu</code>, <a href=\"https://ci.appveyor.com/project/DarkEld3r/os-info/build/1.0.152/job/tnnwdbqa5251a417\" rel=\"nofollow noreferrer\">the linker returns an error</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Running `rustc --crate-name print_version examples\\print_version.rs --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=ec9720acb7c740b3 -C extra-filename=-ec9720acb7c740b3 --out-dir C:\\projects\\os-info\\target\\debug\\examples -L dependency=C:\\projects\\os-info\\target\\debug\\deps --extern kernel32=C:\\projects\\os-info\\target\\debug\\deps\\libkernel32-beacffc979f26c46.rlib --extern user32=C:\\projects\\os-info\\target\\debug\\deps\\libuser32-fbb28ae30109687c.rlib --extern winapi=C:\\projects\\os-info\\target\\debug\\deps\\libwinapi-bb7af3f2a31ea235.rlib --extern os_info=C:\\projects\\os-info\\target\\debug\\deps\\libos_info-c5887b186deb8679.rlib`\nerror: linking with `gcc` failed: exit code: 1\n  |\n  = note: \"gcc\" \"-Wl,--enable-long-section-names\" \"-fno-use-linker-plugin\" \"-Wl,--nxcompat\" \"-nostdlib\" \"-m64\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\crt2.o\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\rsbegin.o\" \"-L\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version0.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version1.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version10.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version11.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version12.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version2.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version3.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version4.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version5.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version6.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version7.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version8.rust-cgu.o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.print_version9.rust-cgu.o\" \"-o\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.exe\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\examples\\\\print_version-ec9720acb7c740b3.crate.allocator.rust-cgu.o\" \"-Wl,--gc-sections\" \"-nodefaultlibs\" \"-L\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\deps\" \"-L\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\" \"-Wl,-Bstatic\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\deps\\\\libos_info-c5887b186deb8679.rlib\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\deps\\\\libkernel32-beacffc979f26c46.rlib\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\deps\\\\libuser32-fbb28ae30109687c.rlib\" \"C:\\\\projects\\\\os-info\\\\target\\\\debug\\\\deps\\\\libwinapi-bb7af3f2a31ea235.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\libstd-60d4a252bdda9250.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\libpanic_unwind-0b63e20460046692.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\libunwind-7daa32005d584d8a.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\liblibc-49ff25caaa6e945f.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\liballoc_system-a05404e5e059417a.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\liballoc-f824a78e715239af.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\libstd_unicode-2abaea46f194a6e1.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\librand-81cbf6f1d5a19206.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\libcore-f2bd2d524c6ace24.rlib\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\libcompiler_builtins-c6139fac5e899293.rlib\" \"-Wl,-Bdynamic\" \"-l\" \"ntdll\" \"-l\" \"kernel32\" \"-l\" \"user32\" \"-l\" \"advapi32\" \"-l\" \"ws2_32\" \"-l\" \"userenv\" \"-l\" \"shell32\" \"-Wl,-Bstatic\" \"-l\" \"gcc_eh\" \"-l\" \"pthread\" \"-Wl,-Bdynamic\" \"-lmingwex\" \"-lmingw32\" \"-lgcc\" \"-lmsvcrt\" \"-luser32\" \"-lkernel32\" \"C:\\\\Users\\\\appveyor\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-gnu\\\\lib\\\\rustlib\\\\x86_64-pc-windows-gnu\\\\lib\\\\rsend.o\"\n  = note: ld: cannot find -lntdll\n</code></pre>\n\n<p>NTDLL.DLL is linked <a href=\"https://github.com/mattmccarty/os_info/blob/f066a67533aa49fb05499274b44d84dceb442af1/src/windows/version.rs\" rel=\"nofollow noreferrer\">on line 12 of this file</a>.</p>\n\n<p>I haven't found any questions regarding linking to NTDLL. I found <a href=\"https://stackoverflow.com/questions/40833078/how-do-i-specify-the-linker-path-in-rust\">How do I specify the linker path in Rust?</a>, but that solution didn't work for me either. I found the \"libntdll.a\" library in the <code>/usr/lib/w32api</code> directory of Cygwin, but it seems like GCC isn't using it.</p>\n\n<p>Is there any way to get this to work on Windows while targeting GNU, or am I forced to use the MSVC target when linking system DLLs?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512944747, "post_id": 47744068, "comment_id": 82448341, "body": "<a href=\"https://play.integer32.com/?gist=4303a118a8ef278959c3bfc8fecd4f1e&amp;version=stable\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>."}], "owner": {"reputation": 33, "user_id": 2838980, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19ea6efa2a774bc7006c36b0825a774b?s=128&d=identicon&r=PG&f=1", "display_name": "user2838980", "link": "https://stackoverflow.com/users/2838980/user2838980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 14, "favorite_count": 0, "closed_date": 1512944524, "answer_count": 0, "score": 1, "last_activity_date": 1512944561, "creation_date": 1512944253, "last_edit_date": 1512944561, "question_id": 47744068, "link": "https://stackoverflow.com/questions/47744068/weird-borrow-checker-error", "closed_reason": "Duplicate", "title": "Weird borrow checker error", "body": "<p>The following code won't compile:</p>\n\n<pre><code>fn test&lt;'a&gt;(index: usize, v: &amp;'a mut Vec&lt;i32&gt;) -&gt; Option&lt;&amp;'a i32&gt; {\n    {\n        let t = v.get(index);\n        if t.is_some() {\n            return t\n        }\n        //return t\n    }\n    v.insert(index, index as i32 + 1);\n    v.get(index)\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*v` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:9:5\n   |\n3  |         let t = v.get(index);\n   |                 - immutable borrow occurs here\n...\n9  |     v.insert(index, index as i32 + 1);\n   |     ^ mutable borrow occurs here\n10 |     v.get(index)\n11 | }\n   | - immutable borrow ends here\n</code></pre>\n\n<p>I thought this code would be fine because the immutable borrow occurs in an inner block. What's weird is that if I remove the if-clause and just return \"t\" in the inner block then the code compiles fine.</p>\n\n<p>Am I missing something here? I am using Rust 1.22.1 on Linux.</p>\n"}, {"tags": ["iterator", "rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512944026, "post_id": 47743955, "comment_id": 82448147, "body": "<a href=\"https://play.integer32.com/?gist=fc701f49172707948c5c8d118fc2f1c9&amp;version=stable\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>."}, {"owner": {"reputation": 11, "user_id": 2031981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b1bad23b990257038d81b073e3139ef9?s=128&d=identicon&r=PG", "display_name": "Anthony", "link": "https://stackoverflow.com/users/2031981/anthony"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512946408, "post_id": 47743955, "comment_id": 82448782, "body": "The code you just linked doesn&#39;t compile. It&#39;s clearer why I guess."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512946566, "post_id": 47743955, "comment_id": 82448825, "body": "That&#39;s correct, you still have other issues that prevent your code from compiling, but the duplicate solves the problem you asked about. Notably, see <a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a>"}], "owner": {"reputation": 11, "user_id": 2031981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b1bad23b990257038d81b073e3139ef9?s=128&d=identicon&r=PG", "display_name": "Anthony", "link": "https://stackoverflow.com/users/2031981/anthony"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 17, "favorite_count": 0, "closed_date": 1512943952, "answer_count": 0, "score": 0, "last_activity_date": 1512943614, "creation_date": 1512943395, "last_edit_date": 1512943614, "question_id": 47743955, "link": "https://stackoverflow.com/questions/47743955/resolving-a-lifetime-issue-when-attempting-to-use-fold-on-a-vector-of-struct-ref", "closed_reason": "Duplicate", "title": "Resolving a lifetime issue when attempting to use fold on a vector of struct references with lifetimes", "body": "<p>I'm trying to create a parser combinator. I defined a trait and an <code>Or</code> parser:</p>\n\n<pre><code>trait Parser&lt;'a&gt; {\n    fn run(&amp;self, input: &amp;'a str) -&gt; (Option&lt;&amp;'a str&gt;, &amp;'a str);\n}\n\ntrait Parser&lt;'a&gt; {\n    fn run(&amp;self, input: &amp;'a str) -&gt; (Option&lt;&amp;'a str&gt;, &amp;'a str);\n}\n\npub struct Or&lt;'a&gt; {\n    p1: &amp;'a Parser&lt;'a&gt;,\n    p2: &amp;'a Parser&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; Parser&lt;'a&gt; for Or&lt;'a&gt; {\n    fn run(&amp;self, input: &amp;'a str) -&gt; (Option&lt;&amp;'a str&gt;, &amp;'a str) {\n        let (result, remainder) = self.p1.run(input);\n        match result {\n            Some(r) =&gt; (result, remainder),\n            None =&gt; self.p2.run(input),\n        }\n    }\n}\n\nimpl&lt;'a&gt; Or&lt;'a&gt; {\n    fn new(p1: &amp;'a Parser&lt;'a&gt;, p2: &amp;'a Parser&lt;'a&gt;) -&gt; Or&lt;'a&gt; {\n        Or { p1, p2 }\n    }\n}\n</code></pre>\n\n<p>Now I want to define a <code>Choice</code> parser which should iterate through a vector of parsers and return a result if any of them are successful:</p>\n\n<pre><code>pub struct Choice&lt;'a&gt; {\n    parsers: &amp;'a Vec&lt;&amp;'a Parser&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Choice&lt;'a&gt; {\n    fn new(parsers: &amp;'a Vec&lt;&amp;'a Parser&lt;'a&gt;&gt;) -&gt; Choice&lt;'a&gt; {\n        Choice { parsers }\n    }\n}\n\nimpl&lt;'a&gt; Parser&lt;'a&gt; for Choice&lt;'a&gt; {\n    fn run(&amp;self, input: &amp;'a str) -&gt; (Option&lt;&amp;'a str&gt;, &amp;'a str) {\n        let parser: &amp;Parser = self.parsers\n            .iter()\n            .fold(&amp;AlwaysFails::new(), |sum, p2| &amp;Or::new(sum, p2));\n        parser.run(input)\n    }\n}\n</code></pre>\n\n<p><code>AlwaysFails</code> is a parser which always returns a tuple of <code>(None, input)</code>:</p>\n\n<pre><code>pub struct AlwaysFails;\n\nimpl AlwaysFails {\n    fn new() -&gt; Self {\n        AlwaysFails\n    }\n}\n\nimpl&lt;'a&gt; Parser&lt;'a&gt; for AlwaysFails {\n    fn run(&amp;self, input: &amp;'a str) -&gt; (Option&lt;&amp;'a str&gt;, &amp;'a str) {\n        (None, input)\n    }\n}\n</code></pre>\n\n<p>I am getting the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;Parser&lt;'a&gt;: Parser&lt;'_&gt;` is not satisfied\n  --&gt; src/main.rs:40:64\n   |\n40 |             .fold(&amp;AlwaysFails::new(), |sum, p2| &amp;Or::new(sum, p2));\n   |                                                                ^^ the trait `Parser&lt;'_&gt;` is not implemented for `&amp;Parser&lt;'a&gt;`\n   |\n   = note: required for the cast to the object type `Parser&lt;'_&gt;`\n</code></pre>\n"}, {"tags": ["rust", "webassembly"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1512942991, "last_edit_date": 1512942991, "creation_date": 1512942594, "answer_id": 47743817, "question_id": 47743705, "link": "https://stackoverflow.com/questions/47743705/error-loading-target-specification-when-building-a-webassembly-module-with-car/47743817#47743817", "title": "&quot;Error loading target specification&quot; when building a WebAssembly module with Cargo", "body": "<p>As the <code>wasm32-unknown-unknown</code> target has only recently been added to Rust, it's only available in the nightly toolchain. You have to specify that you wish to use the nightly toolchain:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo +nightly build --release --target wasm32-unknown-unknown\n#     ^^^^^^^^\n</code></pre>\n\n<p>You were already doing this when calling <code>rustc</code> directly:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc +nightly --target wasm32-unknown-unknown -O src/main.rs\n#     ^^^^^^^^\n</code></pre>\n\n<hr>\n\n<p>It's probably easier if you:</p>\n\n<ol>\n<li><p>Use a toolchain <em>override</em> in your project directory:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup override set nightly\n</code></pre></li>\n<li><p>Set a default target in your project's <code>.cargo/config</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[build]\ntarget = \"wasm32-unknown-unknown\"\n</code></pre></li>\n</ol>\n\n<p>Then you can just <code>cargo build --release</code>. (It's recommended to avoid debug mode for now).</p>\n"}], "owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 637, "favorite_count": 0, "accepted_answer_id": 47743817, "answer_count": 1, "score": 1, "last_activity_date": 1512942991, "creation_date": 1512941708, "last_edit_date": 1512942703, "question_id": 47743705, "link": "https://stackoverflow.com/questions/47743705/error-loading-target-specification-when-building-a-webassembly-module-with-car", "title": "&quot;Error loading target specification&quot; when building a WebAssembly module with Cargo", "body": "<p>I've constructed a simple Rust app as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo new hello_world --bin\n</code></pre>\n\n<p>I can compile to WebAssembly using the Rust compiler as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc +nightly --target wasm32-unknown-unknown -O src/main.rs\n</code></pre>\n\n<p>I'd like to use Cargo to manage external dependencies, but when I build for the same target using <code>cargo</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo build --release --target wasm32-unknown-unknown\n</code></pre>\n\n<p>It fails as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --release --target wasm32-unknown-unknown\nerror: failed to run `rustc` to learn about target-specific information\n\nCaused by:\n  process didn't exit successfully: `rustc - --crate-name ___ --print=file-names --target wasm32-unknown-unknown --crate-type bin --crate-type rlib` (exit code: 101)\n--- stderr\nerror: Error loading target specification: Could not find specification for target \"wasm32-unknown-unknown\"\n  |\n  = help: Use `--print target-list` for a list of built-in targets\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "edited": false, "score": 0, "creation_date": 1512919741, "post_id": 47739279, "comment_id": 82440817, "body": "Please comment why you downvote my question? I&#39;ve stated my problem precisely, I couldn&#39;t find a duplicate question using Google or Stackoverflow search. I also couldn&#39;t find this in the official docs or the docs of the crate."}], "answers": [{"comments": [{"owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "edited": false, "score": 0, "creation_date": 1512919674, "post_id": 47739609, "comment_id": 82440796, "body": "Thanks, I couldn&#39;t find this in the official documentation anywhere!"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1512916161, "last_edit_date": 1512916161, "creation_date": 1512914578, "answer_id": 47739609, "question_id": 47739279, "link": "https://stackoverflow.com/questions/47739279/how-to-execute-benchmarks-in-rust-cargo-toml/47739609#47739609", "title": "How to execute benchmarks in Rust Cargo.toml", "body": "<p>This crate uses <a href=\"https://github.com/DaGenix/rust-crypto/blob/cc1a5fde1ce957bd1a8a2e30169443cdb4780111/Cargo.toml\" rel=\"nofollow noreferrer\">a feature</a> to enable or disable this benchmarks. <a href=\"https://github.com/DaGenix/rust-crypto/blob/master/src/md5.rs#L291\" rel=\"nofollow noreferrer\">By default they are disabled.</a>\nTo execute benchmarks, you have to explicitly ask for it:</p>\n\n<pre><code>cargo bench --features=with-bench\n</code></pre>\n\n<p>Which for me results with</p>\n\n<pre><code>test result: ok. 0 passed; 0 failed; 115 ignored; 67 measured; 0 filtered out\n</code></pre>\n\n<p>The 115 ignored tests are not bench tests.</p>\n\n<p>If you wish to only run MD5 benchmarks, you can use</p>\n\n<pre><code>cargo bench --features=with-bench -- md5\n</code></pre>\n\n<p>Which results with</p>\n\n<pre><code>test result: ok. 0 passed; 0 failed; 4 ignored; 3 measured; 175 filtered out\n</code></pre>\n"}], "owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 584, "favorite_count": 0, "accepted_answer_id": 47739609, "answer_count": 1, "score": 0, "last_activity_date": 1512916161, "creation_date": 1512912106, "question_id": 47739279, "link": "https://stackoverflow.com/questions/47739279/how-to-execute-benchmarks-in-rust-cargo-toml", "title": "How to execute benchmarks in Rust Cargo.toml", "body": "<p>I'm looking at a rust crate <a href=\"https://github.com/DaGenix/rust-crypto\" rel=\"nofollow noreferrer\"><code>rust-crypto</code></a> right now. There are multiple tests with a bench attribute. When I execute cargo bench, I don't get any benchmark results, it just says all the tests are ignored.</p>\n\n<p>When I google for this I can't find anything. The documentation of the crate also doesn't say how to use these benchmarks.</p>\n\n<p>What would I need to do to execute, e.g. the MD5 benchmarks?</p>\n\n<p>Any pointers would be welcome.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1512929343, "post_id": 47739145, "comment_id": 82443800, "body": "The question marked as duplicate is not an exact duplicate \u2013 it&#39;s about parsing the string into the vector <code>[123, 456, 789]</code> rather than parsing each digit into its own number.  The result desired here is rather unusual \u2013 you could use <code>let nums: Vec&lt;i32&gt; = x.chars().filter_map(|c| c.to_string().parse().ok()).collect();</code>."}, {"owner": {"reputation": 11, "user_id": 9079592, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad5d9eb4a662207504e748a23c4614b7?s=128&d=identicon&r=PG&f=1", "display_name": "T.M", "link": "https://stackoverflow.com/users/9079592/t-m"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1513341654, "post_id": 47739145, "comment_id": 82628032, "body": "True, it was not exact duplicate but it gave I hint to use filter_map. I used  &#180;let nums: Vec&lt;i32&gt; = x         .filter_map(|s| s.parse().ok())         .collect(); &#180;but your answer is also correct. Thank you"}], "owner": {"reputation": 11, "user_id": 9079592, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad5d9eb4a662207504e748a23c4614b7?s=128&d=identicon&r=PG&f=1", "display_name": "T.M", "link": "https://stackoverflow.com/users/9079592/t-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "closed_date": 1512911903, "answer_count": 0, "score": 1, "last_activity_date": 1512911147, "creation_date": 1512911147, "question_id": 47739145, "link": "https://stackoverflow.com/questions/47739145/converting-multiline-string-to-vector-of-integers", "closed_reason": "Duplicate", "title": "Converting multiline string to vector of integers", "body": "<p>What would be the best way to convert multiline string which also contains spaces to a vector of integers so calculations can be made after based on their indexes.</p>\n\n<pre><code>fn main() {\n\n    let x = String::from(\"123 \n    456 \n    789\");\n\n    let nums: Vec&lt;char&gt; = x.chars().collect();\n    println!(\"{:?}\", nums);\n}\n</code></pre>\n\n<p>I have a vector which contains characters, what would be the best way to make a new vector out of it with only digits. </p>\n\n<p>Desired result would be: [1, 2, 3, 4, 5, 6, 7, 8, 9] \n</p>\n\n\n\n\n\n\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512954844, "post_id": 47738547, "comment_id": 82450491, "body": "People usually see this for traits instead of concrete structs, but the solution is the same \u2014 use <code>cargo tree</code> to find the conflicting versions, then restrict the shared crate to a common version."}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 146, "favorite_count": 1, "closed_date": 1512954798, "answer_count": 0, "score": 1, "last_activity_date": 1512906680, "creation_date": 1512906680, "question_id": 47738547, "link": "https://stackoverflow.com/questions/47738547/how-to-find-compatible-versions-of-modules", "closed_reason": "Duplicate", "title": "How to find compatible versions of modules?", "body": "<p>Let a program need two crates: <code>foo</code> and <code>bar</code>, and <code>bar</code> have <code>foo</code> as a dependancy.</p>\n\n<p>If you type:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>foo = \"*\"\nbar = \"*\"\n</code></pre>\n\n<p>in your <code>Cargo.toml</code>, you may have different versions of foo. The compiler sees <code>Foo</code> (version 1) as different from <code>Foo</code> (version 2). How to find the appropriate versions to make the build work?</p>\n\n<p>My <code>Cargo.toml</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>piston_window = \"*\"\npiston2d-opengl_graphics = \"*\"\npistoncore-sdl2_window = \"*\"\nconrod = { version = \"*\", features = [\"piston\"] }\n</code></pre>\n\n<p>My program worked; then I wanted to do an update (because I need some newest things in the crates). I now have this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/view/run_conrod.rs:80:21\n   |\n80 |                     context,\n   |                     ^^^^^^^ expected struct `conrod::backend::piston::draw::Context`, found struct `piston_window::Context`\n   |\n   = note: expected type `conrod::backend::piston::draw::Context`\n              found type `piston_window::Context`\nnote: Perhaps two different versions of crate `graphics` are being used?\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 2031981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b1bad23b990257038d81b073e3139ef9?s=128&d=identicon&r=PG", "display_name": "Anthony", "link": "https://stackoverflow.com/users/2031981/anthony"}, "edited": false, "score": 0, "creation_date": 1512903939, "post_id": 47737849, "comment_id": 82436546, "body": "oh wow, how did I miss that. Every single other set of functions is correct. Thanks very much."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 1, "last_activity_date": 1512901313, "creation_date": 1512901313, "answer_id": 47737849, "question_id": 47737810, "link": "https://stackoverflow.com/questions/47737810/how-do-i-resolve-the-lifetime-issues-in-this-code/47737849#47737849", "title": "How do I resolve the lifetime issues in this code?", "body": "<p><code>Parser</code> in the signature of <code>new</code> needs the <code>'a</code> lifetime parameter:</p>\n\n<pre><code>fn new(parser: &amp;'a Parser&lt;'a&gt;, mapper: F) -&gt; Map&lt;'a, F, I, O&gt;\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 2031981, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b1bad23b990257038d81b073e3139ef9?s=128&d=identicon&r=PG", "display_name": "Anthony", "link": "https://stackoverflow.com/users/2031981/anthony"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 34, "favorite_count": 0, "accepted_answer_id": 47737849, "answer_count": 1, "score": 0, "last_activity_date": 1512901313, "creation_date": 1512900986, "question_id": 47737810, "link": "https://stackoverflow.com/questions/47737810/how-do-i-resolve-the-lifetime-issues-in-this-code", "title": "How do I resolve the lifetime issues in this code?", "body": "<pre><code>pub struct Map&lt;'a, F, I, O&gt;\n    where F: Fn(I) -&gt; O {\n    parser: &amp;'a Parser&lt;'a&gt;,\n    mapper: F,\n    phantomDataI: PhantomData&lt;I&gt;,\n    phantomDataO: PhantomData&lt;O&gt;\n}\n\nimpl&lt;'a, F, I, O&gt; Map&lt;'a, F, I, O&gt; \n    where F: Fn(I) -&gt; O {\n    fn new(parser: &amp;'a Parser, mapper: F) -&gt; Map&lt;'a, F, I, O&gt; {\n        Map { parser, mapper, phantomDataI: PhantomData, phantomDataO: PhantomData }\n    }        \n}\n</code></pre>\n\n<p>When I compile this I get an error...</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n    --&gt; src\\combinator\\mod.rs:123:9\n    |\n123 |         Map { parser, mapper, phantomDataI: PhantomData, phantomDataO: PhantomData }\n    |         ^^^\n    |\nnote: first, the lifetime cannot outlive the lifetime 'a as defined on the impl at 120:1...\n--&gt; src\\combinator\\mod.rs:120:1\n    |\n120 | / impl&lt;'a, F, I, O&gt; Map&lt;'a, F, I, O&gt;\n121 | |     where F: Fn(I) -&gt; O {\n122 | |     fn new(parser: &amp;'a Parser, mapper: F) -&gt; Map&lt;'a, F, I, O&gt; {\n123 | |         Map { parser, mapper, phantomDataI: PhantomData, phantomDataO: PhantomData }\n124 | |     }\n125 | | }\n    | |_^\nnote: ...so that expression is assignable (expected combinator::Map&lt;'a, _, _, _&gt;, found combinator::Map&lt;'_, _, _, _&gt;)\n--&gt; src\\combinator\\mod.rs:123:9\n    |\n123 |         Map { parser, mapper, phantomDataI: PhantomData, phantomDataO: PhantomData }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the anonymous lifetime #1 defined on the method body at 122:5...\n--&gt; src\\combinator\\mod.rs:122:5\n    |\n122 | /     fn new(parser: &amp;'a Parser, mapper: F) -&gt; Map&lt;'a, F, I, O&gt; {\n123 | |         Map { parser, mapper, phantomDataI: PhantomData, phantomDataO: PhantomData }\n124 | |     }\n    | |_____^\nnote: ...so that types are compatible (expected combinator::Parser&lt;'_&gt;, found combinator::Parser&lt;'_&gt;)\n--&gt; src\\combinator\\mod.rs:123:15\n    |\n123 |         Map { parser, mapper, phantomDataI: PhantomData, phantomDataO: PhantomData }\n    |               ^^^^^^\n</code></pre>\n\n<p>I don't understand why this line is occuring</p>\n\n<p>expression is assignable (expected combinator::Map&lt;'a, _, _, <em>>, found combinator::Map&lt;'</em>, _, _, _>)</p>\n\n<p>Do I need to change my lifetime specifiers somehow? </p>\n"}, {"tags": ["rust", "debian"], "comments": [{"owner": {"reputation": 9377, "user_id": 8431111, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GteAE.jpg?s=128&g=1", "display_name": "J_H", "link": "https://stackoverflow.com/users/8431111/j-h"}, "edited": false, "score": 0, "creation_date": 1514763754, "post_id": 47737761, "comment_id": 83063981, "body": "There&#39;s the kernel, and there&#39;s the packages / libraries offered by a distro. I was going off of <code>lsb_release -a</code> reporting <code>Description:\tDebian GNU&#47;Linux 9.3 (stretch)</code>. It could be as simple as their install script looking for hardcoded strings like &quot;ubuntu&quot; and not &quot;debian&quot;. If you poke around perhaps you&#39;ll create a helpful patch."}, {"owner": {"reputation": 367, "user_id": 1805896, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/blcHc.jpg?s=128&g=1", "display_name": "fredmanglis", "link": "https://stackoverflow.com/users/1805896/fredmanglis"}, "reply_to_user": {"reputation": 9377, "user_id": 8431111, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GteAE.jpg?s=128&g=1", "display_name": "J_H", "link": "https://stackoverflow.com/users/8431111/j-h"}, "edited": false, "score": 0, "creation_date": 1514876045, "post_id": 47737761, "comment_id": 83085591, "body": "Eventually, I unistalled the system rustc and installed rustc via GNU Guix, but that is a convoluted process for most people. I did <a href=\"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=884775\" rel=\"nofollow noreferrer\">report the bug</a> so hopefully that gets fixed"}], "answers": [{"tags": [], "owner": {"reputation": 9377, "user_id": 8431111, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GteAE.jpg?s=128&g=1", "display_name": "J_H", "link": "https://stackoverflow.com/users/8431111/j-h"}, "is_accepted": false, "score": 0, "last_activity_date": 1514764044, "last_edit_date": 1592644375, "creation_date": 1514762747, "answer_id": 48046260, "question_id": 47737761, "link": "https://stackoverflow.com/questions/47737761/rust-on-debian-9-2-error-due-to-impure-library/48046260#48046260", "title": "Rust on Debian 9.2 Error due to Impure Library", "body": "<p>Debian 9.3 is current, but that probably matters much less than Debian being tested less than Ubuntu.</p>\n<p>On Ubuntu Xenial the install / compile directions worked fine for me.</p>\n<p>You seem to be bumping into a not-well-documented corner case, where a pair of references are relevant:</p>\n<p><a href=\"https://www.mail-archive.com/guix-commits@gnu.org/msg34510.html\" rel=\"nofollow noreferrer\">https://www.mail-archive.com/guix-commits@gnu.org/msg34510.html</a></p>\n<blockquote>\n<p>... attempt to use impure library, error message</p>\n<p>The wrapper's purpose is to inspect the @code{-L} and @code{-l} switches\npassed to the linker, add corresponding @code{-rpath} arguments, and\ninvoke the actual linker with this new set of arguments.  By default,\nthe linker wrapper refuses to link to libraries outside the store to\nensure ``purity''.  This can be annoying when using the toolchain to\nlink with local libraries.  To allow references to libraries outside the\nstore you need to define the environment variable\n@code{GUIX_LD_WRAPPER_ALLOW_IMPURITIES}.</p>\n</blockquote>\n<p>And this bit of code:</p>\n<p><a href=\"https://lists.gnu.org/archive/html/help-guix/2016-12/msg00040.html\" rel=\"nofollow noreferrer\">https://lists.gnu.org/archive/html/help-guix/2016-12/msg00040.html</a></p>\n<blockquote>\n<p>... for future reference, to hack on a haskell package these are the steps:</p>\n<p>... export GUIX_LD_WRAPPER_ALLOW_IMPURITIES=y ...</p>\n</blockquote>\n<p>If GUIX is even relevant to your situation, then defining that may let you get a bit further in the install process.</p>\n"}], "owner": {"reputation": 367, "user_id": 1805896, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/blcHc.jpg?s=128&g=1", "display_name": "fredmanglis", "link": "https://stackoverflow.com/users/1805896/fredmanglis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 167, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1514764044, "creation_date": 1512900606, "last_edit_date": 1512919878, "question_id": 47737761, "link": "https://stackoverflow.com/questions/47737761/rust-on-debian-9-2-error-due-to-impure-library", "title": "Rust on Debian 9.2 Error due to Impure Library", "body": "<p>I installed Rust using <a href=\"https://doc.rust-lang.org/book/second-edition/ch01-01-installation.html\" rel=\"nofollow noreferrer\">the instructions in the documentation</a> on my Debian 9.2 system and tried to <a href=\"https://doc.rust-lang.org/book/second-edition/ch01-02-hello-world.html\" rel=\"nofollow noreferrer\">compile the hello world example</a>. The compilation failed with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc main.rs --verbose\nerror: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-m64\" \"-L\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"main.main0.rust-cgu.o\" \"main.main1.rust-cgu.o\" \"-o\" \"main\" \"main.crate.allocator.rust-cgu.o\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\" \"-L\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-fe0b1b991511fcaa.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-3d7b10e850a67e89.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-28484309357fd6f1.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_system-751808ba756769d5.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-8cb97051d8238386.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-25cc9b024a02d330.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-d42e80cee81b06ce.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-78c21267a2dc15c1.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-0e1b544c94586415.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-0c5e3d6c117f8c44.rlib\" \"/home/frederick/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-bd7cc5ada1e908e0.rlib\" \"-Wl,-Bdynamic\" \"-l\" \"dl\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"pthread\" \"-l\" \"gcc_s\" \"-l\" \"c\" \"-l\" \"m\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"util\"\n  = note: ld-wrapper: error: attempt to use impure library \"/usr/lib/gcc/x86_64-linux-gnu/6/libgcc_s.so\"\n          collect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>The following is the output of running <code>uname -a</code> on my system</p>\n\n<blockquote>\n  <p>Linux localhost 4.9.0-4-amd64 #1 SMP Debian 4.9.51-1 (2017-09-28)\n  x86_64 GNU/Linux</p>\n</blockquote>\n\n<p>I tried the following searches on google, but cannot seem to find anything useful:</p>\n\n<ul>\n<li>rustc AND ld-wrapper: error: attempt to use impure library</li>\n<li>rustc AND ld-wrapper: error: attempt to use impure library \"/usr/lib/gcc/x86_64-linux-gnu/6/libgcc_s.so\"</li>\n<li>rustc AND error: linking with <code>cc</code> failed: exit code: 1</li>\n</ul>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1512897232, "post_id": 47737084, "comment_id": 82435002, "body": "It seems obvious to me that <code>self.processes</code> is a <code>HashMap&lt;String, Process&gt;</code>."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1512897796, "post_id": 47737084, "comment_id": 82435098, "body": "I&#39;d probably go for <code>Vec&lt;Process&gt;</code>, and use <code>usize</code> as reference to other entries.  Could use a two-pass approach: first build a <code>HashMap&lt;String, usize&gt;</code> and fill <code>name</code> + <code>weight</code>, in the second pass fill <code>children</code> and <code>parent</code>.  Lots of possibilities :)"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1512899873, "post_id": 47737084, "comment_id": 82435535, "body": "@Stefan: meh, I just don&#39;t like to work with incomplete code; I guess it is an ok question to reason about, though."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1512901772, "post_id": 47737084, "comment_id": 82435958, "body": "Another option would be to change the type of <code>parent</code> to <code>RefCell&lt;Option&lt;String&gt;&gt;</code> \u2013 this would allow to change the parent even if you only have a const reference."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1512901882, "post_id": 47737084, "comment_id": 82435979, "body": "Also note that you need to clone the string to copy it from <code>p.name</code> to <code>child.parent</code> \u2013 you can&#39;t move it out of the borrowed context (neither would you want to even if you could)."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 5, "last_activity_date": 1512909168, "last_edit_date": 1512909168, "creation_date": 1512908140, "answer_id": 47738727, "question_id": 47737084, "link": "https://stackoverflow.com/questions/47737084/how-can-i-simultaneously-iterate-over-a-rust-hashmap-and-modify-some-of-its-valu/47738727#47738727", "title": "How can I simultaneously iterate over a Rust HashMap and modify some of its values?", "body": "<p>Yes, you can grant internal mutability to the <code>HashMap</code>'s values using <a href=\"https://doc.rust-lang.org/std/cell/index.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>:</p>\n\n<pre><code>struct ProcessTree {\n    processes: HashMap&lt;String, RefCell&lt;Process&gt;&gt;,  // change #1\n}\n\nimpl ProcessTree {\n    fn update_parents(&amp;self) {\n        for p in self.processes.values() {\n            let p = p.borrow();                    // change #2\n            for child_name in &amp;p.children {\n                let mut child = self.processes\n                    .get(child_name)               // change #3\n                    .expect(\"Child not found.\")\n                    .borrow_mut();                 // change #4\n                child.parent = Some(p.name.clone());\n            }\n        }\n    }\n}\n</code></pre>\n\n<p><code>borrow_mut</code> will panic at runtime if the child is already borrowed with <code>borrow</code>. This happens if a process is its own parent (which should presumably never happen, but in a more robust program you'd want to give a meaningful error message instead of just panicking).</p>\n\n<p>I invented some names and made a few small changes (besides the ones specifically indicated) to make this code compile. Notably, <code>p.name.clone()</code> makes a full copy of <code>p.name</code>. This is necessary because both <code>name</code> and <code>parent</code> are owned <code>String</code>s.</p>\n"}], "owner": {"reputation": 132, "user_id": 943757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a51642da3688707e93f70ed63958974c?s=128&d=identicon&r=PG", "display_name": "Mark Gritter", "link": "https://stackoverflow.com/users/943757/mark-gritter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1859, "favorite_count": 0, "accepted_answer_id": 47738727, "answer_count": 1, "score": 4, "last_activity_date": 1512909168, "creation_date": 1512894018, "last_edit_date": 1512899493, "question_id": 47737084, "link": "https://stackoverflow.com/questions/47737084/how-can-i-simultaneously-iterate-over-a-rust-hashmap-and-modify-some-of-its-valu", "title": "How can I simultaneously iterate over a Rust HashMap and modify some of its values?", "body": "<p>I'm trying Advent of Code in Rust this year, as a way of learning the language. I've parsed the input (from day 7) into the following structure:</p>\n\n<pre><code>struct Process {\n    name: String,\n    weight: u32,\n    children: Vec&lt;String&gt;,\n    parent: Option&lt;String&gt;\n}\n</code></pre>\n\n<p>These are stored in a <code>HashMap&lt;String, Process&gt;</code>.  Now I want to iterate over the values in the map and update the parent values, based on what I find in the parent's \"children\" vector.</p>\n\n<p>What doesn't work is</p>\n\n<pre><code>for p in self.processes.values() {\n    for child_name in p.children {\n        let mut child = self.processes.get_mut(child_name).expect(\"Child not found.\");\n        child.parent = p.name;\n    }\n}\n</code></pre>\n\n<p>I can't have both a mutable reference to the <code>HashMap</code> (<code>self.processes</code>) and a non-mutable reference, or two mutable references.</p>\n\n<p>So, what is the most idiomatic way to accomplish this in Rust?  The two options I can see are:</p>\n\n<ol>\n<li>Copy the parent/child relationships into a new temporary data structure in one pass, and then update the Process structs in a second pass, after the immutable reference is out of scope.</li>\n<li>Change my data structure to put \"parent\" in its own HashMap.</li>\n</ol>\n\n<p>Is there a third option?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 303, "user_id": 3736239, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9c083a66a74c166d019192bc85cc78d8?s=128&d=identicon&r=PG&f=1", "display_name": "stuffy", "link": "https://stackoverflow.com/users/3736239/stuffy"}, "edited": false, "score": 0, "creation_date": 1512884174, "post_id": 47736118, "comment_id": 82432795, "body": "<i>slaps forehead</i> I&#39;ve been writing too much TypeScript and didn&#39;t even notice that. What is the use-case for being able to declare <code>const</code> in a non-global scope?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 303, "user_id": 3736239, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9c083a66a74c166d019192bc85cc78d8?s=128&d=identicon&r=PG&f=1", "display_name": "stuffy", "link": "https://stackoverflow.com/users/3736239/stuffy"}, "edited": false, "score": 0, "creation_date": 1512919573, "post_id": 47736118, "comment_id": 82440765, "body": "@stuffy so &quot;it can be scoped to a function or a block&quot;. Why have something in a broader scope than you need it to be?"}, {"owner": {"reputation": 303, "user_id": 3736239, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9c083a66a74c166d019192bc85cc78d8?s=128&d=identicon&r=PG&f=1", "display_name": "stuffy", "link": "https://stackoverflow.com/users/3736239/stuffy"}, "edited": false, "score": 0, "creation_date": 1513019045, "post_id": 47736118, "comment_id": 82480520, "body": "Okay, so it&#39;s strictly a visibility thing. In most languages I use defining a global is the same as defining a local, i.e., you would incur the cost of the assignment on every invocation if you tried to scope it like this. I see that Rust grants you finer control so you can have constants in narrower scopes but still only evaluate them once. Thanks!"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1512883050, "creation_date": 1512883050, "answer_id": 47736118, "question_id": 47736083, "link": "https://stackoverflow.com/questions/47736083/cant-capture-dynamic-environment-in-a-fn-item-but-the-code-is-already-in-a/47736118#47736118", "title": "can&#39;t capture dynamic environment in a fn item, but the code is already in a || {} closure", "body": "<p>Here's an even shorter example that produces the same error:</p>\n\n<pre><code>fn foo(a: i32) {\n    const b: i32 = a;\n}\n</code></pre>\n\n<p>The issue is that <code>const</code> doesn't declare a local variable; it declares a global constant (though it can be scoped to a function or a block). Constants are meant to have the same value all the time, thus their value cannot depend on a parameter.</p>\n\n<p>If you want an immutable local variable, use <code>let</code> instead.</p>\n"}], "owner": {"reputation": 303, "user_id": 3736239, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9c083a66a74c166d019192bc85cc78d8?s=128&d=identicon&r=PG&f=1", "display_name": "stuffy", "link": "https://stackoverflow.com/users/3736239/stuffy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1188, "favorite_count": 0, "accepted_answer_id": 47736118, "answer_count": 1, "score": 3, "last_activity_date": 1512883050, "creation_date": 1512882604, "last_edit_date": 1512882955, "question_id": 47736083, "link": "https://stackoverflow.com/questions/47736083/cant-capture-dynamic-environment-in-a-fn-item-but-the-code-is-already-in-a", "title": "can&#39;t capture dynamic environment in a fn item, but the code is already in a || {} closure", "body": "<p>I've stripped my problematic code down to this sample:</p>\n\n<pre><code>fn foo(input_vector: Vec&lt;()&gt;) {\n    const bar: Option&lt;()&gt; = []\n        .iter()\n        .map(|_| { input_vector; })\n        .nth(0);\n}\n\nfn main() {\n    foo(vec![]);\n}\n</code></pre>\n\n<p>Which yields the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0434]: can't capture dynamic environment in a fn item; use the || { ... } closure form instead\n--&gt; src/main.rs:4:20\n  |\n4 |         .map(|_| { input_vector; })\n  |                    ^^^^^^^^^^^^\n</code></pre>\n\n<p>Why is the compiler telling me to use a closure if I'm already using one?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512856012, "post_id": 47733463, "comment_id": 82427554, "body": "<a href=\"https://play.integer32.com/?gist=52a607905087578440b176cc10fe7607&amp;version=stable\" rel=\"nofollow noreferrer\">The duplicate&#39;s solution applied to your specific case</a>. Notably, it doesn&#39;t make sense to cast the entire vector at once."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512856259, "post_id": 47733463, "comment_id": 82427628, "body": "See also: <a href=\"https://stackoverflow.com/q/38134158/155423\">Create vector of objects implementing a trait in Rust</a>."}], "owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 186, "favorite_count": 0, "closed_date": 1512855792, "answer_count": 0, "score": 0, "last_activity_date": 1512855840, "creation_date": 1512855455, "last_edit_date": 1512855840, "question_id": 47733463, "link": "https://stackoverflow.com/questions/47733463/how-to-create-a-vector-of-trait-objects-from-vectors-of-objects-implementing-the", "closed_reason": "Duplicate", "title": "How to create a vector of trait objects from vectors of objects implementing the trait?", "body": "<p>I'd like to create a vector of trait objects from two vectors of objects that implement the trait so I can call the trait methods on each object in the array indistinctly of the actual object type:</p>\n\n<pre><code>struct Value;\nstruct Function;\npub trait Runnable {\n    fn get(&amp;self);\n}\n\nimpl Runnable for Function {\n    fn get(&amp;self) {}\n}\nimpl Runnable for Value {\n    fn get(&amp;self) {} \n}\n\nfn main() {\n    let value = Value{};\n    let values = Vec::&lt;&amp;Value&gt;::new();\n    values.push(&amp;value);\n\n    let function = Function{};\n    let functions = Vec::&lt;&amp;Function&gt;::new();\n    functions.push(&amp;function);\n\n    let mut runnables = Vec::&lt;&amp;Runnable&gt;::new();\n    runnables.append(&amp;mut values as &amp;mut Vec&lt;&amp;Runnable&gt;);\n    runnables.append(&amp;mut functions as &amp;mut Vec&lt;&amp;Runnable&gt;);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=92aab800fbc315fcb64e84ff98f00aa6&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This has the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0605]: non-primitive cast: `&amp;mut std::vec::Vec&lt;&amp;Value&gt;` as `&amp;mut std::vec::Vec&lt;&amp;Runnable&gt;`\n  --&gt; src/main.rs:24:22\n   |\n24 |     runnables.append(&amp;mut values as &amp;mut Vec&lt;&amp;Runnable&gt;);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n\nerror[E0605]: non-primitive cast: `&amp;mut std::vec::Vec&lt;&amp;Function&gt;` as `&amp;mut std::vec::Vec&lt;&amp;Runnable&gt;`\n  --&gt; src/main.rs:25:22\n   |\n25 |     runnables.append(&amp;mut functions as &amp;mut Vec&lt;&amp;Runnable&gt;);\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n</code></pre>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512832095, "post_id": 47726493, "comment_id": 82420379, "body": "Do you really think that the overhead of a <code>Mutex</code> or an <code>Atomic*</code> is at all going to even be detectable? I&#39;m pretty sure you are focusing on the wrong thing."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512834808, "post_id": 47726493, "comment_id": 82421165, "body": "@Shepmaster i just wantedto know is it necessary or not. However, I even doubt that this code can work correctly all the time. It&#39;s better to rewrite it to use files."}], "answers": [{"comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1512820180, "post_id": 47728218, "comment_id": 82416945, "body": "I am also afraid of this. So I see the only way is to use a temporary file with locks. I think this will be better."}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 3, "last_activity_date": 1512819942, "creation_date": 1512819942, "answer_id": 47728218, "question_id": 47726493, "link": "https://stackoverflow.com/questions/47726493/does-a-procedural-macro-compile-in-one-thread/47728218#47728218", "title": "Does a procedural macro compile in one thread?", "body": "<p>And what happens when you use this in multiple files or even multiple crates? I think the compiler doesn't guarantee anything, and you simply shouldn't use global state at all (it might fork for <code>proc_macro</code> calls, run multiple compiler instances, use threads, ...).</p>\n\n<p>To make it thread safe (and to avoid using <code>unsafe</code>) you could use <code>AtomicUsize</code> like this:</p>\n\n<pre><code>fn inc_id() -&gt; usize {\n    use std::sync::atomic::{AtomicUsize, Ordering, ATOMIC_USIZE_INIT};\n    static ID: AtomicUsize = ATOMIC_USIZE_INIT;\n    ID.fetch_add(1, Ordering::SeqCst)\n}\n</code></pre>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 47728218, "answer_count": 1, "score": 1, "last_activity_date": 1512832017, "creation_date": 1512805642, "last_edit_date": 1512832017, "question_id": 47726493, "link": "https://stackoverflow.com/questions/47726493/does-a-procedural-macro-compile-in-one-thread", "title": "Does a procedural macro compile in one thread?", "body": "<p>I have implemented a procedural macro to generate a method which returns a number:</p>\n\n<pre><code>extern crate unique_type_id;\n#[macro_use]\nextern crate unique_type_id_derive;\n\n#[test]\nfn sequential_simple() {\n    use unique_type_id::SequentialTypeId;\n    #[derive(SequentialTypeId)]\n    struct Test1;\n    #[derive(SequentialTypeId)]\n    struct Test2;\n\n    assert_eq!(Test1::id().0, 0u64);\n    assert_eq!(Test2::id().0, 1u64);\n}\n</code></pre>\n\n<p>I have this implementation but I don't know whether should I place my static <code>ID</code> under a mutex or not:</p>\n\n<pre><code>fn inc_id() -&gt; u64 {\n    unsafe {\n        static mut ID: u64 = 0u64;\n\n        let old_value = ID;\n        ID += 1;\n        old_value\n    }\n}\n\nfn sequential_implementor(ast: &amp;syn::DeriveInput) -&gt; quote::Tokens {\n    let name = &amp;ast.ident;\n    let (impl_generics, ty_generics, where_clause) = ast.generics.split_for_impl();\n    let id = inc_id();\n\n    quote! {\n        impl #impl_generics unique_type_id::SequentialTypeId for #name #ty_generics #where_clause {\n            fn id() -&gt; unique_type_id::TypeId {\n                unique_type_id::TypeId(#id)\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>If the procedural macro only uses one thread then there is no need for a mutex, but I don't know this.</p>\n"}, {"tags": ["shell", "rust", "command-line-arguments", "execute"], "comments": [{"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 0, "creation_date": 1512814295, "post_id": 47726187, "comment_id": 82415431, "body": "If you look at the error output it complains about not being able to exec your command, due to a file not being found. Can you verify that it exists?"}], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 2, "last_activity_date": 1512831802, "last_edit_date": 1512831802, "creation_date": 1512818887, "answer_id": 47728079, "question_id": 47726187, "link": "https://stackoverflow.com/questions/47726187/how-do-i-execute-a-command-with-quotation-marks-in-an-argument/47728079#47728079", "title": "How do I execute a command with quotation marks in an argument?", "body": "<p>The <code>'</code> quotes around the <code>ssh ...</code> argument are not actually passed to <code>rsync</code>; they are used by the shell to separate the arguments to <code>rsync</code>.</p>\n\n<p>Your Rust code tries to call something like this: <code>rsync -e \"'ssh ...'\" ...</code>. rsync then tries to split the <code>'ssh ...'</code> argument similar to the shell (it seems it doesn't actually use the shell to expand it). This means it will see <code>ssh ...</code> as one argument (the filename to execute) but such a file doesn't exist.</p>\n\n<p>Remove the <code>'</code> quotes in your <code>format!</code> call, and it might work.</p>\n\n<p>On Linux you could run your example through <code>strace -ff -e trace=execve -- ./target/...</code> to see how this works.  macOS has <code>dtruss</code>, but I can't help you with that :)</p>\n"}], "owner": {"reputation": 25, "user_id": 5305654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c97337f509c1ca5a23d73719e32e2c2c?s=128&d=identicon&r=PG&f=1", "display_name": "Linfeng.Yuan", "link": "https://stackoverflow.com/users/5305654/linfeng-yuan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 485, "favorite_count": 1, "accepted_answer_id": 47728079, "answer_count": 1, "score": 2, "last_activity_date": 1512861175, "creation_date": 1512802855, "last_edit_date": 1512831702, "question_id": 47726187, "link": "https://stackoverflow.com/questions/47726187/how-do-i-execute-a-command-with-quotation-marks-in-an-argument", "title": "How do I execute a command with quotation marks in an argument?", "body": "<p>I'm trying to run the command</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rsync -rtv -e 'ssh -i /Users/yuanlinfeng/.ssh/id_rsa -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking no\" -o \"ConnectTimeout=2\"' /tmp/a username@ip:/home/ubuntu/a\n</code></pre>\n\n<p>The code is:</p>\n\n<pre><code>let login_settings = format!(r#\"'ssh -i {} -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking no\" -o \"ConnectTimeout=2\"'\"#, identity);\nlet mut cmd = Command::new(\"rsync\");\ncmd.env(\"SETTING\", login_settings);\ncmd.arg(\"-rtv\").arg(\"-e\").arg(login_settings);\nif delete {\n    cmd.arg(\"--delete\");\n}\nmatch exclude_files {\n    None =&gt; {}\n    Some(exclude_files) =&gt; {\n        for file in exclude_files.iter() {\n            cmd.arg(\"--exclude\").arg(file);\n        }\n    }\n}\nlet target = format!(\"{}@{}:{}\", username, remote_ip, dest);\ncmd.arg(source).arg(target);\nlet output = cmd.output()?;\nif output.stdout.len() &gt; 0 {\n    println!(\"stdout: {}\", String::from_utf8_lossy(&amp;output.stdout));\n}\nif output.stderr.len() &gt; 0 {\n    println!(\"stderr: {}\", String::from_utf8_lossy(&amp;output.stderr));\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>stderr: rsync: Failed to exec ssh -i /Users/yuanlinfeng/.ssh/id_rsa -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking no\" -o \"ConnectTimeout=2\": No such file or directory (2)\nrsync error: error in IPC code (code 14) at /BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-52/rsync/pipe.c(86) [sender=2.6.9]\nrsync: connection unexpectedly closed (0 bytes received so far) [sender]\nrsync error: error in rsync protocol data stream (code 12) at /BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-52/rsync/io.c(453) [sender=2.6.9]\n</code></pre>\n\n<p>It looks like the quotation marks in the arguments are removed. How do I fix it?</p>\n\n<p>I'm using macOS High Sierra and Rust 1.22.1.</p>\n"}, {"tags": ["rust", "directory"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 1, "last_activity_date": 1512795706, "creation_date": 1512795706, "answer_id": 47725486, "question_id": 47725286, "link": "https://stackoverflow.com/questions/47725286/checking-if-folder-exists-in-directory/47725486#47725486", "title": "Checking if folder exists in directory", "body": "<p><code>ref</code> in patterns is used to <em>construct</em> a reference. If the pattern <code>x</code> would have type <code>T</code>, then the pattern <code>ref x</code> will have type <code>&amp;T</code> instead. However, it's not valid to move out of a reference, so you definitely don't want to construct a reference! (<a href=\"https://doc.rust-lang.org/stable/std/result/enum.Result.html#method.unwrap\" rel=\"nofollow noreferrer\"><code>unwrap</code></a> takes <code>self</code> by value, which is why the code is trying to do a move in the first place.)</p>\n\n<p>Here, the type of the parameter on the closure is a reference, because that's what <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.find\" rel=\"nofollow noreferrer\"><code>Iterator::find</code></a> wants to pass as an argument. If you want to <em>deconstruct</em> a reference, you want to use <code>&amp;</code> instead. However, if you write the pattern <code>&amp;x</code> here, you'll still get the error <code>cannot move out of borrowed content</code>, but this time directly on <code>&amp;x</code>.</p>\n\n<p>What can we do instead? <a href=\"https://doc.rust-lang.org/stable/std/fs/struct.DirEntry.html\" rel=\"nofollow noreferrer\"><code>DirEntry</code></a> doesn't implement <code>Clone</code>, therefore we can't clone <code>x</code> (which is an <code>&amp;std::io::Result&lt;DirEntry&gt;</code>). Instead, we could turn the <code>&amp;Result&lt;DirEntry&gt;</code> into a <code>Result&lt;&amp;DirEntry&gt;</code>. There's a method in the standard library to do just that: <a href=\"https://doc.rust-lang.org/stable/std/result/enum.Result.html#method.as_ref\" rel=\"nofollow noreferrer\"><code>as_ref</code></a>.</p>\n\n<pre><code>fn does_folder_foo_exist_in_current_directory() -&gt; Result&lt;bool, io::Error&gt; {\n    let cur_path_buf = env::current_dir()?;\n    let cur_dir = cur_path_buf.as_path();\n    Ok(fs::read_dir(cur_dir)?.find(|x| {\n        let x = x.as_ref().unwrap();\n        x.file_type().unwrap().is_dir() &amp;&amp; x.file_name().to_str().unwrap() == \"foo\"\n    }).is_some())\n}\n</code></pre>\n\n<p>By the way, instead of doing <code>find(...).is_some()</code>, you can use <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.any\" rel=\"nofollow noreferrer\"><code>any(...)</code></a>, which is shorter and perhaps slightly more efficient. <code>any</code> also passes ownership of each iterated value to the closure, so we don't actually need to use <code>as_ref</code> with it!</p>\n\n<pre><code>fn does_folder_foo_exist_in_current_directory() -&gt; Result&lt;bool, io::Error&gt; {\n    let cur_path_buf = env::current_dir()?;\n    let cur_dir = cur_path_buf.as_path();\n    Ok(fs::read_dir(cur_dir)?.any(|x| {\n        let x = x.unwrap();\n        x.file_type().unwrap().is_dir() &amp;&amp; x.file_name().to_str().unwrap() == \"foo\"\n    }))\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1512832178, "last_edit_date": 1512832178, "creation_date": 1512831471, "answer_id": 47729841, "question_id": 47725286, "link": "https://stackoverflow.com/questions/47725286/checking-if-folder-exists-in-directory/47729841#47729841", "title": "Checking if folder exists in directory", "body": "<p>There's no reason to iterate over all the entries in a directory to check if a single item exists. Just check for the specific item:</p>\n\n<pre><code>use std::{env, fs, io};\n\nfn does_folder_foo_exist_in_current_directory() -&gt; io::Result&lt;bool&gt; {\n    let mut path = env::current_dir()?;\n    path.push(\"foo\");\n    let metadata = fs::metadata(path)?;\n    Ok(metadata.is_dir())\n}\n</code></pre>\n"}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 845, "favorite_count": 1, "accepted_answer_id": 47725486, "answer_count": 2, "score": 0, "last_activity_date": 1512832178, "creation_date": 1512793306, "question_id": 47725286, "link": "https://stackoverflow.com/questions/47725286/checking-if-folder-exists-in-directory", "title": "Checking if folder exists in directory", "body": "<p>I want to know if the folder <code>foo</code> exists in my current directory, so I wrote a function to do so:</p>\n\n<pre><code>use std::env;\nuse std::fs;\nuse std::io;\n\nfn does_folder_foo_exist_in_current_directory() -&gt; Result&lt;bool, io::Error&gt; {\n    let cur_path_buf = env::current_dir()?;\n    let cur_dir = cur_path_buf.as_path();\n    Ok(fs::read_dir(cur_dir)?.find(|ref x| {\n        let x = x.unwrap();\n        x.file_type().unwrap().is_dir() &amp;&amp; x.file_name().to_str().unwrap() == \"foo\"\n    }).is_some())\n}\n</code></pre>\n\n<p>However, the compiler says that I cannot move out of borrowed content here: <code>let x = x.unwrap();</code>.</p>\n\n<p>Why is this moving out of borrowed content since I <code>ref x</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1512780426, "last_edit_date": 1512780426, "creation_date": 1512779766, "answer_id": 47724085, "question_id": 47724042, "link": "https://stackoverflow.com/questions/47724042/why-does-a-range-have-to-be-mut-in-order-to-call-find-on-it/47724085#47724085", "title": "Why does a range have to be mut in order to call `find` on it?", "body": "<p><code>find</code> is <code>Iterator::find</code>, and that's defined as:</p>\n\n<pre><code>fn find&lt;P&gt;(&amp;mut self, predicate: P) -&gt; Option&lt;Self::Item&gt;\n</code></pre>\n\n<p>The definition of the predicate is irrelevant.  The important part is <code>&amp;mut self</code>.</p>\n\n<p>Why is it <code>&amp;mut self</code> and not <code>&amp;self</code>?  Because it's defined on <code>Iterator</code>, and the only base method on <code>Iterator</code> (<em>i.e.</em> that implementations must provide) is <code>next</code>, which is:</p>\n\n<pre><code> fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;;\n</code></pre>\n\n<p>The only way you can get the next thing from an <code>Iterator</code> is to mutate it.  <code>find</code> doesn't have any choice.</p>\n\n<p>The range has to be mutable because you're using it as an iterator, and iterators have to be mutable to be iterated, and searching an iterator requires iterating it.</p>\n"}], "owner": {"reputation": 85078, "user_id": 31610, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/20571f32acd27d2cf5f1b1f42ea1a75b?s=128&d=identicon&r=PG", "display_name": "Geo", "link": "https://stackoverflow.com/users/31610/geo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 45, "favorite_count": 0, "accepted_answer_id": 47724085, "answer_count": 1, "score": 0, "last_activity_date": 1512780426, "creation_date": 1512779327, "last_edit_date": 1512780377, "question_id": 47724042, "link": "https://stackoverflow.com/questions/47724042/why-does-a-range-have-to-be-mut-in-order-to-call-find-on-it", "title": "Why does a range have to be mut in order to call `find` on it?", "body": "<p>I  want to find the first even number that is not 0. I'm not interested in mutating it, so I thought that this code above would give me an immutable option back:</p>\n\n<pre><code>fn main() {\n    let first_ten = 0..10;\n    let val = first_ten.find(|&amp;n| (n % 2 == 0) &amp;&amp; n &gt; 0);\n    println!(\"{}\", val.unwrap());\n}\n</code></pre>\n\n<p>Instead, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> --&gt; src/main.rs:3:13\n  |\n2 |   let first_ten = 0..10;\n  |       --------- consider changing this to `mut first_ten`\n3 |   let val = first_ten.find(|&amp;n| (n % 2 == 0) &amp;&amp; n &gt; 0);\n  |             ^^^^^^^^^ cannot borrow mutably\n</code></pre>\n\n<p>I found <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find\" rel=\"nofollow noreferrer\">this documentation page</a> and I see that the predicate is defined as: </p>\n\n<pre><code>P: FnMut(&amp;Self::Item) -&gt; bool, \n</code></pre>\n\n<p>If I change the definition of <code>first_ten</code> to be <code>let mut first_ten = 0..10</code>, then the code works. Why does <code>first_ten</code> need to have <code>mut</code>?</p>\n"}, {"tags": ["random", "rust"], "comments": [{"owner": {"reputation": 359, "user_id": 3032481, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/2b38c3f4b66b4b7bffbdfcae9fa72aba?s=128&d=identicon&r=PG&f=1", "display_name": "user3032481", "link": "https://stackoverflow.com/users/3032481/user3032481"}, "edited": false, "score": 1, "creation_date": 1535676379, "post_id": 47724024, "comment_id": 91165049, "body": "The API of gen_range function isn&#39;t useful. If we want to generate a u8 value from 240 to 255(inclusive), we must transform the type to what is bigger than u8."}, {"owner": {"reputation": 11569, "user_id": 502399, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/ccf39757e9c47ae99df42bdb286c6e5c?s=128&d=identicon&r=PG", "display_name": "Tavian Barnes", "link": "https://stackoverflow.com/users/502399/tavian-barnes"}, "reply_to_user": {"reputation": 359, "user_id": 3032481, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/2b38c3f4b66b4b7bffbdfcae9fa72aba?s=128&d=identicon&r=PG&f=1", "display_name": "user3032481", "link": "https://stackoverflow.com/users/3032481/user3032481"}, "edited": false, "score": 0, "creation_date": 1601910353, "post_id": 47724024, "comment_id": 113545684, "body": "@user3032481 As a bit of a hack, you could write <code>gen_range(239, 255) + 1</code>"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 7, "last_activity_date": 1512779381, "creation_date": 1512779381, "answer_id": 47724046, "question_id": 47724024, "link": "https://stackoverflow.com/questions/47724024/generate-a-random-u8-from-0-to-255-inclusively/47724046#47724046", "title": "Generate a random u8 from 0 to 255 inclusively", "body": "<p>Use the <a href=\"https://docs.rs/rand/0.3.18/rand/trait.Rng.html#method.gen\" rel=\"noreferrer\"><code>gen</code></a> method instead. This method will generate a random value from the whole set of possible values for the specified type.</p>\n\n<pre><code>extern crate rand;\n\nuse rand::Rng;\n\nfn main() {\n    println!(\"Guess the number!\");\n    let random_number: u8 = rand::thread_rng().gen();\n\n    println!(\"Your random number is {}\", random_number);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 7435844, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39aa2e038eee5b45212c2f564220ca32?s=128&d=identicon&r=PG&f=1", "display_name": "Outlaw6", "link": "https://stackoverflow.com/users/7435844/outlaw6"}, "is_accepted": false, "score": 0, "last_activity_date": 1601908746, "last_edit_date": 1601908746, "creation_date": 1601908537, "answer_id": 64210763, "question_id": 47724024, "link": "https://stackoverflow.com/questions/47724024/generate-a-random-u8-from-0-to-255-inclusively/64210763#64210763", "title": "Generate a random u8 from 0 to 255 inclusively", "body": "<p>I stumbled on this same issue and wondered why I could not use <code>.gen_range(0, 256);</code> for a <code>u8</code>.</p>\n<p>The <code>.gen_range()</code> function signature looks like this (<a href=\"https://rust-random.github.io/rand/rand/trait.Rng.html#method.gen_range\" rel=\"nofollow noreferrer\">docs</a>)</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn gen_range&lt;T: SampleUniform, B1, B2&gt;(&amp;mut self, low: B1, high: B2) -&gt; T where\n    B1: SampleBorrow&lt;T&gt; + Sized,\n    B2: SampleBorrow&lt;T&gt; + Sized, \n</code></pre>\n<p>The arguments we are trying to use are <code>0</code> and <code>256</code> which enter the function as integers and the default integer type is <code>i32</code>. However, this line</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let random_number: u8 = rand::thread_rng().gen_range(0, 256);\n</code></pre>\n<p>reassigns the result of <code>.gen_range()</code> to a <code>u8</code>, the compiler tries to resolve <code>B1</code> and <code>B2</code> both as <code>u8</code>, making the generics in the function call evaluate like this</p>\n<pre class=\"lang-rust prettyprint-override\"><code>gen_range&lt;u8&gt;(B1, B2) -&gt; u8 where \n    B1: SampleBorrow&lt;u8&gt; + Sized,\n    B2: SampleBorrow&lt;u8&gt; + Sized, \n</code></pre>\n<p>256 will not fit into a <code>u8</code> causing the compiler to throw the <code>overflowing_literals</code> warning.</p>\n<p>The correct way to calculate a random number with a maximum range of a primitive is pointed out <a href=\"https://stackoverflow.com/a/47724046/7435844\">here</a>, by letting the explicit type declaration define the generic constraints.</p>\n<p>Ex:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use rand::Rng;\nlet random_with_range: u8 = rand::thread_rng().gen();\n</code></pre>\n"}], "owner": {"reputation": 1725, "user_id": 5999372, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/LHqIF.png?s=128&g=1", "display_name": "Rain", "link": "https://stackoverflow.com/users/5999372/rain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1225, "favorite_count": 1, "accepted_answer_id": 47724046, "answer_count": 2, "score": 8, "last_activity_date": 1601908746, "creation_date": 1512779080, "last_edit_date": 1512780291, "question_id": 47724024, "link": "https://stackoverflow.com/questions/47724024/generate-a-random-u8-from-0-to-255-inclusively", "title": "Generate a random u8 from 0 to 255 inclusively", "body": "<p>I am trying to make a program that generates random numbers from 0 to 255 inclusively. It seems so simple! I did this:</p>\n\n<pre><code>extern crate rand;\nuse rand::Rng;\n\nfn main() {\n    println!(\"Guess the number!\");\n    let random_number: u8 = rand::thread_rng().gen_range(0, 255);\n\n    println!(\"Your random number is {}\", random_number);\n}\n</code></pre>\n\n<p>This works fine, but the problem with this approach is that <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch02-00-guessing-game-tutorial.html#generating-a-random-number\" rel=\"noreferrer\">the number 255 will not be included</a>:</p>\n\n<blockquote>\n  <p>The <code>gen_range</code> method takes two numbers as arguments and generates a random number between them. It\u2019s inclusive on the lower bound but exclusive on the upper bound.</p>\n</blockquote>\n\n<p>When I try to do this :</p>\n\n<pre><code>let random_number: u8 = rand::thread_rng().gen_range(0, 256);\n</code></pre>\n\n<p>Rust will generate a warning because <code>u8</code> only accepts values from 0 to 255.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: literal out of range for u8\n --&gt; src/main.rs:6:61\n  |\n6 |     let random_number: u8 = rand::thread_rng().gen_range(0, 256);\n  |                                                             ^^^\n  |\n  = note: #[warn(overflowing_literals)] on by default\n</code></pre>\n\n<p>How do I work around this without having to change the type of the <code>random_number</code> variable?</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512768680, "post_id": 47722214, "comment_id": 82405455, "body": "<i>But it seems static variables cannot be mutable.</i> \u2014 why do you say that? The error message <b>explicitly</b> tells you how to use them: &quot;use of mutable static requires unsafe function or block&quot;. Now, whether that&#39;s a good idea or not is a different question..."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1512770084, "post_id": 47722214, "comment_id": 82406031, "body": "Here&#39;s a <a href=\"https://aochagavia.github.io/blog/rocket---a-rust-game-running-on-wasm/\" rel=\"nofollow noreferrer\">blog post of someone who successfully used <code>lazy_static!</code> for this purpose</a>.  Note that they needed to wrap it in a Mutex to make the compiler happy, so I don&#39;t know what the performance impact is.  And they didn&#39;t use emscripten, but rather the <code>wasm32-unknown-unknown</code> compiler target."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1512773124, "post_id": 47722631, "comment_id": 82407157, "body": "Check out my <a href=\"http://jakegoulding.com/rust-ffi-omnibus/objects/\" rel=\"nofollow noreferrer\">Rust FFI Omnibus</a> which discusses some ways of wrapping this type of FFI in some nicer constructs."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1512773115, "last_edit_date": 1512773115, "creation_date": 1512769580, "answer_id": 47722631, "question_id": 47722214, "link": "https://stackoverflow.com/questions/47722214/how-do-i-keep-internal-state-in-a-webassembly-module-written-in-rust/47722631#47722631", "title": "How do I keep internal state in a WebAssembly module written in Rust?", "body": "<blockquote>\n<pre><code>error[E0133]: use of mutable static requires unsafe function or block\n</code></pre>\n</blockquote>\n\n<p>In general, accessing mutable global variables is <em>unsafe</em>, which means that you can only do it in an <code>unsafe</code> block. With mutable global variables, it's easy to accidentally create dangling references (think of a reference to an item of a global mutable <code>Vec</code>), data races (if you have multiple threads &ndash; Rust doesn't care that you don't actually use threads) or otherwise invoke <a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"nofollow noreferrer\">undefined behavior</a>.</p>\n\n<p>Global variables are usually not the best solution to a problem because it makes your software less flexible and less reusable. Instead, consider passing the state explicitly (by reference, so you don't need to copy it) to the functions that need to operate on it. This lets the calling code work with multiple independent states.</p>\n\n<hr>\n\n<p>Here's an example of allocating unique state and modifying that:</p>\n\n<pre><code>type State = i32;\n\n#[no_mangle]\npub extern fn new() -&gt; *mut State {\n    Box::into_raw(Box::new(0))\n}\n\n#[no_mangle]\npub extern fn free(state: *mut State) {\n    unsafe { Box::from_raw(state) };\n}\n\n#[no_mangle]\npub extern fn add(state: *mut State) {\n    unsafe { *state += 1 };\n}\n\n#[no_mangle]\npub extern fn get(state: *mut State) -&gt; i32 {\n    unsafe { *state }\n}\n</code></pre>\n\n<pre><code>const fs = require('fs-extra');\n\nfs.readFile(__dirname + '/target/wasm32-unknown-unknown/release/state.wasm')\n  .then(bytes =&gt; WebAssembly.instantiate(bytes))\n  .then(({ module, instance }) =&gt; {\n    const { new: newFn, free, get, add } = instance.exports;\n\n    const state1 = newFn();\n    const state2 = newFn();\n\n    add(state1);\n    add(state2);\n    add(state1);\n\n    console.log(get(state1));\n    console.log(get(state2));\n\n    free(state1);\n    free(state2);\n});\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>2\n1\n</code></pre>\n\n<p><em>Note</em> \u2014 This currently <strong>needs</strong> to be compiled in release mode to work. Debugging mode has some issues at the moment.</p>\n\n<p>Admittedly, this is not <em>less</em> unsafe because you're passing raw pointers around, but it makes it clearer in the calling code that there is some mutable state being manipulated. Also note that it is now the responsibility of the <em>caller</em> to ensure that the state pointer is being handled correctly.</p>\n"}, {"comments": [{"owner": {"reputation": 53, "user_id": 9074315, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-HYSsJknQq0Q/AAAAAAAAAAI/AAAAAAAAAPc/huQJQuiecPs/photo.jpg?sz=128", "display_name": "Jakob Mulvad Nielsen", "link": "https://stackoverflow.com/users/9074315/jakob-mulvad-nielsen"}, "edited": false, "score": 0, "creation_date": 1512831251, "post_id": 47722736, "comment_id": 82420103, "body": "Thanks Shepmaster. I was not aware of the <code>unsafe</code> keyword (I&#39;m a Rust beginner)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53, "user_id": 9074315, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-HYSsJknQq0Q/AAAAAAAAAAI/AAAAAAAAAPc/huQJQuiecPs/photo.jpg?sz=128", "display_name": "Jakob Mulvad Nielsen", "link": "https://stackoverflow.com/users/9074315/jakob-mulvad-nielsen"}, "edited": false, "score": 2, "creation_date": 1512832262, "post_id": 47722736, "comment_id": 82420431, "body": "@JakobMulvadNielsen the error message explicitly informs you about unsafe: &quot;use of mutable static requires unsafe function or block&quot;. You are going to have a <i>very bad time</i> using Rust if you don&#39;t read compiler error messages."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1512773066, "last_edit_date": 1512773066, "creation_date": 1512770172, "answer_id": 47722736, "question_id": 47722214, "link": "https://stackoverflow.com/questions/47722214/how-do-i-keep-internal-state-in-a-webassembly-module-written-in-rust/47722736#47722736", "title": "How do I keep internal state in a WebAssembly module written in Rust?", "body": "<p><a href=\"https://stackoverflow.com/a/47722631/155423\">Francis Gagn\u00e9 is absolutely correct</a> that global variables generally make your code worse and you should avoid them.</p>\n\n<p>However, for the <em>specific</em> case of WebAssembly as it is <em>today</em>, we don't have to worry about this concern: </p>\n\n<blockquote>\n  <p>if you have multiple threads</p>\n</blockquote>\n\n<p>We can thus choose to use mutable static variables, if we have a very good reason to do so:</p>\n\n<pre><code>// Only valid because we are using this in a WebAssembly\n// context without threads.\nstatic mut STATE: i32 = 0;\n\n#[no_mangle]\npub extern fn add() {\n    unsafe { STATE += 1 };\n}\n\n#[no_mangle]\npub extern fn get() -&gt; i32 {\n    unsafe { STATE }\n}\n</code></pre>\n\n<p>We can see the behavior with this NodeJS driver program:</p>\n\n<pre><code>const fs = require('fs-extra');\n\nfs.readFile(__dirname + '/target/wasm32-unknown-unknown/release/state.wasm')\n  .then(bytes =&gt; WebAssembly.instantiate(bytes))\n  .then(({ module, instance }) =&gt; {\n    const { get, add } = instance.exports;\n    console.log(get());\n    add();\n    add();\n    console.log(get());\n});\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>0\n2\n</code></pre>\n"}], "owner": {"reputation": 53, "user_id": 9074315, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-HYSsJknQq0Q/AAAAAAAAAAI/AAAAAAAAAPc/huQJQuiecPs/photo.jpg?sz=128", "display_name": "Jakob Mulvad Nielsen", "link": "https://stackoverflow.com/users/9074315/jakob-mulvad-nielsen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1147, "favorite_count": 1, "accepted_answer_id": 47722736, "answer_count": 2, "score": 5, "last_activity_date": 1512773115, "creation_date": 1512767597, "last_edit_date": 1512768618, "question_id": 47722214, "link": "https://stackoverflow.com/questions/47722214/how-do-i-keep-internal-state-in-a-webassembly-module-written-in-rust", "title": "How do I keep internal state in a WebAssembly module written in Rust?", "body": "<p>I want to do computations on a large set of data each frame of my web app. Only a subset of this will be used by JavaScript, so instead of sending the entire set of data back and forth between WebAssembly and JavaScript each frame, it would be nice if the data was maintained internally in my WebAssembly module.</p>\n\n<p>In C, something like this works:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;emscripten/emscripten.h&gt;\n\nint state = 0;\n\nvoid EMSCRIPTEN_KEEPALIVE inc() {\n    state++;\n}\n\nint EMSCRIPTEN_KEEPALIVE get() {\n    return state;\n}\n</code></pre>\n\n<p>Is the same thing possible in Rust? I tried doing it with a <code>static</code> like this:</p>\n\n<pre><code>static mut state: i32 = 0;\n\npub fn main() {}\n\n#[no_mangle]\npub fn add() {\n    state += 1;\n}\n\n#[no_mangle]\npub fn get() -&gt; i32 {\n    state\n}\n</code></pre>\n\n<p>But it seems <code>static</code> variables cannot be mutable.</p>\n"}, {"tags": ["rust", "template-specialization"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512718863, "post_id": 47709129, "comment_id": 82379277, "body": "There is <a href=\"https://doc.rust-lang.org/std/marker/trait.Unsize.html\" rel=\"nofollow noreferrer\"><code>Unsize</code></a> to check whether a type implements a trait; unfortunately this is <a href=\"https://play.rust-lang.org/?gist=56314071e6a9da620bb8a68f57dda595&amp;version=nightly\" rel=\"nofollow noreferrer\">as far as I managed to go</a>."}, {"owner": {"reputation": 608, "user_id": 8225884, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ZzuYo.png?s=128&g=1", "display_name": "\u70b8\u9c7c\u85af\u6761\u5fb7\u91cc\u514b", "link": "https://stackoverflow.com/users/8225884/%e7%82%b8%e9%b1%bc%e8%96%af%e6%9d%a1%e5%be%b7%e9%87%8c%e5%85%8b"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512719782, "post_id": 47709129, "comment_id": 82379661, "body": "@MatthieuM. It still doesn&#39;t compile, and I don&#39;t know what does <code>&lt;T1 as GetStatic&lt;A&gt;&gt;</code> mean, are you creating an object or call &quot;non-instance&quot; method directly? Because I really don&#39;t want a T object..."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512720134, "post_id": 47709129, "comment_id": 82379829, "body": "If it compiled, I would have posted an answer. There is a reason that I mentioned &quot;as far as I got&quot; :) I&#39;m hoping someone will be able to pick up where I left and get the ball rolling. As for <code>&lt;Type as Trait&gt;</code> it is a general syntax to obtain the <code>Trait</code> implementation for <code>Type</code>, which then allows you to call the associated functions of the <code>Trait</code>; in your case, you are asking for the trait <code>GetStatic&lt;A&gt;</code> as implemented for <code>T1</code>, thus <code>&lt;T1 as GetStatic&lt;A&gt;&gt;</code>."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512730998, "post_id": 47709129, "comment_id": 82385896, "body": "@MatthieuM. Try: <code>trait GetStatic&lt;TraitType: ?Sized&gt; {\u2026}</code>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1512734020, "post_id": 47709129, "comment_id": 82387526, "body": "@Stefan: D&#39;oh!!"}], "answers": [{"comments": [{"owner": {"reputation": 608, "user_id": 8225884, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ZzuYo.png?s=128&g=1", "display_name": "\u70b8\u9c7c\u85af\u6761\u5fb7\u91cc\u514b", "link": "https://stackoverflow.com/users/8225884/%e7%82%b8%e9%b1%bc%e8%96%af%e6%9d%a1%e5%be%b7%e9%87%8c%e5%85%8b"}, "edited": false, "score": 0, "creation_date": 1512801150, "post_id": 47714313, "comment_id": 82412563, "body": "Thank you, I expand your code and failed again, so... any thoughts? <a href=\"https://gist.github.com/Xtricman/bf184572e557472c5f67e645c0a7d973\" rel=\"nofollow noreferrer\">gist.github.com/Xtricman/bf184572e557472c5f67e645c0a7d973</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 608, "user_id": 8225884, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ZzuYo.png?s=128&g=1", "display_name": "\u70b8\u9c7c\u85af\u6761\u5fb7\u91cc\u514b", "link": "https://stackoverflow.com/users/8225884/%e7%82%b8%e9%b1%bc%e8%96%af%e6%9d%a1%e5%be%b7%e9%87%8c%e5%85%8b"}, "edited": false, "score": 0, "creation_date": 1512822275, "post_id": 47714313, "comment_id": 82417469, "body": "@\u795e\u79d8\u5fb7\u91cc\u514b: I doubt the cast is possible at the moment. As I mentioned, Rust generics do not have <i>kinds</i>, and therefore <code>TraitType</code> is never as a trait. The <code>Unsize</code> trick is a round-about way, and not totally fool-proof either as you could use any other unsized type than a trait. I managed to make it work without the <code>&#39;a</code> <a href=\"https://play.rust-lang.org/?gist=67a72b30035d446e942cee9c2494bb46&amp;version=nightly\" rel=\"nofollow noreferrer\">here</a>, though I am not sure how useful that is."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1512735644, "creation_date": 1512735644, "answer_id": 47714313, "question_id": 47709129, "link": "https://stackoverflow.com/questions/47709129/how-to-check-whether-a-generic-type-implements-a-generic-trait/47714313#47714313", "title": "How to check whether a generic type implements a generic trait?", "body": "<p><strong>Thanks to Stefan who smoothed out the last wrinkle</strong></p>\n\n<blockquote>\n<pre><code>&lt;T2 as Get_Static&gt;::&lt;A&gt;::has_trait()\n  //This is surely wrong syntax but I don't know the right syntax\n</code></pre>\n</blockquote>\n\n<p>This attempts to call:</p>\n\n<ul>\n<li>a trait associated function,</li>\n<li>implemented for a particular type.</li>\n</ul>\n\n<p>The syntax is <code>&lt;Type as Trait&gt;::associated_function()</code>. In this case, <code>Type</code> is <code>T1</code>, <code>Trait</code> is <code>Get_Static&lt;A&gt;</code> so this should be:</p>\n\n<pre><code>&lt;T2 as Get_Static&lt;A&gt;&gt;::has_trait()\n</code></pre>\n\n<blockquote>\n<pre><code>impl&lt;TraitType, T&gt; Get_Static&lt;TraitType&gt; for T where T:TraitType\n{\n    fn has_trait() -&gt; bool { true }\n}\n//Compiler complains TraitType is not a trait but type parameter\n</code></pre>\n</blockquote>\n\n<p>It is not possible, directly, to indicate that <code>TraitType</code> should be a <code>trait</code>, however the <a href=\"https://doc.rust-lang.org/std/marker/trait.Unsize.html\" rel=\"nofollow noreferrer\"><code>Unsize</code></a> marker can be used to check if <code>T: Unsize&lt;TraitType&gt;</code> which is sufficient for our purpose.</p>\n\n<p>This requires 3 changes:</p>\n\n<ul>\n<li>enabling the nightly feature <code>#![feature(unsize)]</code> as the <code>Unsize</code> marker is unstable,</li>\n<li>allowing the <code>Get_Static</code> generic parameter to be <code>?Sized</code>, because traits are unsized,</li>\n<li>using <code>T: Unsize&lt;TraitType&gt;</code> as constraint in the implementation.</li>\n</ul>\n\n<p>All told, this means:</p>\n\n<pre><code>#![feature(specialization)]\n#![feature(unsize)]\n\ntrait GetStatic&lt;TraitType: ?Sized&gt; {\n    fn has_trait() -&gt; bool ;\n}\n\ndefault impl&lt;TraitType: ?Sized, T&gt; GetStatic&lt;TraitType&gt; for T {\n    fn has_trait() -&gt; bool { false }\n}\n\nimpl&lt;TraitType: ?Sized, T&gt; GetStatic&lt;TraitType&gt; for T \n    where\n        T: std::marker::Unsize&lt;TraitType&gt;\n{\n    fn has_trait() -&gt; bool { true }\n}\n</code></pre>\n\n<p>Which is then used as:</p>\n\n<pre><code>struct T1;\nstruct T2;\n\ntrait A {}\n\nimpl A for T1 {}\n\nfn main() {\n    println!(\"{}\", &lt;T1 as GetStatic&lt;A&gt;&gt;::has_trait());\n    println!(\"{}\", &lt;T2 as GetStatic&lt;A&gt;&gt;::has_trait());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=2c670db380a8f4d19e39393cf9438b64&amp;version=nightly\" rel=\"nofollow noreferrer\">See it in action on the playground</a></p>\n"}], "owner": {"reputation": 608, "user_id": 8225884, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ZzuYo.png?s=128&g=1", "display_name": "\u70b8\u9c7c\u85af\u6761\u5fb7\u91cc\u514b", "link": "https://stackoverflow.com/users/8225884/%e7%82%b8%e9%b1%bc%e8%96%af%e6%9d%a1%e5%be%b7%e9%87%8c%e5%85%8b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1532, "favorite_count": 1, "accepted_answer_id": 47714313, "answer_count": 1, "score": 2, "last_activity_date": 1512735681, "creation_date": 1512715823, "last_edit_date": 1512735681, "question_id": 47709129, "link": "https://stackoverflow.com/questions/47709129/how-to-check-whether-a-generic-type-implements-a-generic-trait", "title": "How to check whether a generic type implements a generic trait?", "body": "<p>I want to check whether a type implements a trait without creating an object. But it doesn't compile. See the comments in code . So what should I do to get my goal?</p>\n\n<pre><code>#![feature(specialization)]\n\nstruct T1;\nstruct T2;\n\ntrait A {}\n\nimpl A for T1 {}\n\ntrait Get_Static&lt;TraitType&gt; {\n    fn has_trait() -&gt; bool ;\n}\ndefault impl&lt;TraitType, T&gt; Get_Static&lt;TraitType&gt; for T\n{\n    fn has_trait() -&gt; bool { false }\n}\nimpl&lt;TraitType, T&gt; Get_Static&lt;TraitType&gt; for T where T:TraitType\n{\n    fn has_trait() -&gt; bool { true }\n}//Compiler complains TraitType is not a trait but type parameter\n\nfn main() {\n    if &lt;T1 as Get_Static&gt;::&lt;A&gt;::has_trait() {println!(\"{}\", true)} else {println!(\"{}\", false)}\n    if &lt;T2 as Get_Static&gt;::&lt;A&gt;::has_trait() {println!(\"{}\", true)} else {println!(\"{}\", false)}\n//This is surely wrong syntax but I don't know the right syntax\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-chrono"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512749047, "post_id": 47712090, "comment_id": 82396222, "body": "Is there a way to set hour/minute/second/nanoseconds in a single call? Would help quite a bit."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512749379, "post_id": 47712090, "comment_id": 82396433, "body": "@MatthieuM. Unfortunately, it seems there is no way to do this with less boilerplate: <a href=\"https://docs.rs/chrono/0.4.0/chrono/trait.Timelike.html\" rel=\"nofollow noreferrer\">docs.rs/chrono/0.4.0/chrono/trait.Timelike.html</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512749770, "post_id": 47712090, "comment_id": 82396633, "body": "Maybe it would be simpler to extract the NaiveDate, and rebuild a NaiveDateTime from it, then build a new Date from this new NaiveDateTime and Timezone?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512752040, "post_id": 47712090, "comment_id": 82397855, "body": "@MatthieuM. Even this seems difficult. The crate lacks some functions in my opinion: I wrote something as you suggest, but the code is less readable. IMO having an <code>impl From&lt;Date&gt; for DateTime</code> would be great, or even <code>DateTime::new(date: Date, time: Time)</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512754036, "post_id": 47712090, "comment_id": 82398981, "body": "To be honest, I was mostly aiming at reducing the amount of <code>unwrap</code>, so in this sense it&#39;s a net win."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512754567, "post_id": 47712090, "comment_id": 82399260, "body": "Ah! Finally found a better way. We&#39;ve been missing <code>Date::and_hms -&gt; DateTime</code>: this (1) preserve the timezone and (2) does not require all the constructor dance. It&#39;s much neater with it."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512832226, "post_id": 47712090, "comment_id": 82420424, "body": "@MatthieuM. Sorry, I didn&#39;t saw your answer"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512834683, "post_id": 47712090, "comment_id": 82421115, "body": "I am not quite sure what you are sorry for, so... hum... no worries?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512834863, "post_id": 47712090, "comment_id": 82421182, "body": "I updated my answer thanks to your hint, without seeing that your added your own answer."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512835268, "post_id": 47712090, "comment_id": 82421314, "body": "Oh, that&#39;s nothing to be sorry for! I certainly wouldn&#39;t have arrived to my answer without yours and our discussion; I actually upvoted your answer because it was useful to me :)"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 2, "last_activity_date": 1512832165, "last_edit_date": 1512832165, "creation_date": 1512727941, "answer_id": 47712090, "question_id": 47708305, "link": "https://stackoverflow.com/questions/47708305/calculate-the-duration-between-now-and-the-next-midnight-using-chrono/47712090#47712090", "title": "Calculate the duration between now and the next midnight using Chrono", "body": "<p>Just subtract the two dates: midnight and now:</p>\n\n<pre><code>extern crate chrono;\nuse chrono::prelude::*;\nuse std::time;\n\nfn duration_until_next_midnight() -&gt; time::Duration {\n    let now = Local::now();\n    // change to next day and reset hour to 00:00\n    let midnight = (now + chrono::Duration::days(1))\n        .with_hour(0).unwrap()\n        .with_minute(0).unwrap()\n        .with_second(0).unwrap()\n        .with_nanosecond(0).unwrap();\n\n    println!(\"Duration between {:?} and {:?}:\", now, midnight);\n    midnight.signed_duration_since(now).to_std().unwrap()\n}\n\nfn main() {\n    println!(\"{:?}\", duration_until_next_midnight())\n}\n</code></pre>\n\n<p>As requested by Matthieu, you can write something like:</p>\n\n<pre><code>fn duration_until_next_midnight() -&gt; Duration {\n    let now = Local::now();\n    // get the NaiveDate of tomorrow\n    let midnight_naivedate = (now + chrono::Duration::days(1)).naive_utc().date();\n    // create a NaiveDateTime from it\n    let midnight_naivedatetime = NaiveDateTime::new(midnight_naivedate, NaiveTime::from_hms(0, 0, 0));\n    // get the local DateTime of midnight\n    let midnight: DateTime&lt;Local&gt; = DateTime::from_utc(midnight_naivedatetime, *now.offset());\n\n    println!(\"Duration between {:?} and {:?}:\", now, midnight);\n    midnight.signed_duration_since(now).to_std().unwrap()\n}\n</code></pre>\n\n<p>But I am not sure if it is better.</p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1512742697, "post_id": 47714998, "comment_id": 82392485, "body": "I&#39;d use some aliases for readability maybe, like <code>let seconds_in_a_day = 24 * 3600</code>."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 1, "last_activity_date": 1512744403, "last_edit_date": 1512744403, "creation_date": 1512738268, "answer_id": 47714998, "question_id": 47708305, "link": "https://stackoverflow.com/questions/47708305/calculate-the-duration-between-now-and-the-next-midnight-using-chrono/47714998#47714998", "title": "Calculate the duration between now and the next midnight using Chrono", "body": "<p>One way is to calculate the seconds missing to next midnight, keeping in mind that <a href=\"https://doc.rust-lang.org/time/time/struct.Tm.html\" rel=\"nofollow noreferrer\"><code>time::Tm</code></a> accounts for both Daylight Saving Time and time zones:</p>\n\n<blockquote>\n  <p>tm_utcoff: i32</p>\n  \n  <p>Identifies the time zone that was used to compute this broken-down time value, including any adjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example, for U.S. Pacific Daylight Time, the value is -7*60*60 = -25200.</p>\n</blockquote>\n\n<pre><code>extern crate time;\nuse std::time::Duration;\n\nfn duration_until_next_midnight() -&gt; Duration {\n    let tnow = time::now();\n\n    Duration::new(\n        (86400 - tnow.to_timespec().sec % 86400 - \n        i64::from(tnow.tm_utcoff)) as u64,\n        0,\n    )\n}\n</code></pre>\n\n<p>If you want nanoseconds precision you have to do some more maths ...</p>\n"}, {"comments": [{"owner": {"reputation": 1009, "user_id": 6000005, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/eCjaK.jpg?s=128&g=1", "display_name": "azzamsa", "link": "https://stackoverflow.com/users/6000005/azzamsa"}, "edited": false, "score": 0, "creation_date": 1619047645, "post_id": 47719469, "comment_id": 118790045, "body": "<code>let tomorrow_midnight = now + Duration::days(1);</code> is sufficient. It will give tomorrow date, with 00:00:00 as time."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1009, "user_id": 6000005, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/eCjaK.jpg?s=128&g=1", "display_name": "azzamsa", "link": "https://stackoverflow.com/users/6000005/azzamsa"}, "edited": false, "score": 0, "creation_date": 1619075988, "post_id": 47719469, "comment_id": 118796170, "body": "@azzamsa: The documentation and the playground disagree with your assessment, see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a84e6dfc4986df59342b5edec07485b1\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> and the latest example of <a href=\"https://docs.rs/chrono/0.4.19/chrono/naive/struct.NaiveDateTime.html#method.checked_add_signed\" rel=\"nofollow noreferrer\">docs.rs/chrono/0.4.19/chrono/naive/&hellip;</a>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1512754486, "creation_date": 1512754486, "answer_id": 47719469, "question_id": 47708305, "link": "https://stackoverflow.com/questions/47708305/calculate-the-duration-between-now-and-the-next-midnight-using-chrono/47719469#47719469", "title": "Calculate the duration between now and the next midnight using Chrono", "body": "<p>After scouring the docs, I finally found the missing link: <a href=\"https://docs.rs/chrono/0.4.0/chrono/struct.Date.html#method.and_hms\" rel=\"noreferrer\"><code>Date::and_hms</code></a>.</p>\n\n<p>So, actually, it's as easy as:</p>\n\n<pre><code>fn main() {\n    let now = Local::now();\n\n    let tomorrow_midnight = (now + Duration::days(1)).date().and_hms(0, 0, 0);\n\n    let duration = tomorrow_midnight.signed_duration_since(now).to_std().unwrap();\n\n    println!(\"Duration between {:?} and {:?}: {:?}\", now, tomorrow_midnight, duration);\n}\n</code></pre>\n\n<p>The idea is simple:</p>\n\n<ul>\n<li>increase the <code>DateTime</code> to tomorrow,</li>\n<li>extract the <code>Date</code> part, which keeps the timezone,</li>\n<li>reconstructs a new <code>DateTime</code> by specifying a \"00:00:00\" <code>Time</code> with <code>and_hms</code>.</li>\n</ul>\n\n<p>There's a <code>panic!</code> in <code>and_hms</code>, so one has to be careful to specify a correct time.</p>\n"}], "owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2094, "favorite_count": 0, "accepted_answer_id": 47719469, "answer_count": 3, "score": 4, "last_activity_date": 1512832165, "creation_date": 1512711129, "last_edit_date": 1512744336, "question_id": 47708305, "link": "https://stackoverflow.com/questions/47708305/calculate-the-duration-between-now-and-the-next-midnight-using-chrono", "title": "Calculate the duration between now and the next midnight using Chrono", "body": "<p>What is the idiomatic way to get the duration between now and the next midnight?</p>\n\n<p>I have a function like this:</p>\n\n<pre><code>extern crate chrono;\n\nuse chrono::prelude::*;\nuse time;\n\nfn duration_until_next_midnight() -&gt; time::Duration {\n    let now = Local::now(); // Fri Dec 08 2017 23:00:00 GMT-0300 (-03)\n    // ... how to continue??\n}\n</code></pre>\n\n<p>It should make a <code>Duration</code> with 1 hour, since the next midnight is <em>Sat Dec 09 2017 00:00:00 GMT-0300 (-03)</em></p>\n"}, {"tags": ["type-conversion", "rust", "boolean", "ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512689194, "post_id": 47705093, "comment_id": 82371084, "body": "<i>Under this scenario, we can tell Rust <code>T</code> is <code>u32</code></i> \u2014 no, you can&#39;t as the same problem occurs: <a href=\"https://stackoverflow.com/q/589575/155423\">C doesn&#39;t define the size of an <code>int</code> other than as a minimum of 16 bits</a>."}, {"owner": {"reputation": 213464, "user_id": 2357112, "user_type": "registered", "accept_rate": 26, "profile_image": "https://www.gravatar.com/avatar/3f80897d57525afe9eac4fb8c8318052?s=128&d=identicon&r=PG", "display_name": "user2357112 supports Monica", "link": "https://stackoverflow.com/users/2357112/user2357112-supports-monica"}, "edited": false, "score": 1, "creation_date": 1512689414, "post_id": 47705093, "comment_id": 82371153, "body": "There have to be at least <code>CHAR_BIT</code> bits in a <code>bool</code>, so at least 8 (since <code>CHAR_BIT &gt;= 8</code>). The footnote in the link is saying that the <i>width</i> of <code>bool</code>, a term which is defined as excluding padding bits, may be 1."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1512690070, "post_id": 47705093, "comment_id": 82371352, "body": "Shepmaster: oops, I meant to say &#39;c_int&#39;   not &#39;u32&#39;. Would this work?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512690473, "post_id": 47705093, "comment_id": 82371452, "body": "@EddBarrett It&#39;d certainly be <i>better</i>, AFAICT, but the 64-bit-possibility is still worrisome."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1512691310, "post_id": 47705093, "comment_id": 82371640, "body": "Shepmaster: Hrm. I think what i&#39;m taking away from this is that the problem only exists when a C99 bool is larger than &#39;T&#39;. So following on from that, shouldnt using the smallest unsigned Rust integer type be safe, i.e. u8? If the C bool is larger, we truncate. If it is smaller, e.g. 1 bit, presumably this would have to be extended to the smallest integer a memory cell or register can address: a byte, which is in line with u8. Any holes in that reasoning?"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512760147, "post_id": 47705543, "comment_id": 82401910, "body": "I would note that for the purpose of FFI it may be of interest to restrict oneself to C89, which is significantly more standard than C99. There&#39;s little gain to using C99, so one might as well get that extra edge in portability. In C89, the usual convention is to use <code>int</code> (or <code>libc::c_int</code> in Rust) as a return type, with <code>0</code> signifying success and a negative value signifying an error."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1513013581, "post_id": 47705543, "comment_id": 82477729, "body": "We ended up using an <code>int</code> since this is well-defined in both languages."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1518453905, "post_id": 47705543, "comment_id": 84503255, "body": "Sorry shepmaster, a moderator moved my edit into your answer."}, {"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1518453966, "post_id": 47705543, "comment_id": 84503294, "body": "Wait! It was you!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1518453974, "post_id": 47705543, "comment_id": 84503301, "body": "@EddBarrett not a moderator, <a href=\"https://stackoverflow.com/posts/47705093/revisions\">it was me</a> <a href=\"https://stackoverflow.com/posts/47705543/revisions\">and me</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1518454090, "post_id": 47705543, "comment_id": 84503384, "body": "@EddBarrett answers don&#39;t belong in questions. By having answers in questions, it breaks the ability to upvote and downvote them separately. It also dis-incentivizes people from providing answers because why would you ever upvote an answer if the answer is in the question? If you&#39;d like, you can also edit your answer below to reflect the current state of affairs."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1542144773, "last_edit_date": 1542144773, "creation_date": 1512689511, "answer_id": 47705543, "question_id": 47705093, "link": "https://stackoverflow.com/questions/47705093/what-is-the-correct-type-for-returning-a-c99-bool-to-rust-via-the-ffi/47705543#47705543", "title": "What is the correct type for returning a C99 `bool` to Rust via the FFI?", "body": "<p>As of <a href=\"https://github.com/rust-lang/rust/pull/46176#issuecomment-362351652\" rel=\"nofollow noreferrer\">2018-02-01</a>, the size of Rust's bool is <a href=\"https://github.com/rust-lang/rust/pull/46176#issuecomment-359593446\" rel=\"nofollow noreferrer\">officially the same as C's <code>_Bool</code></a>.</p>\n\n<p>This means that <code>bool</code> is the correct type to use in FFI.</p>\n\n<hr>\n\n<p><strong>The rest of this answer applies to versions of Rust before the official decision was made</strong></p>\n\n<blockquote>\n  <p>Until Rust gets a <code>libc::c_bool</code>, what would you use for <code>T</code> and why is it safe and portable for all possible sizes of a C99 bool (>=1 bit)?</p>\n</blockquote>\n\n<p>As you've already linked to, the <em>official</em> answer is still \"to be determined\". That means that the only possibility that is guaranteed to be correct is: <strong>nothing</strong>.</p>\n\n<p>That's right, as sad as it may be. The only truly safe thing would be to convert your <code>bool</code> to a known, fixed-size integral type, such as <code>u8</code>, for the purpose of FFI. That means you need to marshal it on both sides.</p>\n\n<hr>\n\n<p>Practically, I'd keep using <code>bool</code> in my FFI code. As people have pointed out, it magically lines up on all the platforms that are in wide use at the moment. If the language decides to make <code>bool</code> FFI compatible, you are good to go. If they decide something else, I'd be <em>highly</em> surprised if they didn't introduce a lint to allow us to catch the errors quickly.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/38047167/155423\">Is bool guaranteed to be 1 byte?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1512748394, "post_id": 47712689, "comment_id": 82395835, "body": "You&#39;re making assumptions about representation and calling conventions that may not hold for all platforms supported by C and Rust. For example, if return values are passed on the stack instead of by register, you could end up grabbing the <i>top</i> byte of the return value instead of the bottom. <code>u8</code> is <i>extremely likely</i> to work (given the platforms supported by both languages), but it&#39;s no more a guarantee than just using <code>bool</code>."}], "tags": [], "owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "is_accepted": false, "score": 0, "last_activity_date": 1513008060, "last_edit_date": 1513008060, "creation_date": 1512729839, "answer_id": 47712689, "question_id": 47705093, "link": "https://stackoverflow.com/questions/47705093/what-is-the-correct-type-for-returning-a-c99-bool-to-rust-via-the-ffi/47712689#47712689", "title": "What is the correct type for returning a C99 `bool` to Rust via the FFI?", "body": "<p>After a lot of thought, I'm going to try answering my own question. Please comment if you can find a hole in the following reasoning.</p>\n\n<p><strong>This is not the correct answer -- see the comments below</strong></p>\n\n<p>I think a Rust <code>u8</code> is always safe for <code>T</code>.</p>\n\n<p>We know that a C99 <code>bool</code> is an integer large enough to store 0 or 1, which means it's free to be an unsigned integer of at least 1-bit, or (if you are feeling weird) a signed integer of at least 2-bits.</p>\n\n<p>Let's break it down by case: </p>\n\n<ol>\n<li><p>If the C99 <code>bool</code> is 8-bits then a Rust <code>u8</code> is perfect. Even in the signed case, the top bit will be a zero since representing 0 and 1 never requires a negative power of two.</p></li>\n<li><p>If the C99 <code>bool</code> is larger than a Rust <code>u8</code>, then by \"casting it down\" to a 8-bit size, we only ever discard leading zeros. Thus this is safe too.</p></li>\n<li><p>Now consider the case where the C99 <code>bool</code> is smaller than the Rust <code>u8</code>. When returning a value from a C function, it's not possible to return a value of size less than one byte due to the underlying calling convention. The CC will require return value to be loaded into a register or into a location on the stack. Since the smallest register or memory location is one byte, the return value will need to be extended (with zeros) to at least a one byte sized value (and I believe the same is true of function arguments, which too must adhere to calling convention). If the value is extended to a one-byte value, then it's the same as case 1. If the value is extended to a larger size, then it's the same as case 2.</p></li>\n</ol>\n"}], "owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1450, "favorite_count": 2, "accepted_answer_id": 47705543, "answer_count": 2, "score": 15, "last_activity_date": 1542144773, "creation_date": 1512686752, "last_edit_date": 1518443378, "question_id": 47705093, "link": "https://stackoverflow.com/questions/47705093/what-is-the-correct-type-for-returning-a-c99-bool-to-rust-via-the-ffi", "title": "What is the correct type for returning a C99 `bool` to Rust via the FFI?", "body": "<p>A colleague and I have been scratching our heads over how to return a <code>bool</code> from <code>&lt;stdbool.h&gt;</code> (a.k.a. <code>_Bool</code>) back to Rust via the FFI.</p>\n\n<p>We have our C99 code we want to use from Rust:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>bool\nmyfunc(void) {\n   ...\n}\n</code></pre>\n\n<p>We let Rust know about <code>myfunc</code> using an <code>extern C</code> block:</p>\n\n<pre><code>extern \"C\" {\n    fn myfunc() -&gt; T;\n}\n</code></pre>\n\n<p>What concrete type should <code>T</code> be?</p>\n\n<p>Rust doesn't have a <code>c_bool</code> in the <code>libc</code> crate, and if you search the internet, you will find various GitHub issues and RFCs where people discuss this, but don't really come to any consensus as to what is both correct and portable:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/1982#issuecomment-297534238\" rel=\"noreferrer\">https://github.com/rust-lang/rfcs/issues/1982#issuecomment-297534238</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/14608\" rel=\"noreferrer\">https://github.com/rust-lang/rust/issues/14608</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/992\" rel=\"noreferrer\">https://github.com/rust-lang/rfcs/issues/992</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/46156\" rel=\"noreferrer\">https://github.com/rust-lang/rust/pull/46156</a></li>\n</ul>\n\n<p>As far as I can gather:</p>\n\n<ul>\n<li>The size of a <code>bool</code> in C99 is undefined other than the fact it must be at least large enough to store <code>true</code> (1) and <code>false</code> (0). In other words, at least one bit long.</li>\n<li>It could even be <a href=\"https://github.com/rust-lang/rfcs/issues/1982#issuecomment-297531453\" rel=\"noreferrer\">one bit wide</a>.</li>\n<li>Its size might be <a href=\"https://github.com/rust-lang/rfcs/issues/1982#issuecomment-297942544\" rel=\"noreferrer\">ABI defined</a>.</li>\n</ul>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/issues/1982#issuecomment-297534238\" rel=\"noreferrer\">This comment</a> suggests that if a C99 <code>bool</code> is passed into a function as a parameter or out of a function as the return value, <em>and</em> the <code>bool</code> is smaller than a C <code>int</code> then it is promoted to the same size as an <code>int</code>. Under this scenario, we can tell Rust <code>T</code> is <code>u32</code>.</p>\n\n<p>All right, but what if (for some reason) a C99 <code>bool</code> is 64 bits wide? Is <code>u32</code> still safe? Perhaps under this scenario we truncate the 4 most significant bytes, which would be fine, since the 4 least significant bytes are more than enough to represent <code>true</code> and <code>false</code>.</p>\n\n<p>Is my reasoning correct? Until Rust gets a <code>libc::c_bool</code>, what would you use for <code>T</code> and why is it safe and portable for all possible sizes of a C99 <code>bool</code> (>=1 bit)?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512681197, "post_id": 47703636, "comment_id": 82367844, "body": "See also: <a href=\"https://stackoverflow.com/q/34438755/155423\">Why would I implement methods on a trait instead of as part of the trait?</a>"}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512681385, "post_id": 47703636, "comment_id": 82367927, "body": "I oversimplified my question into a duplicate. Is there a question that covers this case, but where <code>FancyService</code> and <code>MyFancyService</code> are generic?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512681949, "post_id": 47703636, "comment_id": 82368190, "body": "Can you expand a bit more on what you mean by &quot;generic&quot; in this case? I don&#39;t know what it would mean to implement a &quot;generic&quot; trait for a &quot;generic&quot; type..."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512683127, "post_id": 47703636, "comment_id": 82368763, "body": "@Shepmaster. Thanks for asking, I was able to figure it out. I needed to use associated types instead of making my trait generic."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512684613, "post_id": 47703636, "comment_id": 82369442, "body": "Ah, so the second answer on the linked duplicate then?"}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512695302, "post_id": 47703636, "comment_id": 82372643, "body": "I don&#39;t remember what got me to look at associated types. But your question <a href=\"https://stackoverflow.com/questions/32059370/when-is-it-appropriate-to-use-an-associated-type-versus-a-generic-type\">When is it appropriate to use an associated type versus a generic type?</a>, and the associated answer helped me greatly in figuring out when to use what feature."}], "owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 33, "favorite_count": 0, "closed_date": 1512680908, "answer_count": 0, "score": 0, "last_activity_date": 1512680680, "creation_date": 1512680178, "last_edit_date": 1512680680, "question_id": 47703636, "link": "https://stackoverflow.com/questions/47703636/why-cant-a-type-which-implements-trait-a-which-itself-implements-trait-b-be-con", "closed_reason": "Duplicate", "title": "Why can&#39;t a type which implements trait A which itself implements trait B be converted to a trait object of B?", "body": "<p>I have a trait <code>Service</code> defined as follows:</p>\n\n<pre><code>trait Service {\n    fn do_something(&amp;self);\n}\n</code></pre>\n\n<p><code>Service</code> is implemented by another trait, <code>FancyService</code>:</p>\n\n<pre><code>trait FancyService {\n    fn fancy(&amp;self) -&gt; i32;\n    fn do_something_fancy(&amp;self, t: i32);\n}\n\nimpl Service for FancyService {\n    fn do_something(&amp;self) {\n        let t = self.fancy();\n\n        self.do_something_fancy(t);\n    }\n}\n</code></pre>\n\n<p>Finally I have a <code>struct</code> that implements <code>FancyService</code>:</p>\n\n<pre><code>struct MyFancyService {\n    t: i32\n}\n\nimpl FancyService for MyFancyService {\n    fn fancy(&amp;self) -&gt; i32 { self.t }\n    fn do_something_fancy(&amp;self, t: i32) { println!(\"t: {}\", t); }\n}\n</code></pre>\n\n<p>The idea is <code>MyFancyService</code> should now also implement <code>Service</code> and thus I should be able to put it in a <code>Box&lt;Service&gt;</code>, like this:</p>\n\n<pre><code>let s: Box&lt;Service&gt; = Box::new(MyFancyService { t: 42 });\n</code></pre>\n\n<p>This doesn't compile. Rust complains that <code>MyFancyService</code>:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>   |\n28 |     let s: Box&lt;Service&gt; = Box::new(MyFancyService { t: 42 });\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Service` is not implemented for `MyFancyService`\n   |\n   = note: required for the cast to the object type `Service`\n</code></pre>\n</blockquote>\n\n<p>Given that <code>MyFancyService</code> implements <code>FancyService</code> which implements <code>Service</code>, why doesn't <code>MyFancyService</code> implement <code>Service</code>?</p>\n\n<p>Sample code in the <a href=\"http://play.integer32.com/?gist=0fdb6b532607b0fe7e7bcb1ad24cdd8e&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 331, "user_id": 1686964, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57d075d4754393932a8e98eec19264cb?s=128&d=identicon&r=PG", "display_name": "lerugray", "link": "https://stackoverflow.com/users/1686964/lerugray"}, "edited": false, "score": 0, "creation_date": 1512663171, "post_id": 47699194, "comment_id": 82358433, "body": "Please let me know how I can improve the question if possible, it&#39;s been a while since I&#39;ve been to stackoverflow"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512663229, "post_id": 47699194, "comment_id": 82358484, "body": "It&#39;s common practice to provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, but you&#39;ve provided a handwavy bit of code that no one else is able to compile."}, {"owner": {"reputation": 331, "user_id": 1686964, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57d075d4754393932a8e98eec19264cb?s=128&d=identicon&r=PG", "display_name": "lerugray", "link": "https://stackoverflow.com/users/1686964/lerugray"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512663249, "post_id": 47699194, "comment_id": 82358499, "body": "ah ok, ill post my whole code then"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1512663272, "post_id": 47699194, "comment_id": 82358516, "body": "<b>Not</b> whole code. <b>Minimal</b> code."}, {"owner": {"reputation": 331, "user_id": 1686964, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57d075d4754393932a8e98eec19264cb?s=128&d=identicon&r=PG", "display_name": "lerugray", "link": "https://stackoverflow.com/users/1686964/lerugray"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512663432, "post_id": 47699194, "comment_id": 82358612, "body": "It&#39;s fairly small code and im not sure what would alone be needed to compile so I added a hastebin link if thats kosher."}], "answers": [{"comments": [{"owner": {"reputation": 331, "user_id": 1686964, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57d075d4754393932a8e98eec19264cb?s=128&d=identicon&r=PG", "display_name": "lerugray", "link": "https://stackoverflow.com/users/1686964/lerugray"}, "edited": false, "score": 0, "creation_date": 1512663524, "post_id": 47699345, "comment_id": 82358668, "body": "Perfect! This syntax was just what I was looking for, would have never guessed using the semi colon&#39;s there, thank you!"}], "tags": [], "owner": {"reputation": 3711, "user_id": 203476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/838b591b09fc19aae77b84c63ddbe633?s=128&d=identicon&r=PG", "display_name": "Rasmus Kaj", "link": "https://stackoverflow.com/users/203476/rasmus-kaj"}, "is_accepted": false, "score": 1, "last_activity_date": 1512663466, "creation_date": 1512663466, "answer_id": 47699345, "question_id": 47699194, "link": "https://stackoverflow.com/questions/47699194/how-to-assign-2-variables-simultaneously-in-rust/47699345#47699345", "title": "How to assign 2 variables simultaneously in Rust?", "body": "<p>The second <code>printable: 'k'</code> is unreachable, since the first will match instead.  What you want is doing both assignments in the same arm of the match, like this:</p>\n\n<pre><code>Key { printable: 'k', .. } =&gt; {\n    *player_y -= 1;\n    *player_x -= 1;\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 331, "user_id": 1686964, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57d075d4754393932a8e98eec19264cb?s=128&d=identicon&r=PG", "display_name": "lerugray", "link": "https://stackoverflow.com/users/1686964/lerugray"}, "edited": false, "score": 0, "creation_date": 1512663587, "post_id": 47699359, "comment_id": 82358705, "body": "Awesome! That helped me grokk this, thanks for taking the time to help."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1512663756, "last_edit_date": 1512663756, "creation_date": 1512663515, "answer_id": 47699359, "question_id": 47699194, "link": "https://stackoverflow.com/questions/47699194/how-to-assign-2-variables-simultaneously-in-rust/47699359#47699359", "title": "How to assign 2 variables simultaneously in Rust?", "body": "<blockquote>\n  <p>How to assign 2 variables simultaneously in Rust?</p>\n</blockquote>\n\n<p>You cannot. You can bind two variables at once:</p>\n\n<pre><code>let (a, b) = (1, 2);\n</code></pre>\n\n<p>If you aren't trying to create new bindings, you need to have two assignment statements:</p>\n\n<pre><code>let mut a = 1;\nlet mut b = 2;\n\na = 3;\nb = 4;\n</code></pre>\n\n<p>In your case, for a match statement, you need to introduce a block:</p>\n\n<pre><code>let key = 42;\nlet mut a = 1;\nlet mut b = 2;\n\nmatch key {\n    0 =&gt; {\n        a += 1;\n        b -= 1;\n    }\n    _ =&gt; {\n        a -= 10;\n        b *= 100;\n    }\n}\n</code></pre>\n\n<p>You could also have the <code>match</code> expression evaluate to a tuple, which you then create new bindings for and apply them afterwards:</p>\n\n<pre><code>let key = 42;\nlet mut x = 1;\nlet mut y = 2;\n\nlet (d_x, d_y) = match key {\n    0 =&gt; (1, -1),\n    _ =&gt; (10, 10),\n};\n\nx += d_x;\ny += d_y;\n</code></pre>\n\n<p>I <strong>strongly</strong> recommend reading <a href=\"https://doc.rust-lang.org/stable/book/second-edition/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a> instead of trying to learn Rust by intuition or trial and error. It has an <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch06-02-match.html\" rel=\"nofollow noreferrer\">entire chapter on the match statement</a>. </p>\n\n<p>See also: </p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31798737/155423\">How to swap two variables?</a></li>\n</ul>\n"}], "owner": {"reputation": 331, "user_id": 1686964, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57d075d4754393932a8e98eec19264cb?s=128&d=identicon&r=PG", "display_name": "lerugray", "link": "https://stackoverflow.com/users/1686964/lerugray"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 931, "favorite_count": 0, "accepted_answer_id": 47699359, "answer_count": 2, "score": -1, "last_activity_date": 1512663819, "creation_date": 1512662983, "last_edit_date": 1512663819, "question_id": 47699194, "link": "https://stackoverflow.com/questions/47699194/how-to-assign-2-variables-simultaneously-in-rust", "title": "How to assign 2 variables simultaneously in Rust?", "body": "<p>I'm currently teaching myself Rust with a roguelike tutorial, and I'm attempting to get a key press to move a character diagonally which would mean <code>player_x -=1</code>, <code>player_y -= 1</code> for up left.</p>\n\n<p>No matter which way I try to arrange the code, I keep getting error messages from the compiler. I couldn't find any example of this anywhere in the documentation or on GitHub. </p>\n\n<pre><code>Key { code: Escape, .. } =&gt; return true, // exit game\n\n// movement keys\nKey { code: Up, .. } =&gt; *player_y -= 1,\nKey { code: Down, .. } =&gt; *player_y += 1,\nKey { code: Left, .. } =&gt; *player_x -= 1,\nKey { code: Right, .. } =&gt; *player_x += 1,\nKey { printable: 'k', .. } =&gt; *player_y -= 1,\nKey { printable: 'k', .. } =&gt; *player_x -= 1,\n\n_ =&gt; {}\n</code></pre>\n\n<p>You can kind of see what I'm trying to do here, but this throws an error message saying the pattern is unreachable, how would I fix this code? </p>\n\n<p>Here's <a href=\"https://hastebin.com/exiwageluv.php\" rel=\"nofollow noreferrer\">the full code</a>, it's fairly small, not sure what would be alone necessary to compile:</p>\n\n<pre><code>extern crate tcod;\nextern crate input;\n\nuse tcod::console::*;\nuse tcod::colors;\n\n// actual size of the window\nconst SCREEN_WIDTH: i32 = 80;\nconst SCREEN_HEIGHT: i32 = 50;\n\nconst LIMIT_FPS: i32 = 20;  // 20 frames-per-second maximum\n\n\nfn handle_keys(root: &amp;mut Root, player_x: &amp;mut i32, player_y: &amp;mut i32) -&gt; bool {\n    use tcod::input::Key;\n    use tcod::input::KeyCode::*;\n\n    let key = root.wait_for_keypress(true);\n    match key {\n        Key { code: Enter, alt: true, .. } =&gt; {\n            // Alt+Enter: toggle fullscreen\n            let fullscreen = root.is_fullscreen();\n            root.set_fullscreen(!fullscreen);\n        }\n        Key { code: Escape, .. } =&gt; return true,  // exit game\n\n        // movement keys\n        Key { code: Up, .. } =&gt; *player_y -= 1,\n        Key { code: Down, .. } =&gt; *player_y += 1,\n        Key { code: Left, .. } =&gt; *player_x -= 1,\n        Key { code: Right, .. } =&gt; *player_x += 1,\n        Key { printable: 'k', ..} =&gt; *player_y -= 1,\n        Key { printable: 'k', ..} =&gt; *player_x -= 1,\n\n        _ =&gt; {},\n    }\n\n    false\n}\n\nfn main() {\n    let mut root = Root::initializer()\n        .font(\"terminal8x8_gs_tc.png\", FontLayout::Tcod)\n        .font_type(FontType::Greyscale)\n        .size(SCREEN_WIDTH, SCREEN_HEIGHT)\n        .title(\"Rust/libtcod tutorial\")\n        .init();\n\n    tcod::system::set_fps(LIMIT_FPS);\n\n    let mut player_x = SCREEN_WIDTH / 2;\n    let mut player_y = SCREEN_HEIGHT / 2;\n\n    while !root.window_closed() {\n        root.set_default_foreground(colors::WHITE);\n        root.put_char(player_x, player_y, '@', BackgroundFlag::None);\n\n        root.flush();\n\n        root.put_char(player_x, player_y, ' ', BackgroundFlag::None);\n\n        // handle keys and exit game if needed\n        let exit = handle_keys(&amp;mut root, &amp;mut player_x, &amp;mut player_y);\n        if exit {\n            break\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["module", "rust", "integration-testing", "rust-cargo"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512660999, "post_id": 47698194, "comment_id": 82356949, "body": "Have you tried <code>#[cfg(test)]</code> on them?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512661027, "post_id": 47698194, "comment_id": 82356964, "body": "@MatthieuM. I also need them for non-test purposes."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1512662104, "post_id": 47698194, "comment_id": 82357705, "body": "Hum... not sure if it&#39;s possible to only put the condition on the <code>pub</code> and I guess duplicating the definition is not an option :x"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1512662318, "post_id": 47698194, "comment_id": 82357864, "body": "<i>use functions that I don&#39;t want to export outside of the crate</i> \u2014 then it&#39;s <b>not</b> an integration test. The purpose of an integration test is to exercise the code <i>as a user would</i>."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1512663042, "post_id": 47698194, "comment_id": 82358339, "body": "@Shepmaster tbh this popped up in my benchmark tests and I thought it could have been <code>Bencher</code>-specific, but I checked the same for <code>tests</code> and the result was identical. Since the latter is easier to analyze I picked it as the main theme."}], "answers": [{"comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1512667658, "post_id": 47698997, "comment_id": 82361069, "body": "Wrapper functions (even with just <code>#[cfg(test)]</code>) are a valid solution for functions, but not so much for <code>enum</code>s or <code>struct</code>s. Until something like <code>pub(specific_external_crate)</code> becomes available I guess that I&#39;ll just need to rearrange my tests and benchmarks a bit :)."}], "tags": [], "owner": {"reputation": 3711, "user_id": 203476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/838b591b09fc19aae77b84c63ddbe633?s=128&d=identicon&r=PG", "display_name": "Rasmus Kaj", "link": "https://stackoverflow.com/users/203476/rasmus-kaj"}, "is_accepted": false, "score": 4, "last_activity_date": 1528897097, "last_edit_date": 1528897097, "creation_date": 1512662440, "answer_id": 47698997, "question_id": 47698194, "link": "https://stackoverflow.com/questions/47698194/can-i-make-an-object-public-for-integration-tests-and-or-benchmarks-only/47698997#47698997", "title": "Can I make an object public for integration tests and/or benchmarks only?", "body": "<p>One difference between integration tests and unit tests is that integration tests is supposed to test the \"public API\" of your crate only.  Tests for internal functions is fine to keep together with the functions themselves in the <code>src</code> tree.</p>\n\n<p>If you want to keep them a little separate, you can use a test submodule to the module containing the functions to test, as private parts are available to submodules.</p>\n\n<p>If you still really want to have internal / unit tests in the tests in the <code>tests</code> directory, you can use a feature flag to enable public wrappers of internal functions to test (and mark the tests with the same feature flag).  Something like this in the code:</p>\n\n<pre><code>#[cfg(feature = \"testable_privates\")]\npub fn exposed_something(args) {\n    something_private(args)\n}\n</code></pre>\n\n<p>Then in your test methods, you can import and call <code>exposed_something</code>.  If the feature <code>testable_privates</code> is not defined, your tests will fail to compile.  To solve that, use the feature flag to make the tests conditional as well;</p>\n\n<pre><code>#[cfg(feature = \"testable_privates\")]\n#[test]\nfn test_something() {\n    assert_eq!(exposed_something(my_args), expected_result)\n}\n</code></pre>\n\n<p>Also, before doing that you need to define the feature in your <code>Cargo.toml</code>, like so:</p>\n\n<pre><code>[features]\ntestable_privates = []\n</code></pre>\n\n<p>(The empty array is to signify that the feature does not require any otherwise optional dependencies).</p>\n\n<p>Now, if you just run <code>cargo test</code>, both exposed_something and test_something will just be silently ignored, but if you run <code>cargo test --features testable_privates</code>, they will be compiled and tested.</p>\n\n<p>As you see, this gets rather complicated, so I really think it is a better idea to just test public aspects of your crates from <code>tests</code> and keep tests of private methods close to those methods themselves in <code>src</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1512665585, "post_id": 47699009, "comment_id": 82359844, "body": "Unfortunately I&#39;m getting <code>error[E0364]: parse is private, and cannot be reexported</code> and <code>note: consider marking parse as pub in the imported module</code>."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1512741784, "post_id": 47699009, "comment_id": 82391938, "body": "Well, you could mark <code>parse</code> as <code>pub</code> and so long as you put it in a private module, it won&#39;t be accessible directly from outside your crate, but it can be re-exported. Unfortunately, I just checked and <code>#[cfg(test)]</code> items are disabled for integration tests (i.e. for tests that live in the <code>tests</code> folder), so you will probably need to use a <code>feature</code> to enable the re-export module as suggested by Rasmus Kaj."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1512662472, "creation_date": 1512662472, "answer_id": 47699009, "question_id": 47698194, "link": "https://stackoverflow.com/questions/47698194/can-i-make-an-object-public-for-integration-tests-and-or-benchmarks-only/47699009#47699009", "title": "Can I make an object public for integration tests and/or benchmarks only?", "body": "<p>You can probably do it by adding a public module that only exists when testing and that re-exports the required symbols. Something like:</p>\n\n<pre><code>#[cfg(test)]\npub mod testing_parser {\n    pub use parser::foo;\n}\n</code></pre>\n\n<p>Then <code>use my_crate::testing_parser::foo</code> in your tests.</p>\n"}], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1083, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1528897097, "creation_date": 1512659763, "last_edit_date": 1512667761, "question_id": 47698194, "link": "https://stackoverflow.com/questions/47698194/can-i-make-an-object-public-for-integration-tests-and-or-benchmarks-only", "title": "Can I make an object public for integration tests and/or benchmarks only?", "body": "<p>As suggested by <a href=\"https://doc.rust-lang.org/book/first-edition/testing.html#the-tests-directory\" rel=\"nofollow noreferrer\">The Book</a>, I have moved the integration tests in my crate to a <code>tests</code> directory. Some of those tests use functions that I don't want to export outside of the crate, though, and I am no longer able to use them in the integration test folder. I use them for non-test purposes too, so <strong>they need to compile outside of tests too</strong>. I tried using variants of <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1422-pub-restricted.md\" rel=\"nofollow noreferrer\"><code>pub(restricted)</code></a>, but I wasn't able to make it work. Ideally I'd like to have something like <code>pub(tests)</code>.</p>\n\n<p>directory tree (the relevant bits):</p>\n\n<pre><code>my_crate\n|- src\n   |- parser.rs\n|- tests\n   |- parsing.rs\n|- benches\n   |- parsing.rs\n</code></pre>\n\n<p>tests/parsing.rs:</p>\n\n<pre><code>extern crate my_crate;\n\nuse my_crate::parser::foo;\n\n#[test]\nfn temp() {\n    foo();\n}\n</code></pre>\n\n<p>benches/parsing.rs:</p>\n\n<pre><code>#![feature(test)]\nextern crate test;\nextern crate my_crate;\n\nuse test::Bencher;\nuse my_crate::parser::foo;\n\n#[bench]\nfn temp(b: &amp;mut Bencher) {\n    b.iter(|| { foo(); });\n}\n</code></pre>\n\n<p>My current workaround is to make the relevant objects <code>pub</code>lic and invisible in the docs (<code>#[doc(hidden)]</code>), but it doesn't convey the proper intention. Can I make an object public <strong>only</strong> for integration test / benchmarking purposes?</p>\n"}, {"tags": ["rust", "documentation"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1512742081, "last_edit_date": 1512742081, "creation_date": 1512661909, "answer_id": 47698845, "question_id": 47698062, "link": "https://stackoverflow.com/questions/47698062/how-to-write-documentation-tests-for-an-internal-api/47698845#47698845", "title": "How to write documentation tests for an internal API?", "body": "<p>I don't think it is possible if you want the test to compile and run, see <a href=\"https://stackoverflow.com/questions/47698194/can-i-make-an-object-public-for-integration-tests-and-or-benchmarks-only\">this related question</a>.</p>\n\n<p>I you only want to include the code as a sample in the documentation, without trying to compile and run it, you can exclude it from the tests by adding the <code>ignore</code> flag:</p>\n\n<pre><code>/// ```rust,ignore\n/// use lib::object::Object;\n///\n/// let tn = Object::new();\n/// ```\n</code></pre>\n"}], "owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 276, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1520187978, "creation_date": 1512659374, "last_edit_date": 1520187978, "question_id": 47698062, "link": "https://stackoverflow.com/questions/47698062/how-to-write-documentation-tests-for-an-internal-api", "title": "How to write documentation tests for an internal API?", "body": "<p>I'm writing a library which contains private structs and methods:</p>\n\n<pre><code>/// Constructs a new `Object`\n///\n/// Internal API\n///\n/// # Example\n/// ```rust\n/// use lib::object::Object;\n///\n/// let tn = Object::new();\n/// ```\n</code></pre>\n\n<p>When I run <code>cargo test</code>, the doctest fails because <code>Object</code> is a private struct.</p>\n\n<p>Is it possible to make it compile <em>and run</em>?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1512646561, "post_id": 47694085, "comment_id": 82347586, "body": "I have never seen a <code>systest</code>. Can you give an example project that has one?"}, {"owner": {"reputation": 1302, "user_id": 2491528, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/723f1b1cb73fa871f360bdea9bd17a8a?s=128&d=identicon&r=PG", "display_name": "Federico", "link": "https://stackoverflow.com/users/2491528/federico"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1512650044, "post_id": 47694085, "comment_id": 82349821, "body": "I added two links"}], "answers": [{"tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": true, "score": 6, "last_activity_date": 1512662715, "last_edit_date": 1512662715, "creation_date": 1512648744, "answer_id": 47694886, "question_id": 47694085, "link": "https://stackoverflow.com/questions/47694085/what-is-a-rust-systest/47694886#47694886", "title": "What is a Rust systest?", "body": "<p><code>systest</code> is not a standard name used in Rust or Cargo. However, it is the name suggested by the documentation for <a href=\"https://github.com/alexcrichton/ctest\" rel=\"nofollow noreferrer\">ctest</a>, which performs automated testing for FFI bindings. build.rs uses <code>ctest</code> to generate the all.rs file which contains the tests, and this is included from the main file.</p>\n\n<p>According to the documentation, the tests generate include ensuring that all function signatures, constant values, struct layout/alignment, type size/alignment, etc., all match their C equivalent.</p>\n"}], "owner": {"reputation": 1302, "user_id": 2491528, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/723f1b1cb73fa871f360bdea9bd17a8a?s=128&d=identicon&r=PG", "display_name": "Federico", "link": "https://stackoverflow.com/users/2491528/federico"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "accepted_answer_id": 47694886, "answer_count": 1, "score": 3, "last_activity_date": 1512662715, "creation_date": 1512646065, "last_edit_date": 1512662690, "question_id": 47694085, "link": "https://stackoverflow.com/questions/47694085/what-is-a-rust-systest", "title": "What is a Rust systest?", "body": "<p>I <a href=\"https://github.com/alexcrichton/curl-rust/tree/master/systest\" rel=\"nofollow noreferrer\">sometimes</a> <a href=\"https://github.com/sfackler/rust-jni-sys/tree/master/systest\" rel=\"nofollow noreferrer\">see</a> that a Rust crate has a folder called <code>systest</code>. I guess that the name stands for \"system test\", but I can't find any documentation of this.</p>\n\n<p>My questions are:</p>\n\n<ul>\n<li>What is the purpose of a <code>systest</code>? Just testing that a crate compiles fine, or also testing that some code in another crate runs fine?</li>\n<li>What are the rules to follow when writing a <code>systest</code>? Is it just a crate in a folder called <code>systest</code>?</li>\n<li>Why does the <code>lib.rs</code> in <code>systest/src</code> seem to always include a file <code>all.rs</code> generated from <code>build.rs</code>?</li>\n</ul>\n"}, {"tags": ["rust", "sublimetext3"], "comments": [{"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 1, "creation_date": 1512648945, "post_id": 47693678, "comment_id": 82349178, "body": "It looks like you aren&#39;t running the code you think you&#39;re running. There is no <code>&quot;Hello world!&quot;</code> in the code in the screenshot"}, {"owner": {"reputation": 1725, "user_id": 5999372, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/LHqIF.png?s=128&g=1", "display_name": "Rain", "link": "https://stackoverflow.com/users/5999372/rain"}, "reply_to_user": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 1, "creation_date": 1512649847, "post_id": 47693678, "comment_id": 82349699, "body": "@user25064 Thats because (Hello World) is just an example of a user input .. just look at the bottom of the screenshot"}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 1, "creation_date": 1512652647, "post_id": 47693678, "comment_id": 82351468, "body": "interesting, does it work on command line? the compiled result is in the target folder"}, {"owner": {"reputation": 1725, "user_id": 5999372, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/LHqIF.png?s=128&g=1", "display_name": "Rain", "link": "https://stackoverflow.com/users/5999372/rain"}, "reply_to_user": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 1, "creation_date": 1512652908, "post_id": 47693678, "comment_id": 82351626, "body": "Yes it does work on command line. I believe the issue is that these kind of packages does not support user input processing or something like that. And i found someone who had the exact same problem but with Python."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1512656660, "post_id": 47693678, "comment_id": 82353996, "body": "My guess would be that Sublimetext communicates with child processes through pipes and that rust (and python) change their buffering behaviour when <code>stdin</code> is a pipe rather than a tty. Can you try to type a lot of extra random data after you type <code>return</code>?"}, {"owner": {"reputation": 16941, "user_id": 814803, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LUo4b.png?s=128&g=1", "display_name": "OdatNurd", "link": "https://stackoverflow.com/users/814803/odatnurd"}, "edited": false, "score": 1, "creation_date": 1512672547, "post_id": 47693678, "comment_id": 82363516, "body": "What you type into the output panel doesn&#39;t get sent to the program you&#39;re running because Sublime doesn&#39;t connect it to the standard input of the thing you&#39;re running. If you want to run a program that&#39;s interactive, you need to run it externally."}], "owner": {"reputation": 1725, "user_id": 5999372, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/LHqIF.png?s=128&g=1", "display_name": "Rain", "link": "https://stackoverflow.com/users/5999372/rain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 227, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1512644845, "creation_date": 1512644845, "question_id": 47693678, "link": "https://stackoverflow.com/questions/47693678/cant-get-user-input-using-rust-enhanced-package-on-sublime-text-3", "title": "Can&#39;t get user input using Rust Enhanced package on Sublime Text 3", "body": "<p>I've installed Rust Enhanced package on Sublime Text 3 and everything works just fine until I try to get user input!. </p>\n\n<p>As you can see in the next picture when I print Hello World! and press enter nothing happens! which means user input is not being processed?</p>\n\n<p><a href=\"https://i.stack.imgur.com/6jRVv.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/6jRVv.png\" alt=\"Rust Enhanced package in Sublime 3 \"></a></p>\n\n<p>I'm expecting Rust to print (Hello World!) again on the user screen.</p>\n\n<p>So is there a solution?.</p>\n\n<p>If there's not can you suggest any alternatives?.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 452, "user_id": 275442, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5Yf6T.jpg?s=128&g=1", "display_name": "julioolvr", "link": "https://stackoverflow.com/users/275442/julioolvr"}, "edited": false, "score": 0, "creation_date": 1512612936, "post_id": 47686318, "comment_id": 82332642, "body": "My guess: <code>FnMut</code> closures can possibly be called multiple times. In this case a <code>for_each</code> will execute in sequence, but what if that closure were being passed to multiple threads? You could consume <code>v</code> and then other thread try to access it before you can reassign to it. But this is just a wild guess - I&#39;m a Rust newbie myself so I&#39;m not sure."}, {"owner": {"reputation": 21, "user_id": 6896315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/204f6ee6bb116f72ce99ae4ce9f8d4e9?s=128&d=identicon&r=PG&f=1", "display_name": "blyncsy-david-lewis", "link": "https://stackoverflow.com/users/6896315/blyncsy-david-lewis"}, "reply_to_user": {"reputation": 452, "user_id": 275442, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5Yf6T.jpg?s=128&g=1", "display_name": "julioolvr", "link": "https://stackoverflow.com/users/275442/julioolvr"}, "edited": false, "score": 0, "creation_date": 1512613210, "post_id": 47686318, "comment_id": 82332719, "body": "@julioolvr I had that thought too, but I believe rust has traits that must be implemented for that to be so. The Send and Sync traits are what tell rust that types can be shared between threads, and for_each does not require either of those types so that should never be possible."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1512615184, "creation_date": 1512615184, "answer_id": 47686825, "question_id": 47686318, "link": "https://stackoverflow.com/questions/47686318/why-does-rust-not-recognize-that-i-re-assign-to-the-moved-variable-inside-a-clos/47686825#47686825", "title": "Why does Rust not recognize that I re-assign to the moved variable inside a closure?", "body": "<blockquote>\n  <p>the reassignment to <code>v</code> should satisfy the borrow checker that no variable will be accessed after being moved</p>\n</blockquote>\n\n<p>Pay attention to the error message details \u2014 there isn't a move to start with:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>cannot move out of captured outer variable in an `FnMut` closure\n</code></pre>\n</blockquote>\n\n<p>Since there was no move out, it doesn't make sense to move something back in.</p>\n\n<p>Instead, you can replace the value through the mutable reference and consume the old value: </p>\n\n<pre><code>fn main() {\n    let mut v = vec![1, 2, 3, 4];\n\n    vec![1, 2, 3].into_iter().for_each(move |x| {\n        let v_old = std::mem::replace(&amp;mut v, vec![1, 2, 3, 4]);\n        v_old.into_iter().fold(x, |a, b| a + b);\n    });\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 4, "last_activity_date": 1512633039, "creation_date": 1512633039, "answer_id": 47690098, "question_id": 47686318, "link": "https://stackoverflow.com/questions/47686318/why-does-rust-not-recognize-that-i-re-assign-to-the-moved-variable-inside-a-clos/47690098#47690098", "title": "Why does Rust not recognize that I re-assign to the moved variable inside a closure?", "body": "<p>As @Shepmaster mentioned, the fix is to use <code>std::mem::replace</code>.</p>\n\n<p>So, what is the difference between:</p>\n\n<pre><code>    v.into_iter().fold(x, |a, b| a + b);\n    v = vec![1, 2, 3, 4];\n</code></pre>\n\n<p>and:</p>\n\n<pre><code>    let v_old = std::mem::replace(&amp;mut v, vec![1, 2, 3, 4]);\n    v_old.into_iter().fold(x, |a, b| a + b);\n</code></pre>\n\n<p>?</p>\n\n<p>In two words: <strong>exception safety</strong>.</p>\n\n<p>If, for some reason, the expression <code>v.into_iter().fold(...)</code> would panic, it would leave <code>v</code> moved out and the next statement would never be executed.</p>\n\n<p>This is perfectly acceptable in a <code>FnOnce</code>, as you will never call the closure another time, but not acceptable in a <code>FnMut</code> or <code>Fn</code> as on the next call... <em>what would you do with <code>v</code></em>?</p>\n\n<p>On the other hand, using <code>std::mem::replace</code>, you swap <em>first</em> and <em>then</em> execute the potentially panicking operation. If the operation does panic, then all that is left \"moved out\" is a temporary variable which disappears at the end of the stack frame anyway. No issue.</p>\n"}], "owner": {"reputation": 21, "user_id": 6896315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/204f6ee6bb116f72ce99ae4ce9f8d4e9?s=128&d=identicon&r=PG&f=1", "display_name": "blyncsy-david-lewis", "link": "https://stackoverflow.com/users/6896315/blyncsy-david-lewis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 279, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1512633039, "creation_date": 1512611270, "last_edit_date": 1512612204, "question_id": 47686318, "link": "https://stackoverflow.com/questions/47686318/why-does-rust-not-recognize-that-i-re-assign-to-the-moved-variable-inside-a-clos", "title": "Why does Rust not recognize that I re-assign to the moved variable inside a closure?", "body": "<p>I am having trouble understanding why a particular pattern is not compiling.</p>\n\n<p>Rust recognizes when I move a variable and then reassign to it outside of a closure and I think properly allows the code to compile, but when I try to do the same in a closure that will be run more than once it will not.</p>\n\n<pre><code>fn main() {\n    let mut v = vec![1, 2, 3, 4];\n    v.into_iter().fold(0, |a, b| a + b);\n    v = vec![1, 2, 3, 4];\n    vec![1, 2, 3].into_iter().for_each(|x| {\n        v.into_iter().fold(x, |a, b| a + b);\n        v = vec![1, 2, 3, 4];\n    });\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of captured outer variable in an `FnMut` closure\n --&gt; src/main.rs:6:9\n  |\n2 |     let mut v = vec![1, 2, 3, 4];\n  |         ----- captured outer variable\n...\n6 |         v.into_iter().fold(x, |a, b| a + b);\n  |         ^ cannot move out of captured outer variable in an `FnMut` closure\n</code></pre>\n\n<p>It seems to me that the reassignment to <code>v</code> should satisfy the borrow checker that no variable will be accessed after being moved. Am I missing something?</p>\n"}]