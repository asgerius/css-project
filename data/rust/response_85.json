[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1472072801, "post_id": 39132477, "comment_id": 65611353, "body": "There are certainly <a href=\"https://doc.rust-lang.org/std/cmp/#functions\" rel=\"nofollow noreferrer\">free functions in the standard library</a>; you must not have looked very far."}, {"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1472072865, "post_id": 39132477, "comment_id": 65611383, "body": "@Shepmaster Maybe he wanted <code>libc::free()</code> :P"}], "answers": [{"tags": [], "owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "is_accepted": false, "score": 2, "last_activity_date": 1472072846, "creation_date": 1472072846, "answer_id": 39133039, "question_id": 39132477, "link": "https://stackoverflow.com/questions/39132477/what-is-an-idiomatic-rust-way-to-format-a-value-to-multiple-kinds-of-strings/39133039#39133039", "title": "What is an idiomatic Rust way to format a value to multiple kinds of strings?", "body": "<p>You can <code>impl Latitude</code> if you need to pass arguments or <code>impl ToString for Latitude</code> if you don't:</p>\n\n<pre><code>use std::string::ToString;\n\nstruct Latitude(f64);\n\n// If you need parameterisation on your conversion function\nimpl Latitude {\n    // You'd probably use a better-suited name\n    pub fn to_string_parameterised(&amp;self, use_min_sec_variant: bool) -&gt; String {\n        // Conversion code\n        format!(\"{} {}\", self.0, use_min_sec_variant)\n    }\n}\n\n// If you don't need parameterisation and want to play nicely with 100% of all code elsewhere\nimpl ToString for Latitude {\n    fn to_string(&amp;self) -&gt; String {\n        // Conversion code\n        format!(\"{}\", self.0)\n    }\n}\n\nfn main() {\n    let lat = Latitude(45.0);\n    println!(\"{}\", lat.to_string_parameterised(false));\n    println!(\"{}\", lat.to_string());\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1472073311, "creation_date": 1472073311, "answer_id": 39133151, "question_id": 39132477, "link": "https://stackoverflow.com/questions/39132477/what-is-an-idiomatic-rust-way-to-format-a-value-to-multiple-kinds-of-strings/39133151#39133151", "title": "What is an idiomatic Rust way to format a value to multiple kinds of strings?", "body": "<p>You can create wrapper types with different types of formatting and return them as a method:</p>\n\n<pre><code>struct Latitude(f64);\nstruct MinutesSeconds(f64);\n\nimpl Latitude {\n    fn minutes_seconds(&amp;self) -&gt; MinutesSeconds {\n        MinutesSeconds(self.0)\n    }\n}\n\nimpl fmt::Display for MinutesSeconds {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"latitude in a different format\")\n    }\n}\n</code></pre>\n\n<p>This is the same idea as <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.display\"><code>Path::display</code></a>.</p>\n\n<p>As for the valid / invalid concept, it sounds like you really want a <code>struct Latitude(Option&lt;f64&gt;)</code> and then provide <code>None</code> when it is invalid.</p>\n"}, {"tags": [], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "is_accepted": false, "score": 4, "last_activity_date": 1472073853, "last_edit_date": 1472073853, "creation_date": 1472073547, "answer_id": 39133193, "question_id": 39132477, "link": "https://stackoverflow.com/questions/39132477/what-is-an-idiomatic-rust-way-to-format-a-value-to-multiple-kinds-of-strings/39133193#39133193", "title": "What is an idiomatic Rust way to format a value to multiple kinds of strings?", "body": "<p>Basically you're free to do what you want. Without more context on your goals, any method seems good enough for me.</p>\n\n<p>Personally I'd do it as:</p>\n\n<pre><code>struct Latitude(f64);\n\nimpl Latitutde {\n    pub fn format_as_x(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result&lt;(), Error&gt; {}\n\n    pub fn format_as_y(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result&lt;(), Error&gt; {}\n}\n</code></pre>\n\n<p>plus a <code>Display</code> trait + <code>to_format_x() -&gt; String</code> convenience functions.</p>\n\n<p><code>format_as_y</code> are IMO best method since they handle errors, can take any formatter and don't need to allocate a <code>String</code> to return.</p>\n\n<p>By the way, taking <code>bool</code> arguments is usually an anti-pattern: boolean trap.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 727, "favorite_count": 0, "accepted_answer_id": 39133151, "answer_count": 3, "score": 4, "last_activity_date": 1472084655, "creation_date": 1472070434, "last_edit_date": 1472084655, "question_id": 39132477, "link": "https://stackoverflow.com/questions/39132477/what-is-an-idiomatic-rust-way-to-format-a-value-to-multiple-kinds-of-strings", "title": "What is an idiomatic Rust way to format a value to multiple kinds of strings?", "body": "<p>I have latitude in degrees in the form of a <code>f64</code> and I need to convert it into a <code>String</code>. At first I thought about implementing <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html\" rel=\"nofollow\"><code>Display</code></a>, like this:</p>\n\n<pre><code>struct Latitude(f64);\n\nimpl fmt::Display for Latitude {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{} {}\", if self.0 &gt; 0. { \"N\" } else { \"S\" }, self.0)\n    }\n}\n\nfn main() {\n    let lat: f64 = 45.;\n    println!(\"{}\", Latitude(lat));\n}\n</code></pre>\n\n<p>After that, I have additional requirements. I need convert to one of two representations:</p>\n\n<ol>\n<li><code>N 70.152351</code></li>\n<li><code>N 70\u00b0 09' 08\"</code></li>\n</ol>\n\n<p>There is also an additional flag; when it is <code>false</code>, I need something like:</p>\n\n<ol>\n<li><code>- --.------</code> </li>\n<li><code>- --\u00b0 -' -\"</code></li>\n</ol>\n\n<p>The most simple way to implement this will be:</p>\n\n<pre><code>fn format_lat(degree: f64, use_min_sec_variant: bool, is_valid: bool) -&gt; String;\n</code></pre>\n\n<p>However, I don't see any free functions in the Rust standard library.</p>\n\n<p>Maybe I should use <code>struct Latitude(f64)</code> and implement a <code>to_string</code> method? Or maybe I should implement some other trait?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1472065927, "post_id": 39130789, "comment_id": 65607963, "body": "While this may not be an exact duplicate of the existing question, your question was in danger of being closed for other reasons. I figured pointing to that one was at least marginally more useful."}, {"owner": {"reputation": 1728, "user_id": 1187678, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/17eaea8b195588d8c6bab476c340a2d7?s=128&d=identicon&r=PG", "display_name": "burfl", "link": "https://stackoverflow.com/users/1187678/burfl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1472066775, "post_id": 39130789, "comment_id": 65608406, "body": "In the interest of not repeating the same mistake, would you mind sharing the &quot;other reasons&quot;?  No hard feelings, of course.  It&#39;s for my benefit :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1472068160, "post_id": 39130789, "comment_id": 65609122, "body": "I actually forget which specific ones, but I think there were a few for <i>too broad</i>, maybe some on <i>opinion based</i>. <a href=\"/help/closed-questions\">See some detail on these</a>. In general, asking how to solve a problem without showing some self effort towards it wont get the best response. Not including code inline is another faux pas."}, {"owner": {"reputation": 1728, "user_id": 1187678, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/17eaea8b195588d8c6bab476c340a2d7?s=128&d=identicon&r=PG", "display_name": "burfl", "link": "https://stackoverflow.com/users/1187678/burfl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1472077417, "post_id": 39130789, "comment_id": 65613166, "body": "This is actually translatable almost line-for-line.  I can&#39;t answer the question now that it&#39;s closed, but here&#39;s the solution: <a href=\"https://play.rust-lang.org/?gist=20d752b48fe8ab2d9d66d4da8d89aae7&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "owner": {"reputation": 1728, "user_id": 1187678, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/17eaea8b195588d8c6bab476c340a2d7?s=128&d=identicon&r=PG", "display_name": "burfl", "link": "https://stackoverflow.com/users/1187678/burfl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 90, "favorite_count": 0, "closed_date": 1472065867, "answer_count": 0, "score": 0, "last_activity_date": 1472068261, "creation_date": 1472064017, "last_edit_date": 1495541778, "question_id": 39130789, "link": "https://stackoverflow.com/questions/39130789/in-rust-what-is-the-most-idiomatic-way-to-implement-a-simple-fsm", "closed_reason": "Duplicate", "title": "In Rust, what is the most idiomatic way to implement a simple FSM?", "body": "<p>In learning Rust, I'm trying to implement a simple, clean FSM, very similar to <a href=\"https://play.golang.org/p/GrthJHzN7n\" rel=\"nofollow noreferrer\">this example</a> which I've used many times in Go:</p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>package main\n\nimport (\n    \"fmt\"\n)\n\ntype StateFn func(interface{}) StateFn\n\nfunc First(interface{}) StateFn {\n    fmt.Println(\"First\")\n    return Second\n}\n\nfunc Second(interface{}) StateFn {\n    fmt.Println(\"Second\")\n    return nil\n}\n\nfunc main() {\n    for state := First(nil); state != nil; state = state(nil) {}\n}\n</code></pre>\n\n<p>I'm hoping for something similarly clean and expressive and, ideally, generic, so that I don't have to use the Rust equivalent of <code>interface{}</code> in the func parameter.</p>\n\n<p>This question is an extension of <a href=\"https://stackoverflow.com/questions/39130293/in-rust-how-can-i-define-a-function-type-which-returns-its-own-type?noredirect=1#comment65606785_39130293\">How can I define a Rust function type which returns its own type?</a>.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1472063570, "post_id": 39130293, "comment_id": 65606704, "body": "In Rust, you might want to read about <i>session types</i> to implement compile-time checked FSMs. Otherwise, an <code>enum</code> with a method consuming <code>self</code> (and an event) and returning <code>Self</code> (or <code>Result&lt;Self&gt;</code>) is more flexible (but transitions are not compile-time checked)."}, {"owner": {"reputation": 1728, "user_id": 1187678, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/17eaea8b195588d8c6bab476c340a2d7?s=128&d=identicon&r=PG", "display_name": "burfl", "link": "https://stackoverflow.com/users/1187678/burfl"}, "edited": false, "score": 1, "creation_date": 1472064105, "post_id": 39130293, "comment_id": 65607000, "body": "If any of you fine gents/ladies want to answer my new (related) question, it&#39;s over here: <a href=\"http://stackoverflow.com/questions/39130789/in-rust-what-is-the-most-idiomatic-way-to-implement-a-simple-fsm\" title=\"in rust what is the most idiomatic way to implement a simple fsm\">stackoverflow.com/questions/39130789/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1472063031, "post_id": 39130499, "comment_id": 65606396, "body": "On the other hand... I wonder if there&#39;s a trick with <code>Self</code>?"}, {"owner": {"reputation": 1728, "user_id": 1187678, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/17eaea8b195588d8c6bab476c340a2d7?s=128&d=identicon&r=PG", "display_name": "burfl", "link": "https://stackoverflow.com/users/1187678/burfl"}, "edited": false, "score": 0, "creation_date": 1472063419, "post_id": 39130499, "comment_id": 65606612, "body": "I edited the question to add some context.  Maybe there&#39;s an alternative solution..."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1728, "user_id": 1187678, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/17eaea8b195588d8c6bab476c340a2d7?s=128&d=identicon&r=PG", "display_name": "burfl", "link": "https://stackoverflow.com/users/1187678/burfl"}, "edited": false, "score": 3, "creation_date": 1472063649, "post_id": 39130499, "comment_id": 65606743, "body": "@burfl: There are alternatives, but as they completely change the question from &quot;how to define a recursive fn&quot; to &quot;how to best implement FSMs&quot;... let&#39;s keep to the first question (the second might be off-topic, maybe...)"}, {"owner": {"reputation": 1728, "user_id": 1187678, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/17eaea8b195588d8c6bab476c340a2d7?s=128&d=identicon&r=PG", "display_name": "burfl", "link": "https://stackoverflow.com/users/1187678/burfl"}, "edited": false, "score": 0, "creation_date": 1472063720, "post_id": 39130499, "comment_id": 65606783, "body": "That&#39;s fair.  I&#39;ll undo the edit and perhaps make a new question."}], "tags": [], "owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "is_accepted": false, "score": 3, "last_activity_date": 1472062998, "creation_date": 1472062998, "answer_id": 39130499, "question_id": 39130293, "link": "https://stackoverflow.com/questions/39130293/how-can-i-define-a-rust-function-type-which-returns-its-own-type/39130499#39130499", "title": "How can I define a Rust function type which returns its own type?", "body": "<p>Cyclic types are unsupported in Rust:</p>\n\n<pre><code>type a = fn(String) -&gt; a;\n</code></pre>\n\n<p>Yields the following error:</p>\n\n<pre><code>error: unsupported cyclic reference between types/traits detected [--explain E0391]\n --&gt; &lt;anon&gt;:1:24\n  |&gt;\n1 |&gt; type a = fn(String) -&gt; a;\n  |&gt;                        ^\nnote: the cycle begins when processing `a`...\nnote: ...which then again requires processing `a`, completing the cycle.\n</code></pre>\n\n<p>See on <a href=\"https://play.rust-lang.org/?code=type%20a%20%3D%20fn(String)%20-%3E%20a%3B%0A%0Afn%20main()%20%7B%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 1728, "user_id": 1187678, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/17eaea8b195588d8c6bab476c340a2d7?s=128&d=identicon&r=PG", "display_name": "burfl", "link": "https://stackoverflow.com/users/1187678/burfl"}, "is_accepted": true, "score": 5, "last_activity_date": 1472077174, "creation_date": 1472077174, "answer_id": 39133865, "question_id": 39130293, "link": "https://stackoverflow.com/questions/39130293/how-can-i-define-a-rust-function-type-which-returns-its-own-type/39133865#39133865", "title": "How can I define a Rust function type which returns its own type?", "body": "<p>I did some digging in the docs and took to the playground and I think I've been able to answer this myself, although it does require an intermediary type: an <code>enum</code>, to be specific.</p>\n\n<pre><code>fn main() {\n    let mut state = State::Some(first);\n    while let State::Some(s) = state {\n        state = s(0)\n    }\n}\n\nenum State&lt;T&gt; {\n    Some(fn(T) -&gt; State&lt;T&gt;),\n    None,\n}\n\nfn first(_: i32) -&gt; State&lt;i32&gt; {\n    println!(\"First\");\n    State::Some(second)\n}\n\nfn second(_: i32) -&gt; State&lt;i32&gt; {\n    println!(\"Second\");\n    State::None\n}\n</code></pre>\n\n<p>You can verify that it runs on the <a href=\"https://play.rust-lang.org/?gist=20d752b48fe8ab2d9d66d4da8d89aae7&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">playground</a>.</p>\n"}], "owner": {"reputation": 1728, "user_id": 1187678, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/17eaea8b195588d8c6bab476c340a2d7?s=128&d=identicon&r=PG", "display_name": "burfl", "link": "https://stackoverflow.com/users/1187678/burfl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 954, "favorite_count": 0, "accepted_answer_id": 39133865, "answer_count": 2, "score": 6, "last_activity_date": 1472077174, "creation_date": 1472062299, "last_edit_date": 1472065735, "question_id": 39130293, "link": "https://stackoverflow.com/questions/39130293/how-can-i-define-a-rust-function-type-which-returns-its-own-type", "title": "How can I define a Rust function type which returns its own type?", "body": "<p>I'm learning Rust, and still very much trying to get my head around it.  Consider the following Go definition:</p>\n\n<pre class=\"lang-go prettyprint-override\"><code>type FnType func(paramType) FnType\n</code></pre>\n\n<p>It's just a function that returns a function of the same type.  Can something similar be implemented in Rust?  And, ideally, can it be done generically, so that <code>paramType</code> is specified by the client?</p>\n"}, {"tags": ["struct", "rust", "lifetime"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 5, "creation_date": 1472051991, "post_id": 39127218, "comment_id": 65599989, "body": "Your design looks like you expect to hold two mut references to the same canvas. That&#39;s not going to work anyway."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1472052965, "post_id": 39127218, "comment_id": 65600634, "body": "ah wow! good points - thanks you point that out!"}], "answers": [{"comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1472062390, "post_id": 39128200, "comment_id": 65606021, "body": "yea you&#39;re right I should directly start to instanciate CanvasRenderer in the ShapeRenderer ctor instead of giving it in as a reference. I think as I came to the implementation I maybe realized that. But doing test first - so wasnt that far yet ;) thanks for you help as always!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1472054850, "creation_date": 1472054850, "answer_id": 39128200, "question_id": 39127218, "link": "https://stackoverflow.com/questions/39127218/what-kind-of-lifetime-parameter-do-i-have-to-use-here-when-declaring-a-struct-fi/39128200#39128200", "title": "What kind of lifetime parameter do I have to use here when declaring a struct field object type", "body": "<p><code>CanvasRenderer</code> is parameterized over a lifetime, so you need to state what that lifetime is:</p>\n\n<pre><code>pub struct ShapeRenderer&lt;'a&gt; {\n    core_renderer: &amp;'a mut CanvasRenderer&lt;'a&gt;,\n    //                                   ^^^^\n}\n</code></pre>\n\n<p>However, this structure doesn't seem to have much purpose, it only adds indirection. Why have a reference to a thing that only has a reference? Skip the middleman:</p>\n\n<pre><code>pub struct ShapeRenderer&lt;'a&gt; {\n    core_renderer: CanvasRenderer&lt;'a&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6876, "favorite_count": 0, "accepted_answer_id": 39128200, "answer_count": 1, "score": 5, "last_activity_date": 1472054981, "creation_date": 1472051855, "last_edit_date": 1472054981, "question_id": 39127218, "link": "https://stackoverflow.com/questions/39127218/what-kind-of-lifetime-parameter-do-i-have-to-use-here-when-declaring-a-struct-fi", "title": "What kind of lifetime parameter do I have to use here when declaring a struct field object type", "body": "<p>This is what my code looks like. I'm trying to use a impled struct within my <code>ShapeRenderer</code> struct and use its methods.</p>\n\n<p><strong>shapes.rs:</strong></p>\n\n<pre><code>use super::core::*;\n\npub struct ShapeRenderer&lt;'a&gt; {\n    core_renderer: &amp;'a mut CanvasRenderer,\n}\n</code></pre>\n\n<p><strong>core.rs</strong></p>\n\n<pre><code>pub struct Canvas {\n    pub width: usize,\n    pub height: usize,\n    pub array: Vec&lt;char&gt;,\n}\n\npub struct Point {\n    pub x: usize,\n    pub y: usize,\n}\n\npub struct CanvasRenderer&lt;'a&gt; {\n    canvas: &amp;'a mut Canvas,\n}\n\nimpl&lt;'a&gt; CanvasRenderer&lt;'a&gt; {\n    pub fn new(canvas: &amp;'a mut Canvas) -&gt; CanvasRenderer {\n        CanvasRenderer { canvas: canvas }\n    }\n}\n</code></pre>\n\n<p><em><strong>Error</strong></em></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0107]: wrong number of lifetime parameters: expected 1, found 0\n --&gt; src/shapes.rs:5:28\n  |\n5 |     core_renderer: &amp;'a mut CanvasRenderer\n  |                            ^^^^^^^^^^^^^^ expected 1 lifetime parameter\n</code></pre>\n\n<p>I marked it with a lifetime parameter - why does it want another one? tried the object type with <code>&lt;'a&gt;</code> and appended it <code>&lt;'a&gt;</code> - neither of those attempts solved the problem.</p>\n"}, {"tags": ["shell", "get", "rust", "output"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1472046827, "post_id": 39124565, "comment_id": 65596068, "body": "Please note that by executing <code>whoami</code> you sacrifice cross-platform compatibility. There appears to be a <a href=\"https://crates.io/crates/user\" rel=\"nofollow noreferrer\"><code>user</code> crate</a> exactly for this purpose. Looks pretty inactive to me, though :/"}, {"owner": {"reputation": 127, "user_id": 6564571, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/31a8875e2585a8f3c14c45b43d86cbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Christopher Loen", "link": "https://stackoverflow.com/users/6564571/christopher-loen"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1472064436, "post_id": 39124565, "comment_id": 65607187, "body": "Thanks, I&#39;ll see what I can do with that crate"}], "owner": {"reputation": 127, "user_id": 6564571, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/31a8875e2585a8f3c14c45b43d86cbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Christopher Loen", "link": "https://stackoverflow.com/users/6564571/christopher-loen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 32, "favorite_count": 0, "closed_date": 1472045652, "answer_count": 0, "score": 0, "last_activity_date": 1472045682, "creation_date": 1472044937, "last_edit_date": 1472045682, "question_id": 39124565, "link": "https://stackoverflow.com/questions/39124565/how-to-convert-shell-output-to-string-in-rust", "closed_reason": "Duplicate", "title": "How to convert shell output to string in Rust", "body": "<p>I'm writing a small script in Rust and I need to get the user who is running it. I thought to retrieve the user using a simple process, something like this:</p>\n\n<pre><code>let output = Command::new(\"whoami\")\n             .output();\nlet user = output.stdout;\n</code></pre>\n\n<p>I don't know how to convert <code>user</code> into a string so that I can use it for <code>println!</code>.</p>\n"}, {"tags": ["iterator", "rust", "b-tree"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1522599800, "creation_date": 1522599800, "answer_id": 49600129, "question_id": 39121982, "link": "https://stackoverflow.com/questions/39121982/how-to-insert-a-value-into-a-btreeset-in-rust-and-then-get-an-iterator-beginning/49600129#49600129", "title": "How to insert a value into a BTreeSet in Rust and then get an iterator beginning at its location?", "body": "<p>I don't know for sure, but I'd guess that it boils down to the fact that no one has needed it so it hasn't been added.</p>\n\n<p>In the meantime, you will need to look up the last entry again to get an iterator, as you mention. This also gives an opportunity to specify the <em>direction</em> that the iterator should travel:</p>\n\n<pre><code>use std::collections::BTreeSet;\n\nfn main() {\n    let mut set = BTreeSet::new();\n    set.insert(1);\n    set.insert(2);\n    set.insert(3);\n\n    set.insert(0);\n    for i in set.range(0..) {\n        println!(\"{}\", i);\n    }    \n}\n</code></pre>\n"}], "owner": {"reputation": 665, "user_id": 376854, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/8gSX9.jpg?s=128&g=1", "display_name": "foldl", "link": "https://stackoverflow.com/users/376854/foldl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 433, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1522599800, "creation_date": 1472037773, "last_edit_date": 1495535272, "question_id": 39121982, "link": "https://stackoverflow.com/questions/39121982/how-to-insert-a-value-into-a-btreeset-in-rust-and-then-get-an-iterator-beginning", "title": "How to insert a value into a BTreeSet in Rust and then get an iterator beginning at its location?", "body": "<p>Am I missing something, or is there no way to get an iterator beginning at the newly-inserted value in a <code>BTreeSet</code>? </p>\n\n<p><a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeSet.html#method.insert\" rel=\"nofollow noreferrer\"><code>BTreeSet::insert</code></a> just returns a boolean. For comparison, the <code>insert</code> method for <code>std::map</code> in C++ returns a pair of an iterator and a boolean.</p>\n\n<p>It is possible to look up the newly-inserted element and get the iterator that way, but that's inefficient.</p>\n\n<p>This isn't a duplicate of <a href=\"https://stackoverflow.com/questions/28512394/how-to-lookup-from-and-insert-into-a-hashmap-efficiently\">How to lookup from and insert into a HashMap efficiently?</a> as I need to get an <strong>iterator</strong> pointing to the location of the newly inserted value. I want to obtain the preceding and following values, if these exist.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1472034114, "post_id": 39120183, "comment_id": 65586921, "body": "I don&#39;t think you can use a <code>HashMap::&lt;i32, Item, \u2026&gt;</code> at all, the value should be a Sized type, but a trait is Unsized."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1472034512, "post_id": 39120183, "comment_id": 65587174, "body": "Can you just implement <code>Clone</code>?"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1472035601, "post_id": 39120183, "comment_id": 65587945, "body": "It&#39;s not clear what this question is asking. Could you say more about what problem you&#39;re trying to solve?"}, {"owner": {"reputation": 55, "user_id": 6714938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2861903979075e0dd7d75e88e7ead082?s=128&d=identicon&r=PG&f=1", "display_name": "xilec", "link": "https://stackoverflow.com/users/6714938/xilec"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1472037877, "post_id": 39120183, "comment_id": 65589404, "body": "@kennytm, It&#39;s my misstype. Should be Box&lt;Item&gt;"}, {"owner": {"reputation": 55, "user_id": 6714938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2861903979075e0dd7d75e88e7ead082?s=128&d=identicon&r=PG&f=1", "display_name": "xilec", "link": "https://stackoverflow.com/users/6714938/xilec"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1472038122, "post_id": 39120183, "comment_id": 65589591, "body": "@ChrisEmerson, I wish, but it beaks <a href=\"https://doc.rust-lang.org/book/trait-objects.html#object-safety\" rel=\"nofollow noreferrer\">object safety</a> and other parts of code"}, {"owner": {"reputation": 55, "user_id": 6714938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2861903979075e0dd7d75e88e7ead082?s=128&d=identicon&r=PG&f=1", "display_name": "xilec", "link": "https://stackoverflow.com/users/6714938/xilec"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1472039008, "post_id": 39120183, "comment_id": 65590161, "body": "@BurntSushi5, I just wish clone specified HashMap, but I can&#39;t implement trait <code>Clone</code> for my trait <code>Item</code>, thus I can&#39;t use method <code>HashMap::clone()</code>"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1472039500, "post_id": 39120183, "comment_id": 65590507, "body": "Can you use a wrapper struct here and implement <code>Clone</code> for that?"}, {"owner": {"reputation": 55, "user_id": 6714938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2861903979075e0dd7d75e88e7ead082?s=128&d=identicon&r=PG&f=1", "display_name": "xilec", "link": "https://stackoverflow.com/users/6714938/xilec"}, "edited": false, "score": 0, "creation_date": 1472042172, "post_id": 39120183, "comment_id": 65592440, "body": "Yes, I can. But changing definition of <code>HashMap</code> just for cloning, it seems a bit strange to me. May be there is another solution without changing other code that work with this <code>HashMap</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1472043765, "last_edit_date": 1495542782, "creation_date": 1472043765, "answer_id": 39124115, "question_id": 39120183, "link": "https://stackoverflow.com/questions/39120183/how-do-i-clone-a-hashmap-containing-a-boxed-trait-object/39124115#39124115", "title": "How do I clone a HashMap containing a boxed trait object?", "body": "<p>You can implement <code>Clone</code> for the boxed trait object itself:</p>\n\n<pre><code>impl Clone for Box&lt;Item&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        self.cloned()\n    }\n}\n</code></pre>\n\n<p>Now you may clone the <code>HashMap</code>. Note that the custom hasher has nothing to do with the problem.</p>\n\n<p>See also</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34438755/155423\">Why would I implement methods on a trait instead of as part of the trait?</a></li>\n</ul>\n"}], "owner": {"reputation": 55, "user_id": 6714938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2861903979075e0dd7d75e88e7ead082?s=128&d=identicon&r=PG&f=1", "display_name": "xilec", "link": "https://stackoverflow.com/users/6714938/xilec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2586, "favorite_count": 0, "accepted_answer_id": 39124115, "answer_count": 1, "score": 2, "last_activity_date": 1472043765, "creation_date": 1472032947, "last_edit_date": 1472043579, "question_id": 39120183, "link": "https://stackoverflow.com/questions/39120183/how-do-i-clone-a-hashmap-containing-a-boxed-trait-object", "title": "How do I clone a HashMap containing a boxed trait object?", "body": "<p>I have <code>HashMap</code> with custom hasher. Items of this <code>HashMap</code> without implemented trait <code>Clone</code> (it's a trait), but there is function to clone items like this:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::hash::BuildHasherDefault;\n\nuse fnv::FnvHasher;\n\ntrait Item {\n    fn get_id(&amp;self) -&gt; i32;\n    fn cloned(&amp;self) -&gt; Box&lt;Item&gt;;\n}\n\n#[derive(Clone)]\nstruct ItemImpl {\n    id: i32,\n    foo: i32\n}\n\nimpl Item for ItemImpl {\n    fn get_id(&amp;self) -&gt; i32 { self.id }\n    fn cloned(&amp;self) -&gt; Box&lt;Item&gt; { Box::new(self.clone()) }\n}\n\nfn main() {\n    let hash_map = HashMap::&lt;i32, Box&lt;Item&gt;, BuildHasherDefault&lt;FnvHasher&gt;&gt;::default();\n}\n</code></pre>\n\n<p>How I could clone <code>hash_map</code> shortly (in code) and efficiently (without creating a temporary collection)?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1472028544, "post_id": 39118098, "comment_id": 65583319, "body": "I guess you should <a href=\"https://github.com/passcod/cargo-watch/issues\" rel=\"nofollow noreferrer\">file an issue</a>"}], "answers": [{"tags": [], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "is_accepted": false, "score": 1, "last_activity_date": 1509006057, "creation_date": 1509006057, "answer_id": 46949161, "question_id": 39118098, "link": "https://stackoverflow.com/questions/39118098/is-it-possible-to-run-cargo-watch-in-a-workspace/46949161#46949161", "title": "Is it possible to run `cargo watch` in a workspace?", "body": "<p>This can be done with <code>cargo watch -x \"build --all\"</code>. </p>\n"}, {"tags": [], "owner": {"reputation": 2853, "user_id": 3062525, "user_type": "registered", "profile_image": "https://graph.facebook.com/1114414642001809/picture?type=large", "display_name": "\u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0412\u0430\u0441\u0438\u043b\u044c\u0435\u0432", "link": "https://stackoverflow.com/users/3062525/%d0%94%d0%bc%d0%b8%d1%82%d1%80%d0%b8%d0%b9-%d0%92%d0%b0%d1%81%d0%b8%d0%bb%d1%8c%d0%b5%d0%b2"}, "is_accepted": false, "score": 0, "last_activity_date": 1568632817, "creation_date": 1568632817, "answer_id": 57955735, "question_id": 39118098, "link": "https://stackoverflow.com/questions/39118098/is-it-possible-to-run-cargo-watch-in-a-workspace/57955735#57955735", "title": "Is it possible to run `cargo watch` in a workspace?", "body": "<pre><code>cargo watch -x \"run -p Bar\"    \ncargo watch -x \"run -p Baz\"\n</code></pre>\n\n<p>and etc...</p>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 543, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1568632817, "creation_date": 1472027085, "question_id": 39118098, "link": "https://stackoverflow.com/questions/39118098/is-it-possible-to-run-cargo-watch-in-a-workspace", "title": "Is it possible to run `cargo watch` in a workspace?", "body": "<pre><code>Foo\n  Bar\n  Baz\n  Examples\n</code></pre>\n\n<p>Cargo.toml in <code>Foo/</code></p>\n\n<pre><code>[workspace]\nmembers = [\n    \"Bar\",\n    \"Baz\",\n    \"Examples\",\n]\n</code></pre>\n\n<p>Can I run <code>cargo watch build ???</code> in <code>Foo/</code>? So that if I change any file inside <code>Bar</code>, <code>Baz</code> or <code>Examples</code> it would trigger a rebuild?</p>\n"}, {"tags": ["generics", "operator-overloading", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1472024660, "post_id": 39117166, "comment_id": 65580821, "body": "This isn&#39;t the question. In my question I asked, &#39;why is the output type defined with the <code>Output</code> alias, instead of being another generic?&#39; I understand that you might want to specify the output type - I&#39;m not new to programming - but I want to know why they take <i>this particular approach</i> to it instead of the seemingly more obvious <code>Add&lt;RHS, Output&gt;</code> approach?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 1, "creation_date": 1472025628, "post_id": 39117166, "comment_id": 65581430, "body": "<code>Add&lt;RHS, Output&gt;</code> would made <code>Output</code> an input type parameter, but it&#39;s not an input: it&#39;s a function of the LHS (Self) and RHS. I&#39;ll try to rework my answer to be clearer."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 4, "last_activity_date": 1472024277, "creation_date": 1472024277, "answer_id": 39117166, "question_id": 39115363, "link": "https://stackoverflow.com/questions/39115363/why-do-rusts-operators-have-the-type-output-variable/39117166#39117166", "title": "Why do Rust&#39;s operators have the type Output variable?", "body": "<p>It's about who gets to specify the output type.  Generally when you multiply two types, say <code>f64</code> by <code>f64</code>, it's clear what the type of the result should be: <code>f64</code>.  It wouldn't make sense for the caller to ask for a result type of <code>String</code> - so it doesn't really make sense as an input.</p>\n\n<p>I can imagine some cases where you might want the choice different output, but they're a bit niche (say <code>u32</code> * <code>u32</code> returning the full <code>u64</code> result?); plus if there were more than one option, how do you specify which one you want?  While you could write <code>Add&lt;u32, u64&gt;::add(a, b)</code>, it would make simple expressions like <code>a*b*c</code> ambiguous and make type inference much harder!</p>\n"}, {"comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1472028938, "post_id": 39118492, "comment_id": 65583544, "body": "I see. So, with <code>Mul&lt;RHS, Output&gt;</code>, you need to set your variable type as <code>x: Complex</code> or <code>x: f64</code> in order to decide which one you need, so the <code>type Output</code> decision was primarily a &#39;tidiness&#39; decision. This looks like the best answer but I want to be sure I understand it; do I follow?"}, {"owner": {"reputation": 1417, "user_id": 2977291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66afbccc6043392125ac0f0de57ccfa7?s=128&d=identicon&r=PG&f=1", "display_name": "paholg", "link": "https://stackoverflow.com/users/2977291/paholg"}, "reply_to_user": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1472029008, "post_id": 39118492, "comment_id": 65583577, "body": "That is how I understand it, yeah."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1472029162, "post_id": 39118492, "comment_id": 65583650, "body": "And similarly, any attempts to &#39;overwrite&#39; the standard implementation will be met with failure, meaning that once a type has a defined <code>std::ops::Mul&lt;T&gt;</code> for any given <code>T</code>, it can be relied on to be the <i>only</i> implementation. Okay, I think I get it. Thanks!"}], "tags": [], "owner": {"reputation": 1417, "user_id": 2977291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66afbccc6043392125ac0f0de57ccfa7?s=128&d=identicon&r=PG&f=1", "display_name": "paholg", "link": "https://stackoverflow.com/users/2977291/paholg"}, "is_accepted": true, "score": 10, "last_activity_date": 1472028206, "creation_date": 1472028206, "answer_id": 39118492, "question_id": 39115363, "link": "https://stackoverflow.com/questions/39115363/why-do-rusts-operators-have-the-type-output-variable/39118492#39118492", "title": "Why do Rust&#39;s operators have the type Output variable?", "body": "<p>While functions operate on variables, you can think of traits as functions that operate on types. When thought of this way, the type parameters serve as inputs to the function and associated types serve as outputs.</p>\n\n<p>Since <code>Output</code> is an associated type, for two types <code>A</code> and <code>B</code> that we wish to <code>impl Add</code>, we are restricted to picking a single <code>Output</code> type. Were <code>Output</code> a type parameter, we could <code>impl Add</code> for <code>A</code> and <code>B</code> in a myriad of ways.</p>\n\n<p>For example, let us define a <code>Mul</code> trait where <code>Output</code> is a parameter:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Mul&lt;RHS, Output&gt; {\n    fn mul(self, rhs: RHS) -&gt; Output;\n}\n</code></pre>\n\n<p>Now let us define a <code>Complex</code> type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Clone, Copy)]\nstruct Complex {\n    x: f64,\n    y: f64,\n}\n\nimpl Complex {\n    fn new(x: f64, y: f64) -&gt; Complex {\n        Complex { x: x, y: y }\n    }\n}\n</code></pre>\n\n<p>We want to be able to multiply it by <code>f64</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Mul&lt;f64, Complex&gt; for Complex {\n    fn mul(self, rhs: f64) -&gt; Complex {\n        Complex::new(self.x * rhs, self.y * rhs)\n    }\n}\n</code></pre>\n\n<p>This all works fine. However, we could come up with a second implementation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Mul&lt;f64, f64&gt; for Complex {\n    fn mul(self, rhs: f64) -&gt; f64 {\n        self.x * rhs\n    }\n}\n</code></pre>\n\n<p>When we multiply a <code>Complex</code> by a <code>f64</code> now, it is ambiguous which implementation should be called, and extra type information is needed to be supplied by the caller. By making <code>Output</code> an associated type, this is disallowed. The following code throws a compiler error for conflicting implementations:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl std::ops::Mul&lt;f64&gt; for Complex {\n    type Output = Complex;\n    fn mul(self, rhs: f64) -&gt; Complex {\n        Complex::new(self.x * rhs, self.y * rhs)\n    }\n}\n\nimpl std::ops::Mul&lt;f64&gt; for Complex {\n    type Output = f64;\n    fn mul(self, rhs: f64) -&gt; Complex {\n        self.x * rhs\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=46da7bcb0317b0c3f3843627844b7bbc&amp;version=stable&amp;backtrace=0\">Full example</a></p>\n"}], "owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2657, "favorite_count": 1, "closed_date": 1472043155, "accepted_answer_id": 39118492, "answer_count": 2, "score": 9, "last_activity_date": 1472043117, "creation_date": 1472017887, "last_edit_date": 1472043117, "question_id": 39115363, "link": "https://stackoverflow.com/questions/39115363/why-do-rusts-operators-have-the-type-output-variable", "closed_reason": "Duplicate", "title": "Why do Rust&#39;s operators have the type Output variable?", "body": "<p>I've been reading through the Rust book online and I've reached <a href=\"https://doc.rust-lang.org/book/operators-and-overloading.html\" rel=\"noreferrer\">4.1, Operators and Overloading</a>. I noticed that <a href=\"https://doc.rust-lang.org/std/ops/trait.Add.html\" rel=\"noreferrer\"><code>std::ops::Add</code></a> defines it as <code>fn add(self, rhs: RHS) -&gt; Self::Output;</code> with a <code>type Output</code> defined separately in the trait.</p>\n\n<p>I understand what's going on here: the <code>add</code> function accepts the left hand side as <code>self</code>, and the right hand side as the generic parameter type <code>RHS</code>. </p>\n\n<p>I want to know why is the output type defined with the <code>Output</code> alias, instead of being another generic (ex. <code>Add&lt;RHS, Output&gt;</code>)? Is it just a convention, or is there a specific reason to it?</p>\n"}, {"tags": ["rust", "lifetime", "containment"], "answers": [{"comments": [{"owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1472010485, "post_id": 39113931, "comment_id": 65575087, "body": "Ok, so I failed to use fmt::Debug trait and also call the struct method into my variable.  I was a bit thrown off by the compiler error.  I thought it may have had to do with some lifetime rule.  As far as your other comment, I would just be replacing String with the static lifetime str, &amp;&#39;static str?"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1472011173, "post_id": 39113931, "comment_id": 65575211, "body": "@Alex Here is an example of how you can have a <code>String</code> for your type&#39;s property.. but accept a <code>&amp;&#39;static str</code>, <code>&amp;str</code> or <code>String</code> as input for it: <a href=\"https://play.rust-lang.org/?gist=5dc13bf0a53c9ad0ecc0d40e63072ff5&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. You don&#39;t <i>have</i> to do this in your small sample.. but as your code gets bigger and you&#39;re passing references around (mutable, immutable, etc) it can become tricky."}, {"owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "edited": false, "score": 0, "creation_date": 1472011520, "post_id": 39113931, "comment_id": 65575296, "body": "Understood, thank you so much for all your feedback.  I will make the changes you recommended on my end.  The playground was really helpful."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 1, "last_activity_date": 1472016878, "last_edit_date": 1472016878, "creation_date": 1472009330, "answer_id": 39113931, "question_id": 39113799, "link": "https://stackoverflow.com/questions/39113799/understanding-lifetime-management-while-modeling-containment-relationship/39113931#39113931", "title": "Understanding lifetime management while modeling containment relationship", "body": "<p>Your issue boils down to you using <code>buy_car</code> (which returns nothing) where you probably meant to use <code>bob.car</code>. To do that.. you'll want to have <code>fmt::Debug</code> implemented for your <code>Car</code> struct as well. Here is a working fix for you.. note all of the <code>// &lt;----- parts</code> I added (<a href=\"https://play.rust-lang.org/?gist=9a231e03510ca1c19bc5674346a832d4&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">here it is on the Playground</a>):</p>\n\n<pre><code>#[derive(Debug)] // &lt;------------ Have the compiler implement fmt::Debug for you\nstruct Car {\n    make: &amp;'static str,\n    model: &amp;'static str,\n    year: &amp;'static str,\n}\n\nstruct Person&lt;'a&gt; {\n    name: &amp;'static str,\n    gender: &amp;'static str,\n    car: Option&lt;&amp;'a Car&gt;,\n}\n\nimpl&lt;'a&gt; Person&lt;'a&gt; {\n    fn new(name: &amp;'static str, gender: &amp;'static str, car: Option&lt;&amp;'a Car&gt;) -&gt; Person&lt;'a&gt; {\n        Person {\n            name: name,\n            gender: gender,\n            car: None,\n        }\n    }\n\n    fn buy_car(&amp;mut self, c: &amp;'a Car) {\n        self.car = Some(c);\n    }\n\n    fn sell_car(&amp;mut self) {\n        self.car = None;\n    }\n}\n\nfn main() {\n    let pickup = Car {\n        make: \"Ford\",\n        model: \"F250\",\n        year: \"2006\",\n    };\n\n    let mut bob = Person::new(\"Bob\", \"Male\", None);\n\n    bob.buy_car(&amp;pickup);   // &lt;------- Buy the car separately\n\n    println!(\"A {:?} whose name is {:?} has just purchased a 2006 {:?}.\",\n             bob.gender,\n             bob.name,\n             bob.car); // &lt;------------ Pass the car into the debug string\n}\n</code></pre>\n\n<p>As an aside - I would look in to using <code>String</code> where appropriate to reduce the need to pass references and lifetimes around. Maybe not so important in your small example but as the code gets bigger they can become tricky.</p>\n"}], "owner": {"reputation": 357, "user_id": 1100765, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/37522facc8f6a42a2907ff8e4627a1ca?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1100765/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 39113931, "answer_count": 1, "score": 0, "last_activity_date": 1472016878, "creation_date": 1472008304, "question_id": 39113799, "link": "https://stackoverflow.com/questions/39113799/understanding-lifetime-management-while-modeling-containment-relationship", "title": "Understanding lifetime management while modeling containment relationship", "body": "<p>I'm trying to wrap my head around Rust objects lifetime.  As I was performing a relationship modeling exercise I ran into the following error.</p>\n\n<pre><code>error: cannot borrow `bob` as mutable because `bob.gender` is also borrowed as immutable [E0502]\n</code></pre>\n\n<p>The code is here:</p>\n\n<pre><code>// Business Case:\n// Design a person type.  A person may own a Car.  A person should be able to buy and sell cars.\n// Two persons should be able to exchange (or trade) their cars.\n//\n// Purpose of exercise:\n// Understand lifetime management in Rust while modeling containment relationship.\n// (meaning: when an object contains a reference to another object.)\n\nstruct Car {\n    make: &amp;'static str,\n    model: &amp;'static str,\n    year: &amp;'static str,\n}\n\nstruct Person&lt;'a&gt; {\n    name: &amp;'static str,\n    gender: &amp;'static str,\n    car: Option&lt;&amp;'a Car&gt;,\n}\n\nimpl&lt;'a&gt; Person&lt;'a&gt; {\n    fn new(name: &amp;'static str, gender: &amp;'static str, car: Option&lt;&amp;'a Car&gt;) -&gt; Person&lt;'a&gt; {\n        Person {\n            name: name,\n            gender: gender,\n            car: None,\n        }\n    }\n\n    fn buy_car(&amp;mut self, c: &amp;'a Car) {\n        self.car = Some(c);\n    }\n\n    fn sell_car(&amp;mut self) {\n        self.car = None;\n    }\n}\n\nfn main() {\n    let pickup = Car {\n        make: \"Ford\",\n        model: \"F250\",\n        year: \"2006\",\n    };\n\n    let mut bob = Person::new(\"Bob\", \"Male\", None);\n\n    println!(\"A {:?} whose name is {:?} has just purchased a 2006 {:?}.\",\n             bob.gender,\n             bob.name,\n             bob.buy_car(&amp;pickup));\n}\n</code></pre>\n\n<p>Can anyone chime in on what exactly am I missing here? I'm not exactly sure if reference count or Box is the way to go, need a bit more insight.</p>\n"}, {"tags": ["indexing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1472007905, "post_id": 39113723, "comment_id": 65574543, "body": "So would it simply be better to implement a method on MyStruct called <code>index</code> or <code>at</code> that took a <code>usize</code> and returned a <code>f64</code>? I&#39;d also like to implement the ability to index with the equivalent to a Python slice (<code>Range</code> I think in rust), is this possible with the <code>...</code> syntax as a function argument?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1472010442, "post_id": 39113723, "comment_id": 65575079, "body": "You can write a standalone <code>index</code> method, but you won&#39;t be able to use it with the indexing syntax (<code>x[i]</code>). Range syntax produces values with types provided by the standard library (e.g. <code>x..y</code> produces a <a href=\"https://doc.rust-lang.org/stable/std/ops/struct.Range.html\" rel=\"nofollow noreferrer\"><code>Range</code></a> value)."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1472044568, "post_id": 39113723, "comment_id": 65594320, "body": "So basically I&#39;m just out of luck here?  Oh well, it isn&#39;t a huge deal, just a different paradigm to learn for a new language."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1472007660, "creation_date": 1472007660, "answer_id": 39113723, "question_id": 39113649, "link": "https://stackoverflow.com/questions/39113649/implementing-index-trait-to-return-a-value-that-is-not-a-reference/39113723#39113723", "title": "Implementing Index trait to return a value that is not a reference", "body": "<p>The <code>Index</code> trait is meant to return a borrowed pointer to a member of <code>self</code> (e.g. an item in a <code>Vec</code>). The signature of the <code>index</code> method from the <code>Index</code> trait makes it impractical to implement it to have the behavior you described, as you'd have to store every value returned by <code>index</code> in <code>self</code> and ensure that the pointers remain valid until the <code>MyStruct</code> is dropped.</p>\n"}, {"comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1472054220, "post_id": 39127637, "comment_id": 65601428, "body": "I think I see now that my intuition is different than what rust&#39;s conventions are.  This information is somewhat difficult to find, though, since rust is still a very young language.  My approach is basically your first suggestion, although I went with a trait that I named <code>At&lt;Idx&gt;</code> with a single method <code>at</code> that is modeled off of the design of <code>Index</code>.  I&#39;ve already figured out how to make it automatically <code>At</code>-able with a <code>Range&lt;Idx&gt;</code> if the <code>impl</code> for <code>At&lt;Idx&gt;</code> exists, which is quite handy for Rust to be able to do."}], "tags": [], "owner": {"reputation": 3185, "user_id": 114887, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6b0c7e3c2d9ff81adf7470e066e4a705?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew Piziak", "link": "https://stackoverflow.com/users/114887/matthew-piziak"}, "is_accepted": false, "score": 1, "last_activity_date": 1472053164, "creation_date": 1472053164, "answer_id": 39127637, "question_id": 39113649, "link": "https://stackoverflow.com/questions/39113649/implementing-index-trait-to-return-a-value-that-is-not-a-reference/39127637#39127637", "title": "Implementing Index trait to return a value that is not a reference", "body": "<p>This use case does not match the intuition for <code>Index</code>. When I see <code>myStruct[3]</code>, my intuition is that, just as for arrays, I'm getting a pointer to some already-initialized data. The interface for <code>Index</code> corroborates this intuition.</p>\n\n<p>I can see two things that you might potentially be trying to achieve:</p>\n\n<ol>\n<li>Getting nice indexing syntax for your datastructure.</li>\n</ol>\n\n<p>In this case I would recommend against the premise of implementing <code>Index</code> and just provide a method that returns a <code>f64</code> instead of an <code>&amp;f64</code> like so.</p>\n\n<pre><code>impl MyStruct {\n    pub fn index(&amp;self, idx: usize) -&gt; f64 {\n        self.start + (idx as f64) * self.step\n    }\n}\n</code></pre>\n\n<p>You don't get the operators, which is good because somebody reading <code>[]</code> would be mislead into thinking they were getting a pointer. But you do get the functionality you want. Depending on your use cases you may want to rename this method.</p>\n\n<ol start=\"2\">\n<li>Passing <code>MyStruct</code> to a parameter with <code>Index</code> bounds.</li>\n</ol>\n\n<p>This is trickier with good reason. <code>Index</code> expects the data to be there before it asks for it. You can't generate and return it because <code>index</code> returns <code>f64</code>, and you can't generate it in the datastructure and return a pointer because it doesn't take a <code>&amp;mut self</code>. You'd have to populate these values before the call to <code>index</code>. Some redesign would be in order, and the direction of that redesign would depend on the larger context of your problem.</p>\n"}], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1402, "favorite_count": 0, "accepted_answer_id": 39113723, "answer_count": 2, "score": 7, "last_activity_date": 1472053164, "creation_date": 1472007043, "last_edit_date": 1472043318, "question_id": 39113649, "link": "https://stackoverflow.com/questions/39113649/implementing-index-trait-to-return-a-value-that-is-not-a-reference", "title": "Implementing Index trait to return a value that is not a reference", "body": "<p>I have a simple struct that I would like to implement <code>Index</code> for, but as a newcomer to Rust I'm having a number of troubles with the borrow checker.  My struct is pretty simple, I'd like to have it store a start and step value, then when indexed by a <code>usize</code> it should return <code>start + idx * step</code>:</p>\n\n<pre><code>pub struct MyStruct {\n    pub start: f64,\n    pub step: f64,\n}\n</code></pre>\n\n<p>My intuition is that I'd simply be able to take the signature of <code>Index</code> and plug in my types:</p>\n\n<pre><code>impl Index&lt;usize&gt; for MyStruct {\n    type Output = f64;\n\n    fn index(&amp;self, idx: usize) -&gt; &amp;f64 {\n        self.start + (idx as f64) * self.step\n    }\n}\n</code></pre>\n\n<p>This gives the error <code>mismatched types</code> saying <code>expected type &amp;f64, found type f64</code>.  As someone who has yet to fully understand how Rust's type system works, I tried simply slapping <code>&amp;</code> on the expression:</p>\n\n<pre><code>fn index(&amp;self, idx: usize) -&gt; &amp;f64 {\n    &amp;(self.start + (idx as f64) * self.step)\n}\n</code></pre>\n\n<p>This now tells me that the <code>borrowed value does not live long enough</code>, so maybe it needs a lifetime variable?</p>\n\n<pre><code>fn index&lt;'a&gt;(&amp;self, idx: usize) -&gt; &amp;'a f64 {\n    &amp;(self.start + (idx as f64) * self.step)\n}\n</code></pre>\n\n<p>The error is the same, but the note now gives <code>lifetime 'a</code> instead of <code>lifetime #1</code>, so I guess that's not necessary, but at this point I feel like I'm stuck.  I'm confused that such a simple exercise for most languages has become so difficult to implement in Rust, since all I want to do is return a computation from a function that happens to be behind a reference.  How should I go about implementing <code>Index</code> for a simple structure where the value is calculated on demand?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471994005, "post_id": 39112061, "comment_id": 65571341, "body": "You aren&#39;t returning an array, you are returning a <b>reference</b> to an array. Also, you are attempting to return an array coerced to a <i>slice</i>, not an array directly."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1471994953, "post_id": 39112061, "comment_id": 65571594, "body": "You probably don&#39;t want to return a reference.. and instead just return an array. The problem you no doubt faced was that the slice of tuples has no <code>Sized</code> marker (or a similar error). This can be fixed in two ways.. firstly, by sizing the array: <code>-&gt; [(GLint, GLenum); 1]</code> or by boxing it up. Here is my attempt at showing you how that might play out: <a href=\"https://play.rust-lang.org/?gist=92bf0eedc0f66d51499767a0d73d271d&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471995935, "post_id": 39112061, "comment_id": 65571836, "body": "<code>-&gt; [(GLint, GLenum); 1]</code> is how you&#39;d return an array, so that&#39;s the most likely solution. You <i>may</i> also be interested in returning a <code>Vec&lt;(GLint, GLenum)&gt;</code>. arrays / slices / vectors / boxed slices all offer different capabilities and tradeoffs."}, {"owner": {"reputation": 563, "user_id": 3366443, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/68857b02d2a34389d07fba497e41e7ba?s=128&d=identicon&r=PG&f=1", "display_name": "rykeeboy", "link": "https://stackoverflow.com/users/3366443/rykeeboy"}, "edited": false, "score": 0, "creation_date": 1471996093, "post_id": 39112061, "comment_id": 65571872, "body": "I can&#39;t restrict the number of items that are returned in the array in my case. I&#39;ll take a look at using a vector instead. This makses sense to me"}], "owner": {"reputation": 563, "user_id": 3366443, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/68857b02d2a34389d07fba497e41e7ba?s=128&d=identicon&r=PG&f=1", "display_name": "rykeeboy", "link": "https://stackoverflow.com/users/3366443/rykeeboy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 28, "favorite_count": 0, "closed_date": 1471993983, "answer_count": 0, "score": 0, "last_activity_date": 1471993921, "creation_date": 1471993798, "last_edit_date": 1471993921, "question_id": 39112061, "link": "https://stackoverflow.com/questions/39112061/return-an-array-of-tuples", "closed_reason": "Duplicate", "title": "Return an array of tuples", "body": "<p>I am trying to return an array of tuples in Rust, but I am running into issues with lifetimes:</p>\n\n<pre><code>pub trait Vertex{\n    fn map_components&lt;'a&gt;() -&gt; &amp;'a[(GLint, GLenum)];\n}\n\npub struct VertexPos2d {\n    // Position\n    x: GLfloat,\n    y: GLfloat\n}\n\nimpl Vertex for VertexPos2d{\n    fn map_components&lt;'a&gt;() -&gt; &amp;'a[(GLint, GLenum)]{\n        return &amp;[\n            (2, gl::FLOAT) as (GLint, GLenum)\n        ];\n    }\n}\n</code></pre>\n\n<p>If I remove the tuple from the array everything seems to work fine. I've tried to adjust the lifetimes such that the tuples in the array have the same lifetime as the array itself but have not been able to get it to work. Are there some changes I can make to get this to work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 2, "creation_date": 1471990320, "post_id": 39111322, "comment_id": 65570325, "body": "Use <code>_unused_but_compiler_does_not_complain_because_of_leading_un&zwnj;&#8203;derscore</code>, should still work"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1471990965, "creation_date": 1471990965, "answer_id": 39111610, "question_id": 39111322, "link": "https://stackoverflow.com/questions/39111322/how-to-delay-destruction-of-unnamed-objects/39111610#39111610", "title": "How to delay destruction of unnamed objects?", "body": "<p>Giving a variable a name but prefixing the name with an underscore delays destruction until the end of the scope but does not trigger the unused variable warning.</p>\n\n<pre><code>struct Noisy;\n\nimpl Drop for Noisy {\n    fn drop(&amp;mut self) {\n        println!(\"Dropping\");\n    }\n}\n\nfn main() {\n    {\n        let _ = Noisy;\n        println!(\"Before end of first scope\");\n    }\n\n    {\n        let _noisy = Noisy;\n        println!(\"Before end of second scope\");\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Dropping\nBefore end of first scope\nBefore end of second scope\nDropping\n</code></pre>\n"}], "owner": {"reputation": 3493, "user_id": 1049866, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Afe2j.png?s=128&g=1", "display_name": "PureW", "link": "https://stackoverflow.com/users/1049866/purew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 39111610, "answer_count": 1, "score": 4, "last_activity_date": 1471991143, "creation_date": 1471989492, "last_edit_date": 1471991143, "question_id": 39111322, "link": "https://stackoverflow.com/questions/39111322/how-to-delay-destruction-of-unnamed-objects", "title": "How to delay destruction of unnamed objects?", "body": "<p>I am using the <a href=\"https://doc.rust-lang.org/tempdir/tempdir/struct.TempDir.html?search=\" rel=\"nofollow\"><code>TempDir</code> struct</a> to create and remove folders on disk. The <code>TempDir</code> itself is not referenced in the code apart from its construction. </p>\n\n<p>Since the compiler warns about unused objects, I tried (un)naming the TempDir-struct to <code>_</code> but this results in the struct immediately being destroyed. </p>\n\n<p>Is there a nice solution to this?</p>\n\n<p>See <a href=\"https://play.rust-lang.org/?code=pub%20struct%20Res%3B%0A%0Aimpl%20Drop%20for%20Res%20%7B%0A%20%20%20%20fn%20drop(%26mut%20self)%20%7B%0A%20%20%20%20%20%20%20%20println!(%22Dropping%20self!%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20one()%20%7B%0A%20%20%20%20println!(%22one%22)%3B%0A%20%20%20%20let%20r%20%3D%20Res%3B%20%2F%2F%20%3C---%20Dropping%20at%20end%20of%20function%0A%20%20%20%20println!(%22Before%20exit%22)%3B%0A%7D%0Afn%20two()%20%7B%0A%20%20%20%20println!(%22two%22)%3B%0A%20%20%20%20let%20_%20%3D%20Res%3B%20%20%2F%2F%20%3C---%20Dropping%20immediately%0A%20%20%20%20println!(%22Before%20exit%22)%3B%0A%7D%0A%0Afn%20main()%20%7B%0A%20%20%20%20one()%3B%0A%20%20%20%20two()%3B%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">example code</a>, compare <code>one</code> to <code>two</code>:</p>\n\n<pre><code>pub struct Res;\nimpl Drop for Res {\n    fn drop(&amp;mut self) {\n        println!(\"Dropping self!\");\n    }\n}\n\nfn one() {\n    println!(\"one\");\n    let r = Res; // &lt;--- Dropping at end of function \n                 //      but compiler warns about unused object\n    println!(\"Before exit\");\n}\n\nfn two() {\n    println!(\"two\");\n    let _ = Res;  // &lt;--- Dropping immediately\n    println!(\"Before exit\");\n}\n\nfn main() {\n    one();\n    two();\n}\n</code></pre>\n"}, {"tags": ["module", "rust", "rust-crates"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1471980975, "post_id": 39109095, "comment_id": 65566044, "body": "Why do you care what the file names are? Why not just <code>src&#47;lib.rs</code>, <code>src&#47;core.rs</code> and <code>src&#47;shapes.rs</code>; the crate is called <i>renderay</i>, and the modules would be at <code>renderay::core</code>?"}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471984032, "post_id": 39109095, "comment_id": 65567621, "body": "And what about shapes.rs ? how should I import core? use renderay::core ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1471984210, "post_id": 39109095, "comment_id": 65567709, "body": "<a href=\"http://stackoverflow.com/q/30677258/155423\">How do I import from a sibling module?</a>; <a href=\"http://stackoverflow.com/q/20922091/155423\">How do you use parent module imports in rust?</a>; <a href=\"http://stackoverflow.com/q/36021619/155423\">Split implementation across multiple files/modules and keep everything as private as possible</a>; <a href=\"http://stackoverflow.com/q/30286861/155423\">How can I use shared logic from different files?</a>."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471985286, "post_id": 39109095, "comment_id": 65568201, "body": "thank you - didn&#39;t had the right keywords for those results!"}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 464, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1471981994, "creation_date": 1471979842, "last_edit_date": 1471981994, "question_id": 39109095, "link": "https://stackoverflow.com/questions/39109095/creating-a-rust-library-with-multiple-modules-which-all-are-a-unified-api", "title": "Creating a Rust library with multiple modules which all are a unified API", "body": "<p>I have an exercise library to learn Rust. This library provides two kinds of methods:</p>\n\n<ol>\n<li><em>core</em> methods which should be in a file called <strong>renderay_core.rs</strong>.</li>\n<li><em>shape</em> methods which <em>use</em> the core methods to have a higher abstraction/more concrete implementation of the core methods; convenience methods for \"often used\" cases. These should be in a file called <strong>renderay_shapes.rs</strong>.</li>\n</ol>\n\n<p>I also want to have unit tests in them as submodules.</p>\n\n<p>I thought of something like:</p>\n\n<ul>\n<li><strong>renderay.rs</strong> is the library source <code>[lib] path=\"src/renderay.rs\"</code></li>\n<li><strong>renderay_core.rs</strong> is a module which is loaded into <strong>renderay.rs</strong> as public(?) to yield its API</li>\n<li><strong>renderay_shapes.rs</strong> is also a module within <strong>renderay.rs</strong> but also imports <strong>renderay_core.rs</strong> to its core API</li>\n</ul>\n\n<p>If I load this crate as a dependency, I would like to have the API of <strong>renderay_core.rs</strong> and <strong>renderay_shapes.rs</strong> available.</p>\n\n<p>I'm sure it is a trivial task, but I have a hard time getting my head around the module mechanics coming from Java and C. I already read the <a href=\"https://doc.rust-lang.org/book/crates-and-modules.html\" rel=\"nofollow\">crates and modules documentation</a>. How to setup such a structure and compile it successfully?</p>\n"}, {"tags": ["syntax", "comparison", "rust"], "answers": [{"comments": [{"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1472004085, "post_id": 39107377, "comment_id": 65573750, "body": "This answer is good for the example in the question, but doesn&#39;t address the question directly. There are times when you may not want to create a large tuple to compare values which will be ignored because higher priority values will early-exit the comparison. Basically - there are times its reasonable to avoid creating a tuple for comparison, where the approach in the question still applies."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1472005301, "post_id": 39107377, "comment_id": 65573995, "body": "@ideasman42 <i>doesn&#39;t address the question directly</i> \u2014 that might be true <i>if</i> the question had <b>any</b> kind of comments about performance or avoiding creating things. The <b>question</b> was quite clear: <i>What&#39;s the most straightforward way to chain comparisons, yielding the first non-equal?</i> and it was answered pretty directly. You can&#39;t retroactively change the spirit of the question just because you didn&#39;t properly state what was important to you the first time around."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1472005991, "post_id": 39107377, "comment_id": 65574169, "body": "I should have made this more clear, and I appreciate your answer. The question does ask for a <i>&quot;way to perform multiple cmp functions&quot;</i>, I was interested in this aspect specifically - a way to keep the comparison logic under the control of the closure (in this example). Otherwise I would have asked a more general question about comparisons."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1472004895, "last_edit_date": 1495540302, "creation_date": 1471973257, "answer_id": 39107377, "question_id": 39107085, "link": "https://stackoverflow.com/questions/39107085/whats-the-most-straightforward-way-to-chain-comparisons-yielding-the-first-non/39107377#39107377", "title": "What&#39;s the most straightforward way to chain comparisons, yielding the first non-equal?", "body": "<blockquote>\n  <p>perform multiple cmp functions, where only the first non-equal result is returned</p>\n</blockquote>\n\n<p>That's basically how <code>Ord</code> is defined for tuples. Create a function that converts your type into a tuple and compare those:</p>\n\n<pre><code>fn main() {\n    let mut xy_coords = vec![[1, 0], [-1, -1], [0, 1]];\n\n    fn sort_key(coord: &amp;[i32; 2]) -&gt; (i32, i32) {\n        (coord[1], coord[0])\n    }\n\n    xy_coords.sort_by(|a, b| {\n        sort_key(a).cmp(&amp;sort_key(b))\n    });\n}\n</code></pre>\n\n<p>Since that's common, there's a method just for it:</p>\n\n<pre><code>xy_coords.sort_by_key(sort_key);\n</code></pre>\n\n<p>It won't help your case, because <a href=\"https://stackoverflow.com/q/26489701/155423\">floating point doesn't implement <code>Ord</code></a>.</p>\n\n<p>One of many possibilities is to kill the program on <code>NaN</code>:</p>\n\n<pre><code>xy_coords.sort_by(|a, b| {\n    sort_key(a).partial_cmp(&amp;sort_key(b)).expect(\"Don't know how to handle NaN\")\n});\n</code></pre>\n\n<p>See also</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/37127209/155423\">Using max_by_key on a vector of floats</a></li>\n<li><a href=\"https://stackoverflow.com/q/28247990/155423\">How to do a binary search on a Vec of floats?</a></li>\n</ul>\n\n<hr>\n\n<blockquote>\n  <p>There are times when you may not want to create a large tuple to compare values which will be ignored because higher priority values will early-exit the comparison.</p>\n</blockquote>\n\n<p>Stealing a page from <a href=\"https://google.github.io/guava/releases/19.0/api/docs/com/google/common/collect/ComparisonChain.html\" rel=\"nofollow noreferrer\">Guava's <code>ComparisonChain</code></a>, we can make a small builder that allows us to use closures to avoid extra work:</p>\n\n<pre><code>use std::cmp::Ordering;\n\nstruct OrdBuilder&lt;T&gt; {\n    a: T,\n    b: T,\n    ordering: Ordering,\n}\n\nimpl&lt;T&gt; OrdBuilder&lt;T&gt; {\n    fn new(a: T, b: T) -&gt; OrdBuilder&lt;T&gt; {\n        OrdBuilder {\n            a: a,\n            b: b,\n            ordering: Ordering::Equal,\n        }\n    }\n\n    fn compare_with&lt;F, V&gt;(mut self, mut f: F) -&gt; OrdBuilder&lt;T&gt;\n        where F: for &lt;'a&gt; FnMut(&amp;'a T) -&gt; V,\n              V: Ord,\n    {\n        if self.ordering == Ordering::Equal {\n            self.ordering = f(&amp;self.a).cmp(&amp;f(&amp;self.b));\n        }\n        self\n    }\n\n    fn finish(self) -&gt; Ordering {\n        self.ordering\n    }\n}\n</code></pre>\n\n<p>This can be used like</p>\n\n<pre><code>struct Thing {\n    a: u8,\n}\n\nimpl Thing {\n    fn b(&amp;self) -&gt; u8 {\n        println!(\"I'm slow!\");\n        42\n    }\n}\n\nfn main() {\n    let a = Thing { a: 0 };\n    let b = Thing { a: 1 };\n\n    let res = OrdBuilder::new(&amp;a, &amp;b)\n        .compare_with(|x| x.a)\n        .compare_with(|x| x.b())\n        .finish();\n\n    println!(\"{:?}\", res);\n}\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1472004895, "creation_date": 1471972197, "last_edit_date": 1471973685, "question_id": 39107085, "link": "https://stackoverflow.com/questions/39107085/whats-the-most-straightforward-way-to-chain-comparisons-yielding-the-first-non", "title": "What&#39;s the most straightforward way to chain comparisons, yielding the first non-equal?", "body": "<p>It's quite common to compare data with precedence, for a struct which has multiple members which can be compared, or for a <code>sort_by</code> callback.</p>\n\n<pre><code>// Example of sorting a: Vec&lt;[f64; 2]&gt;, sort first by y, then x,\nxy_coords.sort_by(\n    |co_a, co_b| {\n        let ord = co_a[1].cmp(&amp;co_b[1]);\n        if ord != std::cmp::Ordering::Equal {\n            ord\n        } else {\n            co_a[0].cmp(&amp;co_b[0])\n        }\n    }\n);\n</code></pre>\n\n<p>Is there a more straightforward way to perform multiple <code>cmp</code> functions, where only the first non-equal result is returned?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1471963713, "post_id": 39104236, "comment_id": 65555636, "body": "You aren&#39;t using <code>self</code> or <code>Self</code> anywhere; why are these functions in a trait?  The error is probably that there&#39;s <i>nothing</i> to tie the methods to the implementation type."}, {"owner": {"reputation": 240, "user_id": 6727289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/012f7d3213d984a1f182f7ff44c49cad?s=128&d=identicon&r=PG&f=1", "display_name": "rpiper", "link": "https://stackoverflow.com/users/6727289/rpiper"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1471964174, "post_id": 39104236, "comment_id": 65555984, "body": "I don&#39;t need self do to it being a static method, but you are right about not being impl by something... Apparently I need more coffee. Thanks though."}], "answers": [{"tags": [], "owner": {"reputation": 8423, "user_id": 57490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df91e299b5afa987f5882c36e0169a9a?s=128&d=identicon&r=PG", "display_name": "TalkLittle", "link": "https://stackoverflow.com/users/57490/talklittle"}, "is_accepted": false, "score": 1, "last_activity_date": 1522749921, "creation_date": 1522749921, "answer_id": 49627349, "question_id": 39104236, "link": "https://stackoverflow.com/questions/39104236/how-to-resolve-type-annotations-required-cannot-resolve-when-calling-generi/49627349#49627349", "title": "How to resolve &quot;type annotations required: cannot resolve _&quot; when calling generic static method?", "body": "<p>It means Rust couldn't figure out the type of <code>T</code>. Rust generic methods work by generating a separate implementation for each concrete <code>T</code> that you actually use in your code. Meaning you need a concrete type spelled out somewhere.</p>\n\n<p>You could fix it by using something like:</p>\n\n<pre><code>return Config::parse_json(source, datatype as AConcreteDataType);\n</code></pre>\n\n<p>But to know the problem for sure, we'd need to see the rest of the calling code in <code>main.rs</code>.</p>\n\n<p>Aside from that, the <code>parse_json</code> method looks iffy; why is it returning the <code>datatype</code> instead of the <code>decoded</code> result?</p>\n"}], "owner": {"reputation": 240, "user_id": 6727289, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/012f7d3213d984a1f182f7ff44c49cad?s=128&d=identicon&r=PG&f=1", "display_name": "rpiper", "link": "https://stackoverflow.com/users/6727289/rpiper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5640, "favorite_count": 1, "answer_count": 1, "score": 7, "last_activity_date": 1522749921, "creation_date": 1471963294, "last_edit_date": 1471966576, "question_id": 39104236, "link": "https://stackoverflow.com/questions/39104236/how-to-resolve-type-annotations-required-cannot-resolve-when-calling-generi", "title": "How to resolve &quot;type annotations required: cannot resolve _&quot; when calling generic static method?", "body": "<p>I am trying to call a generic static method within a different static method, but I get a confusing error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: type annotations required: cannot resolve `_: Config` [--explain E0283]\n  --&gt; src/main.rs:15:38\n   |&gt;\n15 |&gt;                     \"json\" =&gt; return Config::parse_json::&lt;T&gt;(source, datatype),\n   |&gt;                                      ^^^^^^^^^^^^^^^^^^^^^^^\nnote: required by `Config::parse_json`\n</code></pre>\n\n<p>When I ran <code>rustc --explain E0283</code>, the error message said:</p>\n\n<blockquote>\n  <p>This error occurs when the compiler doesn't have enough information\n  to unambiguously choose an implementation.</p>\n</blockquote>\n\n<p>Which is confusing as there is only one implementation of the function.</p>\n\n<pre><code>use rustc_serialize::json;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::path::PathBuf;\nuse rustc_serialize;\n\npub trait Config {\n    fn get_config&lt;T: rustc_serialize::Decodable&gt;(source: PathBuf, datatype: T) -&gt; Option&lt;T&gt; {\n        let extension = source.extension().unwrap();\n        if let Some(extension) = extension.to_str() {\n            match extension {\n                \"json\" =&gt; return Config::parse_json::&lt;T&gt;(source, datatype),\n                _ =&gt; panic!(\"Unable to parse the specfied extension.\"),\n            }\n        } else {\n            panic!(\"No extension was found.\");\n        }\n    }\n\n    fn parse_json&lt;T: rustc_serialize::Decodable&gt;(source: PathBuf, datatype: T) -&gt; Option&lt;T&gt; {\n        let mut file = File::open(source).unwrap();\n        let mut contents = String::new();\n        file.read_to_string(&amp;mut contents).unwrap();\n        let decoded: T = json::decode(&amp;contents).unwrap();\n        let option: Option&lt;T&gt; = Some(datatype);\n        return option;\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-compiler-plugin"], "answers": [{"comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1472098937, "post_id": 39136048, "comment_id": 65618108, "body": "The compiler will look for the contents of module <code>foo</code> in either <code>foo.rs</code> or <code>foo&#47;mod.rs</code> (and will error out if both exist). You might want to do the same."}], "tags": [], "owner": {"reputation": 840, "user_id": 4725840, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mpeTv.jpg?s=128&g=1", "display_name": "knight42", "link": "https://stackoverflow.com/users/4725840/knight42"}, "is_accepted": true, "score": 1, "last_activity_date": 1472111461, "last_edit_date": 1472111461, "creation_date": 1472094229, "answer_id": 39136048, "question_id": 39094751, "link": "https://stackoverflow.com/questions/39094751/how-to-write-a-rust-compiler-plugin-that-generates-a-module/39136048#39136048", "title": "How to write a Rust compiler plugin that generates a module?", "body": "<p>2016-08-25 update: <del>use <code>libsyntax::parse::new_parser_from_source_str</code> to avoid setting module path manually.</del> <code>new_parser_from_source_str</code> will only locate modules at CWD, which is unexpected.</p>\n\n<p>As pointed out by @Francis, the real path of a module file may be something like <code>foo/mod.rs,</code><del>and I discovered a function named <code>new_parser_from_source_str</code>, which is able to create a new parser from a source string, in <code>libsyntax::parse</code>, so I decided to ask the compiler to handle this case for me</del> so I have to handle this case manually. The updated code:</p>\n\n<pre><code>fn choose(cx: &amp;mut ExtCtxt, sp: Span, args: &amp;[TokenTree]) -&gt; Box&lt;MacResult + 'static&gt; {\n    let mut test_mods = SmallVector::zero();\n    let cfg_str = intern(\"cfg\");\n    let ftre_str = intern(\"feature\");\n    for arg in args {\n        let mut attrs = vec![];\n        let mod_name = match arg {\n            &amp;TokenTree::Token(_, token::Ident(s)) =&gt; s.to_string(),\n            _ =&gt; {\n                return DummyResult::any(sp);\n            }\n        };\n        attrs.push(cx.attribute(sp,\n                                cx.meta_list(sp,\n                                             // simply increase the reference counter\n                                             cfg_str.clone(),\n                                             vec![cx.meta_name_value(sp,\n                                                                     ftre_str.clone(),\n                                                                     ast::LitKind::Str(intern(mod_name.trim_left_matches(\"test_\")), ast::StrStyle::Cooked))])));\n\n        let mut mod_path = PathBuf::from(&amp;cx.codemap().span_to_filename(sp));\n        let dir = mod_path.parent().expect(\"no parent directory\").to_owned();\n        let default_path = dir.join(format!(\"{}.rs\", mod_name.as_str()));\n        let secondary_path = dir.join(format!(\"{}/mod.rs\", mod_name.as_str()));\n        match (default_path.exists(), secondary_path.exists()) {\n            (false, false) =&gt; {\n                cx.span_err(sp, &amp;format!(\"file not found for module `{}`\", mod_name.as_str()));\n                return DummyResult::any(sp);\n            }\n            (true, true) =&gt; {\n                cx.span_err(sp, &amp;format!(\"file for module `{}` found at both {} and {}\", mod_name.as_str(), default_path.display(), secondary_path.display()));\n                return DummyResult::any(sp);\n            }\n            (true, false) =&gt; mod_path = default_path,\n            (false, true) =&gt; mod_path = secondary_path,\n        }\n\n        test_mods.push(P(ast::Item {\n            ident: cx.ident_of(mod_name.as_str()),\n            attrs: attrs,\n            id: ast::DUMMY_NODE_ID,\n            node: ast::ItemKind::Mod(\n                ast::Mod {\n                    inner: sp,\n                    items: expand_include(cx, sp, &amp;mod_path),\n                }\n            ),\n            vis: ast::Visibility::Inherited,\n            span: sp,\n        }))\n    }\n\n    MacEager::items(test_mods)\n}\n</code></pre>\n\n<hr>\n\n<p>Finally I found out the solution! \\o/</p>\n\n<p>The process Rust handles module file is like <code>include!</code>. As a result, I looked at the implementation of the macro <code>include!</code>, which can be found <a href=\"https://github.com/rust-lang/rust/blob/e9bc1bac8c7664fb1b487879b3fbd56221f6a721/src/libsyntax/ext/source_util.rs#L87\" rel=\"nofollow\">here</a>, and rewrote it to suit my needs:</p>\n\n<pre><code>use ::std::path::Path;\nuse ::std::path::PathBuf;\nuse syntax::parse::{self, token};\nuse syntax::errors::FatalError;\nmacro_rules! panictry {\n    ($e:expr) =&gt; ({\n        match $e {\n            Ok(e) =&gt; e,\n            Err(mut e) =&gt; {\n                e.emit();\n                panic!(FatalError);\n            }\n        }\n    })\n}\n\npub fn expand_include&lt;'cx&gt;(cx: &amp;'cx mut ExtCtxt, sp: Span, file: &amp;Path) -&gt; Vec&lt;P&lt;ast::Item&gt;&gt; {\n    let mut p = parse::new_sub_parser_from_file(cx.parse_sess(), cx.cfg(), file, true, None, sp);\n    let mut ret = vec![];\n    while p.token != token::Eof {\n        match panictry!(p.parse_item()) {\n            Some(item) =&gt; ret.push(item),\n            None =&gt; {\n                panic!(p.diagnostic().span_fatal(p.span,\n                                                 &amp;format!(\"expected item, found `{}`\", p.this_token_to_string())))\n            }\n        }\n    }\n    ret\n}\n</code></pre>\n\n<p>To get items from the module file, we must find out the real module path:</p>\n\n<pre><code>let mut mod_path = PathBuf::from(&amp;cx.codemap().span_to_filename(sp));\nmod_path.set_file_name(mod_name.as_str());\nmod_path.set_extension(\"rs\");\n</code></pre>\n\n<p>Then we can construct our module node like this:</p>\n\n<pre><code>P(ast::Item {\n    ident: cx.ident_of(mod_name.as_str()),\n    attrs: attrs,\n    id: ast::DUMMY_NODE_ID,\n    node: ast::ItemKind::Mod(ast::Mod {\n        inner: sp,\n        items: expand_include(cx, sp, &amp;mod_path),\n    }),\n    vis: ast::Visibility::Inherited,\n    span: sp,\n})\n</code></pre>\n\n<p>In summary, the plugin should be rewritten as the following:</p>\n\n<pre><code>#![feature(plugin_registrar, rustc_private)]\n\nextern crate syntax;\nextern crate rustc_plugin;\n\nuse syntax::ast;\nuse syntax::ptr::P;\nuse syntax::codemap::Span;\nuse syntax::parse::{self, token};\nuse syntax::tokenstream::TokenTree;\nuse syntax::ext::base::{ExtCtxt, MacResult, DummyResult, MacEager};\nuse syntax::errors::FatalError;\nuse syntax::ext::build::AstBuilder;\nuse rustc_plugin::Registry;\nuse syntax::util::small_vector::SmallVector;\n\nuse ::std::path::Path;\nuse ::std::path::PathBuf;\n\nmacro_rules! panictry {\n    ($e:expr) =&gt; ({\n        match $e {\n            Ok(e) =&gt; e,\n            Err(mut e) =&gt; {\n                e.emit();\n                panic!(FatalError);\n            }\n        }\n    })\n}\n\npub fn expand_include&lt;'cx&gt;(cx: &amp;'cx mut ExtCtxt, sp: Span, file: &amp;Path) -&gt; Vec&lt;P&lt;ast::Item&gt;&gt; {\n    let mut p = parse::new_sub_parser_from_file(cx.parse_sess(), cx.cfg(), file, true, None, sp);\n    let mut ret = vec![];\n    while p.token != token::Eof {\n        match panictry!(p.parse_item()) {\n            Some(item) =&gt; ret.push(item),\n            None =&gt; {\n                panic!(p.diagnostic().span_fatal(p.span,\n                                                 &amp;format!(\"expected item, found `{}`\", p.this_token_to_string())))\n            }\n        }\n    }\n    ret\n}\n\nfn intern(s: &amp;str) -&gt; token::InternedString {\n    token::intern_and_get_ident(s)\n}\n\nfn choose(cx: &amp;mut ExtCtxt, sp: Span, args: &amp;[TokenTree]) -&gt; Box&lt;MacResult + 'static&gt; {\n    let mut test_mods = SmallVector::zero();\n    let cfg_str = intern(\"cfg\");\n    let feat_str = intern(\"feature\");\n    for arg in args {\n        let mut attrs = vec![];\n        let mod_name = match arg {\n            &amp;TokenTree::Token(_, token::Ident(s)) =&gt; s.to_string(),\n            _ =&gt; {\n                return DummyResult::any(sp);\n            }\n        };\n        attrs.push(cx.attribute(sp,\n                                cx.meta_list(sp,\n                                             // simply increase the reference counter\n                                             cfg_str.clone(),\n                                             vec![cx.meta_name_value(sp,\n                                                                     feat_str.clone(),\n                                                                     ast::LitKind::Str(intern(mod_name.trim_left_matches(\"test_\")), ast::StrStyle::Cooked))])));\n\n        let mut mod_path = PathBuf::from(&amp;cx.codemap().span_to_filename(sp));\n        mod_path.set_file_name(mod_name.as_str());\n        mod_path.set_extension(\"rs\");\n\n        test_mods.push(P(ast::Item {\n            ident: cx.ident_of(mod_name.as_str()),\n            attrs: attrs,\n            id: ast::DUMMY_NODE_ID,\n            node: ast::ItemKind::Mod(\n                ast::Mod {\n                    inner: sp,\n                    items: expand_include(cx, sp, &amp;mod_path),\n                }\n            ),\n            vis: ast::Visibility::Inherited,\n            span: sp,\n        }))\n    }\n\n    MacEager::items(test_mods)\n}\n\n#[plugin_registrar]\npub fn plugin_registrar(reg: &amp;mut Registry) {\n    reg.register_macro(\"choose\", choose);\n}\n</code></pre>\n"}], "owner": {"reputation": 840, "user_id": 4725840, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mpeTv.jpg?s=128&g=1", "display_name": "knight42", "link": "https://stackoverflow.com/users/4725840/knight42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 353, "favorite_count": 2, "accepted_answer_id": 39136048, "answer_count": 1, "score": 6, "last_activity_date": 1472111461, "creation_date": 1471936844, "last_edit_date": 1471955560, "question_id": 39094751, "link": "https://stackoverflow.com/questions/39094751/how-to-write-a-rust-compiler-plugin-that-generates-a-module", "title": "How to write a Rust compiler plugin that generates a module?", "body": "<p>I am writing a Rust compiler plugin that expands </p>\n\n<pre><code>choose! {\n    test_a\n    test_b\n}\n</code></pre>\n\n<p>to</p>\n\n<pre><code>#[cfg(feature = \"a\")]\nmod test_a;\n#[cfg(feature = \"b\")]\nmod test_b;\n</code></pre>\n\n<p>It is almost done now, but the module contains nothing in the finally expanded code. I guess the reason  is the span doesn't cover the module file.</p>\n\n<pre><code>use syntax::ast;\nuse syntax::ptr::P;\nuse syntax::codemap;\nuse syntax::parse::token;\nuse syntax::tokenstream::TokenTree;\nuse syntax::ext::base::{ExtCtxt, MacResult, DummyResult, MacEager};\nuse syntax::ext::build::AstBuilder;\nuse syntax_pos::Span;\nuse rustc_plugin::Registry;\nuse syntax::util::small_vector::SmallVector;\n\n// Ideally, it will expand\n//\n// ```rust\n// choose! {\n//   test_a\n//   test_b\n// }\n// ```\n// to\n// ```rust\n// #[cfg(feature = \"a\")]\n// mod test_a;\n// #[cfg(feature = \"b\")]\n// mod test_b;\n// ```\n//\n// but the modules contain nothing in the expanded code at present\n\nfn choose(cx: &amp;mut ExtCtxt, sp: Span, args: &amp;[TokenTree]) -&gt; Box&lt;MacResult + 'static&gt; {\n    let mut test_mods: SmallVector&lt;P&lt;ast::Item&gt;&gt; = SmallVector::many(vec![]);\n    for arg in args {\n        let mut attrs = vec![];\n        let text = match arg {\n            &amp;TokenTree::Token(_, token::Ident(s)) =&gt; s.to_string(),\n            _ =&gt; {\n                return DummyResult::any(sp);\n            }\n        };\n        let cfg_str = token::InternedString::new(\"cfg\");\n        let feat_str = token::InternedString::new(\"feature\");\n        attrs.push(cx.attribute(sp,\n                                cx.meta_list(sp,\n                                             cfg_str,\n                                             vec![cx.meta_name_value(sp,\n                                                                     feat_str,\n                                                                     ast::LitKind::Str(token::intern_and_get_ident(text.trim_left_matches(\"test_\")), ast::StrStyle::Cooked))])));\n        test_mods.push(P(ast::Item {\n            ident: cx.ident_of(text.as_str()),\n            attrs: attrs,\n            id: ast::DUMMY_NODE_ID,\n            node: ast::ItemKind::Mod(\n                // === How to include the specified module file here? ===\n                ast::Mod {\n                    inner: codemap::DUMMY_SP,\n                    items: vec![],\n                }\n            ),\n            vis: ast::Visibility::Inherited,\n            span: sp,\n        }))\n    }\n\n    MacEager::items(test_mods)\n}\n\n#[plugin_registrar]\npub fn plugin_registrar(reg: &amp;mut Registry) {\n    reg.register_macro(\"choose\", choose);\n}\n</code></pre>\n\n<p>(<a href=\"https://gist.github.com/knight42/7a760eee7979092635825d27e321a84a\" rel=\"noreferrer\">Gist</a>)</p>\n"}, {"tags": ["c", "rust", "ffi", "dpdk"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1471933656, "post_id": 39091475, "comment_id": 65534673, "body": "It sounds like you may not have converted <code>TAIL_Q_FOREACH</code>, which is presumably a macro thar generates a loop, into Rust - but you haven&#39;t shown any of the code so can&#39;t tell. I wouldn&#39;t expect it&#39;s a linking issue if you got it to run."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471953847, "post_id": 39091475, "comment_id": 65547829, "body": "As currently written, this question should be closed because: <i>Questions seeking debugging help (&quot;why isn&#39;t this code working?&quot;) must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it in the question itself. Questions without a clear problem statement are not useful to other readers.</i> <a href=\"https://stackoverflow.com/posts/39091475/edit\">edit</a> your question to produce a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1471955922, "post_id": 39091475, "comment_id": 65549346, "body": "Your <code>printf</code> <b>completely changes the behavior of the loop</b>. This is why braces on if statements should be mandatory."}, {"owner": {"reputation": 103, "user_id": 6479554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e872b3f2f74039a9aa807bd2a36af1?s=128&d=identicon&r=PG&f=1", "display_name": "kentonspr", "link": "https://stackoverflow.com/users/6479554/kentonspr"}, "edited": false, "score": 0, "creation_date": 1471960101, "post_id": 39091475, "comment_id": 65552675, "body": "Thanks for the input Shepmaster, I&#39;ll try and edit this today to match the rules."}, {"owner": {"reputation": 103, "user_id": 6479554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e872b3f2f74039a9aa807bd2a36af1?s=128&d=identicon&r=PG&f=1", "display_name": "kentonspr", "link": "https://stackoverflow.com/users/6479554/kentonspr"}, "edited": false, "score": 0, "creation_date": 1471967663, "post_id": 39091475, "comment_id": 65558454, "body": "Hopefully the edits I made conform to Minimal, Complete, and Verifiable rules"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471956894, "post_id": 39101713, "comment_id": 65550140, "body": "This doesn&#39;t actually answer the underlying question of why the Rust version&#39;s output differs from the C version. According to the narrative, the output differed <i>before</i> the broken <code>continue</code> statement was added."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471958067, "post_id": 39101713, "comment_id": 65551058, "body": "I don&#39;t believe the question is around the ordering of the results, but around the missing lines (like <code>bnxt_rte_pmd_init</code> or <code>probe driver</code>), although I appreciate the subtle attempt to slander a non-C / C++ language \ud83d\udc4d."}], "tags": [], "owner": {"reputation": 5994, "user_id": 5698738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4tnZ9.jpg?s=128&g=1", "display_name": "Aganju", "link": "https://stackoverflow.com/users/5698738/aganju"}, "is_accepted": false, "score": -1, "last_activity_date": 1471957867, "last_edit_date": 1471957867, "creation_date": 1471956595, "answer_id": 39101713, "question_id": 39091475, "link": "https://stackoverflow.com/questions/39091475/dpdk-function-has-different-output-when-called-from-rust-than-from-c/39101713#39101713", "title": "DPDK function has different output when called from Rust than from C", "body": "<p>You indented the <code>continue</code> after the <code>if</code>, which is a visual hint that it is supposed to be part of the <code>if</code> block - but the compiler does not take visual hints.</p>\n\n<p>You need to put <code>{}</code> around the block of the <code>if</code>, or the 'continue' will be <em>always</em> executed;</p>\n\n<pre><code>if (driver-&gt;type != PMD_PDEV)\n{\n    printf(\"\\nDriver name = %s\", driver-&gt;name); // Added to track problem\n    continue;\n}\n</code></pre>\n\n<p>As for the differing results - maybe C is just faster, so each core comes back and is done before the next one even gets started; whereas in Rust it is slower so they work in parallel and come back in random sequence?</p>\n"}, {"tags": [], "owner": {"reputation": 103, "user_id": 6479554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e872b3f2f74039a9aa807bd2a36af1?s=128&d=identicon&r=PG&f=1", "display_name": "kentonspr", "link": "https://stackoverflow.com/users/6479554/kentonspr"}, "is_accepted": true, "score": 1, "last_activity_date": 1471983552, "last_edit_date": 1471983552, "creation_date": 1471983272, "answer_id": 39109947, "question_id": 39091475, "link": "https://stackoverflow.com/questions/39091475/dpdk-function-has-different-output-when-called-from-rust-than-from-c/39109947#39109947", "title": "DPDK function has different output when called from Rust than from C", "body": "<p>I originally thought that I was not properly linking to something that supplied the info for <strong>sys/queue.h</strong>. While attempting to understand linking better, I changed my build.rs for the link to DPDK from this -</p>\n\n<pre><code>fn main() {\n    println!(\"cargo:rustc-link-lib=static=rte_eal\");\n    println!(\"cargo:rustc-link-search=native=&lt;Path to RTE_SDK&gt;/x86_64-native-linuxapp-gcc/lib\");\n}\n</code></pre>\n\n<p>To this - </p>\n\n<pre><code>fn main() {\n    println!(\"cargo:rustc-link-lib=static=dpdk\");\n    println!(\"cargo:rustc-link-search=native=&lt;Path to RTE_SDK&gt;/x86_64-native-linuxapp-gcc/lib\");\n}\n</code></pre>\n\n<p>Rust now links to all DPDK libraries that get compiled instead of just <strong>rte_eal</strong> where the initial function is called from. Now when I execute my Rust program, I get the same output as the C program - </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>~/Dev/rust_eal_init_test$ sudo target/debug/rust_eal_init_test \nEAL: Detected 8 lcore(s)\nEAL: No free hugepages reported in hugepages-2048kB\nEAL: Probing VFIO support...\nTest before TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nPMD: bnxt_rte_pmd_init() called for (null)\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nEAL: PCI device 0000:00:19.0 on NUMA socket -1\nEAL:   probe driver: 8086:153a rte_em_pmd\nEAL: PCI device 0000:04:00.0 on NUMA socket -1\nEAL:   probe driver: 8086:1533 rte_igb_pmd\n~/Dev/rust_eal_init_test$\n</code></pre>\n\n<p>I didn't think of one of the static libraries needing another to be included in the executable for it to function. I'm also assuming from this that if I were to compile DPDK as a shared library I wouldn't have had this issue.</p>\n\n<p>Thanks to Shepmaster as well, while not directly answering my question, forcing me to simplify it made it much easier to troubleshoot my problem in a more controlled way. </p>\n"}], "owner": {"reputation": 103, "user_id": 6479554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e872b3f2f74039a9aa807bd2a36af1?s=128&d=identicon&r=PG&f=1", "display_name": "kentonspr", "link": "https://stackoverflow.com/users/6479554/kentonspr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 477, "favorite_count": 1, "accepted_answer_id": 39109947, "answer_count": 2, "score": 0, "last_activity_date": 1471983552, "creation_date": 1471919907, "last_edit_date": 1471983436, "question_id": 39091475, "link": "https://stackoverflow.com/questions/39091475/dpdk-function-has-different-output-when-called-from-rust-than-from-c", "title": "DPDK function has different output when called from Rust than from C", "body": "<p>I'm writing a Rust program that interfaces with Intel's DPDK and I've run into an issue I do not quite grasp. I can currently execute a function from the DPDK library in a Rust program but it differs in results from the same program written in C. </p>\n\n<p>Rust program output -</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>~/Dev/rust_eal_init_test$ sudo target/debug/rust_eal_init_test \nEAL: Detected 8 lcore(s)\nEAL: No free hugepages reported in hugepages-2048kB\nEAL: Probing VFIO support...\n~/Dev/rust_eal_init_test$\n</code></pre>\n\n<p>C program output -</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>~/Dev/c_eal_init_test$ sudo build/c_eal_init_test \nEAL: Detected 8 lcore(s)\nEAL: No free hugepages reported in hugepages-2048kB\nEAL: Probing VFIO support...\nPMD: bnxt_rte_pmd_init() called for (null)\nEAL: PCI device 0000:00:19.0 on NUMA socket -1\nEAL:   probe driver: 8086:153a rte_em_pmd\nEAL: PCI device 0000:04:00.0 on NUMA socket -1\nEAL:   probe driver: 8086:1533 rte_igb_pmd\n~/Dev/c_eal_init_test$\n</code></pre>\n\n<p>DPDK has been compiled as static libraries that I am linking to in Rust. Below is the code for both the Rust and C program. </p>\n\n<p>Rust main.rs - </p>\n\n<pre><code>extern crate libc;\n\nuse std::env;\nuse std::process::exit;\nuse std::ffi::CString;\nuse libc::{c_int, c_char,};\n\nextern {\n    pub fn rte_eal_init(argc: c_int, argv: *mut *mut c_char) -&gt; c_int;\n}\n\n// librte_eal\npub fn dpdk_rte_eal_init(argc: i32, argv: Vec&lt;String&gt;) -&gt; i32 {\n    let mut args: Vec&lt;*mut c_char&gt; = argv.iter().map(|x| CString::new(x.clone()).unwrap().into_raw()).collect();\n    let retc: c_int = unsafe { rte_eal_init(argc as c_int, args.as_mut_ptr()) };\n    let ret: i32 = retc as i32;\n    ret\n}\n\nfn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();\n\n    let ret: i32 = dpdk_rte_eal_init(args.len() as i32, args);\n    if ret &lt; 0 {\n        exit(ret);\n    }\n}\n</code></pre>\n\n<p>C main.c - </p>\n\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;rte_eal.h&gt;\n#include &lt;rte_debug.h&gt;\n\nint\nmain(int argc, char **argv)\n{\n    int ret;\n\n    ret = rte_eal_init(argc, argv);\n    if (ret &lt; 0)\n        rte_panic(\"Cannot init EAL\\n\");\n\n    return 0;\n}\n</code></pre>\n\n<p>I've done some investigation by looking through the DPDK source and adding print statements to see where things differ. The <code>rte_eal_init()</code> function is in <strong>eal.c</strong> and calls various other init functions. The trigger for the extra output is from another function called <code>rte_eal_dev_init()</code> in <strong>eal_common_dev.c</strong>. </p>\n\n<p><code>rte_eal_dev_init()</code> - </p>\n\n<pre><code>int\nrte_eal_dev_init(void)\n{\n    struct rte_devargs *devargs;\n    struct rte_driver *driver;\n\n    /*\n     * Note that the dev_driver_list is populated here\n     * from calls made to rte_eal_driver_register from constructor functions\n     * embedded into PMD modules via the PMD_REGISTER_DRIVER macro\n     */\n\n    /* call the init function for each virtual device */\n    TAILQ_FOREACH(devargs, &amp;devargs_list, next) {\n\n        if (devargs-&gt;type != RTE_DEVTYPE_VIRTUAL)\n            continue;\n\n        if (rte_eal_vdev_init(devargs-&gt;virt.drv_name,\n                    devargs-&gt;args)) {\n            RTE_LOG(ERR, EAL, \"failed to initialize %s device\\n\",\n                    devargs-&gt;virt.drv_name);\n            return -1;\n        }\n    }\n\n    /* Once the vdevs are initalized, start calling all the pdev drivers */\n    TAILQ_FOREACH(driver, &amp;dev_driver_list, next) {\n        if (driver-&gt;type != PMD_PDEV)\n            continue;\n        /* PDEV drivers don't get passed any parameters */\n        driver-&gt;init(NULL, NULL);\n    }\n   return 0;\n}\n</code></pre>\n\n<p>I've found that the Rust program enters the <code>rte_eal_dev_init()</code> function, but never enters the loop for the <code>TAILQ_FOREACH()</code> macro. If I were to add a print statement directly above and under the macro like so - </p>\n\n<pre><code>printf(\"Test before TAILQ_FOREACH\\n\");  \nTAILQ_FOREACH(driver, &amp;dev_driver_list, next) {\n    printf(\"Test in TAILQ_FOREACH\\n\");\n    if (driver-&gt;type != PMD_PDEV)\n        continue;\n    /* PDEV drivers don't get passed any parameters */\n    driver-&gt;init(NULL, NULL);\n}\n</code></pre>\n\n<p>This gives me the following output in Rust - </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>~/Dev/rust_eal_init_test$ sudo target/debug/rust_eal_init_test \nEAL: Detected 8 lcore(s)\nEAL: No free hugepages reported in hugepages-2048kB\nEAL: Probing VFIO support...\nTest before TAILQ_FOREACH\n~/Dev/rust_eal_init_test$\n</code></pre>\n\n<p>And the following output in C - </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>~/Dev/c_eal_init_test$ sudo build/c_eal_init_test \nEAL: Detected 8 lcore(s)\nEAL: No free hugepages reported in hugepages-2048kB\nEAL: Probing VFIO support...\nTest before TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nPMD: bnxt_rte_pmd_init() called for (null)\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nTest in TAILQ_FOREACH\nEAL: PCI device 0000:00:19.0 on NUMA socket -1\nEAL:   probe driver: 8086:153a rte_em_pmd\nEAL: PCI device 0000:04:00.0 on NUMA socket -1\nEAL:   probe driver: 8086:1533 rte_igb_pmd\n~/Dev/c_eal_init_test$\n</code></pre>\n\n<p>I found that <code>TAILQ_FOREACH()</code> is defined in <strong>sys/queue.h</strong>. As I understand it, linking to a static library shouldn't cause problems with the library linking to something else dynamically. Is this correct?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471908847, "post_id": 39089905, "comment_id": 65528249, "body": "That does seem to make the example build, thanks, but not the real code.  I guess I need to work out what&#39;s different."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471910621, "post_id": 39089905, "comment_id": 65528711, "body": "I&#39;ve edited to add the missing piece (registering the function) which stops that working in the actual application."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471911909, "post_id": 39089905, "comment_id": 65528989, "body": "<a href=\"http://127.0.0.1:5000/?gist=d5e4ea88772a0304f72a7d418fd2eedf\" rel=\"nofollow noreferrer\">Increase the number of lifetimes in <code>MyContext</code>?</a>"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471912404, "post_id": 39089905, "comment_id": 65529082, "body": "Your link goes to localhost..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471912599, "post_id": 39089905, "comment_id": 65529125, "body": "Sure, act like you don&#39;t have access to the most popular webpage on the Internet. <a href=\"http://play.integer32.com/?gist=d5e4ea88772a0304f72a7d418fd2eedf\" rel=\"nofollow noreferrer\">One more public</a> (note that the <code>gist</code> parameter works across both Playgrounds, I was just doing some local work on mine)."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471913962, "post_id": 39089905, "comment_id": 65529405, "body": "That seems to work (well, compile at least)), thank you!  Once I&#39;ve fully absorbed both why it now works, and why it didn&#39;t before, I&#39;ll feel I have levelled up again."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1471916849, "creation_date": 1471916849, "answer_id": 39091117, "question_id": 39089905, "link": "https://stackoverflow.com/questions/39089905/passing-mutable-context-into-callbacks/39091117#39091117", "title": "Passing mutable context into callbacks", "body": "<p>These deep lifetime issues are hairy, so let's see if we can figure it out. Let's start with a look at a stripped-down version of the code that has the same error:</p>\n\n<pre><code>struct RunLoop&lt;'a&gt; {\n    marker: &amp;'a u8,\n}\n\nstruct MyContext&lt;'a&gt; {\n    rl: &amp;'a mut RunLoop&lt;'a&gt;,\n}\n\nfn run(rl: &amp;mut RunLoop) {\n    let mut ctxt = MyContext { rl: rl };\n}\n\nfn main() {}\n</code></pre>\n\n<p>The definition of <code>MyContext</code> states that it needs to be provided a reference to a <code>RunLoop</code>. The lifetime of the <code>RunLoop</code> and the lifetime the <code>RunLoop</code> is parameterized with need to be unified - they are both set to <code>'a</code>. However, this cannot be guaranteed based on the signature of <code>run</code>. All that is known is that there are two lifetimes, both elided at the moment.</p>\n\n<p>This leads to one solution: we can explicitly identify both lifetimes and establish a relationship between them:</p>\n\n<pre><code>struct MyContext&lt;'a, 'b : 'a&gt; {\n    rl: &amp;'a mut RunLoop&lt;'b&gt;,\n}\n</code></pre>\n\n<p>Another solution is the one hinted at by the compiler: pre-unify the lifetimes when <code>run</code> has been called:</p>\n\n<pre><code>fn run&lt;'a&gt;(rl: &amp;'a mut RunLoop&lt;'a&gt;) {\n</code></pre>\n\n<p>However, this latter solution doesn't work in the larger program, failing with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: mismatched types [--explain E0308]\n  --&gt; src/main.rs:74:27\n74 |&gt;     rl.register((\"l_run\", MyWidget::l_run));\n   |&gt;                           ^^^^^^^^^^^^^^^ expected concrete lifetime, found bound lifetime parameter\nnote: expected type `fn(&amp;mut RL&lt;'_&gt;)`\nnote:    found type `fn(&amp;'a mut RL&lt;'a&gt;) {MyWidget::l_run}`\nnote: expected concrete lifetime is lifetime ReSkolemized(0, BrAnon(0))\n</code></pre>\n\n<p>(Side note: it's been a <em>long</em> time since I've seen a <code>ReSkolemized</code> mention in an error message!)</p>\n\n<p>Let's extend our small example to generate the same error:</p>\n\n<pre><code>struct RunLoop&lt;'a&gt; {\n    marker: &amp;'a u8,\n}\n\nstruct MyContext&lt;'a&gt; {\n    rl: &amp;'a mut RunLoop&lt;'a&gt;,\n}\n\nfn run&lt;'a&gt;(rl: &amp;'a mut RunLoop&lt;'a&gt;) {\n    let mut ctxt = MyContext { rl: rl };\n}\n\nfn register(func: fn(&amp;mut RunLoop)) {}\n\nfn main() {\n    register(run);\n}\n</code></pre>\n\n<p>This I'm less sure about. I do know that putting just about any explicit lifetime on the reference helps it compile:</p>\n\n<pre><code>fn register&lt;'a&gt;(func: fn(&amp;'a mut RunLoop&lt;'a&gt;)) {}\nfn register&lt;'a, 'b&gt;(func: fn(&amp;'a mut RunLoop&lt;'b&gt;)) {}\nfn register(func: fn(&amp;'static mut RunLoop)) {}\n</code></pre>\n"}], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 593, "favorite_count": 1, "accepted_answer_id": 39091117, "answer_count": 1, "score": 3, "last_activity_date": 1471916908, "creation_date": 1471906409, "last_edit_date": 1471916908, "question_id": 39089905, "link": "https://stackoverflow.com/questions/39089905/passing-mutable-context-into-callbacks", "title": "Passing mutable context into callbacks", "body": "<p>I'm trying to build a simple UI in Rust, but partly scriptable in Lua, using rust-lua53, and having problems working out a good way to give Lua components access to the Lua state.  This question/example is a little longer than I'd like, sorry!</p>\n\n<p>The core of the UI is a <code>Widget</code> trait with methods to call when keys are pressed or when the screen/window should be redrawn.  The type parameter <code>C</code> is the context I'll want to pass in (see later).</p>\n\n<pre><code>trait Widget&lt;C&gt; {\n    fn handle_key&lt;'c&gt;(&amp;mut self, key: char, context: &amp;'c mut C);\n}\n</code></pre>\n\n<p>There's a <code>UI</code> struct which handles the event loop, reading keys and calling the <code>draw</code> method (left out for the question).  The <code>Widget</code> trait and <code>UI</code> runner are generic and can be used without anything Lua-related.</p>\n\n<pre><code>struct UI {}\nimpl UI {\n    pub fn run&lt;'c, 'm, T, C&gt;(&amp;mut self, widget: 'm T, context: &amp;'c mut C)\n        where C: 'c, T: Widget&lt;C&gt;\n    {\n    }\n}\n</code></pre>\n\n<p>You use it by implementing <code>Widget</code> and calling <code>ui.run(widget)</code>, which runs an event loop until it's \"finished\" (say a button is pressed on the widget), and control is returned to the caller.</p>\n\n<p>There's a wrapper around the Lua state, which (amongst other things) handles safely getting pointers to Rust objects out:</p>\n\n<pre><code>struct RL&lt;'a&gt; {\n    marker: PhantomData&lt;(&amp;'a ())&gt;,\n}\nimpl&lt;'a&gt; RL&lt;'a&gt; {\n        pub fn get&lt;T&gt;(&amp;mut self) -&gt; Option&lt;Ptr&lt;T&gt;&gt;\n            where T: Any\n        { unimplemented!() }\n    pub fn register(&amp;mut self, func: (&amp;'static str, fn(&amp;mut RL) -&gt; ()))\n    { unimplemented!() }\n\n}\n</code></pre>\n\n<p>There's a smart pointer (which is just an <code>Rc&lt;RefCell&lt;T&gt;&gt;</code>) used with objects passed to Lua, so that Rust code can do mutable things even if there's a reference stashed away in the Lua state:</p>\n\n<pre><code>struct Ptr&lt;T&gt; {\n    obj: Rc&lt;RefCell&lt;T&gt;&gt;,\n}\nimpl&lt;T&gt; Clone for Ptr&lt;T&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        Ptr{ obj: self.obj.clone() }\n    }\n}\n\nimpl&lt;T&gt; Ptr&lt;T&gt; {\n    pub fn borrow_mut&lt;'a&gt;(&amp;'a mut self) -&gt; RefMut&lt;'a, T&gt; where T:'a {\n        (*self.obj).borrow_mut()\n    }\n}\n</code></pre>\n\n<p>And finally there's <code>MyWidget</code>, which is supposed to be a shim to allow Lua code to implement widgets, and this is where my current difficulty is.  The thinking is that:</p>\n\n<ul>\n<li><code>MyWidget</code> does need (mutable) access to the Lua state, for example to be able to call Lua callbacks.</li>\n<li><code>MyWidget</code> can't store a mutable reference to the Lua state, due to general <code>&amp;mut</code> aliasing rules (it's obviously used in many other places).</li>\n<li>Therefore I need to pass the Lua state into <code>UI::run</code> and on to the <code>Widget</code> methods (hence adding the <code>C</code> parameter above).</li>\n</ul>\n\n\n\n<pre><code>struct MyWidget {}\nstruct MyContext&lt;'a&gt; {\n    rl: &amp;'a mut RL,  // mutable reference to the Lua state\n}\n\nimpl&lt;'b&gt; Widget&lt;MyContext&lt;'b&gt;&gt; for MyWidget {\n    fn handle_key(&amp;mut self, key: char, context: &amp;mut MyContext) {\n        unimplemented!()\n    }\n}\n\nimpl MyWidget {\n    // This static method is called from Lua, where `MyWidget` has been made available as a userdata.\n    pub fn l_run(rl: &amp;mut RL) {\n        // First get a Rust pointer to the widget out of the Lua state\n        let mut ui: Ptr&lt;MyWidget&gt; = rl.get().unwrap();\n\n        // Create a fresh UI runner\n        let mut rui = UI{};\n        // Make the context including the Lua state\n        let mut ctxt: MyContext = MyContext { rl: rl, };\n        // Run the widget, passing the context.\n        rui.run(&amp;mut *ui.borrow_mut(), &amp;mut ctxt);\n    }\n}\n</code></pre>\n\n<p>And finally, the l_run method needs to be registered:</p>\n\n<pre><code>fn main() {\n    let mut rl = RL{marker: PhantomData};\n    rl.register((\"l_run\", MyWidget::l_run));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=adbad0b15529bd90fb61a25d84a6235e&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Play link</a></p>\n\n<p>The current attempt results in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot infer an appropriate lifetime due to conflicting requirements [E0495]\n  --&gt; &lt;anon&gt;:57:35\n   |&gt;\n57 |&gt;         let mut ctxt: MyContext = MyContext { rl: rl, };\n   |&gt;                                   ^^^^^^^^^\nhelp: consider using an explicit lifetime parameter as shown: fn l_run&lt;'a&gt;(rl: &amp;'a mut RL&lt;'a&gt;)\n  --&gt; &lt;anon&gt;:53:5\n   |&gt;\n53 |&gt;     pub fn l_run(rl: &amp; mut RL) {\n   |&gt;     ^\n</code></pre>\n\n<p>But if I take the compiler's advice and add the explicit lifetime parameter, the function no longer matches the signature needed when registering, and I instead get:</p>\n\n<pre><code>error: mismatched types [--explain E0308]\n  --&gt; &lt;anon&gt;:74:27\n   |&gt;\n74 |&gt;     rl.register((\"l_run\", MyWidget::l_run));\n   |&gt;                           ^^^^^^^^^^^^^^^ expected concrete lifetime, found bound lifetime parameter\nnote: expected type `fn(&amp;mut RL&lt;'_&gt;)`\nnote:    found type `fn(&amp;'r mut RL&lt;'r&gt;) {MyWidget::l_run}`\nnote: expected concrete lifetime is lifetime ReSkolemized(0, BrAnon(0))\n</code></pre>\n\n<p>So fixing the previous error means the signature is no longer compatible with the registration function (which isn't generic; in reality I pass in slices with several functions in one go).</p>\n"}, {"tags": ["arrays", "rust", "type-conversion"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471897604, "post_id": 39088095, "comment_id": 65524057, "body": "Rust style is <code>snake_case</code>, not <code>camelCase</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471898084, "post_id": 39088095, "comment_id": 65524310, "body": "Perhaps you are looking for <a href=\"http://burntsushi.net/rustdoc/byteorder/trait.ByteOrder.html#tymethod.write_u64\" rel=\"nofollow noreferrer\"><code>ByteOrder::write_u64</code></a>?"}, {"owner": {"reputation": 6631, "user_id": 51683, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ac88413948aad12e279e0d9609e7f74?s=128&d=identicon&r=PG", "display_name": "carols10cents", "link": "https://stackoverflow.com/users/51683/carols10cents"}, "edited": false, "score": 0, "creation_date": 1471898126, "post_id": 39088095, "comment_id": 65524333, "body": "It sounds like <a href=\"https://doc.rust-lang.org/stable/std/primitive.usize.html#method.swap_bytes\" rel=\"nofollow noreferrer\">usize#swap_bytes</a> might be what you&#39;re doing?"}, {"owner": {"reputation": 586, "user_id": 2530905, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/22f72a2cc75949e219a6d75ea17ca822?s=128&d=identicon&r=PG", "display_name": "tlegrand", "link": "https://stackoverflow.com/users/2530905/tlegrand"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1472157588, "post_id": 39088095, "comment_id": 65652209, "body": "@Shepmaster: To learn, I prefered a more natibe way than using an existing crate"}, {"owner": {"reputation": 586, "user_id": 2530905, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/22f72a2cc75949e219a6d75ea17ca822?s=128&d=identicon&r=PG", "display_name": "tlegrand", "link": "https://stackoverflow.com/users/2530905/tlegrand"}, "reply_to_user": {"reputation": 6631, "user_id": 51683, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ac88413948aad12e279e0d9609e7f74?s=128&d=identicon&r=PG", "display_name": "carols10cents", "link": "https://stackoverflow.com/users/51683/carols10cents"}, "edited": false, "score": 0, "creation_date": 1472157592, "post_id": 39088095, "comment_id": 65652212, "body": "@carols10cents: No, that is not what I wanted. I wanted to retrieve the bytes composing the usize of the string I passed."}, {"owner": {"reputation": 586, "user_id": 2530905, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/22f72a2cc75949e219a6d75ea17ca822?s=128&d=identicon&r=PG", "display_name": "tlegrand", "link": "https://stackoverflow.com/users/2530905/tlegrand"}, "edited": false, "score": 0, "creation_date": 1472157946, "post_id": 39088095, "comment_id": 65652373, "body": "I added my solution in the initial post if you wanna take a look :)"}], "owner": {"reputation": 586, "user_id": 2530905, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/22f72a2cc75949e219a6d75ea17ca822?s=128&d=identicon&r=PG", "display_name": "tlegrand", "link": "https://stackoverflow.com/users/2530905/tlegrand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1471897854, "answer_count": 0, "score": 0, "last_activity_date": 1472157930, "creation_date": 1471897338, "last_edit_date": 1472157930, "question_id": 39088095, "link": "https://stackoverflow.com/questions/39088095/how-to-extract-a-usize-bytes-and-return-them", "closed_reason": "Duplicate", "title": "How to extract a usize bytes and return them?", "body": "<p>I am trying to extract the bytes of a <code>usize</code> to retrieve them in a <code>u8</code> array but it seems impossible to initialize an array with a \"runtime-known\" size.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>use std::mem;\nuse std::mem::transmute;\n\nfn encodeString(value: &amp;str) {\n    let length: usize = value.len(); // retrieval of the size\n    let lengthSize: usize = mem::size_of_val(&amp;length); // I am on 64-bit so it is 8\n\n    let lengthBytes: [u8; lengthSize] = unsafe { transmute(lengthSize.to_be() }; // BAM. Does not want to compile because of the lengthSize\n}\n\nfn main() {\n    encodeString(\"Coucou\");\n}\n</code></pre>\n\n<p>I tried to set the <code>lengthSize</code> variable as a constant using <code>const</code> instead of <code>let</code> but, as you will notice, I have the error that it is not \"constant\".</p>\n\n<p>Because I did not succeed in doing what I wanted, I tried another way by using a <code>Vec</code> but... I have another error concerning its size and I did not find how I can force to use a <code>Vec</code> with only 8 entries of <code>u8</code>:</p>\n\n<pre><code>let lengthBytes: Vec&lt;u8&gt; = unsafe { transmute(length.to_be()) }; // BAM. 15:50 error: transmute called with differently sized types: usize (64 bits) to std::vec::Vec&lt;u8&gt; (192 bits) [E0512]\n</code></pre>\n\n<p>Maybe if I convert the <code>usize</code> to a string and then I convert it back to a <code>u8</code> array? But that seems to be... overkill.</p>\n\n<p>==== My solution</p>\n\n<p>So... I found another way by rotating the bits. Here is my code:</p>\n\n<pre><code>fn splitToVector(value: usize) -&gt; Vec&lt;u8&gt; {\n\n  println!(\"Value of the usize: {}\", value);\n\n  let length = mem::size_of_val(&amp;value);\n  println!(\"Usize coded on {} bytes\", length);\n\n  let mut splitted_value: Vec&lt;u8&gt; = Vec::with_capacity(length);\n\n  for x in 1..length + 1 {\n    let bitPack: u8 = value.rotate_left(8 * x as u32) as u8;\n    println!(\"Content of the bitPack number {}: {}\", x, bitPack);\n    splitted_value.push(bitPack);\n  }\n\n  return splitted_value;    \n}\n\nfn main {\n  let coucou_size: usize = \"Coucou\".len();\n\n  let coucou_size_bytes = splitToVector(coucou_size);\n  assert_eq!(coucou_size_bytes.capacity(), mem::size_of_val(&amp;coucou_size));\n  assert_eq!(String::from_utf8(coucou_size_bytes).unwrap().as_bytes(), coucou_size.to_string().as_bytes());\n}\n</code></pre>\n\n<p>The function that splits the usize in bytes is splitToVector which returns a vector of u8 because it is impossible to define the length of an array at runtime (as defined in this post provided by Shepmaster: <a href=\"https://stackoverflow.com/questions/34684261/how-to-set-a-rust-array-length-dynamically\">How to set a Rust array length dynamically</a>)</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "edited": false, "score": 0, "creation_date": 1471965945, "post_id": 39096329, "comment_id": 65557204, "body": "I did try running the version of <code>rustc</code> that comes out of <code>make</code>, but I think it kept using the system&#39;s <code>libstd.so</code> (or <code>libstd.rlib</code>?) rather than my customized libstd that also comes out of <code>make</code>. I assume <code>make install</code> would fix this, but I don&#39;t really want to circumvent my package manager (Arch Linux), and also <code>make</code> in general seems to take a really long time."}, {"owner": {"reputation": 266, "user_id": 4628795, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/45b01fe7dab4588128ec2495c4becea2?s=128&d=identicon&r=PG", "display_name": "adrian", "link": "https://stackoverflow.com/users/4628795/adrian"}, "reply_to_user": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "edited": false, "score": 1, "creation_date": 1471966436, "post_id": 39096329, "comment_id": 65557561, "body": "In step 3 under &#39;Building from source&#39;, you can pass the &#39;-- prefix&#39; option to &#39;./configure&#39;. Try and pass it a prefix like &#39;~/Desktop/Rust/&#39; and then either add that version of rust to your path or call rustc with the full path. It still circumvents the package manager, but you can easily revert all changes by deleting &#39;~/Desktop/Rust/&#39;."}, {"owner": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "edited": false, "score": 0, "creation_date": 1471966987, "post_id": 39096329, "comment_id": 65557946, "body": "Thanks @adrian! I&#39;ll try that."}, {"owner": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "edited": false, "score": 0, "creation_date": 1473276136, "post_id": 39096329, "comment_id": 66083103, "body": "It did work, but the <code>make</code> build takes (what feels like) 30 minutes on my laptop, and I haven&#39;t figured out a way to shortcut that. I&#39;m able to play with <code>rustc -Z print-link-args</code> and edit the path to the libstd that it&#39;s linking against, but when I do that the name-mangled symbols don&#39;t match up with what got built in the first part of the compile, and I still haven&#39;t figured out how to change paths around in that first part."}], "tags": [], "owner": {"reputation": 266, "user_id": 4628795, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/45b01fe7dab4588128ec2495c4becea2?s=128&d=identicon&r=PG", "display_name": "adrian", "link": "https://stackoverflow.com/users/4628795/adrian"}, "is_accepted": false, "score": 2, "last_activity_date": 1471956001, "last_edit_date": 1471956001, "creation_date": 1471941630, "answer_id": 39096329, "question_id": 39086476, "link": "https://stackoverflow.com/questions/39086476/how-do-i-build-with-a-custom-libstd/39096329#39096329", "title": "How do I build with a custom libstd?", "body": "<p>There are two possibilities in my mind.</p>\n\n<p><strong>Build the compiler from source everytime</strong></p>\n\n<ol>\n<li>Download the Rust <a href=\"https://github.com/rust-lang/rust\" rel=\"nofollow\">source</a></li>\n<li>Make your changes to std</li>\n<li>Follow the <a href=\"https://github.com/rust-lang/rust#building-from-source\" rel=\"nofollow\">steps</a> for building from source</li>\n</ol>\n\n<p><strong>Pass an option to rustc that modifies it search path</strong></p>\n\n<ol>\n<li>Run <code>rustc --help</code></li>\n<li>The first two options (<code>--cfg SPEC</code> or <code>-L [KIND=]PATH</code>) are probably were you would point rustc to your version of the std.</li>\n</ol>\n\n<p>I am not very sure how this would work. Ideally someone more knowledgeable could answer this part, because I think it is the preferred solution and way easier.</p>\n"}], "owner": {"reputation": 7971, "user_id": 823869, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0e7b6173470ead2fe170d55b317a9b1d?s=128&d=identicon&r=PG", "display_name": "Jack O&#39;Connor", "link": "https://stackoverflow.com/users/823869/jack-oconnor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 855, "favorite_count": 0, "answer_count": 1, "score": 7, "last_activity_date": 1471956001, "creation_date": 1471890957, "question_id": 39086476, "link": "https://stackoverflow.com/questions/39086476/how-do-i-build-with-a-custom-libstd", "title": "How do I build with a custom libstd?", "body": "<p>I want to make some changes in libstd and then test them with a toy program. It looks like I can build <code>libstd.so</code> by going to <code>rust/src/libstd</code> and doing a (nightly) <code>cargo build</code>. Once I've done that, how do I get a toy program to build with that libstd instead of the regular version installed on my system?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1471881490, "post_id": 39083692, "comment_id": 65515793, "body": "Thanks! FYI: I think I understood what you wrote, now fixing my code is not so easy (I&#39;m still a beginner). I simplified my code by removing <code>B</code> (ok, check), then tried to add <code>Vec&lt;Box&lt;F&gt;&gt;</code> in struct declaration, then added <code>Box::new(...)</code> in <code>add_b</code> and still have the same error. Not sure to understand what I missed, I still have to dig."}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1471881581, "post_id": 39083692, "comment_id": 65515849, "body": "Rust playground here: <a href=\"http://play.integer32.com/?gist=74fa771c562d30c541db54b2e8cf8ec8\" rel=\"nofollow noreferrer\">play.integer32.com/?gist=74fa771c562d30c541db54b2e8cf8ec8</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1471881902, "post_id": 39083692, "comment_id": 65516036, "body": "Might be worth nothing that if the closures actually do not capture any variable from the environment, then <code>fn()</code> is an appropriate type and does not require boxing."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 2, "creation_date": 1471882013, "post_id": 39083692, "comment_id": 65516108, "body": "@rap-2-h You literally have to write <code>Vec&lt;Box&lt;Fn()&gt;&gt;</code> and not <code>F</code>. That&#39;s important. This way we do remove all type parameters. Here is a version that works: <a href=\"http://play.integer32.com/?gist=b387fb2439171547470e0047ec0f8f14\" rel=\"nofollow noreferrer\">play.integer32.com/?gist=b387fb2439171547470e0047ec0f8f14</a>  (this does the boxing outside of <code>add_b</code>; you can do it inside by adding a type parameter to the function, not <code>A</code>)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471883749, "post_id": 39083692, "comment_id": 65517043, "body": "@LukasKalbertodt duplicate of <a href=\"http://stackoverflow.com/q/29371914/155423\">stackoverflow.com/q/29371914/155423</a> ?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471884896, "post_id": 39083692, "comment_id": 65517642, "body": "@Shepmaster I&#39;ve found that one, too, but <i>I</i> don&#39;t think it&#39;s a duplicate. OP in the linked question already uses <code>Box</code> and needs to specify the concrete trait-type. Here it&#39;s more or less the other way around..."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 10, "last_activity_date": 1578471497, "last_edit_date": 1578471497, "creation_date": 1471880619, "answer_id": 39083692, "question_id": 39083375, "link": "https://stackoverflow.com/questions/39083375/expected-closure-found-a-different-closure/39083692#39083692", "title": "Expected closure, found a different closure", "body": "<p>It's always worth taking a look at the <strong>full</strong> compiler output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:39:20\n   |\n39 |     a.add_b(B::new(|| println!(\"test2\")));\n   |                    ^^^^^^^^^^^^^^^^^^^^ expected closure, found a different closure\n   |\n   = note: expected type `[closure@src/main.rs:38:20: 38:39]`\n              found type `[closure@src/main.rs:39:20: 39:40]`\n   = note: no two closures, even if identical, have the same type\n   = help: consider boxing your closure and/or using it as a trait object\n</code></pre>\n\n<p>Especially helpful:</p>\n\n<ul>\n<li><blockquote>\n  <p>no two closures, even if identical, have the same type</p>\n</blockquote></li>\n<li><blockquote>\n  <p>consider boxing your closure and/or using it as a trait object</p>\n</blockquote></li>\n</ul>\n\n<p>We can simplify your example further by removing the type <code>B</code> altogether. Then the only task is to save a vector of closures. As the compiler tells us, no two closures have the same type, but <code>Vec</code> is a homogeneous data structure, meaning that every item in it has the same type.</p>\n\n<p>We can work around that restriction by introducing one level of indirection. As the compiler suggests, this can either be done by trait objects or boxing (the latter kind of includes the first one). The corresponding types would look like this:</p>\n\n<ul>\n<li><code>Vec&lt;&amp;Fn()&gt;</code> (reference to trait objects)</li>\n<li><code>Vec&lt;Box&lt;Fn()&gt;&gt;</code> (trait object in a box)</li>\n</ul>\n\n<p>In your example you want to <em>own</em> all closures, thus the correct choice is  to box all closures, as <code>Box&lt;T&gt;</code> is an owning wrapper while references only borrow stuff.</p>\n\n<p>A fully working example:</p>\n\n<pre><code>struct A {\n    b_vec: Vec&lt;B&gt;,\n}\n\nimpl A {\n    fn new() -&gt; A {\n        A { b_vec: Vec::new() }\n    }\n\n    fn add_b(&amp;mut self, b: B) {\n        self.b_vec.push(b);\n    }\n}\n\nstruct B {\n    f: Box&lt;Fn()&gt;,\n}\n\nimpl B {\n    fn new&lt;F&gt;(f: F) -&gt; B\n    where\n        F: Fn() + 'static,\n    {\n        B { f: Box::new(f) }\n    }\n}\n\nfn main() {\n    let mut a = A::new();\n    a.add_b(B::new(|| println!(\"test\")));\n    a.add_b(B::new(|| println!(\"test2\")));\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1531798162, "creation_date": 1531798162, "answer_id": 51372823, "question_id": 39083375, "link": "https://stackoverflow.com/questions/39083375/expected-closure-found-a-different-closure/51372823#51372823", "title": "Expected closure, found a different closure", "body": "<p>In this specific example, you can avoid a <em>trait object</em> by using a <em>function pointer</em> instead:</p>\n\n<pre><code>struct B {\n    f: fn(),\n}\n\nimpl B {\n    fn new(f: fn()) -&gt; B {\n        B { f: f }\n    }\n}\n</code></pre>\n\n<p>The rest of <a href=\"https://stackoverflow.com/a/39083692/155423\">Lukas Kalbertodt's answer</a> is unchanged:</p>\n\n<pre><code>struct A {\n    b_vec: Vec&lt;B&gt;,\n}\n\nimpl A {\n    fn new() -&gt; A {\n        A { b_vec: Vec::new() }\n    }\n\n    fn add_b(&amp;mut self, b: B) {\n        self.b_vec.push(b);\n    }\n}\n\nfn main() {\n    let mut a = A::new();\n    a.add_b(B::new(|| println!(\"test\")));\n    a.add_b(B::new(|| println!(\"test2\")));\n}\n</code></pre>\n\n<p>This is only valid because your closures do not capture any environment. The Rust compiler is thus able to \"promote\" them to full functions and then take references to the implicit function.</p>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3408, "favorite_count": 0, "accepted_answer_id": 39083692, "answer_count": 2, "score": 7, "last_activity_date": 1578471497, "creation_date": 1471879576, "last_edit_date": 1531797679, "question_id": 39083375, "link": "https://stackoverflow.com/questions/39083375/expected-closure-found-a-different-closure", "title": "Expected closure, found a different closure", "body": "<p><code>A</code> is a structure which contains a vector of <code>B</code>. <code>A</code> implements the <code>add_b</code> method which adds a <code>B</code> instance to the list of <code>B</code>. <code>B</code> contains a closure property <code>f</code>. </p>\n\n<p>If I add one <code>B</code> to the vector with <code>add_b</code>, it's OK. If I add two vectors with <code>add_b</code>, I got an error saying the two closures are different. Here is a minimal example:</p>\n\n<pre><code>// A struct...\nstruct A&lt;F&gt; {\n    b_vec: Vec&lt;B&lt;F&gt;&gt;, // A vector of B\n}\n\n// ...and its implementation\nimpl&lt;F&gt; A&lt;F&gt;\nwhere\n    F: Fn(),\n{\n    fn new() -&gt; A&lt;F&gt; {\n        A { b_vec: Vec::new() }\n    }\n\n    fn add_b(&amp;mut self, b: B&lt;F&gt;) {\n        self.b_vec.push(b);\n    }\n}\n\n// B struct...\nstruct B&lt;F&gt; {\n    f: F,\n}\n\n// ...and its implementation\nimpl&lt;F&gt; B&lt;F&gt;\nwhere\n    F: Fn(),\n{\n    fn new(f: F) -&gt; B&lt;F&gt; {\n        B { f: f }\n    }\n}\n\n// I add two B (with their closures arguments) in A\nfn main() {\n    let mut a = A::new();\n    a.add_b(B::new(|| println!(\"test\")));\n    a.add_b(B::new(|| println!(\"test2\")));\n}\n</code></pre>\n\n<p>This code results in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:39:20\n   |\n39 |     a.add_b(B::new(|| println!(\"test2\")));\n   |                    ^^^^^^^^^^^^^^^^^^^^ expected closure, found a different closure\n   |\n</code></pre>\n\n<p>How can I add multiple <code>B</code> with their different closures to <code>A</code>'s <code>b_vec</code>?</p>\n"}, {"tags": ["rust", "travis-ci", "nightly-build"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471877618, "post_id": 39082515, "comment_id": 65513154, "body": "The real answer is to update your code to support the newest nightly. If something changed from the nightly, it&#39;s not super likely it will change back (unless there was a bug or a good reason the new version is incorrect)."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471877950, "post_id": 39082515, "comment_id": 65513392, "body": "I&#39;m using a testing framework which did not updated to the newest nightly but still works with 1.11.0. I already issued the problem but meanwhile want to have my tests run through"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471878010, "post_id": 39082515, "comment_id": 65513440, "body": "Certainly! I just didn&#39;t want anyone reading this to think that sticking with an old version of nightly was a good long-term solution."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471880066, "post_id": 39082515, "comment_id": 65514883, "body": "He okay I got you - btw. you know a way to do what I wanted to in Travis CI?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471886872, "post_id": 39082515, "comment_id": 65518638, "body": "Oh, good point. Looks like Travis is using rustup.sh, not rustup.rs. I&#39;ve updated the linked duplicate with instructions that should work."}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 39, "favorite_count": 0, "closed_date": 1471877850, "answer_count": 0, "score": 0, "last_activity_date": 1471877562, "creation_date": 1471877130, "last_edit_date": 1471877562, "question_id": 39082515, "link": "https://stackoverflow.com/questions/39082515/build-a-rust-project-on-travis-ci-with-a-specific-nightly-version", "closed_reason": "Duplicate", "title": "Build a Rust project on Travis CI with a specific nightly version", "body": "<p>I'm about to build a Rust project but I want to build it with Rust nightly 1.11.0.</p>\n\n<p>At the moment I'm only able to do so:</p>\n\n<pre><code>language: rust\nrust: \n  - nightly \n  - 1.11.0\n</code></pre>\n\n<p>which builds nightly (latest version 1.13.0 which breaks my build) and the stable 1.11.0 which I cannot use either because I need nightly 1.11.0!</p>\n\n<p>So any way I can set this up? I tried <code>- nightly 1.11.0</code> but that seems to be a wrong config.</p>\n"}, {"tags": ["windows", "curl", "gcc", "rust"], "comments": [{"owner": {"reputation": 12461, "user_id": 266487, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/585595b6a24df9b742ebc186788e9a8e?s=128&d=identicon&r=PG", "display_name": "harper", "link": "https://stackoverflow.com/users/266487/harper"}, "edited": false, "score": 0, "creation_date": 1471875220, "post_id": 39081640, "comment_id": 65511351, "body": "Looks like a missing library name at the command line. What&#39;s the command line?"}, {"owner": {"reputation": 4223, "user_id": 710955, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GvorM.png?s=128&g=1", "display_name": "LeMoussel", "link": "https://stackoverflow.com/users/710955/lemoussel"}, "reply_to_user": {"reputation": 12461, "user_id": 266487, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/585595b6a24df9b742ebc186788e9a8e?s=128&d=identicon&r=PG", "display_name": "harper", "link": "https://stackoverflow.com/users/266487/harper"}, "edited": false, "score": 0, "creation_date": 1471932117, "post_id": 39081640, "comment_id": 65533964, "body": "@ harper, the command line is simply : <code>cargo build</code>"}, {"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1472662123, "post_id": 39081640, "comment_id": 65845721, "body": "Norepro, I use the same setup and it works"}, {"owner": {"reputation": 4223, "user_id": 710955, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GvorM.png?s=128&g=1", "display_name": "LeMoussel", "link": "https://stackoverflow.com/users/710955/lemoussel"}, "reply_to_user": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1472709413, "post_id": 39081640, "comment_id": 65862634, "body": "@\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438 on Windows 32bits?"}, {"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1472724237, "post_id": 39081640, "comment_id": 65871556, "body": "yes, Windows 10 to be exact"}], "owner": {"reputation": 4223, "user_id": 710955, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/GvorM.png?s=128&g=1", "display_name": "LeMoussel", "link": "https://stackoverflow.com/users/710955/lemoussel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 171, "favorite_count": 1, "answer_count": 0, "score": 4, "last_activity_date": 1471879325, "creation_date": 1471874677, "last_edit_date": 1471879325, "question_id": 39081640, "link": "https://stackoverflow.com/questions/39081640/unable-to-compile-curl-rust-on-windows-32bits-undefined-references-to-pthread-f", "title": "Unable to compile curl-rust on Windows 32bits, undefined references to pthread functions", "body": "<p>I come across this error when trying to compile <a href=\"https://github.com/alexcrichton/curl-rust\" rel=\"nofollow\">curl-rust</a> on Windows 32bits with MSYS2 installed. It seems that 'pthread' is not supported by MSYS2 / mingw32.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> error: linking with gcc failed: exit code: 1\n\n D:/Applications/msys32/mingw32/bin/../lib/gcc/i686-w64-mingw32/6.1.0/libgcc_eh.a(unwind-dw2-fde.o):(.text+0x1a3): undefined reference to pthread_mutex_init'\n\n D:/Applications/msys32/mingw32/bin/../lib/gcc/i686-w64-mingw32/6.1.0/libgcc_eh.a(unwind-dw2-fde.o):(.text+0xfd9): undefined reference topthread_once'\n\n D:/Applications/msys32/mingw32/bin/../lib/gcc/i686-w64-mingw32/6.1.0/libgcc_eh.a(unwind-dw2-fde.o):(.text+0xfe5): undefined reference to pthread_mutex_lock'\n\n D:/Applications/msys32/mingw32/bin/../lib/gcc/i686-w64-mingw32/6.1.0/libgcc_eh.a(unwind-dw2-fde.o):(.text+0x10f4): undefined reference topthread_once'\n\n D:/Applications/msys32/mingw32/bin/../lib/gcc/i686-w64-mingw32/6.1.0/libgcc_eh.a(unwind-dw2-fde.o):(.text+0x1100): undefined reference to pthread_mutex_lock'\n\n D:/Applications/msys32/mingw32/bin/../lib/gcc/i686-w64-mingw32/6.1.0/libgcc_eh.a(unwind-dw2-fde.o):(.text+0x11cb): undefined reference topthread_once'\n\n D:/Applications/msys32/mingw32/bin/../lib/gcc/i686-w64-mingw32/6.1.0/libgcc_eh.a(unwind-dw2-fde.o):(.text+0x11d7): undefined reference to pthread_mutex_lock'\n\n D:/Applications/msys32/mingw32/bin/../lib/gcc/i686-w64-mingw32/6.1.0/libgcc_eh.a(unwind-dw2-fde.o):(.text+0x1239): undefined reference topthread_mutex_unlock'\n\n collect2.exe: error: ld returned 1 exit status\n</code></pre>\n\n<p>Could there be something I missed in my MSYS2 install?</p>\n\n<p>I cannot find much about this error online except that this function is not on Windows.</p>\n\n<p><strong>Example :</strong></p>\n\n<p><em>main.rs</em></p>\n\n<pre><code>// https://crates.io/crates/curl \n// http://alexcrichton.com/curl-rust/curl/index.html\nextern crate curl;\nuse curl::easy::Easy;\n\nfn main() {\n    let mut easy = Easy::new();\n}\n</code></pre>\n\n<p><em>Cargo.toml</em></p>\n\n<pre><code>[package]\nname = \"linksbypage\"\nversion = \"0.1.0\"\nauthors = [\"LeMoussel\"]\n\n[dependencies]\ncurl = \"*\"\n</code></pre>\n\n<p>Windows (GNU ABI ) Rust version: 1.11.0, Cargo version: 0.12.0-nightly.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1471871074, "post_id": 39079922, "comment_id": 65508245, "body": "I could be wrong but it sounds like you&#39;re after a <code>RefCell</code> perhaps?"}, {"owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1471871502, "post_id": 39079922, "comment_id": 65508569, "body": "@SimonWhitehead A <code>RefCell</code> also can not be moved when there are active borrows, or do I misunderstand your question?"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1471916651, "post_id": 39079922, "comment_id": 65529933, "body": "Apologies I think I misunderstood yours - it was late at night. Without the use of <code>unsafe</code> .. as far as I am aware <code>Arc</code> and/or <code>Rc</code> with a custom wrapper would be the only way to do this."}, {"owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "edited": false, "score": 0, "creation_date": 1471967956, "post_id": 39079922, "comment_id": 65558657, "body": "I don&#39;t understand why you think you ought to be able to move a <code>Box</code> with outstanding borrows.  The reason that isn&#39;t allowed is that the new owner will control when the <code>Box</code> is dropped, which is also when the memory gets freed. Can you elaborate on why your scenario is sound?"}], "answers": [{"tags": [], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "is_accepted": false, "score": 2, "last_activity_date": 1472000780, "last_edit_date": 1472000780, "creation_date": 1471992537, "answer_id": 39111870, "question_id": 39079922, "link": "https://stackoverflow.com/questions/39079922/is-it-possible-to-have-internal-pointers-without-using-an-arc/39111870#39111870", "title": "Is it possible to have `internal pointers` without using an `Arc`?", "body": "<p>This will work:</p>\n\n<pre><code>struct Device;\n\nstruct CommandBuffer&lt;'a&gt; {\n    device: &amp;'a Device, // ...\n}\n\nstruct Something&lt;'a&gt; {\n    device: &amp;'a Device,\n    command_buffer: CommandBuffer&lt;'a&gt;,\n}\n\nfn main() {\n\n    let dev = Device;\n\n    let smth = Something {\n        device: &amp;dev,\n        command_buffer: CommandBuffer { device: &amp;dev },\n    };\n}\n</code></pre>\n\n<p>You should not worry about <code>Arc</code> performance <em>that</em> much.</p>\n\n<p>The possibility of escaping the scope could be easily dealt with by just writing a newtype that keeps the <code>Arc</code> private, and only implements <code>Deref</code> to <code>&amp;T</code> without <code>Clone</code>.</p>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1472000780, "creation_date": 1471869867, "last_edit_date": 1471870043, "question_id": 39079922, "link": "https://stackoverflow.com/questions/39079922/is-it-possible-to-have-internal-pointers-without-using-an-arc", "title": "Is it possible to have `internal pointers` without using an `Arc`?", "body": "<pre><code>struct Device;\n\nstruct CommandBuffer {\n    device: &amp;Device,\n    // ...\n}\n\n// Does not work because Rust does not allow internal pointers\nstruct Something {\n    device: Device,\n    command_buffer: CommandBuffer,\n}\n</code></pre>\n\n<p>One solution would be to use an <code>Arc</code></p>\n\n<pre><code>struct CommandBuffer {\n    device: Arc&lt;Device&gt;,\n    // ...\n}\nstruct Something {\n    device: Arc&lt;Device&gt;,\n    command_buffer: CommandBuffer,\n}\n</code></pre>\n\n<p>The downside of an <code>Arc</code> is indirection, an atomic counter and the possibility of escaping the scope and keeping the <code>Device</code> alive.</p>\n\n<p>Now I don't think that you can work around the one level of indirection in Rust but could it be possible to create something between a <code>Box</code> and an <code>Arc</code>?</p>\n\n<pre><code>struct CommandBuffer {\n    device: BoxRef&lt;Device&gt;,\n    // ...\n}\nstruct Something {\n    device: Box&lt;Device&gt;,\n    command_buffer: CommandBuffer,\n}\n</code></pre>\n\n<p>The main problem that I had while trying to implement <code>BoxRef</code> was that I need to be able to move a <code>Box</code> even if there are currently borrows to it. That should technically be safe because of the level of indirection, but I don't think that this can currently be expressed in Rust.</p>\n\n<pre><code>let boxed_device = Box::new(device);\nlet device_ref = boxed_device.boxed_ref();\n\n// Owner of the reference should be allowed to move\nSomething{device: boxed_device, CommandBuffer{device: device_ref}}\n</code></pre>\n\n<ol>\n<li><p>Could <code>BoxRef</code> be implemented? I had a quick look at\n<a href=\"http://kimundi.github.io/owning-ref-rs/owning_ref/index.html\" rel=\"nofollow\">owning_ref</a>\nbut it doesn't seem to solve the problem that I have.</p></li>\n<li><p>What other options do I have to express \"internal pointers\" in Rust?</p></li>\n</ol>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1471869740, "creation_date": 1471869740, "answer_id": 39079864, "question_id": 39079604, "link": "https://stackoverflow.com/questions/39079604/how-to-call-a-closure-in-a-method/39079864#39079864", "title": "How to call a closure in a method", "body": "<p>Wrap the member name in parenthesis: </p>\n\n<pre><code>fn do_something(&amp;self) {\n    (self.f)()\n}\n</code></pre>\n\n<p>If I recall correctly, the underlying cause has to do with precedence when parsing the code. <code>self.f()</code> looks for a method titled <code>f</code>, and will fail because it doesn't exist. <code>(self.f)()</code> causes it to be parsed differently, specifically looking for a member variable.</p>\n"}, {"comments": [{"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 1, "creation_date": 1471870016, "post_id": 39079866, "comment_id": 65507446, "body": "It&#39;s not me :/ Thank you anyway!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471870502, "post_id": 39079866, "comment_id": 65507840, "body": "The main point about closures having strange sizes is accurate, but the compiler knows the size of closures and it&#39;s possible to avoid the boxing. You also don&#39;t need to explicitly dereference the box to call it \u2014 <code>Box</code> implements <code>Deref</code>. Thus <code>(self.f)()</code> works equally well when it is boxed."}], "tags": [], "owner": {"reputation": 4324, "user_id": 1045510, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/abde71672c5b271c778d3ed312347866?s=128&d=identicon&r=PG", "display_name": "Kroltan", "link": "https://stackoverflow.com/users/1045510/kroltan"}, "is_accepted": false, "score": 2, "last_activity_date": 1471870759, "last_edit_date": 1471870759, "creation_date": 1471869749, "answer_id": 39079866, "question_id": 39079604, "link": "https://stackoverflow.com/questions/39079604/how-to-call-a-closure-in-a-method/39079866#39079866", "title": "How to call a closure in a method", "body": "<p><s>The second error is a problem here</s>, unboxed closures are a pain to handle. You <s>need to</s><em>could</em> box the closure (place it behind a pointer), because closures can have all sorts of weird sizes.</p>\n\n<p><strong>EDIT:</strong> As Shepmaster pointed out, this partially incorrect. I will extend the old answer below because it might help when dealing with closures and passing them around.</p>\n\n<p>(Also, <code>call</code> is experimental, and not necessary in this case, so let's do it without that)</p>\n\n<pre><code>struct A&lt;F&gt; {\n    f: Box&lt;F&gt;,\n}\n</code></pre>\n\n<p>Now that it's stored in a <code>Box</code> (heap-allocated memory, but you could use other types of indirection when necessary), you should also initialize the structure properly:</p>\n\n<pre><code>fn new(f: F) -&gt; A&lt;F&gt; {\n    A {\n        f: Box::new(f)\n    }\n}\n</code></pre>\n\n<p>Finally, you will be able to call it, right?</p>\n\n<pre><code>fn do_something(&amp;self) {\n    self.f() // Rust being silly\n}\n</code></pre>\n\n<p>But the Rust compiler is still wanting to call a method here instead of our closure-field. So we explicitly dereference the box:</p>\n\n<pre><code>fn do_something(&amp;self) {\n    (*self.f)() // Explain our intentions to the confused compiler\n}\n</code></pre>\n\n<p>And now, it works! But do we need the indirection here? I thought so, but it seems like not (thanks Shep)! You see, the <code>A</code> struct is already generic, so it should have a size suitable for any single <code>F</code> type. Thus, we do not need the indirection, and can use the old definition:</p>\n\n<pre><code>struct A&lt;F&gt; {\n    f: F,\n}\n</code></pre>\n\n<p>But now we've at least got a hint of what's happening here, and <code>do_something</code> can be reduced to </p>\n\n<pre><code>fn do_something(&amp;self) {\n    (self.f)() // Explicitly access a struct member, then call it\n}\n</code></pre>\n\n<p>So it seems it's just a syntactical limitation of the Rust compiler regarding the call syntax.</p>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 848, "favorite_count": 0, "accepted_answer_id": 39079864, "answer_count": 2, "score": 2, "last_activity_date": 1471870759, "creation_date": 1471868984, "last_edit_date": 1471869716, "question_id": 39079604, "link": "https://stackoverflow.com/questions/39079604/how-to-call-a-closure-in-a-method", "title": "How to call a closure in a method", "body": "<p>I try to call a closure from a <a href=\"https://doc.rust-lang.org/book/method-syntax.html\" rel=\"nofollow\">method</a> <code>do_something</code> implemented for structure <code>A</code>. I read some posts about this, but I'm a bit lost now. Here is a simplified version: </p>\n\n<pre><code>// A simple structure\nstruct A&lt;F&gt; {\n    f: F,\n}\n\n// Implements new and do_something\nimpl&lt;F&gt; A&lt;F&gt; where F: Fn() {\n    fn new(f: F) -&gt; A&lt;F&gt; {\n        A { f: f }\n    }\n    fn do_something(&amp;self) {\n        self.f() // Error is here.\n    }\n}\n\nfn main() {\n    let a = A::new( || println!(\"Test\") );\n    a.do_something()\n}\n</code></pre>\n\n<p>It displays this error:</p>\n\n<blockquote>\n  <p>error: no method named <code>f</code> found for type <code>&amp;A&lt;F&gt;</code> in the current scope</p>\n</blockquote>\n\n<p>I thought closures were called <a href=\"https://doc.rust-lang.org/book/closures.html#syntax\" rel=\"nofollow\">just like this</a>, but it seems I missed something. I tried to replace <code>self.f()</code> with <code>self.f.call()</code> (random test without really understanding), but it says two thing:</p>\n\n<blockquote>\n  <ol>\n  <li>error: this function takes 1 parameter but 0 parameters were supplied</li>\n  <li>error: explicit use of unboxed closure method <code>call</code> is experimental [E0174]</li>\n  </ol>\n</blockquote>\n\n<p>I'm not sure about the first error, but I think I will not use this feature now if it's experimental.</p>\n\n<p><strong>Is there a way to call a closure in a method?</strong> </p>\n"}, {"tags": ["error-handling", "rust", "match"], "comments": [{"owner": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471889139, "post_id": 39078339, "comment_id": 65519822, "body": "@Shepmaster you are right. The post was really poorly written. Apologies for that. Maybe this is part of my problem. It&#39;s very hard for me to even find the correct words, describing my question. I just edited the post and hope that my question becomes more clear now."}], "answers": [{"comments": [{"owner": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "edited": false, "score": 0, "creation_date": 1471896482, "post_id": 39086277, "comment_id": 65523505, "body": "Thanks for the answer! I guess that this is the function I have been looking for. Unfortunately, when running the code, I get the following error now: thread &#39;&lt;main&gt;&#39; panicked at &#39;called <code>Result::unwrap()</code> on an <code>Err</code> value: MissingNulError(Some([99, 58, 92, 116, 101, 115, 116, 92, 116, 101, 115, 116, 46, 116, 120, 116]))&#39;, ../src/libcore\\result.rs:785 This does not seem to be related to the use of the panic! macro but to the lines before."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "edited": false, "score": 0, "creation_date": 1471897493, "post_id": 39086277, "comment_id": 65524005, "body": "@Norbert that seems like it belongs in a separate question. We prefer different questions because that makes it possible for other people to find the question and answer for themselves. Would <i>you</i> look at a question with the title &quot;How can I match against a std::io::Error with a Windows error code&quot; to understand what a <code>MissingNulError</code> is? Make sure you produce another <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> when asking the new question, including <i>just</i> the code required to produce the error."}, {"owner": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "edited": false, "score": 1, "creation_date": 1471898109, "post_id": 39086277, "comment_id": 65524326, "body": "Sorry, my fault. I assumed that the error had to do with the solution that you suggested in your post but after having a 2nd look, this is obviously not the case. I guess I&#39;ll try to figure it out myself first before asking another question. Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1471890228, "last_edit_date": 1495542783, "creation_date": 1471890228, "answer_id": 39086277, "question_id": 39078339, "link": "https://stackoverflow.com/questions/39078339/how-can-i-match-against-a-stdioerror-with-a-windows-error-code/39086277#39086277", "title": "How can I match against a std::io::Error with a Windows error code?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/io/struct.Error.html#method.raw_os_error\" rel=\"nofollow noreferrer\"><code>io::Error::raw_os_error</code></a> to get the original error code and then match against that:</p>\n\n<pre><code>match Error::last_os_error().raw_os_error() {\n    Some(163) =&gt; {} // Do nothing. This error is to be expected\n    Some(e) =&gt; panic!(\"Unknown OS error {}\", e),\n    None =&gt; panic!(\"Not an OS error!\"),\n}\n</code></pre>\n\n<hr>\n\n<p>It's a different question of whether this is a good idea or not. You can <a href=\"https://stackoverflow.com/q/28491759/155423\">also match against known error types</a>. I'd recommend using that where possible. You may also want to create (or find) an enum that maps the various error codes to human-readable values, as it's a lot easier to tell that you meant <code>NotEnoughMemory</code> instead of <code>SecurityDescriptorInvalid</code> than it is to tell the difference of <code>123</code> and <code>132</code>.</p>\n"}], "owner": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 943, "favorite_count": 0, "accepted_answer_id": 39086277, "answer_count": 1, "score": 2, "last_activity_date": 1471890228, "creation_date": 1471865194, "last_edit_date": 1471889746, "question_id": 39078339, "link": "https://stackoverflow.com/questions/39078339/how-can-i-match-against-a-stdioerror-with-a-windows-error-code", "title": "How can I match against a std::io::Error with a Windows error code?", "body": "<p>In my tiny little Rust program, I'm calling a Windows API and want to make sure that everything went OK. In order to do so, I'm using the functionality provided by <code>std::io::Error::last_os_error()</code>. I also want to deliberately ignore some of the errors that may occur. </p>\n\n<p>I could not find any information on how to do that, other than just printing out the <code>Error</code> returned by that function. What I actually need is a kind of a match statement in which I can handle the various known errors.  </p>\n\n<p>I understand that the function returns an <code>std::io::Error</code> struct but I could not find any information on error IDs or similar concepts. </p>\n\n<p>Currently, my code reads like</p>\n\n<pre><code>use std::io::Error;\n\nfn main() {\n    // do some stuff that may lead to an error\n\n    match Error::last_os_error() {\n        163 =&gt; // Do nothing. This error is to be expected\n        // _ =&gt;  Err(\"Something went wrong \"),\n    }\n}\n</code></pre>\n\n<p>The actual problem is that <code>last_os_error()</code> returns an error struct but I want to match on the ID of the error that is listed in WinError.h (this program only runs under Windows).</p>\n\n<p>Can anybody help me on how to distinguish the various errors behind the error structs in such a match statement?</p>\n"}, {"tags": ["rust", "move-semantics", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1471864502, "post_id": 39077530, "comment_id": 65503638, "body": "thanks for that but as I said I used block scope before but am not happy with this approach - is there really no other way to do it?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1471866578, "post_id": 39077530, "comment_id": 65505039, "body": "I&#39;ve added a way with functions. What do you don&#39;t like with blocks?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471868865, "post_id": 39077530, "comment_id": 65506590, "body": "I think the answer is fine: blocks are mimicking the runtime of the code, after all. Although pedantically, using functions is just another way of introducing a new scope / block ^_^."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1471872798, "post_id": 39077530, "comment_id": 65509484, "body": "Yes, but as he does not say what he does not like with blocks, I&#39;m trying to hide them :-&#176;"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1492702255, "last_edit_date": 1492702255, "creation_date": 1471862728, "answer_id": 39077530, "question_id": 39077421, "link": "https://stackoverflow.com/questions/39077421/how-to-end-the-borrowing-of-an-object-without-introducing-a-new-scope/39077530#39077530", "title": "How to end the borrowing of an object without introducing a new scope?", "body": "<p>You can introduce a block to reduce the scope of <code>renderer</code>:</p>\n\n<pre><code>fn main() {\n    let point = Point { x: 5, y: 5 };\n    let mut canvas = Canvas {\n        width: 10,\n        height: 10,\n        array: vec!['o'; 10*10],\n    };\n\n    {\n        let mut renderer = CanvasRenderer::new(&amp;mut canvas);\n        renderer.render_point('A', point);\n    }\n\n    draw_canvas(canvas);\n}\n</code></pre>\n\n<p>Another way if you don't like blocks is to use functions. Rust will be able to figure out where the borrow ends from the lifetimes (here the function does not return anything, so the borrow ends after the function call):</p>\n\n<pre><code>fn render_things(canvas: &amp;mut Canvas) {\n    let mut renderer = CanvasRenderer::new(canvas);\n    renderer.render_point('A', point);\n}\n\nfn main() {\n    let point = Point { x: 5, y: 5 };\n    let mut canvas = Canvas {\n        width: 10,\n        height: 10,\n        array: vec!['o'; 10*10],\n    };\n\n    render_things(&amp;mut canvas);\n    draw_canvas(canvas);\n}\n</code></pre>\n"}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 39077530, "answer_count": 1, "score": 0, "last_activity_date": 1492702255, "creation_date": 1471862418, "last_edit_date": 1492702212, "question_id": 39077421, "link": "https://stackoverflow.com/questions/39077421/how-to-end-the-borrowing-of-an-object-without-introducing-a-new-scope", "title": "How to end the borrowing of an object without introducing a new scope?", "body": "<p>I want to access an object as read-only after it has been passed to another object which changes its state. I know there is a problem with accessing an object when its still under control by being borrowed.</p>\n\n<pre><code>extern crate renderay_rs;\n\nuse renderay_rs::*;\n\nfn draw_canvas(canvas: &amp;Canvas) {\n    let max_height = canvas.height;\n    let max_width = canvas.width;\n\n    for iterator_y in 0..max_height {\n        for iterator_x in 0..max_width {\n            print!(\"{}\", canvas.array[iterator_y * iterator_x]);\n        }\n        print!(\"\\n\");\n    }\n}\n\n\nfn main() {\n    let point = Point { x: 5, y: 5 };\n    let mut canvas = Canvas {\n        width: 10,\n        height: 10,\n        array: vec!['o'; 10*10],\n    };\n\n    let mut renderer = CanvasRenderer::new(&amp;mut canvas);\n    renderer.render_point('A', point);\n\n    draw_canvas(canvas);\n}\n</code></pre>\n\n<p>I feel I should end the borrowing after the <code>renderer.render_point(..., ...)</code> method. Is there a way to do so? The object has no need to be borrowed by it or the <code>CanvasRenderer</code> after its state has been changed.</p>\n\n<p>I've used block scope before, but I don't feel happy with this approach. I hope you can give me a hint for a better alternative!</p>\n"}, {"tags": ["performance", "memory-management", "collections", "rust", "out-of-memory"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1471863845, "post_id": 39075977, "comment_id": 65503208, "body": "Are you sure your second code has less memory overhead? I don&#39;t think that the <code>IntoIter</code> iterator will free memory during iteration. Actually it&#39;s not <i>that</i> easy to do this conversation with little additional memory..."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1471875045, "post_id": 39075977, "comment_id": 65511206, "body": "If do not have enough memory to store both the <code>HashMap</code> and the <code>Vec</code> at the same time, you may want to switch computer, or restructure your program to be able to work on smaller chunks of work (MapReduce for example). As it is, you have very little headroom: if the problem size rises by 50%, you might very well be OOM with <i>just</i> the <code>HashMap</code>, and then what are you going to do?"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1471863938, "post_id": 39077629, "comment_id": 65503271, "body": "Unless I completely misunderstood something, it&#39;s definitely not reasonable to fix it in <code>std</code>. A memory optimal implementation would be far slower than the way it is done now. I also doubt that OPs own implementation helps..."}, {"owner": {"reputation": 39, "user_id": 6215906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e89319ef02e4f59d8675b22e1d7c39ed?s=128&d=identicon&r=PG&f=1", "display_name": "Fuine", "link": "https://stackoverflow.com/users/6215906/fuine"}, "edited": false, "score": 0, "creation_date": 1471864291, "post_id": 39077629, "comment_id": 65503501, "body": "I was planning on wrapping that code in custom struct, but i didn&#39;t post it for the sake of simplicity of the question. I understand that <code>std</code>s implementation shouldn&#39;t be changed as that would have massive timing implications. My use case is rather rare and i was wondering if there was any better way than consecutive <code>reserve_exact</code> calls."}, {"owner": {"reputation": 39, "user_id": 6215906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e89319ef02e4f59d8675b22e1d7c39ed?s=128&d=identicon&r=PG&f=1", "display_name": "Fuine", "link": "https://stackoverflow.com/users/6215906/fuine"}, "edited": false, "score": 0, "creation_date": 1471871953, "post_id": 39077629, "comment_id": 65508893, "body": "The idea is that you reserve a relatively small chunk of items such that push would not have to reallocate. I will edit the question to avoid false information (I thought that into_iter releases memory as it moves through the iterator)."}], "tags": [], "owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "is_accepted": false, "score": 1, "last_activity_date": 1471872024, "last_edit_date": 1471872024, "creation_date": 1471863023, "answer_id": 39077629, "question_id": 39075977, "link": "https://stackoverflow.com/questions/39075977/memory-efficient-conversion-between-a-hashmap-and-a-vec/39077629#39077629", "title": "Memory efficient conversion between a HashMap and a Vec", "body": "<p>It seems that you're not satisfied with <code>Vec</code>'s implementation of <code>FromIterator</code> trait. I don't know if it is reasonable to change it in std. However, you can introduce a wrapper for <code>Vec</code> and implement <code>FromIterator</code> as you wish:</p>\n\n<pre><code>#[derive(Debug)]\nstruct OptimizedVec&lt;T&gt;(Vec&lt;T&gt;);\n\nimpl&lt;T&gt; std::iter::FromIterator&lt;T&gt; for OptimizedVec&lt;T&gt; {\n    #[inline]\n    fn from_iter&lt;I: IntoIterator&lt;Item = T&gt;&gt;(iter: I) -&gt; OptimizedVec&lt;T&gt; {\n        let mut vec = Vec::with_capacity(100);\n        for i in iter {\n            vec.push(i);\n            // reserve few megabytes\n            if vec.capacity() - vec.len() &lt; 10 {\n                vec.reserve_exact(1000000);\n            }\n        }\n        OptimizedVec(vec)\n    }\n}\n\n//...\nlet vec: OptimizedVec&lt;_&gt; = hm.into_iter().collect();\n</code></pre>\n\n<p>The <code>Vec</code> value will be accessible as <code>vec.0</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1471874903, "post_id": 39081335, "comment_id": 65511105, "body": "I think I remember that <code>HashMap</code> uses 3 vectors, as coded: (hashes, keys, values). As a result, there is no trivial conversion from <code>HashMap&lt;usize, usize&gt;</code> to <code>Vec&lt;(usize, usize)&gt;</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1471875911, "last_edit_date": 1471875911, "creation_date": 1471873808, "answer_id": 39081335, "question_id": 39075977, "link": "https://stackoverflow.com/questions/39075977/memory-efficient-conversion-between-a-hashmap-and-a-vec/39081335#39081335", "title": "Memory efficient conversion between a HashMap and a Vec", "body": "<p>Allocating the exact amount needed up front <em>is</em> the memory- and time-efficient solution. </p>\n\n<p>Say you want to create a vector with 100 items. If you were to allocate space for 50 items, when you go to add item 51, two possibilities exist:</p>\n\n<ol>\n<li>The allocation can be extended in place and you continue on your merry way.</li>\n<li>The allocation can not be extended in place, so a new, larger allocation is made. All the data needs to be copied from the previous allocation; likely an O(n) operation. During this copy, both allocations are live, taking up 50 + 100 slots, <em>more</em> space than if the original allocation was properly sized.</li>\n</ol>\n\n<p>It's not possible to know which case will happen, so you have to assume the worst.</p>\n\n<p>This is one of the reasons that <code>Iterator</code> has the <code>size_hint</code> method: knowing how many items to allocate for is more efficient.</p>\n\n<p>On the flip side, the <code>HashMap</code> likely stores the data in one big allocation as it's more efficient. This means that it's not possible (or maybe not easy / effective) to move one item out and then decrease the allocation. Even if you could do this, at the beginning of the copy you'd have both the entire <code>HashMap</code> and <code>Vec</code> allocated.</p>\n\n<p>There are two possibilities I can think of that could improve the situation:</p>\n\n<ol>\n<li>If <code>HashMap</code> stores the data internally in a <code>Vec</code>, then potentially a method could be added to <code>HashMap</code> that returns that <code>Vec</code> after some last-minute sanitization.</li>\n<li>Avoid storing the <code>HashMap</code> and/or <code>Vec</code> at all. For example, if you need to iterate over the data, you don't need to <code>collect</code> to a <code>Vec</code> first; just iterate over it.</li>\n</ol>\n"}], "owner": {"reputation": 39, "user_id": 6215906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e89319ef02e4f59d8675b22e1d7c39ed?s=128&d=identicon&r=PG&f=1", "display_name": "Fuine", "link": "https://stackoverflow.com/users/6215906/fuine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1471875911, "creation_date": 1471858445, "last_edit_date": 1471872193, "question_id": 39075977, "link": "https://stackoverflow.com/questions/39075977/memory-efficient-conversion-between-a-hashmap-and-a-vec", "title": "Memory efficient conversion between a HashMap and a Vec", "body": "<p>I'm trying to convert a big <code>HashMap&lt;K, V&gt;</code> to <code>Vec&lt;(K, V)&gt;</code>. The usual way of doing it looks like this:</p>\n\n<pre><code>// initialize HashMap\nlet cap = 50000000;\nlet mut hm: HashMap&lt;usize, usize&gt; = HashMap::new();\nfor i in 0..cap {\n    hm.insert(i, i);\n}\n// convert HashMap to Vec\nlet vec = hm.into_iter().collect::&lt;Vec&lt;(usize, usize)&gt;&gt;();\n</code></pre>\n\n<p>This code does not work well if <code>HashMap</code> is big enough - in the beginning of the call to <code>collect()</code>, the original <code>HashMap</code> will still be in memory and <code>Vec</code> will be allocated with the capacity of lower size hint taken from the <code>Iterator</code>. This causes an out of memory panic for really big <code>HashMap</code>s, even though I should be able to convert between these two types with very little additional memory overhead. So far I have came up with the following solution:</p>\n\n<pre><code>// create small vector\nlet mut vec: Vec&lt;(usize, usize)&gt; = Vec::with_capacity(100);\nfor i in hm.into_iter() {\n    vec.push(i);\n    // reserve few megabytes\n    if vec.capacity() - vec.len() &lt; 10 {\n        vec.reserve_exact(1000000);\n    }\n}\n</code></pre>\n\n<p>Is there any better (more efficient or more idiomatic) approach to this problem? I am willing to use <code>unsafe</code> code if it were to improve performance.</p>\n\n<p><strong>Edit</strong>\nAs pointed out <code>into_iter</code> does not deallocate during iteration, so the proposed solution does not work as intended. Is there any other way of converting these collections apart from dumping <code>HashMap</code> to the file and then reading that file into <code>Vec</code>?</p>\n"}, {"tags": ["generics", "types", "rust"], "answers": [{"tags": [], "owner": {"reputation": 366, "user_id": 3412986, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7SMm.png?s=128&g=1", "display_name": "SpaceManiac", "link": "https://stackoverflow.com/users/3412986/spacemaniac"}, "is_accepted": true, "score": 2, "last_activity_date": 1471856545, "creation_date": 1471856545, "answer_id": 39075296, "question_id": 39075126, "link": "https://stackoverflow.com/questions/39075126/how-to-reuse-generic-function-type-boundaries/39075296#39075296", "title": "How to reuse generic function type boundaries?", "body": "<p>The easiest way is to define a new trait which both requires all the bounds you are dealing with:</p>\n\n<pre><code>pub trait Floatlike: Default + PartialOrd + Copy +\n    Mul&lt;Output=Self&gt; + Sub&lt;Output=Self&gt; + Add&lt;Output=Self&gt; {}\n</code></pre>\n\n<p>and is implemented by all types that satisfy these bounds:</p>\n\n<pre><code>impl&lt;T&gt; Floatlike for T where T: Default + PartialOrd + Copy + \n    Mul&lt;Output=T&gt; + Sub&lt;Output=T&gt; + Add&lt;Output=T&gt; {}\n</code></pre>\n\n<p>and then bound on that trait:</p>\n\n<pre><code>pub fn area_tri_signed_v2_alt_2x&lt;T: Floatlike&gt;(...)\npub fn span_tri_v2_sign&lt;T: Floatlike&gt;(...)\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "closed_date": 1471868284, "accepted_answer_id": 39075296, "answer_count": 1, "score": 0, "last_activity_date": 1471868223, "creation_date": 1471856100, "last_edit_date": 1471868223, "question_id": 39075126, "link": "https://stackoverflow.com/questions/39075126/how-to-reuse-generic-function-type-boundaries", "closed_reason": "Duplicate", "title": "How to reuse generic function type boundaries?", "body": "<pre><code>pub type ESign = i8;\nconst CONCAVE: i8 = -1;\nconst TANGENTIAL: i8 = 0;\nconst CONVEX: i8 = 1;\n\nfn signum_enum(a: f64) -&gt; ESign {\n    if a &gt; 0.0 { CONVEX } else if a &lt; 0.0 { CONCAVE } else { TANGENTIAL }\n}\n\npub fn area_tri_signed_v2_alt_2x(v1: &amp;[f64; 2], v2: &amp;[f64; 2], v3: &amp;[f64; 2]) -&gt; f64 {\n    ((v1[0] * (v2[1] - v3[1])) + (v2[0] * (v3[1] - v1[1])) + (v3[0] * (v1[1] - v2[1])))\n}\n\npub fn span_tri_v2_sign(v1: &amp;[f64; 2], v2: &amp;[f64; 2], v3: &amp;[f64; 2]) -&gt; ESign {\n    return signum_enum(area_tri_signed_v2_alt_2x(v3, v2, v1));\n}\n</code></pre>\n\n<p>I managed to make these into generic functions, however I ended up having to duplicate type boundaries.</p>\n\n<pre><code>use std::ops::{Mul, Sub, Add};\n\nfn signum_enum&lt;T: Default + PartialOrd&gt;(a: T) -&gt; ESign {\n    let zero = T::default();\n    if a &gt; zero { CONVEX } else if a &lt; zero { CONCAVE } else { TANGENTIAL }\n}\n\npub fn area_tri_signed_v2_alt_2x&lt;T: Default + PartialOrd + Copy + Mul&lt;Output=T&gt; + Sub&lt;Output=T&gt; + Add&lt;Output=T&gt;&gt;(\n    v1: &amp;[T; 2],\n    v2: &amp;[T; 2],\n    v3: &amp;[T; 2]) -&gt; T\n{\n    ((v1[0] * (v2[1] - v3[1])) + (v2[0] * (v3[1] - v1[1])) + (v3[0] * (v1[1] - v2[1])))\n}\n\npub fn span_tri_v2_sign&lt;T: Default + PartialOrd + Copy + Mul&lt;Output=T&gt; + Sub&lt;Output=T&gt; + Add&lt;Output=T&gt;&gt;(\n    v1: &amp;[T; 2],\n    v2: &amp;[T; 2],\n    v3: &amp;[T; 2]) -&gt; ESign\n{\n    return signum_enum(area_tri_signed_v2_alt_2x(v3, v2, v1));\n}\n</code></pre>\n\n<p>Is there a way to define these capabilities in one place and reuse them in multiple generic functions?</p>\n"}, {"tags": ["generics", "types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471869513, "post_id": 39075683, "comment_id": 65507067, "body": "I&#39;d actually think that a custom trait could be better, depending on the context. It all depends on how the value is used and what kind of methods are needed. A custom trait is simply a manifestation of <a href=\"https://en.wikipedia.org/wiki/Interface_segregation_principle\" rel=\"nofollow noreferrer\">the interface segregation principle</a>."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1471916117, "post_id": 39075683, "comment_id": 65529824, "body": "Performing <code>fn sqr&lt;T: MyTrait&gt;(x: T) -&gt; T { x * x }</code> errors out gives <code>error: binary operation `*` cannot be applied to type `T`</code>"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1471933043, "post_id": 39075683, "comment_id": 65534354, "body": "You also need to specify what other traits T needs to implement, eg <code>T:MyTrait+Mul&lt;T&gt;</code> to allow multiplication."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 2, "last_activity_date": 1471858720, "last_edit_date": 1471858720, "creation_date": 1471857620, "answer_id": 39075683, "question_id": 39074726, "link": "https://stackoverflow.com/questions/39074726/generic-functions-in-rust-with-limited-known-types/39075683#39075683", "title": "Generic functions in Rust with limited, known types?", "body": "<p>The only tool that comes to mind for this is a <code>trait</code>, so your function would be:</p>\n\n<pre><code>pub fn f&lt;T: MyTrait&gt;(x: T) {...}\n</code></pre>\n\n<p>You could then implement <code>MyTrait</code> for <code>f32</code> and <code>f64</code>.  This is close, but there's a hole: callers can implement the trait on their own types.  You can't get around this by making <code>MyTrait</code> private, since Rust then complains that you're using a private type (<code>MyTrait</code>) in a public interface.</p>\n\n<p>So close, but I don't think it's exactly possible!</p>\n\n<p>Although I agree with the other answer about using an existing relevant trait, you would do it a bit like:</p>\n\n<pre><code>mod foo {\n    pub trait MyTrait {}\n    impl MyTrait for f32 {}\n    impl MyTrait for f64 {}\n\n    pub fn f&lt;T: MyTrait&gt;(x: T) {}\n}\n\npub fn main() {\n    foo::f(3f32);\n    foo::f(3f64);\n    // foo::f(3u64);  // doesn't work as u64 doesn't implement MyTrait\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1471869360, "post_id": 39075909, "comment_id": 65506953, "body": "<i>for both <code>f32</code> and <code>f64</code> only</i> \u2014 this is only true at a specific point in time and with a specific set of crates. It&#39;s entirely possible for <i>anyone</i> to implement a type that implements the <code>Float</code> trait, and thus pass that into the function."}], "tags": [], "owner": {"reputation": 1932, "user_id": 1784267, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/172e98db79964f9e6e4969e9f4afc452?s=128&d=identicon&r=PG", "display_name": "phaazon", "link": "https://stackoverflow.com/users/1784267/phaazon"}, "is_accepted": false, "score": 4, "last_activity_date": 1471869390, "last_edit_date": 1471869390, "creation_date": 1471858234, "answer_id": 39075909, "question_id": 39074726, "link": "https://stackoverflow.com/questions/39074726/generic-functions-in-rust-with-limited-known-types/39075909#39075909", "title": "Generic functions in Rust with limited, known types?", "body": "<p>Just use <a href=\"http://rust-num.github.io/num/num/trait.Float.html\" rel=\"nofollow\">the <code>Float</code> trait from the num crate</a>. You\u2019ll have anything you need for both <code>f32</code> and <code>f64</code> <strong>only</strong>. Do not write your own trait if you don\u2019t really need to.</p>\n\n<p>Just add the crate <code>num-traits</code> into your <code>[dependencies]</code> section of your <strong>Cargo.toml</strong> file to be able to use that trait:</p>\n\n<pre><code>[dependencies]\n# ...\nnum-traits = \"0.1\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1417, "user_id": 2977291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66afbccc6043392125ac0f0de57ccfa7?s=128&d=identicon&r=PG&f=1", "display_name": "paholg", "link": "https://stackoverflow.com/users/2977291/paholg"}, "is_accepted": false, "score": 0, "last_activity_date": 1471894330, "creation_date": 1471894330, "answer_id": 39087365, "question_id": 39074726, "link": "https://stackoverflow.com/questions/39074726/generic-functions-in-rust-with-limited-known-types/39087365#39087365", "title": "Generic functions in Rust with limited, known types?", "body": "<p>It might not be ideal, but I accomplish this by using a trait and a macro.</p>\n\n<p>For example, say we want this function to take either <code>f32</code> or <code>f64</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn sqr(a: f32) -&gt; f32 {\n    a * a\n}\n</code></pre>\n\n<p>We can first put it in a trait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Sqr {\n    fn sqr(self) -&gt; Self;\n}\n</code></pre>\n\n<p>Then we make a macro for implementing it. The macro just takes a type, and implements the trait for that type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! impl_sqr {\n    ($t:ty) =&gt; (\n        impl Sqr for $t {\n            fn sqr(self) -&gt; Self {\n                self * self\n            }\n        }\n    );\n}\n</code></pre>\n\n<p>Then we call the macro for <code>f32</code> and <code>f64</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl_sqr!(f32);\nimpl_sqr!(f64);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=15b32ef30b08f3fc985fcd2d363191d2&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Full example here.</a></p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 361, "favorite_count": 0, "answer_count": 3, "score": 3, "last_activity_date": 1471894330, "creation_date": 1471854800, "last_edit_date": 1471869208, "question_id": 39074726, "link": "https://stackoverflow.com/questions/39074726/generic-functions-in-rust-with-limited-known-types", "title": "Generic functions in Rust with limited, known types?", "body": "<p>I'm writing some code in Rust which can work equally as well with <code>f64</code> and <code>f32</code>.</p>\n\n<p>Attempting to convert this to use generic functions is quite involved; I need to declare the capabilities of the type on every use.</p>\n\n<p>In practice, I only want <code>f32</code> and <code>f64</code> to be used. Is there a way to write generic functions that only apply to a set of known types?</p>\n\n<p>I realize this goes against generic functions a little.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 6742076, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e5a145b4e69a949d215fb1770d9613f?s=128&d=identicon&r=PG&f=1", "display_name": "E100Pavel", "link": "https://stackoverflow.com/users/6742076/e100pavel"}, "edited": false, "score": 0, "creation_date": 1471856081, "post_id": 39073507, "comment_id": 65498082, "body": "Thanks, it helped a lot! However, now I ran against a problem of taking a reference to self, when inserting a new node. Again, cloning seems to work, <code>Rc::downgrade(&amp;Rc::new(self.clone())</code>, but if I understand correctly, it only copies the value. Can you please give me an advice on this?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 13, "user_id": 6742076, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e5a145b4e69a949d215fb1770d9613f?s=128&d=identicon&r=PG&f=1", "display_name": "E100Pavel", "link": "https://stackoverflow.com/users/6742076/e100pavel"}, "edited": false, "score": 0, "creation_date": 1471856730, "post_id": 39073507, "comment_id": 65498555, "body": "That&#39;s a good point - you want to clone an existing <code>Rc</code> (which increments the reference count and returns just a copy of the pointer, unlike with <code>Box</code>) rather than clone <code>self</code>, so I think that means your method needs to take the <code>Rc</code>: <code>pub fn succ(n: &amp;Rc&lt;Node&gt;) -&gt; Option&lt;Rc&lt;Node&gt;&gt;</code>.  I think unfortunately that means you need to call it as <code>Node::succ(&amp;self)</code> instead of <code>self.succ()</code>, but it should work."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 4, "last_activity_date": 1471850638, "creation_date": 1471850638, "answer_id": 39073507, "question_id": 39072257, "link": "https://stackoverflow.com/questions/39072257/search-for-successor-of-bst-node-clone-to-satisfy-borrow-checker-disaster/39073507#39073507", "title": "Search for Successor of BST node, &quot;clone to satisfy borrow checker&quot; disaster", "body": "<p>Welcome to Rust and Stack Overflow!</p>\n\n<p>The main issue here is <code>Node</code> definition:</p>\n\n<pre><code>pub struct Node&lt;T&gt; {  \n    key: T,  \n    parent: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,  \n    left: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,  \n    right: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,  \n}\n</code></pre>\n\n<p>In Rust, <code>Box&lt;T&gt;</code> <em>owns</em> the value rather than being a pointer which can alias.  You wouldn't be a able to create any non-trivial trees.</p>\n\n<p>Instead of <code>Box</code>, you could try the reference counted <code>Rc&lt;T&gt;</code>.  You can use <code>Weak</code> pointers for the parent links to avoid keeping them alive:</p>\n\n<pre><code>use std::rc::{Rc,Weak};\npub struct Node&lt;T&gt; {  \n    key: T,  \n    parent: Option&lt;Weak&lt;Node&lt;T&gt;&gt;&gt;,  \n    left: Option&lt;Rc&lt;Node&lt;T&gt;&gt;&gt;,  \n    right: Option&lt;Rc&lt;Node&lt;T&gt;&gt;&gt;,  \n}\n</code></pre>\n\n<p>Once this is sorted, you're not using references.  Each time you do something like:</p>\n\n<pre><code>let mut parent = origin.parent; //.clone();\n</code></pre>\n\n<p>where in your version <code>origin.parent</code> is of type <code>Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;</code>, you're trying to <em>move</em> that <code>Option</code> field out of <code>origin</code> - hence why you had to add the <code>clone()</code> (which clones the node inside the <code>Box</code>, not just the pointer!).  However, you don't really want to move out; you just want a reference to it, like:</p>\n\n<pre><code>let parent = &amp;origin.parent;\n</code></pre>\n\n<p>Or do the <code>None</code> check at the same time:</p>\n\n<pre><code>match origin.parent {\n    Some(ref parent_ptr) =&gt; { ... },\n    None =&gt; { ... }\n}\n</code></pre>\n\n<p>I hope this helps!</p>\n"}], "owner": {"reputation": 13, "user_id": 6742076, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e5a145b4e69a949d215fb1770d9613f?s=128&d=identicon&r=PG&f=1", "display_name": "E100Pavel", "link": "https://stackoverflow.com/users/6742076/e100pavel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 39073507, "answer_count": 1, "score": 1, "last_activity_date": 1472229611, "creation_date": 1471845724, "last_edit_date": 1495535352, "question_id": 39072257, "link": "https://stackoverflow.com/questions/39072257/search-for-successor-of-bst-node-clone-to-satisfy-borrow-checker-disaster", "title": "Search for Successor of BST node, &quot;clone to satisfy borrow checker&quot; disaster", "body": "<p>I am trying to implement a BST in Rust. My struct looks like this:  </p>\n\n<pre><code>pub struct Node&lt;T&gt; {  \n    key: T,  \n    parent: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,  \n    left: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,  \n    right: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,  \n}  \n</code></pre>\n\n<p>I am working on a method for finding the successor of a current node. After a prolonged fight with the borrow checker, I made it work, but it now looks like this:  </p>\n\n<pre><code>//If right node exists - successor is a min node in it.\n//Else - go up a parent node. If parent is None, no successor.\n//If origin was parent's left node - parent is a successor.\n//Else - go up another level.\npub fn succ(&amp;self) -&gt; Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt; {\n\n    match self.right {\n        Some(ref node) =&gt; Some(node.min()),\n        None =&gt; {\n            let mut origin = Box::new(self.clone()); //To match types\n            let mut parent = origin.parent.clone(); //`Node&lt;T&gt;` not a copy type\n\n            loop {\n                let parent_node = match parent.clone() {\n                    Some(node) =&gt; node,\n                    None =&gt; break,\n                };\n                let right_of_parent = match parent_node.clone().right {\n                    Some(node) =&gt; node,\n                    None =&gt; break,\n                };\n                if *origin != *right_of_parent {\n                    break;\n                }\n\n                origin = parent_node;\n                parent = origin.parent.clone();\n            }\n            parent\n        }\n    }\n}  \n</code></pre>\n\n<p>If I remove all the <code>.clone()</code>s, the compiler starts crying with \"partial moved value\" and \"cannot assign because borrowed\" errors. Is there a way to make this code more idiomatic and less of a cloning hell?</p>\n\n<p><strong>UPD:</strong><br>\nWanted to post the solution I ended up with.<br>\nFirst of all, above code doesn't work, as the parent field contained not a reference, but a copy of a parent node. So in the end the question turned into \"how to implement a reference to a parent node\".<br>\nI considered the answer below, some <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\">books</a> and <a href=\"https://stackoverflow.com/questions/36167160/recursive-data-structures-in-rust/36168919#36168919\">relevant answers</a> and in the end i came to conclusion that it don't worth it for a toy project that I didn't even plan to publish online. I've found not the most efficient, but definitely simpler solution - not to use parent reference at all.<br>\nI removed parent field from the structure above and created another structure:  </p>\n\n<pre><code>pub struct Tree&lt;T&gt; {\n    root: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>And now I search for parent from the root of the tree. My <code>succ</code> function now looks like this:</p>\n\n<pre><code>fn succ&lt;'a&gt;(&amp;'a self, node: &amp;'a Node&lt;T&gt;) -&gt; Option&lt;&amp;Node&lt;T&gt;&gt; {\n    match node.right {\n        Some(ref rnode) =&gt; rnode.min(),\n        None =&gt; {\n            let mut succ = None;\n            let mut root = self.root.as_ref();\n            loop {\n                root = match root {\n                    Some(ref rootnode) =&gt; {\n                        match node.key.cmp(&amp;rootnode.key) {\n                            Ordering::Less =&gt; {\n                                succ = Some(&amp;***rootnode);\n                                rootnode.left.as_ref()\n                            }\n                            Ordering::Greater =&gt; rootnode.right.as_ref(),\n                            Ordering::Equal =&gt; break,\n                        }\n                    }\n                    None =&gt; break,\n                }\n            }\n            succ\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["string", "parsing", "enums", "macros", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471829573, "post_id": 39070244, "comment_id": 65489051, "body": "What if instead of <code>&quot;Bar&quot;</code> you need <code>&quot;Foo::Bar&quot;</code> or <code>&quot;my_module::Foo::Bar&quot;</code> or <code>&quot;bar&quot;</code>? That helps explain why there&#39;s no pre-made way to do this. There&#39;s nothing in the standard library, beyond that you would just be asking for a library / tool recommendation."}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 0, "creation_date": 1471883666, "post_id": 39070244, "comment_id": 65517006, "body": "I don&#39;t think your edit on my answer is necessary: you asked for automatic convenience, which you get with the crates I mentioned and you don&#39;t have to write you own macro, because the crates already provide the macro."}], "answers": [{"comments": [{"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 0, "creation_date": 1471902458, "post_id": 39070533, "comment_id": 65526256, "body": "If it is not what you want, please edit your question, because, as I said <a href=\"http://stackoverflow.com/questions/39070244/can-i-convert-a-string-to-enum-without-macros-in-rust/39070533#comment-65517006\">here</a>, I don&#39;t see why it does not answer your question."}, {"owner": {"reputation": 12451, "user_id": 88054, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/j87ad.jpg?s=128&g=1", "display_name": "Flavius", "link": "https://stackoverflow.com/users/88054/flavius"}, "edited": false, "score": 1, "creation_date": 1558810828, "post_id": 39070533, "comment_id": 99226184, "body": "Great answer, but not to this question. I was also looking for an answer."}, {"owner": {"reputation": 2089, "user_id": 1291118, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5347088e8b4e042e3ed3717051455f94?s=128&d=identicon&r=PG", "display_name": "vasilakisfil", "link": "https://stackoverflow.com/users/1291118/vasilakisfil"}, "edited": false, "score": 0, "creation_date": 1570607788, "post_id": 39070533, "comment_id": 102961760, "body": "I thought the OP explicitly asked &quot;without macros&quot;."}, {"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 0, "creation_date": 1586255810, "post_id": 39070533, "comment_id": 108055393, "body": "I think the answer is that it is not possible without a macro, although I would have this double-checked by a more experienced Rustacean before I try editing the answer to make it clearer."}], "tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": false, "score": 24, "last_activity_date": 1586624758, "last_edit_date": 1586624758, "creation_date": 1471831845, "answer_id": 39070533, "question_id": 39070244, "link": "https://stackoverflow.com/questions/39070244/can-i-convert-a-string-to-enum-without-macros-in-rust/39070533#39070533", "title": "Can I convert a string to enum without macros in Rust?", "body": "<p><strong>Edit:</strong> The answer is no. Rust does not provide reflection and usually use <code>#[derive]</code> for that kind of tasks.</p>\n\n<p>You can use the crates <a href=\"https://crates.io/crates/enum_derive\" rel=\"noreferrer\"><code>enum_derive</code></a> and <a href=\"https://crates.io/crates/custom_derive\" rel=\"noreferrer\"><code>custom_derive</code></a> to do what you want.</p>\n\n<p>Here is an exemple:</p>\n\n<pre><code>#[macro_use]\nextern crate custom_derive;\n#[macro_use]\nextern crate enum_derive;\n\ncustom_derive! {\n    #[derive(Debug, EnumFromStr)]\n    enum Foo {\n        Bar,\n        Baz,\n        Bat,\n        Quux\n    }\n}\n\nfn main() {\n    let variable: Foo = \"Bar\".parse().unwrap();\n    println!(\"{:?}\", variable);\n}\n</code></pre>\n\n<p>the <code>derive</code> of the custom <code>EnumFromStr</code> allows you to use the <code>parse</code> method to get a <code>Foo</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 696, "user_id": 6433062, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8uIqX.jpg?s=128&g=1", "display_name": "richardpringle", "link": "https://stackoverflow.com/users/6433062/richardpringle"}, "edited": false, "score": 0, "creation_date": 1614277398, "post_id": 61948093, "comment_id": 117343737, "body": "Is there any fancy way to get the compiler to check that the output list is exhaustive without any runtime cost?"}], "tags": [], "owner": {"reputation": 5586, "user_id": 1965774, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/e7KDB.gif?s=128&g=1", "display_name": "Pie &#39;Oh&#39; Pah", "link": "https://stackoverflow.com/users/1965774/pie-oh-pah"}, "is_accepted": false, "score": 17, "last_activity_date": 1590125877, "last_edit_date": 1590125877, "creation_date": 1590123135, "answer_id": 61948093, "question_id": 39070244, "link": "https://stackoverflow.com/questions/39070244/can-i-convert-a-string-to-enum-without-macros-in-rust/61948093#61948093", "title": "Can I convert a string to enum without macros in Rust?", "body": "<p>You should implement <a href=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\" rel=\"noreferrer\">std::str::FromStr</a> trait.</p>\n\n<pre><code>use std::str::FromStr;\n\n#[derive(Debug, PartialEq)]\nenum Foo {\n    Bar,\n    Baz,\n    Bat,\n    Quux,\n}\n\nimpl FromStr for Foo {\n\n    type Err = ();\n\n    fn from_str(input: &amp;str) -&gt; Result&lt;Foo, Self::Err&gt; {\n        match input {\n            \"Bar\"  =&gt; Ok(Foo::Bar),\n            \"Baz\"  =&gt; Ok(Foo::Baz),\n            \"Bat\"  =&gt; Ok(Foo::Bat),\n            \"Quux\" =&gt; Ok(Foo::Quux),\n            _      =&gt; Err(()),\n        }\n    }\n}\n\n\n\nfn main() {\n    // Use it like this\n    let f = Foo::from_str(\"Baz\").unwrap();\n    assert_eq!(f, Foo::Baz);\n}\n</code></pre>\n\n<p>Code-generation (aka automatic convenience) and reflections usually bear a cost. In practice, it is unlikely that you will end up with more than a few enum variants.</p>\n\n<p>Run in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c78f940ff91314f95c147d1e55f4a4b7\" rel=\"noreferrer\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 16558, "user_id": 1804173, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/53f721a451a1c68caf8316cefcde3083?s=128&d=identicon&r=PG", "display_name": "bluenote10", "link": "https://stackoverflow.com/users/1804173/bluenote10"}, "is_accepted": false, "score": 10, "last_activity_date": 1593763815, "creation_date": 1593763815, "answer_id": 62711168, "question_id": 39070244, "link": "https://stackoverflow.com/questions/39070244/can-i-convert-a-string-to-enum-without-macros-in-rust/62711168#62711168", "title": "Can I convert a string to enum without macros in Rust?", "body": "<p>Same disclaimer as in other answers: &quot;without macros&quot; isn't possible.</p>\n<p>Extending on the highest voted answer. As noted in <a href=\"https://users.rust-lang.org/t/convert-a-string-to-enum/38845\" rel=\"noreferrer\">this thread</a> the combination of <code>custom_derive</code> + <code>enum_derive</code> is somewhat outdated. Modern Rust doesn't need a solution based on <code>custom_derive</code> anymore.</p>\n<p>A modern alternative is <a href=\"https://github.com/Peternator7/strum\" rel=\"noreferrer\"><code>strum</code></a>. Usage could look like this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use strum_macros::EnumString;\nuse std::str::FromStr;\n\n#[derive(EnumString)]\nenum Foo {\n    Bar,\n    Baz,\n    Bat,\n    Quux\n}\n\nfn example_usage(input: &amp;str) -&gt; Foo {\n    Foo::from_str(input).unwrap()\n}\n</code></pre>\n<p>Note: You need both <code>strum</code> and <code>strum_macros</code> in your <code>Cargo.toml</code>.</p>\n<p><code>strum</code> also gives some nice flexibility regarding the string representation. From the <a href=\"https://github.com/Peternator7/strum/wiki/Derive-EnumString\" rel=\"noreferrer\">docs</a>:</p>\n<blockquote>\n<p>Note that the implementation of <code>FromStr</code> by default only matches on the name of the variant. There is an option to match on different case conversions through the <code>#[strum(serialize_all = &quot;snake_case&quot;)]</code> type attribute.</p>\n</blockquote>\n"}], "owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7824, "favorite_count": 2, "answer_count": 3, "score": 21, "last_activity_date": 1593763815, "creation_date": 1471828699, "last_edit_date": 1471902632, "question_id": 39070244, "link": "https://stackoverflow.com/questions/39070244/can-i-convert-a-string-to-enum-without-macros-in-rust", "title": "Can I convert a string to enum without macros in Rust?", "body": "<p>For example, if I have code like:</p>\n\n<pre><code>enum Foo {\n    Bar,\n    Baz,\n    Bat,\n    Quux\n}\n\nimpl Foo {\n    from(input: &amp;str) -&gt; Foo {\n        Foo::input\n    }\n}\n</code></pre>\n\n<p>This will obviously fail because <code>input</code> is not a method of Foo. I can manually type:</p>\n\n<pre><code>from(input: &amp;str) -&gt; Foo {\n    match(input) {\n        \"Bar\" =&gt; Foo::Bar,\n        // and so on...\n    }\n}\n</code></pre>\n\n<p>but I'm not getting the automatic convenience.</p>\n\n<p>It looks like Java has a <a href=\"https://stackoverflow.com/questions/604424/lookup-enum-by-string-value\">string lookup function</a> on enums for this specific purpose.</p>\n\n<p>Is it possible to get this without writing my own macro or importing one from a crate?</p>\n"}, {"tags": ["rust", "function-pointers"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471829233, "post_id": 39070143, "comment_id": 65488998, "body": "<code>bar(&amp;mut (baz as fn(Vec&lt;u8&gt;)))</code>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1471829322, "post_id": 39070143, "comment_id": 65489017, "body": "See <a href=\"http://stackoverflow.com/questions/28151073/how-can-i-store-function-pointers-in-an-array\">here</a>, too. Also: why do you need a <code>*mut fn</code>? Are you really sure you need a mutable function pointer? Such that you can write where the assembly of the function lives?  And please consider using an <code>Option&lt;fn...&gt;</code> instead of casting <code>0</code> to a pointer. It won&#39;t decrease performance or memory usage."}, {"owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1471832837, "post_id": 39070143, "comment_id": 65489627, "body": "@LukasKalbertodt There definitely is a <a href=\"https://play.rust-lang.org/?gist=a89345544897b3cba84b669d8a7da2c3&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">difference</a>. Also, yes - that is the reason I want a <code>*mut fn</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471833130, "post_id": 39070143, "comment_id": 65489675, "body": "And to double check, you already know why static mutable variables are <code>unsafe</code> and thus why they are a bad idea?"}, {"owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471834154, "post_id": 39070143, "comment_id": 65489867, "body": "@Shepmaster Sure. I gain a constant mem address with static, and because of that not being inlined, the borrow checker can&#39;t reason about it. As a blanket statement, unsafe == bad idea is a bit of an over statement. If I planned on having concurrent mutable access, of course there&#39;d be a <code>Mutex</code>  around it :)"}, {"owner": {"reputation": 366, "user_id": 3412986, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z7SMm.png?s=128&g=1", "display_name": "SpaceManiac", "link": "https://stackoverflow.com/users/3412986/spacemaniac"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1471857057, "post_id": 39070143, "comment_id": 65498802, "body": "@LukasKalbertodt a <code>*mut fn()</code> is not a mutable function pointer - <code>fn()</code> is itself a function pointer, so <code>*mut fn()</code> is a raw mutable pointer to a function pointer. Simply use <code>fn()</code> when you need a function pointer, and if you are writing to it (assuming you have done the due diligence to be able to write to that region of memory, and that casting function pointers to data pointers is valid on your platform), just cast the <code>fn()</code> to a <code>*mut u8</code> or whatever you need to write to it."}], "owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 73, "favorite_count": 0, "closed_date": 1471830308, "answer_count": 0, "score": 0, "last_activity_date": 1471829840, "creation_date": 1471827513, "question_id": 39070143, "link": "https://stackoverflow.com/questions/39070143/passing-named-functions-as-function-pointers", "closed_reason": "Duplicate", "title": "Passing named functions as function pointers", "body": "<p>What is the proper way to pass around named functions as function pointers?</p>\n\n<pre><code>static mut foo: *mut fn(buf: Vec&lt;u8&gt;) = 0 as *mut fn(buf: Vec&lt;u8&gt;);\n\n\nfn main() {\n    bar(&amp;mut baz);\n}\n\nfn bar(f: &amp;mut fn(buf: Vec&lt;u8&gt;)) {\n    unsafe { foo = f };\n}\n\nfn baz(buf: Vec&lt;u8&gt;) {}\n</code></pre>\n\n<p>Produces:</p>\n\n<pre><code>error: mismatched types [--explain E0308]\n --&gt; &lt;anon&gt;:5:9\n  |&gt;\n5 |&gt;     bar(&amp;mut baz);\n  |&gt;         ^^^^^^^^ expected fn pointer, found fn item\nnote: expected type '&amp;mut fn(std::vec::Vec&lt;u8&gt;)'\nnote:    found type '&amp;mut fn(std::vec::Vec&lt;u8&gt;) {baz}'\n</code></pre>\n"}, {"tags": ["string", "rust"], "answers": [{"comments": [{"owner": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "edited": false, "score": 1, "creation_date": 1471813731, "post_id": 39068816, "comment_id": 65486001, "body": "thank you so much for helping me out, I was obviously completely lost and somehow assumed that the encoding of both types would be identical. In this context, it makes sense to use another String object (are they actually called objects in rust?) for this transformation,"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "edited": false, "score": 2, "creation_date": 1471813991, "post_id": 39068816, "comment_id": 65486062, "body": "@Norbert: I am not sure that rustaceans ponder about whether to call things objects or not; everyone just understands the term so it&#39;s good enough :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "edited": false, "score": 0, "creation_date": 1471814776, "post_id": 39068816, "comment_id": 65486282, "body": "@Norbert yeah, I think it depends on what you want to call an &quot;object&quot;. If you mean a chunk of data and associated methods, then yeah, it is an object. I think I&#39;d normally just say &quot;type&quot; instead of &quot;class&quot; and then just &quot;instance of a type&quot;. I haven&#39;t found myself needing to say &quot;object&quot; frequently. I think everyone would understand you just fine though."}, {"owner": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "edited": false, "score": 0, "creation_date": 1471849631, "post_id": 39068816, "comment_id": 65494391, "body": "Great to read that rustaceans are not that religious about the use of such words or the aspects of the language :-)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 12, "last_activity_date": 1536400546, "last_edit_date": 1536400546, "creation_date": 1471813215, "answer_id": 39068816, "question_id": 39068718, "link": "https://stackoverflow.com/questions/39068718/convert-a-vecu16-or-vecwchar-to-a-str/39068816#39068816", "title": "Convert a Vec&lt;u16&gt; or Vec&lt;WCHAR&gt; to a &amp;str", "body": "<blockquote>\n  <p>I then need to convert the string contained in the vector into a <code>&amp;str</code>. However, no matter, what I try, I can not manage to get this conversion working.</p>\n</blockquote>\n\n<p>There's no way of making this a \"free\" conversion.</p>\n\n<p>A <code>&amp;str</code> is a Unicode string encoded with UTF-8. This is a byte-oriented encoding. If you have UTF-16 (or the <strong>different</strong> but common UCS-2 encoding), there's no way to read one as the other. That's equivalent to trying to read a JPEG image as a PDF. Both chunks of data might be a string, but the encoding is important.</p>\n\n<p>The first question is \"do you really need to do that?\". Many times, you can take data from one function and shovel it back into another function, never looking at it. If you can get away with that, that might be be best answer.</p>\n\n<p>If you <em>do</em> need to transform it, then you have to deal with the errors that can occur. An arbitrary array of 16-bit integers <em>may not</em> be valid UTF-16 or UCS-2. These encodings have edge cases that can easily produce invalid strings. Null-termination is another aspect - Unicode actually allows for embedded NUL characters, so a null-terminated string can't hold all possible Unicode characters!</p>\n\n<p>Once you've ensured that the encoding is valid <sup>1</sup> and figured out how many entries in the input vector comprise the string, then you have to decode the input format and re-encode to the output format. This is likely to require some kind of new allocation, so you are most likely to end up with a <code>String</code>, which can then be used most anywhere a <code>&amp;str</code> can be used.</p>\n\n<p>There is a built-in method to convert UTF-16 data to a String: <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.from_utf16\" rel=\"nofollow noreferrer\"><code>String::from_utf16</code></a>. Note that it returns a <code>Result</code> to allow for these error cases. There's also <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.from_utf16_lossy\" rel=\"nofollow noreferrer\"><code>String::from_utf16_lossy</code></a>, which replaces invalid encoded parts with the Unicode replacement character.</p>\n\n<pre><code>let name = [0x68, 0x65, 0x6c, 0x6c, 0x6f]; \n\nlet a = String::from_utf16(&amp;name);\nlet b = String::from_utf16_lossy(&amp;name);\n\nprintln!(\"{:?}\", a);\nprintln!(\"{:?}\", b);\n</code></pre>\n\n<p>If you are starting from a pointer to a <code>u16</code> or <code>WCHAR</code>, you will need to convert to a slice first by using <a href=\"https://doc.rust-lang.org/std/slice/fn.from_raw_parts.html\" rel=\"nofollow noreferrer\"><code>slice::from_raw_parts</code></a>. If you have a null-terminated string, you need to find the <code>NUL</code> yourself and slice the input appropriately.</p>\n\n<hr>\n\n<p>1: This is actually a great way of using types; a <code>&amp;str</code> is <strong>guaranteed</strong> to be UTF-8 encoded, so no further check needs to be made. Similarly, the <code>WideCString</code> is likely to perform a check once upon construction and then can skip the check on later uses.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1525786695, "post_id": 50234726, "comment_id": 87487349, "body": "I don&#39;t know why you&#39;d want to go out of your way to not support non-ASCII values, but I&#39;d write this as <code>let path: String = v.iter().map(|&amp;v| (v &amp; 0xFF) as u8).take_while(|&amp;c| c != 0).map(|c| c as char).collect();</code>"}, {"owner": {"reputation": 1714, "user_id": 7404323, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jYEFn.png?s=128&g=1", "display_name": "sailfish009", "link": "https://stackoverflow.com/users/7404323/sailfish009"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1526514936, "post_id": 50234726, "comment_id": 87779051, "body": "thanks for the info, i am just novice for rust, scala, elixir."}], "tags": [], "owner": {"reputation": 1714, "user_id": 7404323, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jYEFn.png?s=128&g=1", "display_name": "sailfish009", "link": "https://stackoverflow.com/users/7404323/sailfish009"}, "is_accepted": false, "score": 0, "last_activity_date": 1525786461, "last_edit_date": 1525786461, "creation_date": 1525785839, "answer_id": 50234726, "question_id": 39068718, "link": "https://stackoverflow.com/questions/39068718/convert-a-vecu16-or-vecwchar-to-a-str/50234726#50234726", "title": "Convert a Vec&lt;u16&gt; or Vec&lt;WCHAR&gt; to a &amp;str", "body": "<p>This is my simple hack for this case. There must be a bug; fix for your own case:</p>\n\n<pre><code>let mut v = vec![0u16; MAX_PATH as usize];\n\n// imaginary win32 function\nwin32_function(v.as_mut_ptr());\n\nlet mut path = String::new();\nfor val in v.iter() {\n    let c: u8 = (*val &amp; 0xFF) as u8;\n    if c == 0 {\n        break;\n    } else {\n        path.push(c as char);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 635, "user_id": 2068852, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4f80a409bf937f161433c8ea63c4f527?s=128&d=identicon&r=PG", "display_name": "Norbert", "link": "https://stackoverflow.com/users/2068852/norbert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1740, "favorite_count": 1, "answer_count": 2, "score": 8, "last_activity_date": 1536400546, "creation_date": 1471812458, "last_edit_date": 1471812659, "question_id": 39068718, "link": "https://stackoverflow.com/questions/39068718/convert-a-vecu16-or-vecwchar-to-a-str", "title": "Convert a Vec&lt;u16&gt; or Vec&lt;WCHAR&gt; to a &amp;str", "body": "<p>I'm getting into Rust programming to realize a small program and I'm a little bit lost in string conversions.</p>\n\n<p>In my program, I have a vector as follows:</p>\n\n<pre><code>let mut name: Vec&lt;winnt::WCHAR&gt; = Vec::new(); \n</code></pre>\n\n<p><code>WCHAR</code> is the same as a <code>u16</code> on my Windows machine. </p>\n\n<p>I hand over the <code>Vec&lt;u16&gt;</code> to a C function (as a pointer) which fills it with data. I then need to convert the string contained in the vector into a  <code>&amp;str</code>. However, no matter, what I try, I can not manage to get this conversion working. </p>\n\n<p>The only thing I managed to get working is to convert it to a <code>WideString</code>: </p>\n\n<pre><code> widestr = unsafe { WideCString::from_ptr_str(name.as_ptr()) };\n</code></pre>\n\n<p>But this seems to be a step into the wrong direction.</p>\n\n<p>What is the best way to convert the <code>Vec&lt;u16&gt;</code> to an <code>&amp;str</code> under the assumption that the vector holds a valid and null-terminated string.</p>\n"}, {"tags": ["memory-management", "reference", "rust", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471807373, "post_id": 39067812, "comment_id": 65484167, "body": "There are currently <a href=\"http://stackoverflow.com/search?q=%5Brust%5D+is%3Aq+borrow+as+mutable+because+is+also+borrowed+as+immutable+\">72 questions for the error message you&#39;ve specified</a>."}, {"owner": {"reputation": 4263, "user_id": 148736, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/98ce675339d7e7c8269349943d6a0823?s=128&d=identicon&r=PG", "display_name": "Andrew Arrow", "link": "https://stackoverflow.com/users/148736/andrew-arrow"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471807636, "post_id": 39067812, "comment_id": 65484261, "body": "^ are you saying I&#39;m using stack overflow incorrectly to learn rust? Why are you so against learning?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471807947, "post_id": 39067812, "comment_id": 65484365, "body": "Haha, I&#39;m certainly not against <i>learning</i>. I <i>am</i> (obliquely) pointing out that multiple people have spent significant time explaining that error message to ~70 people in ~70 contexts. It would be courteous to read (a good portion of) them in addition to the <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\">normal Rust documentation</a> and explain what makes your question different. Note that I answered the question you asked in the title, which seemed unique, but perhaps is actually a duplicate of <a href=\"http://stackoverflow.com/q/35869078/155423\">stackoverflow.com/q/35869078/155423</a> or those linked from there."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1471808106, "post_id": 39067812, "comment_id": 65484419, "body": "Also, I&#39;m pretty sure that &quot;Why are you so against learning?&quot; is some kind of logical fallacy or similar... ^_^"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1471810925, "post_id": 39067812, "comment_id": 65485165, "body": "@AndrewArrow: The purpose of stackoverflow is to get an answer to your question <i>without</i> having to ask it. It also aims at <i>consolidating</i> knowledge, rather than having it scattered across a dozen half-hearted explanations among so many pages. This means that, in general, if you ask a question that has already been asked, it should be closed. If the answers on the already asked question are insufficient, then it is best to improve <i>those</i> rather than leave incomplete answers there. As a corollary, a different question need to clearly indicate <i>how</i> it is different; it may not be obvious."}, {"owner": {"reputation": 4263, "user_id": 148736, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/98ce675339d7e7c8269349943d6a0823?s=128&d=identicon&r=PG", "display_name": "Andrew Arrow", "link": "https://stackoverflow.com/users/148736/andrew-arrow"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471813029, "post_id": 39067812, "comment_id": 65485797, "body": "I dunno guys, I think my question was pretty intelligently worded and showed I was really trying. I read the other 72 questions but wanted to ask it my way. What if a college professor responded to an intelligent question from a student with RTFM? Also @Shepmaster what is wrong with using tags in github? <a href=\"https://github.com/andrewarrow/tinted_paradise/tree/so2\" rel=\"nofollow noreferrer\">github.com/andrewarrow/tinted_paradise/tree/so2</a> so2 is a tag just for this question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471813698, "post_id": 39067812, "comment_id": 65485988, "body": "My rationale for tags -&gt; hashes is in <a href=\"http://stackoverflow.com/posts/39067812/revisions\">the edit history</a>. <i>I read the other 72 questions</i> \u2014 that is very impressive, kudos! I hope you remembered to upvote Q&amp;A you found useful while reading. It also means that you should be extremely capable of explaining the difference between those questions and this one, making it possible to give a useful answer here. <b>Now that you&#39;ve read all the existing answers</b>, us restating existing answers cannot possibly help you, so helping us understand the difference is the only way you can get a useful answer"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471813752, "post_id": 39067812, "comment_id": 65486005, "body": "I believe a professor would start by asking &quot;What have you tried?&quot; I agree your question is well-worded and readable, but <i>as it is currently written</i>, it doesn&#39;t show any effort to fix the problem. Right now, it&#39;s awfully close to &quot;here is my code, here is an error, people on SO will fix it for me&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1471806931, "creation_date": 1471806931, "answer_id": 39067965, "question_id": 39067812, "link": "https://stackoverflow.com/questions/39067812/how-do-i-give-a-tcpstream-to-a-bufreader-but-then-take-it-back/39067965#39067965", "title": "How do I give a TcpStream to a BufReader but then take it back?", "body": "<blockquote>\n  <p>How do I give a TcpStream to a BufReader but then take it back?</p>\n</blockquote>\n\n<p>By calling <a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html#method.into_inner\" rel=\"nofollow\"><code>BufReader::into_inner</code></a>:</p>\n\n<blockquote>\n<pre><code>impl&lt;R: Read&gt; BufReader&lt;R&gt; {\n    fn into_inner(self) -&gt; R\n}\n</code></pre>\n  \n  <p>Unwraps this <code>BufReader</code>, returning the underlying reader.</p>\n  \n  <p>Note that any leftover data in the internal buffer is lost.</p>\n</blockquote>\n"}], "owner": {"reputation": 4263, "user_id": 148736, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/98ce675339d7e7c8269349943d6a0823?s=128&d=identicon&r=PG", "display_name": "Andrew Arrow", "link": "https://stackoverflow.com/users/148736/andrew-arrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1471806943, "creation_date": 1471805960, "last_edit_date": 1471806943, "question_id": 39067812, "link": "https://stackoverflow.com/questions/39067812/how-do-i-give-a-tcpstream-to-a-bufreader-but-then-take-it-back", "title": "How do I give a TcpStream to a BufReader but then take it back?", "body": "<p>I have a struct:</p>\n\n<pre><code>pub struct Paradise {\n    cstream: TcpStream,\n}\n</code></pre>\n\n<p>with a method:</p>\n\n<pre><code>pub fn write_message(&amp;mut self, code: i32, message: &amp;str) {\n    let foo = format!(\"{} {}\\r\\n\", code, message);\n    let _ = self.cstream.write(foo.as_bytes());\n}\n</code></pre>\n\n<p>That works great. It's an FTP server so when I get a new <code>TcpStream</code> from <code>TcpListener::bind</code> I do:</p>\n\n<pre><code>let mut p = Paradise::new(stream);\np.start();\n</code></pre>\n\n<p>And inside that <code>start</code> method I call:</p>\n\n<pre><code>self.write_message(220, \"Welcome to Paradise\");\n</code></pre>\n\n<p>and sure enough, I see that message in the FTP client. So far so good.</p>\n\n<p>But then I do:</p>\n\n<pre><code>let mut br = BufReader::new(&amp;self.cstream);\nloop {\n    let mut buffer = String::new();\n    let _ = br.read_line(&amp;mut buffer);\n    println!(\"{:?}\", buffer);\n    self.write_message(550, \"Testing\");\n}\n</code></pre>\n\n<p>And when I get to the next <code>write_message</code> call inside the loop:</p>\n\n<blockquote>\n  <p>cannot borrow <code>*self</code> as mutable because <code>self.cstream</code> is also\n  borrowed as immutable [E0502]</p>\n</blockquote>\n\n<p>Full code:</p>\n\n<p><a href=\"https://github.com/andrewarrow/tinted_paradise/blob/169cc5f7025c417814f47a1fb3e3fc78ce4f9516/src/paradise.rs\" rel=\"nofollow\">https://github.com/andrewarrow/tinted_paradise/blob/169cc5f7025c417814f47a1fb3e3fc78ce4f9516/src/paradise.rs</a></p>\n\n<p><a href=\"https://github.com/andrewarrow/tinted_paradise/blob/169cc5f7025c417814f47a1fb3e3fc78ce4f9516/src/starter.rs\" rel=\"nofollow\">https://github.com/andrewarrow/tinted_paradise/blob/169cc5f7025c417814f47a1fb3e3fc78ce4f9516/src/starter.rs</a></p>\n\n<p>How can I change stuff around so I <em>can</em> call <code>write_message</code> inside the loop?</p>\n"}, {"tags": ["rust", "coerce"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471801868, "post_id": 39066051, "comment_id": 65482622, "body": "Is this essentially the same reason you can&#39;t coerce <code>Vec&lt;Vec&lt;T&gt;&gt;</code> to <code>&amp;[&amp;[T]]</code> \u2014 the middle item would require changing size?"}, {"owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471802675, "post_id": 39066051, "comment_id": 65482857, "body": "Ok, you are right, the type <code>Rc&lt;Borrow&lt;i32&gt;&gt;</code> needs a vtable pointer somewhere. But the point is, the coercion of <code>Rc&lt;Borrow&lt;i32&gt;&gt;</code> to <code>Rc&lt;Borrow&lt;i32&gt;&gt;</code> does NOT result in the vtable pointer being on the heap next to the i32. In the case of a conversion of <code>&amp;i32</code> to <code>&amp;Borrow&lt;i32&gt;</code>, the vtable pointer is hold next to each reference instead. So i guessed, that the vtable pointers is always kept next to the outermost nesting level. And this would allow this type of conversion. Am i really wrong?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471804002, "post_id": 39066051, "comment_id": 65483208, "body": "@Pentagolo No, the vtable pointer is next to the <i>innermost</i> nesting level (well, the innermost applicable level &amp;mdash; <code>RefCell&lt;Borrow&lt;i32&gt;&gt;</code> for example is just another unsized type, not a reference next to which a vtable pointer could be stored.)"}, {"owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471874976, "post_id": 39066051, "comment_id": 65511150, "body": "Oh, OK. So what is the first applicable nesting level in general? Is it the first inner level which stays the same size even if the inner type is unsized? How are structs containing potential unsized types implemented in Rust? Where is the vtable pointer located in 3 Nestes structs if they are potential unsized?"}, {"owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471875085, "post_id": 39066051, "comment_id": 65511233, "body": "For me it looks like Rust would be a lot more flexible and strait forward if the vtable pointer would be next to the outermost nesting level by default. A special wrapper-type provided by the std-lib could force the vtable to be next to the special wrapper-type. An automatically implemented marker trait could indicate whether a type needs a vtable in its outer nesting level. Would this break any other existing functionality of the language or any existing code?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471882151, "post_id": 39066051, "comment_id": 65516191, "body": "@Pentagolo Putting the vtable on the &quot;outermost&quot; location would break composition. Right now, it doesn&#39;t matter one bit how many other wrappers are around a value you&#39;re handling and how many of those layers you&#39;re ignoring by holding a reference to their contents. For example, if you start with a <code>Box&lt;T&gt;</code>, you can always create a reference to the inner <code>T</code> and it&#39;s the same as any other reference to any other <code>T</code>. And this special wrapper type and special marker traits would be a lot of extra complication for what seems an incredibly minor use case."}, {"owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471952174, "post_id": 39066051, "comment_id": 65546656, "body": "I would like to split the <code>Sized</code> marker trait into <code>SizeIsKnown</code> and <code>ImplsAreKnown</code> traits. A type which does not implement <code>SizeIsKnown</code> may not be passed by value. A type T which does not implement <code>ImplsAreKnown</code> forces its wrappers like &amp;T to store the vtable pointer. If a type implements <code>Sized</code> right now it would implement <code>SizeIsKnown</code> and <code>ImplsAreKnown</code> in the new system. If a type does not implement &#39;Sized&#39; right now, it would not implement either <code>SizeIsKnown</code> or <code>ImplsAreKnown</code>. The new system would allow for types which implement <code>SizeIsKnown</code> and not implement &#39;ImplsAreKnown&#39;."}, {"owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471952225, "post_id": 39066051, "comment_id": 65546684, "body": "This works for nested unsized structs at the moment without any issue, why should it not work the same way for sized types. See <a href=\"https://play.rust-lang.org/?gist=ce3902de2e3796869f4e4c8ef469be58&amp;version=beta&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>."}, {"owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471952457, "post_id": 39066051, "comment_id": 65546872, "body": "Right now the size and implementation of <code>&amp;T</code> differs if <code>T</code> implements <code>Sized</code> or not. In the new system the implementation of &#39;&amp;T&#39; would differ if &#39;T&#39; implements &#39;ImplsAreKnown&#39; or not."}, {"owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471952941, "post_id": 39066051, "comment_id": 65547216, "body": "And you could easily allow coercions of <code>Rc&lt;Rc&lt;i32&gt;&gt;</code> to <code>Rc&lt;Rc&lt;Borrow&lt;i32&gt;&gt;&gt;</code> even if <code>Rc&lt;Borrow&lt;i32&gt;&gt;</code> would implement <code>ImplsAreKnown</code>. This just would force &#39;Rc&lt;Rc&lt;Borrow&lt;i32&gt;&gt;&gt;&#39; to not implement <code>ImplsAreKnown</code> and the vtable pointer stored with <code>Rc&lt;Borrow&lt;i32&gt;&gt;</code> would simply be ignored."}, {"owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "edited": false, "score": 0, "creation_date": 1471954983, "post_id": 39066051, "comment_id": 65548650, "body": "This is not a minor use case at all. If you have ever tried to write usable abstractions which include explicit ownership and lifetime relations for a bigger project you properbly end up combining the power of dynamic dispatch of traits and static data access of structs. See <a href=\"https://play.rust-lang.org/?gist=ea9f530244bce178a69817b0401a3f04&amp;version=beta&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> for an example. Things which work out great for static dispatch are unusable with dynamic dispatch. I do not see any technical reason for this."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 4, "last_activity_date": 1471801821, "last_edit_date": 1471801821, "creation_date": 1471794701, "answer_id": 39066051, "question_id": 39065931, "link": "https://stackoverflow.com/questions/39065931/unable-to-coerce-nested-sized-to-unsized-type-using-coerceunsized/39066051#39066051", "title": "Unable to coerce nested sized to unsized type using CoerceUnsized", "body": "<p>Converting a <code>Rc&lt;i32&gt;</code> to <code>Rc&lt;Borrow&lt;i32&gt;&gt;</code> requires nothing more than adding a vtable pointer next to the <code>Rc</code>, and it doesn't affect the memory managed by the <code>Rc</code>. On the flip side, converting <code>Rc&lt;Rc&lt;i32&gt;&gt;</code> to <code>Rc&lt;Rc&lt;Borrow&lt;i32&gt;&gt;</code> would mean stashing the vtable pointer <em>next to the inner <code>Rc</code></em>. This would require modifying (and enlarging) the memory managed by the outer <code>Rc</code> (i.e., it would effectively require a whole new allocation). You could do this manually, but it's far beyond the scope of a coercion.</p>\n"}], "owner": {"reputation": 111, "user_id": 4032476, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Pentagolo", "link": "https://stackoverflow.com/users/4032476/pentagolo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "accepted_answer_id": 39066051, "answer_count": 1, "score": 1, "last_activity_date": 1471802277, "creation_date": 1471793854, "last_edit_date": 1471802277, "question_id": 39065931, "link": "https://stackoverflow.com/questions/39065931/unable-to-coerce-nested-sized-to-unsized-type-using-coerceunsized", "title": "Unable to coerce nested sized to unsized type using CoerceUnsized", "body": "<p>I am trying to use the functionality of <code>CoerceUnsized</code>:</p>\n\n<pre><code>use std::rc::Rc;\nuse std::borrow::Borrow;\n\nfn main() {\n    // Create (sized) i32 wrapped in an rc.\n    let a0: Rc&lt;i32&gt; = Rc::new(0i32);\n    // Coerce to (unsized) Borrow&lt;i32&gt; wrapped in an rc.\n    // Works fine in Beta and Nightly cause of CoerceUnsized.\n    let a1: Rc&lt;Borrow&lt;i32&gt;&gt; = a0.clone();\n\n    // Create (sized) i32 in nested rcs.\n    let b0: Rc&lt;Rc&lt;i32&gt;&gt; = Rc::new(Rc::new(0i32));\n    // Coerce to (unsized) Borrow&lt;i32&gt; in nested rcs.\n    // Does not compile in Stable, Beta or Nightly.\n    let b1: Rc&lt;Rc&lt;Borrow&lt;i32&gt;&gt;&gt; = b0.clone();\n\n    println!(\"{}, {}\", a1.borrow(), b1.borrow());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=9dcce012ad3fc92814c2d47ec183bc0d&amp;version=beta&amp;backtrace=0\" rel=\"nofollow\">Playground</a></p>\n\n<p>But the nested coerce from <code>Rc&lt;Rc&lt;i32&gt;&gt;</code> to <code>Rc&lt;Rc&lt;Borrow&lt;i32&gt;&gt;&gt;</code> does not compile.</p>\n\n<p>Why does <code>CoerceUnsized</code> not work recursively? Are there any workarounds, such as explicit casting?</p>\n"}, {"tags": ["rust", "smart-pointers"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1471801560, "creation_date": 1471801560, "answer_id": 39067109, "question_id": 39065232, "link": "https://stackoverflow.com/questions/39065232/what-is-the-right-smart-pointer-to-have-multiple-strong-references-and-allow-mut/39067109#39067109", "title": "What is the right smart pointer to have multiple strong references and allow mutability?", "body": "<p><code>Rc</code> (and its multithreaded counterpart <code>Arc</code>) only concern themselves with ownership. Instead of a single owner, there is now joint ownership, tracked at runtime.</p>\n\n<p>Mutability is a different concept, although closely related to ownership: if you own a value, then you have the ability to mutate it. This is why <code>Rc::get_mut</code> only works when there is a single strong reference - it's the same as saying there is a single owner.</p>\n\n<p>If you need the ability to divide mutability in a way that doesn't match the structure of the program, you can use tools like <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow\"><code>Cell</code></a> or <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow\"><code>RefCell</code></a> for single-threaded programs:</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn create() -&gt; Rc&lt;RefCell&lt;Foo&gt;&gt; {\n    let rc = Rc::new(RefCell::new(Foo { val: 5 }));\n    let weak_rc = Rc::downgrade(&amp;rc);\n    need_callback(move |x| {\n        if let Some(rc) = weak_rc.upgrade() {\n            rc.borrow_mut().set_val(x);\n        }\n    });\n    rc\n}\n</code></pre>\n\n<p>Or <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow\"><code>Mutex</code></a>, <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow\"><code>RwLock</code></a>, or <a href=\"https://doc.rust-lang.org/std/sync/atomic/index.html\" rel=\"nofollow\">an atomic type</a> in multithreaded contexts:</p>\n\n<pre><code>use std::sync::Mutex;\n\nfn create() -&gt; Rc&lt;Mutex&lt;Foo&gt;&gt; {\n    let rc = Rc::new(Mutex::new(Foo { val: 5 }));\n    let weak_rc = Rc::downgrade(&amp;rc);\n    need_callback(move |x| {\n        if let Some(rc) = weak_rc.upgrade() {\n            if let Ok(mut foo) = rc.try_lock() {\n                foo.set_val(x);\n            }\n        }\n    });\n    rc\n}\n</code></pre>\n\n<p>These tools all defer the check that there is only a single mutable reference to runtime, instead of compile time.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 547, "favorite_count": 0, "accepted_answer_id": 39067109, "answer_count": 1, "score": 1, "last_activity_date": 1471801560, "creation_date": 1471789283, "last_edit_date": 1471800880, "question_id": 39065232, "link": "https://stackoverflow.com/questions/39065232/what-is-the-right-smart-pointer-to-have-multiple-strong-references-and-allow-mut", "title": "What is the right smart pointer to have multiple strong references and allow mutability?", "body": "<p>I want to have a structure on the heap with two references; one for me and another from a closure. Note that the code is for the single-threaded case:</p>\n\n<pre><code>use std::rc::Rc;\n\n#[derive(Debug)]\nstruct Foo {\n    val: u32,\n}\nimpl Foo {\n    fn set_val(&amp;mut self, val: u32) {\n        self.val = val;\n    }\n}\nimpl Drop for Foo {\n    fn drop(&amp;mut self) {\n        println!(\"we drop {:?}\", self);\n    }\n}\n\nfn need_callback(mut cb: Box&lt;FnMut(u32)&gt;) {\n    cb(17);\n}\n\nfn create() -&gt; Rc&lt;Foo&gt; {\n    let rc = Rc::new(Foo { val: 5 });\n    let weak_rc = Rc::downgrade(&amp;rc);\n    need_callback(Box::new(move |x| {\n        if let Some(mut rc) = weak_rc.upgrade() {\n            if let Some(foo) = Rc::get_mut(&amp;mut rc) {\n                foo.set_val(x);\n            }\n        }\n    }));\n    rc\n}\n\nfn main() {\n    create();\n}\n</code></pre>\n\n<p>In the real code, <code>need_callback</code> saves the callback to some place, but before that may call <code>cb</code> as <code>need_callback</code> does.</p>\n\n<p>The code shows that <code>std::rc::Rc</code> is not suitable for this task because <code>foo.set_val(x)</code> is never called; I have two strong references and <code>Rc::get_mut</code> gives <code>None</code> in this case. </p>\n\n<p>What smart pointer with reference counting should I use instead of <code>std::rc::Rc</code> to make it possible to call <code>foo.set_val</code>? Maybe it is possible to fix my code and still use <code>std::rc::Rc</code>? </p>\n\n<p>After some thinking, I need something like <code>std::rc::Rc</code>, but weak references should prevent dropping. I can have two weak references and upgrade them to strong when I need mutability.</p>\n\n<p>Because it is a singled-threaded program, I will have only strong reference at a time, so everything will work as expected.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471718929, "post_id": 39056626, "comment_id": 65464616, "body": "Have you seen <a href=\"https://github.com/Kimundi/owning-ref-rs\" rel=\"nofollow noreferrer\">owning-ref</a>?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1471726359, "post_id": 39056626, "comment_id": 65466634, "body": "The <code>PhantomData</code> in <code>Shared</code> does not look right, <code>Shared</code> <i>owns</i> its item."}, {"owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471869906, "post_id": 39056626, "comment_id": 65507360, "body": "@Shepmaster I haven&#39;t but I am not sure if it would help me. I made a more specific question here <a href=\"http://stackoverflow.com/questions/39079922/is-it-possible-to-have-internal-pointers-without-using-an-arc\" title=\"is it possible to have internal pointers without using an arc\">stackoverflow.com/questions/39079922/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 1, "last_activity_date": 1471735444, "creation_date": 1471735444, "answer_id": 39059563, "question_id": 39056626, "link": "https://stackoverflow.com/questions/39056626/is-it-possible-to-move-even-with-immutable-borrows/39059563#39059563", "title": "Is it possible to move even with immutable borrows?", "body": "<p>The reason Rust allows you to move out of the <code>Shared</code> is that you haven't tied the lifetime of the returned <code>SharedRef</code> to it:</p>\n\n<pre><code>pub fn as_ref(&amp;self) -&gt; SharedRef&lt;'r, T&gt; {\n    SharedRef {\n        data: self.data,\n        _pd: marker::PhantomData,\n    }\n}\n</code></pre>\n\n<p>Annotating the <code>&amp;self</code> fixes that:</p>\n\n<pre><code>pub fn as_ref(&amp;'r self) -&gt; SharedRef&lt;'r, T&gt; { .. }\n</code></pre>\n\n<p>My current understanding is that the key difference here is that this says that the lifetime of the <code>SharedRef</code> now matches the lifetime of the <em>borrow</em> of <code>self</code>, keeping the borrow alive.  Indeed it doesn't have to be the same lifetime (<code>'r</code>) as in the <code>Shared</code>; it works with a new lifetime just for the borrow/return:</p>\n\n<pre><code>pub fn as_ref&lt;'b&gt;(&amp;'b self) -&gt; SharedRef&lt;'b, T&gt; { .. }\n</code></pre>\n\n<p>This also disallows the move.</p>\n\n<p>As for the bonus part of the question, where you want to allow moving as long as it's to something with a long enough lifetime, I think the answer is no.  The only way I know to stop something being moved at all is to borrow it, and that stops any move.</p>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 0, "accepted_answer_id": 39059563, "answer_count": 1, "score": 1, "last_activity_date": 1471735444, "creation_date": 1471712170, "question_id": 39056626, "link": "https://stackoverflow.com/questions/39056626/is-it-possible-to-move-even-with-immutable-borrows", "title": "Is it possible to move even with immutable borrows?", "body": "<pre><code>use std::marker;\nuse std::ops;\npub struct Shared&lt;'r, T: 'r&gt; {\n    data: *mut T,\n    _pd: marker::PhantomData&lt;&amp;'r T&gt;,\n}\n\nimpl&lt;'r, T&gt; Shared&lt;'r, T&gt; {\n    pub fn new(value: T) -&gt; Shared&lt;'r, T&gt; {\n        let boxed = Box::new(value);\n        Shared {\n            data: Box::into_raw(boxed),\n            _pd: marker::PhantomData,\n        }\n    }\n\n    pub fn as_ref(&amp;self) -&gt; SharedRef&lt;'r, T&gt; {\n        SharedRef {\n            data: self.data,\n            _pd: marker::PhantomData,\n        }\n    }\n}\n\nimpl&lt;'r, T&gt; ops::Deref for Shared&lt;'r, T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T {\n        unsafe { &amp;*self.data }\n    }\n}\n\npub struct SharedRef&lt;'r, T: 'r&gt; {\n    data: *mut T,\n    _pd: marker::PhantomData&lt;&amp;'r T&gt;,\n}\n\nimpl&lt;'r, T&gt; ops::Deref for SharedRef&lt;'r, T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T {\n        unsafe { &amp;*self.data }\n    }\n}\n\nimpl&lt;'r, T&gt; Drop for Shared&lt;'r, T&gt; {\n    fn drop(&amp;mut self) {\n        unsafe {\n            Box::from_raw(self.data);\n        }\n    }\n}\n\nfn main() {\n    let s = Shared::new(42);\n    let s_ref = s.as_ref();\n    {\n        let s1 = s;\n    }\n    // lifetime should end here\n    println!(\"{}\", *s_ref);\n}\n</code></pre>\n\n<p>What I wanted to express was a mix between a <code>Box</code> and an <code>Arc</code>. A uniquely owned pointer that is also capable of giving out references.</p>\n\n<p>The problem is that I want to be able to move <code>Shared</code> around even if there are currently immutable borrows to it. It should be legal in this scenario because it is heap allocated.</p>\n\n<p>The problem is that I have no idea how to express this.</p>\n\n<pre><code>fn main() {\n    let s = Shared::new(42);\n    let s_ref = s.as_ref();\n    {\n        let s1 = s;\n    }\n    // lifetime should end here\n    println!(\"{}\", *s_ref);\n}\n</code></pre>\n\n<p>Here I move <code>s</code> into a scope with \"less\" lifetime than it had before. But now after I have moved <code>s</code> into <code>s1</code>, <code>s_ref</code> should not be accessible anymore. So what I want to say is that it is okay to move a <code>Shared</code> if the lifetime does not get smaller.</p>\n\n<p>Can this be expressed in Rust?</p>\n"}, {"tags": ["constructor", "casting", "rust", "compiler-warnings", "higher-order-functions"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2891, "user_id": 135889, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/6660983655e40c381d6c93a2fffd42dd?s=128&d=identicon&r=PG", "display_name": "Ruud", "link": "https://stackoverflow.com/users/135889/ruud"}, "edited": false, "score": 0, "creation_date": 1471816024, "post_id": 39056284, "comment_id": 65486629, "body": "@Ruud <code>fn(A) -&gt; B desugars to std::ops::Fn&lt;(A,), Output=B&gt;</code> \u2014 no, it does not. A function <i>implements</i> the <code>Fn*</code> traits, but they aren&#39;t the same. Just like <code>i32</code> <i>implements</i> <code>Add</code>, but is not desugared to <code>Add</code>."}], "answers": [{"tags": [], "owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "is_accepted": false, "score": 2, "last_activity_date": 1471814050, "creation_date": 1471814050, "answer_id": 39068926, "question_id": 39056284, "link": "https://stackoverflow.com/questions/39056284/unable-to-use-or-cast-a-constructor-as-a-fn/39068926#39068926", "title": "Unable to use or cast a constructor as a fn", "body": "<p>It's a bogus warning caused by recent changes to the compiler's constant evaluator. See <a href=\"https://github.com/rust-lang/rust/issues/33452\" rel=\"nofollow\">#33452</a>, <a href=\"https://github.com/rust-lang/rust/issues/33291\" rel=\"nofollow\">#33291</a>, etc. I wouldn't worry about it, but it's worth submitting a bug to the Rust repo so it can be fixed.</p>\n"}], "owner": {"reputation": 4870, "user_id": 403875, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/439b8283080e4e2255205993da9de9ca?s=128&d=identicon&r=PG", "display_name": "dspyz", "link": "https://stackoverflow.com/users/403875/dspyz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 2, "answer_count": 1, "score": 6, "last_activity_date": 1471814050, "creation_date": 1471709911, "last_edit_date": 1471785151, "question_id": 39056284, "link": "https://stackoverflow.com/questions/39056284/unable-to-use-or-cast-a-constructor-as-a-fn", "title": "Unable to use or cast a constructor as a fn", "body": "<p>I want to write something like this:</p>\n\n<pre><code>use std::{iter, ops};\n\nstruct Idx(usize);\n\nfn get_inds() -&gt; iter::Zip&lt;iter::Map&lt;ops::RangeFrom&lt;usize&gt;, fn(usize) -&gt; Idx&gt;, ops::RangeFrom&lt;usize&gt;&gt; {\n    (0..).map(Idx).zip(0..)\n}\n</code></pre>\n\n<p>However, this fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: mismatched types [--explain E0308]\n --&gt; src/main.rs:6:9\n6 |&gt;         (0..).map(Idx).zip(0..)\n  |&gt;         ^^^^^^^^^^^^^^^^^^^^^^^ expected fn pointer, found fn item\nnote: expected type `std::iter::Zip&lt;std::iter::Map&lt;std::ops::RangeFrom&lt;usize&gt;, fn(usize) -&gt; Idx&gt;, std::ops::RangeFrom&lt;usize&gt;&gt;`\nnote:    found type `std::iter::Zip&lt;std::iter::Map&lt;std::ops::RangeFrom&lt;usize&gt;, fn(usize) -&gt; Idx {Idx::{{constructor}}}&gt;, std::ops::RangeFrom&lt;_&gt;&gt;`\n</code></pre>\n\n<p>I then cast the function: </p>\n\n<pre><code>fn get_inds() -&gt; iter::Zip&lt;iter::Map&lt;ops::RangeFrom&lt;usize&gt;, fn(usize) -&gt; Idx&gt;, ops::RangeFrom&lt;usize&gt;&gt; {\n    (0..).map(Idx as fn(usize) -&gt; Idx).zip(0..)\n}\n</code></pre>\n\n<p>Which generates the following compiler warning. Why am I getting a warning? What is the proper way to use the constructor like this?  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: can't cast this type, #[warn(const_err)] on by default\n --&gt; src/main.rs:6:19\n6 |&gt;         (0..).map(Idx as fn(usize) -&gt; Idx).zip(0..)\n  |&gt;                   ^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["server", "client", "rust", "echo"], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 5830677, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3309466f4cefdc7998e4c61b5353d5d?s=128&d=identicon&r=PG&f=1", "display_name": "simbiont666", "link": "https://stackoverflow.com/users/5830677/simbiont666"}, "edited": false, "score": 0, "creation_date": 1471732214, "post_id": 39057403, "comment_id": 65467950, "body": "It is not used in tutorial. Why?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 43, "user_id": 5830677, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3309466f4cefdc7998e4c61b5353d5d?s=128&d=identicon&r=PG&f=1", "display_name": "simbiont666", "link": "https://stackoverflow.com/users/5830677/simbiont666"}, "edited": false, "score": 0, "creation_date": 1471748954, "post_id": 39057403, "comment_id": 65470510, "body": "@simbiont666 because the HTTP server in the client example will close the socket when it has sent the page (and the server isn&#39;t using HTTP 1.1 keepalives)."}, {"owner": {"reputation": 43, "user_id": 5830677, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3309466f4cefdc7998e4c61b5353d5d?s=128&d=identicon&r=PG&f=1", "display_name": "simbiont666", "link": "https://stackoverflow.com/users/5830677/simbiont666"}, "edited": false, "score": 0, "creation_date": 1471795685, "post_id": 39057403, "comment_id": 65480895, "body": "Thank you so much!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1486132808, "last_edit_date": 1486132808, "creation_date": 1471717474, "answer_id": 39057403, "question_id": 39049365, "link": "https://stackoverflow.com/questions/39049365/rust-echo-server-and-client-using-futures-blocks-itself-forever/39057403#39057403", "title": "Rust echo server and client using futures blocks itself forever", "body": "<p>The problem has nothing to do with futures. You have an open socket and you ask to \"read it until the end\". <strong>What determines the end?</strong> In this case, it's when the socket is closed; so when is that?</p>\n\n<p>Trick question! </p>\n\n<ul>\n<li>The client's read socket closes when the server's write socket closes.</li>\n<li>The server's write socket closes when the server's read socket closes.</li>\n<li>The server's read socket closes when the the client's write socket closes.</li>\n</ul>\n\n<p>So when does that happen? Because there's no code that does it specifically, it will close when the socket is dropped, so:</p>\n\n<ul>\n<li>The client's write socket closes when the the client ends.</li>\n</ul>\n\n<p>Thus the deadlock. The issue can be fixed by explicitly closing the write half of the socket:</p>\n\n<pre><code>let response = request.and_then(|(socket, _)| {\n    socket.shutdown(std::net::Shutdown::Write).expect(\"Couldn't shut down\");\n    read_to_end(socket, Vec::new())\n});\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 5830677, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3309466f4cefdc7998e4c61b5353d5d?s=128&d=identicon&r=PG&f=1", "display_name": "simbiont666", "link": "https://stackoverflow.com/users/5830677/simbiont666"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1079, "favorite_count": 0, "accepted_answer_id": 39057403, "answer_count": 1, "score": 4, "last_activity_date": 1486132808, "creation_date": 1471653080, "last_edit_date": 1471662946, "question_id": 39049365, "link": "https://stackoverflow.com/questions/39049365/rust-echo-server-and-client-using-futures-blocks-itself-forever", "title": "Rust echo server and client using futures blocks itself forever", "body": "<p>I used <a href=\"https://github.com/alexcrichton/futures-rs/blob/8e09aea831780fff0928380ab7b5a7a3ca7c1a32/futures-mio/src/bin/echo.rs\" rel=\"nofollow\">this code</a> for the server, and modified <a href=\"https://github.com/alexcrichton/futures-rs/blob/8e09aea831780fff0928380ab7b5a7a3ca7c1a32/TUTORIAL.md\" rel=\"nofollow\">this tutorial</a> for the client code. When a client connects to the server, it blocks itself forever.</p>\n\n<p><strong>Server:</strong></p>\n\n<pre><code>extern crate futures;\nextern crate futures_io;\nextern crate futures_mio;\n\nuse std::net::SocketAddr;\n\nuse futures::Future;\nuse futures_io::{copy, TaskIo};\nuse futures::stream::Stream;\n\nfn main() {\n    let addr = \"127.0.0.1:8080\".parse::&lt;SocketAddr&gt;().unwrap();\n\n    let mut l = futures_mio::Loop::new().unwrap();\n\n    let server = l.handle().tcp_listen(&amp;addr);\n\n    let done = server.and_then(move |socket| {\n        println!(\"Listening on: {}\", addr);\n\n        socket.incoming().for_each(|(socket, addr)| {\n            let io = TaskIo::new(socket);\n            let pair = io.map(|io| io.split());\n            let amt = pair.and_then(|(reader, writer)| {\n                copy(reader, writer)\n            });\n            amt.map(move |amt| {\n                println!(\"wrote {} bytes to {}\", amt, addr)\n            }).forget();\n\n            Ok(())\n        })\n    });\n    l.run(done).unwrap();\n}\n</code></pre>\n\n<p><strong>Client:</strong></p>\n\n<pre><code>extern crate futures;\nextern crate futures_io;\nextern crate futures_mio;\n\nuse std::net::SocketAddr;\n\nuse futures::Future;\nuse futures_mio::Loop;\n\nfn main() {\n    let mut lp = Loop::new().unwrap();\n    let addr = \"127.0.0.1:8080\".parse::&lt;SocketAddr&gt;().unwrap();\n\n    let socket = lp.handle().tcp_connect(&amp;addr);\n\n    let request = socket.and_then(|socket| {\n        futures_io::write_all(socket, b\"Hello!\")\n    });\n\n    let response = request.and_then(|(socket, _)| {\n        futures_io::read_to_end(socket, Vec::new())\n    });\n\n    let data = lp.run(response).unwrap();\n    println!(\"{}\", String::from_utf8_lossy(&amp;data));\n}\n</code></pre>\n"}, {"tags": ["functional-programming", "pattern-matching", "rust"], "comments": [{"owner": {"reputation": 1214, "user_id": 2507567, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae46f1011962d615214aeef23306619c?s=128&d=identicon&r=PG", "display_name": "Rom&#225;rio", "link": "https://stackoverflow.com/users/2507567/rom%c3%a1rio"}, "edited": false, "score": 1, "creation_date": 1471651143, "post_id": 39049063, "comment_id": 65447927, "body": "<a href=\"https://doc.rust-lang.org/book/patterns.html\" rel=\"nofollow noreferrer\">The book</a> explains just that"}, {"owner": {"reputation": 127, "user_id": 5579847, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cc608716394c1ec323eb3c42c28637e1?s=128&d=identicon&r=PG&f=1", "display_name": "TheRenegade", "link": "https://stackoverflow.com/users/5579847/therenegade"}, "reply_to_user": {"reputation": 1214, "user_id": 2507567, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae46f1011962d615214aeef23306619c?s=128&d=identicon&r=PG", "display_name": "Rom&#225;rio", "link": "https://stackoverflow.com/users/2507567/rom%c3%a1rio"}, "edited": false, "score": 0, "creation_date": 1471651694, "post_id": 39049063, "comment_id": 65448032, "body": "The book was my goto source, it didn&#39;t compute for me at all. I am misunderstanding it and it&#39;s not very in depth for my reasoning."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471663130, "post_id": 39049063, "comment_id": 65449755, "body": "@TheRenegade you should open an issue for the book. If you don&#39;t understand it and can explain what&#39;s wrong, then the book itself can be improved and <b>everyone benefits</b>."}, {"owner": {"reputation": 127, "user_id": 5579847, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cc608716394c1ec323eb3c42c28637e1?s=128&d=identicon&r=PG&f=1", "display_name": "TheRenegade", "link": "https://stackoverflow.com/users/5579847/therenegade"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471673453, "post_id": 39049063, "comment_id": 65451361, "body": "@Shepmaster That was my plan, I will see what I can do."}, {"owner": {"reputation": 127, "user_id": 5579847, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cc608716394c1ec323eb3c42c28637e1?s=128&d=identicon&r=PG&f=1", "display_name": "TheRenegade", "link": "https://stackoverflow.com/users/5579847/therenegade"}, "reply_to_user": {"reputation": 881859, "user_id": 100297, "user_type": "moderator", "profile_image": "https://www.gravatar.com/avatar/24780fb6df85a943c7aea0402c843737?s=128&d=identicon&r=PG", "display_name": "Martijn Pieters", "link": "https://stackoverflow.com/users/100297/martijn-pieters"}, "edited": false, "score": 0, "creation_date": 1471809677, "post_id": 39049063, "comment_id": 65484841, "body": "@martijn-pieters How is this too broad? It simply asks what patterns are and how they are matched?"}, {"owner": {"reputation": 881859, "user_id": 100297, "user_type": "moderator", "profile_image": "https://www.gravatar.com/avatar/24780fb6df85a943c7aea0402c843737?s=128&d=identicon&r=PG", "display_name": "Martijn Pieters", "link": "https://stackoverflow.com/users/100297/martijn-pieters"}, "edited": false, "score": 0, "creation_date": 1471810163, "post_id": 39049063, "comment_id": 65484953, "body": "@TheRenegade: Yes, and that&#39;s too broad a list. As the accepted answer notes: <i>Many types of patterns exist in Rust</i>."}, {"owner": {"reputation": 127, "user_id": 5579847, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cc608716394c1ec323eb3c42c28637e1?s=128&d=identicon&r=PG&f=1", "display_name": "TheRenegade", "link": "https://stackoverflow.com/users/5579847/therenegade"}, "reply_to_user": {"reputation": 881859, "user_id": 100297, "user_type": "moderator", "profile_image": "https://www.gravatar.com/avatar/24780fb6df85a943c7aea0402c843737?s=128&d=identicon&r=PG", "display_name": "Martijn Pieters", "link": "https://stackoverflow.com/users/100297/martijn-pieters"}, "edited": false, "score": 0, "creation_date": 1471810299, "post_id": 39049063, "comment_id": 65484985, "body": "@martijn-pieters Not what my question entailed. It asked what all of those patterns where defined as, not a list, and what pattern matching is as well. It&#39;s like asking what a variable is, I don&#39;t need the entire list of strings, chars, ints etc. After consulting Apple&#39;s docs i finally found patterns defined as a sort of structure. All I needed to know. The person here happend to answer my question as well. Why I selected that and the only answer."}], "answers": [{"comments": [{"owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 0, "creation_date": 1471693778, "post_id": 39049232, "comment_id": 65456648, "body": "Useful links: <a href=\"https://doc.rust-lang.org/book/match.html\" rel=\"nofollow noreferrer\">Match</a> and <a href=\"https://doc.rust-lang.org/book/patterns.html\" rel=\"nofollow noreferrer\">Patterns</a> in the book and <a href=\"https://doc.rust-lang.org/reference.html#match-expressions\" rel=\"nofollow noreferrer\">match expressions</a> in the reference. Other important patterns include tuples, pattern joining with &quot;|&quot;, ranges, subpatterns with &quot;@&quot;. Enum variants may have <code>X</code>, <code>X( .. )</code> or <code>X{ .. }</code> syntax depending on how they were declared."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 5, "last_activity_date": 1471651743, "creation_date": 1471651743, "answer_id": 39049232, "question_id": 39049063, "link": "https://stackoverflow.com/questions/39049063/what-is-the-definition-of-a-pattern-in-rust-and-what-is-pattern-matching/39049232#39049232", "title": "What is the definition of a pattern in Rust and what is pattern matching?", "body": "<p>Many types of patterns exist in Rust. The most notable ones are:</p>\n\n<ul>\n<li>Literals, such as <code>42</code>. These match the given value. So if you do <code>match f() {42 =&gt; ...}</code>, the 42 case will be entered if <code>f()</code> returned 42.</li>\n<li><p>Identifiers, such as <code>x</code>. This matches anything and assigns the matched value to <code>x</code>. So in the following code:</p>\n\n<pre><code>match f() {\n  42 =&gt; println!(\"Correct!\"),\n  x =&gt; println!(\"{} is the wrong answer\", x)\n}\n</code></pre>\n\n<p>\"Correct!\" will be printed if <code>f()</code> returned 42 and otherwise the entered number will be printed with \" is the wrong answer\" after it.</p></li>\n<li><p>The wildcard pattern <code>_</code>. Like an identifier, this matches anything, but unlike an identifier nothing is assigned. Use this if you don't need the matched value (say you wouldn't want to print the entered number in the above example, then you could just write <code>_ =&gt; println!(\"Wrong\")</code></p></li>\n<li><p>For any variant <code>X(arg1, ..., argN)</code> of an enum, <code>X(pattern1, ..., patternN)</code> is a valid pattern and for any variant <code>Y</code> without arguments, <code>Y</code> is a valid pattern. The pattern <code>Y</code> matches the variant <code>Y</code>. The pattern <code>X(pattern1, ..., patternN)</code> matches an instance of the variant <code>X</code> if its argument match patterns <code>pattern1</code> through <code>patternN</code> respectively. Consider this example:</p>\n\n<pre><code>enum Foo {\n  X(i32, i32),\n  Y\n}\n\nfn g() -&gt; Foo { ... }\n\nfn foo() {\n  match g() {\n    X(a,b) -&gt; a+b\n    Y -&gt; 0\n  }\n}\n</code></pre>\n\n<p>Here foo() will return the sum of the X's values if <code>g()</code> returned an <code>X</code> or it will return 0 if <code>g()</code> returned <code>Y</code>.</p></li>\n</ul>\n"}], "owner": {"reputation": 127, "user_id": 5579847, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cc608716394c1ec323eb3c42c28637e1?s=128&d=identicon&r=PG&f=1", "display_name": "TheRenegade", "link": "https://stackoverflow.com/users/5579847/therenegade"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "closed_date": 1471769424, "accepted_answer_id": 39049232, "answer_count": 1, "score": 1, "last_activity_date": 1471810213, "creation_date": 1471650144, "last_edit_date": 1471810213, "question_id": 39049063, "link": "https://stackoverflow.com/questions/39049063/what-is-the-definition-of-a-pattern-in-rust-and-what-is-pattern-matching", "closed_reason": "Needs more focus", "title": "What is the definition of a pattern in Rust and what is pattern matching?", "body": "<p>I am a programmer who is very familiar with languages like C and C++, but I have very little experience with things that are functional in nature. I am attempting to learn Rust and would like to know what Rust defines a pattern as, and what pattern matching with a <code>match</code> expression is in Rust.</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1471642631, "post_id": 39047615, "comment_id": 65445858, "body": "Thanks. The problem for me was not to write <code>count!</code> macro, but how to combine analog of your <code>count!</code> macro and main macro that generate <code>enum</code>. But this not important, because of missed <code>&amp;[]</code> solution."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1471640927, "last_edit_date": 1490005771, "creation_date": 1471640487, "answer_id": 39047615, "question_id": 39047521, "link": "https://stackoverflow.com/questions/39047521/is-it-possible-to-write-a-macro-that-counts-items-and-generates-an-enum/39047615#39047615", "title": "Is it possible to write a macro that counts items and generates an enum?", "body": "<p>This doesn't really answer the question, but only because you have a <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">xy problem</a>.</p>\n\n<p>Instead of writing</p>\n\n<pre><code>const ALL: [u32; 3] = [1, 2, 3];\n</code></pre>\n\n<p>you could write</p>\n\n<pre><code>const ALL: &amp;'static [u32] = &amp;[1, 2, 3];\n</code></pre>\n\n<p>Thus your macro should be</p>\n\n<pre><code>const ALL_VARIANTS: &amp;'static [$Name] = &amp;[$($Name::$Variant),*];\n</code></pre>\n\n<hr>\n\n<p>To answer the other question (\"how to count with macros\"): it's a simple head-tail-kind-of-algorithm:</p>\n\n<pre><code>macro_rules! count {\n    ($head:ident $(, $tail:ident)*) =&gt; {  1 + count!($($tail),*) };\n    () =&gt; { 0 };\n}\n\nprintln!(\"{}\", count!());  // 0\nprintln!(\"{}\", count!(A)); // 1\nprintln!(\"{}\", count!(A, B, C, D)); // 4\n</code></pre>\n"}], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "accepted_answer_id": 39047615, "answer_count": 1, "score": 3, "last_activity_date": 1471662995, "creation_date": 1471640077, "last_edit_date": 1471662995, "question_id": 39047521, "link": "https://stackoverflow.com/questions/39047521/is-it-possible-to-write-a-macro-that-counts-items-and-generates-an-enum", "title": "Is it possible to write a macro that counts items and generates an enum?", "body": "<p>I want something like this:</p>\n\n<pre><code>define_enum_and_all_variants! ( Test {\n    One, Two, Three\n});\n</code></pre>\n\n<p>to produce:</p>\n\n<pre><code>enum Test {\n  One, Two, Three\n}\nconst ALL_VARIANTS: [Test; 3] = [One, Two, Three];\n</code></pre>\n\n<p>the problem here is <code>3</code>, I can write something like this:</p>\n\n<pre><code>macro_rules! define_enum_and_all_variants {\n    ($Name:ident { $($Variant:ident),* }) =&gt;\n    {\n        #[derive(Debug)]\n        enum $Name {\n            $($Variant),*,\n        }\n        #[allow(dead_code)]\n        const ALL_VARIANTS: [$Name; 3] = [$($Name::$Variant),*];\n    }\n}\n</code></pre>\n\n<p>but how to calculate number of elements in <code>enum</code>?</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"comments": [{"owner": {"reputation": 4263, "user_id": 148736, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/98ce675339d7e7c8269349943d6a0823?s=128&d=identicon&r=PG", "display_name": "Andrew Arrow", "link": "https://stackoverflow.com/users/148736/andrew-arrow"}, "edited": false, "score": 0, "creation_date": 1471647443, "post_id": 39047539, "comment_id": 65447173, "body": "ah, thank u, I now finally understand rust. That was the last peice of info I was missing."}], "tags": [], "owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "is_accepted": true, "score": 7, "last_activity_date": 1471662756, "last_edit_date": 1471662756, "creation_date": 1471640146, "answer_id": 39047539, "question_id": 39045636, "link": "https://stackoverflow.com/questions/39045636/how-do-i-have-one-thread-that-deletes-from-a-hashmap-and-another-that-inserts/39047539#39047539", "title": "How do I have one thread that deletes from a HashMap and another that inserts?", "body": "<p>As it is, the hashmap is moved into the first thread, so no other threads may access it. You'll need an <code>Arc</code> for shared ownership, so that multiple threads can access the map, as well as a <code>Mutex</code> for synchronization so that they aren't both trying to modify the map at the same time.</p>\n\n<p>Here's what that would look like:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\n\nlet hash: Arc&lt;Mutex&lt;HashMap&lt;String, Vec&lt;i32&gt;&gt;&gt;&gt; = Arc::new(Mutex::new(HashMap::new())); // initialize the map within an Arc (for sharing) and a Mutex (for synchronization)\nlet clone1 = hash.clone(); // clone the Arc so it can be owned jointly by multiple threads\nlet clone2 = hash.clone(); // clone the Arc so it can be owned jointly by multiple threads\n\nthread::spawn(move || delete_from(&amp;clone1));\nthread::spawn(move || insert_into(&amp;clone2));\n\nfn delete_from(m: &amp;Mutex&lt;HashMap&lt;String, Vec&lt;i32&gt;&gt;&gt;) {\n    loop {\n        m.lock().unwrap().remove(a_key); // lock the mutex, remove a value, unlock\n    }\n}\n\nfn insert_into(m: &amp;Mutex&lt;HashMap&lt;String, Vec&lt;i32&gt;&gt;&gt;) {\n    loop {\n        m.lock().unwrap().insert(a_string, a_vector); // lock the mutex, insert a value, unlock\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4263, "user_id": 148736, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/98ce675339d7e7c8269349943d6a0823?s=128&d=identicon&r=PG", "display_name": "Andrew Arrow", "link": "https://stackoverflow.com/users/148736/andrew-arrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 488, "favorite_count": 1, "accepted_answer_id": 39047539, "answer_count": 1, "score": 3, "last_activity_date": 1471662756, "creation_date": 1471631406, "last_edit_date": 1471662665, "question_id": 39045636, "link": "https://stackoverflow.com/questions/39045636/how-do-i-have-one-thread-that-deletes-from-a-hashmap-and-another-that-inserts", "title": "How do I have one thread that deletes from a HashMap and another that inserts?", "body": "<p>I have a hash:</p>\n\n<pre><code>let mut hash: HashMap&lt;String, Vec&lt;i32&gt;&gt; = HashMap::new();\n</code></pre>\n\n<p>and I start a thread:</p>\n\n<pre><code>thread::spawn(move || delete_from(&amp;mut hash));\n\nfn delete_from(m: &amp;mut HashMap&lt;String, Vec&lt;i32&gt;&gt;) {\n    loop {\n        m.remove(a_key)\n    }\n}\n</code></pre>\n\n<p>this works great. I have a <code>sleep</code> statement in there (not shown) and it correctly makes <code>a_key</code> and deletes it from the <code>HashMap</code>. I can see the thread slowly removing each item when I print it out.</p>\n\n<p>I want to start a 2nd thread:</p>\n\n<pre><code>thread::spawn(move || insert_into(&amp;mut hash));\n\nfn insert_into(m: &amp;mut HashMap&lt;String, Vec&lt;i32&gt;&gt;) {\n    loop {\n        m.insert(a_string, a_vector);\n    }\n}\n</code></pre>\n\n<p>that is inserting. But when I add the 2nd thread I get:</p>\n\n<blockquote>\n  <p>capture of moved value: <code>hash</code> [E0382]</p>\n</blockquote>\n\n<p>What's the right way to set this up?</p>\n\n<p><a href=\"https://github.com/andrewarrow/tinted_paradise/blob/eaed5207b4d6d08d48525066e172d5d064a31917/practice.rs\" rel=\"nofollow\">The complete code</a>.</p>\n"}, {"tags": ["debugging", "rust", "println"], "answers": [{"comments": [{"owner": {"reputation": 1054, "user_id": 187769, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9d0faacd977c18b42da378bcfe38927c?s=128&d=identicon&r=PG", "display_name": "RandomInsano", "link": "https://stackoverflow.com/users/187769/randominsano"}, "edited": false, "score": 2, "creation_date": 1471698302, "post_id": 39039723, "comment_id": 65458018, "body": "For custom strict a, you&#39;ll need to decorate them with the #derive(Debug) trait. <a href=\"http://rustbyexample.com/trait/derive.html\" rel=\"nofollow noreferrer\">rustbyexample.com/trait/derive.html</a>"}], "tags": [], "owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "is_accepted": true, "score": 28, "last_activity_date": 1557799132, "last_edit_date": 1557799132, "creation_date": 1471611620, "answer_id": 39039723, "question_id": 39039700, "link": "https://stackoverflow.com/questions/39039700/how-do-i-print-variables-in-rust-and-have-it-show-everything-about-that-variable/39039723#39039723", "title": "How do I print variables in Rust and have it show everything about that variable, like Ruby&#39;s .inspect?", "body": "<p>What you're looking for is the <a href=\"https://doc.rust-lang.org/std/fmt/trait.Debug.html\" rel=\"noreferrer\"><code>Debug</code></a> formatter:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut hash = HashMap::new();\n    hash.insert(\"Daniel\", \"798-1364\");\n    println!(\"{:?}\", hash);\n}\n</code></pre>\n\n<p>This should print:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>{\"Daniel\": \"798-1364\"}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40100077/155423\">What is the difference between println&#39;s format styles?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 8454, "user_id": 958529, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c3ec25db39c63bab1a11037649e326b8?s=128&d=identicon&r=PG", "display_name": "halfelf", "link": "https://stackoverflow.com/users/958529/halfelf"}, "is_accepted": false, "score": 15, "last_activity_date": 1557799198, "last_edit_date": 1557799198, "creation_date": 1548230497, "answer_id": 54322482, "question_id": 39039700, "link": "https://stackoverflow.com/questions/39039700/how-do-i-print-variables-in-rust-and-have-it-show-everything-about-that-variable/54322482#54322482", "title": "How do I print variables in Rust and have it show everything about that variable, like Ruby&#39;s .inspect?", "body": "<p>Rust 1.32 introduced the <a href=\"https://doc.rust-lang.org/std/macro.dbg.html\" rel=\"noreferrer\"><code>dbg</code></a> macro:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut hash = HashMap::new();\n    hash.insert(\"Daniel\", \"798-1364\");\n    dbg!(hash);\n}\n</code></pre>\n\n<p>This will print:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[src/main.rs:6] hash = {\n    \"Daniel\": \"798-1364\"\n}\n</code></pre>\n\n<p>\ud83c\udf89</p>\n"}], "owner": {"reputation": 4263, "user_id": 148736, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/98ce675339d7e7c8269349943d6a0823?s=128&d=identicon&r=PG", "display_name": "Andrew Arrow", "link": "https://stackoverflow.com/users/148736/andrew-arrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11195, "favorite_count": 3, "accepted_answer_id": 39039723, "answer_count": 2, "score": 16, "last_activity_date": 1557799198, "creation_date": 1471611545, "last_edit_date": 1557799100, "question_id": 39039700, "link": "https://stackoverflow.com/questions/39039700/how-do-i-print-variables-in-rust-and-have-it-show-everything-about-that-variable", "title": "How do I print variables in Rust and have it show everything about that variable, like Ruby&#39;s .inspect?", "body": "<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut hash = HashMap::new();\n    hash.insert(\"Daniel\", \"798-1364\");\n    println!(\"{}\", hash);\n}\n</code></pre>\n\n<p>will fail to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `std::collections::HashMap&lt;&amp;str, &amp;str&gt;` doesn't implement `std::fmt::Display`\n --&gt; src/main.rs:6:20\n  |\n6 |     println!(\"{}\", hash);\n  |                    ^^^^ `std::collections::HashMap&lt;&amp;str, &amp;str&gt;` cannot be formatted with the default formatter\n  |\n</code></pre>\n\n<p>Is there a way to say something like:</p>\n\n<pre><code>println!(\"{}\", hash.inspect());\n</code></pre>\n\n<p>and have it print out:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1) \"Daniel\" =&gt; \"798-1364\"\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 1, "creation_date": 1471608147, "post_id": 39038510, "comment_id": 65426514, "body": "Of course there is documentation. And very detailed one. Right where it should be: in the <a href=\"https://doc.rust-lang.org/std/fmt/index.html\" rel=\"nofollow noreferrer\">std::fmt</a> module."}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "reply_to_user": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 1, "creation_date": 1471608841, "post_id": 39038510, "comment_id": 65426997, "body": "Ok maybe I should update my answer. My question was not about &quot;how to use?&quot; but about : &quot;<code>?</code> means...&quot;. Not sure it&#39;s clear enough, sorry about that."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1471646372, "post_id": 39038510, "comment_id": 65446896, "body": "The documentation <a href=\"https://doc.rust-lang.org/std/fmt/index.html#formatting-traits\" rel=\"nofollow noreferrer\">does say</a> what the <code>?</code>, and other formatting characters, mean, too."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471662406, "post_id": 39038510, "comment_id": 65449641, "body": "@rap-2-h it sounds like you could ask this for just about anything in any language: Why pick <code>{}</code> for formatting at all? Why use <code>()</code> when calling a method? Why use <code>&lt;&gt;</code> for generics? Why use <code>$foo</code> for variable references? Why is the symbol <code>2</code> used to represent <code>1 + 1</code>? And so on. Ultimately, the answer will boil down to something unglamorous like &quot;because they symbol was easy to type and unused&quot; or &quot;because another language did it&quot;."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1471684569, "post_id": 39038510, "comment_id": 65454163, "body": "BTW, this is missing from the syntax index in the book."}], "answers": [{"comments": [{"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1471608643, "post_id": 39038666, "comment_id": 65426849, "body": "Ok thanks. BTW I don&#39;t understand why a question mark is used for &quot;debug&quot;. In other words, I was looking for an answer about why choose <code>?</code> and not <code>anything else</code>? (not sure to understand the relation between &quot;debug&quot; and &quot;question mark&quot;)"}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1471608981, "post_id": 39038666, "comment_id": 65427092, "body": "But maybe it&#39;s just a dumb question, sorry I can&#39;t control my mind (and my hands)!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 2, "creation_date": 1471628930, "post_id": 39038666, "comment_id": 65439646, "body": "@rap-2-h: Well, an unused symbol was needed, <code>?</code> was unused... and then again, when debugging you&#39;re often asking yourself &quot;What value does it have??&quot; so I find the question mark quite appropriate."}], "tags": [], "owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "is_accepted": true, "score": 5, "last_activity_date": 1471646290, "last_edit_date": 1471646290, "creation_date": 1471608251, "answer_id": 39038666, "question_id": 39038510, "link": "https://stackoverflow.com/questions/39038510/what-do-and-mean-in/39038666#39038666", "title": "What do `:` and `?` mean in `{:?}`", "body": "<p>The <code>:</code> separates parameter index from the format specification. The <code>{}</code> may contain parameter index, e.g. <code>{0}</code>, <code>{1}</code> etc. If you want to specify format, you must introduce it with <code>:</code>, e.g. <code>{0:?}</code>. And <code>?</code> specifies, that formatting should be done using the <code>std::fmt::Debug</code> trait instead of the default <code>std::fmt::Display</code> (other characters specify other traits, e.g. <code>x</code> for <code>Hex</code>, <code>e</code> for <code>LowerExp</code> etc.).</p>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 39038666, "answer_count": 1, "score": 2, "last_activity_date": 1471646290, "creation_date": 1471607765, "last_edit_date": 1471609173, "question_id": 39038510, "link": "https://stackoverflow.com/questions/39038510/what-do-and-mean-in", "title": "What do `:` and `?` mean in `{:?}`", "body": "<p>I use <code>{:?}</code> for debugging purpose. </p>\n\n<p>But I don't know (or maybe I just don't remember) what's the meaning of <code>:</code> and <code>?</code> individually.  Is there any reference for this?</p>\n"}, {"tags": ["string", "rust", "literals"], "answers": [{"tags": [], "owner": {"reputation": 1417, "user_id": 2977291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66afbccc6043392125ac0f0de57ccfa7?s=128&d=identicon&r=PG&f=1", "display_name": "paholg", "link": "https://stackoverflow.com/users/2977291/paholg"}, "is_accepted": true, "score": 20, "last_activity_date": 1498138245, "last_edit_date": 1498138245, "creation_date": 1471566427, "answer_id": 39029408, "question_id": 39029274, "link": "https://stackoverflow.com/questions/39029274/how-to-wrap-a-raw-string-literal-without-inserting-newlines-into-the-raw-string/39029408#39029408", "title": "How to wrap a raw string literal without inserting newlines into the raw string?", "body": "<p>While raw string literals don't support this, it can be achieved using the <a href=\"https://doc.rust-lang.org/std/macro.concat!.html\" rel=\"noreferrer\"><code>concat!</code> macro</a>:</p>\n\n<pre><code>let a = concat!(\n    r#\"some very \"#,\n    r#\"long string \"#,\n    r#\"split over lines\"#);\n\nlet b = r#\"some very long string split over lines\"#;\nassert_eq!(a, b);\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1667, "favorite_count": 2, "accepted_answer_id": 39029408, "answer_count": 1, "score": 14, "last_activity_date": 1498138245, "creation_date": 1471565104, "last_edit_date": 1481508306, "question_id": 39029274, "link": "https://stackoverflow.com/questions/39029274/how-to-wrap-a-raw-string-literal-without-inserting-newlines-into-the-raw-string", "title": "How to wrap a raw string literal without inserting newlines into the raw string?", "body": "<p>I have a raw string literal which is very long. Is it possible to split this across multiple lines without adding newline characters to the string?</p>\n\n<pre><code>file.write(r#\"This is an example of a line which is well over 100 characters in length. Id like to know if its possible to wrap it! Now some characters to justify using a raw string \\foo\\bar\\baz :)\"#)\n</code></pre>\n\n<p>In Python and C for example, you can simply write this as multiple string literals.</p>\n\n<pre><code># \"some string\"\n(r\"some \"\n r\"string\")\n</code></pre>\n\n<p>Is it possible to do something similar in Rust?</p>\n"}, {"tags": ["haskell", "generics", "rust", "typeclass", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471576202, "post_id": 39028392, "comment_id": 65411353, "body": "<a href=\"http://meta.stackexchange.com/q/39223/281829\">One question per question, please</a>."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1471594554, "post_id": 39028392, "comment_id": 65418176, "body": "Your Rust definition of <code>empty</code> is more like <code>a -&gt; ()</code> in Haskell. Better would be <code>fn empty() -&gt; Self;</code> ."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1471603374, "post_id": 39028392, "comment_id": 65423511, "body": "I have a feeling you&#39;re using Haskell&#39;s classes inappropriately. Type classes are not like OO classes; they&#39;re more like interfaces. Unless you have a requirement to abstract over various different implementations of <code>Hashset</code> I&#39;d just define a plain old type: <code>data Hashset a = ...</code>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1471575973, "last_edit_date": 1495539865, "creation_date": 1471575973, "answer_id": 39030500, "question_id": 39028392, "link": "https://stackoverflow.com/questions/39028392/bounded-trait-parameter-with-supertrait-in-rust/39030500#39030500", "title": "Bounded trait parameter with supertrait in Rust", "body": "<blockquote>\n  <p>is it possible to both constrain the associated type and use a supertrait?</p>\n</blockquote>\n\n<p>Sure, I'm not sure why you didn't just combine the two syntaxes:</p>\n\n<pre><code>trait Hashset&lt;E&gt;: HasEmpty\n    where E: Hashable\n{\n    fn size(&amp;self) -&gt; i32;\n}\n</code></pre>\n\n<p>However, you should know that <code>E</code> is <strong>not</strong> an associated type, it's just a generic type. See <a href=\"https://stackoverflow.com/q/32059370/155423\">When is it appropriate to use an associated type versus a generic type?</a> for more info.</p>\n\n<p>An associated type would be:</p>\n\n<pre><code>trait Hashset: HasEmpty {\n    type E: Hashable;\n    fn size(&amp;self) -&gt; i32;\n}\n</code></pre>\n"}], "owner": {"reputation": 29, "user_id": 6380165, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nvTQw.jpg?s=128&g=1", "display_name": "donkey_hotei", "link": "https://stackoverflow.com/users/6380165/donkey-hotei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 185, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1471576066, "creation_date": 1471558914, "last_edit_date": 1471576066, "question_id": 39028392, "link": "https://stackoverflow.com/questions/39028392/bounded-trait-parameter-with-supertrait-in-rust", "title": "Bounded trait parameter with supertrait in Rust", "body": "<p>I am new to both Haskell and Rust and am attempting to translate Haskell code into Rust so as to compare the features that support genericity. However, it seems I either need help with syntax or some fundamental concepts in Rust.</p>\n\n<p>I have this code in Haskell:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>class HasEmpty a where\n    empty :: a\n    isEmpty :: a -&gt; Bool\n\nclass Hashable a where\n    hash :: a -&gt; Int\n\nclass (HasEmpty x, Hashable (Element x))\n        =&gt; Hashset x where\n    type Element x\n    size :: x -&gt; Int\n</code></pre>\n\n<p>The important part is at the bottom where we define a type class named <code>Hashset</code> which takes a single parameter <code>x</code> and sub-classes <code>HasEmpty</code>. The body of the type class defines an associated type, which is required to be <code>Hashable</code>, and an associated method <code>size</code>.</p>\n\n<p>How can I do the same thing in Rust? Here is what I've written thus far:</p>\n\n<pre><code>trait HasEmpty {\n    fn empty(&amp;self);\n    fn is_empty(&amp;self) -&gt; bool;\n}\n\ntrait Hashable {\n    fn hash(&amp;self) -&gt; u32;\n}\n\ntrait Hashset&lt;E&gt;\n    where E: Hashable\n{\n    fn size(&amp;self) -&gt; i32;\n}\n</code></pre>\n\n<p>This compiles and allows me to say that the associated type <code>E</code> is   Hashable, but how can I 'inherit' the 'trait methods' of <code>HasEmpty</code> by using it as a supertrait? I know this is possible by saying:</p>\n\n<pre><code>trait Hashset: HasEmpty {\n    fn size(&amp;self) -&gt; i32;\n}\n</code></pre>\n\n<p>but is it possible to both constrain the associated type and use a supertrait? Perhaps I am asking the wrong question.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1471577884, "post_id": 39027899, "comment_id": 65411792, "body": "Please avoid doing so if <i>at all</i> possible.  There&#39;s a method for PIC, and you should be able to ask Cargo to link libraries.  Remember that the <code>gcc</code> crate isn&#39;t <i>just</i> for GCC: it also runs <code>clang</code> and the Microsoft compiler depending on what&#39;s installed (yes, the crate is badly named).  There&#39;s little more infuriating than running into a crate that doesn&#39;t work on your system <i>purely</i> because of some platform-specific detail.  If you <b>really</b> need this, OK, but just be sure about that first, and try to provide a fallback where possible.  <i>Please.</i>"}, {"owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "edited": false, "score": 0, "creation_date": 1471611287, "post_id": 39027899, "comment_id": 65428656, "body": "Are you trying to link a library to <code>libtest.a</code>, or your rust library?"}, {"owner": {"reputation": 112, "user_id": 54125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/237ccc9ed98702548d9dde7ed5ed2aed?s=128&d=identicon&r=PG", "display_name": "David Broderick", "link": "https://stackoverflow.com/users/54125/david-broderick"}, "edited": false, "score": 0, "creation_date": 1471626983, "post_id": 39027899, "comment_id": 65438659, "body": "I&#39;m just trying to link to an external C library.  I&#39;d actually rather not compile it but it works when I compile it (if I don&#39;t need a flag).  I can&#39;t get it to link otherwise.  I think I&#39;ll focus on linking it without compiling, since I&#39;d prefer that anyway.  Thanks."}], "answers": [{"comments": [{"owner": {"reputation": 112, "user_id": 54125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/237ccc9ed98702548d9dde7ed5ed2aed?s=128&d=identicon&r=PG", "display_name": "David Broderick", "link": "https://stackoverflow.com/users/54125/david-broderick"}, "edited": false, "score": 0, "creation_date": 1471581574, "post_id": 39028792, "comment_id": 65412474, "body": "Thanks.  I actually tried that before and it doesn&#39;t seem to work."}], "tags": [], "owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "is_accepted": true, "score": 4, "last_activity_date": 1471561518, "creation_date": 1471561518, "answer_id": 39028792, "question_id": 39027899, "link": "https://stackoverflow.com/questions/39027899/how-do-i-add-my-own-compiler-flags-when-using-gccconfig/39028792#39028792", "title": "How do I add my own compiler flags when using gcc:Config?", "body": "<p>It looks like <code>gcc::Config</code> has a function called <a href=\"http://alexcrichton.com/gcc-rs/gcc/struct.Config.html#method.flag\" rel=\"nofollow\">flag</a> for arbitrary gcc flags:</p>\n\n<pre><code>extern crate gcc;\n\nfn main() {\n    gcc::Config::new()\n        .file(\"src/test.c\")\n        .flag(\"-lmylib\")\n        .flag(\"-fPIC\")\n        .compile(\"libtest.a\");\n}\n</code></pre>\n"}], "owner": {"reputation": 112, "user_id": 54125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/237ccc9ed98702548d9dde7ed5ed2aed?s=128&d=identicon&r=PG", "display_name": "David Broderick", "link": "https://stackoverflow.com/users/54125/david-broderick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 382, "favorite_count": 0, "accepted_answer_id": 39028792, "answer_count": 1, "score": 1, "last_activity_date": 1471574161, "creation_date": 1471556216, "last_edit_date": 1471574161, "question_id": 39027899, "link": "https://stackoverflow.com/questions/39027899/how-do-i-add-my-own-compiler-flags-when-using-gccconfig", "title": "How do I add my own compiler flags when using gcc:Config?", "body": "<p>In my build.rs file, I placed the following:</p>\n\n<pre><code>extern crate gcc;\n\nfn main() {\n    gcc::Config::new().file(\"src/test.c\").compile(\"libtest.a\");\n}\n</code></pre>\n\n<p>and it works well. I want to add a couple flags, such as linking to my own library \"-lmylib\" and maybe \"-fPIC\".</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1471589509, "post_id": 39026732, "comment_id": 65415300, "body": "You could require that <code>Precision</code> implements <code>From&lt;f64&gt;</code>."}, {"owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1471625620, "post_id": 39026732, "comment_id": 65437984, "body": "@starblue I tried that too, but f32 doesn&#39;t implement From&lt;f64&gt; and that&#39;s the type I expect to be used the most"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1471684478, "post_id": 39026732, "comment_id": 65454142, "body": "Well, you could use <code>From&lt;f32&gt;</code> then?"}], "answers": [{"comments": [{"owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "edited": false, "score": 0, "creation_date": 1471554153, "post_id": 39027144, "comment_id": 65405731, "body": "I can&#39;t compile that, it says <code>missing associated type &#39;Output&#39; value</code> in the return of <code>approximate</code>, changing it to <code>ApproximateValue&lt;Output=ApproximateValue&gt;&gt;</code>simply pushes the error forward."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "edited": false, "score": 0, "creation_date": 1471558533, "post_id": 39027144, "comment_id": 65407318, "body": "@LukeB.: In the code I proposed there is no <code>Output</code> and <code>ApproximateValue</code> has no associated type... so I would need to see your code to understand what&#39;s going on (you can use the Rust playpen for example, or a gist)."}, {"owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "edited": false, "score": 0, "creation_date": 1471559066, "post_id": 39027144, "comment_id": 65407489, "body": "I just copied and pasted your code (and added an <code>unimplemented!()</code> call). I tried just pasting your code in the playground but can&#39;t compile it there either, though the error is different <code>the trait &#39;ApproximateValue&#39; cannot be made into an object</code>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 1, "last_activity_date": 1471552916, "creation_date": 1471552916, "answer_id": 39027144, "question_id": 39026732, "link": "https://stackoverflow.com/questions/39026732/how-can-i-create-specific-values-for-generic-numeric-types/39027144#39027144", "title": "How can I create specific values for generic numeric types?", "body": "<p>In this case, I would recommend that you create your own trait and provide default implementations of the methods.</p>\n\n<p>For example, I would naively imagine:</p>\n\n<pre><code>trait ApproximateValue: Zero + One {\n    fn approximate(val: f64) -&gt; ApproximateValue {\n        // some algorithm to create \"val\" from Zero and One\n    }\n}\n</code></pre>\n\n<p>then, your <code>Precision</code> associated type will have a bound of <code>ApproximateValue</code> and you will just call <code>Precision::approximate(0.1)</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "edited": false, "score": 0, "creation_date": 1471575606, "post_id": 39030380, "comment_id": 65411220, "body": "I extend by an arbitrary value because the algorithm requires AABBs with a minimum size, <code>0.1</code> is only bad if you are using something like <code>0.0001</code> to represent a meter. But then, you will run in a lot more issues than just an unoptimized tree. Anyway, thanks for you answer, I&#39;ll stick to manually building the values."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "edited": false, "score": 0, "creation_date": 1471575760, "post_id": 39030380, "comment_id": 65411259, "body": "@LukeB. If you are allowing a generic type to be passed, then you can&#39;t make a blanket declaration about how the type implements the trait or what types of values will be well optimized by the type."}, {"owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "edited": false, "score": 0, "creation_date": 1471624002, "post_id": 39030380, "comment_id": 65437129, "body": "Can you give me an example of something that could go wrong? If you dont implement the trait correctly it is not going to work, but I cant really defend my code against that can I?"}, {"owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "edited": false, "score": 0, "creation_date": 1471625543, "post_id": 39030380, "comment_id": 65437947, "body": "Unless you mean someone using something like i32 instead of f32? If so you are probably right, I haven&#39;t tested my code using integers yet so I don&#39;t know how it is going to react"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1586273162, "last_edit_date": 1586273162, "creation_date": 1471574924, "answer_id": 39030380, "question_id": 39026732, "link": "https://stackoverflow.com/questions/39026732/how-can-i-create-specific-values-for-generic-numeric-types/39030380#39030380", "title": "How can I create specific values for generic numeric types?", "body": "<blockquote>\n  <p>I need to resort to this every time I need a specific number and it is getting cumbersome. Is this really the only way?</p>\n</blockquote>\n\n<p>Basically, yes. Unless you can answer the question of \"how do you support converting a literal <code>0</code> to <code>MyCustomTypeThatImplementsTheTrait</code>\".</p>\n\n<p>You can't have it both ways \u2014 you can't ask for something to be generic and then use concrete literals. </p>\n\n<p>You can have different workarounds. Providing base values like \"zero\" and \"one\", or having a \"convert a specific type to yourself\" method, for example.</p>\n\n<p>You could also re-evaluate what you are attempting to do; perhaps you are thinking at too low a level. Indeed, what does it mean to \"extend by 0.1\" a type that represents points as floating point values between 0 and 1? </p>\n\n<p>Maybe it would be better to have an <code>expand_by_percentage</code> method instead, or something else that makes sense in the domain.</p>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28565440/155423\">How do I use integer number literals when using generic types?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27952003/155423\">Cannot create a generic function that uses a literal zero</a></li>\n<li><a href=\"https://stackoverflow.com/q/27441224/155423\">Dividing a const by a generic in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/26810793/155423\">How can I create an is_prime function that is generic over various integer types?</a></li>\n</ul>\n"}], "owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 148, "favorite_count": 0, "accepted_answer_id": 39030380, "answer_count": 2, "score": 0, "last_activity_date": 1586273162, "creation_date": 1471551168, "last_edit_date": 1471574430, "question_id": 39026732, "link": "https://stackoverflow.com/questions/39026732/how-can-i-create-specific-values-for-generic-numeric-types", "title": "How can I create specific values for generic numeric types?", "body": "<p>I'm working on a library which will provide a trait for axis-aligned bounding boxes (AABB) operations. The trait is declared like this:</p>\n\n<pre><code>trait Aabb {\n    type Precision : Zero + One + Num + PartialOrd + Copy;\n    // [...]\n}\n</code></pre>\n\n<p>I don't care which precision the user chooses, as long as these constraints are respected (though I don't really expect integer types to be chosen). </p>\n\n<p>I'm having trouble using literals. Some operations require constant values, as an example:</p>\n\n<pre><code>let extension = 0.1;\naabb.extend(extension);\n</code></pre>\n\n<p>This doesn't work because <code>Aabb::extend</code> expects <code>Aabb::Precision</code> and not a float. My solution was something like this:</p>\n\n<pre><code>let mut ten = Aabb::Precision::zero();\nfor _ in 0..10 {\n    ten = ten + Aabb::Precision::one();\n}\n\naabb_extension = Aabb::Precision::one() / ten;\n</code></pre>\n\n<p>This works, but I need to resort to this every time I need a specific number and it is getting cumbersome. Is this really the only way?</p>\n"}, {"tags": ["struct", "rust"], "answers": [{"tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 5, "last_activity_date": 1471549202, "creation_date": 1471549202, "answer_id": 39026286, "question_id": 39026186, "link": "https://stackoverflow.com/questions/39026186/how-to-create-a-null-pointer-in-a-struct/39026286#39026286", "title": "How to create a null pointer in a struct?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/stable/std/ptr/fn.null.html\" rel=\"noreferrer\"><code>std::ptr::null</code></a>:</p>\n\n<pre><code>struct Test&lt;T&gt; {\n     data: String,\n     ponts: *const Option&lt;Assocc&lt;T&gt;&gt;,\n}\n\nstruct Assocc&lt;T&gt; {\n    data: T,\n}\n\nimpl&lt;T&gt; Test&lt;T&gt; {\n   fn new(data: String) -&gt; Test&lt;T&gt; {\n      Test {\n          data: data,\n          ponts: std::ptr::null(),\n      }\n   }\n}\n\nimpl&lt;T&gt; Assocc&lt;T&gt; {\n  fn new(data: T) -&gt; Assocc&lt;T&gt; {\n      Assocc {\n          data: data,\n      }\n  }\n}\n</code></pre>\n\n<p>But are you sure you want to use raw pointers in Rust? In Rust, we mostly use <a href=\"https://doc.rust-lang.org/stable/book/references-and-borrowing.html\" rel=\"noreferrer\">references</a>.</p>\n\n<p>A more idiomatic way to do this in Rust is the following:</p>\n\n<pre><code>struct Test&lt;'a, T: 'a&gt; {\n     data: String,\n     ponts: Option&lt;&amp;'a Assocc&lt;T&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; Test&lt;'a, T&gt; {\n   fn new(data: String) -&gt; Test&lt;'a, T&gt; {\n      Test {\n          data: data,\n          ponts: None,\n      }\n   }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "is_accepted": false, "score": 15, "last_activity_date": 1471549753, "creation_date": 1471549753, "answer_id": 39026427, "question_id": 39026186, "link": "https://stackoverflow.com/questions/39026186/how-to-create-a-null-pointer-in-a-struct/39026427#39026427", "title": "How to create a null pointer in a struct?", "body": "<p>There are a few issues with your code. To start out, Rust type names are generally CamelCased, so let's start with that:</p>\n\n<pre><code>struct Test {\n     data: String,\n     ponts: *const Option&lt;Assocc&lt;T&gt;&gt;,\n}\n\nstruct Assocc&lt;T&gt; {\n    data: T,\n}\n</code></pre>\n\n<p>Next, because <code>Test</code> is enclosing something with a generic type <code>T</code>, it itself needs to be generic:</p>\n\n<pre><code>struct Test&lt;T&gt; {\n     data: String,\n     ponts: *const Option&lt;Assocc&lt;T&gt;&gt;,\n}\n\nstruct Assocc&lt;T&gt; {\n    data: T,\n}\n</code></pre>\n\n<p>Unless you're doing FFI where you absolutely need to store a raw pointer, it's probably better to just have your <code>Test</code> struct own the <code>Assoc</code>:</p>\n\n<pre><code>struct Test&lt;T&gt; {\n     data: String,\n     ponts: Option&lt;Assocc&lt;T&gt;&gt;,\n}\n\nstruct Assocc&lt;T&gt; {\n    data: T,\n}\n</code></pre>\n\n<p>And some of the types in the <code>impl</code> blocks need to be changed around to add some generics:</p>\n\n<pre><code>impl&lt;T&gt; Test&lt;T&gt; {\n    fn new(data: String) -&gt; Test&lt;T&gt; {\n        Test {\n            data: data,\n            points: None,\n        }\n    }\n}\n\nimpl&lt;T&gt; Assocc&lt;T&gt; {\n    fn new(data: T) -&gt; Assocc&lt;T&gt; {\n        Assocc { data: data }\n    }\n}\n</code></pre>\n\n<p>Finally, let's add a main function to ensure that we can actually use the structs as we're expecting:</p>\n\n<pre><code>struct Test&lt;T&gt; {\n    data: String,\n    ponts: Option&lt;Assocc&lt;T&gt;&gt;,\n}\n\nstruct Assocc&lt;T&gt; {\n    data: T,\n}\n\nimpl&lt;T&gt; Test&lt;T&gt; {\n    fn new(data: String) -&gt; Test&lt;T&gt; {\n        Test {\n            data: data,\n            ponts: None,\n        }\n    }\n}\n\nimpl&lt;T&gt; Assocc&lt;T&gt; {\n    fn new(data: T) -&gt; Assocc&lt;T&gt; {\n        Assocc { data: data }\n    }\n}\n\nfn main() {\n    let mut t = Test::new(\"Hello!\".to_string());\n    t.ponts = Some(Assocc::new(32));\n}\n</code></pre>\n"}], "owner": {"reputation": 93, "user_id": 4329758, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3b069caffaa9e1b0ee8c1975dff70e14?s=128&d=identicon&r=PG&f=1", "display_name": "Alexsandr Startsev", "link": "https://stackoverflow.com/users/4329758/alexsandr-startsev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10349, "favorite_count": 1, "accepted_answer_id": 39026286, "answer_count": 2, "score": 6, "last_activity_date": 1471574286, "creation_date": 1471548803, "last_edit_date": 1471574286, "question_id": 39026186, "link": "https://stackoverflow.com/questions/39026186/how-to-create-a-null-pointer-in-a-struct", "title": "How to create a null pointer in a struct?", "body": "<p>How do I create null pointer properties in struct like in C++? I do not quite understand how to make a pointer to an empty space in the memory.</p>\n\n<p><strong>C++</strong></p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>struct test{\n    string data;\n    assocc *el;\n}\nsrtuct assocc {\n  T *data;\n}\n</code></pre>\n\n<p><strong>Rust</strong></p>\n\n\n\n<pre><code>struct test {\n     data: String,\n     ponts: *const Option&lt;assocc&lt;T&gt;&gt;,\n}\n\nstruct assocc&lt;T&gt; {\n    data: T,\n}\n\nimpl test {\n   fn new(data: String) -&gt; test {\n      test {\n          data: data,\n          ponts: None,/*This don't work*/\n      }\n   }\n}\n\nimpl&lt;T&gt; assocc&lt;T&gt; {\n  fn new(data: T) -&gt; assocc {\n      assocc { \n          data: data,\n      }\n  }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 339644, "user_id": 118068, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/077db5466d3b58e7bbbd498dca173f04?s=128&d=identicon&r=PG", "display_name": "Marc B", "link": "https://stackoverflow.com/users/118068/marc-b"}, "edited": false, "score": 0, "creation_date": 1471538977, "post_id": 39023559, "comment_id": 65397726, "body": "&quot;contact&quot; in your title... did you mean &quot;concat&quot;?"}], "answers": [{"comments": [{"owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "edited": false, "score": 0, "creation_date": 1471550278, "post_id": 39024422, "comment_id": 65403927, "body": "this doesn&#39;t work. &lt;std macros&gt;:2:1: 2:61 error: borrowed value does not live long enough &lt;std macros&gt;:2 $ crate :: fmt :: format ( format_args ! ( $ ( $ arg ) * ) ) )"}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "edited": false, "score": 0, "creation_date": 1471550609, "post_id": 39024422, "comment_id": 65404088, "body": "Could you please post a <a href=\"http://stackoverflow.com/help/mcve\">MCVE</a>? As I can see from the <code>clap</code> documentation, some <code>help</code> methods take a <code>&amp;str</code>, while others take <code>Into&lt;&amp;str&gt;</code>, so perhaps removing the <code>&amp;</code> before <code>format!</code> will fix you error."}, {"owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "edited": false, "score": 0, "creation_date": 1471551206, "post_id": 39024422, "comment_id": 65404359, "body": "Sure, but I tried to remove &amp; and there is no overloaded version. The problem is not with the library. This is more general problem you have a method argument in DSL which takes &amp;str and you have a combination of literal strings and constants to pass."}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "edited": false, "score": 0, "creation_date": 1471560396, "post_id": 39024422, "comment_id": 65407891, "body": "I edited my answer to provide you an alternative way of doing what you want."}, {"owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "edited": false, "score": 0, "creation_date": 1471586981, "post_id": 39024422, "comment_id": 65414131, "body": "Does anybody know about merge request for rustc to implement some kind of AST transformation to join literal and const strings like several literal strings in a row (like in C)? Were they rejected?"}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "edited": false, "score": 1, "creation_date": 1471614124, "post_id": 39024422, "comment_id": 65430657, "body": "I don&#39;t know, but that <i>might</i> be possible with <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0911-const-fn.md\" rel=\"nofollow noreferrer\"><code>const fn</code></a> in the future."}], "tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 8, "last_activity_date": 1471560378, "last_edit_date": 1471560378, "creation_date": 1471542098, "answer_id": 39024422, "question_id": 39023559, "link": "https://stackoverflow.com/questions/39023559/how-to-concatenate-a-literal-string-with-a-const-string/39024422#39024422", "title": "How to concatenate a literal string with a const string?", "body": "<p>You can simply use a reference and the <code>format!</code> macro:</p>\n\n<pre><code>.help(&amp;format!(\"this parameter is for (default: {})\", DEFAULT_VALUE));\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/31383\" rel=\"noreferrer\">What you want to do is not possible in Rust</a>:</p>\n\n<blockquote>\n  <p>This is a fundamental limitation of macros in that they are working\n  with nothing more than various tokens. They have no understanding of\n  types, just tokens that look like types. When concat! sees DESCRIPTION\n  it just sees an identifier, it has no idea that it is a string\n  constant. What could work here though is some sort of string\n  concatenation const fn as that could take the values of constants to\n  create new constants, although that would require some dark magic.</p>\n</blockquote>\n\n<p>You could do this instead:</p>\n\n<pre><code>macro_rules! DEFAULT {\n    () =&gt; { \"1\" };\n}\n\nfn main() {\n    let params = App::new(\"app\")\n        .arg(Arg::with_name(\"p\")\n             // here 100 lines of the uninterruptable expression\n             .help(concat!(\"parameter p (DEFAULT: \", DEFAULT!(), \")\")))\n             // here also 100 lines of the uninterruptable expression\n        .get_matches();\n    println!(\"param p = {}\", params.value_of(\"p\").unwrap())\n}\n</code></pre>\n\n<p>The use of a macro instead of a constant allows you to use the <code>concat!</code> macro.</p>\n"}, {"tags": [], "owner": {"reputation": 1414, "user_id": 7314180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OZkLQ.png?s=128&g=1", "display_name": "YenForYang", "link": "https://stackoverflow.com/users/7314180/yenforyang"}, "is_accepted": false, "score": 3, "last_activity_date": 1606084623, "last_edit_date": 1606084623, "creation_date": 1606084110, "answer_id": 64960276, "question_id": 39023559, "link": "https://stackoverflow.com/questions/39023559/how-to-concatenate-a-literal-string-with-a-const-string/64960276#64960276", "title": "How to concatenate a literal string with a const string?", "body": "<p>If you're working with <a href=\"https://blog.rust-lang.org/2020/08/27/Rust-1.46.0.html\" rel=\"nofollow noreferrer\">Rust 1.46.0</a><sup>1</sup> or later, check out the <a href=\"https://crates.io/crates/const_format\" rel=\"nofollow noreferrer\"><code>const_format</code></a> crate on (<a href=\"https://crates.io/crates/const_format\" rel=\"nofollow noreferrer\">crates.io</a> | <a href=\"https://docs.rs/const_format\" rel=\"nofollow noreferrer\">docs.rs</a>).</p>\n<ul>\n<li><p><a href=\"https://docs.rs/const_format/*/const_format/macro.concatcp.html\" rel=\"nofollow noreferrer\"><code>concatcp</code></a>: Concatenates <code>integers</code><sup>2</sup>, <code>bool</code>, and <code>&amp;str</code> constants into <code>&amp;'static str</code>.</p>\n</li>\n<li><p><a href=\"https://docs.rs/const_format/*/const_format/macro.formatcp.html\" rel=\"nofollow noreferrer\"><code>formatcp</code></a>: <a href=\"https://doc.rust-lang.org/std/macro.format.html\" rel=\"nofollow noreferrer\"><code>format</code></a>-like formatting (emits a <code>&amp;'static str</code>); takes the same primitives as <a href=\"https://docs.rs/const_format/*/const_format/macro.concatcp.html\" rel=\"nofollow noreferrer\"><code>concatcp</code></a></p>\n</li>\n</ul>\n<p>So for your example, <code>formatcp</code> would provide the most flexible solution and does not require the local variable you mention (I'm assuming you're referring to the heap-allocated String resulting from <code>alloc::fmt::format</code> in the <code>format!</code> macro):</p>\n<pre><code>use clap::{Arg, App};  \nuse const_format::formatcp;  \n  \nconst DEFAULT: &amp;'static str = &quot;1&quot;;  \n\nfn main() {  \n  let params = App::new(&quot;app&quot;)  \n               .arg(Arg::with_name(&quot;p&quot;)  \n                    .help(formatcp!(&quot;parameter p (DEFAULT: {})&quot;, DEFAULT)))  \n               .get_matches();  \n  println!(&quot;param p = {}&quot;, params.value_of(&quot;p&quot;).unwrap())  \n}\n</code></pre>\n<p>Running with <code>app -h</code>  gives</p>\n<pre><code>app \n\nUSAGE:\n    app [p]\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nARGS:\n    &lt;p&gt;    parameter p (DEFAULT: 1)\n</code></pre>\n<hr />\n<p>Limitations of all macros in the crate:</p>\n<ul>\n<li>Macros that expand to <code>&amp;'static str</code> (i.e. the ones I mentioned) only accept constants from <strong>concrete</strong> types:\n<ul>\n<li><code>Type::&lt;u8&gt;::FOO</code>  OK \u2705</li>\n<li><code>Type::&lt;TYPE_PARAMETER&gt;::FOO</code> BAD \u274c</li>\n</ul>\n</li>\n<li>Integer arguments need to be <a href=\"https://docs.rs/const_format/*/const_format/index.html#integer-arguments\" rel=\"nofollow noreferrer\">constrained</a> (i.e. must add <code>i*/u*</code> suffix when using literals).</li>\n<li>Can't be used in some places that take string literals only, namely <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"nofollow noreferrer\">attributes</a> which can require <a href=\"https://doc.rust-lang.org/reference/expressions/literal-expr.html\" rel=\"nofollow noreferrer\">LiteralExpression</a>.\n<ul>\n<li><code>#[doc = &quot;ab&quot;]</code> !=  <code>#[doc = concatcp!(&quot;a&quot;, &quot;b&quot;)]</code></li>\n</ul>\n</li>\n</ul>\n<hr />\n<p><sup><sup>1</sup> This is needed for the <a href=\"https://github.com/rust-lang/rust/pull/72437/\" rel=\"nofollow noreferrer\">stabilized <code>const fn</code> improvements</a>, which allow for looping without &quot;<a href=\"https://crates.io/crates/const_concat/0.1.0\" rel=\"nofollow noreferrer\">heinous hackery</a>&quot; involving <a href=\"https://doc.rust-lang.org/std/mem/fn.transmute.html\" rel=\"nofollow noreferrer\">std::mem::transmute</a> </sup><br />\n<sup><sup>2</sup> More specifically, this would be all the <code>i*/u*</code>  primitives. Note that if you'll have to <a href=\"https://docs.rs/const_format/*/const_format/index.html#integer-arguments\" rel=\"nofollow noreferrer\">constrain</a> the type yourself by using the suffix desired if you're passing in literals. </sup></p>\n"}], "owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3563, "favorite_count": 0, "accepted_answer_id": 39024422, "answer_count": 2, "score": 9, "last_activity_date": 1606084623, "creation_date": 1471538836, "last_edit_date": 1471552031, "question_id": 39023559, "link": "https://stackoverflow.com/questions/39023559/how-to-concatenate-a-literal-string-with-a-const-string", "title": "How to concatenate a literal string with a const string?", "body": "<p>I am trying to instantiate an argument parser (clap).\nThere is code like:</p>\n\n<pre><code>const DEFAULT_VALUE: &amp;'static str = \"12312312\";\n// ...\n.help(\"this parameter is for (default:\" + DEFAULT_VALUE + \")\")\n// ...\n</code></pre>\n\n<p>I looked through similar existing questions and discovered concat! macro and lazy_static.</p>\n\n<p>First option doesn't fit and there is no example for lazy_static.\nIf it's possible it's will be over complicated anyway because lazy_static requires to define a block in a separate place.</p>\n\n<p>I am looking some concise syntax sugar with a macro in place, without a lot of type overhead.</p>\n\n<p>If define a local variable it could get to high because DSL for clap could be very long. It's not convenient, because it rips the string from its logical place in code.</p>\n\n<p>Another approach to define static variable for the whole help string but it posses the same drawback as the approach above plus namespace pollution.</p>\n\n<hr>\n\n<p>Suggested solution with format! doesn't fit too. It requires to define a local variable.</p>\n\n<hr>\n\n<p>Example </p>\n\n<pre><code>extern crate clap;\n\nuse clap::{Arg, App};\n\nconst DEFAULT: &amp;'static str = \"1\";\n\nfn main() {\n    let params = App::new(\"app\")\n        .arg(Arg::with_name(\"p\")\n             // here 100 lines of the uninterruptable expression\n             .help(&amp;format!(\"parameter p (DEFAULT: {})\", DEFAULT)))\n             // here also 100 lines of the uninterruptable expression\n        .get_matches();\n    println!(\"param p = {}\", params.value_of(\"p\").unwrap())\n}\n</code></pre>\n\n<p>Cargo.toml</p>\n\n<pre><code>[package]\n\nname = \"demo-clap\"\nversion = \"1.0.0\"\n[dependencies]\n\nclap = \"2.10.0\"\n</code></pre>\n\n<p>Compilation error</p>\n\n<pre><code>&lt;std macros&gt;:2:1: 2:61 error: borrowed value does not live long enough\n&lt;std macros&gt;:2 $ crate :: fmt :: format ( format_args ! ( $ ( $ arg ) * ) ) )\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nsrc/main.rs:11:21: 11:66 note: in this expansion of format! (defined in &lt;std macros&gt;)\nsrc/main.rs:13:24: 15:2 note: reference must be valid for the block suffix following statement 0 at 13:23...\nsrc/main.rs:13         .get_matches();\n                                      ^\nsrc/main.rs:8:5: 13:24 note: ...but borrowed value is only valid for the statement at 8:4\nsrc/main.rs:8     let params = App::new(\"app\")\n                  ^\nsrc/main.rs:8:5: 13:24 help: consider using a `let` binding to increase its lifetime\nsrc/main.rs:8     let params = App::new(\"app\")\n                  ^\nerror: aborting due to previous error\nerror: Could not compile `demo-clap`.\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 2, "creation_date": 1471537893, "post_id": 39023044, "comment_id": 65397059, "body": "opening a duplicate is not the way to go if another question did not receive an answer, if you want to increase the visibility of the other question, consider adding a <a href=\"http://stackoverflow.com/help/bounty\">bounty</a> to it"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1471547375, "post_id": 39023044, "comment_id": 65402394, "body": "It does not look a complete duplicate to me, could you expand how this question is different from <a href=\"http://stackoverflow.com/questions/30330519/compile-time-generic-type-size-check\">this related question</a> you linked?"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 2, "creation_date": 1471571399, "post_id": 39023044, "comment_id": 65410323, "body": "<code>mem::size_of</code> is not yet evaluable at compile time. Wait a year and the story might change (but maybe not, who knows?)."}], "answers": [{"comments": [{"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1471642218, "post_id": 39047649, "comment_id": 65445712, "body": "Thanks. Can you explain what type mean exclamation mark here ` -&gt; !` ?"}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 1, "creation_date": 1471645814, "post_id": 39047649, "comment_id": 65446745, "body": "It means it is a <a href=\"https://doc.rust-lang.org/reference.html#diverging-functions\" rel=\"nofollow noreferrer\">diverging function</a>."}, {"owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "reply_to_user": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1471889470, "post_id": 39047649, "comment_id": 65519980, "body": "For the record, I&#39;ve removed the <code>-&gt; !</code> that @user1034749 asked about, due to <a href=\"https://github.com/rust-lang/rust/issues/35849\" rel=\"nofollow noreferrer\">a compiler bug</a>."}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1471895043, "post_id": 39047649, "comment_id": 65522792, "body": "@durka42 for the note I create this bug report :)"}], "tags": [], "owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "is_accepted": true, "score": 2, "last_activity_date": 1471889221, "last_edit_date": 1471889221, "creation_date": 1471640645, "answer_id": 39047649, "question_id": 39023044, "link": "https://stackoverflow.com/questions/39023044/check-pointer-size-at-compile-time/39047649#39047649", "title": "check pointer size at compile time", "body": "<p>For pointers there is a configuration flag that you can check. You could do this to force a compile-time error:</p>\n\n<pre><code>#[cfg(not(target_pointer_width = \"64\"))]\nconst ERROR: () = \"Your pointers are too small. Please try again with a more expensive computer.\";\n</code></pre>\n\n<p>In general there is the \"transmute trick\": to assert the size of something at compile-time, transmute it to something which is known to have the correct size in a dead function. For instance:</p>\n\n<pre><code>#[allow(dead_code)]\nfn _assert_pointers_are_64bits() {\n    unsafe {\n        ::std::mem::transmute::&lt;*const f64, [u8; 8]&gt;(panic!());\n    }\n}\n</code></pre>\n\n<p>These tricks will have to do until <code>size_of</code> is made into a const fn.</p>\n"}], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1214, "favorite_count": 1, "accepted_answer_id": 39047649, "answer_count": 1, "score": 2, "last_activity_date": 1471889221, "creation_date": 1471536960, "last_edit_date": 1495542260, "question_id": 39023044, "link": "https://stackoverflow.com/questions/39023044/check-pointer-size-at-compile-time", "title": "check pointer size at compile time", "body": "<p>I found similar question <a href=\"https://stackoverflow.com/questions/30330519/compile-time-generic-type-size-check\">Compile-time generic type size check</a>, but it not received any answer.</p>\n\n<p>The problem is in cooperation with other programming language via FFI + unsafe,\nI want to be sure that <code>mem::size_of::&lt;*mut T&gt;()</code> have suitable size.\nI found such <code>static_assert</code> macro in Internet:</p>\n\n<pre><code>macro_rules! static_assert {\n    (type $t:ty; ) =&gt; (\n        type __StaticAssert = $t;\n    );\n\n    (type $t:ty; $e:expr $(, $ee:expr)*) =&gt; (\n        static_assert!(type ($t, [i8; 0 - ((false == ($e)) as usize)]); $($ee),*);\n    );\n\n    ($e:expr $(, $ee:expr)*) =&gt; (\n        static_assert!(type [i8; 0 - ((false == ($e)) as usize)]; $($ee),*);\n    );\n}\n\nstatic_assert!(2 == 2);\n</code></pre>\n\n<p>it works, but if I use <code>mem::size_of::&lt;*const f64&gt;()</code> inside macro all fails,\nbecause of: <code>calls in constants are limited to struct and enum constructors</code>,\nany idea how to calculate <code>size_of</code>  <code>*const f64</code> at compile time?</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 1, "creation_date": 1471522538, "post_id": 39017871, "comment_id": 65386263, "body": "From @skade_: here&#39;s a tracking issues discussing the nightly feature <code>concat_idents</code>, which allows that. <a href=\"https://github.com/rust-lang/rust/issues/29599\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/29599</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1485010480, "post_id": 39017871, "comment_id": 70751720, "body": "See also <a href=\"http://stackoverflow.com/q/23061702/155423\">stackoverflow.com/q/23061702/155423</a>; <a href=\"http://stackoverflow.com/q/24905160/155423\">stackoverflow.com/q/24905160/155423</a>; <a href=\"http://stackoverflow.com/q/27415011/155423\">stackoverflow.com/q/27415011/155423</a>."}], "answers": [{"comments": [{"owner": {"reputation": 1120, "user_id": 2647192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b37079565635fea4d46f300ce26766e1?s=128&d=identicon&r=PG", "display_name": "allTwentyQuestions", "link": "https://stackoverflow.com/users/2647192/alltwentyquestions"}, "edited": false, "score": 1, "creation_date": 1471525794, "post_id": 39018322, "comment_id": 65388558, "body": "Just to clarify, this is not possible due to <a href=\"https://doc.rust-lang.org/book/macros.html#hygiene\" rel=\"nofollow noreferrer\">macro hygiene</a>, which is a feature as much as it is a limitation."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 1120, "user_id": 2647192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b37079565635fea4d46f300ce26766e1?s=128&d=identicon&r=PG", "display_name": "allTwentyQuestions", "link": "https://stackoverflow.com/users/2647192/alltwentyquestions"}, "edited": false, "score": 3, "creation_date": 1471526250, "post_id": 39018322, "comment_id": 65388889, "body": "@allTwentyQuestions: Actually, it&#39;s a more fundamental limitation than that.  Short version: in order for this to work, you would have to be able to use a macro in &quot;identifier&quot; position.  You can&#39;t.  The alternative would be to have some kind of explicit &quot;token concatenation&quot; <i>syntax</i>.  There isn&#39;t.  Hygiene doesn&#39;t really have anything to do with it."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 1, "creation_date": 1471577812, "post_id": 39018322, "comment_id": 65411777, "body": "Putting them in a module doesn&#39;t solve having first characters as numbers."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1471578007, "post_id": 39018322, "comment_id": 65411811, "body": "@ideasman42: <i>Nothing</i> will solve having the first characters as numbers.  You&#39;re just going to have to name them differently, or do the prefixing by hand."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1484885624, "post_id": 39018322, "comment_id": 70704076, "body": "To those who edited this answer: that&#39;s <i>not</i> an RFC, it&#39;s a tracking issue for a feature which doesn&#39;t solve this problem."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 1, "creation_date": 1485030751, "post_id": 39018322, "comment_id": 70758326, "body": "Even though this isn&#39;t in stable, thaught it worth mentioning some work has been done on this (added own answer instead of editing this one)."}, {"owner": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "edited": false, "score": 3, "creation_date": 1553980961, "post_id": 39018322, "comment_id": 97588887, "body": "This answer is wrong, concat_idents!() does this exact task."}, {"owner": {"reputation": 150, "user_id": 1567835, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f7149b8fed7acb1fe84219debfd9183c?s=128&d=identicon&r=PG", "display_name": "Martin", "link": "https://stackoverflow.com/users/1567835/martin"}, "edited": false, "score": 0, "creation_date": 1599736101, "post_id": 39018322, "comment_id": 112869002, "body": "<a href=\"https://www.youtube.com/watch?v=17KmNrG9pE4\" rel=\"nofollow noreferrer\">youtube.com/watch?v=17KmNrG9pE4</a>"}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "reply_to_user": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "edited": false, "score": 0, "creation_date": 1609363060, "post_id": 39018322, "comment_id": 115826099, "body": "@LukeDupin however it sounds like that macro in practice can&#39;t actually be used to name new identifiers only refer to existing ones, because macro invocations aren&#39;t allowed in identifier position"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1484885587, "last_edit_date": 1484885587, "creation_date": 1471523504, "answer_id": 39018322, "question_id": 39017871, "link": "https://stackoverflow.com/questions/39017871/how-to-prefix-suffix-identifiers-within-a-macro/39018322#39018322", "title": "How to prefix/suffix identifiers within a macro?", "body": "<blockquote>\n  <p>[...] is it possible to add a prefix to the function?</p>\n</blockquote>\n\n<p>No.  Really, really no.  <em>Super</em> totally not at all even in the slightest.</p>\n\n<blockquote>\n  <p>I would like to have use a common prefix.</p>\n</blockquote>\n\n<p>Put them all in a <code>mod</code> instead.</p>\n"}, {"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1485049130, "post_id": 41784145, "comment_id": 70762727, "body": "The reason I didn&#39;t bring up <code>concat_idents!</code> is that it is, as is mentioned in that issue, <i>useless</i>.  It can&#39;t be fixed; the problem is with how macros <i>themselves</i> work.  No amount of work on <code>concat_idents!</code> is going to improve the situation; the macro system will have to be changed to either allow for eager re-tokenisation of AST nodes, or the compiler has to be modified to allow macros everywhere is uses names (which would be very disruptive).  So even if there was an issue relevant to this problem, it wouldn&#39;t be this one.  This is why I don&#39;t bother mentioning it."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1485331906, "post_id": 41784145, "comment_id": 70876913, "body": "Still worth bringing it up, even if only to note that it was possible / planned (but likely won&#39;t be supported)."}, {"owner": {"reputation": 1893, "user_id": 3831435, "user_type": "registered", "accept_rate": 77, "profile_image": "https://graph.facebook.com/829983118/picture?type=large", "display_name": "Luke Dupin", "link": "https://stackoverflow.com/users/3831435/luke-dupin"}, "edited": false, "score": 1, "creation_date": 1553980492, "post_id": 41784145, "comment_id": 97588767, "body": "concat_idents! is awesome!  You can finally add constant names to your idents inside macros.  concat_idents(foo, $bar). This is essential for meta names required to perform some macro operations.  Sadly it only works in nightly as of now."}], "tags": [], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "is_accepted": false, "score": 4, "last_activity_date": 1485370525, "last_edit_date": 1485370525, "creation_date": 1485030688, "answer_id": 41784145, "question_id": 39017871, "link": "https://stackoverflow.com/questions/39017871/how-to-prefix-suffix-identifiers-within-a-macro/41784145#41784145", "title": "How to prefix/suffix identifiers within a macro?", "body": "<p>Currently this is not supported in stable.</p>\n\n<hr>\n\n<p>However there is a feature in nightly called <code>concat_idents</code>:</p>\n\n<pre><code>concat_idents!(my_test_, $id)\n</code></pre>\n\n<p>See</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/nightly/std/macro.concat_idents.html\" rel=\"noreferrer\">Rust docs</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/29599\" rel=\"noreferrer\">Issue</a></li>\n</ul>\n\n<p><em>Update: it seems there aren't near-term plans to add this into stable releases, see issue.</em></p>\n"}, {"tags": [], "owner": {"reputation": 4036, "user_id": 667457, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/33f9a9233b25c8230f5b5edb38493842?s=128&d=identicon&r=PG", "display_name": "Jeff Burdges", "link": "https://stackoverflow.com/users/667457/jeff-burdges"}, "is_accepted": false, "score": 2, "last_activity_date": 1488325794, "creation_date": 1488325794, "answer_id": 42520832, "question_id": 39017871, "link": "https://stackoverflow.com/questions/39017871/how-to-prefix-suffix-identifiers-within-a-macro/42520832#42520832", "title": "How to prefix/suffix identifiers within a macro?", "body": "<p>As mentioned, you should use submodules for this, but remember that macros can create submodules, submodules can be nested allowing their names to overlap, submodules can provide <code>impl</code>s, and the <code>tests</code> submodule is not magic.</p>\n\n<p>I once submitted a <a href=\"https://github.com/valarauca/consistenttime/pull/8\" rel=\"nofollow noreferrer\">pull request</a> that avoids numerous \"boiler plate names\" by refactoring the code using these tricks, although the <code>#[no_mangle]</code> exports make it harder. </p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7436, "favorite_count": 2, "closed_date": 1514230029, "accepted_answer_id": 39018322, "answer_count": 3, "score": 23, "last_activity_date": 1488325794, "creation_date": 1471522185, "last_edit_date": 1485038704, "question_id": 39017871, "link": "https://stackoverflow.com/questions/39017871/how-to-prefix-suffix-identifiers-within-a-macro", "closed_reason": "Duplicate", "title": "How to prefix/suffix identifiers within a macro?", "body": "<p>When using a macro that defines a function, is it possible to add a prefix to the function?</p>\n\n<pre><code>macro_rules! my_test {\n    ($id:ident, $arg:expr) =&gt; {\n        #[test]\n        fn $id() {\n            my_test_impl(stringify!($id), $arg);\n        }\n    }\n}\n</code></pre>\n\n<p>For example, <code>fn my_test_$id() {</code></p>\n\n<p>I'm defining tests using an identifier which may begin with numbers, and I would like to use a common prefix.</p>\n"}, {"tags": ["floating-point", "rust", "literals"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471574045, "post_id": 39016996, "comment_id": 65410894, "body": "<i>Only if you use an explicit type suffix is it allowed to omit the point</i> \u2014 so, the answer to the question <i>Is there a way to have Rust define an array of f64 / f32 without having to add the decimal point to every value</i> is <b>yes</b>."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471595466, "post_id": 39016996, "comment_id": 65418726, "body": "That&#39;s pedantic and not what the question is about."}], "tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": true, "score": 8, "last_activity_date": 1471519538, "creation_date": 1471519538, "answer_id": 39016996, "question_id": 39016925, "link": "https://stackoverflow.com/questions/39016925/is-it-possible-to-coerce-int-literals-to-floats-in-rust-without-adding-decimal-p/39016996#39016996", "title": "Is it possible to coerce int literals to floats in Rust without adding decimal point?", "body": "<p>No, it must have a decimal point.</p>\n\n<p>You can use float literals with just the point: <code>0.</code> or with the point and a decimal: <code>0.0</code>.</p>\n\n<p>Only if you use an explicit type suffix is it allowed to omit the point: <code>0f32</code> or <code>0_f32</code> and so on are legal.</p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 39016996, "answer_count": 1, "score": 1, "last_activity_date": 1471568238, "creation_date": 1471519319, "last_edit_date": 1471568238, "question_id": 39016925, "link": "https://stackoverflow.com/questions/39016925/is-it-possible-to-coerce-int-literals-to-floats-in-rust-without-adding-decimal-p", "title": "Is it possible to coerce int literals to floats in Rust without adding decimal point?", "body": "<p>I have some test data formatted from another language. The data is an array of floats, however some members miss the decimal point.</p>\n\n<p><code>[0, 0], [0, 1], [1, 0.5], ...</code> (100's more items).</p>\n\n<p>Is there a way to have Rust define an array of <code>f64</code> / <code>f32</code> without having to add the decimal point to every value?</p>\n"}, {"tags": ["arrays", "rust", "simd", "reinterpret-cast"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1471519230, "post_id": 39014338, "comment_id": 65384027, "body": "I&#39;d be interested to know if there&#39;s a good reason why <code>f32x8</code> doesn&#39;t implement <code>Borrow&lt;[f32]&gt;</code> like Vec does, which would be a half-way house.  Maybe the layout/ordering isn&#39;t guaranteed to be compatible."}], "answers": [{"comments": [{"owner": {"reputation": 647, "user_id": 4037231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fe12602a9e9ca343dc477b81e1244b1b?s=128&d=identicon&r=PG&f=1", "display_name": "kmky", "link": "https://stackoverflow.com/users/4037231/kmky"}, "edited": false, "score": 0, "creation_date": 1471521933, "post_id": 39017255, "comment_id": 65385834, "body": "But I&#39;m mostly interested in whether it is already undefined behaviour to do the transmute or is it fine to do the transmute assuming that later on you use the resulting reference variable in a memory-safe manner."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1471527444, "post_id": 39017255, "comment_id": 65389754, "body": "just using it in a memory safe manner does not make it memory safe, you need an abstraction boundary. So if you dump all the unsafety into a function, then you can&#39;t ever use it wrongly outside that function if you setup the lifetimes correctly."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 1, "last_activity_date": 1471520322, "creation_date": 1471520322, "answer_id": 39017255, "question_id": 39014338, "link": "https://stackoverflow.com/questions/39014338/is-this-transmute-from-array-of-simd-to-regular-numeric-types-undefined-behaviou/39017255#39017255", "title": "Is this transmute from array of SIMD to regular numeric types undefined behaviour?", "body": "<p>Without any specific guarantees (which I can't find), I don't think you can conclude that it's safe.</p>\n\n<p>In fact as written above it's definitely unsafe for a slightly different reason; you've laundered a reference to <code>values8</code> which isn't tracked by the borrow checker; it let me do this:</p>\n\n<pre><code>extern crate simd;\n\nuse simd::f32x4;\n\nfn main() {\n    let mut values8: [f32x4; 100] = [f32x4::splat(1.1); 100];\n    let values: &amp;[f32; 400] = unsafe { std::mem::transmute(&amp;values8) };\n\n    let t = &amp;mut values8[4];\n    println!(\"{}\", values[333]); // but there's a mutable reference!\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 647, "user_id": 4037231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fe12602a9e9ca343dc477b81e1244b1b?s=128&d=identicon&r=PG&f=1", "display_name": "kmky", "link": "https://stackoverflow.com/users/4037231/kmky"}, "edited": false, "score": 0, "creation_date": 1471536458, "post_id": 39020776, "comment_id": 65396203, "body": "<i>&quot;The order may be arbitrary though.&quot;</i> Does this mean that (given my example) <code>values8[0].extract(5)</code> doesn&#39;t necessarily return the same value as <code>values[5]</code> ?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 647, "user_id": 4037231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fe12602a9e9ca343dc477b81e1244b1b?s=128&d=identicon&r=PG&f=1", "display_name": "kmky", "link": "https://stackoverflow.com/users/4037231/kmky"}, "edited": false, "score": 1, "creation_date": 1471537173, "post_id": 39020776, "comment_id": 65396642, "body": "yes, that&#39;s what that statement means. The order is platform defined, so you probably need to read what llvm does with simd or what your architecture does with simd."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 3, "last_activity_date": 1471530368, "creation_date": 1471530368, "answer_id": 39020776, "question_id": 39014338, "link": "https://stackoverflow.com/questions/39014338/is-this-transmute-from-array-of-simd-to-regular-numeric-types-undefined-behaviou/39020776#39020776", "title": "Is this transmute from array of SIMD to regular numeric types undefined behaviour?", "body": "<p>The early definition in <a href=\"https://internals.rust-lang.org/t/pre-rfc-simd-groundwork/2343\" rel=\"nofollow\">this Pre-RFC</a> states that</p>\n\n<blockquote>\n  <p>It is illegal to take an internal reference to the fields of a repr(simd) type, because the representation of booleans may require to change, so that booleans are bit-packed. The official external library providing SIMD support will have private fields so this will not be generally observable.</p>\n</blockquote>\n\n<p>This would obviously forbid turning a simd type into an array.</p>\n\n<p>The actual RFC <a href=\"https://github.com/rust-lang/rfcs/pull/1199#issuecomment-131182417\" rel=\"nofollow\">changed</a> that, so apparently you are allowed to reference the inner things. The RFC also states that the layout and alignments are platform dependent.</p>\n\n<p>Since all platforms that I know of don't add padding to trivial simd types like <code>f32x8</code>, you can assume that the layout of a <code>f32x8</code> is \"the same\" as a <code>[f32; 8]</code> in terms of that it contains 8 <code>f32</code>s tightly packed in a 32 byte piece of memory. The order may be arbitrary though.</p>\n\n<hr>\n\n<blockquote>\n  <p>\"Transmuting between non-repr(C) types is UB\" I think simd types (like simd::x86::avx::f32x8) are repr(simd) and I don't think [f32; 800] is repr(C) either.</p>\n</blockquote>\n\n<p>Technically you are neither transmuting a <code>repr(simd)</code> type nor a <code>[f32; 800]</code>, you are transmuting a reference to another reference, but the result is the same.</p>\n\n<hr>\n\n<p>As noted by @Chris Emerson, the unsafety in your example comes from the breaking of the lifetime chain. To reinstate that, create an abstraction boundary:</p>\n\n<pre><code>fn simd_slice(simd: &amp;[f32x8; 100]) -&gt; &amp;[f32; 800] {\n    unsafe { &amp;*(simd as *const [f32x8; 100] as *const [f32; 800]) }\n}\n</code></pre>\n"}], "owner": {"reputation": 647, "user_id": 4037231, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fe12602a9e9ca343dc477b81e1244b1b?s=128&d=identicon&r=PG&f=1", "display_name": "kmky", "link": "https://stackoverflow.com/users/4037231/kmky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "accepted_answer_id": 39020776, "answer_count": 2, "score": 4, "last_activity_date": 1471573889, "creation_date": 1471511840, "last_edit_date": 1471573889, "question_id": 39014338, "link": "https://stackoverflow.com/questions/39014338/is-this-transmute-from-array-of-simd-to-regular-numeric-types-undefined-behaviou", "title": "Is this transmute from array of SIMD to regular numeric types undefined behaviour?", "body": "<p>I have an array of floating point values and I need to do some easily vectorizable operations like taking the sum of all of them and then dividing them all by that sum. I also need to access (mostly read) individual elements of the array. I figured I could use a SIMD type to enable the vectorization of the array. Whenever I'd need to do a lot of things with individual elements of the array, I would transmute the array into a reference to an array of regular floating point values, and access that reference instead, like so:</p>\n\n<pre><code>extern crate simd;\n\nuse simd::x86::avx::f32x8;\n\nfn main() {\n    let values8: [f32x8; 100] = [f32x8::splat(1.1); 100];\n    let values: &amp;[f32; 800] = unsafe { std::mem::transmute(&amp;values8) };\n\n    println!(\"{}\", values[333]);\n}\n</code></pre>\n\n<p>This compiles and seems to work just fine. But I'm worried that this is undefined behaviour because <a href=\"https://doc.rust-lang.org/nomicon/transmutes.html\" rel=\"nofollow\">I read</a> that:</p>\n\n<blockquote>\n  <p>Transmuting between non-repr(C) types is UB</p>\n</blockquote>\n\n<p>I think SIMD types (like <code>simd::x86::avx::f32x8</code>) are <code>repr(simd)</code> and I don't think <code>[f32; 800]</code> is <code>repr(C)</code> either.</p>\n\n<p>I know I can use the <code>extract</code> method on SIMD types to get those individual floating point values, but using the aforementioned transmute-to-a-regular-array scheme would make the code much simpler.</p>\n"}, {"tags": ["reflection", "rust"], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 6714938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2861903979075e0dd7d75e88e7ead082?s=128&d=identicon&r=PG&f=1", "display_name": "xilec", "link": "https://stackoverflow.com/users/6714938/xilec"}, "edited": false, "score": 0, "creation_date": 1471521864, "post_id": 39017042, "comment_id": 65385778, "body": "Thanks for answer. Unfortunately, this trick doesn&#39;t work with pattern matching. I assume, that procedural macros could help me when it comes"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 55, "user_id": 6714938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2861903979075e0dd7d75e88e7ead082?s=128&d=identicon&r=PG&f=1", "display_name": "xilec", "link": "https://stackoverflow.com/users/6714938/xilec"}, "edited": false, "score": 0, "creation_date": 1471522004, "post_id": 39017042, "comment_id": 65385878, "body": "Ah, right; I forgot the <code>match</code> part.  There&#39;s nothing I can do about that: if you want to assert the name <i>exists</i>, you have to do something that uses it, and you can&#39;t do that within a pattern.  And no, procedural macros <i>will not</i> help, because they have the same limitations as regular macros here: <i>they cannot see names</i>.  They would <i>have</i> to emit something similar."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1471573537, "last_edit_date": 1471573537, "creation_date": 1471519656, "answer_id": 39017042, "question_id": 39013480, "link": "https://stackoverflow.com/questions/39013480/is-there-an-analog-of-nameof-from-c-in-rust/39017042#39017042", "title": "Is there an analog of nameof() from C# in Rust?", "body": "<p>No, but you can get something comparable with macros.  Because macros solve <em>everything!</em> <sup>[1]</sup></p>\n\n<pre><code>macro_rules! name_of {\n    ($name:ident in $ty:ty) =&gt; {\n        {\n            #[allow(dead_code)]\n            fn dummy(v: $ty) {\n                let _ = &amp;v.$name;\n            }\n            stringify!($name)\n        }\n    };\n\n    ($name:ident) =&gt; {\n        {\n            let _ = &amp;$name;\n            stringify!($name)\n        }\n    };\n}\n\nstruct Person {\n    // 255 years should be enough for anybody.\n    age: u8,\n    name: String,\n}\n\nfn main() {\n    let p = Person { age: 27, name: \"John Smith\".into() };\n    println!(\"The {} of Person {} is: {}\", name_of!(age in Person), name_of!(p), p.age);\n}\n</code></pre>\n\n<p>If you try to use a name that doesn't exist, you get something that looks like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: unresolved name `q`. Did you mean `p`? [--explain E0425]\n  --&gt; &lt;anon&gt;:28:78\n28 |&gt;     println!(\"The {} of Person {} is: {}\", name_of!(age in Person), name_of!(q), p.age);\n   |&gt;                                                                              ^\n</code></pre>\n\n<p>Or like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: attempted access of field `shoe_size` on type `Person`, but no field with that name was found\n --&gt; &lt;anon&gt;:6:26\n6 |&gt;                 let _ = &amp;v.$name;\n  |&gt;                          ^\n</code></pre>\n\n<hr>\n\n<p>[1]: Note: macros do not, in fact, solve everything.</p>\n"}], "owner": {"reputation": 55, "user_id": 6714938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2861903979075e0dd7d75e88e7ead082?s=128&d=identicon&r=PG&f=1", "display_name": "xilec", "link": "https://stackoverflow.com/users/6714938/xilec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 539, "favorite_count": 0, "accepted_answer_id": 39017042, "answer_count": 1, "score": 3, "last_activity_date": 1471573537, "creation_date": 1471509348, "last_edit_date": 1495535630, "question_id": 39013480, "link": "https://stackoverflow.com/questions/39013480/is-there-an-analog-of-nameof-from-c-in-rust", "title": "Is there an analog of nameof() from C# in Rust?", "body": "<p>In my program, I represent a history of changes to fields of some objects as follows:</p>\n\n<pre><code>struct FieldChange {\n    property_name: &amp;'static str,\n    // some other fields\n}\n\nlet history = Vec&lt;FieldChange&gt;::new();\n</code></pre>\n\n<p>I handle it like this:</p>\n\n<pre><code>match field_change.property_name {\n    \"name\" =&gt; // do something,\n    \"age\"  =&gt; // do something,\n    _      =&gt; {}\n}\n</code></pre>\n\n<p>To improve with readability and ease future refactoring, I would like to write something like this:</p>\n\n<pre><code>match field_change.property_name {\n    nameof(Person::name) =&gt; // do something,\n    nameof(Person::age)  =&gt; // do something,\n    _                    =&gt; {}\n}\n</code></pre>\n\n<p>where <code>nameof</code> generates a <code>&amp;str</code> representation of the field, similar to <a href=\"https://stackoverflow.com/questions/31695900/what-is-the-purpose-of-nameof\"><code>nameof</code> in C#</a>.</p>\n\n<p>The main point I'm looking for, is that the compiler can verify whether the fields exist (e.g., in this case, whether <code>Person</code> indeed has <code>name</code> and <code>age</code> fields). Is it possible to extract the field-names like this in Rust?</p>\n"}, {"tags": ["struct", "rust"], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 36, "last_activity_date": 1471489781, "last_edit_date": 1471489781, "creation_date": 1471486218, "answer_id": 39008892, "question_id": 39008880, "link": "https://stackoverflow.com/questions/39008880/is-it-possible-to-declare-local-anonymous-structs-in-rust/39008892#39008892", "title": "Is it possible to declare local anonymous structs in Rust?", "body": "<p>While <strong>anonymous</strong> structs aren't supported, you can scope them locally, to do almost exactly as you've described in the C version:</p>\n\n<pre><code>fn main() {\n\n    struct Example&lt;'a&gt; {\n        name: &amp;'a str\n    };\n\n    let obj = Example { name: \"Simon\" };\n    let obj2 = Example { name: \"ideasman42\" };\n\n    println!(\"{}\", obj.name); // Simon\n    println!(\"{}\", obj2.name); // ideasman42\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1444f7a017148d77adb4062558f038db&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground link</a></p>\n\n<p>One other option is a tuple:</p>\n\n<pre><code>fn main() {\n\n    let obj = (1, 0, 1);\n\n    println!(\"{}\", obj.0);\n    println!(\"{}\", obj.1);\n    println!(\"{}\", obj.2);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=38e49c50b6d83ebc29019093eba73c2c&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground link</a></p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11218, "favorite_count": 1, "accepted_answer_id": 39008892, "answer_count": 1, "score": 26, "last_activity_date": 1471489781, "creation_date": 1471486004, "last_edit_date": 1471488064, "question_id": 39008880, "link": "https://stackoverflow.com/questions/39008880/is-it-possible-to-declare-local-anonymous-structs-in-rust", "title": "Is it possible to declare local anonymous structs in Rust?", "body": "<p>Sometimes I like to group related variables in a function, without declaring a new struct type.</p>\n\n<p>In C this can be done, e.g.:</p>\n\n<pre><code>void my_function() {    \n    struct {\n        int x, y;\n        size_t size;\n    } foo = {1, 1, 0};\n    // ....\n}\n</code></pre>\n\n<p>Is there a way to do this in Rust? If not, what would be the closest equivalent?</p>\n"}]