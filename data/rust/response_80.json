[{"tags": ["windows", "console", "rust"], "answers": [{"tags": [], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "is_accepted": true, "score": 0, "last_activity_date": 1469062058, "creation_date": 1469062058, "answer_id": 38493085, "question_id": 38490393, "link": "https://stackoverflow.com/questions/38490393/readconsoleinputw-wrapper-and-ownership/38493085#38493085", "title": "ReadConsoleInputW wrapper and ownership", "body": "<p>You could put these flags into <code>Rc&lt;RefCell&lt;somestruct&gt;&gt;</code> and clone it before consuming <code>stdin</code>.</p>\n\n<p>This is a common pattern that allows you to have \"access\" to the same data, from two places. <code>Rc</code> takes care of shared ownership, and <code>RefCell</code> checks if you don't have overlapping accesses.</p>\n"}], "owner": {"reputation": 45, "user_id": 5549604, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ceaaed756e22c566bfd8d68297d4e4e1?s=128&d=identicon&r=PG&f=1", "display_name": "Gwenn", "link": "https://stackoverflow.com/users/5549604/gwenn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 38493085, "answer_count": 1, "score": 0, "last_activity_date": 1469062058, "creation_date": 1469046985, "last_edit_date": 1469048099, "question_id": 38490393, "link": "https://stackoverflow.com/questions/38490393/readconsoleinputw-wrapper-and-ownership", "title": "ReadConsoleInputW wrapper and ownership", "body": "<p>I want to wrap the <code>ReadConsoleInputW</code> Windows console method into the <code>Read</code> trait so that I can use the <code>chars()</code> method, but I need also to know which key modifiers are applied (<kbd>control</kbd>, <kbd>alt</kbd>/<kbd>meta</kbd>).</p>\n\n<p>One solution (like the one used by the Unix console) is to encode key events into control characters or ANSI escape codes.</p>\n\n<p>Another solution would be to keep the key modifiers around but I can't make it work because the <code>chars()</code> method consume/move the input:</p>\n\n<pre><code>struct InputBuffer {\n    handle: winapi::HANDLE,\n    ctrl: bool,\n    meta: bool,\n}\n\nimpl Read for InputBuffer {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; io::Result&lt;usize&gt; {\n        let mut rec: winapi::INPUT_RECORD = unsafe { mem::zeroed() };\n        // kernel32::ReadConsoleInputW(self.0, &amp;mut rec, 1 as winapi::DWORD, &amp;mut count);\n        // ...\n        if rec.EventType != winapi::KEY_EVENT {\n            continue;\n        }\n        let key_event = unsafe { rec.KeyEvent() };\n        // ...\n        self.ctrl = key_event.dwControlKeyState &amp;\n                       (winapi::LEFT_CTRL_PRESSED | winapi::RIGHT_CTRL_PRESSED) ==\n                       (winapi::LEFT_CTRL_PRESSED | winapi::RIGHT_CTRL_PRESSED);\n        self.meta = ...;\n\n        let utf16 = key_event.UnicodeChar;\n        // ...\n        let (bytes, len) = try!(InputBuffer::wide_char_to_multi_byte(utf16));\n        return (&amp;bytes[..len]).read(buf);\n    }\n}\n\nfn main() {\n    let handle = try!(get_std_handle(STDIN_FILENO));\n    let mut stdin = InputBuffer(handle);\n    let mut chars = stdin.chars(); // stdin moved here\n    loop {\n        let c = chars.next().unwrap();\n        let mut ch = try!(c);\n        if stdin.ctrl { // use of moved value\n            //...\n        }\n        // ...\n    }\n}\n</code></pre>\n\n<p>How to do this in Rust?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 3, "creation_date": 1469032614, "post_id": 38485925, "comment_id": 64374153, "body": "In addition: those transmutes are <i>absolutely wrong</i> anyway.  Rust is not Java: you <i>cannot</i> transmute between <code>Box&lt;ConcreteType&gt;</code> and <code>Box&lt;Trait&gt;</code> like that."}, {"owner": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "edited": false, "score": 0, "creation_date": 1469032788, "post_id": 38485925, "comment_id": 64374236, "body": "Unfortunately, both Any&#39;s (core &amp; mopa) can be used only for T or &amp;T (please correct me if I&#39;m wrong), but not for Box&lt;T&gt; and any other complex type like Arc&lt;RwLock&lt;RefCell&lt;Box&lt;T&gt;&gt;&gt;&gt;. Plus in my original task (above is super-simplified sample) I need to know the type of the stuff coming as arg. If it&#39;s not possible, I consider trying splitting match_it to several versions for each concrete type. Too bad I need concat_idents working for this, but it&#39;s still unusable at the moment."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1469034052, "post_id": 38485925, "comment_id": 64374978, "body": "I use <code>Box&lt;Any&gt;</code>.  Could you describe what you&#39;re trying to achieve? The question doesn&#39;t say <i>what</i> you&#39;re trying to do, only a solution you&#39;ve tried that didn&#39;t work. What do you want to do with the <code>Box&lt;This&gt;</code> or <code>Box&lt;That&gt;</code>?"}, {"owner": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "edited": false, "score": 0, "creation_date": 1469036164, "post_id": 38485925, "comment_id": 64376172, "body": "Dependency Injection. <a href=\"https://play.rust-lang.org/?gist=b9eda7c6cf3469411f63a369fcc7e6b3&amp;version=nightly&amp;backtrace=2\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "edited": false, "score": 0, "creation_date": 1469037096, "post_id": 38485925, "comment_id": 64376732, "body": "To workaround these transmutes I need to know the exact type of the argument. Runtime type casting is not possible, so I&#39;m trying to mimic it with macros."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1469041304, "post_id": 38485925, "comment_id": 64379220, "body": "I&#39;m afraid there&#39;s too much code and macros for me to work out which bit is important, but I&#39;ve added an answer showing how the runtime type casting works."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 2, "last_activity_date": 1469031952, "creation_date": 1469031952, "answer_id": 38485925, "question_id": 38485681, "link": "https://stackoverflow.com/questions/38485681/weird-behaviour-of-argument-repetitions-in-rust-macro/38485925#38485925", "title": "Weird behaviour of argument repetitions in Rust macro", "body": "<p>The macro expands to something like:</p>\n\n<pre><code>enum Type {This, That }\n\nfn match_it(t: Type, b: Box&lt;Object&gt;) {\n    let p = match t {\n        Type::This =&gt; mem::transmute::&lt;Box&lt;Object&gt;, Box&lt;This&gt;&gt;(b),\n        Type::That =&gt; mem::transmute::&lt;Box&lt;Object&gt;, Box&lt;That&gt;&gt;(b),\n    }\n}\n</code></pre>\n\n<p>What's the type of <code>p</code>?  Depending on something at runtime, the compile-time type must be different; this doesn't make sense in a statically typed language like Rust.</p>\n\n<p>I suggest looking into <a href=\"https://doc.rust-lang.org/std/any/index.html\" rel=\"nofollow\"><code>std::any</code></a>, which seems similar to what you might be trying to do.</p>\n"}, {"comments": [{"owner": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "edited": false, "score": 0, "creation_date": 1469084065, "post_id": 38488731, "comment_id": 64393947, "body": "Thanks. But I accepted your first answer as correct cause it describes why macros cannot be used to mimic dynamic typing. Still need to cast not the trait itself, but its synchronized and refcell&#39;ed copy."}, {"owner": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "edited": false, "score": 0, "creation_date": 1469103199, "post_id": 38488731, "comment_id": 64406465, "body": "One small but important change, and this example fails. <a href=\"https://play.rust-lang.org/?gist=4b498a3fc4363fb555b5293e283e66cc&amp;version=stable&amp;backtrace=2\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "edited": false, "score": 1, "creation_date": 1469140370, "post_id": 38488731, "comment_id": 64427693, "body": "@snuk182 You do have to use <code>Box&lt;Any&gt;</code>, not <code>Box&lt;T&gt;</code>, even if <code>T: Any</code>.  This is because <code>Box&lt;Any&gt;</code> is slightly special, and if you look at <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html\" rel=\"nofollow noreferrer\">the Box documentation</a>, <code>downcast</code> it says <code>impl Box&lt;Any+&#39;static&gt; ...</code>, not the more generic <code>impl&lt;T&gt; Box&lt;T:Any&gt;</code> there."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 0, "last_activity_date": 1469041118, "creation_date": 1469041118, "answer_id": 38488731, "question_id": 38485681, "link": "https://stackoverflow.com/questions/38485681/weird-behaviour-of-argument-repetitions-in-rust-macro/38488731#38488731", "title": "Weird behaviour of argument repetitions in Rust macro", "body": "<p>As an alternative, maybe you want runtime casting using <code>Box&lt;Any&gt;</code>:</p>\n\n<pre><code>use std::any::Any;\n\nstruct N(isize);\nstruct S(String);\n\nfn main() {\n    let mut v: Vec&lt;Box&lt;Any&gt;&gt; = Vec::new();\n\n    v.push(Box::new(N(17)));\n    v.push(Box::new(S(\"foo\".to_string())));\n\n    let s = v.pop().unwrap().downcast::&lt;S&gt;().unwrap();\n    let n = v.pop().unwrap().downcast::&lt;N&gt;().unwrap();\n    println!(\"Extracted {} and {}\", s.0, n.0);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0be2c01d47069308c9aab3bf56760e46&amp;version=stable&amp;backtrace=2\" rel=\"nofollow\">Play link</a></p>\n"}], "owner": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 38485925, "answer_count": 2, "score": 0, "last_activity_date": 1469041118, "creation_date": 1469031194, "question_id": 38485681, "link": "https://stackoverflow.com/questions/38485681/weird-behaviour-of-argument-repetitions-in-rust-macro", "title": "Weird behaviour of argument repetitions in Rust macro", "body": "<p>Faced a weird case of repeated argument mismatch while creating a macro in Rust:</p>\n\n<pre><code>use std::mem;\n\ntrait Object {}\n\n#[derive(Debug)]\nstruct This {}\nimpl Object for This {}\n\n#[derive(Debug)]\nstruct That {}\nimpl Object for That {}\n\nmacro_rules! types {\n    ($($fname:ident),*) =&gt; {\n        enum Type {\n            $($fname),*\n        }\n\n        fn match_it(t: Type, b: Box&lt;Object&gt;) {\n            let p = match t {\n                $(\n                Type::$fname =&gt; {\n                    mem::transmute::&lt;Box&lt;Object&gt;, Box&lt;$fname&gt;&gt;(b)\n                }\n                ),*\n            };\n        }\n    }\n}\n\ntypes!(This, That);\n\nfn main() {}\n</code></pre>\n\n<p>It results in:</p>\n\n<pre><code>error: match arms have incompatible types [--explain E0308]\n  --&gt; &lt;anon&gt;:20:21\n20 |&gt;             let p = match t {\n   |&gt;                     ^ expected struct `This`, found struct `That`\n&lt;anon&gt;:31:1: 31:20: note: in this expansion of types! (defined in &lt;anon&gt;)\nnote: expected type `Box&lt;This&gt;`\nnote:    found type `Box&lt;That&gt;`\nnote: match arm with an incompatible type\n  --&gt; &lt;anon&gt;:22:33\n22 |&gt;                 Type::$fname =&gt; {\n   |&gt;                                 ^\n&lt;anon&gt;:31:1: 31:20: note: in this expansion of types! (defined in &lt;anon&gt;)\n</code></pre>\n\n<p>Shouldn't the $fname of enum be the same as $fname of Box if they share the same loop?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=630f5a84dd70f9b25aac5a43c9389f03&amp;version=stable&amp;backtrace=2\" rel=\"nofollow\">Play it.</a></p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "edited": false, "score": 1, "creation_date": 1469460253, "post_id": 38484430, "comment_id": 64532563, "body": "Really the correct answer is to try and store <code>n</code> as a <code>usize</code> as early on as possible. If it&#39;s some sort of user input, it should be parsed as a <code>usize</code>, as any negative number would be invalid for indexing."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 7, "last_activity_date": 1469028416, "last_edit_date": 1469028416, "creation_date": 1469025846, "answer_id": 38484430, "question_id": 38484156, "link": "https://stackoverflow.com/questions/38484156/how-do-i-slice-an-array-with-an-i32-limit/38484430#38484430", "title": "How do I slice an array with an i32 limit?", "body": "<p>You can check in <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html\" rel=\"noreferrer\">slice docs</a> (search for <code>Index&lt;Range</code>) that <code>Index</code> trait is only implemented for <code>usize</code> ranges, so you cannot use a <code>Range&lt;i32&gt;</code>.</p>\n\n<p>One possibility is to cast the <code>i32</code> for <code>usize</code>:</p>\n\n<pre><code>fn main() {\n    let n: i32 = 2;\n    let a = [1,2,3];\n    println!(\"{:?}\", &amp;a[0..n as usize]); \n}\n</code></pre>\n\n<p>but you should take care because the cast is not checked, a negative <code>i32</code> value can be cast to <code>usize</code> without an error. You can create a function to do a checked conversion or use a crate (for example <a href=\"http://rust-num.github.io/num/num/trait.ToPrimitive.html\" rel=\"noreferrer\"><code>num::ToPrimitive</code></a>).</p>\n\n<p>In the future, Rust will have <a href=\"https://doc.rust-lang.org/stable/std/convert/trait.TryFrom.html\" rel=\"noreferrer\">checked conversion</a> in the standard library.</p>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 300, "favorite_count": 0, "accepted_answer_id": 38484430, "answer_count": 1, "score": 1, "last_activity_date": 1469028913, "creation_date": 1469025125, "last_edit_date": 1469028913, "question_id": 38484156, "link": "https://stackoverflow.com/questions/38484156/how-do-i-slice-an-array-with-an-i32-limit", "title": "How do I slice an array with an i32 limit?", "body": "<p>I'm trying to slice an array with a dynamic boundary:</p>\n\n<pre><code>fn main() {\n    let n: i32 = 2;\n    let a = [1, 2, 3];\n    println!(\"{:?}\", &amp;a[0..n]);\n}\n</code></pre>\n\n<p>It gives me the following error:</p>\n\n<blockquote>\n  <p>error: the trait bound <code>[_]: std::ops::Index&lt;std::ops::Range&lt;i32&gt;&gt;</code> is not satisfied</p>\n</blockquote>\n\n<p>I don't know what to do with this error. It seems I can't use a <code>i32</code> to slice an array?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1469024792, "post_id": 38483890, "comment_id": 64370223, "body": "I&#39;m not sure what this is supposed to be doing, but <code>X</code> isn&#39;t a trait: it&#39;s a generic that, when you substitute in a type for the <code>T</code> parameter, <i>results</i> in a trait.  In other words, <code>T: X</code> won&#39;t work; you need <code>T: X&lt;Something&gt;</code> for it to make sense."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469024839, "post_id": 38483890, "comment_id": 64370270, "body": "<i>anyone implementing <code>X</code> can convert to other implementations of <code>X</code></i> Maybe I&#39;m missing something, but shouldn&#39;t this be impossible? You are asking for one type from a possibly infinite set of types has to be convertible to any other type in that set, even if one type was written in a different crate years after the first one?"}, {"owner": {"reputation": 153, "user_id": 522947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/18ccde37b2765da9d1e7eeb7ee9d12fb?s=128&d=identicon&r=PG", "display_name": "KasMA1990", "link": "https://stackoverflow.com/users/522947/kasma1990"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1469025313, "post_id": 38483890, "comment_id": 64370613, "body": "@DK Ah yeah, <code>X</code> needs a specification too of course when it&#39;s a type argument. But if I update the definition to read <code>trait X&lt;T, U&gt; : From&lt;T&gt; where T: X&lt;U&gt; {}</code> the compiler still tells me I have too few type arguments. Now it&#39;s just expecting two and found only one, as opposed to expecting one and finding zero."}, {"owner": {"reputation": 153, "user_id": 522947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/18ccde37b2765da9d1e7eeb7ee9d12fb?s=128&d=identicon&r=PG", "display_name": "KasMA1990", "link": "https://stackoverflow.com/users/522947/kasma1990"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469025780, "post_id": 38483890, "comment_id": 64370978, "body": "@Shepmaster My use case is that I have different structs which contain only a number of something, where the struct represents the unit. I want to specify that such a struct should be convertable to any other struct which uses a different unit, where the unit is still the same type. So if someone wants to add a new struct to represent a new type of unit, it should be able to be converted to any of the existing structs."}, {"owner": {"reputation": 153, "user_id": 522947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/18ccde37b2765da9d1e7eeb7ee9d12fb?s=128&d=identicon&r=PG", "display_name": "KasMA1990", "link": "https://stackoverflow.com/users/522947/kasma1990"}, "edited": false, "score": 0, "creation_date": 1469028326, "post_id": 38483890, "comment_id": 64371386, "body": "I clarified the question based on the discussion here :)"}], "answers": [{"comments": [{"owner": {"reputation": 153, "user_id": 522947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/18ccde37b2765da9d1e7eeb7ee9d12fb?s=128&d=identicon&r=PG", "display_name": "KasMA1990", "link": "https://stackoverflow.com/users/522947/kasma1990"}, "edited": false, "score": 0, "creation_date": 1469036026, "post_id": 38485000, "comment_id": 64376088, "body": "Oooh, nice! I&#39;ve toyed with a similar concept (though yours is way nicer), but I dropped it because I didn&#39;t want to pay the runtime cost of unnecessary calculations. Do you know if the compiler calculates them when going with the associated const values? I assume the compiler doesn&#39;t do so in the first concept at least.  EDIT: Also, do you know if associated_const is a nightly feature since it&#39;s gated?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 153, "user_id": 522947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/18ccde37b2765da9d1e7eeb7ee9d12fb?s=128&d=identicon&r=PG", "display_name": "KasMA1990", "link": "https://stackoverflow.com/users/522947/kasma1990"}, "edited": false, "score": 0, "creation_date": 1469042076, "post_id": 38485000, "comment_id": 64379681, "body": "Yes, the associated_const feature is nightly only at the moment.  I think it optimises relatively well; I can&#39;t see any reference to either <code>convert_to()</code> or <code>unit_in_meters()</code> in the generated ASM in the playpen in release mode.  I can&#39;t see any MUL either, so it might all have been constant-evaluated, but I&#39;m a bit rusty on x86 assembly so may have missed something."}, {"owner": {"reputation": 153, "user_id": 522947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/18ccde37b2765da9d1e7eeb7ee9d12fb?s=128&d=identicon&r=PG", "display_name": "KasMA1990", "link": "https://stackoverflow.com/users/522947/kasma1990"}, "edited": false, "score": 0, "creation_date": 1469100250, "post_id": 38485000, "comment_id": 64404459, "body": "Alright thanks; then your approach is definitely better then what I had going on :)"}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 3, "last_activity_date": 1469029331, "creation_date": 1469029331, "answer_id": 38485000, "question_id": 38483890, "link": "https://stackoverflow.com/questions/38483890/require-trait-implementations-to-be-convertible-between-each-other/38485000#38485000", "title": "Require trait implementations to be convertible between each other", "body": "<p>Rather than trying to restrict the implementers, I think it would be simpler to provide the implementation as part of the trait:</p>\n\n<pre><code>trait Length {\n    fn unit_in_meters() -&gt; f64;\n\n    fn value(&amp;self) -&gt; f64;\n    fn new(value: f64) -&gt; Self;\n\n    fn convert_to&lt;T:Length&gt;(&amp;self) -&gt; T {\n        T::new(self.value() * Self::unit_in_meters() / T::unit_in_meters())\n    }\n}\n\nstruct Mm {\n    v: f64,\n}\n\nimpl Length for Mm {\n    fn unit_in_meters() -&gt; f64 { 0.001 }\n\n    fn value(&amp;self) -&gt; f64 { self.v }\n    fn new(value: f64) -&gt; Mm {\n        Mm{ v: value }\n    }\n}\n\nstruct Inch {\n    v: f64,\n}\n\nimpl Length for Inch {\n    fn unit_in_meters() -&gt; f64 { 0.0254 }\n\n    fn value(&amp;self) -&gt; f64 { self.v }\n    fn new(value: f64) -&gt; Inch {\n        Inch{ v: value }\n    }\n}\n\nfn main() {\n    let foot = Inch::new(12f64);\n    let foot_in_mm: Mm = foot.convert_to();\n    println!(\"One foot in mm: {}\", foot_in_mm.value());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=6dc78f1da1e53059fced29fe05a7b39a&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Play link</a></p>\n\n<p>For fun, with the <code>associated_consts</code> feature you can swap the method for a constant conversion factor.</p>\n\n<pre><code>#![feature(associated_consts)]\ntrait Length {\n    const UNIT_IN_METERS: f64;\n\n    fn value(&amp;self) -&gt; f64;\n    fn new(value: f64) -&gt; Self;\n\n    fn convert_to&lt;T:Length&gt;(&amp;self) -&gt; T {\n        T::new(self.value() * Self::UNIT_IN_METERS / T::UNIT_IN_METERS)\n    }\n}\n\nstruct Mm {\n    v: f64,\n}\n\nimpl Length for Mm {\n    const UNIT_IN_METERS: f64 = 0.001;\n\n    fn value(&amp;self) -&gt; f64 { self.v }\n    fn new(value: f64) -&gt; Mm {\n        Mm{ v: value }\n    }\n}\n\nstruct Inch {\n    v: f64,\n}\n\nimpl Length for Inch {\n    const UNIT_IN_METERS: f64 = 0.0254;\n\n    fn value(&amp;self) -&gt; f64 { self.v }\n    fn new(value: f64) -&gt; Inch {\n        Inch{ v: value }\n    }\n}\n\nfn main() {\n    let foot = Inch::new(12f64);\n    let foot_in_mm: Mm = foot.convert_to();\n    println!(\"One foot in mm: {}\", foot_in_mm.value());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b94654bce949baee39bd46eb47e63970&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow\">Play link</a></p>\n"}], "owner": {"reputation": 153, "user_id": 522947, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/18ccde37b2765da9d1e7eeb7ee9d12fb?s=128&d=identicon&r=PG", "display_name": "KasMA1990", "link": "https://stackoverflow.com/users/522947/kasma1990"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 38485000, "answer_count": 1, "score": 1, "last_activity_date": 1469029331, "creation_date": 1469024485, "last_edit_date": 1469028295, "question_id": 38483890, "link": "https://stackoverflow.com/questions/38483890/require-trait-implementations-to-be-convertible-between-each-other", "title": "Require trait implementations to be convertible between each other", "body": "<p>I'm trying to have a Rust trait <code>X</code> which requires that anyone implementing <code>X</code> can convert to other implementations of <code>X</code>.</p>\n\n<p>So I'm trying to make the declaration of <code>X</code> enforce this like so:</p>\n\n<pre><code>trait X&lt;T&gt; : From&lt;T&gt; where T: X {}\n</code></pre>\n\n<p>But the compiler is telling me that it doesn't find any type arguments in my specification of <code>T</code>, because <code>T: X</code> needs some type information <code>T: X&lt;...&gt;</code>. But this way there will always be one type argument too little; e.g.</p>\n\n<pre><code>trait X&lt;T, U&gt; : From&lt;T&gt; where T: X&lt;U&gt; {}\n</code></pre>\n\n<p>Can I get around this in some way? Doing <code>where T: X&lt;_&gt;</code> is not allowed.</p>\n"}, {"tags": ["ios", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1473950174, "post_id": 38475056, "comment_id": 66343528, "body": "You may want to follow this issue for the progress of bitcode support: <a href=\"https://github.com/rust-lang/rust/issues/35968\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/35968</a>"}], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 3, "last_activity_date": 1469000542, "creation_date": 1469000542, "answer_id": 38475242, "question_id": 38475056, "link": "https://stackoverflow.com/questions/38475056/enable-bitcode-output-in-cargo-build-for-ios-targets/38475242#38475242", "title": "Enable Bitcode Output in Cargo Build for iOS Targets?", "body": "<p>You can tell cargo to pass any argument you wish to the Rust compiler by setting the <a href=\"http://doc.crates.io/environment-variables.html\" rel=\"nofollow\"><code>RUSTFLAGS</code> environment variable</a>. The Rustc compiler has a flag <code>-C llvm-args=val</code> that you can use to pass additional arguments to llvm.</p>\n\n<p>Thus, in your situation you would call:</p>\n\n<pre><code>RUSTFLAGS=\"-C llvm-args=\\\"-fembed-bitcode\\\"\" cargo build\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1704, "user_id": 1204536, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0ce8e171d43e20591074a66e9ff7ae6?s=128&d=identicon&r=PG", "display_name": "brson", "link": "https://stackoverflow.com/users/1204536/brson"}, "is_accepted": false, "score": 3, "last_activity_date": 1469041696, "last_edit_date": 1469041696, "creation_date": 1469040785, "answer_id": 38488617, "question_id": 38475056, "link": "https://stackoverflow.com/questions/38475056/enable-bitcode-output-in-cargo-build-for-ios-targets/38488617#38488617", "title": "Enable Bitcode Output in Cargo Build for iOS Targets?", "body": "<p>I suspect that this matter of creating a binary that is compatible with Apple's bitcode format for iOS will require direct modifications to the Rust compiler. <a href=\"https://github.com/Geal/rust_on_mobile#how-can-we-generate-a-static-library-with-apples-bitcode-format\" rel=\"nofollow\">Here's a recent link I found</a> discussing the issue. The author of that repo would be a good resource to contact on iOS issues.</p>\n\n<p>There are going to be multiple technical problems but the most fundamental is generating bitcode that is the same format as iOS expects. That problem can potentially be solved on a temporary basis by building a custom rustc using the same LLVM that Apple is using in clang.</p>\n"}], "owner": {"reputation": 364, "user_id": 1241051, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8a66497c0d513495acb92d917faaccb8?s=128&d=identicon&r=PG", "display_name": "ayl", "link": "https://stackoverflow.com/users/1241051/ayl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 971, "favorite_count": 2, "answer_count": 2, "score": 4, "last_activity_date": 1523200501, "creation_date": 1469000031, "last_edit_date": 1469019270, "question_id": 38475056, "link": "https://stackoverflow.com/questions/38475056/enable-bitcode-output-in-cargo-build-for-ios-targets", "title": "Enable Bitcode Output in Cargo Build for iOS Targets?", "body": "<p>I'm building an iOS framework that uses some Rust libraries. Right now, the libraries are compiled to a static library. In order for me to enable bitcode (this is needed for Apple app thinning), the Rust libraries need to be built with bitcode enabled. I believe this would require the llvm flag: <code>-fembed-bitcode</code>. Is there any way to do this in Cargo? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468982779, "post_id": 38471334, "comment_id": 64346539, "body": "Actually, I believe that your entire problem will be solved if you read and understand <a href=\"http://stackoverflow.com/a/34279224/155423\">stackoverflow.com/a/34279224/155423</a> and look at the signature for <code>unwrap</code>."}], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 2332321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42d67474574c6067053cee150d37ff85?s=128&d=identicon&r=PG", "display_name": "rthota50", "link": "https://stackoverflow.com/users/2332321/rthota50"}, "edited": false, "score": 0, "creation_date": 1469067800, "post_id": 38484888, "comment_id": 64388494, "body": "that was so simple.. weird.. i totally missed that.. thanks"}], "tags": [], "owner": {"reputation": 1056, "user_id": 3497181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e384ad3cea4b2ccaf03271303a94f1f?s=128&d=identicon&r=PG&f=1", "display_name": "rnstlr", "link": "https://stackoverflow.com/users/3497181/rnstlr"}, "is_accepted": true, "score": 1, "last_activity_date": 1469029142, "last_edit_date": 1469029142, "creation_date": 1469029007, "answer_id": 38484888, "question_id": 38471334, "link": "https://stackoverflow.com/questions/38471334/use-of-partially-moved-value-head/38484888#38484888", "title": "use of partially moved value: `*head`", "body": "<p>You need to borrow the content of the <code>Option</code> as mutable, see <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_mut\" rel=\"nofollow\"><code>Option::as_mut()</code> documentation</a>.</p>\n\n<pre><code>head.left.as_mut().unwrap().add_left('A');\n</code></pre>\n\n<p>Here a <a href=\"https://play.rust-lang.org/?gist=fe45c0d53eda67afef5cdbac9be65a5c&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">playpen</a> with a working version</p>\n"}], "owner": {"reputation": 15, "user_id": 2332321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42d67474574c6067053cee150d37ff85?s=128&d=identicon&r=PG", "display_name": "rthota50", "link": "https://stackoverflow.com/users/2332321/rthota50"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 38484888, "answer_count": 1, "score": 1, "last_activity_date": 1469029142, "creation_date": 1468981668, "last_edit_date": 1469019137, "question_id": 38471334, "link": "https://stackoverflow.com/questions/38471334/use-of-partially-moved-value-head", "title": "use of partially moved value: `*head`", "body": "<p>I am trying to build a simple <code>Node</code> struct with two pointers, the compiler complains that I have moved. I understand the error, but I don't see how to get around the issue.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Node {\n    val: char,\n    left: Option&lt;Box&lt;Node&gt;&gt;,\n    right: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nimpl Node {\n    fn new(c: char) -&gt; Box&lt;Node&gt; {\n        let new_node = Node {\n            val: c,\n            left: None,\n            right: None,\n        };\n        println!(\"new Node {}\", c);\n        return Box::new(new_node);\n    }\n    pub fn add_left(&amp;mut self, c: char) {\n        let n_node = Node::new(c);\n        let target = &amp;mut self.left;\n        *target = Some(n_node);\n    }\n    pub fn add_right(&amp;mut self, c: char) {\n        let n_node = Node::new(c);\n        let target = &amp;mut self.right;\n        *target = Some(n_node);\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n    let mut head = Node::new('M');\n    head.add_left('C');\n    head.left.unwrap().add_left('A');\n    head.add_right('N');\n}\n</code></pre>\n\n<p>Throws the following</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: use of partially moved value: `*head` [E0382]\n    head.add_right('N');\n    ^~~~\nhelp: run `rustc --explain E0382` to see a detailed explanation\nnote: `head.left` moved here because it has type `std::option::Option&lt;Box&lt;Node&gt;&gt;`, which is non-copyable\n    head.left.unwrap() .add_left('A');\n</code></pre>\n"}, {"tags": ["rust", "xcb"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468963406, "post_id": 38468219, "comment_id": 64341573, "body": "Probably a duplicate of <a href=\"http://stackoverflow.com/q/32300132\">stackoverflow.com/q/32300132</a>"}, {"owner": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "reply_to_user": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1468963681, "post_id": 38468219, "comment_id": 64341706, "body": "@malbarbo I added a link to the example"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468977764, "post_id": 38468219, "comment_id": 64345502, "body": "@fsasm it is expected that the question you ask <i>here</i> be a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Providing a offsite link to the code with the real issue won&#39;t help anyone else in the future and could be reason to close this question as it doesn&#39;t provide enough information to reproduce."}], "answers": [{"comments": [{"owner": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "edited": false, "score": 0, "creation_date": 1469000429, "post_id": 38468956, "comment_id": 64353152, "body": "I tried with the blocks as you suggested but I still get the same error messages."}, {"owner": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "edited": false, "score": 0, "creation_date": 1469000909, "post_id": 38468956, "comment_id": 64353452, "body": "I think that your solution doesn&#39;t work because <code>setup</code> is bound to the lifetime of <code>conn</code> and therefore the borrow exists during the complete lifetime of <code>conn</code>."}, {"owner": {"reputation": 126, "user_id": 6513271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3cfa33c69d6c7369582e2a3b0d33d99b?s=128&d=identicon&r=PG", "display_name": "Maciej", "link": "https://stackoverflow.com/users/6513271/maciej"}, "reply_to_user": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "edited": false, "score": 0, "creation_date": 1469019175, "post_id": 38468956, "comment_id": 64365763, "body": "Can you paste the modified code somewhere? <code>setup</code> is indeed bound to the lifetime of <code>conn</code>, the borrow should end when <code>setup</code> runs out of scope. From what I see all the other values on the struct are <code>Copy</code> so, nothing else can borrow <code>conn</code>."}, {"owner": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "edited": false, "score": 0, "creation_date": 1469020789, "post_id": 38468956, "comment_id": 64367010, "body": "Change the two lines with <code>setup</code> and <code>screen</code> to this: <code>let screen = {let setup = conn.get_setup(); setup.roots().nth(screen_nr as usize).unwrap()};</code>"}, {"owner": {"reputation": 126, "user_id": 6513271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3cfa33c69d6c7369582e2a3b0d33d99b?s=128&d=identicon&r=PG", "display_name": "Maciej", "link": "https://stackoverflow.com/users/6513271/maciej"}, "reply_to_user": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "edited": false, "score": 0, "creation_date": 1469024630, "post_id": 38468956, "comment_id": 64370100, "body": "Yeah, that won&#39;t do because you will still have <code>screen</code> and <code>setup</code> available in the same block as <code>conn</code>. The point is that you do whatever you need to do with them <i>inside</i> the block and only move the actual values you need outside (<code>window</code>, <code>gc</code> and <code>fb</code>)."}, {"owner": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "edited": false, "score": 0, "creation_date": 1469025812, "post_id": 38468956, "comment_id": 64371004, "body": "Thanks. Now it works, although <code>fb</code> is only a vector and therefore only <code>window</code> and <code>gc</code> needs to be moved outside the block. I didn&#39;t saw that the lifetime also affects <code>screen</code> and <code>root</code> as the compiler only complained about <code>setup</code>."}], "tags": [], "owner": {"reputation": 126, "user_id": 6513271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3cfa33c69d6c7369582e2a3b0d33d99b?s=128&d=identicon&r=PG", "display_name": "Maciej", "link": "https://stackoverflow.com/users/6513271/maciej"}, "is_accepted": true, "score": 2, "last_activity_date": 1468965549, "last_edit_date": 1468965549, "creation_date": 1468964251, "answer_id": 38468956, "question_id": 38468219, "link": "https://stackoverflow.com/questions/38468219/embedding-variables-with-lifetimes-in-struct/38468956#38468956", "title": "Embedding variables with lifetimes in struct", "body": "<p>We've all scratched our heads about this. For the most part, the compiler tells you what is wrong.</p>\n\n<p>At line 18 you are borrowing <code>conn</code>:</p>\n\n<pre><code>let setup = conn.get_setup();\n</code></pre>\n\n<p>Most methods take <code>&amp;self</code> or <code>&amp;mut self</code> as their first argument, thus borrowing the object they are called on. If the method doesn't return anything, the borrow will end at the end of it's scope. That isn't the case here as <code>setup</code> is using a lifetime (the <code>'a</code> in <code>Setup&lt;'a&gt;</code>), which will extend the life of the borrow. This usually doesn't get in your way since you can have as many immutable borrows as you want, but as long as you have at least one, the owned variable cannot be moved.</p>\n\n<p>So! As long as <code>setup</code> exists, the compiler will not allow you to move <code>conn</code>. To fix that, you need to make sure that setup \"dies\" before you create the struct. A simple way to do it, is to wrap it around in a block, like so:</p>\n\n<pre><code>fn new(width: u16, height: u16) -&gt; FbWindow \n{\n    let (conn, screen_nr) = Connection::connect(None).unwrap();\n\n    // because of block scoping, you might want to declare variables here\n    let gc: u32;\n    ...\n\n    {\n        // Borrowing `conn` here...\n        let setup = conn.get_setup();\n        let screen = setup.roots().nth(screen_nr as usize).unwrap();\n        ...\n\n        // Assign to the on the outer scope\n        gc = ...;\n\n        // All variables declared within this block will drop here,\n    }\n\n    // `conn` is not borrowed anymore!\n\n    FbWindow {\n        conn: conn,\n        window: window,\n        gc: gc,\n        width: width,\n        height: height,\n        fb: fb\n    }\n}\n</code></pre>\n\n<p>Alternatively, instead of declaring uninitialized variables you can exploit the fact that block is an expression in Rust and resolves to the last line in it. You can pack things in a tuple and deconstruct it with pattern matching:</p>\n\n<pre><code>let (window, gc, fb) = {\n    ...\n\n    // no semicolon here\n    (0, 0, Vec::new())\n}\n</code></pre>\n"}], "owner": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 134, "favorite_count": 0, "accepted_answer_id": 38468956, "answer_count": 1, "score": 1, "last_activity_date": 1469000671, "creation_date": 1468961252, "last_edit_date": 1469000671, "question_id": 38468219, "link": "https://stackoverflow.com/questions/38468219/embedding-variables-with-lifetimes-in-struct", "title": "Embedding variables with lifetimes in struct", "body": "<p>I'm a beginner in Rust and I want to make a simple application to render fractals like Mandelbrot. The fractals are rendered into a X11-window. The X11-window is made with the <a href=\"https://crates.io/crates/xcb\" rel=\"nofollow\">xcb crate</a> (version 0.7.4). </p>\n\n<p>I want to encapsulate everything that is needed for the window in a struct.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate xcb;\nuse xcb::base::*;\n\nstruct FbWindow {\n    conn: Connection,\n    window: u32,\n    gc: u32,\n    width: u16,\n    height: u16,\n    fb: Vec&lt;u8&gt;\n}\n</code></pre>\n\n<p>In my <code>new</code> function for the struct I need a setup object from the connection which somehow has the same lifetime as the connection object. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl FbWindow {\n    fn new(width: u16, height: u16) -&gt; FbWindow \n    {\n        let (conn, screen_nr) = Connection::connect(None).unwrap();\n        let setup = conn.get_setup();\n        let screen = setup.roots().nth(screen_nr as usize).unwrap();\n        let root = screen.root();\n\n        /* Create GC - graphics context */\n        let gc = conn.generate_id();\n        let gc_values = [\n            (xcb::GC_FOREGROUND, screen.black_pixel()),\n            (xcb::GC_GRAPHICS_EXPOSURES, 0)\n        ];\n        xcb::create_gc(&amp;conn, gc, root, &amp;gc_values);\n\n        /* Create window */\n        let window = conn.generate_id();\n        let window_values = [\n            (xcb::CW_BACK_PIXEL, screen.black_pixel()),\n            (xcb::CW_EVENT_MASK, xcb::EVENT_MASK_EXPOSURE | xcb::EVENT_MASK_KEY_PRESS)\n        ];\n        xcb::create_window(&amp;conn, xcb::COPY_FROM_PARENT as u8, window, root,\n            0, 0, width, height, 1, xcb::WINDOW_CLASS_INPUT_OUTPUT as u16,\n            screen.root_visual(), &amp;window_values\n        );\n        xcb::map_window(&amp;conn, window);\n\n        /* Create the framebuffer */\n        let mut fb : Vec&lt;u8&gt; = vec![0; (width as usize) * (height as usize) * 4];\n\n        FbWindow {\n            conn: conn, \n            window: window,\n            gc: gc,\n            width: width,\n            height: height,\n            fb: fb\n        }\n    }\n}\n</code></pre>\n\n<p>The compiler doesn't let me move the connection object into the structure object that should be returned by <code>new</code>. I also tried with adding <code>setup</code> into the structure but it doesn't help. The compiler gives the following error with code from above:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src/main.rs:46:19: 46:23 error: cannot move out of `conn` because it is borrowed [E0505]\nsrc/main.rs:46             conn: conn, \n                                 ^~~~\nsrc/main.rs:18:21: 18:25 note: borrow of `conn` occurs here\nsrc/main.rs:18         let setup = conn.get_setup();\n                                   ^~~~\n</code></pre>\n\n<p>Looking up the documentation about the type of setup, reveals</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Setup&lt;'a&gt; = StructPtr&lt;'a, xcb_setup_t&gt;;\n</code></pre>\n\n<p>I'm really new to rust and the concept of lifetimes and it's still confusing to me, but as far as I understand <code>setup</code> has the same lifetime as <code>conn</code> and the compiler refuses to move because of the borrowing in <code>setup</code>.</p>\n\n<p>How do I get the code working as intended? </p>\n\n<p>Edit: The code is based of the examples from the <a href=\"https://github.com/rtbo/rust-xcb/blob/master/examples/drawing.rs\" rel=\"nofollow\">crate repository</a>\nEdit2: Full source code for <code>new</code>.</p>\n"}, {"tags": ["ios", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1480952438, "post_id": 38466493, "comment_id": 69165193, "body": "I think this can be closed, since the <code>rustup show</code> bug has been fixed and the rest seems impossible to reproduce with the current rustup/rustc/cargo"}], "answers": [{"comments": [{"owner": {"reputation": 364, "user_id": 1241051, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8a66497c0d513495acb92d917faaccb8?s=128&d=identicon&r=PG", "display_name": "ayl", "link": "https://stackoverflow.com/users/1241051/ayl"}, "edited": false, "score": 0, "creation_date": 1469047181, "post_id": 38488361, "comment_id": 64382487, "body": "Hey @brson, I posted some of the output from the cargo build above. I am not fully convinced that the rustup toolchain is getting picked up because I still see the Arm libraries loaded from the libraries I installed from rustup add target. The Arm libraries should be pulled from my own build of rustc, right??"}, {"owner": {"reputation": 1704, "user_id": 1204536, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0ce8e171d43e20591074a66e9ff7ae6?s=128&d=identicon&r=PG", "display_name": "brson", "link": "https://stackoverflow.com/users/1204536/brson"}, "reply_to_user": {"reputation": 364, "user_id": 1241051, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8a66497c0d513495acb92d917faaccb8?s=128&d=identicon&r=PG", "display_name": "ayl", "link": "https://stackoverflow.com/users/1241051/ayl"}, "edited": false, "score": 0, "creation_date": 1469061854, "post_id": 38488361, "comment_id": 64387230, "body": "In the output snipped you pasted there are a bunch of --extern flags that cargo is passing to rustc telling it to look in a certain place for crates, but those crates are the ones that cargo built <i>itself</i>. This output doesn&#39;t say anything about the location of the crates that <i>come with the compiler</i> (namely the standard library)."}, {"owner": {"reputation": 1704, "user_id": 1204536, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0ce8e171d43e20591074a66e9ff7ae6?s=128&d=identicon&r=PG", "display_name": "brson", "link": "https://stackoverflow.com/users/1204536/brson"}, "reply_to_user": {"reputation": 364, "user_id": 1241051, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8a66497c0d513495acb92d917faaccb8?s=128&d=identicon&r=PG", "display_name": "ayl", "link": "https://stackoverflow.com/users/1241051/ayl"}, "edited": false, "score": 0, "creation_date": 1469062012, "post_id": 38488361, "comment_id": 64387275, "body": "Here are two ways you can check that rustc is loading the standard library from the custom toolchain: first just run <code>rustc --sysroot</code>. This will output the path to the &#39;sysroot&#39;, the directory containing std. Second, you can set the environment variable <code>RUST_LOG=rustc_metadata::creader</code>. rustc should spew a bunch of crate loading diagnostics. The section beginning &#39;resolved crates&#39; should show the paths of every crate, including those in the sysroot."}, {"owner": {"reputation": 364, "user_id": 1241051, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8a66497c0d513495acb92d917faaccb8?s=128&d=identicon&r=PG", "display_name": "ayl", "link": "https://stackoverflow.com/users/1241051/ayl"}, "edited": false, "score": 0, "creation_date": 1469090574, "post_id": 38488361, "comment_id": 64398207, "body": "$ rustc --sysroot error: Argument to option &#39;sysroot&#39; missing."}, {"owner": {"reputation": 364, "user_id": 1241051, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8a66497c0d513495acb92d917faaccb8?s=128&d=identicon&r=PG", "display_name": "ayl", "link": "https://stackoverflow.com/users/1241051/ayl"}, "edited": false, "score": 0, "creation_date": 1469090652, "post_id": 38488361, "comment_id": 64398254, "body": "When I set RUST_LOG env variable, I don&#39;t see &#39;resolved crates&#39;."}], "tags": [], "owner": {"reputation": 1704, "user_id": 1204536, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0ce8e171d43e20591074a66e9ff7ae6?s=128&d=identicon&r=PG", "display_name": "brson", "link": "https://stackoverflow.com/users/1204536/brson"}, "is_accepted": false, "score": 2, "last_activity_date": 1469039915, "creation_date": 1469039915, "answer_id": 38488361, "question_id": 38466493, "link": "https://stackoverflow.com/questions/38466493/unable-to-override-rustup-toolchain-for-custom-build-of-ios-toolchain/38488361#38488361", "title": "Unable to override Rustup toolchain for custom build of iOS Toolchain", "body": "<p>I suspect that the behavior you are seeing in <code>rustup show</code> is a bug in rustup related to that specific command. I've <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/599\" rel=\"nofollow\">filed an issue</a> to look into it.</p>\n\n<p>What happens when you try to do the build with your custom toolchain after configuring it with <code>rustup link</code> and <code>rustup override</code>?</p>\n"}], "owner": {"reputation": 364, "user_id": 1241051, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8a66497c0d513495acb92d917faaccb8?s=128&d=identicon&r=PG", "display_name": "ayl", "link": "https://stackoverflow.com/users/1241051/ayl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1702, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1587239375, "creation_date": 1468954799, "last_edit_date": 1587239375, "question_id": 38466493, "link": "https://stackoverflow.com/questions/38466493/unable-to-override-rustup-toolchain-for-custom-build-of-ios-toolchain", "title": "Unable to override Rustup toolchain for custom build of iOS Toolchain", "body": "<p>I am creating my own toolchain with my build of Rust. I need this to cross compile with iOS architectures. When trying to set the default toolchain or override the current directory's toolchain, I'm getting an error regarding the name of my toolchain. These are the steps I took to create this new toolchain:</p>\n\n<ol>\n<li><p>Create Rustup Toolchain</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup toolchain link ios $HOME/rustc-ios\n</code></pre></li>\n<li><p>Override current directory toolchain </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup override set ios\n</code></pre></li>\n</ol>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup show\nDefault host: x86_64-apple-darwin\nerror: toolchain 'ios' does not support components\ninfo: caused by: invalid toolchain name: 'ios'\n</code></pre>\n\n<p>I've tried other names that conform to the toolchain naming conventions, but to no avail:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup toolchain link stable-2016-07-19-x86_64-apple-ios $HOME/rustc-ios\nerror: invalid custom toolchain name: 'stable-2016-07-19-x86_64-apple-ios'\n\n$ rustup toolchain link stable-x86_64-apple-ios $HOME/rustc-ios\nerror: invalid custom toolchain name: 'stable-x86_64-apple-ios'\n\n$ rustup toolchain link x86_64-apple-ios $HOME/rustc-ios\n</code></pre>\n\n<p>[Update]</p>\n\n<p>As for approach #2, when I do the cargo build, I still see the compiler linking the Arm libraries from the targets I installed for the rustup toolchain (i.e., that targets I installed for #1 in /Users/test-user/src/test-rust-lib/target/):</p>\n\n<pre><code>rustc src/lib.rs \n--crate-name test-rust-crate\n--crate-type staticlib \n-g \n--cfg \nfeature=\\\"no_network\\\" \n--out-dir /Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug \n--emit=dep-info,link \n--target armv7-apple-ios \n-L dependency=/Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug \n-L dependency=/Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug/deps \n--extern serde_json=/Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug/deps/libserde_json-55921106e25a0359.rlib \n--extern serde=/Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug/deps/libserde-e281201342afb4d4.rlib \n--extern time=/Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug/deps/libtime-750bfdd52feafcb7.rlib \n--extern libc=/Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug/deps/liblibc-1f3392fe1afd1313.rlib \n--extern murmur3=/Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug/deps/libmurmur3-ab9a44fb20fb9fad.rlib \n--extern quick_error=/Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug/deps/libquick_error-729eced693f2612d.rlib \n--extern url=/Users/test-user/src/test-rust-lib/target/armv7-apple-ios/debug/deps/liburl-4690728b1e11fab3.rlib\n</code></pre>\n\n<p>Shouldn't the Arm libraries be pulled from the rustc that I built?</p>\n"}, {"tags": ["string", "unicode", "rust", "truncate"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 7, "creation_date": 1468938938, "post_id": 38461429, "comment_id": 64327244, "body": "Unicode is freaking complicated. Are you sure you want <code>char</code> (which corresponds to code points) as unit and not grapheme clusters?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 2, "creation_date": 1468939840, "post_id": 38461429, "comment_id": 64327879, "body": "Actually, the other direction is just as valid: Impose a limit on the number of <i>bytes</i> the UTF-8 encoding takes (you need some care to chop off whole characters &amp;mdash; take as many <code>char</code>s as possible without going over N bytes). While this does not match people&#39;s perception of character counts, it is reasonable when the restriction is storage-motivated (e.g., the size of a database column)."}], "answers": [{"comments": [{"owner": {"reputation": 8064, "user_id": 2007760, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/da33a5de07879db5ea0d55be9f875932?s=128&d=identicon&r=PG", "display_name": "Peter Uhnak", "link": "https://stackoverflow.com/users/2007760/peter-uhnak"}, "edited": false, "score": 0, "creation_date": 1469000485, "post_id": 38461750, "comment_id": 64353190, "body": "How is using <code>char_indices()</code> different from my use of <code>chars()</code>?"}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "reply_to_user": {"reputation": 8064, "user_id": 2007760, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/da33a5de07879db5ea0d55be9f875932?s=128&d=identicon&r=PG", "display_name": "Peter Uhnak", "link": "https://stackoverflow.com/users/2007760/peter-uhnak"}, "edited": false, "score": 2, "creation_date": 1469012702, "post_id": 38461750, "comment_id": 64361124, "body": "@Peter <code>chars</code> only returns the characters. <code>char_indices</code> is similar in concept to <code>chars().enumerate()</code> except it returns the actual index of the <code>u8</code> that character starts at in the original <code>str</code>."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 1, "creation_date": 1469017247, "post_id": 38461750, "comment_id": 64364291, "body": "<code>.skip(max_chars).next()</code> \u2192 <code>.nth(max_chars)</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 1, "creation_date": 1469018930, "post_id": 38461750, "comment_id": 64365553, "body": "@Veedrac Every. Single. Time. I will never remember it! <a href=\"https://github.com/Manishearth/rust-clippy/issues/1112\" rel=\"nofollow noreferrer\">Clippy feature request</a>!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 14, "last_activity_date": 1469018896, "last_edit_date": 1495540041, "creation_date": 1468939494, "answer_id": 38461750, "question_id": 38461429, "link": "https://stackoverflow.com/questions/38461429/how-can-i-truncate-a-string-to-have-at-most-n-characters/38461750#38461750", "title": "How can I truncate a string to have at most N characters?", "body": "<p>Make sure you read and understand <a href=\"https://stackoverflow.com/questions/38461429/how-to-truncate-string-to-have-at-most-n-characters#comment64327244_38461429\">delnan's point</a>:</p>\n\n<blockquote>\n  <p>Unicode is freaking complicated. Are you sure you want <code>char</code> (which corresponds to code points) as unit and not grapheme clusters? </p>\n</blockquote>\n\n<p><strong>The rest of this answer assumes you have a good reason for using <code>char</code> and not graphemes</strong>.</p>\n\n<blockquote>\n  <p>which is baffling considering Rust treats strings as Unicode</p>\n</blockquote>\n\n<p>This is not correct; Rust treats strings as <strong>UTF-8</strong>. In UTF-8, every code point is mapped to a variable number of bytes. There's no <code>O(1)</code> algorithm to convert \"6 characters\" to \"N bytes\", so the standard library doesn't hide that from you.</p>\n\n<p>You can use <code>char_indices</code> to step through the string character by character and get the byte index of that character:</p>\n\n<pre><code>fn truncate(s: &amp;str, max_chars: usize) -&gt; &amp;str {\n    match s.char_indices().nth(max_chars) {\n        None =&gt; s,\n        Some((idx, _)) =&gt; &amp;s[..idx],\n    }\n}\n\nfn main() {\n    assert_eq!(truncate(\"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\", 0), \"\");\n    assert_eq!(truncate(\"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\", 4), \"\u30dc\u30eb\u30c6\u30c3\");\n    assert_eq!(truncate(\"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\", 100), \"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\");\n    assert_eq!(truncate(\"hello\", 4), \"hell\");\n}\n</code></pre>\n\n<p>This also returns a slice that you can choose to move into a new allocation if you need to, or mutate a <code>String</code> in place:</p>\n\n<pre><code>// May not be as efficient as inlining the code...\nfn truncate_in_place(s: &amp;mut String, max_chars: usize) {\n    let bytes = truncate(&amp;s, max_chars).len();\n    s.truncate(bytes);\n}\n\nfn main() {\n    let mut s = \"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\".to_string();\n    truncate_in_place(&amp;mut s, 0);\n    assert_eq!(s, \"\");\n}\n</code></pre>\n"}], "owner": {"reputation": 8064, "user_id": 2007760, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/da33a5de07879db5ea0d55be9f875932?s=128&d=identicon&r=PG", "display_name": "Peter Uhnak", "link": "https://stackoverflow.com/users/2007760/peter-uhnak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1817, "favorite_count": 1, "accepted_answer_id": 38461750, "answer_count": 1, "score": 5, "last_activity_date": 1469018896, "creation_date": 1468938668, "last_edit_date": 1468939062, "question_id": 38461429, "link": "https://stackoverflow.com/questions/38461429/how-can-i-truncate-a-string-to-have-at-most-n-characters", "title": "How can I truncate a string to have at most N characters?", "body": "<p>The expected approach of <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.truncate\" rel=\"noreferrer\"><code>String.truncate(usize)</code></a> fails because it doesn't consider Unicode characters (which is baffling considering Rust treats strings as Unicode).</p>\n\n<pre><code>let mut s = \"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\".to_string();\ns.truncate(4);\n</code></pre>\n\n<blockquote>\n  <p>thread '' panicked at 'assertion failed: self.is_char_boundary(new_len)'</p>\n</blockquote>\n\n<p>Additionally, <code>truncate</code> modifies the original string, which is not always desired.</p>\n\n<p>The best I've come up with is to convert to <code>char</code>s and collect into a <code>String</code>.</p>\n\n<pre><code>fn truncate(s: String, max_width: usize) -&gt; String {\n    s.chars().take(max_width).collect()\n}\n</code></pre>\n\n<p>e.g.</p>\n\n<pre><code>fn main() {\n    assert_eq!(truncate(\"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\".to_string(), 0), \"\");\n    assert_eq!(truncate(\"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\".to_string(), 4), \"\u30dc\u30eb\u30c6\u30c3\");\n    assert_eq!(truncate(\"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\".to_string(), 100), \"\u30dc\u30eb\u30c6\u30c3\u30af\u30b9\");\n    assert_eq!(truncate(\"hello\".to_string(), 4), \"hell\");\n}\n</code></pre>\n\n<p>However this feels very heavy handed.</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 2, "creation_date": 1468938276, "post_id": 38461243, "comment_id": 64326722, "body": "This is missing a number of other types. There;s no definition of <code>HashMapLadder</code> here, for example."}, {"owner": {"reputation": 781, "user_id": 52209, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/501b3bd293f820573fa68ad1f82df786?s=128&d=identicon&r=PG", "display_name": "Joel Reymont", "link": "https://stackoverflow.com/users/52209/joel-reymont"}, "reply_to_user": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1468939277, "post_id": 38461243, "comment_id": 64327477, "body": "Added compilable code."}], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 2, "last_activity_date": 1468942878, "last_edit_date": 1468942878, "creation_date": 1468942487, "answer_id": 38462900, "question_id": 38461243, "link": "https://stackoverflow.com/questions/38461243/simplifying-a-type-signature-without-using-associated-types/38462900#38462900", "title": "Simplifying a type signature without using associated types", "body": "<p>I think that is not necessary to change the type signature. Considering what you sad:</p>\n\n<blockquote>\n  <p>I'm aware of associated types but want to be able to use a single <strong>price ladder with different implementations of price level</strong>.</p>\n</blockquote>\n\n<p>Maybe it is enough to create a type type alias parametrized by the price level implementation and with a fixed price ladder:</p>\n\n<pre><code>type HashBook&lt;Level&gt; = OrderBook&lt;Level, HashmapLadder&lt;Level&gt;&gt;;\n</code></pre>\n"}], "owner": {"reputation": 781, "user_id": 52209, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/501b3bd293f820573fa68ad1f82df786?s=128&d=identicon&r=PG", "display_name": "Joel Reymont", "link": "https://stackoverflow.com/users/52209/joel-reymont"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 38462900, "answer_count": 1, "score": 1, "last_activity_date": 1468942878, "creation_date": 1468938169, "last_edit_date": 1468941272, "question_id": 38461243, "link": "https://stackoverflow.com/questions/38461243/simplifying-a-type-signature-without-using-associated-types", "title": "Simplifying a type signature without using associated types", "body": "<p>Is there a way to simplify the type signature here </p>\n\n<pre><code>pub struct OrderBook&lt;T: PriceLevel, U: PriceLadder&lt;T&gt;&gt; {\n    levels: U,\n    phantom: PhantomData&lt;T&gt;,\n}\n</code></pre>\n\n<p>such that </p>\n\n<pre><code>type HashBook = OrderBook&lt;LinkedHashLevel, HashmapLadder&lt;LinkedHashLevel&gt;&gt;;\n</code></pre>\n\n<p>can be written as follows?</p>\n\n<pre><code>type HashBook = OrderBook&lt;LinkedHashLevel, HashmapLadder&gt;;\n</code></pre>\n\n<p>I'm aware of associated types but want to be able to use a single price ladder with different price level implementations.</p>\n\n<p>Complete compilable code below...</p>\n\n<pre><code>use std::marker::PhantomData;\nuse std::collections::HashMap;\n\npub struct OrderBook&lt;T: PriceLevel, U: PriceLadder&lt;T&gt;&gt; {\n    levels: U,\n    phantom: PhantomData&lt;T&gt;,\n}\n\nimpl&lt;T: PriceLevel, U: PriceLadder&lt;T&gt;&gt; OrderBook&lt;T, U&gt; {}\n\ntype HashBook = OrderBook&lt;LinkedHashLevel, HashmapLadder&lt;LinkedHashLevel&gt;&gt;;\n\npub trait PriceLevel {\n    fn new() -&gt; Self where Self: Sized;\n}\n\npub trait PriceLadder&lt;T: PriceLevel&gt; {\n    fn new() -&gt; Self;\n}\n\npub struct LinkedHashLevel {\n}\n\nimpl PriceLevel for LinkedHashLevel {\n    fn new() -&gt; Self {\n        LinkedHashLevel {}\n    }\n}\n\npub struct HashmapLadder&lt;T: PriceLevel&gt; {\n    levels: HashMap&lt;u64, T&gt;,\n}\n\nimpl&lt;T: PriceLevel&gt; PriceLadder&lt;T&gt; for HashmapLadder&lt;T&gt; {\n    fn new() -&gt; Self {\n        HashmapLadder { levels: HashMap::new() }\n    }\n}\n\nfn main() {}\n</code></pre>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 8, "last_activity_date": 1468941880, "creation_date": 1468941880, "answer_id": 38462669, "question_id": 38459139, "link": "https://stackoverflow.com/questions/38459139/implementing-nested-traits/38462669#38462669", "title": "Implementing Nested Traits", "body": "<p>You can do it making <code>T</code> an associated type:</p>\n\n<pre><code>trait Foo { }\ntrait Boo { }\ntrait Bar {\n    type T: Foo;\n}\ntrait Baz { }\n\nimpl&lt;U: Bar + Boo&gt; Baz for U\n    // this where clause is not necessary (this bound is already true)\n    // where U::T: Foo\n{ }\n</code></pre>\n\n<blockquote>\n  <p>I don't want to do this because I want to keep track of <code>T</code>, e.g. I want to write some functions which have a signature like <code>fn bla&lt;T: Foo, U: Bar&lt;T&gt;, V: Bar&lt;T&gt;&gt;()</code> where I want to know that <code>U</code> and <code>V</code> implement <code>Bar&lt;T&gt;</code> for the <em>same</em> <code>T</code>. (<strong>Or is there way of doing this with associated types?</strong>)</p>\n</blockquote>\n\n<p>Yes, you can do it with associated types:</p>\n\n<pre><code>fn bla&lt;U: Bar, V: Bar&lt;T = U::T&gt;&gt;() { }\n</code></pre>\n"}], "owner": {"reputation": 195, "user_id": 3589776, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f56049843011af085cd299d0f5d22eb6?s=128&d=identicon&r=PG&f=1", "display_name": "aclow", "link": "https://stackoverflow.com/users/3589776/aclow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1174, "favorite_count": 0, "accepted_answer_id": 38462669, "answer_count": 1, "score": 10, "last_activity_date": 1468941880, "creation_date": 1468932677, "last_edit_date": 1468939577, "question_id": 38459139, "link": "https://stackoverflow.com/questions/38459139/implementing-nested-traits", "title": "Implementing Nested Traits", "body": "<p>I have some traits which (after removing functions and some parameter bloat) look like:</p>\n\n<pre><code>trait Foo { }\ntrait Boo { }\ntrait Bar&lt;T: Foo&gt; { }\ntrait Baz { }\n</code></pre>\n\n<p>If <code>U</code> implements <code>Bar&lt;T&gt;</code> for some <code>T</code> implementing <code>Foo</code> <em>and</em> <code>U</code> implements <code>Boo</code>, then one is able to derive an implementation of <code>Baz</code> for <code>U</code>. However, I wasn't able to write valid Rust code doing this.</p>\n\n<p>A few tries were:</p>\n\n<pre><code>impl&lt;T: Foo, U: Bar&lt;T&gt; + Boo&gt; Baz for U { }\n</code></pre>\n\n<p>which gives</p>\n\n<blockquote>\n  <p>error: the type parameter <code>T</code> is not constrained by the impl trait, self type, or predicates [E0207]</p>\n</blockquote>\n\n<p>whereas</p>\n\n<pre><code>impl&lt;U: Bar&lt;T&gt; + Boo&gt; Baz for U { }\n</code></pre>\n\n<p>yields</p>\n\n<blockquote>\n  <p>error: type name <code>T</code> is undefined or not in scope [E0412]</p>\n</blockquote>\n\n<p>Could one/how could one do this in (stable) Rust (hopefully without any dynamic dispatch)?</p>\n\n<p><strong>Edit</strong>: Some people hinted at some similar questions for which there were essentially two approaches (and I find both of them unsuitable for my situation):</p>\n\n<ol>\n<li>Using associated types. I don't want to do this because I want to keep track of <code>T</code>, e.g. I want to write some functions which have a signature like <code>fn bla&lt;T: Foo, U: Bar&lt;T&gt;, V: Bar&lt;T&gt;&gt;()</code> where I want to know that <code>U</code> and <code>V</code> implement <code>Bar&lt;T&gt;</code> for the <em>same</em> <code>T</code>. (Or is there way of doing this with associated types?)</li>\n<li>Using some kind of wrapping by putting <code>U</code> and <code>T</code> in a struct. I don't want to use this either because I have several levels of such \"trait dependencies\", so wrapping things in each level would bloat the code a lot.</li>\n</ol>\n\n<p>So the updated question would be: <em>Is there a solution to this problem without using associated types or wrappers?</em></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1469196237, "post_id": 38449414, "comment_id": 64450881, "body": "One reason that globals are painful to deal with: the linker controls which gets used, not the code."}], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 5, "last_activity_date": 1468912581, "creation_date": 1468912581, "answer_id": 38451825, "question_id": 38449414, "link": "https://stackoverflow.com/questions/38449414/do-crates-share-public-static-variables-of-common-dependencies/38451825#38451825", "title": "Do crates share public static variables of common dependencies?", "body": "<blockquote>\n  <p>Will modifications to a static variable made by one of the dependent crates be reflected globally?</p>\n</blockquote>\n\n<p>Yes. The final rustc invocation by cargo will only add the shared dependency once. If you use two different incompatible versions of the shared dependency, then it will be added \"twice\".</p>\n\n<blockquote>\n  <p>Does Rust provide a way to control this behavior?</p>\n</blockquote>\n\n<p>I'm assuming you are asking whether it's possible to create a new static for every dependency using it. I'm not aware of such a feature. There might be hacks by going through dynamic libs, but there's no explicit feature that duplicates dependencies.</p>\n\n<p>If you want such a behaviour, change the common dependency to yield a state object that the crates using it can put into their own static.</p>\n"}], "owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 1, "accepted_answer_id": 38451825, "answer_count": 1, "score": 3, "last_activity_date": 1468912581, "creation_date": 1468901050, "last_edit_date": 1468910191, "question_id": 38449414, "link": "https://stackoverflow.com/questions/38449414/do-crates-share-public-static-variables-of-common-dependencies", "title": "Do crates share public static variables of common dependencies?", "body": "<p>Given three crates where two crates depend on one version of the third, and the third exposing a mutable static variable as part of its API. </p>\n\n<p>Will modifications to a static variable made by one of the dependent crates be reflected globally? Does Rust provide a way to control this behavior?</p>\n"}, {"tags": ["ios", "rust", "rust-cargo"], "owner": {"reputation": 364, "user_id": 1241051, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/8a66497c0d513495acb92d917faaccb8?s=128&d=identicon&r=PG", "display_name": "ayl", "link": "https://stackoverflow.com/users/1241051/ayl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 340, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1469126328, "creation_date": 1468895659, "last_edit_date": 1495535330, "question_id": 38448682, "link": "https://stackoverflow.com/questions/38448682/missing-standard-library-components-when-cross-compiling-rust-for-ios-device-arc", "title": "Missing Standard Library Components when Cross Compiling Rust for iOS Device Architectures (Arm7, Armv7) Using Cargo", "body": "<p>I'm using Cargo to build my Rust libraries for iOS architectures (i386-apple-ios x86_64-apple-ios armv7-apple-ios armv7s-apple-ios aarch64-apple-ios). I'm having problems building for Armv7 and Armv7s iOS device architectures. I'm getting errors regarding missing standard library components (e.g., memcpy, memset, etc.) The build works for the simulators though (i386 and i686), as well as for Arm64. </p>\n\n<p>I've tried two approaches for cross compiling using Cargo:</p>\n\n<ol>\n<li>Installing the Rustup toolchain targets for all the iOS architectures.</li>\n<li>Building Rustc with my configuration set to the targets of all the iOS architectures (../configure --target=armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,aarch64-apple-ios,x86_64-apple-ios --prefix=$HOME/rustc-ios) per <a href=\"https://www.bignerdranch.com/blog/building-an-ios-app-in-rust-part-1/\" rel=\"nofollow noreferrer\">https://www.bignerdranch.com/blog/building-an-ios-app-in-rust-part-1/</a>.</li>\n</ol>\n\n<p>When I tried approach #1, I get the following errors: </p>\n\n<p>Undefined symbols for architecture armv7:</p>\n\n<pre><code>  \"memset\", referenced from:\n      ___aeabi_memset in libtest_sst.a(aeabi_memset.o)\n      ___aeabi_memclr in libtest_sst.a(aeabi_memset.o)\n     (maybe you meant: ___aeabi_memset)\n  \"memcpy\", referenced from:\n      ___aeabi_memcpy in libtest_sst.a(aeabi_memcpy.o)\n     (maybe you meant: ___aeabi_memcpy)\n  \"memcmp\", referenced from:\n      ___aeabi_memcmp in libtest_sst.a(aeabi_memcmp.o)\n     (maybe you meant: ___aeabi_memcmp)\n  \"___aeabi_dsub\", referenced from:\n      ___aeabi_drsub in libtest_sst.a(aeabi_drsub.o)\n  \"___aeabi_fsub\", referenced from:\n      ___aeabi_frsub in libtest_sst.a(aeabi_frsub.o)\n  \"__aeabi_fcmplt\", referenced from:\n      ___aeabi_cfcmple in libtest_sst.a(aeabi_cfcmp.o)\n     (maybe you meant: ___aeabi_fcmplt)\n  \"__aeabi_fcmpeq\", referenced from:\n      ___aeabi_cfcmple in libtest_sst.a(aeabi_cfcmp.o)\n     (maybe you meant: ___aeabi_fcmpeq)\n  \"__aeabi_cfcmpeq_check_nan\", referenced from:\n      ___aeabi_cfcmpeq in libtest_sst.a(aeabi_cfcmp.o)\n     (maybe you meant: ___aeabi_cfcmpeq_check_nan)\n  \"memmove\", referenced from:\n      ___aeabi_memmove in libtest_sst.a(aeabi_memmove.o)\n     (maybe you meant: ___aeabi_memmove)\n  \"__aeabi_dcmpeq\", referenced from:\n      ___aeabi_cdcmple in libtest_sst.a(aeabi_cdcmp.o)\n     (maybe you meant: ___aeabi_dcmpeq)\n  \"__aeabi_cdcmpeq_check_nan\", referenced from:\n      ___aeabi_cdcmpeq in libtest_sst.a(aeabi_cdcmp.o)\n     (maybe you meant: ___aeabi_cdcmpeq_check_nan)\n  \"__aeabi_cfcmple\", referenced from:\n      ___aeabi_cfcmpeq in libtest_sst.a(aeabi_cfcmp.o)\n      ___aeabi_cfrcmple in libtest_sst.a(aeabi_cfcmp.o)\n     (maybe you meant: ___aeabi_cfcmple)\n  \"__aeabi_dcmplt\", referenced from:\n      ___aeabi_cdcmple in libtest_sst.a(aeabi_cdcmp.o)\n     (maybe you meant: ___aeabi_dcmplt)\n  \"__aeabi_cdcmple\", referenced from:\n      ___aeabi_cdcmpeq in libtest_sst.a(aeabi_cdcmp.o)\n      ___aeabi_cdrcmple in libtest_sst.a(aeabi_cdcmp.o)\n     (maybe you meant: ___aeabi_cdcmple)\nld: symbol(s) not found for architecture armv7\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n\n<p>When I tried approach #2, I get the following errors:</p>\n\n<p>Undefined symbols for architecture armv7:</p>\n\n<pre><code>  \"___aeabi_fsub\", referenced from:\n      ___aeabi_frsub in libtest_sst.a(aeabi_frsub.c.o)\n  \"___aeabi_dsub\", referenced from:\n      ___aeabi_drsub in libtest_sst.a(aeabi_drsub.c.o)\nld: symbol(s) not found for architecture armv7\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n\n<p>My Makefile for producing the final static library looks like this:</p>\n\n<pre><code>ARCHS = i386-apple-ios x86_64-apple-ios armv7-apple-ios armv7s-apple-ios aarch64-apple-ios\nLIB = libtest.a\n\nall: $(LIB)\n\n.PHONY: $(ARCHS)\n$(ARCHS): %:\n        cargo build --verbose --no-default-features --features=no_network --target $@\n\n$(LIB): $(ARCHS)\n        lipo -create -output $@ $(foreach arch,$(ARCHS),$(wildcard target/$(arch)/debug/$(LIB)))\n</code></pre>\n\n<p>My Cargo.toml looks like this:</p>\n\n<pre><code>[package]\nname = \"test\"\nversion = \"0.1.0\"\nauthors = [\"test &lt;test@test.com&gt;\"]\n\nbuild = \"build.rs\"\n\n[lib]\nname = \"test\"\ncrate-type = [\"staticlib\"]\n\n[features]\n\ndefault = [\"hyper\"]\nno_network = []\n\n[build-dependencies]\nserde_codegen = \"*\"\n\n[dependencies]\n# error-chain = \"*\"\nhyper = { version = \"*\", optional = true }\nlibc = \"*\"\nmurmur3 = \"*\"\nquick-error = \"*\"\nserde = \"*\"\nserde_json = \"*\"\ntime = \"*\"\nurl = \"*\"\n</code></pre>\n\n<p>I'm actually not sure I'm installing the toolchain correctly though. I've posted this issue in another question:\n<a href=\"https://stackoverflow.com/questions/38466493/unable-to-override-rustup-toolchain-for-custom-build-of-ios-toolchain\">Unable to override Rustup toolchain for custom build of iOS Toolchain</a></p>\n\n<p>Here is the build.rs code:</p>\n\n<pre><code>extern crate serde_codegen;\n\nuse std::env;\nuse std::path::Path;\n\nfn serde_codegen_data(data_class: &amp;str) {\n  let out_dir = env::var_os(\"OUT_DIR\").expect(\"OUT_DIR expected\");\n\n  let src_name = format!(\"src/data/{}.rs.in\", data_class);\n  let src = Path::new(&amp;src_name);\n\n  let dst_name = format!(\"{}.rs\", data_class);\n  let dst = Path::new(&amp;out_dir).join(&amp;dst_name);\n\n  serde_codegen::expand(&amp;src, &amp;dst).expect(\"serde_codegen\");\n}\n\npub fn main() {\n    serde_codegen_data(\"audience\");\n    serde_codegen_data(\"condition\");\n    serde_codegen_data(\"dimension\");\n    serde_codegen_data(\"event\");\n    serde_codegen_data(\"experiment\");\n    serde_codegen_data(\"project\");\n    serde_codegen_data(\"traffic_allocation\");\n    serde_codegen_data(\"variation\");\n    serde_codegen_data(\"group\");\n}\n</code></pre>\n\n<p>Furthermore, in XCode, I've also tried linking the following libraries:</p>\n\n<p>library: System\nframework: Foundation\nlibrary: objc\nframework: Security\nlibrary: c\nlibrary: m</p>\n\n<p>Per the Cargo output warning. But, I still get the same errors. </p>\n\n<p>[Update 7/21/16]</p>\n\n<p>Just tried Cargo Lipo from <a href=\"https://github.com/TimNN/cargo-lipo\" rel=\"nofollow noreferrer\">https://github.com/TimNN/cargo-lipo</a>, but am getting the exact same errors still. </p>\n"}, {"tags": ["string", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1546268782, "last_edit_date": 1546268782, "creation_date": 1468888602, "answer_id": 38447886, "question_id": 38447780, "link": "https://stackoverflow.com/questions/38447780/how-to-crop-characters-off-the-beginning-of-a-string-in-rust/38447886#38447886", "title": "How to &quot;crop&quot; characters off the beginning of a string in Rust?", "body": "<p>Issues with your original code:</p>\n\n<ol>\n<li>Functions use <code>snake_case</code>, types and traits use <code>CamelCase</code>.</li>\n<li><code>\"foo\"</code> is a string literal of type <code>&amp;str</code>. These may not be changed. You will need something that has been heap-allocated, such as a <code>String</code>.</li>\n<li>The call <code>crop_letters(stringofletters, 3)</code> would <em>transfer ownership</em> of <code>stringofletters</code> to the method, which means you wouldn't be able to use the variable anymore. You must pass in a mutable reference (<code>&amp;mut</code>).</li>\n<li>Rust strings <strong>are not ASCII</strong>, they are <strong>UTF-8</strong>. You need to figure out how many bytes each character requires. <code>char_indices</code> is a good tool here.</li>\n<li>You need to handle the case of when the string is shorter than 3 characters.</li>\n<li>Once you have the byte position of the new beginning of the string, you can use <code>drain</code> to move a chunk of bytes out of the string. We just drop these bytes and let the <code>String</code> move over the remaining bytes. </li>\n</ol>\n\n\n\n<pre><code>fn crop_letters(s: &amp;mut String, pos: usize) {\n    match s.char_indices().nth(pos) {\n        Some((pos, _)) =&gt; {\n            s.drain(..pos);\n        }\n        None =&gt; {\n            s.clear();\n        }\n    }\n}\n\nfn main() {\n    let mut example = String::from(\"stringofletters\");\n    crop_letters(&amp;mut example, 3);\n    assert_eq!(\"ingofletters\", example);\n}\n</code></pre>\n\n<p>See <a href=\"https://stackoverflow.com/a/38455374/155423\">Chris Emerson's answer</a> if you don't actually need to modify the original <code>String</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 7, "last_activity_date": 1546268816, "last_edit_date": 1546268816, "creation_date": 1468922663, "answer_id": 38455374, "question_id": 38447780, "link": "https://stackoverflow.com/questions/38447780/how-to-crop-characters-off-the-beginning-of-a-string-in-rust/38455374#38455374", "title": "How to &quot;crop&quot; characters off the beginning of a string in Rust?", "body": "<p>In many uses it would make sense to simply return a slice of the input, avoiding any copy.  Converting <a href=\"https://stackoverflow.com/a/38447886/155423\">@Shepmaster's solution</a> to use immutable slices:</p>\n\n<pre><code>fn crop_letters(s: &amp;str, pos: usize) -&gt; &amp;str {\n    match s.char_indices().skip(pos).next() {\n        Some((pos, _)) =&gt; &amp;s[pos..],\n        None =&gt; \"\",\n    }\n}\n\nfn main() {\n    let example = \"stringofletters\"; // works with a String if you take a reference\n    let cropped = crop_letters(example, 3);\n    println!(\"{}\", cropped);\n}\n</code></pre>\n\n<p>Advantages over the mutating version are:</p>\n\n<ul>\n<li>No copy is needed. You can call <code>cropped.to_string()</code> if you want a newly allocated result; but you don't have to.</li>\n<li>It works with static string slices as well as mutable <code>String</code> etc.</li>\n</ul>\n\n<p>The disadvantage is that if you really do have a mutable string you want to modify, it would be slightly less efficient as you'd need to allocate a new <code>String</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546269074, "post_id": 53987401, "comment_id": 94815159, "body": "The &quot;problem&quot; with this solution is that it assumes either (a) that the input string is ASCII or (b) that the user has already found the correct byte offset. For example, this will fail with the input string <code>&quot;&#229;&#225;&#226;&#228;&quot;</code>."}], "tags": [], "owner": {"reputation": 143, "user_id": 1720730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7847bf190710a23839d2702d8a7c8a3f?s=128&d=identicon&r=PG", "display_name": "Shaddy", "link": "https://stackoverflow.com/users/1720730/shaddy"}, "is_accepted": false, "score": 0, "last_activity_date": 1546268684, "last_edit_date": 1546268684, "creation_date": 1546258442, "answer_id": 53987401, "question_id": 38447780, "link": "https://stackoverflow.com/questions/38447780/how-to-crop-characters-off-the-beginning-of-a-string-in-rust/53987401#53987401", "title": "How to &quot;crop&quot; characters off the beginning of a string in Rust?", "body": "<p>I found this answer which I don't consider really idiomatic:</p>\n\n<pre><code>fn crop_with_allocation(string: &amp;str, len: usize) -&gt; String {\n    string.chars().skip(len).collect()\n}\n\nfn crop_without_allocation(string: &amp;str, len: usize) -&gt; &amp;str {\n    // optional length check\n    if string.len() &lt; len {\n        return &amp;\"\";\n    }\n    &amp;string[len..]\n}\n\nfn main() {\n    let example = \"stringofletters\"; // works with a String if you take a reference\n    let cropped = crop_with_allocation(example, 3);\n    println!(\"{}\", cropped);\n    let cropped = crop_without_allocation(example, 3);\n    println!(\"{}\", cropped);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61, "user_id": 6787579, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b58c297f7895c733d6846488e36478fd?s=128&d=identicon&r=PG&f=1", "display_name": "\u041c\u0438\u0445\u0430\u0438\u043b \u041c\u043e\u0434\u0438\u043d", "link": "https://stackoverflow.com/users/6787579/%d0%9c%d0%b8%d1%85%d0%b0%d0%b8%d0%bb-%d0%9c%d0%be%d0%b4%d0%b8%d0%bd"}, "is_accepted": false, "score": 0, "last_activity_date": 1606574694, "creation_date": 1606574694, "answer_id": 65050800, "question_id": 38447780, "link": "https://stackoverflow.com/questions/38447780/how-to-crop-characters-off-the-beginning-of-a-string-in-rust/65050800#65050800", "title": "How to &quot;crop&quot; characters off the beginning of a string in Rust?", "body": "<p>my version</p>\n<pre><code>fn crop_str(s: &amp;str, n: usize) -&gt; &amp;str {\n    let mut it = s.chars();\n    for _ in 0..n {\n        it.next();\n    }\n    it.as_str()\n}\n\n#[test]\nfn test_crop_str() {\n    assert_eq!(crop_str(&quot;123&quot;, 1), &quot;23&quot;);\n    assert_eq!(crop_str(&quot;\u0416\u04241&quot;, 1), &quot;\u04241&quot;);\n    assert_eq!(crop_str(&quot;\u0416\u04241&quot;, 2), &quot;1&quot;);\n}\n</code></pre>\n"}], "owner": {"reputation": 81, "user_id": 6180117, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1053f5e9b7be14d8af8f8094d005d06d?s=128&d=identicon&r=PG&f=1", "display_name": "LonelyPyxel", "link": "https://stackoverflow.com/users/6180117/lonelypyxel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2980, "favorite_count": 1, "accepted_answer_id": 38447886, "answer_count": 4, "score": 3, "last_activity_date": 1606574694, "creation_date": 1468887752, "last_edit_date": 1468889934, "question_id": 38447780, "link": "https://stackoverflow.com/questions/38447780/how-to-crop-characters-off-the-beginning-of-a-string-in-rust", "title": "How to &quot;crop&quot; characters off the beginning of a string in Rust?", "body": "<p>I want a function that can take two arguments <code>(string, number of letters to crop off front)</code> and return the same string except with the letters before character <em>x</em> gone.</p>\n\n<p>If I write</p>\n\n<pre><code>let mut example = \"stringofletters\";\nCropLetters(example, 3);\nprintln!(\"{}\", example);\n</code></pre>\n\n<p>then the output should be:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ingofletters\n</code></pre>\n\n<p>Is there any way I can do this?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1468877855, "last_edit_date": 1495542759, "creation_date": 1468877855, "answer_id": 38446397, "question_id": 38446217, "link": "https://stackoverflow.com/questions/38446217/can-i-create-a-binding-with-the-type-optionstr/38446397#38446397", "title": "Can I create a binding with the type `Option&lt;&amp;str&gt;`?", "body": "<p>Absolutely:</p>\n\n<pre><code>fn main() {\n    let s = \"a\".to_string() + \"b\";\n    let a: Option&lt;&amp;str&gt; = Some(&amp;s);\n}\n</code></pre>\n\n<p>The problem is not in creating a <code>Option&lt;&amp;str&gt;</code>, it's that you are trying to take a reference to something that has gone out of scope. This is (a part of) the error message for the original code:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed value does not live long enough\n  |&gt;         Some(&amp;{\"a\".to_string() + \"b\"})\n  |&gt;               ^^^^^^^^^^^^^^^^^^^^^^^ does not live long enough\n</code></pre>\n\n<p>See <a href=\"https://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a> for further information.</p>\n"}, {"tags": [], "owner": {"reputation": 11117, "user_id": 1554020, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/49118fbd7e64a00bc99b19d41e5e28e0?s=128&d=identicon&r=PG", "display_name": "yuri kilochek", "link": "https://stackoverflow.com/users/1554020/yuri-kilochek"}, "is_accepted": false, "score": 1, "last_activity_date": 1468877869, "creation_date": 1468877869, "answer_id": 38446398, "question_id": 38446217, "link": "https://stackoverflow.com/questions/38446217/can-i-create-a-binding-with-the-type-optionstr/38446398#38446398", "title": "Can I create a binding with the type `Option&lt;&amp;str&gt;`?", "body": "<p>You need to extend lifetime of the string beyond <code>a</code>'s initializer expression by binding it to another name:    </p>\n\n<pre><code>fn main() {\n    let x: String = \"a\".to_string() + \"b\";\n    let a: Option&lt;&amp;str&gt; = {\n        Some(&amp;x)\n    };\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": false, "score": 1, "last_activity_date": 1468877928, "creation_date": 1468877928, "answer_id": 38446411, "question_id": 38446217, "link": "https://stackoverflow.com/questions/38446217/can-i-create-a-binding-with-the-type-optionstr/38446411#38446411", "title": "Can I create a binding with the type `Option&lt;&amp;str&gt;`?", "body": "<p>You are trying to keep a reference to a value that does not live long enough, like the error says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>3 |&gt;         Some(&amp;{\"a\".to_string() + \"b\"}) // Let's say the string is not static\n  |&gt;               ^^^^^^^^^^^^^^^^^^^^^^^ does not live long enough\n</code></pre>\n\n<p>You can have a bind of type <code>Option&lt;&amp;str&gt;</code>, but the reference must live longer than the bind. In your example, you create a bind to the result string, an than take a reference to it:</p>\n\n<pre><code>fn main() {\n    let x: String = \"a\".to_string() + \"b\";\n    let a: Option&lt;&amp;str&gt; = Some(&amp;x);\n}\n</code></pre>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 38446397, "answer_count": 3, "score": 0, "last_activity_date": 1468877928, "creation_date": 1468876976, "last_edit_date": 1468877693, "question_id": 38446217, "link": "https://stackoverflow.com/questions/38446217/can-i-create-a-binding-with-the-type-optionstr", "title": "Can I create a binding with the type `Option&lt;&amp;str&gt;`?", "body": "<p>Can I create a binding with the type <code>Option&lt;&amp;str&gt;</code>? Tiny non-working example:</p>\n\n<pre><code>fn main() {\n    let a: Option&lt;&amp;str&gt; = {\n        Some(&amp;{\"a\".to_string() + \"b\"}) // Let's say the string is not static\n    };\n}\n</code></pre>\n\n<p>This does not work, I need to add lifetime (or use a <code>Option&lt;String&gt;</code> without <code>&amp;</code>). So how can I declare lifetime here? I know I can return a <code>Option&lt;String&gt;</code> and everything will be fine, but that's not what I want \u2014 I'm trying to understand some Rust mechanics. I can declare lifetime in a function, but don't know how to do this in a simple <code>let</code> binding. </p>\n"}, {"tags": ["rust", "iron"], "comments": [{"owner": {"reputation": 231, "user_id": 1239635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/339ff643e06ce18c144855e117d1a3d2?s=128&d=identicon&r=PG", "display_name": "anowell", "link": "https://stackoverflow.com/users/1239635/anowell"}, "edited": false, "score": 0, "creation_date": 1469079557, "post_id": 38431488, "comment_id": 64391641, "body": "Not an answer to your question, but I&#39;ve started working on wkhtmltopdf bindings to the C-lib, where spawning a separate process won&#39;t be necessary at all. Not production ready, but you can find the proof-of-concept here: <a href=\"https://github.com/anowell/wkhtmltopdf-rs\" rel=\"nofollow noreferrer\">github.com/anowell/wkhtmltopdf-rs</a>"}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "reply_to_user": {"reputation": 231, "user_id": 1239635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/339ff643e06ce18c144855e117d1a3d2?s=128&d=identicon&r=PG", "display_name": "anowell", "link": "https://stackoverflow.com/users/1239635/anowell"}, "edited": false, "score": 0, "creation_date": 1469084025, "post_id": 38431488, "comment_id": 64393919, "body": "Ok! I will have a look and maybe use it for this project!"}], "answers": [{"comments": [{"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 2, "creation_date": 1468833856, "post_id": 38432937, "comment_id": 64271578, "body": "Okay, my question is not about &quot;how to do my webservice&quot; but &quot;How to avoid Zombies process in Rust Iron running Command&quot;. Anyway thank you for your answer. PDF, root and design are not important. My real question is about Rust command, Iron and handling output, you answer about application design."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6555228"}, "reply_to_user": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1468834231, "post_id": 38432937, "comment_id": 64271821, "body": "I answered in the second paragraph. You must wait on the child process."}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1468834301, "post_id": 38432937, "comment_id": 64271861, "body": "Ok thank you! I don&#39;t want to make it synchronously and wait (that&#39;s the goal of spawn)."}, {"owner": {"reputation": 231, "user_id": 1239635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/339ff643e06ce18c144855e117d1a3d2?s=128&d=identicon&r=PG", "display_name": "anowell", "link": "https://stackoverflow.com/users/1239635/anowell"}, "edited": false, "score": 0, "creation_date": 1469080243, "post_id": 38432937, "comment_id": 64391917, "body": "see this node: <a href=\"https://doc.rust-lang.org/std/process/struct.Child.html#note\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/process/struct.Child.html#note</a> - basically wait for it, or it will continue to run.  You should be able to get the behavior you want by spawning a thread that spawns the process, and waiting inside that thread."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user6555228"}, "is_accepted": true, "score": 2, "last_activity_date": 1468846955, "last_edit_date": 1468846955, "creation_date": 1468833538, "answer_id": 38432937, "question_id": 38431488, "link": "https://stackoverflow.com/questions/38431488/how-to-avoid-zombie-processes-when-running-a-command/38432937#38432937", "title": "How to avoid zombie processes when running a Command?", "body": "<p>Your problem is that you are not waiting for the process termination, so the operating system is not releasing any resources (see the <a href=\"http://linux.die.net/man/2/waitpid\" rel=\"nofollow\">man pages for proper explanation</a>). Your zombies are taking memory, which will result in resource exhaustion. Killing the parent process will not do anything, you need to kill each zombie manually (if you were running wkhtmltopdf within a thread, it would work).</p>\n\n<hr>\n\n<p>Beyond that...</p>\n\n<p>You are trying to spawn a command and answer your clients ... without even checking the status code of wkhtmltopdf. Moreover, you are running as root, which is A BAD PRACTICE (whether you are developing as root or not). And your application is susceptible to DDoS (if you have a lot of clients generating PDFs, your server will face resource exhaustion).</p>\n\n<p>(IMHO) You should break your project into two :</p>\n\n<ol>\n<li>the server without the rendering process</li>\n<li>the PDF rendering engine</li>\n</ol>\n\n<p>The first would send a message to the second \"please generate a PDF with the following parameters(..)\". The second would look at the messages queue, take the first, generate the PDF and wait for completion/errors. You could even add a unique #ID to the message, and create an endpoint on the rendering engine to actually query for the status of job #ID.</p>\n\n<p>What you are trying to do is a job queue like <a href=\"http://www.celeryproject.org/\" rel=\"nofollow\">Celery</a>, but it is written in Python and is using third-party software (Redis).</p>\n"}, {"tags": [], "owner": {"reputation": 34, "user_id": 14915753, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZvxJL.png?s=128&g=1", "display_name": "Robert Waksmunski", "link": "https://stackoverflow.com/users/14915753/robert-waksmunski"}, "is_accepted": false, "score": -1, "last_activity_date": 1610658150, "creation_date": 1610658150, "answer_id": 65726882, "question_id": 38431488, "link": "https://stackoverflow.com/questions/38431488/how-to-avoid-zombie-processes-when-running-a-command/65726882#65726882", "title": "How to avoid zombie processes when running a Command?", "body": "<p>It's ugly, I hate it, it works!</p>\n<pre><code>use std::{thread, time};\n\n\nlet _ = thread::spawn(|| {\n    // Cull zombies every minute in the background\n    loop {\n        let minute = time::Duration::from_secs(60);\n        thread::sleep(minute);\n        println!(&quot;Culling Zombies&quot;);\n        // 99999 FreeBSD\n        // cat /proc/sys/kernel/pid_max Linux\n        for pid in 1..99999 {\n            let _ = nix::sys::wait::waitpid(nix::unistd::Pid::from_raw(pid as i32), Some(nix::sys::wait::WaitPidFlag::WNOHANG));\n        }\n    }\n});\n</code></pre>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 818, "favorite_count": 0, "accepted_answer_id": 38432937, "answer_count": 2, "score": 3, "last_activity_date": 1610658150, "creation_date": 1468829017, "last_edit_date": 1468864614, "question_id": 38431488, "link": "https://stackoverflow.com/questions/38431488/how-to-avoid-zombie-processes-when-running-a-command", "title": "How to avoid zombie processes when running a Command?", "body": "<p>A small Iron project calls a <code>Command</code> in some route and returns a <code>Response</code>. Here is the relevant code of the route handler function:</p>\n\n<pre><code>fn convert(req: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n\n    // ...\n    // init some bindings like destination_html and destination_pdf\n    // ...\n\n    convert_to_pdf(destination_html, destination_pdf);\n\n    Ok( Response::with((status::Ok, \"Done\")) )\n}\n</code></pre>\n\n<p>And the code of the called function:</p>\n\n<pre><code>fn convert_to_pdf(destination_html: &amp;str, destination_pdf: &amp;str) {\n    Command::new(\"xvfb-run\")\n        .arg(\"-a\")\n        .arg(\"wkhtmltopdf\")\n        .arg(destination_html)\n        .arg(destination_pdf)\n        .stdout(Stdio::null())\n        .stderr(Stdio::null())\n        .spawn()\n        .expect(\"failed to execute process\");\n}\n</code></pre>\n\n<p>The process works (the file is converted from HTML to PDF) and the response is returned to the browser. Everything is fine, but a zombie process is still there as a child of my app:</p>\n\n<p><a href=\"https://i.stack.imgur.com/Eovti.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Eovti.png\" alt=\"enter image description here\"></a></p>\n\n<p>I don't know why and I don't know how to avoid it. <strong>What could I do?</strong> </p>\n\n<p>The <code>wkhtmltopdf</code> command is a long process, I don't want to call it synchronously and wait for its return. And I don't want to restart my Rust program (the parent of the zombie child) twice a day to kill zombies.</p>\n"}, {"tags": ["serialization", "rust"], "comments": [{"owner": {"reputation": 37702, "user_id": 129805, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/F1gxS.png?s=128&g=1", "display_name": "fadedbee", "link": "https://stackoverflow.com/users/129805/fadedbee"}, "edited": false, "score": 0, "creation_date": 1618861646, "post_id": 38424590, "comment_id": 118726374, "body": "I <i>think</i> that I am already doing something similar: <a href=\"https://stackoverflow.com/questions/67168397/how-does-serde-bincode-serialize-byte-arrays\" title=\"how does serde bincode serialize byte arrays\">stackoverflow.com/questions/67168397/&hellip;</a> but I do not understand how it is working."}], "answers": [{"comments": [{"owner": {"reputation": 455, "user_id": 2616346, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/bb073fa5f10ead26c67ec9bc697d255c?s=128&d=identicon&r=PG", "display_name": "user2616346", "link": "https://stackoverflow.com/users/2616346/user2616346"}, "edited": false, "score": 0, "creation_date": 1468784498, "post_id": 38425009, "comment_id": 64257005, "body": "Yes, I need output defined in a specification. So, If it is so necessary, I will write own encoder."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1468782948, "creation_date": 1468782948, "answer_id": 38425009, "question_id": 38424590, "link": "https://stackoverflow.com/questions/38424590/how-to-serialize-slice-without-length-using-bincode/38425009#38425009", "title": "How to serialize slice without length using bincode?", "body": "<blockquote>\n  <p>a slice with a fixed size</p>\n</blockquote>\n\n<p><code>[u8; 16]</code> is <strong>not</strong> a <em>slice</em>. It is an <em>array</em> which may be coerced to a slice.</p>\n\n<p>Anyway... I do not believe that you can. The important function appears to be <a href=\"http://tyoverby.com/bincode/serde/ser/trait.Serializer.html#method.serialize_fixed_size_array\" rel=\"nofollow\"><code>Serializer::serialize_fixed_size_array</code></a> which is not implemented by the <a href=\"https://github.com/TyOverby/bincode/blob/aa0f9804da3621259dd945992dea9116b8b49688/src/serde/writer.rs\" rel=\"nofollow\">current serializer</a>. That means it defaults to behaving the same as a slice.</p>\n\n<p>Since slices do not have a length known at compile time, they must have their size written when serialized.</p>\n\n<p>If no one else can provide a better suggestion, it's <em>possible</em> that the maintainer could find a way to make this happen. You may want to politely ask the maintainer for this feature or offer to help with the work.</p>\n\n<hr>\n\n<p>Beyond that, it sounds like you are trying to make the bincode output fit a pre-existing format. That doesn't really make sense; bincode is its own format and had already made various choices and tradeoffs.</p>\n\n<p>If you need to, you could implement your own encoder / decoder (either using serde or not). If you are concerned about file size, you can combine bincode with a compression step as well.</p>\n"}], "owner": {"reputation": 455, "user_id": 2616346, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/bb073fa5f10ead26c67ec9bc697d255c?s=128&d=identicon&r=PG", "display_name": "user2616346", "link": "https://stackoverflow.com/users/2616346/user2616346"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 433, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1468782948, "creation_date": 1468780237, "last_edit_date": 1468781315, "question_id": 38424590, "link": "https://stackoverflow.com/questions/38424590/how-to-serialize-slice-without-length-using-bincode", "title": "How to serialize slice without length using bincode?", "body": "<p>I'm using the bincode crate to write a structure into a file. The structure contains a slice with a fixed size. How can I force bincode to write only the slice's content without the slice's length?</p>\n\n<pre><code>#![allow(unstable)]\n#![feature(custom_derive, plugin)]\n#![plugin(serde_macros)]\n\nextern crate serde;\nextern crate bincode;\n\nuse std::fs::File;\nuse bincode::serde::serialize_into;\nuse bincode::SizeLimit;\n\n#[derive(Serialize)]\nstruct Foo([u8; 16]);\n\nfn main() {\n    let data = Foo([0; 16]);\n    let mut writer = File::create(\"test.bin\").unwrap();\n    serialize_into::&lt;File, Foo&gt;(&amp;mut writer, &amp;data, SizeLimit::Infinite).unwrap();\n}\n</code></pre>\n\n<p>File 'test.bin' has 24 bytes size instead of 16.</p>\n\n<p>I saw <a href=\"http://tyoverby.com/bincode/serde/ser/trait.Serializer.html#method.serialize_bytes\" rel=\"nofollow\">related remark</a> in documentation of bincode, but I did not understand how to use it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3483, "user_id": 2668666, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/3QEDd.jpg?s=128&g=1", "display_name": "jmrah", "link": "https://stackoverflow.com/users/2668666/jmrah"}, "edited": false, "score": 0, "creation_date": 1573088968, "post_id": 38423607, "comment_id": 103770995, "body": "FYI, the code successfully compiles with recent versions of the Rust compiler.  I believe this is due to <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">Non-Lexical lifetimes</a>"}], "answers": [{"comments": [{"owner": {"reputation": 33244, "user_id": 13379, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29d7c49f6f174710788c79011219bae1?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/13379/michael"}, "edited": false, "score": 0, "creation_date": 1468776940, "post_id": 38423646, "comment_id": 64254659, "body": "That solves my SSCCE, but not the problem in my actual code.  Will have to look into it further.  Thank you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 33244, "user_id": 13379, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29d7c49f6f174710788c79011219bae1?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/13379/michael"}, "edited": false, "score": 0, "creation_date": 1468777025, "post_id": 38423646, "comment_id": 64254694, "body": "@Michael we look forward to the next question! ^_^"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1468775101, "last_edit_date": 1495542758, "creation_date": 1468774387, "answer_id": 38423646, "question_id": 38423607, "link": "https://stackoverflow.com/questions/38423607/how-do-i-modify-a-variable-thats-defined-outside-of-a-closure-from-inside-of-a/38423646#38423646", "title": "How do I modify a variable that&#39;s defined outside of a closure from inside of a closure?", "body": "<p>Exactly as you have done; that's not the problem here. The complete error message shows more detail:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot borrow `t` as immutable because it is also borrowed as mutable [--explain E0502]\n    |&gt;         let mut closure = || {\n    |&gt;                           -- mutable borrow occurs here\n    |&gt;             t.clear();\n    |&gt;             - previous borrow occurs due to use of `t` in closure\n...\n    |&gt;     println!(\"{}\", t);\n    |&gt;                    ^ immutable borrow occurs here\n    |&gt; }\n    |&gt; - mutable borrow ends here\n</code></pre>\n\n<p>You have given a mutable reference of the variable to the closure and the closure is still in scope. This means it retains the reference and you are not able to have any other references to the variable. This shows the same problem:</p>\n\n<pre><code>fn main() {\n    let mut t = \"foo\".to_string();\n    println!(\"&gt; {}\", t);\n    let not_a_closure = &amp;mut t;\n    println!(\"&gt; {}\", t);\n}\n</code></pre>\n\n<p>Creating the closure in a smaller scope forces the closure to go out of scope and release the reference before the call to <code>println!</code>:</p>\n\n<pre><code>fn main() {\n    let mut t = \"foo\".to_string();\n    println!(\"&gt; {}\", t);\n\n    {\n        let mut closure = || {\n            t.clear();\n        };\n        closure();\n    }\n\n    println!(\"&gt; {}\", t);\n}\n</code></pre>\n\n<p>I'd suggest looking at the <a href=\"https://stackoverflow.com/search?q=%5Brust%5D+cannot+borrow+as+immutable+because+it+is+also+borrowed+as+mutable+is%3Aq\">60+ other questions with the same error message</a> for more information on the error.</p>\n"}], "owner": {"reputation": 33244, "user_id": 13379, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29d7c49f6f174710788c79011219bae1?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/13379/michael"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 475, "favorite_count": 0, "accepted_answer_id": 38423646, "answer_count": 1, "score": 2, "last_activity_date": 1468775101, "creation_date": 1468774150, "last_edit_date": 1468774208, "question_id": 38423607, "link": "https://stackoverflow.com/questions/38423607/how-do-i-modify-a-variable-thats-defined-outside-of-a-closure-from-inside-of-a", "title": "How do I modify a variable that&#39;s defined outside of a closure from inside of a closure?", "body": "<p>How do I modify a variable that's defined outside of a closure from inside of a closure?</p>\n\n<p>Code:</p>\n\n<pre><code>fn main() {\n    let mut t = \"foo\".to_string();\n    println!(\"{}\", t);\n\n    let mut closure = | | {\n        t.clear();\n    };\n    closure();\n\n    println!(\"{}\", t);\n}\n</code></pre>\n\n<p>Compilation Error:</p>\n\n<pre><code>cannot borrow `t` as immutable because it is also borrowed as mutable [--explain E0502]\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1468720776, "post_id": 38417244, "comment_id": 64241475, "body": "What about a symlink? Or maybe the Rust bindings should be in a separate project and you could use a git submodule to reference the C++ code."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1468743135, "post_id": 38417244, "comment_id": 64245143, "body": "There are <code>git</code> tools (<code>git submodule</code> and <code>git subtee</code>) which make it easier to manage remote repositories inside your own. I can elaborate if that&#39;s a useful direction for you."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1468743190, "post_id": 38417244, "comment_id": 64245157, "body": "The rust-lua53 project takes a different approach, and downloads the Lua source at build time from <code>build.rs</code>."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 3, "last_activity_date": 1469014443, "creation_date": 1469014443, "answer_id": 38480165, "question_id": 38417244, "link": "https://stackoverflow.com/questions/38417244/how-to-package-source-code-from-outside-the-project-directory-with-cargo/38480165#38480165", "title": "How to package source code from outside the project directory with Cargo?", "body": "<p>The way it's generally solved:</p>\n\n<ul>\n<li><p>Use a git submodule (or a script run before publishing) to embed a copy of the C++ repo inside the Rust repo (e.g. in <code>rust/cryptominisat/vendor/</code>). During development you could use a symlink instead to avoid having two copies of the C++ code.</p></li>\n<li><p>Use <code>build.rs</code> to download a tarball/clone/rsync the code at build time. You can dump it into <code>OUT_DIR</code> env var specified by Cargo to avoid polluting user-visible directories.</p></li>\n<li><p>Make the C++ code a system-level library. The Rust package would not build it, but expect it's already installed, and only search for it and specify link flags for it. That's how most <code>*-sys</code> crates work.</p></li>\n</ul>\n"}], "owner": {"reputation": 33471, "user_id": 1420279, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c799e8b3d14c4f149ce71455109f17eb?s=128&d=identicon&r=PG", "display_name": "Antimony", "link": "https://stackoverflow.com/users/1420279/antimony"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 461, "favorite_count": 0, "accepted_answer_id": 38480165, "answer_count": 1, "score": 1, "last_activity_date": 1469042330, "creation_date": 1468720641, "last_edit_date": 1469042330, "question_id": 38417244, "link": "https://stackoverflow.com/questions/38417244/how-to-package-source-code-from-outside-the-project-directory-with-cargo", "title": "How to package source code from outside the project directory with Cargo?", "body": "<p>I am trying to create Rust bindings for the C++ library cryptominisat. The actual code works, but I'm not sure how to properly package it up with Cargo.</p>\n\n<p>The git repository looks like</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src/\n    c++ code here\n.gitignore\nreadme, etc.\n</code></pre>\n\n<p>I added a <code>rust</code> directory, and created my Cargo project inside of it like so</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rust/\n    cryptominisat/\n        Cargo.toml\n        build.rs\n            src/\n                rust code here\nsrc/\n    c++ code here\n.gitignore\nreadme, etc.\n</code></pre>\n\n<p>Unfortunately, <code>cargo package</code> doesn't seem to want to package up anything outside of the rust/cryptominisat directory, which means it doesn't include the C++ code needed to actually build the library. What can I do? I don't want to move the entire repository into the <code>rust</code> directory if I can avoid it, since that would make it impossible to merge upstream.</p>\n"}, {"tags": ["gdb", "rust"], "comments": [{"owner": {"reputation": 18871, "user_id": 1442050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e975c669f2ce0f2be4613f1e123864b3?s=128&d=identicon&r=PG", "display_name": "Tom Tromey", "link": "https://stackoverflow.com/users/1442050/tom-tromey"}, "edited": false, "score": 0, "creation_date": 1600262355, "post_id": 38416394, "comment_id": 113032257, "body": "In gdb, if you use the <code>start</code> command, it will stop at the first line of the Rust main program, as opposed to the Rust-provided &quot;bootstrap main&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "edited": false, "score": 0, "creation_date": 1468713175, "post_id": 38416539, "comment_id": 64240349, "body": "Neither <code>(gdb) rbreak &#39;rust-gdb-test::main.*&#39;</code> nor <code>(lldb) br set -r &#39;rust-gdb-test::main.*&#39;</code> set any breakpoints for me."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1468715671, "last_edit_date": 1495541384, "creation_date": 1468711388, "answer_id": 38416539, "question_id": 38416394, "link": "https://stackoverflow.com/questions/38416394/unable-to-set-a-breakpoint-on-main-while-debugging-a-program-compiled-with-rust/38416539#38416539", "title": "Unable to set a breakpoint on main while debugging a program compiled with Rust 1.10 with GDB", "body": "<p>Note: I seem to not have GDB installed anymore, only LLDB, but for this question the answer is the same.</p>\n\n<p>The <code>main</code> that you see in Rust is not the same <code>main</code> that exists in the compiled binary. Specifically, there are a number of shim methods between the two. The Rust <code>main</code> actually includes the crate name (in my example <code>buggin</code>) and a hash (in my case <code>hfe08615ed561bb88</code>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  * frame #0: 0x000000010000126d buggin`buggin::main::hfe08615ed561bb88 + 29 at main.rs:2\n    frame #1: 0x000000010000810e buggin`std::panicking::try::call::hbbf4746cba890ca7 + 30\n    frame #2: 0x000000010000aadc buggin`__rust_try + 12\n    frame #3: 0x000000010000aa76 buggin`__rust_maybe_catch_panic + 38\n    frame #4: 0x0000000100007f32 buggin`std::rt::lang_start::hbcefdc316c2fbd45 + 562\n    frame #5: 0x00000001000013aa buggin`main + 42\n    frame #6: 0x00007fff910435ad libdyld.dylib`start + 1\n    frame #7: 0x00007fff910435ad libdyld.dylib`start + 1\n</code></pre>\n\n<p>Here, you can see that <code>main</code> is a few frames away in the stack.</p>\n\n<p>I tend to use a wildcard breakpoint to not deal with the hash:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(lldb) br set -r 'buggin::main.*'\nBreakpoint 5: where = buggin`buggin::main::hfe08615ed561bb88 + 29, address = 0x000000010000126d\n</code></pre>\n\n<p><code>rbreak</code> should be an equivalent in GDB.</p>\n\n<p>Once the program is stopped, you should be able to see the source. You may also be interested in the <code>rust-lldb</code> and <code>rust-gdb</code> wrappers that ship with Rust and improve the experience a bit.</p>\n\n<p>This is basically the same as <a href=\"https://stackoverflow.com/a/29901831/155423\">this answer</a>, but mentions the hash.</p>\n\n<blockquote>\n  <p>Neither <code>(gdb) rbreak 'rust-gdb-test::main.*'</code> nor <code>(lldb) br set -r 'rust-gdb-test::main.*'</code> set any breakpoints for me.</p>\n</blockquote>\n\n<p>The hyphen (<code>-</code>) is not a valid symbol character. When compiled, it is converted to an underscore.</p>\n\n<p>My original methodology was actually this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(lldb) br set -r '.*main.*'\nBreakpoint 2: 67 locations.\n</code></pre>\n\n<p>You can then run the program and continue a few times until you find the right place. Don't be afraid to get in there and explore a bit; it's just a debugger!</p>\n\n<p>You could try various versions of the regex to see if anything interesting might match:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(lldb) br set -r '.*main::.*'\nBreakpoint 3: where = rust-gdb-test`rust_gdb_test::main::h97d2ac6fea75a245 + 29,\n(lldb) br set -r '.*::main.*'\nBreakpoint 4: where = rust-gdb-test`rust_gdb_test::main::h97d2ac6fea75a245 + 29,\n</code></pre>\n\n<p>You could also call a function with a very unique name from <code>main</code> and set a breakpoint on that:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(lldb) br set -r '.*a_really_unique_name.*'\n</code></pre>\n"}], "owner": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1035, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1468715671, "creation_date": 1468709870, "last_edit_date": 1495541867, "question_id": 38416394, "link": "https://stackoverflow.com/questions/38416394/unable-to-set-a-breakpoint-on-main-while-debugging-a-program-compiled-with-rust", "title": "Unable to set a breakpoint on main while debugging a program compiled with Rust 1.10 with GDB", "body": "<p>I'm trying to step through this:</p>\n\n<pre><code>fn main() {\n    println!(\"Hello {}\", 0);\n}\n</code></pre>\n\n<p>I've tried compiling with both: <code>cargo build</code> and <code>rustc -g -L src/main.rs</code></p>\n\n<p>I then run <code>gdb target/debug/rust-gdb-test</code> (or <code>gdb main</code>), and try to set a breakpoint on <code>main</code> with <code>break main</code>. </p>\n\n<p>(<code>break ::rust-gdb-test::main</code> returns <code>Function \"::rust-gdb-test\" not defined.</code>).</p>\n\n<p>After breaking (<code>Breakpoint 1, 0x0000555555559610 in main ()</code>) if I try to run <code>list</code>, I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1   dl-debug.c: No such file or directory.\n</code></pre>\n\n<p>I am running Rust 1.10.0 <code>(cfcb716cf 2016-07-03)</code> and GDB 7.7.1 <code>(Debian 7.7.1+dfsg-5)</code>.</p>\n\n<p>A <a href=\"https://stackoverflow.com/questions/24664994/debugging-rust-with-gdb\">similar question</a> was asked 2 years ago, but I couldn't make the solutions presented there to work.</p>\n"}, {"tags": ["python", "rust", "ctypes", "ffi"], "comments": [{"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468694723, "post_id": 38412184, "comment_id": 64236322, "body": "@Shepmaster see edit."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1468696207, "post_id": 38412184, "comment_id": 64236731, "body": "How is <code>coords.into</code> implemented? I&#39;m trying to get you to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> so that anyone else can reproduce the error, debug it and tell you the answer. Very few people on SO are magic code mindreaders... Maybe you don&#39;t even need the <code>Array</code> aspect at all; have you tried removing that and seeing if the crash continues? Maybe it&#39;s <i>only</i> the <code>Array</code>; what about removing the <code>CString</code>?"}, {"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468699718, "post_id": 38412184, "comment_id": 64237716, "body": "@Shepmaster I&#39;ve added the rest of the traits. The encode function is in an <a href=\"https://github.com/urschrei/rust-polyline/blob/master/src/lib.rs#L51-L74\" rel=\"nofollow noreferrer\">external crate</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1468762656, "post_id": 38412184, "comment_id": 64250027, "body": "<i>The encode function is in an external crate</i> \u2014 Why don&#39;t you create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> that inlines the code from the crate, removes unnecessary trait implementations, and someone could paste it directly into a new project and <b>reproduce</b> the error?"}, {"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468763412, "post_id": 38412184, "comment_id": 64250234, "body": "@shepmaster I&#39;m not directly disagreeing with you, but in this case I wouldn&#39;t just need to inline a single function, since <code>encode</code> refers to other functions in its crate, so I&#39;d be adding ~100 loc to the example. What if I reproduce the cargo.toml, since the <code>libc</code> crate needs to be included, too?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468763692, "post_id": 38412184, "comment_id": 64250321, "body": "<i>but in this case I wouldn&#39;t just need to inline a single function, since encode refers to other functions in its crate</i> \u2014 if the problem is too big for you to reduce it, then it&#39;s not appropriate for Stack Overflow. Realize that because you won&#39;t do this work, you are instead forcing <i>multiple</i> other people to do the work. Note that I&#39;m <b>not</b> telling you to put all the code in one file, but to spend the time to replace function calls with stub values, remove unused conditionals, remove modules, etc. I&#39;d believe that this problem could be completely reduced to ~100 lines of code."}, {"owner": {"reputation": 5662, "user_id": 5781248, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/712de4f2f811d1a400d3311c9cdd5836?s=128&d=identicon&r=PG&f=1", "display_name": "J.J. Hakala", "link": "https://stackoverflow.com/users/5781248/j-j-hakala"}, "edited": false, "score": 2, "creation_date": 1468764726, "post_id": 38412184, "comment_id": 64250589, "body": "<a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">this documentation</a> for <code>from_raw_parts</code> states that &quot;ptr needs to have been previously allocated via String/Vec&lt;T&gt;&quot; which is not the case here."}], "answers": [{"comments": [{"owner": {"reputation": 5662, "user_id": 5781248, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/712de4f2f811d1a400d3311c9cdd5836?s=128&d=identicon&r=PG&f=1", "display_name": "J.J. Hakala", "link": "https://stackoverflow.com/users/5781248/j-j-hakala"}, "edited": false, "score": 0, "creation_date": 1468750893, "post_id": 38419426, "comment_id": 64246967, "body": "I&#39;m not so familiar with rust so I don&#39;t know if that kind of passing of string is possible, or is it easier to return a string owned by rust."}, {"owner": {"reputation": 5662, "user_id": 5781248, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/712de4f2f811d1a400d3311c9cdd5836?s=128&d=identicon&r=PG&f=1", "display_name": "J.J. Hakala", "link": "https://stackoverflow.com/users/5781248/j-j-hakala"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468763566, "post_id": 38419426, "comment_id": 64250278, "body": "@Shepmaster I edited my answer to include relevant definitions from that file I had created."}, {"owner": {"reputation": 5662, "user_id": 5781248, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/712de4f2f811d1a400d3311c9cdd5836?s=128&d=identicon&r=PG&f=1", "display_name": "J.J. Hakala", "link": "https://stackoverflow.com/users/5781248/j-j-hakala"}, "edited": false, "score": 2, "creation_date": 1468763801, "post_id": 38419426, "comment_id": 64250350, "body": "My attempt to create a C friendly library for polylines can be found <a href=\"https://github.com/jjhoo/rust-polylines-ffi\" rel=\"nofollow noreferrer\">here</a>. If there is some odd looking code, it is due to my near total lack of Rust related experience."}], "tags": [], "owner": {"reputation": 5662, "user_id": 5781248, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/712de4f2f811d1a400d3311c9cdd5836?s=128&d=identicon&r=PG&f=1", "display_name": "J.J. Hakala", "link": "https://stackoverflow.com/users/5781248/j-j-hakala"}, "is_accepted": false, "score": 2, "last_activity_date": 1468763251, "last_edit_date": 1468763251, "creation_date": 1468745027, "answer_id": 38419426, "question_id": 38412184, "link": "https://stackoverflow.com/questions/38412184/python-calling-rust-ffi-with-ctypes-crashes-at-exit-with-pointer-being-freed-wa/38419426#38419426", "title": "Python calling Rust FFI with ctypes crashes at exit with &quot;pointer being freed was not allocated&quot;", "body": "<p>I think that the Rust side of the code assumes ownership of the data and tries to deallocate the data when the process exits, so the Python code is not to be blamed. As a proof, the following C code that calls <code>encode_coordinates_ffi</code> and <code>drop_cstring</code> also causes a segmentation fault.</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdint.h&gt;\n\ntypedef struct {\n    double longitude;\n    double latitude;\n} coord_t;\n\ntypedef struct {\n    coord_t * data;\n    size_t count;\n} points_t;\n\nchar * encode_coordinates_ffi(points_t points);\nvoid drop_cstring(void * str);\n\nint main(void)\n{\n   points_t data;\n   coord_t * points;\n   char * res;\n\n   data.data = malloc(sizeof(coord_t) * 2);\n   data.count = 2;\n   points = (coord_t *)data.data;\n\n   points[0].latitude = 1.0;\n   points[0].longitude = 2.0;\n   points[1].latitude = 3.0;\n   points[1].longitude = 4.0;\n\n   res = encode_coordinates_ffi(data);\n   printf(\"%s\\n\", res);\n   free(data.data);\n   drop_cstring(res);\n\n   return 0;\n}\n</code></pre>\n\n<p><code>valgrind -v</code> gives the following information</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Invalid free() / delete / delete[] / realloc()\n   at 0x4C2CDFB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n   by 0x4007EB: main (in /tmp/rusti/a.out)\n Address 0x5ea8040 is 0 bytes inside a block of size 32 free'd\n   at 0x4C2CDFB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n   by 0x4EE7FB4: alloc::heap::deallocate::h74ff05db8ae4652e (heap.rs:113)\n   by 0x4EE7F52: _$LT$alloc..raw_vec..RawVec$LT$T$GT$$u20$as$u20$std..ops..Drop$GT$::drop::ha72c57f32dae0328 (raw_vec.rs:567)\n   by 0x4EE7E5D: alloc..raw_vec..RawVec$LT$$u5b$f64$u3b$$u20$2$u5d$$GT$::drop.6367::h05166e3a96ef1f41 (in /tmp/rusti/polyline_ffi/target/debug/libpolyline_ffi.so)\n   by 0x4EE7E45: std..vec..Vec$LT$$u5b$f64$u3b$$u20$2$u5d$$GT$::drop_contents.6364::h68f73d9e22af548c (in /tmp/rusti/polyline_ffi/target/debug/libpolyline_ffi.so)\n   by 0x4EE7C69: std..vec..Vec$LT$$u5b$f64$u3b$$u20$2$u5d$$GT$::drop.6314::h68f73d9e22af548c (in /tmp/rusti/polyline_ffi/target/debug/libpolyline_ffi.so)\n   by 0x4EE7B9B: polyline_ffi::_$LT$impl$u20$std..convert..From$LT$Array$GT$$u20$for$u20$std..string..String$GT$::from::h3b597d62ca6eb863 (lib.rs:46)\n   by 0x4EE84D9: _$LT$T$u20$as$u20$std..convert..Into$LT$U$GT$$GT$::into::h996bdd9d6ba87f7b (convert.rs:209)\n   by 0x4EE83EB: encode_coordinates_ffi (lib.rs:57)\n   by 0x4007D8: main (in /tmp/rusti/a.out)\n Block was alloc'd at\n   at 0x4C2BBCF: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n   by 0x400795: main (in /tmp/rusti/a.out)\n</code></pre>\n\n<p>If that <code>free(data.data)</code> is left out, the program finishes without a segmentation fault and valgrind doesn't find any memory leaks.</p>\n\n<p>I would try to implement the interface so that it corresponds to</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct {\n    double longitude;\n    double latitude;\n} coord_t;\n\nint coordinates_ffi(char * dst, size_t n, coord_t * points, size_t npoints);\n</code></pre>\n\n<p>where <code>dst</code> would be for the encoded string (length limit <code>n</code>, some approximation based on the number of coordinates <code>npoints</code>) so there would be no need for the caller to deallocate the Rust string.</p>\n"}, {"comments": [{"owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "edited": false, "score": 0, "creation_date": 1468856040, "post_id": 38422230, "comment_id": 64287082, "body": "Thanks for the detailed explanation, as ever. I&#39;ll make an effort to post reproducible code in future."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1468765923, "last_edit_date": 1495540736, "creation_date": 1468765283, "answer_id": 38422230, "question_id": 38412184, "link": "https://stackoverflow.com/questions/38412184/python-calling-rust-ffi-with-ctypes-crashes-at-exit-with-pointer-being-freed-wa/38422230#38422230", "title": "Python calling Rust FFI with ctypes crashes at exit with &quot;pointer being freed was not allocated&quot;", "body": "<p>Thanks to the effort made in <a href=\"https://stackoverflow.com/a/38419426/155423\">J.J. Hakala's answer</a>, I was able to produce a <a href=\"/help/mcve\">MCVE</a> in pure Rust:</p>\n\n<pre><code>extern crate libc;\n\nuse std::ffi::CString;\nuse libc::c_void;\n\nfn encode_coordinates(coordinates: &amp;Vec&lt;[f64; 2]&gt;) -&gt; String {\n    format!(\"Encoded coordinates {:?}\", coordinates)\n}\n\nstruct Array {\n    data: *const c_void,\n    len: libc::size_t,\n}\n\nimpl From&lt;Array&gt; for Vec&lt;[f64; 2]&gt; {\n    fn from(arr: Array) -&gt; Self {\n        unsafe { Vec::from_raw_parts(arr.data as *mut [f64; 2], arr.len, arr.len) }\n    }\n}\n\nimpl From&lt;Array&gt; for String {\n    fn from(incoming: Array) -&gt; String {\n        encode_coordinates(&amp;incoming.into())\n    }\n}\n\nfn encode_coordinates_ffi(coords: Array) -&gt; CString {\n    CString::new(String::from(coords)).unwrap()\n}\n\nfn main() {\n    for _ in 0..10 {\n        let i_own_this = vec![[1.0, 2.0], [3.0, 4.0]];\n\n        let array = Array {\n            data: i_own_this.as_ptr() as *const _,\n            len: i_own_this.len(),\n        };\n\n        println!(\"{:?}\", encode_coordinates_ffi(array))\n    }\n}\n</code></pre>\n\n<p>This prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"Encoded coordinates [[1, 2], [3, 4]]\"\n\"Encoded coordinates [[1, 2], [3, 4]]\"\n\"Encoded coordinates [[0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012169663452665325, 213780573330512200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], [3.0000002417770535, 4]]\"\n\"Encoded coordinates [[0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012169663452665325, 213780573330512200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], [3.0000002417770535, 4]]\"\n\"Encoded coordinates [[0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012169663452665325, 213780573330512200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], [3.0000002417770535, 4]]\"\n\"Encoded coordinates [[0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012169663452665325, 213780573330512200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], [3.0000002417770535, 4]]\"\n\"Encoded coordinates [[0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012169663452665325, 213780573330512200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], [3.0000002417770535, 4]]\"\n\"Encoded coordinates [[0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012169663452665325, 213780573330512200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], [3.0000002417770535, 4]]\"\n\"Encoded coordinates [[0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012169663452665325, 213780573330512200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], [3.0000002417770535, 4]]\"\n\"Encoded coordinates [[0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012169663452665325, 213780573330512200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000], [3.0000002417770535, 4]]\"\n</code></pre>\n\n<p>The primary issue is here:</p>\n\n<pre><code>impl From&lt;Array&gt; for Vec&lt;[f64; 2]&gt; {\n    fn from(arr: Array) -&gt; Self {\n        unsafe { Vec::from_raw_parts(arr.data as *mut [f64; 2], arr.len, arr.len) }\n    }\n}\n</code></pre>\n\n<p>Let's check out the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.from_raw_parts\" rel=\"nofollow noreferrer\">documentation for <code>Vec::from_raw_parts</code></a>:</p>\n\n<blockquote>\n  <p>This is highly unsafe, due to the number of invariants that aren't checked:</p>\n  \n  <ul>\n  <li><code>ptr</code> needs to have been previously allocated via <code>String</code>/<code>Vec&lt;T&gt;</code> (at least, it's highly likely to be incorrect if it wasn't).</li>\n  <li><code>length</code> needs to be the length that less than or equal to <code>capacity</code>.</li>\n  <li><code>capacity</code> needs to be the capacity that the pointer was allocated with.</li>\n  </ul>\n  \n  <p>Violating these may cause problems like corrupting the allocator's internal datastructures.</p>\n</blockquote>\n\n<p>However, the original code as shown <strong>violates</strong> the first point - the pointer was allocated by <code>malloc</code>.</p>\n\n<p>Why does this come into play? When you call <code>Vec::from_raw_parts</code>, it takes ownership of the pointer. When the <code>Vec</code> goes out of scope, the pointed-at memory is <strong>deallocated</strong>. That means that you are attempting to deallocate that pointer multiple times.</p>\n\n<p>Because the safety of the function is determined by what is passed in, the <a href=\"https://stackoverflow.com/q/29050360/155423\">entire function should be marked <code>unsafe</code></a>. In this this case, that would violate the trait's interface, so you would need to move it elsewhere.</p>\n\n<p>More sanely, you could convert the <code>Array</code> to a slice. This is <em>still</em> unsafe because it depends on the pointer passed in, but it doesn't own the underlying pointer. You can then make the slice into a <code>Vec</code>, allocating new memory and copying the contents over.</p>\n\n<p>Since you are in control of <code>encode_coordinates</code>, you should also change its signature. <code>&amp;Vec&lt;T&gt;</code> is useless in 99.99% of the cases and may actually be less efficient: it requires two pointer dereferences instead of one. Instead, accept a <code>&amp;[T]</code>. This allows a wider range of types to be passed, including arrays and <code>Vec</code>s.</p>\n"}], "owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 442, "favorite_count": 0, "accepted_answer_id": 38422230, "answer_count": 2, "score": 1, "last_activity_date": 1468765923, "creation_date": 1468679469, "last_edit_date": 1468700115, "question_id": 38412184, "link": "https://stackoverflow.com/questions/38412184/python-calling-rust-ffi-with-ctypes-crashes-at-exit-with-pointer-being-freed-wa", "title": "Python calling Rust FFI with ctypes crashes at exit with &quot;pointer being freed was not allocated&quot;", "body": "<p>I'm trying to free memory allocated to a <code>CString</code>and passed to Python using ctypes. However, Python is crashing with a malloc error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>python(30068,0x7fff73f79000) malloc: *** error for object 0x103be2490: pointer being freed was not allocated \n</code></pre>\n\n<p>Here are the Rust functions I'm using to pass the pointer to ctypes:</p>\n\n<pre><code>#[repr(C)]\npub struct Array {\n    pub data: *const c_void,\n    pub len: libc::size_t,\n}\n\n// Build &amp;mut[[f64; 2]] from an Array, so it can be dropped\nimpl&lt;'a&gt; From&lt;Array&gt; for &amp;'a mut [[f64; 2]] {\n    fn from(arr: Array) -&gt; Self {\n        unsafe { slice::from_raw_parts_mut(arr.data as *mut [f64; 2], arr.len) }\n    }\n}\n\n// Build an Array from a Vec, so it can be leaked across the FFI boundary\nimpl&lt;T&gt; From&lt;Vec&lt;T&gt;&gt; for Array {\n    fn from(vec: Vec&lt;T&gt;) -&gt; Self {\n        let array = Array {\n            data: vec.as_ptr() as *const libc::c_void,\n            len: vec.len() as libc::size_t,\n        };\n        mem::forget(vec);\n        array\n    }\n}\n\n// Build a Vec from an Array, so it can be dropped\nimpl From&lt;Array&gt; for Vec&lt;[f64; 2]&gt; {\n    fn from(arr: Array) -&gt; Self {\n        unsafe { Vec::from_raw_parts(arr.data as *mut [f64; 2], arr.len, arr.len) }\n    }\n}\n\n// Decode an Array into a Polyline\nimpl From&lt;Array&gt; for String {\n    fn from(incoming: Array) -&gt; String {\n        let result: String = match encode_coordinates(&amp;incoming.into(), 5) {\n            Ok(res) =&gt; res,\n            // we don't need to adapt the error\n            Err(res) =&gt; res\n        };\n        result\n    }\n}\n\n#[no_mangle]\npub extern \"C\" fn encode_coordinates_ffi(coords: Array) -&gt; *mut c_char {\n    let s: String = coords.into();\n    CString::new(s).unwrap().into_raw()\n}\n</code></pre>\n\n<p>And the one I'm using to free the pointer when it's returned by Python</p>\n\n<pre><code>pub extern \"C\" fn drop_cstring(p: *mut c_char) {\n    unsafe { CString::from_raw(p) };\n}\n</code></pre>\n\n<p>And the Python function I'm using to convert the pointer to a <code>str</code>:</p>\n\n<pre><code>def char_array_to_string(res, _func, _args):\n    \"\"\" restype is c_void_p to prevent automatic conversion to str\n    which loses pointer access\n\n    \"\"\"\n    converted = cast(res, c_char_p)\n    result = converted.value\n    drop_cstring(converted)\n    return result\n</code></pre>\n\n<p>And the Python function I'm using to generate the <code>Array</code> struct to pass into Rust:</p>\n\n<pre><code>class _FFIArray(Structure):\n    \"\"\"\n    Convert sequence of float lists to a C-compatible void array\n    example: [[1.0, 2.0], [3.0, 4.0]]\n\n    \"\"\"\n    _fields_ = [(\"data\", c_void_p),\n                (\"len\", c_size_t)]\n\n    @classmethod\n    def from_param(cls, seq):\n        \"\"\"  Allow implicit conversions \"\"\"\n        return seq if isinstance(seq, cls) else cls(seq)\n\n    def __init__(self, seq, data_type = c_double):\n        arr = ((c_double * 2) * len(seq))()\n        for i, member in enumerate(seq):\n            arr[i][0] = member[0]\n            arr[i][1] = member[1]\n        self.data = cast(arr, c_void_p)\n        self.len = len(seq)\n</code></pre>\n\n<p><code>argtype</code> and <code>restype</code> definitions:</p>\n\n<pre><code>encode_coordinates = lib.encode_coordinates_ffi\nencode_coordinates.argtypes = (_FFIArray,)\nencode_coordinates.restype = c_void_p\nencode_coordinates.errcheck = char_array_to_string\n\ndrop_cstring = lib.drop_cstring\ndrop_cstring.argtypes = (c_char_p,)\ndrop_cstring.restype = None\n</code></pre>\n\n<p>I'm inclined to think it's not the Rust functions, because a dylib crash would cause a segfault (and the FFI tests pass on the Rust side). I can also continue with other operations in Python after calling the FFI functions \u2013 the malloc error occurs when the process exits.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 6, "last_activity_date": 1468665773, "creation_date": 1468665773, "answer_id": 38410320, "question_id": 38410247, "link": "https://stackoverflow.com/questions/38410247/what-are-the-replacements-for-the-smart-pointers-that-existed-before-rust-1-0/38410320#38410320", "title": "What are the replacements for the smart pointers that existed before Rust 1.0?", "body": "<p><code>~T</code> was changed to <a href=\"https://doc.rust-lang.org/stable/std/boxed/struct.Box.html\" rel=\"noreferrer\"><code>Box&lt;T&gt;</code></a>. <code>~expr</code> should now be <code>Box::new(expr)</code>.</p>\n\n<p><code>@T</code> was removed; it was meant to be a pointer to a garbage-collected object, but that was never really the case. The standard library provides reference-counted pointer, <a href=\"http://doc.rust-lang.org/stable/std/rc/struct.Rc.html\" rel=\"noreferrer\"><code>Rc&lt;T&gt;</code></a> and <a href=\"http://doc.rust-lang.org/stable/std/sync/struct.Arc.html\" rel=\"noreferrer\"><code>Arc&lt;T&gt;</code></a>, that should cover most use cases.</p>\n\n<p>Rust has changed quite a bit until 1.0. You might want to read <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a> to get yourself up to date.</p>\n"}, {"tags": [], "owner": {"reputation": 169, "user_id": 5999486, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/03cb216297a04d5aa9851aeffd751554?s=128&d=identicon&r=PG&f=1", "display_name": "Thiez", "link": "https://stackoverflow.com/users/5999486/thiez"}, "is_accepted": true, "score": 3, "last_activity_date": 1468666557, "creation_date": 1468666557, "answer_id": 38410450, "question_id": 38410247, "link": "https://stackoverflow.com/questions/38410247/what-are-the-replacements-for-the-smart-pointers-that-existed-before-rust-1-0/38410450#38410450", "title": "What are the replacements for the smart pointers that existed before Rust 1.0?", "body": "<p>You can replace <code>~T</code> by <code>Box&lt;T&gt;</code>, and <code>~[T]</code> by <code>Vec&lt;T&gt;</code>. The <code>@T</code> smartpointers can be replaced by <code>Rc&lt;T&gt;</code>, and <code>@[T]</code> by <code>Rc&lt;RefCell&lt;Vec&lt;T&gt;&gt;&gt;</code>. Be careful not to create cycles with <code>Rc&lt;T&gt;</code>, there is no cycle-collector anymore. If the code you wish to update looks anything like the code in your examples, then I would recommend not using pointers at all. <code>~T</code> (or <code>Box&lt;T&gt;</code>) in particular tends to be overused, and can often be replaced by a simple <code>T</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1612883715, "last_edit_date": 1612883715, "creation_date": 1468675908, "answer_id": 38411726, "question_id": 38410247, "link": "https://stackoverflow.com/questions/38410247/what-are-the-replacements-for-the-smart-pointers-that-existed-before-rust-1-0/38411726#38411726", "title": "What are the replacements for the smart pointers that existed before Rust 1.0?", "body": "<p>The other answers cover the principles, so here's your specific examples updated:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct MyRectangle {\n    x: i32,\n    y: i32,\n    length: i32,\n    breadth: i32,\n}\n\nfn allocate_rect() {\n    Box::new(MyRectangle {\n        x: 5,\n        y: 5,\n        length: 25,\n        breadth: 15,\n    });\n}\n</code></pre>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::rc::Rc;\n\nfn first_method() {\n    let memblock = Rc::new(256);\n    second_method(memblock.clone());\n    println!(&quot;{}&quot;, memblock);\n}\n\nfn second_method(memblock: Rc&lt;isize&gt;) {\n    let sec_memblock = memblock;\n}\n</code></pre>\n<ol>\n<li><code>int</code> and <code>uint</code> became <code>isize</code> and <code>usize</code>, respectively. However, you shouldn't just blindly transform these - often times a specific sized integer is better.</li>\n<li>Types and traits use <code>CamelCase</code> while functions use <code>snake_case</code>.</li>\n<li>There's no need for many type annotations; type inference is very good.</li>\n<li><code>println!</code> no longer uses printf-style format strings. Instead, there are placeholders like <code>{}</code> and <code>{:?}</code> corresponding to traits like <code>Display</code> and <code>Debug</code>.</li>\n<li>There's no need to dereference the argument passed to <code>println!</code>.</li>\n<li>Calling <code>second_method</code> would transfer ownership of the argument and then you couldn't print it. You need to call <code>clone</code> to increment the reference count and pass the cloned value to the function.</li>\n</ol>\n<p>I second the recommendation to evaluate if you really need to box many of these values. In some cases, you may be able to accept a reference or perform a copy of the value (which should be cheap).</p>\n"}], "owner": {"reputation": 1141, "user_id": 1058543, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/f7cf7f17302b550d2dfda1c4f1eb1b29?s=128&d=identicon&r=PG", "display_name": "Nodoid", "link": "https://stackoverflow.com/users/1058543/nodoid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 143, "favorite_count": 0, "accepted_answer_id": 38410450, "answer_count": 3, "score": 3, "last_activity_date": 1612883715, "creation_date": 1468665281, "last_edit_date": 1468674995, "question_id": 38410247, "link": "https://stackoverflow.com/questions/38410247/what-are-the-replacements-for-the-smart-pointers-that-existed-before-rust-1-0", "title": "What are the replacements for the smart pointers that existed before Rust 1.0?", "body": "<p>I'm updating some old Rust code that used smart pointers and other memory management code that was deprecated and removed prior to the version 1 release.</p>\n\n<p>Is there a direct replacement for the likes of the old smart pointers or is it better to use the likes of Box for allocating memory?</p>\n\n<p>I have code such as (and this is very much simplified!)</p>\n\n<pre><code>struct my_rectangle {\n    x: i32,\n    y: i32,\n    length: i32,\n    breadth: i32,\n}\n\nfn allocate_rect() {\n    let x: ~my_rectangle = ~my_rectangle{x: 5, y: 5, length: 25, breadth:15};\n}\n</code></pre>\n\n<p>and</p>\n\n<pre><code>fn firstMethod() {\n    let memblock: @int = @256;\n    secondMethod(memblock);\n    println!(\u201c%d\u201d,  *memblock);\n}\n\nfn secondMethod(memblock: @int) {\n    let secMemblock: @int = memblock;\n}\n</code></pre>\n\n<p>This works fine prior to 1.0 but now fails to build.</p>\n"}, {"tags": ["string", "rust", "uppercase"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 51, "creation_date": 1468631591, "post_id": 38406793, "comment_id": 64222148, "body": "<i>It&#39;s a simple problem</i> \u2014 no, it&#39;s not. Please capitalize <code>&#223;</code> when interpreted as German. Hint: it&#39;s not a single character. Even the problem statement can be complicated. For example, it would be improper to capitalize the first character of the surname <code>von Hagen</code>. This is all an aspect of living in a global world that has had thousands of years of divergent cultures with different practices and we are trying to squash all those into 8 bits and 2 lines of code."}, {"owner": {"reputation": 1105, "user_id": 1602188, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b0184f77943bdb15eb24f0f2e6e1080d?s=128&d=identicon&r=PG", "display_name": "marshallm", "link": "https://stackoverflow.com/users/1602188/marshallm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1468632377, "post_id": 38406793, "comment_id": 64222243, "body": "What you pose seems to be a character encoding problem, not a data type problem. I presume char::to_uppercase already properly handles Unicode. My question is, why the need for all data type conversions? It seems indexing could return a multi-byte, Unicode character (not a single byte character, which would assume ascii only), and to_uppercase could return an upper case character in whatever language it&#39;s in, if one is available in said language."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 3, "creation_date": 1468661188, "post_id": 38406793, "comment_id": 64227572, "body": "@marshallm <code>char::to_uppercase</code> indeed handles this problem, but you throw away its efforts by only taking the first code point (<code>nth(0)</code>) instead of all the code points that make up the capitalization"}, {"owner": {"reputation": 2556, "user_id": 2111584, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/e3uBy.png?s=128&g=1", "display_name": "Nathan", "link": "https://stackoverflow.com/users/2111584/nathan"}, "edited": false, "score": 0, "creation_date": 1468932021, "post_id": 38406793, "comment_id": 64321838, "body": "Character encoding is not a straightforward process as pointed out by <a href=\"http://www.joelonsoftware.com/articles/Unicode.html\" rel=\"nofollow noreferrer\">Joel on Software: Unicode</a>."}, {"owner": {"reputation": 64273, "user_id": 1212596, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/163c193690fb8e2e98724333c3824adb?s=128&d=identicon&r=PG", "display_name": "Paul Draper", "link": "https://stackoverflow.com/users/1212596/paul-draper"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575430066, "post_id": 38406793, "comment_id": 104560350, "body": "@Shepmaster, in <i>general</i> you are correct. It&#39;s a simple problem in English (the de facto standard base of programming languages and data formats). Yes there are scripts where &quot;capitalization&quot; is not even a concept, and others where it is very complicated."}], "answers": [{"comments": [{"owner": {"reputation": 1105, "user_id": 1602188, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b0184f77943bdb15eb24f0f2e6e1080d?s=128&d=identicon&r=PG", "display_name": "marshallm", "link": "https://stackoverflow.com/users/1602188/marshallm"}, "edited": false, "score": 36, "creation_date": 1468641373, "post_id": 38406885, "comment_id": 64223395, "body": "After thinking about it a lot, I understand these design choices better. The standard library should choose the most versatile, performant, and safe trade-offs possible. Otherwise, it forces developers to make trade-offs that might not be appropriate for their application, architecture, or locale. Or it could lead to ambiguity and misunderstandings. If I prefer other trade-offs, I can choose a 3rd-party library or write it myself."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1105, "user_id": 1602188, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b0184f77943bdb15eb24f0f2e6e1080d?s=128&d=identicon&r=PG", "display_name": "marshallm", "link": "https://stackoverflow.com/users/1602188/marshallm"}, "edited": false, "score": 14, "creation_date": 1468677015, "post_id": 38406885, "comment_id": 64231659, "body": "@marshallm that&#39;s really great to hear! I fear that many newcomers to Rust misunderstand the decisions that the Rust designers have made and simply write them off as being too complicated for no benefit. By asking and answering questions here, I have gained an appreciation for the care that needs to go into such designs and hopefully become a better programmer. Keeping an open mind and being willing to learn more is a great trait to have as a programmer."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 6, "creation_date": 1468877011, "post_id": 38406885, "comment_id": 64297807, "body": "The <a href=\"https://en.wikipedia.org/wiki/Dotted_and_dotless_I\" rel=\"nofollow noreferrer\">&quot;Turkish i&quot;</a> is an example of locale dependence that is more directly relevant to this particular question than sorting."}, {"owner": {"reputation": 3569, "user_id": 1110442, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f1f22e46d5f67f7ee08b492d91e6c787?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/1110442/tim"}, "edited": false, "score": 6, "creation_date": 1468880560, "post_id": 38406885, "comment_id": 64299129, "body": "I&#39;m surprised they have to_uppercase and to_lowercase but not to_titlecase. IIRC, some unicode characters actually have a special titlecase variant."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 2, "creation_date": 1470601851, "post_id": 38406885, "comment_id": 65003459, "body": "FYI, <code>Some(f) =&gt; f.to_uppercase().collect::&lt;String&gt;() + c.as_str()</code> will be faster."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1470610625, "post_id": 38406885, "comment_id": 65005342, "body": "@Veedrac I never remember to look to see what special methods exist on iterators..."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 2, "creation_date": 1470612208, "post_id": 38406885, "comment_id": 65005647, "body": "Rust&#39;s documentation has so much fun stuff squirreled away in places you&#39;d never expect. It&#39;s like being on an easter egg hunt, only with new chocolate every six weeks. That aside, I implore you to keep teaching me <a href=\"https://en.wikipedia.org/wiki/Letter_case#Type_cases\" rel=\"nofollow noreferrer\">historical knowledge</a> in your other answers :)."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 6, "creation_date": 1516369233, "post_id": 38406885, "comment_id": 83670055, "body": "By the way, even a single code point may not be the right unit to convert. What if the first character is a grapheme cluster that should receive special handling when upper-casing? (It so happens that decomposed umlauts work if you just upper-case the base character, but I don&#39;t know if that is universally true.)"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1574971862, "post_id": 38406885, "comment_id": 104424752, "body": "I&#39;ve only ever used <a href=\"https://github.com/unicode-rs/unicode-segmentation\" rel=\"nofollow noreferrer\"><code>unicode-segmentation</code></a> crate and I never had problems with it, so I think I can recommend it here. It is lightweight, specifically handles grapheme clusters that @SebastianRedl mentioned and follows the standard."}, {"owner": {"reputation": 6542, "user_id": 559935, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9200c133c210ad51e8005277e932061a?s=128&d=identicon&r=PG", "display_name": "Bruno Rocha - rochacbruno", "link": "https://stackoverflow.com/users/559935/bruno-rocha-rochacbruno"}, "edited": false, "score": 0, "creation_date": 1596684836, "post_id": 38406885, "comment_id": 111891806, "body": "I needed to add an extra check on top of <code>fn title</code> to ensure it is not performed for non ascii <code>if !self.is_ascii() {return self.to_string()}</code>"}, {"owner": {"reputation": 2488, "user_id": 6600109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/60d018ddca1b281e434c1ae6696a0195?s=128&d=identicon&r=PG&f=1", "display_name": "Markus Laire", "link": "https://stackoverflow.com/users/6600109/markus-laire"}, "edited": false, "score": 0, "creation_date": 1617270859, "post_id": 38406885, "comment_id": 118260226, "body": "The answer is incorrect as it doesn&#39;t handle characters which have two letters. Correct answer would use titlecase, not uppercase."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2488, "user_id": 6600109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/60d018ddca1b281e434c1ae6696a0195?s=128&d=identicon&r=PG&f=1", "display_name": "Markus Laire", "link": "https://stackoverflow.com/users/6600109/markus-laire"}, "edited": false, "score": 0, "creation_date": 1617275819, "post_id": 38406885, "comment_id": 118262302, "body": "@MarkusLaire it feels as if you didn\u2019t read the answer at all, skipping directly to the code which has a number of limitations <i>as described in the rest of the answer</i>. You also don\u2019t provide a concrete example demonstrating the problem you mention and changed the problem to a different one from the original poster (titlecase vs uppercase). The question and answer are describing <b>why it\u2019s hard</b> \u2014 does this answer not do that? Example of this code with a letter that becomes two;  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=09ca0dd1b085480487fb15b2132a2031\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 106, "last_activity_date": 1543846316, "last_edit_date": 1543846316, "creation_date": 1468632665, "answer_id": 38406885, "question_id": 38406793, "link": "https://stackoverflow.com/questions/38406793/why-is-capitalizing-the-first-letter-of-a-string-so-convoluted-in-rust/38406885#38406885", "title": "Why is capitalizing the first letter of a string so convoluted in Rust?", "body": "<h1>Why is it so convoluted?</h1>\n\n<p>Let's break it down, line-by-line</p>\n\n<pre><code>let s1 = \"foobar\";\n</code></pre>\n\n<p>We've created a literal string that is encoded in <a href=\"https://en.wikipedia.org/wiki/UTF-8\" rel=\"noreferrer\">UTF-8</a>. UTF-8 allows us to encode the 1,114,112 <a href=\"https://en.wikipedia.org/wiki/Code_point\" rel=\"noreferrer\">code points</a> of <a href=\"https://en.wikipedia.org/wiki/Unicode\" rel=\"noreferrer\">Unicode</a> in a manner that's pretty compact if you come from a region of the world that types in mostly characters found in <a href=\"https://en.wikipedia.org/wiki/ASCII\" rel=\"noreferrer\">ASCII</a>, a standard created in 1963. UTF-8 is a <em>variable length</em> encoding, which means that a single code point might <a href=\"https://stackoverflow.com/q/9533258/155423\">take from 1 to 4 bytes</a>. The shorter encodings are reserved for ASCII, but <a href=\"https://stackoverflow.com/q/3678752/155423\">many Kanji take 3 bytes in UTF-8</a>.</p>\n\n<pre><code>let mut v: Vec&lt;char&gt; = s1.chars().collect();\n</code></pre>\n\n<p>This creates a vector of <code>char</code>acters. A character is a 32-bit number that directly maps to a code point. If we started with ASCII-only text, we've quadrupled our memory requirements. If we had a bunch of characters from <a href=\"https://en.wikipedia.org/wiki/Plane_(Unicode)\" rel=\"noreferrer\">the astral plane</a>, then maybe we haven't used that much more.</p>\n\n<pre><code>v[0] = v[0].to_uppercase().nth(0).unwrap();\n</code></pre>\n\n<p>This grabs the first code point and requests that it be converted to an uppercase variant. Unfortunately for those of us who grew up speaking English, there's <a href=\"https://stackoverflow.com/questions/7491680/unicode-characters-having-asymmetric-upper-lower-case-why\">not always a simple one-to-one mapping of a \"small letter\" to a \"big letter\"</a>. Side note: we call them upper- and lower-case <a href=\"https://en.wikipedia.org/wiki/Letter_case#Type_cases\" rel=\"noreferrer\">because one box of letters was above the other box of letters back in the day</a>.</p>\n\n<p>This code will panic when a code point has no corresponding uppercase variant. I'm not sure if those exist, actually. It could also semantically  fail when a code point has an uppercase variant that has multiple characters, such as the German <code>\u00df</code>. Note that \u00df may never actually be capitalized in The Real World, this is the just example I can always remember and search for. As of 2017-06-29, in fact, the official rules of German spelling have been updated so that <a href=\"http://www.rechtschreibrat.com/DOX/rfdr_PM_2017-06-29_Aktualisierung_Regelwerk.pdf\" rel=\"noreferrer\"><strong>both</strong> \"\u1e9e\" and \"SS\" are valid capitalizations</a>!</p>\n\n<pre><code>let s2: String = v.into_iter().collect();\n</code></pre>\n\n<p>Here we convert the characters back into UTF-8 and require a new allocation to store them in, as the original variable was stored in constant memory so as to not take up memory at run time.</p>\n\n<pre><code>let s3 = &amp;s2;\n</code></pre>\n\n<p>And now we take a reference to that <code>String</code>.</p>\n\n<blockquote>\n  <p>It's a simple problem </p>\n</blockquote>\n\n<p>Unfortunately, this is not true. Perhaps we should endeavor to convert the world to <a href=\"https://en.wikipedia.org/wiki/Esperanto\" rel=\"noreferrer\">Esperanto</a>?</p>\n\n<blockquote>\n  <p>I presume <code>char::to_uppercase</code> already properly handles Unicode.</p>\n</blockquote>\n\n<p>Yes, I certainly hope so. Unfortunately, Unicode isn't enough in all cases.\n Thanks to <a href=\"https://stackoverflow.com/questions/38406793/why-is-capitalizing-the-first-letter-of-a-string-so-convoluted-in-rust/38406885#comment64297807_38406885\">huon for pointing out</a> the <a href=\"https://en.wikipedia.org/wiki/Dotted_and_dotless_I\" rel=\"noreferrer\">Turkish I</a>, where both the upper (<strong>\u0130</strong>) and lower case (<strong>i</strong>) versions have a dot. That is, there is no <em>one</em> proper capitalization of the letter <code>i</code>; it depends on the <a href=\"https://en.wikipedia.org/wiki/Locale_(computer_software)\" rel=\"noreferrer\">locale</a> of the the source text as well.</p>\n\n<blockquote>\n  <p>why the need for all data type conversions?</p>\n</blockquote>\n\n<p>Because the data types you are working with are important when you are worried about correctness and performance. A <code>char</code> is 32-bits and a string is UTF-8 encoded. They are different things.</p>\n\n<blockquote>\n  <p>indexing could return a multi-byte, Unicode character</p>\n</blockquote>\n\n<p>There may be some mismatched terminology here. A <code>char</code> <em>is</em> a multi-byte Unicode character.</p>\n\n<p><em>Slicing</em> a string is possible if you go byte-by-byte, but the standard library will panic if you are not on a character boundary.</p>\n\n<p>One of the reasons that indexing a string to get a character was never implemented is because so many people misuse strings as arrays of ASCII characters. Indexing a string to <em>set</em> a character could never be efficient - you'd have to be able to replace 1-4 bytes with a value that is also 1-4 bytes, causing the rest of the string to bounce around quite a lot.</p>\n\n<blockquote>\n  <p><code>to_uppercase</code> could return an upper case character</p>\n</blockquote>\n\n<p>As mentioned above, <code>\u00df</code> is a single character that, when capitalized, becomes <strong>two characters</strong>.</p>\n\n<h1>Solutions</h1>\n\n<p>See also <a href=\"https://stackoverflow.com/a/53571882/155423\">trentcl's answer</a> which only uppercases ASCII characters. </p>\n\n<h2>Original</h2>\n\n<p>If I had to write the code, it'd look like:</p>\n\n<pre><code>fn some_kind_of_uppercase_first_letter(s: &amp;str) -&gt; String {\n    let mut c = s.chars();\n    match c.next() {\n        None =&gt; String::new(),\n        Some(f) =&gt; f.to_uppercase().chain(c).collect(),\n    }\n}\n\nfn main() {\n    println!(\"{}\", some_kind_of_uppercase_first_letter(\"joe\"));\n    println!(\"{}\", some_kind_of_uppercase_first_letter(\"jill\"));\n    println!(\"{}\", some_kind_of_uppercase_first_letter(\"von Hagen\"));\n    println!(\"{}\", some_kind_of_uppercase_first_letter(\"\u00df\"));\n}\n</code></pre>\n\n<p>But I'd probably search for <a href=\"https://crates.io/search?q=uppercase\" rel=\"noreferrer\">uppercase</a> or <a href=\"https://crates.io/search?q=unicode\" rel=\"noreferrer\">unicode</a> on crates.io and let someone smarter than me handle it.</p>\n\n<h2>Improved</h2>\n\n<p>Speaking of \"someone smarter than me\", <a href=\"https://stackoverflow.com/questions/38406793/why-is-capitalizing-the-first-letter-of-a-string-so-convoluted-in-rust/38406885?noredirect=1#comment65003459_38406885\">Veedrac points out</a> that it's probably more efficient to convert the iterator back into a slice after the first capital codepoints are accessed. This allows for a <code>memcpy</code> of the rest of the bytes. </p>\n\n<pre><code>fn some_kind_of_uppercase_first_letter(s: &amp;str) -&gt; String {\n    let mut c = s.chars();\n    match c.next() {\n        None =&gt; String::new(),\n        Some(f) =&gt; f.to_uppercase().collect::&lt;String&gt;() + c.as_str(),\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17424, "user_id": 278842, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/df6877d3f05e542ca5975b4670600f2e?s=128&d=identicon&r=PG", "display_name": "Christopher Oezbek", "link": "https://stackoverflow.com/users/278842/christopher-oezbek"}, "edited": false, "score": 4, "creation_date": 1560633636, "post_id": 44599646, "comment_id": 99802907, "body": "The question of the user sounds more like he would want <code>.to_sentence_case()</code>."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1574972145, "post_id": 44599646, "comment_id": 104424822, "body": "Sadly it doesn&#39;t help with naming things... This is awesome library and I never saw it before, but it&#39;s name is hard (for me) to remember and has functions that have hardly anything to do with actual inflection, one of them being your example."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user8174234"}, "is_accepted": false, "score": 24, "last_activity_date": 1497659562, "creation_date": 1497659562, "answer_id": 44599646, "question_id": 38406793, "link": "https://stackoverflow.com/questions/38406793/why-is-capitalizing-the-first-letter-of-a-string-so-convoluted-in-rust/44599646#44599646", "title": "Why is capitalizing the first letter of a string so convoluted in Rust?", "body": "<blockquote>\n  <p>Is there an easier way than this, and if so, what? If not, why is Rust designed this way?</p>\n</blockquote>\n\n<p>Well, yes and no. Your code is, as the other answer pointed out, not correct, and will panic if you give it something like \u0f56\u0f7c\u0f51\u0f0b\u0f66\u0f90\u0f51\u0f0b\u0f63\u0f0b. So doing this with Rust's standard library is even harder than you initially thought.</p>\n\n<p>However, Rust is designed to encourage code reuse and make bringing in libraries easy. So the idiomatic way to capitalize a string is actually quite palatable:</p>\n\n<pre><code>extern crate inflector;\nuse inflector::Inflector;\n\nlet capitalized = \"some string\".to_title_case();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 36483, "user_id": 340947, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/D0CKc.jpg?s=128&g=1", "display_name": "Steven Lu", "link": "https://stackoverflow.com/users/340947/steven-lu"}, "edited": false, "score": 2, "creation_date": 1556385925, "post_id": 53571882, "comment_id": 98424622, "body": "Help a Rust newbie out, why is <code>r</code> mutable? I see that <code>s</code> is a mutable <code>str</code>. Ohhhh ok: I have the answer for my own question: <code>get_mut</code> (called here w/ a range) explicitly returns <code>Option&lt;&amp;mut&gt;</code>."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 11, "last_activity_date": 1543682316, "last_edit_date": 1543682316, "creation_date": 1543675439, "answer_id": 53571882, "question_id": 38406793, "link": "https://stackoverflow.com/questions/38406793/why-is-capitalizing-the-first-letter-of-a-string-so-convoluted-in-rust/53571882#53571882", "title": "Why is capitalizing the first letter of a string so convoluted in Rust?", "body": "<p>It's not especially convoluted if you are able to limit your input to ASCII-only strings.</p>\n\n<p>Since Rust 1.23, <code>str</code> has a <code>make_ascii_uppercase</code> method (in older Rust versions, it was available through the <code>AsciiExt</code> trait). This means you can uppercase ASCII-only string slices with relative ease:</p>\n\n<pre><code>fn make_ascii_titlecase(s: &amp;mut str) {\n    if let Some(r) = s.get_mut(0..1) {\n        r.make_ascii_uppercase();\n    }\n}\n</code></pre>\n\n<p>This will turn <code>\"taylor\"</code> into <code>\"Taylor\"</code>, but it won't turn <code>\"\u00e9douard\"</code> into <code>\"\u00c9douard\"</code>. (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=84b5c2f973d83b7442c72da2d60858eb\" rel=\"noreferrer\">playground</a>)</p>\n\n<p>Use with caution.</p>\n"}, {"tags": [], "owner": {"reputation": 1482, "user_id": 657390, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc72eb54267e47df12ead9675dfef86a?s=128&d=identicon&r=PG", "display_name": "yuyoyuppe", "link": "https://stackoverflow.com/users/657390/yuyoyuppe"}, "is_accepted": false, "score": -1, "last_activity_date": 1579422568, "last_edit_date": 1579422568, "creation_date": 1579200984, "answer_id": 59776140, "question_id": 38406793, "link": "https://stackoverflow.com/questions/38406793/why-is-capitalizing-the-first-letter-of-a-string-so-convoluted-in-rust/59776140#59776140", "title": "Why is capitalizing the first letter of a string so convoluted in Rust?", "body": "<p>Here's a version that is a bit slower than @Shepmaster's improved version, but also more <em>idiomatic</em>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn capitalize_first(s: &amp;str) -&gt; String {\n    let mut chars = s.chars();\n    chars\n        .next()\n        .map(|first_letter| first_letter.to_uppercase())\n        .into_iter()\n        .flatten()\n        .chain(chars)\n        .collect()\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 13345687, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GipMCL_D2iRZmKyN09GD0QWDiz0vKQKywnnukuZ=k-s128", "display_name": "Nikolai Lasunov", "link": "https://stackoverflow.com/users/13345687/nikolai-lasunov"}, "is_accepted": false, "score": 0, "last_activity_date": 1589622193, "last_edit_date": 1589622193, "creation_date": 1587196324, "answer_id": 61285863, "question_id": 38406793, "link": "https://stackoverflow.com/questions/38406793/why-is-capitalizing-the-first-letter-of-a-string-so-convoluted-in-rust/61285863#61285863", "title": "Why is capitalizing the first letter of a string so convoluted in Rust?", "body": "<p>I did it this way:</p>\n\n<pre><code>fn str_cap(s: &amp;str) -&gt; String {\n  format!(\"{}{}\", (&amp;s[..1].to_string()).to_uppercase(), &amp;s[1..])\n}\n</code></pre>\n\n<p>If it is not an ASCII string:</p>\n\n<pre><code>fn str_cap(s: &amp;str) -&gt; String {\n  format!(\"{}{}\", s.chars().next().unwrap().to_uppercase(), \n  s.chars().skip(1).collect::&lt;String&gt;())\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2488, "user_id": 6600109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/60d018ddca1b281e434c1ae6696a0195?s=128&d=identicon&r=PG&f=1", "display_name": "Markus Laire", "link": "https://stackoverflow.com/users/6600109/markus-laire"}, "edited": false, "score": 0, "creation_date": 1617270934, "post_id": 63276549, "comment_id": 118260264, "body": "Doesn&#39;t work if first character has two letters."}], "tags": [], "owner": {"reputation": 6542, "user_id": 559935, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9200c133c210ad51e8005277e932061a?s=128&d=identicon&r=PG", "display_name": "Bruno Rocha - rochacbruno", "link": "https://stackoverflow.com/users/559935/bruno-rocha-rochacbruno"}, "is_accepted": false, "score": 0, "last_activity_date": 1596685473, "creation_date": 1596685473, "answer_id": 63276549, "question_id": 38406793, "link": "https://stackoverflow.com/questions/38406793/why-is-capitalizing-the-first-letter-of-a-string-so-convoluted-in-rust/63276549#63276549", "title": "Why is capitalizing the first letter of a string so convoluted in Rust?", "body": "<p>This is how I solved this problem, notice I had to check if self is not ascii before transforming to uppercase.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait TitleCase {\n    fn title(&amp;self) -&gt; String;\n}\n\nimpl TitleCase for &amp;str {\n    fn title(&amp;self) -&gt; String {\n        if !self.is_ascii() || self.is_empty() {\n            return String::from(*self);\n        }\n        let (head, tail) = self.split_at(1);\n        head.to_uppercase() + tail\n    }\n}\n\npub fn main() {\n    println!(&quot;{}&quot;, &quot;bruno&quot;.title());\n    println!(&quot;{}&quot;, &quot;b&quot;.title());\n    println!(&quot;{}&quot;, &quot;\ud83e\udd80&quot;.title());\n    println!(&quot;{}&quot;, &quot;\u00df&quot;.title());\n    println!(&quot;{}&quot;, &quot;&quot;.title());\n    println!(&quot;{}&quot;, &quot;\u0f56\u0f7c\u0f51\u0f0b\u0f66\u0f90\u0f51\u0f0b\u0f63&quot;.title());\n}\n\n</code></pre>\n<p>Output</p>\n<pre><code>Bruno\nB\n\ud83e\udd80\n\u00df\n\n\u0f56\u0f7c\u0f51\u0f0b\u0f66\u0f90\u0f51\u0f0b\u0f63 \n</code></pre>\n"}], "owner": {"reputation": 1105, "user_id": 1602188, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b0184f77943bdb15eb24f0f2e6e1080d?s=128&d=identicon&r=PG", "display_name": "marshallm", "link": "https://stackoverflow.com/users/1602188/marshallm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11858, "favorite_count": 16, "accepted_answer_id": 38406885, "answer_count": 6, "score": 86, "last_activity_date": 1597508587, "creation_date": 1468631242, "last_edit_date": 1495540925, "question_id": 38406793, "link": "https://stackoverflow.com/questions/38406793/why-is-capitalizing-the-first-letter-of-a-string-so-convoluted-in-rust", "title": "Why is capitalizing the first letter of a string so convoluted in Rust?", "body": "<p>I'd like to capitalize the first letter of a <code>&amp;str</code>. It's a simple problem and I hope for a simple solution. Intuition tells me to do something like this:</p>\n\n<pre><code>let mut s = \"foobar\";\ns[0] = s[0].to_uppercase();\n</code></pre>\n\n<p>But <code>&amp;str</code>s can't be indexed like this. The only way I've been able to do it seems overly convoluted. I convert the <code>&amp;str</code> to an iterator, convert the iterator to a vector, upper case the first item in the vector, which creates an iterator, which I index into, creating an <code>Option</code>, which I unwrap to give me the upper-cased first letter. Then I convert the vector into an iterator, which I convert into a <code>String</code>, which I convert to a <code>&amp;str</code>.</p>\n\n<pre><code>let s1 = \"foobar\";\nlet mut v: Vec&lt;char&gt; = s1.chars().collect();\nv[0] = v[0].to_uppercase().nth(0).unwrap();\nlet s2: String = v.into_iter().collect();\nlet s3 = &amp;s2;\n</code></pre>\n\n<p>Is there an easier way than this, and if so, what? If not, why is Rust designed this way?</p>\n\n<p><a href=\"https://stackoverflow.com/questions/38342805/how-do-i-collect-from-multiple-iterator-types#\">Similar question</a></p>\n"}, {"tags": ["rust", "toml"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468621079, "post_id": 38405620, "comment_id": 64220023, "body": "Welcome to Stack Overflow! Please <a href=\"https://stackoverflow.com/posts/38405620/edit\">edit</a> your question to show us what you have tried; <a href=\"http://meta.stackoverflow.com/q/261592/155423\">it&#39;s expected that you show a good amount of effort</a> when asking a question; this isn&#39;t a service where people will write code for you for free!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468621333, "post_id": 38405620, "comment_id": 64220087, "body": "Also note that <code>vector&lt;(string,(string, u32))&gt;</code> is not a valid type, at least using the standard library. If you are using types not found in the standard library, you need to include that in your question. You should produce a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> that will allow people to better understand your problem and help you."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1560954769, "last_edit_date": 1560954769, "creation_date": 1468623126, "answer_id": 38406033, "question_id": 38405620, "link": "https://stackoverflow.com/questions/38405620/how-to-create-a-toml-file-from-rust/38406033#38406033", "title": "How to create a TOML file from Rust?", "body": "<p>This uses the <a href=\"https://crates.io/crates/toml\" rel=\"nofollow noreferrer\">TOML crate</a> for the structure and serialization. The main benefit is that values should be properly escaped.</p>\n\n<pre><code>use std::fs;\nuse toml::{map::Map, Value}; // 0.5.1\n\nfn to_toml(v: Vec&lt;(String, (String, u32))&gt;) -&gt; Value {\n    let mut servers = Map::new();\n    for (name, (ip_addr, port)) in v {\n        let mut server = Map::new();\n        server.insert(\"Ipaddr\".into(), Value::String(ip_addr));\n        server.insert(\"Port no\".into(), Value::Integer(port as i64));\n        servers.insert(name, Value::Table(server));\n    }\n\n    let mut map = Map::new();\n    map.insert(\"server\".into(), Value::Table(servers));\n    Value::Table(map)\n}\n\nfn main() {\n    let v = vec![\n        (\"A\".into(), (\"192.168.4.1\".into(), 4476)),\n        (\"B\".into(), (\"192.168.4.8\".into(), 1234)),\n    ];\n\n    let toml_string = toml::to_string(&amp;to_toml(v)).expect(\"Could not encode TOML value\");\n    println!(\"{}\", toml_string);\n\n    fs::write(\"servers.toml\", toml_string).expect(\"Could not write to file!\");\n}\n</code></pre>\n\n<p>You can also use this with <a href=\"https://crates.io/crates/serde\" rel=\"nofollow noreferrer\">Serde</a>'s automatic serialization and deserialization to avoid dealing with the low-level details:</p>\n\n<pre><code>use serde::Serialize; // 1.0.91\nuse std::{collections::BTreeMap, fs};\nuse toml; // 0.5.1\n\n#[derive(Debug, Default, Serialize)]\nstruct Servers&lt;'a&gt; {\n    servers: BTreeMap&lt;&amp;'a str, Server&lt;'a&gt;&gt;,\n}\n\n#[derive(Debug, Serialize)]\nstruct Server&lt;'a&gt; {\n    #[serde(rename = \"Ipaddr\")]\n    ip_addr: &amp;'a str,\n\n    #[serde(rename = \"Port no\")]\n    port_no: i64,\n}\n\nfn main() {\n    let mut file = Servers::default();\n    file.servers.insert(\n        \"A\",\n        Server {\n            ip_addr: \"192.168.4.1\",\n            port_no: 4476,\n        },\n    );\n    file.servers.insert(\n        \"B\",\n        Server {\n            ip_addr: \"192.168.4.8\",\n            port_no: 1234,\n        },\n    );\n\n    let toml_string = toml::to_string(&amp;file).expect(\"Could not encode TOML value\");\n    println!(\"{}\", toml_string);\n    fs::write(\"servers.toml\", toml_string).expect(\"Could not write to file!\");\n}\n</code></pre>\n"}], "owner": {"reputation": 47, "user_id": 6595864, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fcbc1a782fa057ba2170df99ac868697?s=128&d=identicon&r=PG&f=1", "display_name": "Rustic", "link": "https://stackoverflow.com/users/6595864/rustic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2359, "favorite_count": 0, "accepted_answer_id": 38406033, "answer_count": 1, "score": 2, "last_activity_date": 1560954769, "creation_date": 1468620307, "last_edit_date": 1468621191, "question_id": 38405620, "link": "https://stackoverflow.com/questions/38405620/how-to-create-a-toml-file-from-rust", "title": "How to create a TOML file from Rust?", "body": "<p>I have collected all my data into a vector and I need to create a TOML file with that data. I have managed to create and open a file:</p>\n\n<pre><code>let mut file = try!(File::create(\"servers.toml\"));\n</code></pre>\n\n<p>My <code>vector&lt;(string,(string, u32))&gt;</code> contains the following data, which should look like this in TOML.</p>\n\n<pre><code>[server.A]\nIpaddr=\"192.168.4.1\"\nPort no=4476\n\n[server.B]\n......\n</code></pre>\n\n<p>I have a lot of data which needs to be written in TOML and I know TOML is a text file. How is encoder used for?</p>\n"}, {"tags": ["rust", "unsafe", "low-level", "memmove", "raw-pointer"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1468603378, "post_id": 38401592, "comment_id": 64211904, "body": "There are a handful of great tutorials about writing your own kernel including <a href=\"http://jvns.ca/blog/2014/03/12/the-rust-os-story/\" rel=\"nofollow noreferrer\"><i>Writing an OS in Rust in tiny steps</i> by Julia Evans</a> and <a href=\"http://os.phil-opp.com/\" rel=\"nofollow noreferrer\"><i>Writing an OS in Rust</i> by Philipp Oppermann</a> and at least two larger projects:  <a href=\"https://intermezzos.github.io/book/\" rel=\"nofollow noreferrer\">Intermezzos</a> and <a href=\"https://github.com/redox-os/redox\" rel=\"nofollow noreferrer\">Redox</a>."}, {"owner": {"reputation": 812, "user_id": 2867076, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100003035657402/picture?type=large", "display_name": "Hannes Karppila", "link": "https://stackoverflow.com/users/2867076/hannes-karppila"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468603516, "post_id": 38401592, "comment_id": 64211971, "body": "@Shepmaster Yep, I have read both. I was just wondering what is the &quot;proper&quot; way to do this, as tutorials don&#39;t always get it right, and if there was  some great &quot;tricks&quot; I wasn&#39;t aware of."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468604163, "post_id": 38401592, "comment_id": 64212334, "body": "I think those tutorials get read over thoroughly by the community when they are posted to the subreddit or user&#39;s forum, or even Hacker News. I&#39;d expect them to be pretty well reviewed."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1468656947, "post_id": 38401592, "comment_id": 64226664, "body": "As a pedantic point, I think <code>usize</code> might be slightly better than u64 if it&#39;s to hold a pointer. On the other hand it looks like you&#39;re doing something very specific to one system!"}, {"owner": {"reputation": 812, "user_id": 2867076, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100003035657402/picture?type=large", "display_name": "Hannes Karppila", "link": "https://stackoverflow.com/users/2867076/hannes-karppila"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1468664657, "post_id": 38401592, "comment_id": 64228428, "body": "@ChrisEmerson Yep, it&#39;s actually converted from usize, just because the pointer is actually used after this for things where it must be exactly 64bits."}], "answers": [{"comments": [{"owner": {"reputation": 812, "user_id": 2867076, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100003035657402/picture?type=large", "display_name": "Hannes Karppila", "link": "https://stackoverflow.com/users/2867076/hannes-karppila"}, "edited": false, "score": 0, "creation_date": 1468679849, "post_id": 38401713, "comment_id": 64232407, "body": "It worked =&gt; accepted! Had to use <code>ptr::write(dst_addr as *mut SomeData, *self);</code> because I was doing this inside a <code>SomeData</code>s method."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1468602643, "creation_date": 1468602643, "answer_id": 38401713, "question_id": 38401592, "link": "https://stackoverflow.com/questions/38401592/copy-a-struct-to-a-specific-memory-location-in-rust/38401713#38401713", "title": "Copy a struct to a specific memory location in Rust", "body": "<p>You will want to have a look at the <a href=\"https://doc.rust-lang.org/core/ptr/\"><code>core::ptr</code></a> module.</p>\n\n<p>Its <a href=\"https://doc.rust-lang.org/core/ptr/fn.write.html\"><code>write</code></a> function does exactly what you wish:</p>\n\n<blockquote>\n<pre><code>pub unsafe fn write&lt;T&gt;(dst: *mut T, src: T)\n</code></pre>\n</blockquote>\n\n<pre><code>core::ptr::write(dst_addr as *mut_, src);\n</code></pre>\n\n<p>As noted, it does not drop the value current at <code>dst_addr</code> (you can use <code>read</code> to do so).</p>\n\n<p>I advise against using <a href=\"https://doc.rust-lang.org/core/intrinsics/fn.copy_nonoverlapping.html\"><code>intrinsics::copy_nonoverlapping</code></a> as intrinsics will never be stabilized.</p>\n"}], "owner": {"reputation": 812, "user_id": 2867076, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100003035657402/picture?type=large", "display_name": "Hannes Karppila", "link": "https://stackoverflow.com/users/2867076/hannes-karppila"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1014, "favorite_count": 0, "accepted_answer_id": 38401713, "answer_count": 1, "score": 2, "last_activity_date": 1468602869, "creation_date": 1468602151, "last_edit_date": 1468602869, "question_id": 38401592, "link": "https://stackoverflow.com/questions/38401592/copy-a-struct-to-a-specific-memory-location-in-rust", "title": "Copy a struct to a specific memory location in Rust", "body": "<p>If I have a <code>struct</code>, for example:</p>\n\n\n\n<pre class=\"lang-rs prettyprint-override\"><code>#[derive(Clone, Copy)]\n#[repr(C, packed)]\npub struct SomeData {\n    a: u16,\n    b: u64,\n    c: u32,\n    d: u16,\n}\n</code></pre>\n\n<p>How do I copy it to a specific location in memory, e.g. to a point <code>0x1000</code> in memory efficiently? Would something like this work?</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>let dst_addr: u64 = 0x1000;\nlet src = SomeData {a: 1, b: 2, c: 3, d: 4};\nunsafe {\n    let tmp: &amp;[u8; 10] = transmute(src);\n    copy(dst_addr as *mut _, tmp);\n}\n</code></pre>\n\n<p><em>Please note that the <code>repr(C, packed)</code> part is actually needed here.</em></p>\n\n<p>The software is running on bare x86_64, <strong>ring 0</strong>, without operating system or other limitations. Also, I'm programming <strong>without the standard library</strong>, so this should be achievable with only the <code>core</code> library.</p>\n\n<p>This is, of course, unsafe, but it is not a problem.</p>\n\n<p><strong>Edit</strong>: Just clarifying: I'm copying to uninitialized memory.</p>\n"}, {"tags": ["rust", "move-semantics", "boxing", "ownership-semantics"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 4, "creation_date": 1468589998, "post_id": 38397163, "comment_id": 64203530, "body": "You seem to be asking more than one question here.  The match vs map one looks like it should be move to a new question."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1468590141, "post_id": 38397163, "comment_id": 64203618, "body": "I was going to answer the first part but realised that I don&#39;t yet understand how moving out of <code>Box&lt;T&gt;</code> works; it doesn&#39;t seem to be related to <code>Deref</code> or <code>DerefMut</code> traits.  So looking forward to a good answer too!"}, {"owner": {"reputation": 436, "user_id": 1152427, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f58ad5b5fc9bee2e9a0837afb1cb5da8?s=128&d=identicon&r=PG", "display_name": "Pan Hania", "link": "https://stackoverflow.com/users/1152427/pan-hania"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1468670370, "post_id": 38397163, "comment_id": 64229898, "body": "@ChrisEmerson The match part was something that popped up when I was trying to create the minimal example of my problem so I haven&#39;t put much research into it. I just thought that this is probably related to the general question and the fact that I don&#39;t get how &quot;partial&quot; moves work so I left it here."}], "answers": [{"comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1468598125, "post_id": 38398551, "comment_id": 64209065, "body": "My biggest annoyance with Rust is that some details like this apparently aren&#39;t documented outside of discussion threads or sometimes in passing in RFCs.  :-(  FWIW, it&#39;s mentioned <a href=\"https://github.com/rust-lang/rfcs/pull/178\" rel=\"nofollow noreferrer\">in this postponed RFC</a> ."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 2, "creation_date": 1468598413, "post_id": 38398551, "comment_id": 64209224, "body": "@ChrisEmerson i think in this case, the special casing of <code>Box</code> is something that wants to be removed and transformed to the proposed <code>DerefMove</code> trait. Don&#39;t want to show too much dirty laundry and have it be widley internalized if it can become more reusable and generic. Note that the <a href=\"https://github.com/rust-lang/rfcs/pull/1646\" rel=\"nofollow noreferrer\">RFC has been restarted</a> as well."}], "tags": [], "owner": {"reputation": 169, "user_id": 5999486, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/03cb216297a04d5aa9851aeffd751554?s=128&d=identicon&r=PG&f=1", "display_name": "Thiez", "link": "https://stackoverflow.com/users/5999486/thiez"}, "is_accepted": false, "score": 4, "last_activity_date": 1468600291, "last_edit_date": 1468600291, "creation_date": 1468592618, "answer_id": 38398551, "question_id": 38397163, "link": "https://stackoverflow.com/questions/38397163/how-can-i-reuse-a-box-that-i-have-moved-the-value-out-of/38398551#38398551", "title": "How can I reuse a box that I have moved the value out of?", "body": "<p>Moving out of boxes is special-cased in the compiler. You can move something out of them, but you can't move something back in, because the act of moving out also deallocates. You can do something silly with <code>std::ptr::write</code>, <code>std::ptr::read</code>, and <code>std::ptr::replace</code>, but it's hard to get it right, because <em>something</em> valid should be inside a <code>Box</code> when it is dropped. I would recommend just accepting the allocation, or switching to a <code>Box&lt;Option&lt;Foo&gt;&gt;</code> instead.</p>\n"}, {"tags": [], "owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "is_accepted": false, "score": 0, "last_activity_date": 1468593179, "creation_date": 1468593179, "answer_id": 38398754, "question_id": 38397163, "link": "https://stackoverflow.com/questions/38397163/how-can-i-reuse-a-box-that-i-have-moved-the-value-out-of/38398754#38398754", "title": "How can I reuse a box that I have moved the value out of?", "body": "<blockquote>\n  <p>We can write a function that temporarily moves out contents of the NotBox and puts something back in before returning it</p>\n</blockquote>\n\n<p>That's because you can partially move out from the struct that you take by value. It behaves as if all fields were separate variables. That is not possible though if the struct implements <code>Drop</code>, because <code>drop</code> needs the whole struct to be valid, always (in case of panic).</p>\n\n<p>As for providing workaround, you haven't provided enough information \u2013 especially, why <code>baz</code> needs to take <code>Box</code> as an argument and why <code>quux</code> can't? Which functions are yours and which are part of an API you can't change? What is the real type of <code>Foo</code>? Is it big?</p>\n\n<p>The best workaround would be not to use <code>Box</code> at all.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1468600028, "post_id": 38400931, "comment_id": 64210121, "body": "The downside is that <code>Foo:default()</code> needs to exist and hopefully be cheap to execute. If neither is true, then the suggestion to switch to a <code>Box&lt;Option&lt;Foo&gt;&gt;</code> would be useful as then you can call <code>take</code> and <code>None</code> is the cheap-to-create default."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468600196, "post_id": 38400931, "comment_id": 64210216, "body": "@Shepmaster: Agreed :) However I&#39;d rather stick to the presented scenario and only elaborate if the OP has more specific concerns, otherwise I am afraid the answer might drown anyone attempting to read it."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 13, "last_activity_date": 1468599882, "creation_date": 1468599882, "answer_id": 38400931, "question_id": 38397163, "link": "https://stackoverflow.com/questions/38397163/how-can-i-reuse-a-box-that-i-have-moved-the-value-out-of/38400931#38400931", "title": "How can I reuse a box that I have moved the value out of?", "body": "<p>So, moving out of a <code>Box</code> is a special case... now what?</p>\n\n<p>The <code>std::mem</code> module presents a number of safe functions to move values around, without poking holes (!) into the memory safety of Rust. Of interest here are <code>swap</code> and <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"noreferrer\"><code>replace</code></a>:</p>\n\n<blockquote>\n<pre><code>pub fn replace&lt;T&gt;(dest: &amp;mut T, src: T) -&gt; T\n</code></pre>\n</blockquote>\n\n<p>Which we can use like so:</p>\n\n<pre><code>fn baz(mut abox: Box&lt;Foo&gt;) -&gt; Option&lt;Box&lt;Foo&gt;&gt; {\n    let foo = std::mem::replace(&amp;mut *abox, Foo::default());\n\n    match quux(foo) {\n        Some(new_foo) =&gt; {\n            *abox = new_foo;\n            Some(abox)\n        }\n        None =&gt; None\n    }\n}\n</code></pre>\n\n<p>It also helps in the <code>map</code> case, because it does not borrow the <code>Box</code>:</p>\n\n<pre><code>fn baz(mut abox: Box&lt;Foo&gt;) -&gt; Option&lt;Box&lt;Foo&gt;&gt; {\n    let foo = std::mem::replace(&amp;mut *abox, Foo::default());\n\n    quux(foo).map(|new_foo| { *abox = new_foo; abox })\n}\n</code></pre>\n"}], "owner": {"reputation": 436, "user_id": 1152427, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f58ad5b5fc9bee2e9a0837afb1cb5da8?s=128&d=identicon&r=PG", "display_name": "Pan Hania", "link": "https://stackoverflow.com/users/1152427/pan-hania"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3199, "favorite_count": 1, "accepted_answer_id": 38400931, "answer_count": 3, "score": 11, "last_activity_date": 1468600606, "creation_date": 1468588675, "last_edit_date": 1468600606, "question_id": 38397163, "link": "https://stackoverflow.com/questions/38397163/how-can-i-reuse-a-box-that-i-have-moved-the-value-out-of", "title": "How can I reuse a box that I have moved the value out of?", "body": "<p>I have some non-copyable type and a function that consumes and (maybe) produces it:</p>\n\n<pre><code>type Foo = Vec&lt;u8&gt;;\n\nfn quux(_: Foo) -&gt; Option&lt;Foo&gt; {\n    Some(Vec::new())\n}\n</code></pre>\n\n<p>Now consider a type that is somehow conceptually very similar to <code>Box</code>:</p>\n\n<pre><code>struct NotBox&lt;T&gt; {\n    contents: T\n}\n</code></pre>\n\n<p>We can write a function that temporarily moves out contents of the <code>NotBox</code> and puts something back in before returning it:</p>\n\n<pre><code>fn bar(mut notbox: NotBox&lt;Foo&gt;) -&gt; Option&lt;NotBox&lt;Foo&gt;&gt; {\n    let foo = notbox.contents; // now `notbox` is \"empty\"\n    match quux(foo) {\n        Some(new_foo) =&gt; {\n            notbox.contents = new_foo; // we put something back in\n            Some(notbox)\n        }\n        None =&gt; None\n    }\n}\n</code></pre>\n\n<p>I want to write an analogous function that works with <code>Box</code>es but the compiler does not like it:</p>\n\n<pre><code>fn baz(mut abox: Box&lt;Foo&gt;) -&gt; Option&lt;Box&lt;Foo&gt;&gt; {\n    let foo = *abox; // now `abox` is \"empty\"\n    match quux(foo) {\n        Some(new_foo) =&gt; {\n            *abox = new_foo; // error: use of moved value: `abox`\n            Some(abox)\n        }\n        None =&gt; None\n    }\n}\n</code></pre>\n\n<p>I could return <code>Some(Box::new(new_foo))</code> instead but that performs unnecessary allocation - I already have some memory at my disposal! Is it possible to avoid that?</p>\n\n<p>I would also like to get rid of the <code>match</code> statements but again the compiler is not happy with it (even for the <code>NotBox</code> version):</p>\n\n<pre><code>fn bar(mut notbox: NotBox&lt;Foo&gt;) -&gt; Option&lt;NotBox&lt;Foo&gt;&gt; {\n    let foo = notbox.contents;\n    quux(foo).map(|new_foo| {\n        notbox.contents = new_foo; // error: capture of partially moved value: `notbox`\n        notbox\n    })\n}\n</code></pre>\n\n<p>Is it possible to work around that?</p>\n"}, {"tags": ["input", "rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1468600948, "post_id": 38396797, "comment_id": 64210645, "body": "Hey! I keep running into your answers today! Welcome to the Rust tag and thanks for your help :)"}], "tags": [], "owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "is_accepted": false, "score": 5, "last_activity_date": 1468589195, "last_edit_date": 1468589195, "creation_date": 1468587626, "answer_id": 38396797, "question_id": 38396104, "link": "https://stackoverflow.com/questions/38396104/macro-undefined-when-reading-u8-using-scan/38396797#38396797", "title": "&quot;macro undefined&quot; when reading u8 using scan!()", "body": "<p>You have to explicitly say that you want to import macros from this crate:</p>\n\n<pre><code>#[macro_use] extern crate text_io;\n</code></pre>\n\n<p>This is written at the very top of the readme, you must have missed it.</p>\n\n<p>To use crates from crates.io, you need to add them to your <code>Cargo.toml</code>, for example by adding the following lines to that file:</p>\n\n<pre><code>[dependencies]\ntext_io = \"0.1\"\n</code></pre>\n"}], "owner": {"reputation": 2165, "user_id": 5460216, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/v3Z3y.png?s=128&g=1", "display_name": "7_R3X", "link": "https://stackoverflow.com/users/5460216/7-r3x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1468589195, "creation_date": 1468585625, "last_edit_date": 1495535652, "question_id": 38396104, "link": "https://stackoverflow.com/questions/38396104/macro-undefined-when-reading-u8-using-scan", "title": "&quot;macro undefined&quot; when reading u8 using scan!()", "body": "<p>I read about reading integer input in <a href=\"https://stackoverflow.com/questions/30355185/how-to-read-an-integer-input-from-the-user-in-rust-1-0\">How to read an integer input from the user in Rust 1.0?</a>, but I noticed that all the solutions first take a string as input and then convert it to integer. I wonder if there's a way to read an integer directly.</p>\n\n<p><a href=\"https://github.com/oli-obk/rust-si#examples\" rel=\"nofollow noreferrer\">This page</a> mentions <code>scan!()</code> macro but for some reason it doesn't seem to run when I compile the following program using <code>rustc main.rc</code>.</p>\n\n<pre><code>extern crate text_io;\n\nfn main() {\n    let mut a: u8;\n    let mut b: u8;\n    scan!(\"{},{}\", a, b);\n    print!(\"{} {}\", a, b);\n}\n</code></pre>\n\n<p>This produces the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: macro undefined: 'scan!'\n    scan!(\"{},{}\",a,b);\n</code></pre>\n"}, {"tags": ["scope", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468588235, "post_id": 38396093, "comment_id": 64202235, "body": "Pedantically, &quot;rebinding a variable&quot; is working <i>just fine</i>. You are binding the names <code>mynum</code> and <code>slice</code> to brand new values. ^_^"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1468600846, "post_id": 38396093, "comment_id": 64210585, "body": "Aka: there is a difference between <i>binding</i> (giving a value a name) and <i>assigning</i> (overwriting a value by another). The <code>let</code> syntax is for <i>binding</i>."}], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1468586466, "post_id": 38396354, "comment_id": 64201065, "body": "Since all three of us are basically the same, and you came first, I&#39;ll just quietly retract my own answer.  :P"}], "tags": [], "owner": {"reputation": 76, "user_id": 6399949, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9272f5e371dcbefa6671945ed1a91007?s=128&d=identicon&r=PG&f=1", "display_name": "Ms2ger", "link": "https://stackoverflow.com/users/6399949/ms2ger"}, "is_accepted": true, "score": 6, "last_activity_date": 1468586366, "creation_date": 1468586366, "answer_id": 38396354, "question_id": 38396093, "link": "https://stackoverflow.com/questions/38396093/rebinding-a-variable-not-working-inside-a-for-loop/38396354#38396354", "title": "Rebinding a variable not working inside a for loop", "body": "<p>You're defining a new variable that shadows the outer one. Perhaps:</p>\n\n<pre><code>let mut slice: &amp;[u8] = &amp;vec![1, 2, 3, 4];\nfor _ in 0..4 {\n    let (mynum, slice_) = get_next(slice);\n    slice = slice_;\n    println!(\"Here's mynum {} slice {:?}\", mynum, slice);\n}\n</code></pre>\n"}], "owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 38396354, "answer_count": 1, "score": 2, "last_activity_date": 1468588162, "creation_date": 1468585602, "last_edit_date": 1468588162, "question_id": 38396093, "link": "https://stackoverflow.com/questions/38396093/rebinding-a-variable-not-working-inside-a-for-loop", "title": "Rebinding a variable not working inside a for loop", "body": "<p>I'm trying to write a loop that iterates a number of times, which also updates a variable in Rust.</p>\n\n<pre><code>fn get_next(input: &amp;[u8]) -&gt; (u8, &amp;[u8]) {\n    (input[0], &amp;input[1..])\n}\n\nfn main() {\n    let slice: &amp;[u8] = &amp;vec![1, 2, 3, 4];\n    for _ in 0..4 {\n        let (mynum, slice) = get_next(slice);\n        println!(\"Here's mynum {} slice {:?}\", mynum, slice);\n    }\n}\n</code></pre>\n\n<p>Code is on the <a href=\"https://play.rust-lang.org/?gist=b41e2a4728e88a5789d8671b3efbb782&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow\">Rust Playground</a>.</p>\n\n<p>This is the output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Here's mynum 1 slice [2, 3, 4]\nHere's mynum 1 slice [2, 3, 4]\nHere's mynum 1 slice [2, 3, 4]\nHere's mynum 1 slice [2, 3, 4]\n</code></pre>\n\n<p>I would expect the <code>slice</code> variable to be changed each time to point to the next sub slice. How can I get the <code>slice</code> variable to be updated?</p>\n\n<p>This is a minimum example, if I really were iterating over <code>u8</code>'s in a slice, I'd do it differently.</p>\n"}, {"tags": ["rust", "iron"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1468571882, "post_id": 38391523, "comment_id": 64191816, "body": "<code>panic!</code> doesn&#39;t necessarily <i>stop</i> the current thread.  By default, it begins unwinding which will continue it <i>either</i> terminates the thread <i>or</i> it unwinds into a <code>catch_unwind</code> call.  Alternately, it could just abort the whole process."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1468574496, "post_id": 38391523, "comment_id": 64193442, "body": "Note that it is possible to enable abort on panic in the latest Rust versions."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1468601148, "last_edit_date": 1468601148, "creation_date": 1468571700, "answer_id": 38391523, "question_id": 38391415, "link": "https://stackoverflow.com/questions/38391415/panic-does-not-stop-an-iron-server/38391523#38391523", "title": "panic! does not stop an Iron server", "body": "<blockquote>\n  <p>I thought <code>panic!</code> stops everything in Rust.</p>\n</blockquote>\n\n<p>Not quite: <code>panic!</code> only stops\u00b9 the <em>current</em> thread, which for single threaded programs stops the whole program. If you spawn another thread, the parent thread can detect whether or not the child thread panicked <a href=\"https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join\" rel=\"nofollow\">on joining</a>.</p>\n\n<p>Iron uses many threads to handle multiple requests in parallel. Apparently it just ignores panics in child threads...</p>\n\n<hr>\n\n<p>\u00b9 As DK. and Vladimir Matveev mentioned in the comments, it's not <em>that</em> simple. Multiple things can happen when a panic is \"thrown\". By default, the application starts unwinding (climbing down the stack) until \"the end\" of the stack or a <code>catch_unwind</code> is reached. In the former case, the thread is killed; in the latter it's up to the user to decide what happens. It's also <a href=\"https://github.com/rust-lang/rust/pull/32900\" rel=\"nofollow\">possible to configure</a> your build such that <code>abort</code> is called on <code>panic!</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1468600741, "creation_date": 1468600741, "answer_id": 38401169, "question_id": 38391415, "link": "https://stackoverflow.com/questions/38391415/panic-does-not-stop-an-iron-server/38401169#38401169", "title": "panic! does not stop an Iron server", "body": "<p><code>panic!</code> in Rust is akin to exceptions in other languages, with two major differences:</p>\n\n<ul>\n<li>you cannot specify a \"type\"</li>\n<li>you cannot specify \"data\"</li>\n</ul>\n\n<p>This makes it awkward to use it for out-of-bands signalling, and therefore reserves its use to \"Oops\" situations.</p>\n\n<p>Otherwise, it behaves much in the same way in general: the current thread of execution unwinds (calling destructors as appropriate) until one of 3 things happen:</p>\n\n<ul>\n<li>a destructor <code>panic!</code>: the process aborts immediately</li>\n<li>the bottom of the stack is reached: the process aborts immediately</li>\n<li>a <code>catch_unwind</code> is reached: the handler decides what to do</li>\n</ul>\n\n<p>Along the way, the various destructors might <em>poison</em> some multi-thread data structures, which may cause other threads to panic when they attempt to use them, etc... that is however a library decision and is not enforced by the language itself.</p>\n\n<p><em>Note: as noted by others, there is now another behavior for panics, immediate abortion. It shaves off some code, and obviously prevents graceful recovery.</em></p>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 38391523, "answer_count": 2, "score": 5, "last_activity_date": 1468601148, "creation_date": 1468571350, "last_edit_date": 1468601129, "question_id": 38391415, "link": "https://stackoverflow.com/questions/38391415/panic-does-not-stop-an-iron-server", "title": "panic! does not stop an Iron server", "body": "<p>I thought <code>panic!</code> stops everything in Rust, but if I <code>panic!</code> in an Iron route handler function it does not stop the whole server. Instead, it just displays the panic message. </p>\n\n<p>Is it the \"normal\" behavior of <code>panic!</code>?</p>\n\n<p>I'm not posting my actual code because I don't think it's useful here, but I can add it if required.</p>\n"}, {"tags": ["io", "type-conversion", "rust"], "comments": [{"owner": {"reputation": 393, "user_id": 4040754, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80d4065bd552099000f04038b31cde88?s=128&d=identicon&r=PG", "display_name": "qDot", "link": "https://stackoverflow.com/users/4040754/qdot"}, "edited": false, "score": 0, "creation_date": 1468563509, "post_id": 38389019, "comment_id": 64187183, "body": "Why not try doing matches instead of unwraps first? You&#39;re probably losing an error in all of those unwraps somewhere."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1468564130, "post_id": 38389019, "comment_id": 64187458, "body": "<code>read_line</code> includes the newline; see the answer to the question this is marked as a duplicate of for working code"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 393, "user_id": 4040754, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/80d4065bd552099000f04038b31cde88?s=128&d=identicon&r=PG", "display_name": "qDot", "link": "https://stackoverflow.com/users/4040754/qdot"}, "edited": false, "score": 0, "creation_date": 1468585177, "post_id": 38389019, "comment_id": 64200218, "body": "@qDot <code>unwrap</code> doesn&#39;t &quot;lose&quot; errors. If there&#39;s an error, the program panics."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1468590161, "post_id": 38389019, "comment_id": 64203635, "body": "@DK. congratulations on the gold badge!"}], "owner": {"reputation": 31, "user_id": 6116272, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-9Ca78zqJkUM/AAAAAAAAAAI/AAAAAAAAAI4/LK_QIhjrBwM/photo.jpg?sz=128", "display_name": "Benjamin Bollinger", "link": "https://stackoverflow.com/users/6116272/benjamin-bollinger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 336, "favorite_count": 0, "closed_date": 1468564084, "answer_count": 0, "score": 0, "last_activity_date": 1468563271, "creation_date": 1468563271, "question_id": 38389019, "link": "https://stackoverflow.com/questions/38389019/rust-addition-function-from-user-input", "closed_reason": "Duplicate", "title": "Rust Addition Function from user input", "body": "<pre><code>use std::io;\n\nfn main(){\n    let mut line = String::new();\n    let input = io::stdin();\n\n    println!(\"Enter First Number: \");\n    input.read_line(&amp;mut line).unwrap();\n    let num1 = line.parse::&lt;i32&gt;().unwrap();\n\n    println!(\"Enter Second Number: \");\n    input.read_line(&amp;mut line).unwrap();\n    let num2 = line.parse::&lt;i32&gt;().unwrap();\n\n    println!(\"Total = {}\", get_sum(num1, num2));\n}\n\nfn get_sum(num1: i32, num2: i32) -&gt; i32 {\n    num1 + num2\n}\n</code></pre>\n\n<p>Hello, in this code I am just trying to create a function that will add two numbers that the user inputs together. However after I type in the first number I get this error: </p>\n\n<p>thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: ParseIntError { kind: InvalidDigit }', ../src/libcore\\result.rs:785\nnote: Run with <code>RUST_BACKTRACE=1</code> for a backtrace.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 587, "user_id": 449096, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/9cfd96e67fa9031947f36a230fec08c2?s=128&d=identicon&r=PG", "display_name": "Bob Bobbio", "link": "https://stackoverflow.com/users/449096/bob-bobbio"}, "edited": false, "score": 0, "creation_date": 1468571967, "post_id": 38391276, "comment_id": 64191878, "body": "The things you suggested doesn&#39;t really fix the problem for me.  There is no reason for the reference to live as long as the factory, it only needs to live as long as the object the factory is creating (the factory itself doesn&#39;t store a reference to the string).  What you suggested doesn&#39;t work because I really do want to create new objects and give references to objects created by the factory in the factory&#39;s create call. (which totally works if I didn&#39;t have the factory.)  Hopefully that makes sense."}, {"owner": {"reputation": 587, "user_id": 449096, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/9cfd96e67fa9031947f36a230fec08c2?s=128&d=identicon&r=PG", "display_name": "Bob Bobbio", "link": "https://stackoverflow.com/users/449096/bob-bobbio"}, "edited": false, "score": 0, "creation_date": 1468572134, "post_id": 38391276, "comment_id": 64191965, "body": "Put another way, how do I decouple the lifetime of the reference I&#39;m passing to new_phone from the lifetime of the factory, and have it just be the lifetime of the struct the factory creates."}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 0, "last_activity_date": 1468571747, "last_edit_date": 1468571747, "creation_date": 1468570893, "answer_id": 38391276, "question_id": 38388721, "link": "https://stackoverflow.com/questions/38388721/specifying-lifetimes-when-using-the-factory-pattern-in-rust/38391276#38391276", "title": "Specifying lifetimes when using the factory pattern in Rust", "body": "<p>Your problem is here:</p>\n\n<pre><code>fn call_phone&lt;'a, P: Phone, F: Factory&lt;'a, P&gt;&gt;(f: F) {\n// Factory has a lifetime 'a ----------^\n// that is at least as long as the scope of call_phone\n    for _ in 0..10 {\n        let s = String::new(); // s is born here\n        let p = f.new_phone(s.as_str());\n        // new reference ---^   \n        // new_phone definition requires this to have\n        // the same lifetime 'a as the Factory          \n        p.call();\n    } \n    // s is destroyed here, no references to s can \n    // still exist\n} // F is still alive\n</code></pre>\n\n<p>One thing you can do is passing the <code>&amp;str</code> as a parameter to <code>call_phone</code>, to make sure the reference lives as long as the function:</p>\n\n<pre><code>fn call_phone&lt;'a, P: Phone, F: Factory&lt;'a, P&gt;&gt;(f: F, s: &amp;'a str) {\n    for _ in 0..10 {\n        let p = f.new_phone(s);\n        p.call();\n    }\n}\n\nfn main() {\n    call_phone(IPhoneFactory, &amp;\"hello\");\n}\n</code></pre>\n\n<p>Another one is not working with references, but let your <code>struct IPhone</code> own the <code>String</code></p>\n"}, {"comments": [{"owner": {"reputation": 587, "user_id": 449096, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/9cfd96e67fa9031947f36a230fec08c2?s=128&d=identicon&r=PG", "display_name": "Bob Bobbio", "link": "https://stackoverflow.com/users/449096/bob-bobbio"}, "edited": false, "score": 0, "creation_date": 1468600932, "post_id": 38396512, "comment_id": 64210630, "body": "That was extremely helpful and enlightening, thank you."}], "tags": [], "owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "is_accepted": true, "score": 6, "last_activity_date": 1468587247, "last_edit_date": 1468587247, "creation_date": 1468586796, "answer_id": 38396512, "question_id": 38388721, "link": "https://stackoverflow.com/questions/38388721/specifying-lifetimes-when-using-the-factory-pattern-in-rust/38396512#38396512", "title": "Specifying lifetimes when using the factory pattern in Rust", "body": "<p>You're right about that:</p>\n\n<blockquote>\n  <p>There is no reason for the reference to live as long as the factory, it only needs to live as long as the object the factory is creating (the factory itself doesn't store a reference to the string).</p>\n</blockquote>\n\n<p>But the bound on <code>call_phone</code> says something different</p>\n\n<pre><code>fn call_phone&lt;'a, P: Phone, F: Factory&lt;'a, P&gt;&gt;(f: F) { ... }\n</code></pre>\n\n<p>That code says that there's a <em>single lifetime</em> for the whole factory, which will be used for <em>each phone</em>. You want something different, you want to say that <code>f</code> is a good factory for <em>any lifetime</em>:</p>\n\n<pre><code>fn call_phone&lt;..., F: for&lt;'a&gt; Factory&lt;'a, ...&gt;&gt;(f: F) { ... }\n</code></pre>\n\n<p>The other problem is that in the <code>Factory</code> trait definition:</p>\n\n<pre><code>trait Factory&lt;'a, P: Phone&gt; {\n    fn new_phone(&amp;self, ms: &amp;'a str) -&gt; P;\n}\n</code></pre>\n\n<p>There's nothing tying lifetime of <code>P</code> to <code>ms</code>. The trait definition allows the returned phone to outlive the string, which should definitely be forbidden for the <code>IPhone</code> implementation! So, to fix it, we add a lifetime parameter to the <code>Phone</code> trait:</p>\n\n<pre><code>trait Phone&lt;'a&gt; {\n    fn call(&amp;self);\n}\n</code></pre>\n\n<p>But there's still one problem. We can't really write that signature:</p>\n\n<pre><code>fn call_phone&lt;P: ???, F: for&lt;'a&gt; Factory&lt;'a, P&lt;'a&gt;&gt;(f: F) { ... }\n</code></pre>\n\n<p>Since we want <code>P</code> to be not a type, but rather a family of types (more precisely, a <code>lifetime \u2192 type</code> constructor). Remember, the phone in each iteration of loop has a different type (since the lifetime is a part of a type, and lifetimes in different iterations of loops are different).</p>\n\n<p>Ability to express such a signature is planned for the future Rust, but for now, we have to make a workaround and make the phone associated type of <code>Factory</code> trait:</p>\n\n<pre><code>trait Phone&lt;'a&gt; {\n    fn call(&amp;self);\n}\n\nstruct IPhone&lt;'a&gt; {\n    my_str: &amp;'a str\n}\n\nimpl&lt;'a&gt; Phone&lt;'a&gt; for IPhone&lt;'a&gt; {\n    fn call(&amp;self) {\n        println!(\"{}\", self.my_str);\n    }\n}\n\ntrait Factory&lt;'a&gt; {\n    type Output: Phone&lt;'a&gt;;\n    fn new_phone(&amp;self, ms: &amp;'a str) -&gt; Self::Output;\n}\n\nstruct IPhoneFactory;\nimpl&lt;'a&gt; Factory&lt;'a&gt; for IPhoneFactory {\n    type Output = IPhone&lt;'a&gt;;\n    fn new_phone(&amp;self, ms: &amp;'a str) -&gt; IPhone&lt;'a&gt; {\n        IPhone {\n            my_str: ms\n        }\n    }\n}\n\nfn call_phone&lt;F: for&lt;'a&gt; Factory&lt;'a&gt;&gt;(f: F) {\n    for i in 0..10 {\n        let s = i.to_string();\n        let p = f.new_phone(&amp;s);\n        p.call();\n    }\n}\n\nfn main() {\n    call_phone(IPhoneFactory);\n}\n</code></pre>\n\n<p>Associated type allows the factory to produce only one kind of product, which is maybe what you wanted. If you want different implementations of <code>Factory</code> to have different <code>Output</code>s, you can achieve this by using phantom types:</p>\n\n<pre><code>trait Phone&lt;'a&gt; {\n    type Phantom;\n    fn call(&amp;self);\n}\n\nenum IPhonePhantom {}\n\nstruct IPhone&lt;'a&gt; {\n    my_str: &amp;'a str\n}\n\nimpl&lt;'a&gt; Phone&lt;'a&gt; for IPhone&lt;'a&gt; {\n    type Phantom = IPhonePhantom;\n    fn call(&amp;self) {\n        println!(\"{}\", self.my_str);\n    }\n}\n\ntrait Factory&lt;'a, Selector&gt; {\n    type Output: Phone&lt;'a, Phantom=Selector&gt;;\n    fn new_phone(&amp;self, ms: &amp;'a str) -&gt; Self::Output;\n}\n\nstruct MyFactory;\nimpl&lt;'a&gt; Factory&lt;'a, IPhonePhantom&gt; for MyFactory {\n    type Output = IPhone&lt;'a&gt;;\n    fn new_phone(&amp;self, ms: &amp;'a str) -&gt; IPhone&lt;'a&gt; {\n        IPhone {\n            my_str: ms\n        }\n    }\n}\n\nfn call_phone&lt;Selector, F: for&lt;'a&gt; Factory&lt;'a, Selector&gt;&gt;(f: F) {\n    for i in 0..10 {\n        let s = i.to_string();\n        let p = f.new_phone(&amp;s);\n        p.call();\n    }\n}\n\nfn main() {\n    call_phone::&lt;IPhonePhantom, _&gt;(MyFactory);\n}\n</code></pre>\n\n<p>The <code>Phantom</code> associated type on the <code>Phone</code> trait is not strictly necessary, it's only needed to tie the phone type to its phantom type and to make sure <code>Factory</code> implementors don't lie.</p>\n"}], "owner": {"reputation": 587, "user_id": 449096, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/9cfd96e67fa9031947f36a230fec08c2?s=128&d=identicon&r=PG", "display_name": "Bob Bobbio", "link": "https://stackoverflow.com/users/449096/bob-bobbio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 931, "favorite_count": 2, "accepted_answer_id": 38396512, "answer_count": 2, "score": 5, "last_activity_date": 1468588607, "creation_date": 1468561913, "last_edit_date": 1468588607, "question_id": 38388721, "link": "https://stackoverflow.com/questions/38388721/specifying-lifetimes-when-using-the-factory-pattern-in-rust", "title": "Specifying lifetimes when using the factory pattern in Rust", "body": "<p>The following code doesn't compile:</p>\n\n<pre><code>trait Phone {\n    fn call(&amp;self);\n}\n\nstruct IPhone&lt;'a&gt; {\n    my_str: &amp;'a str\n}\n\nimpl&lt;'a&gt; Phone for IPhone&lt;'a&gt; {\n    fn call(&amp;self) {\n        print!(\"{}\", self.my_str);\n    }\n}\n\ntrait Factory&lt;'a, P: Phone&gt; {\n    fn new_phone(&amp;self, ms: &amp;'a str) -&gt; P;\n}\n\nstruct IPhoneFactory;\nimpl&lt;'a&gt; Factory&lt;'a, IPhone&lt;'a&gt;&gt; for IPhoneFactory {\n    fn new_phone(&amp;self, ms: &amp;'a str) -&gt; IPhone&lt;'a&gt; {\n        return IPhone {\n            my_str: ms\n        };\n    }\n}\n\nfn call_phone&lt;'a, P: Phone, F: Factory&lt;'a, P&gt;&gt;(f: F) {\n    for _ in 0..10 {\n        let s = String::new();\n        let p = f.new_phone(s.as_str());\n        p.call();\n    }\n}\n\nfn main() {\n    call_phone(IPhoneFactory);\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `s` does not live long enough\n        let p = f.new_phone(s.as_str());\n                            ^\nnote: reference must be valid for the lifetime 'a as defined on the block at 28:53...\n fn call_phone&lt;'a, P: Phone, F: Factory&lt;'a, P&gt;&gt;(f: F) {\n                                                      ^\nnote: ...but borrowed value is only valid for the block suffix following statement 0 at 30:30\n        let s = String::new();\n                              ^\n</code></pre>\n\n<p>I want to be able to have a factory that returns an abstract class, but when that class takes a reference I can't figure out how to specify the lifetime properly.</p>\n"}, {"tags": ["vector", "rust"], "answers": [{"comments": [{"owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "edited": false, "score": 0, "creation_date": 1468591677, "post_id": 38387211, "comment_id": 64204707, "body": "Thanks!, seems you&#39;re answering all my rust related questions, maybe they should change the site to Shepmaster exchange :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "edited": false, "score": 1, "creation_date": 1468591773, "post_id": 38387211, "comment_id": 64204779, "body": "@KDN nah; I just spend too much time here. There are plenty of people that could make better answers than I can, but they are off doing other things. And there&#39;s lots of areas where I couldn&#39;t even begin to provide a useful answer!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1468588872, "last_edit_date": 1468588872, "creation_date": 1468551517, "answer_id": 38387211, "question_id": 38387095, "link": "https://stackoverflow.com/questions/38387095/how-can-i-eliminate-a-temporary-vector-when-reading-in-a-2d-vector/38387211#38387211", "title": "How can I eliminate a temporary vector when reading in a 2D vector?", "body": "<p>Map the lines of standard input as the rows, then map the numbers in each row as columns.</p>\n\n<pre><code>use std::io;\nuse std::io::prelude::*;\n\nconst SIZE: usize = 3;\n\nfn main() {\n    let stdin = io::stdin();\n    let vec: Vec&lt;Vec&lt;i32&gt;&gt; = stdin.lock()\n        .lines()\n        .take(SIZE)\n        .map(|line| {\n            let line = line.expect(\"Unable to read line\");\n            line.split_whitespace()\n                .take(SIZE)\n                .map(|s| s.parse().expect(\"Enable to parse number\"))\n                .collect()\n        })\n        .collect();\n\n    println!(\"{:?}\", vec);\n}\n</code></pre>\n\n<p>Or if you don't care to panic:</p>\n\n<pre><code>use std::io;\nuse std::io::prelude::*;\nuse std::error::Error;\n\nconst SIZE: usize = 3;\n\nfn main() {\n    let stdin = io::stdin();\n    let vec: Result&lt;Vec&lt;Vec&lt;i32&gt;&gt;, _&gt; = stdin.lock()\n        .lines()\n        .take(SIZE)\n        .map(|line| {\n            line.map_err(|e| Box::new(e) as Box&lt;Error&gt;)\n                .and_then(|line| {\n                    line.split_whitespace()\n                        .take(SIZE)\n                        .map(|s| s.parse().map_err(|e| Box::new(e) as Box&lt;Error&gt;))\n                        .collect()\n                })\n        })\n        .collect();\n\n    println!(\"{:?}\", vec);\n}\n</code></pre>\n\n<hr>\n\n<p>Addressing concerns from a comment:</p>\n\n<blockquote>\n  <p>Your code makes 2n+1 allocations (that's important if somebody's looking for performance</p>\n</blockquote>\n\n<p>It's unclear what <code>N</code> is here, but there should be a maximum of 3 vectors allocated and 3 items in each vector. The <code>take</code> adapter will override the <code>size_hint</code> to put a maximum of <code>3</code> and then <code>collect</code> will use that hint when constructing each <code>Vec</code>.</p>\n\n<blockquote>\n  <p>Using nested <code>Vec</code>s for matrices is an antipattern. </p>\n</blockquote>\n\n<p>Absolutely, but that was what the original code did.</p>\n\n<blockquote>\n  <p>You \"break\" stdin \u2013 you can't reliably use it after calling <code>lock().lines()</code></p>\n</blockquote>\n\n<p>I'm not sure what you mean here. I am able to add <code>stdin.read(&amp;mut[0,0,0]).expect(\"Unable to read more\")</code> after the chunk of code that defines <code>let vec</code>, showing that it can be used. </p>\n\n<p>If there was a problem with not being able to use stdin, you could fix it by scoping the lock to a block that ends earlier.</p>\n"}, {"tags": [], "owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "is_accepted": false, "score": 3, "last_activity_date": 1468588958, "last_edit_date": 1468588958, "creation_date": 1468584071, "answer_id": 38395626, "question_id": 38387095, "link": "https://stackoverflow.com/questions/38387095/how-can-i-eliminate-a-temporary-vector-when-reading-in-a-2d-vector/38395626#38395626", "title": "How can I eliminate a temporary vector when reading in a 2D vector?", "body": "<p>I you remove the <code>collect()</code> call, you end up with an iterator, which you can <code>enumerate()</code> and just pass to the for loop:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let vec_size: usize = 3;\n    let mut vec = vec![vec![0; vec_size]; vec_size];   \n    let mut input = String::new();\n    for i in 0..vec_size {\n        input.clear();\n        io::stdin().read_line(&amp;mut input).expect(\"Failed to read\");\n        let numbers = input\n            .split_whitespace()\n            .map(|s| s.parse().unwrap());\n        for (j, x) in numbers.enumerate() {\n            vec[i][j] = x;\n        }\n    }\n}\n</code></pre>\n\n<p>This code also calls <code>clear()</code> to clear the input buffer instead of assigning new string, so it makes just one additional allocation (you may benefit from it if you're reading a lot of small matrices).</p>\n\n<p>(sidenote about your code: it's better to use <code>.iter().enumerate()</code> than iterate on vectors indices, if you can)</p>\n\n<hr>\n\n<p>When writing this answer I've misread the original question thinking that there was a stack-allocated matrix:</p>\n\n<pre><code>const VEC_SIZE: usize = 3;\nlet mut vec = [[0; VEC_SIZE]; VEC_SIZE];\n</code></pre>\n\n<p>If that was the case, I would recommend my solution, but since it's a <code>Vec&lt;Vec&lt;i32&gt;&gt;</code>, I'd recommend @Shepmaster's one, as it's more idiomatic.</p>\n"}], "owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 38387211, "answer_count": 2, "score": 2, "last_activity_date": 1468588958, "creation_date": 1468550583, "last_edit_date": 1468550818, "question_id": 38387095, "link": "https://stackoverflow.com/questions/38387095/how-can-i-eliminate-a-temporary-vector-when-reading-in-a-2d-vector", "title": "How can I eliminate a temporary vector when reading in a 2D vector?", "body": "<p>I have this code for reading in a 2D vector. Is there a way to eliminate the need for <code>temp_vec</code>?</p>\n\n<pre><code>let mut vec_size: usize = 3;\nlet mut vec = vec![vec![0; vec_size]; vec_size];   \nfor i in 0..vec_size{\n    input = String::new();\n    io::stdin().read_line(&amp;mut input).expect(\"Failed to read\");\n    let temp_vec: Vec&lt;i32&gt; = input\n             .split_whitespace()\n             .map(|s| s.parse().unwrap())\n             .collect();\n    for j in 0..temp_vec.len(){\n        vec[i][j] = temp_vec[j];\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468534363, "post_id": 38384751, "comment_id": 64179975, "body": "What happens if <code>line</code> starts with <code>ZZZ</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468534569, "post_id": 38384751, "comment_id": 64180052, "body": "<i>another example using some <code>~</code> operator</i> \u2014 sadly, even though Rust is young, there is still a lot of outdated information from before Rust 1.0. The <code>~</code> operator is one of them, and it&#39;s a sign that whatever reference you are looking at is very outdated. Also; you can just use <code>Box::new(Abc {})</code> instead of an explicit <code>return</code> - <a href=\"https://play.rust-lang.org/?gist=7fbbd97478eb9f507bf916ffc3f2188b&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">example</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468613784, "post_id": 38384751, "comment_id": 64217300, "body": "I apologize - I wasn&#39;t very clear in my previous comment, but I gave <a href=\"https://play.rust-lang.org/?gist=7fbbd97478eb9f507bf916ffc3f2188b&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">an updated example that works</a>. ^_^"}], "owner": {"reputation": 19, "user_id": 6591523, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d6257e7a2c70146199b9ba5d5d449e50?s=128&d=identicon&r=PG&f=1", "display_name": "Claus", "link": "https://stackoverflow.com/users/6591523/claus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 32, "favorite_count": 0, "closed_date": 1468534349, "answer_count": 0, "score": 0, "last_activity_date": 1468614273, "creation_date": 1468532660, "last_edit_date": 1468614273, "question_id": 38384751, "link": "https://stackoverflow.com/questions/38384751/expected-type-box-found-type-when-returning-a-boxed-trait-object-fr", "closed_reason": "Duplicate", "title": "Expected type `Box&lt;...&gt;`, found type `()` when returning a boxed trait object from a factory", "body": "<p>This question shows I'm a total newbie (coming from Java and looking into Rust for three days now). Searching online, I find lots of people asking the same question, and I do see answers stating that this is just not the way to use traits, but somehow I do not get how I can solve my problem.</p>\n\n<p>I want to connect to two different stdin-stdout protocols. They are different to some extent, but they both start with their protocol name. So I'd like to dynamically choose which implementation of the two protocols I should use.</p>\n\n<p>I tried the following:</p>\n\n<pre><code>use std::io;\nuse std::io::prelude::*;\n\ntrait Protocol {\n    fn parse(&amp;self);\n}\n\npub struct Abc {}\npub struct Xyz {}\n\nimpl Protocol for Abc {\n    fn parse(&amp;self) {\n        println!(\"Hello to the BEGINNING of the alphabet\");\n    }\n}\n\nimpl Protocol for Xyz {\n    fn parse(&amp;self) {\n        println!(\"Hello to the END of the alphabet\");\n    }\n}\n\nfn get_protocol(line: &amp;str) -&gt; Box&lt;Protocol + 'static&gt; {\n    if line.starts_with(\"Abc\") {\n        return Box::new(Abc {});\n    }\n\n    if line.starts_with(\"Xyz\") {  // this gives error E0308, mismatched types\n        return Box::new(Xyz {});\n    }\n}\n\nfn main() {\n    let stdin = io::stdin();\n\n    // TODO: loop\n    for line in stdin.lock().lines() {\n        let line = line.unwrap();\n        let protocol = get_protocol(&amp;line);\n        protocol.parse();\n    }\n}\n</code></pre>\n\n<p>If that would work, I could call</p>\n\n<p>echo \"Abc\" | ./demo_parser</p>\n\n<p>But as stated in the comment, I get an error for mismatched types. I already added the <code>Box&lt;..&gt;</code>, and then the <code>'static</code> to it (found such examples on the web). I found another example using some <code>~</code> operator, but that was not specific enough for me to get it.</p>\n\n<p>Can I either get this example working, or is it too much Java-thinking? But then, how can I solve my problem?</p>\n\n<hr>\n\n<p>Thanks for your help. The question that is referenced as a duplicate did help me. However, it only helped my after several readings, due to the fact that that question had remarks on strings I thought it would not apply to my question. But it did, and since maybe this might help someone else, here is my modificated piece of code:</p>\n\n<pre><code>use std::io;\nuse std::io::prelude::*;\n\ntrait Protocol {\n    fn parse(&amp;self);\n}\n\npub struct Abc {}\npub struct Xyz {}\npub struct Unknown {}\n\nimpl Protocol for Abc {\n    fn parse(&amp;self) {\n        println!(\"Hello to the BEGINNING of the alphabet\");\n    }\n}\n\nimpl Protocol for Xyz {\n    fn parse(&amp;self) {\n        println!(\"Hello to the END of the alphabet\");\n    }\n}\n\nimpl Protocol for Unknown {\n    fn parse(&amp;self) {\n        panic!(\"using protocol Unknown!\");\n    }\n }\n\nfn get_protocol(line: &amp;str) -&gt; Box&lt;Protocol + 'static&gt; {\n\n    if line.starts_with(\"Abc\") {\n        return Box::new(Abc {});\n    }\n\n    if line.starts_with(\"Xyz\") {\n        return Box::new(Xyz {});\n    }\n\n    return Box::new(Unknown {});\n}\n\nfn main() {\n\n    let stdin = io::stdin();\n\n    // TODO: loop\n    for line in stdin.lock().lines() {\n        let line = line.unwrap();\n        let protocol = get_protocol(&amp;line);\n        protocol.parse();\n    }\n}\n</code></pre>\n\n<p>This code works, but contrary to one of the comments it still needs the 'return', otherwise I get</p>\n\n<p>not all control paths return a value [E0269]</p>\n\n<p>Anyways, thanks to all of you for your patient help.</p>\n"}, {"tags": ["reference", "linked-list", "rust", "ownership", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1468515349, "post_id": 38379479, "comment_id": 64169890, "body": "Please <a href=\"https://stackoverflow.com/posts/38379479/edit\">edit</a> your question to <a href=\"http://meta.stackoverflow.com/q/261592/155423\">show what research you performed</a> before asking this question. There&#39;s <a href=\"http://stackoverflow.com/q/38353845/155423\">another circular linked-list question</a> on the frontpage of <a href=\"https://stackoverflow.com/questions/tagged/rust\">rust</a> questions when you asked this; how does this differ? What about the <a href=\"http://stackoverflow.com/search?q=%5Brust%5D+linked+list+is%3Aq\">50 or so other rust linked list questions</a>; maybe some of those would be useful? Once we know what is confusing about all the existing answers, we can give you a useful answer for your unique problem."}, {"owner": {"reputation": 686, "user_id": 3702880, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xCLqG.jpg?s=128&g=1", "display_name": "Dr. Andrey Belkin", "link": "https://stackoverflow.com/users/3702880/dr-andrey-belkin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468583299, "post_id": 38379479, "comment_id": 64199005, "body": "I have searched through provided links and found no answer. All the questions were about other topics. For example, <a href=\"http://stackoverflow.com/questions/38353845/unable-to-create-a-circular-linked-list-in-safe-rust-unsafe-version-crashes\">another circular linked-list question</a> is about implementation of a list with a kind of iterator. What I am asking is: I have a standard generic LinkedList + each element could reference its neighbors directly (so, it is a kind of double bi-directional list)."}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1468595700, "post_id": 38379479, "comment_id": 64207550, "body": "It sounds like you are looking for an <i>intrusive data structure</i>."}], "answers": [{"comments": [{"owner": {"reputation": 396, "user_id": 6597519, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qDT9g.jpg?s=128&g=1", "display_name": "apopiak", "link": "https://stackoverflow.com/users/6597519/apopiak"}, "edited": false, "score": 0, "creation_date": 1468703273, "post_id": 38415513, "comment_id": 64238591, "body": "also check out the <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/README.html\" rel=\"nofollow noreferrer\">linked list book</a>"}], "tags": [], "owner": {"reputation": 396, "user_id": 6597519, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qDT9g.jpg?s=128&g=1", "display_name": "apopiak", "link": "https://stackoverflow.com/users/6597519/apopiak"}, "is_accepted": true, "score": 2, "last_activity_date": 1469115398, "last_edit_date": 1469115398, "creation_date": 1468702293, "answer_id": 38415513, "question_id": 38379479, "link": "https://stackoverflow.com/questions/38379479/multiple-owners-for-rust-list-elements-list-owner-and-several-referrers-poss/38415513#38415513", "title": "Multiple owners for Rust list elements (list owner and several referrers) - possible?", "body": "<p>One of the strategies in Rust for multiple links in data structures is to use a <code>Vec&lt;T&gt;</code> as the backing storage and then index into it with <code>usize</code> \"pointers\".</p>\n\n<p>Your case would look something like:</p>\n\n<pre><code>struct XPipeline {\n    head: usize,\n    storage: Vec&lt;Node&gt;,\n}\n\nstruct Node {\n    handler: XHandler,\n    next: Option&lt;usize&gt;,\n    prev: Option&lt;usize&gt;,\n}\n</code></pre>\n\n<p>The bookkeeping is very similar to the pointers you would use in C++.</p>\n\n<p>Also have a look at <a href=\"https://www.reddit.com/r/rust/comments/3shzmv/tree_ownership_woes/\" rel=\"nofollow\">this discussion on Reddit</a> for ways to deal with ownership in graph-like structures.</p>\n\n<p>I would also just look for crates that implement double linked lists, skip lists, graphs or similar and take inspiration from there.</p>\n"}], "owner": {"reputation": 686, "user_id": 3702880, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xCLqG.jpg?s=128&g=1", "display_name": "Dr. Andrey Belkin", "link": "https://stackoverflow.com/users/3702880/dr-andrey-belkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 778, "favorite_count": 0, "accepted_answer_id": 38415513, "answer_count": 1, "score": 1, "last_activity_date": 1469115398, "creation_date": 1468513615, "last_edit_date": 1468571971, "question_id": 38379479, "link": "https://stackoverflow.com/questions/38379479/multiple-owners-for-rust-list-elements-list-owner-and-several-referrers-poss", "title": "Multiple owners for Rust list elements (list owner and several referrers) - possible?", "body": "<p>We have a struct with a <code>LinkedList</code>:</p>\n\n<pre><code>struct XPipeline {\n    handlers: LinkedList&lt;XHandler&gt;,\n}\n</code></pre>\n\n<p><code>XPipeline</code> is the owner of all <code>XHandler</code> objects and can access and modify them.</p>\n\n<p>We already have the list of handlers; now we need that each handler could refer to its neighbors in the list. Namely, each handler's method could refer to handler's neighbors, modify them and invoke their methods.</p>\n\n<p>My first thoughts were like this: I provide each handler with <code>prev</code> and <code>next</code> fields that will refer to neighbors. By adding a new handler into the list, I initialize these fields with corresponding references. Now I can use these references within all handler's methods. (That would be easy-peasy in C++ with pointers).</p>\n\n<p>The problem is: only one owner (i.e. with modification permission) is allowed. And that owner (of all handlers) is already a <code>XPipeline</code> object. How could I solve it? Maybe, by employing:</p>\n\n<pre><code>handlers: Rc&lt;RefCell&lt;LinkedList&lt;XHandler&gt;&gt;&gt;\n</code></pre>\n\n<p>But how exactly?</p>\n"}, {"tags": ["serialization", "types", "rust"], "answers": [{"tags": [], "owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "is_accepted": true, "score": 3, "last_activity_date": 1468513238, "creation_date": 1468513238, "answer_id": 38379348, "question_id": 38379171, "link": "https://stackoverflow.com/questions/38379171/subverting-rusts-type-system-for-printf-style-debugging/38379348#38379348", "title": "Subverting Rust&#39;s type system for printf-style debugging", "body": "<p>OK, I thought of one solution: leverage the serde_json library which is guaranteed to accept the <code>Serialize</code> types flowing through the <code>serialize_seq</code> call:</p>\n\n<pre><code>fn serialize_seq_elt&lt;T&gt;(&amp;mut self, value: T) -&gt; Result&lt;(), Self::Error&gt; where T: Serialize {\n    let reason_str = serde_json::to_string(&amp;value).unwrap();\n    Err(CdrError{\n        reason: reason_str\n    })\n//        value.serialize(self)\n}\n</code></pre>\n\n<p>this work out very nicely and formats pretty much the way I would do it anyway!</p>\n"}, {"comments": [{"owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "edited": false, "score": 2, "creation_date": 1468513285, "post_id": 38379351, "comment_id": 64168709, "body": "Oh, this is a really interesting general solution"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468515635, "post_id": 38379351, "comment_id": 64170069, "body": "Could you discuss some of the downsides of using specialization in this manner?"}, {"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468521858, "post_id": 38379351, "comment_id": 64173604, "body": "@Shepmaster is there any downside I should be aware of (except that it requires nightly and may break before it&#39;s stabilized)? This is the first time I&#39;ve used specialization in a program after reading the original RFC."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468522185, "post_id": 38379351, "comment_id": 64173833, "body": "I was mostly thinking of things like <a href=\"https://www.reddit.com/r/rust/comments/3yuk9w/a_pr_for_specialization_just_appeared/cygzuf5\" rel=\"nofollow noreferrer\">(the lack of) parametricity</a>, but was also hoping that you&#39;d have more ideas ^_^."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 2, "creation_date": 1468533973, "post_id": 38379351, "comment_id": 64179841, "body": "One of the obvious downsides is that you need a newtype wrapper. I think it is not always possible or convenient to use it."}, {"owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "edited": false, "score": 0, "creation_date": 1469486777, "post_id": 38379351, "comment_id": 64546102, "body": "I like this code but it was more complex than the specific problem I was trying to solve. You definitely address the spirit of the title very well but I ended up just needing the serde-specific solution. Thanks!"}, {"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1489773539, "post_id": 38379351, "comment_id": 72834645, "body": "FYI: there is a package that does this now: <a href=\"https://crates.io/crates/debugit\" rel=\"nofollow noreferrer\">debugit</a>.  It has a sensible fallback for Rust stable too."}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": false, "score": 5, "last_activity_date": 1468513246, "creation_date": 1468513246, "answer_id": 38379351, "question_id": 38379171, "link": "https://stackoverflow.com/questions/38379171/subverting-rusts-type-system-for-printf-style-debugging/38379351#38379351", "title": "Subverting Rust&#39;s type system for printf-style debugging", "body": "<p>You could do this with a newtype and specialization like this:</p>\n\n<pre><code>#![feature(specialization)]\n\nuse std::fmt;\n\nstruct TryDebug&lt;T&gt;(T);\n\nimpl&lt;T&gt; fmt::Debug for TryDebug&lt;T&gt; {\n    default fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; Result&lt;(), fmt::Error&gt; {\n        write!(f, \"no std::fmt::Debug impl\")\n    }\n}\n\nimpl&lt;T: fmt::Debug&gt; fmt::Debug for TryDebug&lt;T&gt; {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; Result&lt;(), fmt::Error&gt; {\n        self.0.fmt(f)\n    }\n}\n\nstruct Foo;\n\nfn main() {\n    println!(\"{:?}\", TryDebug(1));\n    println!(\"{:?}\", TryDebug(\"foo\"));\n    println!(\"{:?}\", TryDebug(Foo));\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>1\n\"foo\"\nno std::fmt::Debug impl\n</code></pre>\n\n<p>Note: Specialization is an unstable feature as of today. You'll have to use Rust Nightly for this to work.</p>\n"}], "owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "accepted_answer_id": 38379348, "answer_count": 2, "score": 3, "last_activity_date": 1468513246, "creation_date": 1468512611, "question_id": 38379171, "link": "https://stackoverflow.com/questions/38379171/subverting-rusts-type-system-for-printf-style-debugging", "title": "Subverting Rust&#39;s type system for printf-style debugging", "body": "<p>I am working on a <code>serde</code> <code>Serializer</code> implementation and I would like to debug values while deep inside the machinery. Namely, I want to debug the values passed in to a sequence serializer -- I would like to bomb out of my <code>cargo test</code> run with the value that is currently being serialized.</p>\n\n<pre><code>fn serialize_seq_elt&lt;T&gt;(&amp;mut self, value: T) -&gt; Result&lt;(), Self::Error&gt; where T: Serialize {\n    Err(CdrError{\n        reason: format!(\"{:?}\", value)\n    })\n//        value.serialize(self) // previous, type checked-code\n}\n</code></pre>\n\n<p>and as anticipated, I have an error at compile time:</p>\n\n<pre><code>   Compiling rtps v0.1.0 (file:///Users/xavierlange/code/dds/rtps)\nsrc/cdr/ser.rs:98:37: 98:42 error: the trait bound `T: std::fmt::Debug` is not satisfied [E0277]\nsrc/cdr/ser.rs:98             reason: format!(\"{:?}\", value)\n                                                      ^~~~~\n</code></pre>\n\n<p>it's true that <code>serde Serializer</code> doesn't enforce the <code>Debug</code> trait. Is there a macro or some other way to get around it? Do I need to hack <code>serde</code> library to add that associated trait?</p>\n"}, {"tags": ["rust", "iron"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1468498244, "post_id": 38370713, "comment_id": 64158043, "body": "This is a <a href=\"https://github.com/iron/params/issues/23\" rel=\"nofollow noreferrer\">known issue in Iron and Params</a>."}], "answers": [{"tags": [], "owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "is_accepted": true, "score": 3, "last_activity_date": 1468498172, "last_edit_date": 1468498172, "creation_date": 1468490659, "answer_id": 38371263, "question_id": 38370713, "link": "https://stackoverflow.com/questions/38370713/cannot-access-parameters-in-iron-because-the-trait-bound-pluginpluginironre/38371263#38371263", "title": "Cannot access parameters in Iron because the trait bound plugin::Plugin&lt;iron::Request&gt; is not satisfied", "body": "<p>The <code>params 0.2.2</code> crate <a href=\"https://crates.io/crates/params\" rel=\"nofollow\">depends on</a> <code>iron ^0.3</code>, so you need to change the iron dependency version to <code>0.3</code>.</p>\n\n<p>When using such a plugin crate, you have to make sure that versions match exactly. Sometimes a <code>cargo update</code> may be needed also.</p>\n\n<hr>\n\n<p>In Rust, the same structs or traits taken from multiple versions of the same crate are treated as totally different. It usually results in an error like \"<code>Pixel</code> expected, but found <code>Pixel</code>\", or missing trait implementations as in your case.</p>\n"}], "owner": {"reputation": 3855, "user_id": 342882, "user_type": "registered", "accept_rate": 34, "profile_image": "https://www.gravatar.com/avatar/c13b4dc095a1bcc25e008effdd5cf07a?s=128&d=identicon&r=PG", "display_name": "Daneel Yaitskov", "link": "https://stackoverflow.com/users/342882/daneel-yaitskov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 319, "favorite_count": 0, "accepted_answer_id": 38371263, "answer_count": 1, "score": 2, "last_activity_date": 1468498172, "creation_date": 1468489076, "last_edit_date": 1468498137, "question_id": 38370713, "link": "https://stackoverflow.com/questions/38370713/cannot-access-parameters-in-iron-because-the-trait-bound-pluginpluginironre", "title": "Cannot access parameters in Iron because the trait bound plugin::Plugin&lt;iron::Request&gt; is not satisfied", "body": "<p>I am exploring the capabilities of the Iron web framework. As far as I have figured out, the Iron core doesn't have an API to handle \nHTTP parameters so I tried to use the params crate.</p>\n\n<pre><code>error: the trait bound `params::Params: plugin::Plugin&lt;iron::Request&lt;'_, '_&gt;&gt;` is not satisfied [E0277]\n    let map = req.get_ref::&lt;Params&gt;().unwrap();\n                  ^~~~~~~\nhelp: run `rustc --explain E0277` to see a detailed explanation\n</code></pre>\n\n<p>I haven't found trace of this bug and don't have a clue how to fix it.</p>\n\n<pre><code>extern crate iron;\nextern crate params;\n\nuse iron::prelude::*;\nuse iron::status;\nuse params::*; //{self, Params, Value};\n\nfn handle_user(req: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n    use params::{Params, Value};\n\n    let map = req.get_ref::&lt;Params&gt;().unwrap();\n\n    match map.find(&amp;[\"user\", \"name\"]) {\n        Some(&amp;Value::String(ref name)) if name == \"Marie\" =&gt; {\n            Ok(Response::with((iron::status::Ok, \"Welcome back, Marie!\")))\n        },\n        _ =&gt; Ok(Response::with(iron::status::NotFound)),\n    }\n}\n\nfn main() {   \n    Iron::new(handle_user).http(\"localhost:2330\").unwrap();\n}\n</code></pre>\n\n<p>Versions of libraries</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>iron = \"0.4.0\"\nparams = \"0.2.2\"\n</code></pre>\n"}]