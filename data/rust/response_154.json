[{"tags": ["rust"], "comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 2, "creation_date": 1513814638, "post_id": 47915905, "comment_id": 82800146, "body": "<code>Vec</code>&#39;s implementation of <code>IndexMut</code> takes <code>&amp;mut Vec&lt;T&gt;</code>  and returns an <code>&amp;mut T</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1513856653, "post_id": 47915905, "comment_id": 82816010, "body": "Consider <code>BTreeSet</code> and <code>HashSet</code> -- they have members that are always immutable. <code>Arena</code> (from the <a href=\"https://docs.rs/typed-arena/1.3.0/typed_arena/index.html\" rel=\"nofollow noreferrer\">typed-arena</a> crate) is a data structure that hands out <code>&amp;mut</code> references to elements but only requires a <code>&amp;Arena</code> to do so."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1513817945, "creation_date": 1513817945, "answer_id": 47916444, "question_id": 47915905, "link": "https://stackoverflow.com/questions/47915905/do-a-containers-members-inherit-its-mutability/47916444#47916444", "title": "Do a container&#39;s members inherit its mutability?", "body": "<p>In general, mutability is \"inherited\" by the fields of a type depending on the binding of the variable. From <em>The Rust Programming Language</em>'s <a href=\"https://doc.rust-lang.org/book/second-edition/ch05-01-defining-structs.html\" rel=\"nofollow noreferrer\">chapter on defining structs</a>:</p>\n\n<blockquote>\n  <p>If the instance is mutable, we can change a value by using the dot\n  notation and assigning into a particular field</p>\n  \n  <p>[...]</p>\n  \n  <p>Note that the entire instance must be mutable</p>\n</blockquote>\n\n<p>However, that's not what's happening here. As <a href=\"https://stackoverflow.com/questions/47915905/do-container-members-inherit-its-mutability#comment82800146_47915905\">Veedrac points out in the comments</a>, you aren't accessing the fields of the container, but you are calling a method.</p>\n\n<p>The <code>[]</code> operator is powered by the <a href=\"https://doc.rust-lang.org/std/ops/trait.IndexMut.html\" rel=\"nofollow noreferrer\"><code>IndexMut</code> trait</a>:</p>\n\n<pre><code>pub trait IndexMut&lt;Idx&gt;: Index&lt;Idx&gt;\nwhere\n    Idx: ?Sized,\n{\n    fn index_mut(&amp;mut self, index: Idx) -&gt; &amp;mut Self::Output;\n}\n</code></pre>\n\n<p>Your code translates to something akin to:</p>\n\n<pre><code>{\n    let tmp: &amp;mut Member = IndexMut::index_mut(&amp;mut arr, 0);\n    tmp.x = 25;\n}\n</code></pre>\n\n<p>In this case, nothing is \"inherited\", it's explicitly granted via the method implementations.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29598264/155423\">Returning a struct containing mutable values</a></li>\n</ul>\n"}], "owner": {"reputation": 1054, "user_id": 3478959, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/b52236406c4b6e4fa0bb619db556cf14?s=128&d=identicon&r=PG&f=1", "display_name": "Lev", "link": "https://stackoverflow.com/users/3478959/lev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 158, "favorite_count": 0, "accepted_answer_id": 47916444, "answer_count": 1, "score": 2, "last_activity_date": 1513817945, "creation_date": 1513813461, "last_edit_date": 1513817827, "question_id": 47915905, "link": "https://stackoverflow.com/questions/47915905/do-a-containers-members-inherit-its-mutability", "title": "Do a container&#39;s members inherit its mutability?", "body": "<p>Something like this compiles and runs fine:</p>\n\n<pre><code>#[derive(Clone)]\nstruct Member {\n    x: i32,\n}\n\nfn main() {\n    let mut arr = vec![Member { x: 5 }; 5];\n\n    arr[0].x = 25;\n\n    println!(\"{}\", arr[0].x); // Gives 25\n}\n</code></pre>\n\n<p>Is it because if a reference to a container such as <code>Vec</code> is made mutable, then its elements \"inherit\" its mutability? </p>\n"}, {"tags": ["rust", "traits", "iterator-traits"], "comments": [{"owner": {"reputation": 313, "user_id": 4281256, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/29718c8e53bceab9667b89236644f7f1?s=128&d=identicon&r=PG&f=1", "display_name": "Dimitris Karagiannis", "link": "https://stackoverflow.com/users/4281256/dimitris-karagiannis"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513793299, "post_id": 47911765, "comment_id": 82791611, "body": "It has no compile errors but try to run it with the example shown above. Try to call it with a [6,7,8,3] or a &amp;[1,2,3,4,8] argument"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1513793512, "post_id": 47911765, "comment_id": 82791712, "body": "Please seek to write a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Reproducing the exact problem in the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> is a plus."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513793738, "post_id": 47911765, "comment_id": 82791833, "body": "It would also be a good idea to read the error text and tell us why you think that the compiler is incorrect in the error. For example, if it tells you that something isn&#39;t implemented, why do you think it is? Otherwise, it looks like you are willfully ignoring the error messages."}, {"owner": {"reputation": 1877, "user_id": 138862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e53c9c95983f35e5e61fa0ef0046ebfe?s=128&d=identicon&r=PG", "display_name": "Tedil", "link": "https://stackoverflow.com/users/138862/tedil"}, "edited": false, "score": 0, "creation_date": 1513870213, "post_id": 47911765, "comment_id": 82824513, "body": "Are slices sufficient? If yes \u2192 <a href=\"https://play.rust-lang.org/?gist=03b9f52e046b32666e0d67ce55a00477&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> is probably all you need."}], "answers": [{"tags": [], "owner": {"reputation": 313, "user_id": 4281256, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/29718c8e53bceab9667b89236644f7f1?s=128&d=identicon&r=PG&f=1", "display_name": "Dimitris Karagiannis", "link": "https://stackoverflow.com/users/4281256/dimitris-karagiannis"}, "is_accepted": true, "score": 1, "last_activity_date": 1513966206, "last_edit_date": 1513966206, "creation_date": 1513965779, "answer_id": 47945577, "question_id": 47911765, "link": "https://stackoverflow.com/questions/47911765/function-that-accepts-any-indexable-data-type-as-an-argument/47945577#47945577", "title": "Function that accepts any indexable data type as an argument", "body": "<p>I found a way to implement it but with some limitations.</p>\n\n<pre><code>pub struct Validator {\n    data: Vec&lt;i32&gt;,\n}\nimpl&lt;'a&gt; From&lt;&amp;'a [i32; 2]&gt; for Validator {\n    fn from(input: &amp;'a [i32; 2]) -&gt; Self {\n        Validator {\n            data: input.iter().map(|c| *c).collect(),\n        }\n    }\n}\nimpl From&lt;[i32; 2]&gt; for Validator {\n    fn from(input: [i32; 2]) -&gt; Self {\n        Validator {\n            data: input.iter().map(|c| *c).collect(),\n        }\n    }\n}\nimpl From&lt;Vec&lt;i32&gt;&gt; for Validator {\n    fn from(input: Vec&lt;i32&gt;) -&gt; Self {\n        Validator { data: input }\n    }\n}\n\npub fn find&lt;T&gt;(input: T, key: i32) -&gt; Option&lt;usize&gt;\nwhere\n    T: std::convert::Into&lt;Validator&gt;,\n    Validator: std::convert::From&lt;T&gt;,\n{\n    let input: Vec&lt;i32&gt; = input.into().data;\n\n    if input.len() == 0 {\n        return None;\n    }\n    if key &lt; input[0] || key &gt; input[(input.len() - 1)] {\n        return None;\n    }\n    let mut index = input.len() - 1;\n    loop {\n        if key &lt; input[index] {\n            index /= 2;\n            continue;\n        } else if input[index] &lt; key &amp;&amp; input[index + 1] &gt; key {\n            return None;\n        } else if key &gt; input[index] {\n            index += index / 2;\n            continue;\n        } else if input[index] == key {\n            return Some(index);\n        } else {\n            return None;\n        }\n    }\n}\n\nfn main() {\n    assert_eq!(find(&amp;[1, 2], 2), Some(1));\n    assert_eq!(find([1, 2], 2), Some(1));\n    assert_eq!(find(vec![1, 2], 2), Some(1));\n}\n</code></pre>\n\n<p>If you need a function that accepts an array of 3 or more numbers you will have to implement it for each number of elements. You can add support for more structs like <code>VecDeque</code> or custom ones by implementing the <code>Into</code> trait for the validator struct and the type you want to support.</p>\n"}], "owner": {"reputation": 313, "user_id": 4281256, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/29718c8e53bceab9667b89236644f7f1?s=128&d=identicon&r=PG&f=1", "display_name": "Dimitris Karagiannis", "link": "https://stackoverflow.com/users/4281256/dimitris-karagiannis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "accepted_answer_id": 47945577, "answer_count": 1, "score": 1, "last_activity_date": 1513966206, "creation_date": 1513792371, "last_edit_date": 1513794912, "question_id": 47911765, "link": "https://stackoverflow.com/questions/47911765/function-that-accepts-any-indexable-data-type-as-an-argument", "title": "Function that accepts any indexable data type as an argument", "body": "<p>I am trying to make a function that can take any class that accepts the <code>[]</code> operator. I would like it to be able to accept:</p>\n\n<ol>\n<li><p>Arrays either by reference or by value</p></li>\n<li><p>Vectors or any other container that can be indexed</p></li>\n</ol>\n\n<p>By some experimenting I found that I also need some other traits like <code>PartialOrd</code>, <code>PartialEq</code>. I also need to find out how many objects are in the container. </p>\n\n<p>Here is my code:</p>\n\n<pre><code>use std::ops::Index;\nuse std::iter::ExactSizeIterator;\nuse std::cmp::PartialEq;\n\npub fn find&lt;'a, I&gt;(input: I, key: &lt;I as std::ops::Index&lt;u32&gt;&gt;::Output) -&gt; Option&lt;u32&gt;\nwhere\n    I: Index&lt;u32&gt; + ExactSizeIterator,\n    &lt;I as std::ops::Index&lt;u32&gt;&gt;::Output: PartialEq + std::marker::Sized + std::cmp::PartialOrd,\n{\n    if input.len() == 0 {\n        return None;\n    }\n    if key &lt; input[0] || key &gt; input[(input.len() - 1) as u32] {\n        return None;\n    }\n    let mut index: u32 = (input.len() - 1) as u32;\n    loop {\n        if key &lt; input[index] {\n            index /= 2;\n            continue;\n        } else if input[index] &lt; key &amp;&amp; input[index + 1] &gt; key {\n            return None;\n        } else if key &gt; input[index] {\n            index += index / 2;\n            continue;\n        } else if input[index] == key {\n            return Some(index);\n        } else {\n            return None;\n        }\n    }\n}\n\nfn main() {\n    assert_eq!(find(&amp;[1, 2], 2), Some(1));\n    assert_eq!(find([1, 2], 2), Some(1));\n    assert_eq!(find(vec![1, 2], 2), Some(1));\n}\n</code></pre>\n\n<p>It produces these errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;[{integer}; 2]: std::ops::Index&lt;u32&gt;` is not satisfied\n  --&gt; src/main.rs:36:16\n   |\n36 |     assert_eq!(find(&amp;[1, 2], 2), Some(1));\n   |                ^^^^ the type `&amp;[{integer}; 2]` cannot be indexed by `u32`\n   |\n   = help: the trait `std::ops::Index&lt;u32&gt;` is not implemented for `&amp;[{integer}; 2]`\n   = note: required by `find`\n\nerror[E0277]: the trait bound `&amp;[{integer}; 2]: std::iter::ExactSizeIterator` is not satisfied\n  --&gt; src/main.rs:36:16\n   |\n36 |     assert_eq!(find(&amp;[1, 2], 2), Some(1));\n   |                ^^^^ the trait `std::iter::ExactSizeIterator` is not implemented for `&amp;[{integer}; 2]`\n   |\n   = note: required by `find`\n\nerror[E0277]: the trait bound `[{integer}; 2]: std::ops::Index&lt;u32&gt;` is not satisfied\n  --&gt; src/main.rs:37:16\n   |\n37 |     assert_eq!(find([1, 2], 2), Some(1));\n   |                ^^^^ the type `[{integer}; 2]` cannot be indexed by `u32`\n   |\n   = help: the trait `std::ops::Index&lt;u32&gt;` is not implemented for `[{integer}; 2]`\n   = note: required by `find`\n\nerror[E0277]: the trait bound `[{integer}; 2]: std::iter::ExactSizeIterator` is not satisfied\n  --&gt; src/main.rs:37:16\n   |\n37 |     assert_eq!(find([1, 2], 2), Some(1));\n   |                ^^^^ the trait `std::iter::ExactSizeIterator` is not implemented for `[{integer}; 2]`\n   |\n   = note: required by `find`\n\nerror[E0277]: the trait bound `std::vec::Vec&lt;{integer}&gt;: std::ops::Index&lt;u32&gt;` is not satisfied\n  --&gt; src/main.rs:38:16\n   |\n38 |     assert_eq!(find(vec![1, 2], 2), Some(1));\n   |                ^^^^ the type `std::vec::Vec&lt;{integer}&gt;` cannot be indexed by `u32`\n   |\n   = help: the trait `std::ops::Index&lt;u32&gt;` is not implemented for `std::vec::Vec&lt;{integer}&gt;`\n   = note: required by `find`\n\nerror[E0277]: the trait bound `std::vec::Vec&lt;{integer}&gt;: std::iter::ExactSizeIterator` is not satisfied\n  --&gt; src/main.rs:38:16\n   |\n38 |     assert_eq!(find(vec![1, 2], 2), Some(1));\n   |                ^^^^ the trait `std::iter::ExactSizeIterator` is not implemented for `std::vec::Vec&lt;{integer}&gt;`\n   |\n   = note: required by `find`\n</code></pre>\n"}, {"tags": ["http", "http-headers", "rust", "reqwest"], "answers": [{"comments": [{"owner": {"reputation": 375, "user_id": 4873031, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/12972bef8c80332f812e801765cd99e4?s=128&d=identicon&r=PG&f=1", "display_name": "the_lrner", "link": "https://stackoverflow.com/users/4873031/the-lrner"}, "edited": false, "score": 1, "creation_date": 1593747577, "post_id": 47912021, "comment_id": 110893326, "body": "Thanks for digging deep. This should really be more explicit in the documentation."}, {"owner": {"reputation": 2126, "user_id": 3680466, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2a8e5869d77d8943cad4baaba68ceeca?s=128&d=identicon&r=PG&f=1", "display_name": "cloudsurfin", "link": "https://stackoverflow.com/users/3680466/cloudsurfin"}, "edited": false, "score": 0, "creation_date": 1602395522, "post_id": 47912021, "comment_id": 113703245, "body": "Can also now add multiple headers with .headers() instead of .header() and   let mut headers = reqwest::header::HeaderMap::new(); headers.insert(reqwest::header::USER_AGENT,reqwest::header::&zwnj;&#8203;HeaderValue::from_st&zwnj;&#8203;atic(&quot;curl&quot;));"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 23, "last_activity_date": 1578671373, "last_edit_date": 1578671373, "creation_date": 1513793441, "answer_id": 47912021, "question_id": 47911513, "link": "https://stackoverflow.com/questions/47911513/how-do-i-set-the-request-headers-using-reqwest/47912021#47912021", "title": "How do I set the request headers using Reqwest?", "body": "<h1>Reqwest 0.10</h1>\n\n<p>Starting at the <a href=\"https://docs.rs/reqwest/0.10.1/reqwest/\" rel=\"noreferrer\">crate's documentation</a>, we see:</p>\n\n<blockquote>\n  <p>For a single request, you can use the <a href=\"https://docs.rs/reqwest/0.10.1/reqwest/fn.get.html\" rel=\"noreferrer\"><code>get</code></a> shortcut method.</p>\n</blockquote>\n\n<p><a href=\"https://docs.rs/reqwest/0.10.1/reqwest/fn.get.html\" rel=\"noreferrer\"><code>get</code>'s documentation</a> states:</p>\n\n<blockquote>\n  <p>This function creates a new internal <code>Client</code> on each call, and so should not be used if making many requests. Create a <a href=\"https://docs.rs/reqwest/0.10.1/reqwest/struct.Client.html\" rel=\"noreferrer\"><code>Client</code></a> instead.</p>\n</blockquote>\n\n<p><a href=\"https://docs.rs/reqwest/0.10.1/reqwest/struct.Client.html\" rel=\"noreferrer\"><code>Client</code></a> has a <code>request</code> method which states:</p>\n\n<blockquote>\n  <p>Returns a <code>RequestBuilder</code>, which will allow setting headers and request body before sending.</p>\n</blockquote>\n\n<p><code>RequestBuilder</code> has a <a href=\"https://docs.rs/reqwest/0.10.1/reqwest/struct.RequestBuilder.html#method.header\" rel=\"noreferrer\"><code>header</code> method</a>. This can be used as:</p>\n\n<pre><code>use reqwest::header::USER_AGENT;\n\nlet client = reqwest::Client::new();\nlet res = client\n    .get(\"https://www.rust-lang.org\")\n    .header(USER_AGENT, \"My Rust Program 1.0\")\n    .send()\n    .await?;\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>How do I add custom headers?</p>\n</blockquote>\n\n<p>If you look at the signature for <a href=\"https://docs.rs/reqwest/0.10.1/reqwest/struct.RequestBuilder.html#method.header\" rel=\"noreferrer\"><code>header</code></a>, you will see that it accepts generic types:</p>\n\n<pre><code>pub fn header&lt;K, V&gt;(self, key: K, value: V) -&gt; RequestBuilder where\n    HeaderName: TryFrom&lt;K&gt;,\n    &lt;HeaderName as TryFrom&lt;K&gt;&gt;::Error: Into&lt;Error&gt;,\n    HeaderValue: TryFrom&lt;V&gt;,\n    &lt;HeaderValue as TryFrom&lt;V&gt;&gt;::Error: Into&lt;Error&gt;, \n</code></pre>\n\n<p>There is <a href=\"https://docs.rs/reqwest/0.10.1/reqwest/header/struct.HeaderName.html#impl-TryFrom%3C%26%27a%20str%3E\" rel=\"noreferrer\">an implementation of <code>TryFrom&lt;&amp;'a str&gt;</code> for <code>HeaderName</code></a>, so you can use a string literal:</p>\n\n<pre><code>use reqwest; // 0.10.0\nuse tokio; // 0.2.6\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), reqwest::Error&gt; {\n    let client = reqwest::Client::new();\n    let res = client\n        .get(\"https://www.rust-lang.org\")\n        .header(\"X-My-Custom-Header\", \"foo\")\n        .send()\n        .await?;\n\n    Ok(())\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 127, "user_id": 4467214, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/I35OW.png?s=128&g=1", "display_name": "Abrar Khan", "link": "https://stackoverflow.com/users/4467214/abrar-khan"}, "is_accepted": false, "score": 3, "last_activity_date": 1567584290, "creation_date": 1567584290, "answer_id": 57784037, "question_id": 47911513, "link": "https://stackoverflow.com/questions/47911513/how-do-i-set-the-request-headers-using-reqwest/57784037#57784037", "title": "How do I set the request headers using Reqwest?", "body": "<p>Send Cookie in reqwest client with version ~0.9.19</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use reqwest; // 0.9.19\nuse http::{HeaderMap, HeaderValue, header::{COOKIE}};\n\n// create client first\nlet init_client = reqwest::Client::builder()\n        .cookie_store(true).build().unwrap();\n// create Header Map\n// Here cookie store is optional based on if making more than one request with the // same client \nlet mut headers = HeaderMap::new();\nheaders.insert(COOKIE, HeaderValue::from_str(\"key=value\").unwrap());\nlet resp = init_client.get(\"api\")\n           .headers(headers)\n           .query(&amp;[(\"name\", \"foo\")])\n           .send()\n           .map(|resp|{\n               println!(\"{:?}\", resp.status());\n               resp\n           })\n           .map_err(|err|{\n              println!(\"{:?}\", err);\n              err\n           });\n\n</code></pre>\n\n<p>Hope This may help.</p>\n"}], "owner": {"reputation": 3172, "user_id": 1206421, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/19dd8d6cbf16c4246914c10502fd2395?s=128&d=identicon&r=PG&f=1", "display_name": "serge1peshcoff", "link": "https://stackoverflow.com/users/1206421/serge1peshcoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8719, "favorite_count": 2, "accepted_answer_id": 47912021, "answer_count": 2, "score": 12, "last_activity_date": 1578671373, "creation_date": 1513791368, "last_edit_date": 1516331693, "question_id": 47911513, "link": "https://stackoverflow.com/questions/47911513/how-do-i-set-the-request-headers-using-reqwest", "title": "How do I set the request headers using Reqwest?", "body": "<p>I need to make a GET request to a website with a cookie using the Reqwest library. I figured out how to send a GET request:</p>\n\n<pre><code>let response = reqwest::get(\"http://example.com\")?;\n</code></pre>\n\n<p>How do I send the same request but adding some custom headers?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1513786160, "post_id": 47909732, "comment_id": 82787794, "body": "I don&#39;t think that this is a duplicate of &quot;making an HTTP request&quot;. As shown in <a href=\"https://unix.stackexchange.com/a/194136\">the first link</a>, an HTTP request is <b>one</b> possible solution. You can also shell out to command line tools, make a DNS request, use FTP, etc. I feel that this question is <b>too broad</b> as it should instead pick one of those mechanisms and look for the Rust equivalent. Getting it via HTTP is indeed a duplicate of the suggested Q&amp;A."}, {"owner": {"reputation": 17167, "user_id": 773263, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/e2581b53db32340d7e1b5be6b99c2bb1?s=128&d=identicon&r=PG", "display_name": "Philip Kirkbride", "link": "https://stackoverflow.com/users/773263/philip-kirkbride"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513786329, "post_id": 47909732, "comment_id": 82787895, "body": "@Shepmaster yes another part of the problem I&#39;m facing... the change will be a pull request to another project. So if my PR completely relies on a site like <code>akamai.com</code> it will probably be ignored. I need to figure out a reliable long-term solution."}], "owner": {"reputation": 17167, "user_id": 773263, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/e2581b53db32340d7e1b5be6b99c2bb1?s=128&d=identicon&r=PG", "display_name": "Philip Kirkbride", "link": "https://stackoverflow.com/users/773263/philip-kirkbride"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 228, "favorite_count": 0, "closed_date": 1513786684, "answer_count": 0, "score": 0, "last_activity_date": 1513787130, "creation_date": 1513784625, "last_edit_date": 1513787130, "question_id": 47909732, "link": "https://stackoverflow.com/questions/47909732/is-there-an-easy-way-to-get-the-systems-external-ip-in-rust", "closed_reason": "Duplicate", "title": "Is there an easy way to get the system&#39;s external IP in Rust?", "body": "<p>I need to get my external IP from inside a Rust program. <a href=\"https://unix.stackexchange.com/a/194136\">In bash</a>, an external source is needed, for example <code>curl -s http://whatismyip.akamai.com/</code>, I assume the same is true in Rust.</p>\n\n<p>I did see <a href=\"https://stackoverflow.com/questions/44056006/how-to-get-a-list-of-the-machines-ip-addresses-from-rust\">How to get a list of the machine&#39;s IP addresses from Rust?</a>, but it is related to the local IP not external.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513774945, "post_id": 47904954, "comment_id": 82780279, "body": "<code>array: &amp;mut Vec&lt;T&gt;</code> \u2014 that is <b>not</b> an &quot;array&quot;. An array has a size known at compile time. See also <a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1513779139, "post_id": 47904954, "comment_id": 82783015, "body": "FWIW, there&#39;s lots of little non-idiomatic points with this code. You may want to consider <a href=\"https://codereview.meta.stackexchange.com/questions/5777/a-guide-to-code-review-for-stack-overflow-users\">posting your working code to Code Review</a>."}], "answers": [{"comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1513771918, "post_id": 47905568, "comment_id": 82778257, "body": "you&#39;re completely right. There is the <code>num</code> crate which already has such a trait: <a href=\"http://rust-num.github.io/num/num/trait.Bounded.html\" rel=\"nofollow noreferrer\"><code>Bounded</code></a>"}, {"owner": {"reputation": 1127, "user_id": 6171872, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2wfQM.jpg?s=128&g=1", "display_name": "StarSheriff", "link": "https://stackoverflow.com/users/6171872/starsheriff"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1513772111, "post_id": 47905568, "comment_id": 82778381, "body": "Oh that is nice and good to know. Doesn&#39;t turn up on rustdoc of course. I have to extend my searches to crates more often."}, {"owner": {"reputation": 307, "user_id": 8984610, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/de739400d7fc13ff5008e2968c5983e8?s=128&d=identicon&r=PG&f=1", "display_name": "Erlich ", "link": "https://stackoverflow.com/users/8984610/erlich"}, "edited": false, "score": 0, "creation_date": 1513775789, "post_id": 47905568, "comment_id": 82780819, "body": "perfect. Thanks, I implemented the trait bound and it worked like a charm."}], "tags": [], "owner": {"reputation": 1127, "user_id": 6171872, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2wfQM.jpg?s=128&g=1", "display_name": "StarSheriff", "link": "https://stackoverflow.com/users/6171872/starsheriff"}, "is_accepted": true, "score": 5, "last_activity_date": 1513775056, "last_edit_date": 1513775056, "creation_date": 1513771128, "answer_id": 47905568, "question_id": 47904954, "link": "https://stackoverflow.com/questions/47904954/finding-the-maximum-allowable-value-for-generic-type-t/47905568#47905568", "title": "Finding the maximum allowable value for generic type T", "body": "<p>As far as I know, there is no way of doing that with the standard library at this time. One way to solve it would be make your own trait, add another trait bound to <code>merge</code> and implement your trait for the types you are expecting.</p>\n\n<p>The specific trait implementation for <code>u32</code> would then return <code>std::u32::MAX</code> and so on for the other types.</p>\n\n<p>Here is a <a href=\"https://internals.rust-lang.org/t/trait-for-a-maximum-value-of-a-type/2238\" rel=\"nofollow noreferrer\">discussion from earlier this year</a>.</p>\n\n<p>As <a href=\"https://stackoverflow.com/questions/47904954/finding-the-maximum-allowable-value-for-generic-type-t#comment82778257_47905568\"><em>oli_obk - ker</em> pointed out</a> below, the <code>num</code> crate already has such a trait: <a href=\"http://rust-num.github.io/num/num/trait.Bounded.html\" rel=\"nofollow noreferrer\"><code>Bounded</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 1, "last_activity_date": 1513777270, "creation_date": 1513777270, "answer_id": 47907399, "question_id": 47904954, "link": "https://stackoverflow.com/questions/47904954/finding-the-maximum-allowable-value-for-generic-type-t/47907399#47907399", "title": "Finding the maximum allowable value for generic type T", "body": "<p>For a generic upper bound you could also wrap the type in an enum:</p>\n\n<pre><code>#[derive(Clone, Copy, PartialEq, PartialOrd, Debug)]\nenum UpperBounded&lt;T&gt; {\n    Value(T),\n    Max,\n}\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html#derivable\" rel=\"nofollow noreferrer\">derived order is documented</a> to sort <code>Value(_)</code> before <code>Max</code>.</p>\n\n<p><code>UpperBounded&lt;T&gt;</code> can then be used for the <code>left</code> and <code>right</code> vectors.</p>\n"}], "owner": {"reputation": 307, "user_id": 8984610, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/de739400d7fc13ff5008e2968c5983e8?s=128&d=identicon&r=PG&f=1", "display_name": "Erlich ", "link": "https://stackoverflow.com/users/8984610/erlich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 473, "favorite_count": 0, "accepted_answer_id": 47905568, "answer_count": 2, "score": 7, "last_activity_date": 1513777270, "creation_date": 1513769208, "last_edit_date": 1513774868, "question_id": 47904954, "link": "https://stackoverflow.com/questions/47904954/finding-the-maximum-allowable-value-for-generic-type-t", "title": "Finding the maximum allowable value for generic type T", "body": "<p>I am implementing a merge sort which will sort an array of type <code>T</code>. In my <code>merge</code> method, the algorithm calls for the the last element of the left and right list be <strong>positive infinity</strong>. How can I get the maximum value a given data type can hold?</p>\n\n<pre><code>fn merge&lt;T: PartialOrd + Copy + std::fmt::Debug&gt;(p: usize, q: usize, r: usize, array: &amp;mut Vec&lt;T&gt;) {\n    let left_size: usize = q - p;\n    let right_size: usize = r - q;\n\n    let mut left: Vec&lt;T&gt; = Vec::new();\n    let mut right: Vec&lt;T&gt; = Vec::new();\n\n    for i in 0..left_size {\n        left.push(array[p + i]);\n    }\n\n    for i in 0..right_size {\n        right.push(array[q + i]);\n    }\n\n    left.push(T::max_value()); //where I would put the max value\n    right.push(T::max_value()); //where I would put the max value\n\n    let mut i: usize = 0;\n    let mut j: usize = 0;\n\n    for k in p..r {\n        if left[i] &lt;= right[j] {\n            array[k] = left[i];\n            i += 1;\n        } else {\n            array[k] = right[j];\n            j += 1;\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1513872193, "post_id": 47897022, "comment_id": 82825676, "body": "Well.. it is 012! But that&#39;s not what you want. Just stick with the byte literal and dont mess around with char codes."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1513730471, "creation_date": 1513730471, "answer_id": 47897265, "question_id": 47897022, "link": "https://stackoverflow.com/questions/47897022/a-tcp-echo-server-never-replies-even-though-i-am-sending-a-newline/47897265#47897265", "title": "A TCP echo server never replies even though I am sending a newline", "body": "<blockquote>\n  <p>the ASCII code for A is 65 and newline is 12</p>\n</blockquote>\n\n<p>No, it's not:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> The decimal set:\n\n   0 nul    1 soh    2 stx    3 etx    4 eot    5 enq    6 ack    7 bel\n   8 bs     9 ht    10 nl    11 vt    12 np    13 cr    14 so    15 si\n  16 dle   17 dc1   18 dc2   19 dc3   20 dc4   21 nak   22 syn   23 etb\n  24 can   25 em    26 sub   27 esc   28 fs    29 gs    30 rs    31 us\n  32 sp    33  !    34  \"    35  #    36  $    37  %    38  &amp;    39  '\n  40  (    41  )    42  *    43  +    44  ,    45  -    46  .    47  /\n  48  0    49  1    50  2    51  3    52  4    53  5    54  6    55  7\n  56  8    57  9    58  :    59  ;    60  &lt;    61  =    62  &gt;    63  ?\n  64  @    65  A    66  B    67  C    68  D    69  E    70  F    71  G\n  72  H    73  I    74  J    75  K    76  L    77  M    78  N    79  O\n  80  P    81  Q    82  R    83  S    84  T    85  U    86  V    87  W\n  88  X    89  Y    90  Z    91  [    92  \\    93  ]    94  ^    95  _\n  96  `    97  a    98  b    99  c   100  d   101  e   102  f   103  g\n 104  h   105  i   106  j   107  k   108  l   109  m   110  n   111  o\n 112  p   113  q   114  r   115  s   116  t   117  u   118  v   119  w\n 120  x   121  y   122  z   123  {   124  |   125  }   126  ~   127 del\n</code></pre>\n\n<p>A is 65, but newline is <strong>10</strong>. </p>\n\n<p>That said, there's no reason to use decimal values here in the first place. Instead, use a byte literal: </p>\n\n<pre><code>tokio_io::io::write_all(socket, b\"A\\n\")\n</code></pre>\n"}], "owner": {"reputation": 2308, "user_id": 1120799, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/IRCQ4.jpg?s=128&g=1", "display_name": "Abhishek Chanda", "link": "https://stackoverflow.com/users/1120799/abhishek-chanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 47897265, "answer_count": 1, "score": -1, "last_activity_date": 1513730684, "creation_date": 1513728504, "last_edit_date": 1513730684, "question_id": 47897022, "link": "https://stackoverflow.com/questions/47897022/a-tcp-echo-server-never-replies-even-though-i-am-sending-a-newline", "title": "A TCP echo server never replies even though I am sending a newline", "body": "<p>I am trying to follow the Tokio client tutorial to write a client that talks to an echo server that sends back the response with a newline at the end. Here is what I have:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse std::net::SocketAddr;\nuse std::io::BufReader;\nuse futures::Future;\nuse tokio_core::reactor::Core;\nuse tokio_core::net::TcpStream;\n\nfn main() {\n    let mut core = Core::new().expect(\"Could not create event loop\");\n    let handle = core.handle();\n    let addr: SocketAddr = \"127.0.0.1:9999\".parse().expect(\"Could not parse as SocketAddr\");\n    let socket = TcpStream::connect(&amp;addr, &amp;handle);\n    let request = socket.and_then(|socket| {\n        tokio_io::io::write_all(socket, &amp;[65, 12])\n    });\n    let buf = vec![];\n    let response = request.and_then(|(socket, _request)| {\n        let sock = BufReader::new(socket);\n        tokio_io::io::read_until(sock, b'\\n', buf)\n    });\n    let (_socket, data) = core.run(response).unwrap();\n    println!(\"{}\", String::from_utf8_lossy(&amp;data));\n}\n</code></pre>\n\n<p>I am expecting this to print \"A\\n\", since the ASCII code for A is 65 and newline is 12. My server is netcat using this command</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ncat -l 9999 --keep-open --exec \"/bin/cat\"\n</code></pre>\n\n<p>This seems to hang on running the response future on the core. What am I missing here?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513711398, "post_id": 47893783, "comment_id": 82754210, "body": "You cannot, but you can give a slice to it."}], "answers": [{"comments": [{"owner": {"reputation": 3242, "user_id": 6360938, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/ae1e709f8e8beb1d09db43a881c97610?s=128&d=identicon&r=PG&f=1", "display_name": "typos", "link": "https://stackoverflow.com/users/6360938/typos"}, "edited": false, "score": 0, "creation_date": 1513711540, "post_id": 47893869, "comment_id": 82754281, "body": "Thanks for the explanation. I was interested to learn whether there is a such a shortcut."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 10, "last_activity_date": 1513711801, "last_edit_date": 1513711801, "creation_date": 1513711409, "answer_id": 47893869, "question_id": 47893783, "link": "https://stackoverflow.com/questions/47893783/how-to-give-multiple-function-parameters-the-same-type/47893869#47893869", "title": "How to give multiple function parameters the same type?", "body": "<p>Simply:</p>\n\n<pre><code>fn test(a: u8, b: u8, c: u8) {}\n</code></pre>\n\n<p>There is no short-cut syntax available if you want to name each individually.</p>\n\n<p>If you do not care for individual names:</p>\n\n<pre><code>fn test(a: &amp;[u8; 3]) {}\n</code></pre>\n\n<p>And if the number of items ought to be dynamic:</p>\n\n<pre><code>fn test(a: &amp;[u8]) {}\n</code></pre>\n\n<hr>\n\n<p>I would note that, personally, I generally find the idea of passing multiple parameters of the same type to a function a rather brittle design in the absence of named parameters.</p>\n\n<p>Unless those parameters are interchangeable, in which case swapping them doesn't matter, then I recommend avoiding such function signatures. And by extension, I do not see the need for a special syntax to accommodate the brittleness.</p>\n\n<p>In exchange, Rust features tuple structs: <code>struct X(u8);</code>, allowing one to quickly whip up new types to represent new concepts, rather than fall into Primitive Obsession.</p>\n"}], "owner": {"reputation": 3242, "user_id": 6360938, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/ae1e709f8e8beb1d09db43a881c97610?s=128&d=identicon&r=PG&f=1", "display_name": "typos", "link": "https://stackoverflow.com/users/6360938/typos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2500, "favorite_count": 1, "accepted_answer_id": 47893869, "answer_count": 1, "score": 4, "last_activity_date": 1513711801, "creation_date": 1513711009, "last_edit_date": 1513711756, "question_id": 47893783, "link": "https://stackoverflow.com/questions/47893783/how-to-give-multiple-function-parameters-the-same-type", "title": "How to give multiple function parameters the same type?", "body": "<p>When declaring a function in Go, one can give multiple parameters the same type:</p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>func test(a, b, c uint8) { }\n</code></pre>\n\n<p>Does Rust have a way to give multiple parameters the same type without explicitly specifying each one of them manually? </p>\n\n<p>This doesn't seem to work:</p>\n\n<pre><code>fn test(a, b, c: u8) { }\n</code></pre>\n"}, {"tags": ["c", "compiler-construction", "rust", "llvm", "debug-symbols"], "comments": [{"owner": {"reputation": 208003, "user_id": 841108, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/Fm52y.png?s=128&g=1", "display_name": "Basile Starynkevitch", "link": "https://stackoverflow.com/users/841108/basile-starynkevitch"}, "edited": false, "score": 1, "creation_date": 1530905355, "post_id": 47893551, "comment_id": 89414394, "body": "I would ask that on some <code>llvm</code> mailing list, perhaps <a href=\"http://lists.llvm.org/mailman/listinfo/llvm-dev\" rel=\"nofollow noreferrer\">llvm-dev</a>"}, {"owner": {"reputation": 1340, "user_id": 752911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a17d2678d8ac40cec4ca8dfd968350d3?s=128&d=identicon&r=PG", "display_name": "Jason Enochs", "link": "https://stackoverflow.com/users/752911/jason-enochs"}, "edited": false, "score": 0, "creation_date": 1530908113, "post_id": 47893551, "comment_id": 89415341, "body": "I use vim as my IDE with a plugin called YouCompleteMe.  That plugin provides debug information using LLVM but is not written in Rust.  Maybe looking at that code will help?  The plugin&#39;s author is also very responsive and his code is on github."}, {"owner": {"reputation": 861, "user_id": 4085230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd9e0208894241fb67b47aafc4e316ff?s=128&d=identicon&r=PG&f=1", "display_name": "Mark Rousskov", "link": "https://stackoverflow.com/users/4085230/mark-rousskov"}, "edited": false, "score": 2, "creation_date": 1530975328, "post_id": 47893551, "comment_id": 89428904, "body": "You can also try looking at the Rust compiler&#39;s debuginfo generation; I&#39;m not sure if we use the C bindings or not though: <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc_codegen_llvm/debuginfo/mod.rs\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/blob/master/src/librustc_codegen_l&zwnj;&#8203;lvm/&hellip;</a>."}, {"owner": {"reputation": 199, "user_id": 9608876, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Carson Harmon", "link": "https://stackoverflow.com/users/9608876/carson-harmon"}, "edited": false, "score": 1, "creation_date": 1537903657, "post_id": 47893551, "comment_id": 91951383, "body": "Please share the answer if you manage to find it!"}], "answers": [{"tags": [], "owner": {"reputation": 6964, "user_id": 189270, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/4br0S.jpg?s=128&g=1", "display_name": "Peeter Joot", "link": "https://stackoverflow.com/users/189270/peeter-joot"}, "is_accepted": false, "score": 3, "last_activity_date": 1572185958, "creation_date": 1572185958, "answer_id": 58580206, "question_id": 47893551, "link": "https://stackoverflow.com/questions/47893551/how-to-emit-debug-information-through-llvms-c-bindings/58580206#58580206", "title": "How to emit debug information through LLVMs C bindings?", "body": "<p>See <a href=\"https://llvm.org/doxygen/c_2DebugInfo_8h.html\" rel=\"nofollow noreferrer\">DebugInfo.h</a> for the mappings from the C++ LLVM debug info APIs to the C bindings.  Examples that you'll need are:</p>\n\n<ul>\n<li>new DIBuilder -> LLVMCreateDIBuilder()</li>\n<li>DIBuilder::createFile() -> LLVMDIBuilderCreateFile()</li>\n<li>DIBuilder::createCompileUnit() -> LLVMDIBuilderCreateCompileUnit()</li>\n<li>DIBuilder::createBasicType() -> LLVMDIBuilderCreateBasicType()</li>\n</ul>\n\n<p>(use those functions to setup the dwarf context for your compiler)</p>\n\n<p>The LLVMSetCurrentDebugLocation() function you mentioned is the equivalent of IRBuilder&lt;>::SetCurrentDebugLocation()</p>\n\n<p>For each debug expression, you want a debug location, and DWARF metadata for the expression.  That's done like the following (C++ fragment):</p>\n\n<pre><code>auto loc_glc = DebugLoc::get( line, column, dwFunc );\nm_dwBuilder-&gt;insertDeclare( r, dwVar_gr, m_dwBuilder-&gt;createExpression(), loc_glc, fooBB );\nm_builder.SetCurrentDebugLocation( loc_glc );\n</code></pre>\n\n<p>you'll want to associate the debug location with the DWARF expression, and then \"anchor\" that to your IRBuilder using LLVMSetCurrentDebugLocation().</p>\n"}], "owner": {"reputation": 265, "user_id": 3441086, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a18efadc546701b09779e21154f71f9b?s=128&d=identicon&r=PG&f=1", "display_name": "dotjpg3141", "link": "https://stackoverflow.com/users/3441086/dotjpg3141"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 568, "favorite_count": 3, "answer_count": 1, "score": 16, "last_activity_date": 1572185958, "creation_date": 1513710066, "last_edit_date": 1513952500, "question_id": 47893551, "link": "https://stackoverflow.com/questions/47893551/how-to-emit-debug-information-through-llvms-c-bindings", "title": "How to emit debug information through LLVMs C bindings?", "body": "<p>I'm currently toying around with a simple LLVM frontend written in Rust. I'm now trying to emit debug information. </p>\n\n<p>How can I emit this debug information (source locations and variables) through the C bindings? Is it even possible? Do I need to write a C++ wrapper? </p>\n\n<p>There seems to be a function for inserting source locations (LLVMSetCurrentDebugLocation; <a href=\"https://llvm.org/doxygen/group__LLVMCCoreInstructionBuilder.html#ga89d4d2e2d416f97ea0fc3f7fd7807452\" rel=\"noreferrer\">LLVM</a>; <a href=\"http://rustdoc.taricorp.net/llvm-sys/llvm_sys/core/fn.LLVMSetCurrentDebugLocation.html\" rel=\"noreferrer\">Rust</a>), but I don't know how to construct a proper <code>LLVMValue</code> containing this information. I guess it needs some kind of metadata.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1513705833, "post_id": 47892135, "comment_id": 82751636, "body": "As-is, this definitely breaks Rust&#39;s rule of what references are allowed to exist at the same time. It might help to hear about the overall usecase? Seems like it&#39;d be much easier to pass in a mutable reference to <code>val</code> itself in this case, but the exact solution would probably depend on why you&#39;re trying to use the closures in the first place."}, {"owner": {"reputation": 408, "user_id": 3329449, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/480a1ed283db238a7251cab9911c467d?s=128&d=identicon&r=PG&f=1", "display_name": "Anthony Martin", "link": "https://stackoverflow.com/users/3329449/anthony-martin"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1513706207, "post_id": 47892135, "comment_id": 82751811, "body": "Yes, this is a trimmed down example. The use case is - I&#39;d like to have a module which when running, can read or write from a value whenever it likes. The caller needs to know when the value is read from or written to, and may need to perform custom logic and update its own state when this happens.  I could push all of this logic into the module, but it then becomes less reusable, as I&#39;d need to copy the module every time I need slightly different logic when the value is read/written to."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513708864, "post_id": 47892135, "comment_id": 82753088, "body": "Not necessarily <code>Rc</code>, but <code>Cell</code> or <code>RefCell</code>. The duplicates <a href=\"https://play.rust-lang.org/?gist=120b9e09baa7bef2c6fa874e953be0e2&amp;version=stable\" rel=\"nofollow noreferrer\">applied to your question</a>."}], "owner": {"reputation": 408, "user_id": 3329449, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/480a1ed283db238a7251cab9911c467d?s=128&d=identicon&r=PG&f=1", "display_name": "Anthony Martin", "link": "https://stackoverflow.com/users/3329449/anthony-martin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 75, "favorite_count": 0, "closed_date": 1513708683, "answer_count": 0, "score": 0, "last_activity_date": 1513708899, "creation_date": 1513703958, "last_edit_date": 1513708556, "question_id": 47892135, "link": "https://stackoverflow.com/questions/47892135/mutating-the-same-external-state-with-multiple-closures", "closed_reason": "Duplicate", "title": "Mutating the same external state with multiple closures", "body": "<p>I'm very new to learning Rust. Here's a condensed and silly code sample which I'm trying to compile:</p>\n\n<pre><code>fn do_something(read: &amp;Fn() -&gt; i32, write: &amp;mut FnMut(i32)) {\n    if read() == 10 {\n        write(11);\n    }\n}\n\nfn print_11() {\n    let mut val = 10;\n    do_something(&amp;|| val, &amp;mut |n| val = n);\n    println!(\"Got {}\", val);\n}\n</code></pre>\n\n<p>The <code>write</code> closure borrows <code>val</code> mutably, and the <code>read</code> closure borrows it immutably. The compiler blocks this for this reason:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `val` as mutable because it is also borrowed as immutable\n --&gt; src/main.rs:9:32\n  |\n9 |     do_something(&amp;|| val, &amp;mut |n| val = n);\n  |                   -- ---       ^^^ ---    - immutable borrow ends here\n  |                   |  |         |   |\n  |                   |  |         |   borrow occurs due to use of `val` in closure\n  |                   |  |         mutable borrow occurs here\n  |                   |  previous borrow occurs due to use of `val` in closure\n  |                   immutable borrow occurs here\n\nerror[E0502]: cannot borrow `val` as mutable because it is also borrowed as immutable\n --&gt; src/main.rs:9:32\n  |\n9 |     do_something(&amp;|| val, &amp;mut |n| val = n);\n  |                   -- ---       ^^^ ---    - immutable borrow ends here\n  |                   |  |         |   |\n  |                   |  |         |   borrow occurs due to use of `val` in closure\n  |                   |  |         mutable borrow occurs here\n  |                   |  previous borrow occurs due to use of `val` in closure\n  |                   immutable borrow occurs here\n</code></pre>\n\n<p>Is there an idiomatic way to create two closures which can read/write to the same variable? Is this a case for using something like <code>Rc</code>?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1513702485, "post_id": 47891609, "comment_id": 82749792, "body": "With <code>Some(&amp;c)</code> you drop the reference and make a copy of the char. With <code>Some(c)</code> you keep a reference on it, that prevents another borrowing."}, {"owner": {"reputation": 149272, "user_id": 62082, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/8283f4bb35589863b3b1e0f8ac0968a0?s=128&d=identicon&r=PG", "display_name": "Michelle Tilley", "link": "https://stackoverflow.com/users/62082/michelle-tilley"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513702957, "post_id": 47891609, "comment_id": 82750061, "body": "@Boiethios I think I understand, thanks. What would the idiomatic solution be if <code>c</code> wasn&#39;t marked <code>Copy</code>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1513703287, "post_id": 47891609, "comment_id": 82750282, "body": "There are different solutions, but for example: <code>let has_matched = &#47;*etc.*&#47;</code> and after the <code>match</code> block: <code>if has_matched { self.input.next() }</code>. When you are stuck, intermediate variable is often a good solution."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513703374, "post_id": 47891609, "comment_id": 82750343, "body": "But maybe your design does not fit the Rust paradigm. I cannot confirm that because I am not so much good at Rust, and I have no time currently to investigate this case."}, {"owner": {"reputation": 149272, "user_id": 62082, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/8283f4bb35589863b3b1e0f8ac0968a0?s=128&d=identicon&r=PG", "display_name": "Michelle Tilley", "link": "https://stackoverflow.com/users/62082/michelle-tilley"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513709307, "post_id": 47891609, "comment_id": 82753288, "body": "@Shepmaster Thanks \u2014 <a href=\"https://stackoverflow.com/a/47893160/62082\">your answer</a> on the duplicated question is the explanation I was looking for (the other answers just show alternatives, which I already explored)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513709531, "post_id": 47891609, "comment_id": 82753380, "body": "@MichelleTilley yeah, I originally posted it here, but then I found that older duplicate so I moved my tweaked answer there. That helps explain why it fits so nicely with your specific questions ;-)"}], "owner": {"reputation": 149272, "user_id": 62082, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/8283f4bb35589863b3b1e0f8ac0968a0?s=128&d=identicon&r=PG", "display_name": "Michelle Tilley", "link": "https://stackoverflow.com/users/62082/michelle-tilley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "closed_date": 1513707591, "answer_count": 0, "score": 3, "last_activity_date": 1513707164, "creation_date": 1513702203, "last_edit_date": 1513706748, "question_id": 47891609, "link": "https://stackoverflow.com/questions/47891609/understanding-borrows-in-a-match-with-an-option", "closed_reason": "Duplicate", "title": "Understanding borrows in a match with an Option", "body": "<p>I have a simple parser that can be distilled to something like this:</p>\n\n<pre><code>use std::str::Chars;\nuse std::iter::Peekable;\n\nstruct Parser&lt;'a&gt; {\n    input: Peekable&lt;Chars&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Parser&lt;'a&gt; {\n    fn new(input: &amp;'a str) -&gt; Self {\n        Parser {\n            input: input.chars().peekable(),\n        }\n    }\n\n    fn consume(&amp;mut self, check: char) -&gt; bool {\n        // see below\n    }\n}\n</code></pre>\n\n<p>My original implementation of <code>consume</code>, which should take a look at the next character in the input and return true (and advance the <code>Peekable</code>) if it matches the passed character, was this:</p>\n\n<pre><code>fn consume(&amp;mut self, check: char) -&gt; bool {\n    match self.input.peek() {\n        Some(c) if *c == check =&gt; {\n            self.input.next();\n            true\n        },\n        _ =&gt; false\n    }\n}\n</code></pre>\n\n<p>The compiler informed me that I can't mutably borrow <code>self.input</code> for the call to <code>next</code> because I've already borrowed it in the call to <code>peek</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `self.input` as mutable more than once at a time\n  --&gt; src/main.rs:18:17\n   |\n16 |         match self.input.peek() {\n   |               ---------- first mutable borrow occurs here\n17 |             Some(c) if *c == check =&gt; {\n18 |                 self.input.next();\n   |                 ^^^^^^^^^^ second mutable borrow occurs here\n...\n22 |         }\n   |         - first borrow ends here\n</code></pre>\n\n<p>I don't understand why adding a <code>&amp;</code> to the <code>Some</code> match expression (and dropping the <code>*</code> from <code>*c</code>) makes the code compile:</p>\n\n<pre><code>fn consume(&amp;mut self, check: char) -&gt; bool {\n    match self.input.peek() {\n        Some(&amp;c) if c == check =&gt; {\n            self.input.next();\n            true\n        },\n        _ =&gt; false\n    }\n}\n</code></pre>\n\n<p>Based on Boiethios' comment, what would the proper solution be if <code>c</code> wasn't <code>Copy</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1513741890, "post_id": 47885478, "comment_id": 82763761, "body": "The wacky error order (E0593 after E0619 and E0599) seems like a bug."}], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 13, "last_activity_date": 1513684248, "creation_date": 1513684248, "answer_id": 47886380, "question_id": 47885478, "link": "https://stackoverflow.com/questions/47885478/how-to-use-itertools-group-by-iterator-method-without-a-for-loop/47886380#47886380", "title": "How to use Itertools group_by iterator method without a for loop?", "body": "<p>The closure passed to <code>map</code> has the wrong number of arguments (two instead of one: use a tuple instead); the error message is not very helpful of course :)</p>\n\n<p>Also I wouldn't use <code>bool</code> as a variable name, and you need to clone the integer references before you collect them (due to <code>iter()</code> vs. <code>into_iter()</code>).</p>\n\n<p><a href=\"https://play.integer32.com/?gist=09d53af6fff65075c756905d45400cf0&amp;version=stable\" rel=\"noreferrer\">Playground</a></p>\n\n<pre><code>extern crate itertools;\n\nuse itertools::Itertools;\n\nfn main() {\n    let data = vec![1, 3, -2, -2, 1, 0, 1, 2];\n\n    let groups = data.iter()\n        .group_by(|elt| **elt &gt;= 0)\n        .into_iter()\n        .map(|(ge0, group)| (ge0, group.cloned().collect()))\n        .collect::&lt;Vec&lt;(bool, Vec&lt;i32&gt;)&gt;&gt;();\n    println!(\"{:?}\", groups);\n}\n</code></pre>\n"}], "owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2904, "favorite_count": 1, "accepted_answer_id": 47886380, "answer_count": 1, "score": 8, "last_activity_date": 1513690674, "creation_date": 1513681300, "last_edit_date": 1513690674, "question_id": 47885478, "link": "https://stackoverflow.com/questions/47885478/how-to-use-itertools-group-by-iterator-method-without-a-for-loop", "title": "How to use Itertools group_by iterator method without a for loop?", "body": "<p><a href=\"https://docs.rs/itertools/0.7.4/itertools/trait.Itertools.html#method.group_by\" rel=\"noreferrer\"><code>Itertools::group_by</code></a> is an iterator method that generates a new group every time the key function changes. The provided example shows how to use it with a <code>for</code> loop, but using the output <a href=\"https://docs.rs/itertools/0.7.4/itertools/structs/struct.GroupBy.html\" rel=\"noreferrer\"><code>GroupBy</code></a> struct in an iterator chain seems to be very cumbersome, unless I misunderstood something:</p>\n\n<pre><code>let data = vec![1, 3, -2, -2, 1, 0, 1, 2];\n\n// example from docs\nfor (key, group) in &amp;data.into_iter().group_by(|elt| *elt &gt;= 0) {\n    assert_eq!(4, group.sum::&lt;i32&gt;().abs());\n}\n\n// usage in an iterator method chain\ndata.iter()\n    .group_by(|elt| **elt &gt;= 0)\n    .into_iter()\n    .map(|bool, group| (bool, group.collect::&lt;Vec&lt;i32&gt;&gt;()))\n    .collect::&lt;Vec&lt;(bool, Vec&lt;i32&gt;)&gt;&gt;();\n</code></pre>\n\n<p>The second example fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0619]: the type of this value must be known in this context\n  --&gt; src/main.rs:16:35\n   |\n16 |         .map(|bool, group| (bool, group.collect::&lt;Vec&lt;i32&gt;&gt;()))\n   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `collect` found for type `std::iter::Map&lt;itertools::Groups&lt;'_, bool, std::slice::Iter&lt;'_, i32&gt;, [closure@src/main.rs:14:19: 14:35]&gt;, [closure@src/main.rs:16:14: 16:63]&gt;` in the current scope\n  --&gt; src/main.rs:17:10\n   |\n17 |         .collect::&lt;Vec&lt;(bool, Vec&lt;i32&gt;)&gt;&gt;();\n   |          ^^^^^^^\n   |\n   = note: the method `collect` exists but the following trait bounds were not satisfied:\n           `std::iter::Map&lt;itertools::Groups&lt;'_, bool, std::slice::Iter&lt;'_, i32&gt;, [closure@src/main.rs:14:19: 14:35]&gt;, [closure@src/main.rs:16:14: 16:63]&gt; : std::iter::Iterator`\n           `&amp;mut std::iter::Map&lt;itertools::Groups&lt;'_, bool, std::slice::Iter&lt;'_, i32&gt;, [closure@src/main.rs:14:19: 14:35]&gt;, [closure@src/main.rs:16:14: 16:63]&gt; : std::iter::Iterator`\n\nerror[E0593]: closure takes 2 arguments but 1 argument is required\n  --&gt; src/main.rs:16:10\n   |\n16 |         .map(|bool, group| (bool, group.collect::&lt;Vec&lt;i32&gt;&gt;()))\n   |          ^^^ ------------------------------------------------- takes 2 arguments\n   |          |\n   |          expected closure that takes 1 argument\n</code></pre>\n\n<p>I'm not confident I understand this error, but I think the compiler wants the closure's <code>group</code> argument to have this explicit type:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>itertools::Group&lt;'_, bool, std::slice::Iter&lt;'_, i32&gt;, [closure@src\\main.rs:26:15: 26:31]&gt;\n</code></pre>\n\n<p>No one wants that in their code, so I hope I misunderstood.</p>\n\n<p>The question is, whether it's possible, and how to use <code>group_by</code> without a for loop?</p>\n"}, {"tags": ["pointers", "rust", "borrow-checker", "ownership-semantics"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1513658394, "post_id": 47879856, "comment_id": 82726111, "body": "<i>Why is it complaining of a &quot;move&quot;</i> \u2014 if you don&#39;t know what a &quot;move&quot; means in Rust, you <i>probably shouldn&#39;t be using raw pointers yet</i>. Go back and re-read the entire introductory book <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a>"}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1513960057, "post_id": 47879856, "comment_id": 82858762, "body": "You could use <code>std::ptr::read</code> to copy out the raw string data, but that can easily result in undefined behaviour."}], "answers": [{"comments": [{"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1513664846, "post_id": 47879906, "comment_id": 82728126, "body": "So there is a transfer of ownership  when calling println!() ? I mean why it works for ` let x = String::from (&quot;hello&quot;);  println!(&quot;{}&quot;, x); println!(&quot;{}&quot;, x); ` . I am  bit confused why the second println!() succeeds then? Also could you please elaborate on &quot;It does this because you&#39;re attempting to move ownership out of the unsafe block&quot;.   Please bear with my dumb questions"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 2, "creation_date": 1513687174, "post_id": 47879906, "comment_id": 82740093, "body": "@soupybionics <code>println!</code> doesn&#39;t take ownership <a href=\"https://stackoverflow.com/questions/30450399/does-println-borrow-or-own-the-variable\">(in fact, it auto-references its arguments)</a>, but the value has to be moved from inside the block to outside. <a href=\"https://play.rust-lang.org/?gist=4cf04e1a7aadb054bcc3b6ba64aa03fe&amp;version=stable\" rel=\"nofollow noreferrer\">Here&#39;s an example of the same problem without any <code>unsafe</code>.</a> The <code>{}</code> block forces a move by making the value <code>*s</code> into a temporary, just like the <code>unsafe</code> block did. <code>println!(&quot;{}&quot;, *s);</code> would work. (But so does <code>println!(&quot;{}&quot;, s)</code>.)"}, {"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513707249, "post_id": 47879906, "comment_id": 82752335, "body": "@trentcl, thanks! I am still quite not following it .What is the difference between unsafe {       *s;     }  and      unsafe {       println!(&quot;{}&quot;, *s );     }"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 1, "creation_date": 1513719720, "post_id": 47879906, "comment_id": 82757959, "body": "@soupybionics The difference is that <code>println!</code> auto-references its arguments, so there&#39;s an implicit <code>&amp;</code> in front of the <code>*s</code>. The first Q&amp;A I linked explains this."}, {"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1513827730, "post_id": 47879906, "comment_id": 82803144, "body": "Thanks a lot trentcl! I think I get the gist now. Basically,  the code <code>let a = String::from(&quot;abc&quot;); a; println(&quot;{}&quot;, a);</code>  triggers movement (transfer of ownership), resulting in error at <code>println!</code> as expected. So in the case of <code>unsafe {  *s; }</code>, there is a movement to temporary (transfer of ownership again), just like the &quot;abc&quot; example above. Nothing more. I hope I have understood it correctly :)"}, {"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1513832502, "post_id": 47879906, "comment_id": 82804280, "body": "Small correction. Rather than saying &quot;there is a movement&quot;, I feel  it is apt to say it  rather <b>does not</b> allow the movement, considering the errors  <code>cannot move out of borrowed context</code> or <code>cannot move out of dereference of raw pointer</code>"}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 5, "last_activity_date": 1513688711, "last_edit_date": 1513688711, "creation_date": 1513656622, "answer_id": 47879906, "question_id": 47879856, "link": "https://stackoverflow.com/questions/47879856/what-is-the-difference-between-dereferencing-a-raw-pointer-to-a-string-and-a-raw/47879906#47879906", "title": "What is the difference between dereferencing a raw pointer to a String and a raw pointer to an i32?", "body": "<blockquote>\n  <p>Why does it happen for <code>String</code> and not for <code>i32</code>?</p>\n</blockquote>\n\n<p>The basic integral types (and in fact, many other types) in Rust implement <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\">the <code>Copy</code> trait</a>. They have \"copy semantics\", not \"move semantics\". There is no change of ownership here... you're copying out the value. <code>String</code> <em>does not implement</em> the <code>Copy</code> trait and therefore this binding has \"move semantics\". </p>\n\n<p>This is not unique to raw pointers nor does it have anything to do with their mutability. <a href=\"https://play.rust-lang.org/?gist=ccfe55b400251affc3ed020c3a3796ed&amp;version=stable\" rel=\"nofollow noreferrer\">This example shows</a> this can happen with immutable references:</p>\n\n<pre><code>fn func(s: &amp;String, a: &amp;i32) {\n    let _x = *s;\n    let _x = *a;\n}\n</code></pre>\n\n<blockquote>\n  <p>Why is it complaining of a \"move\"?</p>\n</blockquote>\n\n<p>It does this because you're attempting to move ownership out of the <code>unsafe</code> block. As long as you're care-free about this then you need to contain the \"move\" within the <code>unsafe</code> block so the compiler just lets you shoot yourself in the foot. As such, if you restructure your code so as to <em>not move outside</em> of the <code>unsafe</code> block, the code will compile:</p>\n\n<pre><code>unsafe {\n    println!(\"{}\", *s);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=ad2d2c275746df9eeded9ae3b540f182&amp;version=stable\" rel=\"nofollow noreferrer\">Here it is running in the playground</a>.</p>\n\n<p>To re-iterate Shepmaster's point in the comment on your question though... if the term \"move\" sounds foreign to you then you should not be using raw pointers/<code>unsafe</code> blocks in the first place and should instead head back to the available documentation for Rust to understand the concept.. as it is a core one.</p>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1087, "favorite_count": 0, "accepted_answer_id": 47879906, "answer_count": 1, "score": 1, "last_activity_date": 1513688711, "creation_date": 1513656162, "last_edit_date": 1513658131, "question_id": 47879856, "link": "https://stackoverflow.com/questions/47879856/what-is-the-difference-between-dereferencing-a-raw-pointer-to-a-string-and-a-raw", "title": "What is the difference between dereferencing a raw pointer to a String and a raw pointer to an i32?", "body": "<pre><code>fn func(s: *mut String, a: *mut i32) -&gt; usize {\n    println!(\"{}\", unsafe { *s });\n    println!(\"{}\", unsafe { *a });\n\n    unsafe { (*s).len() }\n}\n\nfn main() {\n    let mut s = String::from(\"hello\");\n    let mut a = 10;\n\n    func(&amp;mut s, &amp;mut a);\n}\n</code></pre>\n\n<p>The above code fails with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of dereference of raw pointer\n --&gt; src/main.rs:2:29\n  |\n2 |     println!(\"{}\", unsafe { *s });\n  |                             ^^ cannot move out of dereference of raw pointer\n</code></pre>\n\n<p>Why does it happen for <code>String</code> and not for <code>i32</code>? Why is it complaining of a \"move\"?</p>\n"}, {"tags": ["pointers", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1513644168, "post_id": 47878236, "comment_id": 82722984, "body": "Uh... that C code is wrong. I guess you&#39;re missing a <code>*</code> in <code>sizeof(Room)</code>? (Which is why you should always write <code>(sizeof *rooms)</code> instead btw)"}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 4, "creation_date": 1513644684, "post_id": 47878236, "comment_id": 82723112, "body": "Asking &quot;how do I get a double C pointer&quot; is not very useful, because that&#39;s a C feature and Rust will have its own way of doing things. It can be done but will result in horrible code. Instead, ask about whatever you actually want to achieve (e.g. &quot;how do I create a dynamic array of objects on the heap&quot;)."}, {"owner": {"reputation": 45, "user_id": 9115664, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77f3af3db859455b511813ec43e7756e?s=128&d=identicon&r=PG&f=1", "display_name": "Jeriel", "link": "https://stackoverflow.com/users/9115664/jeriel"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513690329, "post_id": 47878236, "comment_id": 82742128, "body": "@trentcl thanks, your&#39;re right."}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 9115664, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77f3af3db859455b511813ec43e7756e?s=128&d=identicon&r=PG&f=1", "display_name": "Jeriel", "link": "https://stackoverflow.com/users/9115664/jeriel"}, "edited": false, "score": 0, "creation_date": 1513690508, "post_id": 47879657, "comment_id": 82742227, "body": "Thanks! I&#39;ll try this."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1571862076, "last_edit_date": 1571862076, "creation_date": 1513654388, "answer_id": 47879657, "question_id": 47878236, "link": "https://stackoverflow.com/questions/47878236/how-do-i-make-the-equivalent-of-a-c-double-pointer-in-rust/47879657#47879657", "title": "How do I make the equivalent of a C double pointer in Rust?", "body": "<blockquote>\n  <p>What is the equivalent of this code</p>\n</blockquote>\n\n<p>Assuming you mean \"a collection of <code>Room</code>s with capacity for 8\":</p>\n\n<pre><code>struct Room {\n    x_pos: i32,\n    y_pos: i32,\n}\n\nfn main() {\n    let rooms: Vec&lt;Room&gt; = Vec::with_capacity(8);\n}\n</code></pre>\n\n<p>It's exceedingly rare to call the allocator directly in Rust. Generally, you have a collection that does that for you. You also don't usually explicitly specify the item type of the collection because it can be inferred by what you put in it, but since your code doesn't use <code>rooms</code> at all, we have to inform the compiler. </p>\n\n<p>As pointed out in the comments, you don't need a double pointer. This is the equivalent of a <code>Room *</code>. If you really wanted an additional level of indirection, you could add <code>Box</code>:</p>\n\n<pre><code>let rooms: Vec&lt;Box&lt;Room&gt;&gt; = Vec::with_capacity(8);\n</code></pre>\n\n<blockquote>\n  <p>How do I make the equivalent of a C double pointer</p>\n</blockquote>\n\n<p>One of the benefits of Rust vs C is that in C, you don't know the semantics of a <code>foo_t **</code>. Who should free each of the pointers? Which pointers are mutable? You <em>can</em> create raw pointers in Rust, but even that requires specifying mutability. <strong>This is almost never what you want</strong>:</p>\n\n<pre><code>let rooms: *mut *mut Room;\n</code></pre>\n\n<p>In certain FFI cases, a C function accepts a <code>foo_t **</code> because it wants to modify a passed-in pointer. In those cases, something like this is reasonable:</p>\n\n<pre><code>unsafe {\n    let mut room: *mut Room = std::ptr::null_mut();\n    let room_ptr: *mut *mut Room = &amp;mut room;\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 9115664, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77f3af3db859455b511813ec43e7756e?s=128&d=identicon&r=PG&f=1", "display_name": "Jeriel", "link": "https://stackoverflow.com/users/9115664/jeriel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2072, "favorite_count": 0, "accepted_answer_id": 47879657, "answer_count": 1, "score": 0, "last_activity_date": 1571862076, "creation_date": 1513641941, "last_edit_date": 1513652789, "question_id": 47878236, "link": "https://stackoverflow.com/questions/47878236/how-do-i-make-the-equivalent-of-a-c-double-pointer-in-rust", "title": "How do I make the equivalent of a C double pointer in Rust?", "body": "<p>I started porting C code to Rust, but I'm confused about how things work in Rust. What is the equivalent of this code:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct Room {\n    int xPos;\n    int yPos;\n} Room;\n\nvoid main (){\n  Room **rooms;\n  rooms = malloc(sizeof(Room)*8);\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1513640029, "post_id": 47877894, "comment_id": 82721878, "body": "<a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\">Learning Rust With Entirely Too Many Linked Lists</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513652588, "post_id": 47877894, "comment_id": 82724886, "body": "<a href=\"https://play.rust-lang.org/?gist=b54cd523029d907de87f40ae008513ef&amp;version=stable\" rel=\"nofollow noreferrer\">The duplicate applied to your problem</a>"}], "owner": {"reputation": 4620, "user_id": 139993, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/8671bf5ef615345a04355532d98c1c42?s=128&d=identicon&r=PG", "display_name": "BrainCore", "link": "https://stackoverflow.com/users/139993/braincore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 144, "favorite_count": 0, "closed_date": 1513652602, "answer_count": 0, "score": 0, "last_activity_date": 1513652685, "creation_date": 1513639390, "last_edit_date": 1513640126, "question_id": 47877894, "link": "https://stackoverflow.com/questions/47877894/finding-the-end-of-a-linkedlist-and-mutating-it", "closed_reason": "Duplicate", "title": "Finding the end of a linkedlist and mutating it", "body": "<p>It's a habit of mine to implement a linked list in every new language I learn, so this is only an educational exercise. This list only keeps track of the head. While it's easy to push to the front of the list, I'm having difficulty implementing a <code>push_back()</code>. Here's a snippet of the code:</p>\n\n<pre><code>struct List&lt;T&gt; {\n    head: Link&lt;T&gt;,\n}\n\ntype Link&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\n#[derive(Debug)]\nstruct Node&lt;T&gt; {\n    data: T,\n    next: Link&lt;T&gt;,\n}\n\nimpl&lt;T&gt; List&lt;T&gt; {\n    fn new() -&gt; Self {\n        List { head: None }\n    }\n\n    fn push_front(&amp;mut self, data: T) {\n        match self.head.take() {\n            Option::None =&gt; {\n                self.head = Some(Box::new(Node {\n                    data: data,\n                    next: None,\n                }));\n            }\n            Option::Some(boxed_node) =&gt; {\n                self.head = Some(Box::new(Node {\n                    data: data,\n                    next: Some(boxed_node),\n                }));\n            }\n        };\n    }\n\n    fn push_back(&amp;mut self, data: T) {\n        let mut cur_link = &amp;mut self.head;\n        while let Some(ref mut boxed_node) = *cur_link {\n            if boxed_node.next.is_none() {\n                boxed_node.next = Some(Box::new(Node {\n                    data: data,\n                    next: None,\n                }));\n                break;\n            }\n            cur_link = &amp;mut boxed_node.next;\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=df62bdb75a82b6162abd9cb0aedcec8e&amp;version=stable\" rel=\"nofollow noreferrer\">On the Rust Playground</a></p>\n\n<p>Compilation returns the following errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `cur_link.0` as mutable more than once at a time\n  --&gt; src/main.rs:37:24\n   |\n37 |         while let Some(ref mut boxed_node) = *cur_link {\n   |                        ^^^^^^^^^^^^^^^^^^ mutable borrow starts here in previous iteration of loop\n...\n47 |     }\n   |     - mutable borrow ends here\n\nerror[E0506]: cannot assign to `cur_link` because it is borrowed\n  --&gt; src/main.rs:45:13\n   |\n37 |         while let Some(ref mut boxed_node) = *cur_link {\n   |                        ------------------ borrow of `cur_link` occurs here\n...\n45 |             cur_link = &amp;mut boxed_node.next;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `cur_link` occurs here\n</code></pre>\n\n<p>I'm finding the borrow checker unsympathetic with my need to borrow a node with each iteration, but only mutate it on the successive iteration.</p>\n"}, {"tags": ["memory", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513632494, "post_id": 47876592, "comment_id": 82718910, "body": "<i>I&#39;m guessing that ...</i> \u2014 Why not just use <a href=\"https://doc.rust-lang.org/std/mem/fn.size_of.html\" rel=\"nofollow noreferrer\"><code>mem::size_of</code></a> to find out what the size is?"}, {"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513632509, "post_id": 47876592, "comment_id": 82718913, "body": "Thanks! Given that I&#39;m very new to the language, I&#39;d still appreciate confirmation that joins the dots."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1513689756, "creation_date": 1513689756, "answer_id": 47888007, "question_id": 47876592, "link": "https://stackoverflow.com/questions/47876592/what-is-the-most-memory-efficient-array-of-nullable-vectors-when-most-of-the-sec/47888007#47888007", "title": "What is the most memory-efficient array of nullable vectors when most of the second dimension will be empty?", "body": "<p>Actually, both <code>Vec&lt;Vec&lt;T&gt;&gt;</code> and <code>Vec&lt;Option&lt;Vec&lt;T&gt;&gt;&gt;</code> have the same space efficiency.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#guarantees\" rel=\"nofollow noreferrer\">A <code>Vec</code> contains a pointer that will never be null</a>, so the compiler is smart enough to recognize that in the case of <code>Option&lt;Vec&lt;T&gt;&gt;</code>, it can represent <code>None</code> by putting 0 in the pointer field. <a href=\"https://stackoverflow.com/questions/16504643/what-is-the-overhead-of-rusts-option-type\">What is the overhead of Rust's Option type?</a> contains more information.</p>\n\n<p>What about the backing storage the pointer points to? <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#guarantees\" rel=\"nofollow noreferrer\">A <code>Vec</code> doesn't allocate</a> (same link as the first) when you create it with <code>Vec::new</code> or <code>Vec::with_capacity(0)</code>; in that case, it uses a special, non-null \"empty pointer\". <code>Vec</code> only allocates space on the heap when you <code>push</code> something or otherwise force it to allocate. Therefore, the space used both for the <code>Vec</code> itself and for its backing storage are the same.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513962670, "post_id": 47944454, "comment_id": 82859817, "body": "Good ideas for taking advantage of the sparseness! I especially like the third option. I suspect <code>BTreeMap</code> may be a better choice than <code>HashMap</code> for the second one, especially if in-order traversal is ever required."}], "tags": [], "owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "is_accepted": false, "score": 1, "last_activity_date": 1513959840, "last_edit_date": 1513959840, "creation_date": 1513959483, "answer_id": 47944454, "question_id": 47876592, "link": "https://stackoverflow.com/questions/47876592/what-is-the-most-memory-efficient-array-of-nullable-vectors-when-most-of-the-sec/47944454#47944454", "title": "What is the most memory-efficient array of nullable vectors when most of the second dimension will be empty?", "body": "<p><code>Vec&lt;Vec&lt;T&gt;&gt;</code> is a decent starting point. Each entry costs 3 pointers, even if it is empty, and for filled entries there can be additional per-allocation overhead. But depending on which trade-offs you're willing to make, there might be a better solution.</p>\n\n<ul>\n<li><code>Vec&lt;Box&lt;[T]&gt;&gt;</code> This reduces the size of an entry from 3 pointers to 2 pointers. The downside is that changing the number of elements in a box is both inconvenient (convert to and from <code>Vec&lt;T&gt;</code>) and more expensive (reallocation).</li>\n<li><code>HashMap&lt;usize, Vec&lt;T&gt;&gt;</code> This saves a lot of memory if the outer collection is sufficiently sparse. The downsides are higher access cost (hashing, scanning) and a higher per element memory overhead.</li>\n<li><p>If the collection is only filled once and you never resize the inner collections you could use a split data structure:</p>\n\n<p>This not only reduces the per-entry size to 1 pointer, it also eliminates the per-allocation overhead.</p>\n\n<pre><code>struct Nested&lt;T&gt; {\n   data: Vec&lt;T&gt;,\n   indices: Vec&lt;usize&gt;,// points after the last element of the i-th slice\n}\n\nimpl&lt;T&gt; Nested&lt;T&gt; {\n    fn get_range(&amp;self, i: usize) -&gt; std::ops::Range&lt;usize&gt; {\n       assert!(i &lt; self.indices.len());\n       if i &gt; 0 {\n           self.indices[i-1]..self.indices[i]\n        } else {\n           0..self.indices[i]\n        }\n    }\n\n    pub fn get(&amp;self, i:usize) -&gt; &amp;[T] {\n        let range = self.get_range(i);\n        &amp;self.data[range]\n    }\n\n    pub fn get_mut(&amp;mut self, i:usize) -&gt; &amp;mut [T] {\n        let range = self.get_range(i);\n        &amp;mut self.data[range]\n    }\n}\n</code></pre>\n\n<p>For additional memory savings you can reduce the indices to <code>u32</code> limiting you to 4 billion elements per collection.</p></li>\n</ul>\n"}], "owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 404, "favorite_count": 0, "accepted_answer_id": 47888007, "answer_count": 2, "score": 2, "last_activity_date": 1513959840, "creation_date": 1513632132, "last_edit_date": 1513632357, "question_id": 47876592, "link": "https://stackoverflow.com/questions/47876592/what-is-the-most-memory-efficient-array-of-nullable-vectors-when-most-of-the-sec", "title": "What is the most memory-efficient array of nullable vectors when most of the second dimension will be empty?", "body": "<p>I have a large fixed-size array of variable-sized arrays of <code>u32</code>. Most of the second dimension arrays will be empty (i.e. the first array will be sparsely populated). I think <code>Vec</code> is the most suitable type for both dimensions (<code>Vec&lt;Vec&lt;u32&gt;&gt;</code>). Because my first array might be quite large, I want to find the most space-efficient way to represent this.</p>\n\n<p>I see two options:</p>\n\n<ol>\n<li><p>I could use a <code>Vec&lt;Option&lt;Vec&lt;u32&gt;&gt;&gt;</code>. I'm guessing that as <code>Option</code> is a tagged union, this would result each cell being <code>sizeof(Vec&lt;u32&gt;)</code> rounded up to the next word boundary for the tag.</p></li>\n<li><p>I could directly use <code>Vec::with_capacity(0)</code> for all cells. Does an empty <code>Vec</code> allocate zero heap until it's used? </p></li>\n</ol>\n\n<p>Which is the most space-efficient method?</p>\n"}, {"tags": ["struct", "process", "rust", "ipc"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1513632177, "post_id": 47876488, "comment_id": 82718767, "body": "<a href=\"https://stackoverflow.com/q/27683266/1233251\">Relevant question</a>. There is no direct means of IPC in the standard library, but multiple crates are available for this."}, {"owner": {"reputation": 264, "user_id": 1473169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d364e18a224d81ee0bfbd7461f47180?s=128&d=identicon&r=PG", "display_name": "yawn", "link": "https://stackoverflow.com/users/1473169/yawn"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1513635490, "post_id": 47876488, "comment_id": 82720275, "body": "Thanks. I&#39;m a bit overwhelmed by options. What crates do you use personally?"}], "answers": [{"comments": [{"owner": {"reputation": 264, "user_id": 1473169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d364e18a224d81ee0bfbd7461f47180?s=128&d=identicon&r=PG", "display_name": "yawn", "link": "https://stackoverflow.com/users/1473169/yawn"}, "edited": false, "score": 0, "creation_date": 1513635608, "post_id": 47877040, "comment_id": 82720315, "body": "Thank you. I&#39;m reading into different options right now. I&#39;m mostly looking for something that&#39;s really easy rather than something efficient. Ideally it would &quot;just work&quot; like channels."}, {"owner": {"reputation": 1127, "user_id": 6171872, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2wfQM.jpg?s=128&g=1", "display_name": "StarSheriff", "link": "https://stackoverflow.com/users/6171872/starsheriff"}, "reply_to_user": {"reputation": 264, "user_id": 1473169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d364e18a224d81ee0bfbd7461f47180?s=128&d=identicon&r=PG", "display_name": "yawn", "link": "https://stackoverflow.com/users/1473169/yawn"}, "edited": false, "score": 1, "creation_date": 1513667353, "post_id": 47877040, "comment_id": 82729101, "body": "I am afraid that there is no real &quot;easy&quot; way of doing IPC, you will have some or another overhead. I would say TCP/Unix sockets are among the easier ways. Anyway, you have to serialize your data somehow. To get rid of the json complexity you could serialize to plain <code>[u8]</code>, that is raw bytes. Take a look at <a href=\"https://stackoverflow.com/questions/28127165/how-to-convert-struct-to-u8\">this SO question</a>"}], "tags": [], "owner": {"reputation": 1127, "user_id": 6171872, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2wfQM.jpg?s=128&g=1", "display_name": "StarSheriff", "link": "https://stackoverflow.com/users/6171872/starsheriff"}, "is_accepted": true, "score": 1, "last_activity_date": 1513634390, "creation_date": 1513634390, "answer_id": 47877040, "question_id": 47876488, "link": "https://stackoverflow.com/questions/47876488/what-is-the-simplest-way-of-sending-a-struct-from-one-process-to-another/47877040#47877040", "title": "What is the simplest way of sending a struct from one process to another?", "body": "<p>In terms of what to google for the keyword you are looking for is <strong>inter-process communication (IPC)</strong>. There are several ways of doing that and as already mentioned in a comment, Rust doesn't offer much in the standard library.</p>\n\n<p>The thing is that there are many ways to do inter-process communication, each with its own benefits and draw-backs. Maybe start reading <a href=\"https://en.wikipedia.org/wiki/Inter-process_communication\" rel=\"nofollow noreferrer\">here</a>, it will give you some hints on what to google for.</p>\n\n<p>Specifically for your question, if you are concerned about performance when serializing your structs to json you can stick to binary formats as well. <code>Bson</code> might be an option you can have a look at.</p>\n"}], "owner": {"reputation": 264, "user_id": 1473169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d364e18a224d81ee0bfbd7461f47180?s=128&d=identicon&r=PG", "display_name": "yawn", "link": "https://stackoverflow.com/users/1473169/yawn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 388, "favorite_count": 0, "closed_date": 1513661062, "accepted_answer_id": 47877040, "answer_count": 1, "score": 0, "last_activity_date": 1513634390, "creation_date": 1513631559, "last_edit_date": 1513632151, "question_id": 47876488, "link": "https://stackoverflow.com/questions/47876488/what-is-the-simplest-way-of-sending-a-struct-from-one-process-to-another", "closed_reason": "Needs details or clarity", "title": "What is the simplest way of sending a struct from one process to another?", "body": "<p>I have two Rust threads; to send a struct from one thread to another I would use a channel. Now I want to split these threads into two OS processes. </p>\n\n<p>Is there a simpler way than using a TCP socket and serializing to JSON back and forth?</p>\n\n<p>I'm fairly new to all of this so I don't even know what terms to Google.</p>\n"}, {"tags": ["pointers", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1513623088, "post_id": 47874621, "comment_id": 82714690, "body": "What&#39;s wrong with <code>unsafe {}</code>? Maybe you put it in the wrong place? <a href=\"https://play.rust-lang.org/?gist=388da28b6bfac187a3c0ec12e1798246&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1513625302, "creation_date": 1513625302, "answer_id": 47875155, "question_id": 47874621, "link": "https://stackoverflow.com/questions/47874621/whats-the-difference-between-assigning-to-a-mut-t-and-a-mut-t/47875155#47875155", "title": "What&#39;s the difference between assigning to a *mut T and a &amp;mut T?", "body": "<blockquote>\n  <p>What is the difference between the two?</p>\n</blockquote>\n\n<p>One is a <em>raw pointer</em> (<code>*mut _</code>) and the other is a <em>reference</em> (<code>&amp;mut _</code>). As the book says:</p>\n\n<blockquote>\n  <p>the compiler guarantees that references will never be dangling</p>\n</blockquote>\n\n<p>Additionally, a reference will never be <code>NULL</code>. It is always safe to dereference a reference. It is not always safe to dereference a raw pointer as the compiler cannot guarantee either of those. Thus, you need an <code>unsafe</code> block:</p>\n\n<pre><code>unsafe { *b = 11; }\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31949579/155423\">Understanding Pointer Types in Rust</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html\" rel=\"noreferrer\">References and Borrowing</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/second-edition/ch19-01-unsafe-rust.html\" rel=\"noreferrer\">Unsafe Rust</a></li>\n</ul>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 47875155, "answer_count": 1, "score": 0, "last_activity_date": 1513625428, "creation_date": 1513622850, "last_edit_date": 1513625428, "question_id": 47874621, "link": "https://stackoverflow.com/questions/47874621/whats-the-difference-between-assigning-to-a-mut-t-and-a-mut-t", "title": "What&#39;s the difference between assigning to a *mut T and a &amp;mut T?", "body": "<p>This code:</p>\n\n<pre><code>let mut a2 = 99;\nlet b: *mut i32 = &amp;mut a2;\n*b = 11; // does not compile , even after unsafe {*b}\n</code></pre>\n\n<p>Generates the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0133]: dereference of raw pointer requires unsafe function or block\n --&gt; src/main.rs:4:5\n  |\n4 |     *b = 11;\n  |     ^^^^^^^ dereference of raw pointer\n</code></pre>\n\n<p>But this code works:</p>\n\n<pre><code>let mut a2 = 99\nlet b = &amp;mut a2;\n*b = 11;\n</code></pre>\n\n<p>What is the difference between the two?</p>\n"}, {"tags": ["generics", "types", "rust", "traits", "rust-diesel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513622558, "post_id": 47874398, "comment_id": 82714456, "body": "To get any kind of useful answer, you are going to need to include enough of your schema module for us to know what <code>bitcoin</code> and <code>ethereum</code> and the corresponding types have."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513622611, "post_id": 47874398, "comment_id": 82714478, "body": "I can say that you cannot currently abstract on struct fields (like <code>.time</code>); that will need to be moved to a method on a trait."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513622672, "post_id": 47874398, "comment_id": 82714509, "body": "FYI \u2014 <a href=\"https://stackoverflow.com/q/46297867/155423\">How do I get an Option&lt;T&gt; instead of an Option&lt;Vec&lt;T&gt;&gt; from a Diesel query which only returns 1 or 0 records?</a>"}, {"owner": {"reputation": 1414, "user_id": 3262787, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/09530ed6bcc0b7e3331a20d3bb5c0ddc?s=128&d=identicon&r=PG&f=1", "display_name": "DaveTheAl", "link": "https://stackoverflow.com/users/3262787/davetheal"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513623005, "post_id": 47874398, "comment_id": 82714655, "body": "Thx @Shepmaster, added some more info :) But I don&#39;t really understand how what you mean by moving .time into the method of a traid? In the end, the method will still have to have a return type, and this return type differs from table to table, or am I missing something?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1513695018, "last_edit_date": 1513695018, "creation_date": 1513658054, "answer_id": 47880065, "question_id": 47874398, "link": "https://stackoverflow.com/questions/47874398/how-do-i-combine-multiple-functions-using-diesel-into-one-through-abstraction/47880065#47880065", "title": "How do I combine multiple functions using Diesel into one through abstraction?", "body": "<p>First, let's start with a <a href=\"/help/mcve\">MCVE</a>. This is a tool that professional programmers use when trying to understand a problem. It removes extraneous detail but provides enough detail for <em>anyone</em> to be able to pick it up and reproduce the situation. Compare how much code is present here that <strong>you didn't provide</strong>. Each missing piece is something that an answerer has to guess on as well as your time and their time generating.</p>\n\n<pre><code>[dependencies]\ndiesel = { version = \"1.0.0-beta\", features = [\"sqlite\"] }\n</code></pre>\n\n\n\n<pre><code>#[macro_use]\nextern crate diesel;\n\nuse diesel::prelude::*;\nuse diesel::SqliteConnection;\n\nmod types {\n    table! {\n        bitcoin (time) {\n            time -&gt; Int4,\n        }\n    }\n\n    table! {\n        ethereum (time) {\n            time -&gt; Int4,\n        }\n    }\n\n    #[derive(Insertable, Queryable, Debug)]\n    #[table_name=\"bitcoin\"]\n    pub struct BtcRecord {\n        pub time: i32,\n    }\n\n    #[derive(Insertable, Queryable, Debug)]\n    #[table_name=\"ethereum\"]\n    pub struct EthRecord {\n        pub time: i32,\n    }\n}\n\npub fn get_most_recent_eth_entry(conn: &amp;SqliteConnection) -&gt; Result&lt;i32, String&gt; {\n    let res = types::ethereum::table\n        .order(types::ethereum::time.desc())\n        .limit(1)\n        .load::&lt;types::EthRecord&gt;(&amp;*conn);\n    match res {\n        Ok(x) =&gt; {\n            if x.len() &gt; 0 {\n                Ok(x.get(0).unwrap().time)\n            } else {\n                Ok(0)\n            }\n        }\n        Err(err) =&gt; Err(format!(\"Error here! {:?}\", err)),\n    }\n}\n\npub fn get_most_recent_btc_entry(conn: &amp;SqliteConnection) -&gt; Result&lt;i32, String&gt; {\n    let res = types::bitcoin::table\n        .order(types::bitcoin::time.desc())\n        .limit(1)\n        .load::&lt;types::BtcRecord&gt;(&amp;*conn);\n    match res {\n        Ok(x) =&gt; {\n            if x.len() &gt; 0 {\n                Ok(x.get(0).unwrap().time)\n            } else {\n                Ok(0)\n            }\n        }\n        Err(err) =&gt; Err(format!(\"Error here! {:?}\", err)),\n    }\n}\n</code></pre>\n\n<p>Next, perform a diff between the two pieces of code to identify the differences. You stated:</p>\n\n<blockquote>\n  <p>which differ in only the fields <code>types::ethereum</code> and <code>ETHRecord</code></p>\n</blockquote>\n\n<p>However, they differ in four locations. Just because something has the same prefix doesn't mean you can pass that prefix around. Modules aren't concepts that exist at runtime in Rust:</p>\n\n<pre><code>pub fn get_most_recent_eth_entry(conn: &amp;SqliteConnection) -&gt; Result&lt;i32, String&gt; {\n    // ^^^^^^^^^^^^^^^^^^^^^^^^^\n    let res = types::ethereum::table\n    //               ^^^^^^^^ \n        .order(types::ethereum::time.desc())\n    //                ^^^^^^^^ \n        .limit(1)\n        .load::&lt;types::EthRecord&gt;(&amp;*conn);\n    //                 ^^^^^^^^^\n</code></pre>\n\n<p>Let's copy and paste one of the functions and replace all the unique values with dummies:</p>\n\n<pre><code>pub fn get_most_recent_entry&lt;'a, Tbl, Expr, Record&gt;(\n    conn: &amp;SqliteConnection,\n    table: Tbl,\n    time: Expr,\n) -&gt; Result&lt;i32, String&gt; {\n    let res = table\n        .order(time.desc())\n        .limit(1)\n        .load::&lt;Record&gt;(&amp;*conn);\n    // ...\n</code></pre>\n\n<p>This next part isn't pretty. Basically, the compiler will tell you every trait bound that isn't met, one-by-one. You \"just\" copy each error back to the code to set up all the constraints:</p>\n\n<pre><code>pub fn get_most_recent_entry&lt;'a, Tbl, Expr, Record&gt;(\n    conn: &amp;SqliteConnection,\n    table: Tbl,\n    time: Expr,\n) -&gt; Result&lt;i32, String&gt;\nwhere\n    Expr: diesel::ExpressionMethods,\n    Tbl: OrderDsl&lt;Desc&lt;Expr&gt;&gt;,\n    &lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output: LimitDsl,\n    &lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output: RunQueryDsl&lt;SqliteConnection&gt; + Query,\n    Sqlite: HasSqlType&lt;&lt;&lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output as Query&gt;::SqlType&gt;,\n    &lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output: QueryFragment&lt;Sqlite&gt;,\n    &lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output: QueryId,\n    Record: Queryable&lt;&lt;&lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output as Query&gt;::SqlType, Sqlite&gt;,\n</code></pre>\n\n<p>This leads to the new error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0609]: no field `time` on type `&amp;Record`\n  --&gt; src/main.rs:64:38\n   |\n64 |                 Ok(x.get(0).unwrap().time)\n   |                                      ^^^^\n</code></pre>\n\n<p>You cannot assume any fields on a generic type, we need a trait:</p>\n\n<pre><code>pub trait Time {\n    fn time(&amp;self) -&gt; i32;\n}\n</code></pre>\n\n<p>You:</p>\n\n<ul>\n<li>implement the trait for both concrete types</li>\n<li>add this trait bound to <code>Record</code></li>\n<li>call <code>.time()</code> in the method </li>\n</ul>\n\n<p>All together:</p>\n\n<pre><code>#[macro_use]\nextern crate diesel;\n\nuse diesel::prelude::*;\nuse diesel::SqliteConnection;\n\nmod types {\n    table! {\n        bitcoin (time) {\n            time -&gt; Int4,\n        }\n    }\n\n    table! {\n        ethereum (time) {\n            time -&gt; Int4,\n        }\n    }\n\n    #[derive(Insertable, Queryable, Debug)]\n    #[table_name = \"bitcoin\"]\n    pub struct BtcRecord {\n        pub time: i32,\n    }\n\n    #[derive(Insertable, Queryable, Debug)]\n    #[table_name = \"ethereum\"]\n    pub struct EthRecord {\n        pub time: i32,\n    }\n}\n\npub trait Time {\n    fn time(&amp;self) -&gt; i32;\n}\n\nimpl Time for types::EthRecord {\n    fn time(&amp;self) -&gt; i32 {\n        self.time\n    }\n}\n\nimpl Time for types::BtcRecord {\n    fn time(&amp;self) -&gt; i32 {\n        self.time\n    }\n}\n\nuse diesel::sqlite::Sqlite;\nuse diesel::types::HasSqlType;\nuse diesel::query_dsl::methods::{LimitDsl, OrderDsl};\nuse diesel::expression::operators::Desc;\nuse diesel::query_builder::{Query, QueryFragment, QueryId};\nuse diesel::Queryable;\n\npub fn get_most_recent_entry&lt;'a, Tbl, Expr, Record&gt;(\n    conn: &amp;SqliteConnection,\n    table: Tbl,\n    time: Expr,\n) -&gt; Result&lt;i32, String&gt;\nwhere\n    Expr: diesel::ExpressionMethods,\n    Tbl: OrderDsl&lt;Desc&lt;Expr&gt;&gt;,\n    &lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output: LimitDsl,\n    &lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output: RunQueryDsl&lt;SqliteConnection&gt; + Query,\n    Sqlite: HasSqlType&lt;&lt;&lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output as Query&gt;::SqlType&gt;,\n    &lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output: QueryFragment&lt;Sqlite&gt;,\n    &lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output: QueryId,\n    Record: Queryable&lt;&lt;&lt;&lt;Tbl as OrderDsl&lt;Desc&lt;Expr&gt;&gt;&gt;::Output as LimitDsl&gt;::Output as Query&gt;::SqlType, Sqlite&gt; + Time,\n{\n    let res = table.order(time.desc()).limit(1).load::&lt;Record&gt;(&amp;*conn);\n    match res {\n        Ok(x) =&gt; {\n            if x.len() &gt; 0 {\n                Ok(x.get(0).unwrap().time())\n            } else {\n                Ok(0)\n            }\n        }\n        Err(err) =&gt; Err(format!(\"Error here! {:?}\", err)),\n    }\n}\n\npub fn get_most_recent_eth_entry(conn: &amp;SqliteConnection) -&gt; Result&lt;i32, String&gt; {\n    get_most_recent_entry::&lt;_, _, types::EthRecord&gt;(\n        conn,\n        types::ethereum::table,\n        types::ethereum::time,\n    )\n}\n\npub fn get_most_recent_btc_entry(conn: &amp;SqliteConnection) -&gt; Result&lt;i32, String&gt; {\n    get_most_recent_entry::&lt;_, _, types::BtcRecord&gt;(\n        conn,\n        types::bitcoin::table,\n        types::bitcoin::time,\n    )\n}\n</code></pre>\n\n<hr>\n\n<p>The next steps require a deeper dive into Diesel. The <a href=\"http://docs.diesel.rs/diesel/helper_types/index.html\" rel=\"noreferrer\"><code>helper_types</code> module</a> contains type aliases that allow us to shorten the bounds:</p>\n\n<pre><code>pub fn get_most_recent_entry&lt;'a, Tbl, Expr, Record&gt;(\n    conn: &amp;SqliteConnection,\n    table: Tbl,\n    time: Expr,\n) -&gt; Result&lt;i32, String&gt;\nwhere\n    Expr: diesel::ExpressionMethods,\n    Tbl: OrderDsl&lt;Desc&lt;Expr&gt;&gt;,\n    Order&lt;Tbl, Desc&lt;Expr&gt;&gt;: LimitDsl,\n    Limit&lt;Order&lt;Tbl, Desc&lt;Expr&gt;&gt;&gt;: RunQueryDsl&lt;SqliteConnection&gt;\n        + Query\n        + QueryFragment&lt;Sqlite&gt;\n        + QueryId,\n    Sqlite: HasSqlType&lt;&lt;Limit&lt;Order&lt;Tbl, Desc&lt;Expr&gt;&gt;&gt; as Query&gt;::SqlType&gt;,\n    Record: Queryable&lt;&lt;Limit&lt;Order&lt;Tbl, Desc&lt;Expr&gt;&gt;&gt; as Query&gt;::SqlType, Sqlite&gt; + Time,\n</code></pre>\n\n<p>There's also a trait that wraps up all the <code>Query*</code>-related subtraits: <a href=\"http://docs.diesel.rs/diesel/query_dsl/method/trait.LoadQuery.html\" rel=\"noreferrer\"><code>LoadQuery</code></a>. Using that, we can reduce it down to:</p>\n\n<pre><code>pub fn get_most_recent_entry&lt;'a, Tbl, Expr, Record&gt;(\n    conn: &amp;SqliteConnection,\n    table: Tbl,\n    time: Expr,\n) -&gt; Result&lt;i32, String&gt;\nwhere\n    Expr: diesel::ExpressionMethods,\n    Tbl: OrderDsl&lt;Desc&lt;Expr&gt;&gt;,\n    Order&lt;Tbl, Desc&lt;Expr&gt;&gt;: LimitDsl,\n    Limit&lt;Order&lt;Tbl, Desc&lt;Expr&gt;&gt;&gt;: LoadQuery&lt;SqliteConnection, Record&gt;,\n    Record: Time,\n</code></pre>\n\n<hr>\n\n<p>You can then make use of Diesel's <code>first</code> function and <code>Result</code>s combinators to shorten the entire function:</p>\n\n<pre><code>use diesel::expression::operators::Desc;\nuse diesel::helper_types::{Limit, Order};\nuse diesel::query_dsl::methods::{LimitDsl, OrderDsl};\nuse diesel::query_dsl::LoadQuery;\n\npub fn get_most_recent_entry&lt;'a, Tbl, Expr, Record&gt;(\n    conn: &amp;SqliteConnection,\n    table: Tbl,\n    time: Expr,\n) -&gt; Result&lt;i32, String&gt;\nwhere\n    Expr: diesel::ExpressionMethods,\n    Tbl: OrderDsl&lt;Desc&lt;Expr&gt;&gt;,\n    Order&lt;Tbl, Desc&lt;Expr&gt;&gt;: LoadQuery&lt;SqliteConnection, Record&gt; + LimitDsl,\n    Limit&lt;Order&lt;Tbl, Desc&lt;Expr&gt;&gt;&gt;: LoadQuery&lt;SqliteConnection, Record&gt;,\n    Record: Time,\n{\n    table\n        .order(time.desc())\n        .first(conn)\n        .optional()\n        .map(|x| x.map_or(0, |x| x.time()))\n        .map_err(|e| format!(\"Error here! {:?}\", e))\n}\n</code></pre>\n"}], "owner": {"reputation": 1414, "user_id": 3262787, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/09530ed6bcc0b7e3331a20d3bb5c0ddc?s=128&d=identicon&r=PG&f=1", "display_name": "DaveTheAl", "link": "https://stackoverflow.com/users/3262787/davetheal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 565, "favorite_count": 0, "accepted_answer_id": 47880065, "answer_count": 1, "score": 1, "last_activity_date": 1513695018, "creation_date": 1513621843, "last_edit_date": 1513622703, "question_id": 47874398, "link": "https://stackoverflow.com/questions/47874398/how-do-i-combine-multiple-functions-using-diesel-into-one-through-abstraction", "title": "How do I combine multiple functions using Diesel into one through abstraction?", "body": "<p>I have the following two functions:</p>\n\n<pre><code>pub fn get_most_recent_eth_entry(conn: &amp;SqliteConnection) -&gt; Result&lt;i32, Error&gt; {\n    let res = types::ethereum::table\n        .order(types::ethereum::time.desc())\n        .limit(1)\n        .load::&lt;types::ETHRecord&gt;(&amp;*conn);\n    match res {\n        Ok(x) =&gt; {\n            if x.len() &gt; 0 {\n                Ok(x.get(0).unwrap().time)\n            } else {\n                Ok(0)\n            }\n        }\n        Err(err) =&gt; Err(format_err!(\"Error here! {:?}\", err)),\n    }\n}\n\npub fn get_most_recent_btc_entry(conn: &amp;SqliteConnection) -&gt; Result&lt;i32, Error&gt; {\n    let res = types::bitcoin::table\n        .order(types::bitcoin::time.desc())\n        .limit(1)\n        .load::&lt;types::BTCRecord&gt;(&amp;*conn);\n    match res {\n        Ok(x) =&gt; {\n            if x.len() &gt; 0 {\n                Ok(x.get(0).unwrap().time)\n            } else {\n                Ok(0)\n            }\n        }\n        Err(err) =&gt; Err(format_err!(\"Error here! {:?}\", err)),\n    }\n}\n</code></pre>\n\n<p>I want to combine both into one function. I have tried out a few different ways, but </p>\n\n<ol>\n<li>I am quite new to Rust</li>\n<li>Diesel has weird types (or at least that's what it feels like)</li>\n</ol>\n\n<p>What are some ways to merge these two functions (which differ in only the fields <code>types::ethereum</code> and <code>ETHRecord</code> into one unified function <code>get_most_recent_entry</code>? </p>\n\n<p>These are my database struct definitions (the SQL schemas are equivalently defined):</p>\n\n<pre><code>#[derive(Insertable, Queryable, Debug)]\n#[table_name=\"bitcoin\"]\npub struct BTCRecord {\n    pub time: i32,\n    pub market_cap: f32,\n    pub price_btc: f32,\n    pub price_usd: f32,\n    pub vol_usd: f32,\n}\n</code></pre>\n\n<p>and the type of </p>\n\n<pre><code>`types::ethereum::time` is `database::types::__diesel_infer_schema::infer_bitcoin::bitcoin::columns::time`\n</code></pre>\n\n<p>and the type of </p>\n\n<pre><code>`types::ethereum::table` is\n`database::types::__diesel_infer_schema::infer_bitcoin::bitcoin::table`\n</code></pre>\n"}, {"tags": ["ios", "rust", "crash-reports"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1513622360, "post_id": 47874135, "comment_id": 82714382, "body": "I would say piece-meal, one stack boundary at a time, but I am not sure what libraries could be used for that to be honest."}], "owner": {"reputation": 1763, "user_id": 788488, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/135a741141d72d3374028e2c6bb77114?s=128&d=identicon&r=PG", "display_name": "meisel", "link": "https://stackoverflow.com/users/788488/meisel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 141, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1513620912, "creation_date": 1513620699, "last_edit_date": 1513620912, "question_id": 47874135, "link": "https://stackoverflow.com/questions/47874135/how-can-i-get-the-full-symbolicated-stack-trace-when-a-panic-or-error-occurs-in", "title": "How can I get the full, symbolicated stack trace when a panic or error occurs in Rust code that&#39;s been called via FFI, for the iOS platform?", "body": "<p>Since unwinding across an FFI boundary is unsafe, how can I record the:</p>\n\n<ul>\n<li>stack trace of the Rust code</li>\n<li>the C/Objective-C code that was calling into that Rust code</li>\n<li>the Rust code that was calling into that C/Objective-C code</li>\n<li>etc.? </li>\n</ul>\n\n<p>How can we do it if unsafe code called within Rust causes an segfault or some other low-level crash?</p>\n\n<p>I'm particularly interested in this for iOS, where getting crash reports from the wild is crucial. One thing that would help, it seems to me, is that maybe <code>backtrace(3)</code> would work from an <code>extern fn</code> in Rust to get the C/Objective-C piece directly above it?</p>\n"}, {"tags": ["rust", "polymorphism"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1513619648, "post_id": 47873745, "comment_id": 82713190, "body": "See also <a href=\"https://users.rust-lang.org/t/how-to-downcast-from-trait-object/5852\" rel=\"nofollow noreferrer\">this related question</a> on the Rust users&#39; forum."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513620405, "post_id": 47873745, "comment_id": 82713548, "body": "Also <a href=\"https://stackoverflow.com/questions/27892375/can-i-do-type-introspection-with-trait-objects-and-then-downcast-it\">this Q&amp;A</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1513620695, "post_id": 47873745, "comment_id": 82713678, "body": "<i>I&#39;m rewriting a C++ application in Rust</i> \u2014 please consider <i>not</i> blindly transcribing paradigms from other languages directly to Rust. Rust is its own language with its own concepts, patterns, and best practices."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1513620847, "post_id": 47873745, "comment_id": 82713746, "body": "Notice that <code>Vec&lt;Box&lt;Trait&gt;&gt;</code> and <code>Vec&lt;Box&lt;Enum&gt;&gt;</code> <i>both</i> store a piece of information indicating which type you&#39;re dealing with; with an <code>enum</code>, it&#39;s in line with the data itself, but with a boxed trait, it&#39;s part of the pointer. So <code>Vec&lt;Box&lt;Trait&gt;&gt;</code> requires less data storage for the values (and is similar to what C++ does), but <code>Vec&lt;Box&lt;Enum&gt;&gt;</code> actually requires less data storage for the <code>Vec</code> itself."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1513622218, "post_id": 47873745, "comment_id": 82714329, "body": "It has been pointed out to me that the above comment may be misleading. The point I was trying to make is that &quot;several thousands of elements&quot; is not necessarily an argument in favor of trait objects; it can as easily go the other way, since there is a tension between &quot;difference in size between the variants&quot; and &quot;number of references to elements&quot;."}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513632423, "post_id": 47873745, "comment_id": 82718883, "body": "@Shepmaster I&#39;m trying to rewrite the code not just in Rust but also by the patterns and concepts of the language. That being said I&#39;ve read number of books on C/C++ and design patterns. Are you aware of some cookbook on Rust with solution to common problems (beside the Rust book &amp; nomicon)? I&#39;d like to escape downcasting as much as possible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513632756, "post_id": 47873745, "comment_id": 82719001, "body": "That will likely depend on the specifics of your problem. However, many patterns <i>do</i> translate. For example, <a href=\"https://stackoverflow.com/q/10718771/155423\">here&#39;s one example</a> of removing a specific type of downcasting. The &quot;obvious&quot; solution I see based on your code is to move <code>exclusive_method</code> to the trait and implement it as a no-op for things which don&#39;t need it."}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 221, "favorite_count": 0, "closed_date": 1513620400, "answer_count": 0, "score": 1, "last_activity_date": 1513620543, "creation_date": 1513619007, "last_edit_date": 1513620519, "question_id": 47873745, "link": "https://stackoverflow.com/questions/47873745/how-do-i-create-a-polymorphic-array-and-then-convert-a-value-to-the-concrete-typ", "closed_reason": "Duplicate", "title": "How do I create a polymorphic array and then convert a value to the concrete type?", "body": "<p>I'm rewriting a C++ application in Rust and I need to implement an array of pointers to the base class and populate the array with derived classes.</p>\n\n<p>The C++:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>BaseClass base[2] = new BaseClass[2];\n\nbase[0] = FirstDerivedClass ();\nbase[1] = SecondDerivedClass ();\n\nFirstDerivedClass *fderived = dynamic_cast&lt;FirstDerivedClass&gt; (base[0]);\n\nif (fderived != nullptr) {\n   fderived.exclusive_method ();\n}\n</code></pre>\n\n<p>I've tried to create something similar using <code>Vec&lt;Box&lt;BaseTrait&gt;&gt;</code> but there is no way to cast it to the appropriate derived class. </p>\n\n<p>A solution with enum is not appropriate as there are great differences in size between the variants and I need to allocate several thousands of elements. This led me to combine a struct boxed in enum, but I don't know how to implement it.</p>\n"}, {"tags": ["struct", "types", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 5, "creation_date": 1513615568, "post_id": 47872625, "comment_id": 82711053, "body": "<a href=\"https://doc.rust-lang.org/book/second-edition/ch19-03-advanced-traits.html#the-newtype-pattern-to-implement-external-traits-on-external-types\" rel=\"nofollow noreferrer\"><i>&quot;There\u2019s no runtime performance penalty for using this pattern (the newtype pattern). The wrapper type is elided at compile time.&quot;</i></a>"}, {"owner": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1513616854, "post_id": 47872625, "comment_id": 82711733, "body": "Thanks, I wasn&#39;t aware it was a pattern."}, {"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "edited": false, "score": 0, "creation_date": 1513906651, "post_id": 47872625, "comment_id": 82839195, "body": "Memory layout is the same in practice."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1513625017, "last_edit_date": 1513625017, "creation_date": 1513622272, "answer_id": 47874478, "question_id": 47872625, "link": "https://stackoverflow.com/questions/47872625/what-is-the-difference-between-a-type-alias-and-a-tuple-struct/47874478#47874478", "title": "What is the difference between a type alias and a tuple struct?", "body": "<p>A type alias is just that, an alias. Pure <em>syntactic</em> sugar with no bearing on semantics. For all intents and purposes you could just replace all of the alias name with what it aliases.</p>\n\n<p>On the other hand, a tuple struct is an entirely separate type, with all that entails:</p>\n\n<ul>\n<li>you define its invariants,</li>\n<li>you define which functions it implements,</li>\n<li>you define which traits it implements.</li>\n</ul>\n\n<p>As such, the two are nothing alike.</p>\n"}], "owner": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 517, "favorite_count": 0, "answer_count": 1, "score": 7, "last_activity_date": 1513625017, "creation_date": 1513614725, "last_edit_date": 1513615564, "question_id": 47872625, "link": "https://stackoverflow.com/questions/47872625/what-is-the-difference-between-a-type-alias-and-a-tuple-struct", "title": "What is the difference between a type alias and a tuple struct?", "body": "<p>What is the difference between</p>\n\n<pre><code>type CMoves = Vec&lt;Move&gt;;\n</code></pre>\n\n<p>and  </p>\n\n<pre><code>struct CMoves(Vec&lt;Move&gt;);\n</code></pre>\n\n<p>I understand I can implement traits with the second one, but I cannot with the first one as <code>Vec</code> is defined outside of my crate. Are there any other differences, for example with memory representation?</p>\n"}, {"tags": ["types", "rust", "type-alias"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1513614563, "post_id": 47872494, "comment_id": 82710494, "body": "<a href=\"https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#type-aliases-create-type-synonyms\" rel=\"nofollow noreferrer\">Relevant section from the book</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1513614688, "post_id": 47872494, "comment_id": 82710551, "body": "<a href=\"https://stackoverflow.com/q/34938429/155423\">Does Rust have an idiomatic equivalent to F# typedefs?</a>"}, {"owner": {"reputation": 3242, "user_id": 6360938, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/ae1e709f8e8beb1d09db43a881c97610?s=128&d=identicon&r=PG&f=1", "display_name": "typos", "link": "https://stackoverflow.com/users/6360938/typos"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1513614689, "post_id": 47872494, "comment_id": 82710553, "body": "@E_net4 Thank you."}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1513647727, "post_id": 47872494, "comment_id": 82723781, "body": "You might also want to look up <a href=\"https://aturon.github.io/features/types/newtype.html\" rel=\"nofollow noreferrer\">the Newtype Pattern</a>.  There is zero runtime cost, and it enables you to implement traits, member functions, and such on preexisting types."}], "answers": [{"comments": [{"owner": {"reputation": 3242, "user_id": 6360938, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/ae1e709f8e8beb1d09db43a881c97610?s=128&d=identicon&r=PG&f=1", "display_name": "typos", "link": "https://stackoverflow.com/users/6360938/typos"}, "edited": false, "score": 0, "creation_date": 1513614609, "post_id": 47872541, "comment_id": 82710523, "body": "Thank you for the clarification."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 30, "last_activity_date": 1513614481, "creation_date": 1513614481, "answer_id": 47872541, "question_id": 47872494, "link": "https://stackoverflow.com/questions/47872494/does-rust-have-an-equivalent-of-cs-typedef/47872541#47872541", "title": "Does Rust have an equivalent of C&#39;s typedef?", "body": "<p>Yes. You can simply write</p>\n\n<pre><code>type MyInt = i32;\n</code></pre>\n\n<p>These are aliases at the name level, i.e. it is absolutely immaterial which name for the same type you then use. They are perfectly interchangeable.</p>\n"}], "owner": {"reputation": 3242, "user_id": 6360938, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/ae1e709f8e8beb1d09db43a881c97610?s=128&d=identicon&r=PG&f=1", "display_name": "typos", "link": "https://stackoverflow.com/users/6360938/typos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8281, "favorite_count": 2, "accepted_answer_id": 47872541, "answer_count": 1, "score": 21, "last_activity_date": 1513614702, "creation_date": 1513614308, "last_edit_date": 1513614702, "question_id": 47872494, "link": "https://stackoverflow.com/questions/47872494/does-rust-have-an-equivalent-of-cs-typedef", "title": "Does Rust have an equivalent of C&#39;s typedef?", "body": "<p>C offers the keyword <code>typedef</code> which lets you alias another type:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef unsigned int uint;\n</code></pre>\n\n<p>This basically makes <code>uint</code> an alias for <code>unsigned int</code>. This also works with more complex types and structures too. Does Rust have a similar language feature? If yes, how are typedefs handled in Rust?</p>\n"}, {"tags": ["sockets", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1513611678, "post_id": 47871544, "comment_id": 82708887, "body": "Please be more specific about your issue. A good <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> usually contains the error messages copied verbatim from the compiler."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513612180, "post_id": 47871544, "comment_id": 82709152, "body": "Bluntly, there are <i>many</i> things wrong with this code. For example: you take a reference to something after moving it, you try to pass a reference to a local variable to a thread, you probably want <code>&amp;mut self</code> instead of <code>&amp;self</code> in a lot of these places, etc.. Have you read <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a>? It&#39;s highly recommended. <i>I tried to solve this using the lifetime parameter <code>&lt;&#39;a&gt;</code></i> \u2014 that&#39;s not what lifetimes do. Again, the book will explain what lifetimes are. It&#39;s not easy or fun to learn Rust by wildly thrashing about."}, {"owner": {"reputation": 91, "user_id": 6801661, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qjAyUbxEw8w/AAAAAAAAAAI/AAAAAAAAANg/KwggX7Wvlkg/photo.jpg?sz=128", "display_name": "Douglas Alan Maitelli", "link": "https://stackoverflow.com/users/6801661/douglas-alan-maitelli"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1513764414, "post_id": 47871544, "comment_id": 82773484, "body": "Hi @E_net4, sorry for not providing better details, will add the error message now."}, {"owner": {"reputation": 91, "user_id": 6801661, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qjAyUbxEw8w/AAAAAAAAAAI/AAAAAAAAANg/KwggX7Wvlkg/photo.jpg?sz=128", "display_name": "Douglas Alan Maitelli", "link": "https://stackoverflow.com/users/6801661/douglas-alan-maitelli"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513764597, "post_id": 47871544, "comment_id": 82773607, "body": "Hi @Shepmaster, Thank you very much for the suggestion on the reading, will read that right now. What you say about using really makes sense and I will try to improve that. But during that can you help me on how can I solve the above error having a structure with a Vec containing Client?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513869861, "post_id": 47927820, "comment_id": 82824296, "body": "Don&#39;t start identifiers with <code>_</code> unless they are unused. This isn&#39;t C++ where you have to avoid name collisions between member variables and methods."}], "tags": [], "owner": {"reputation": 91, "user_id": 6801661, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qjAyUbxEw8w/AAAAAAAAAAI/AAAAAAAAANg/KwggX7Wvlkg/photo.jpg?sz=128", "display_name": "Douglas Alan Maitelli", "link": "https://stackoverflow.com/users/6801661/douglas-alan-maitelli"}, "is_accepted": false, "score": 2, "last_activity_date": 1513869787, "last_edit_date": 1513869787, "creation_date": 1513869289, "answer_id": 47927820, "question_id": 47871544, "link": "https://stackoverflow.com/questions/47871544/rust-struct-field-mutable-for-socket/47927820#47927820", "title": "Rust struct field mutable for socket", "body": "<p>I was able to solve the overall problem now:</p>\n\n<pre><code>use std::net::*;\nuse std::io::Write;\nuse std::thread;\n\nstruct Client {\n    socket: TcpStream,\n}\n\nimpl Client {\n    pub fn write(&amp;mut self) {\n        let counter: u32 = 0;\n        self.socket.write(counter.to_string().as_bytes()).unwrap();\n    }\n}\n\nstruct ClientThread {\n    inner: Client,\n}\n\nimpl ClientThread {\n    pub fn client_loop(&amp;mut self) {\n        let client = &amp;mut self.inner;\n\n        client.write();\n    }\n}\n\nstruct Server {\n    _clients: Vec&lt;Box&lt;Client&gt;&gt;,\n}\n\nimpl Server {\n    fn new() -&gt; Server {\n        Server { _clients: vec![] }\n    }\n\n    fn add_client(&amp;mut self, s: TcpStream) {\n        let client = Client { socket: s };\n\n        println!(\"New client: {}\", client.socket.peer_addr().unwrap());\n\n        self._clients.push(Box::new(client));\n\n        let mut client_thread = ClientThread { inner: client };\n\n        thread::spawn(move || loop {\n            client_thread.client_loop();\n        });\n    }\n\n    pub fn server_loop(&amp;mut self) {\n        let listener = TcpListener::bind(\"127.0.0.1:5001\").unwrap();\n\n        loop {\n            match listener.accept() {\n                Ok((socket, _addr)) =&gt; {\n                    self.add_client(socket);\n                }\n                Err(e) =&gt; println!(\"Couldn't get client: {}\", e),\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut server = Server::new();\n    server.server_loop();\n}\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 6801661, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qjAyUbxEw8w/AAAAAAAAAAI/AAAAAAAAANg/KwggX7Wvlkg/photo.jpg?sz=128", "display_name": "Douglas Alan Maitelli", "link": "https://stackoverflow.com/users/6801661/douglas-alan-maitelli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 814, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1513869787, "creation_date": 1513610956, "last_edit_date": 1513850206, "question_id": 47871544, "link": "https://stackoverflow.com/questions/47871544/rust-struct-field-mutable-for-socket", "title": "Rust struct field mutable for socket", "body": "<p>I am trying to get started with Rust, and was trying to put some pieces together and have a \"Server\" instance which contains a Vector of \"Clients\" where each of them have a Socket.</p>\n\n<p>I understand that in Rust the Socket or TcpStream needs to be mutable, and that I need to borrow the reference in order to keep the scope after the Client instantiation in my main loop.</p>\n\n<p>But I faced the issue that my TcpStream field may not be mutable in the Client struct. So I am not sure my approach is correct, but I tried to solve this using the lifetime parameter &lt;'a>, however this leads me to another problem where my \"Client\" inside \"Server\" does not pass the &lt;'a> lifetime parameter.</p>\n\n<p>Can someone help me solve this problem or show me the correct approach to this problem / solution?</p>\n\n<p>Thanks.</p>\n\n<pre><code>use std::net::*;\nuse std::io::Write;\nuse std::thread;\nuse std::time::Duration;\n\nstruct Client&lt;'a&gt; {\n    socket: &amp;'a mut TcpStream,\n    addr: SocketAddr\n}\n\nstruct Server {\n    clients: Vec&lt;Box&lt;Client&gt;&gt;\n}\n\nimpl Server {\n    pub fn new() -&gt; Server {\n        Server{clients: Vec::new()}\n    }\n\n    fn write(&amp;self, stream: &amp;mut TcpStream) {\n        let mut counter: u32 = 0;\n        counter += 1;\n        stream.write(counter.to_string().as_bytes()).unwrap();\n        thread::sleep(Duration::from_secs(1));\n    }\n\n    fn client_thread(&amp;self, client: &amp;mut Client) {\n        self.write(&amp;mut client.socket);\n    }\n\n    fn add_client(&amp;self, socket: &amp;mut TcpStream, addr: SocketAddr) {\n        let mut client = Client {\n            socket: socket,\n            addr: addr\n        };\n\n        self.clients.push(Box::new(client));\n\n        self.client_thread(&amp;mut client);\n    }\n\n    pub fn server_loop(&amp;self) {\n        let listener = TcpListener::bind(\"127.0.0.1:5001\").unwrap();\n\n        loop {\n            match listener.accept() {\n                Ok((mut socket, addr)) =&gt; {\n                    println!(\"new client: {:?}\", addr);\n\n                    thread::spawn(move || loop {\n                        self.add_client(&amp;mut socket, addr);\n                    });\n                },\n                Err(e) =&gt; println!(\"couldn't get client: {:?}\", e),\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut server = Server::new();\n    server.server_loop();\n}\n</code></pre>\n\n<p>Update:</p>\n\n<p>The current error message is:</p>\n\n<pre><code> clients: Vec&lt;Box&lt;Client&gt;&gt;\n                  ^^^^^^ expected lifetime parameter\n</code></pre>\n\n<p>Update 2:</p>\n\n<p>Now I think the solution is a little bit better / closer to the goal. But I still have a problem with the thread:spawn outside static context.</p>\n\n<pre><code>use std::net::*;\nuse std::io::Write;\nuse std::thread;\n\nstruct Client {\n    socket: TcpStream\n}\n\nstruct Server {\n    clients: Vec&lt;Box&lt;Client&gt;&gt;\n}\n\nimpl Server {\n    fn new() -&gt; Server {\n        Server{clients: vec![]}\n    }\n\n    fn write(&amp;mut self, stream: &amp;mut TcpStream) {\n        let mut counter: u32 = 0;\n        stream.write(counter.to_string().as_bytes()).unwrap();\n    }\n\n    fn client_loop(&amp;mut self, client: &amp;mut Client) {\n        loop {\n            self.write(&amp;mut client.socket);\n        }\n    }\n\n    fn add_client(&amp;mut self, s: TcpStream) {\n        let mut client = Client{\n            socket: s\n        };\n\n        self.clients.push(Box::new(client));\n\n        println!(\"New client: {}\", client.socket.peer_addr().unwrap());\n\n        thread::spawn(move || {\n            self.client_loop(&amp;mut client);\n        });\n    }\n\n    pub fn server_loop(&amp;mut self) {\n        let listener = TcpListener::bind(\"127.0.0.1:5001\").unwrap();\n\n        loop {\n            match listener.accept() {\n                Ok((socket, _addr)) =&gt; {\n                    self.add_client(socket);\n                },\n                Err(e) =&gt; println!(\"Couldn't get client: {}\", e),\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut server = Server::new();\n    server.server_loop();\n}\n</code></pre>\n\n<p>error[E0477]: the type <code>[closure@src/main.rs:38:23: 40:10 self:&amp;mut Server, client:Client]</code> does not fulfill the required lifetime</p>\n\n<pre><code>  --&gt; src/main.rs:38:9\n   |\n38 |         thread::spawn(move || {\n   |         ^^^^^^^^^^^^^\n   |\n   = note: type must satisfy the static lifetime\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 2, "creation_date": 1513599391, "post_id": 47868272, "comment_id": 82701580, "body": "What did you want <code>name</code> method to do exactly? It has multiple issues, and the answer may depend on your intention."}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1513599752, "post_id": 47868272, "comment_id": 82701795, "body": "@VictorPolevoy in this case just return ref to the String. The issue is more general: how to return ref to a String which has no lifetime specifier as it lives as long as the enum does."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 4, "creation_date": 1513599875, "post_id": 47868272, "comment_id": 82701884, "body": "You need to (re)read <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-01-what-is-ownership.html#ownership-and-functions\" rel=\"nofollow noreferrer\">What is ownership</a> chapter in the Rust book. <code>name(self)</code> takes ownership of the enum and the enum is deallocated upon the function return. You cannot return a reference to deallocated enum."}], "answers": [{"comments": [{"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "edited": false, "score": 1, "creation_date": 1513599988, "post_id": 47868430, "comment_id": 82701949, "body": "Thanks for the explanation. This is exactly my use case."}], "tags": [], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "is_accepted": true, "score": 5, "last_activity_date": 1513668536, "last_edit_date": 1513668536, "creation_date": 1513599795, "answer_id": 47868430, "question_id": 47868272, "link": "https://stackoverflow.com/questions/47868272/how-can-i-return-a-str-from-strings-in-an-enum-in-a-method-impl/47868430#47868430", "title": "How can I return a &amp;str from Strings in an enum in a method impl?", "body": "<p>If you just want to return a city name <strong>without</strong> losing the object by consuming, you should write it as the following:</p>\n\n<pre><code>enum CityType {\n    City { name: String },\n    Town { name: String },\n    Village { name: String },\n}\n\nimpl CityType {\n    fn name(&amp;self) -&gt; &amp;str {\n        match *self {\n            CityType::City { ref name } =&gt; name,\n            CityType::Town { ref name, .. } =&gt; name,\n            CityType::Village { ref name } =&gt; name,\n        }\n    }\n}\n\nfn main() {\n    let city = CityType::City { name: \"NY\".to_owned() };\n    println!(\"Name of the city: {}\", city.name());\n}\n</code></pre>\n\n<p>Explanation:</p>\n\n<ol>\n<li><p>At first, your method's signature specifies that you <strong>consume</strong> the object:</p>\n\n<pre><code>fn name(self) -&gt; &amp;str {\n</code></pre>\n\n<p>After calling such a method, you will no longer be able to use the instance. If you want to read a string, you should accept a reference:</p>\n\n<pre><code>fn name(&amp;self) -&gt; &amp;str {\n</code></pre>\n\n<p>This leads to another problem</p></li>\n<li><p><code>match</code> should work without moving an object, so here is <code>*</code>:</p>\n\n<pre><code>match *self {\n</code></pre></li>\n<li><p>You should not move out from the enum's data, so the <code>ref</code> keyword helps</p>\n\n<pre><code>CityType::City { ref name } =&gt; name,\n</code></pre>\n\n<p>This keyword says that we must use pattern matching with a reference to value.</p></li>\n<li><p>In the <code>main</code> you pass a <code>&amp;str</code> but items in your enum are <code>String</code>, so this lead to incompatible types error. By calling <code>.to_owned()</code> method on a string reference you create a new <code>String</code> object from it:</p>\n\n<pre><code>let city = CityType::City { name: \"NY\".to_owned() };\n</code></pre></li>\n</ol>\n\n<p>For your comment:</p>\n\n<blockquote>\n  <p>The issue is more general: how to return ref to a String which has no lifetime specifier as it lives as long as the enum does.</p>\n</blockquote>\n\n<p>In Rust you <strong>can't</strong> have a reference without a lifetime. Never. There are cases in which the compiler can deduce the lifetime for you, but there are also cases when it does it incorrectly or not what you expected. In this case, for example:</p>\n\n<pre><code>fn name(&amp;self) -&gt; &amp;str {\n</code></pre>\n\n<p>There <strong>are</strong> lifetimes, the compiler treats this as the following:</p>\n\n<pre><code>fn name&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a str {\n</code></pre>\n\n<p>Your references are bound to the same lifetime and they can be used.</p>\n"}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 794, "favorite_count": 1, "accepted_answer_id": 47868430, "answer_count": 1, "score": 2, "last_activity_date": 1513668536, "creation_date": 1513599177, "last_edit_date": 1513607629, "question_id": 47868272, "link": "https://stackoverflow.com/questions/47868272/how-can-i-return-a-str-from-strings-in-an-enum-in-a-method-impl", "title": "How can I return a &amp;str from Strings in an enum in a method impl?", "body": "<p>I want to return the name of the city/town/village as a reference to <code>str</code>. I can specify the lifetime in the implementation but specifying it also for the enum causes error as it has no reference declared.</p>\n\n<pre><code>enum CityType {\n    City { name: String /* ... */ },\n    Town { name: String /* ... */ },\n    Village { name: String /* ... */ },\n}\n\nimpl CityType {\n    fn name(self) -&gt; &amp;str {\n        match self {\n            CityType::City { name } =&gt; &amp;name,\n            CityType::Town { name, .. } =&gt; &amp;name,\n            CityType::Village { name } =&gt; &amp;name,\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=bf361d3b76dae530a16adfa605b93ef2&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["for-loop", "rust"], "comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 3, "creation_date": 1513596646, "post_id": 47867519, "comment_id": 82700051, "body": "That loop is not a good idea even in C, because floating point inaccuracies mean that you don&#39;t know for sure when it will stop (it could take 200 or 201 steps in your example)."}, {"owner": {"reputation": 3172, "user_id": 1206421, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/19dd8d6cbf16c4246914c10502fd2395?s=128&d=identicon&r=PG&f=1", "display_name": "serge1peshcoff", "link": "https://stackoverflow.com/users/1206421/serge1peshcoff"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1513596722, "post_id": 47867519, "comment_id": 82700093, "body": "@interjay what are the alternatives then? Would it be better to iterate over the integers and then calculate the needed floats from these?"}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 3, "creation_date": 1513597480, "post_id": 47867519, "comment_id": 82700470, "body": "That&#39;s how I&#39;d do it."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1513597821, "post_id": 47867519, "comment_id": 82700664, "body": "You also could wrap such logic in your own iterator of course."}], "answers": [{"comments": [{"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 2, "creation_date": 1596382844, "post_id": 47868114, "comment_id": 111788247, "body": "I don&#39;t think this is a foot gun. Fp math is still deterministic, we could determine the number of iterations that it is going to be at compile time (always 200 or 201, the only reason I don&#39;t know for sure is I haven&#39;t bothered to do the math). In most contexts with fp you don&#39;t need an exact number of iterations, you are just trying to make it so there are regularly spaced ticks on your graph or something. The only problem I can see is if you size an array with the assumption that a certain number of elements would fit, but then you are going to need integers to index that array anyway."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1596385133, "post_id": 47868114, "comment_id": 111788931, "body": "@JosephGarvin: I agree that the number of iterations is deterministic, the problem is that it may not be <i>obvious</i>. It doesn&#39;t matter if the <i>compiler</i> can deduce it, if the (human) reader cannot... or is not confident."}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1596410686, "post_id": 47868114, "comment_id": 111795366, "body": "I guess that&#39;s fair and I guess there is always the risk that someone will try to index with floor()."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 13, "last_activity_date": 1513598575, "creation_date": 1513598575, "answer_id": 47868114, "question_id": 47867519, "link": "https://stackoverflow.com/questions/47867519/how-to-do-a-for-loop-with-boundary-values-and-step-as-floating-point-values/47868114#47868114", "title": "How to do a &#39;for&#39; loop with boundary values and step as floating point values?", "body": "<p><em>If you haven't yet, I invite you to read Goldberg's <a href=\"http://perso.ens-lyon.fr/jean-michel.muller/goldberg.pdf\" rel=\"noreferrer\">What Every Computer Scientist Should Know About Floating-Point Arithmetic</a>.</em></p>\n\n<p>The problem with floating points, is that your code may be doing 200 or 201 iterations, depending on whether the last step of the loop ends up being <code>i = 0.99</code> or <code>i = 0.999999</code> (which is still <code>&lt; 1</code> even if really close).</p>\n\n<p>To avoid this footgun, Rust does not allow iterating over a range of <code>f32</code> or <code>f64</code>. Instead, it forces you to use integral steps:</p>\n\n<pre><code>for i in -100..100 {\n    let i = i as f32 * 0.01;\n    // ...\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 4, "last_activity_date": 1518681115, "last_edit_date": 1518681115, "creation_date": 1513603075, "answer_id": 47869373, "question_id": 47867519, "link": "https://stackoverflow.com/questions/47867519/how-to-do-a-for-loop-with-boundary-values-and-step-as-floating-point-values/47869373#47869373", "title": "How to do a &#39;for&#39; loop with boundary values and step as floating point values?", "body": "<p>As a real iterator:</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b66323dfee76d06c38f12652ea9a43e1&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>/// produces: [ linear_interpol(start, end, i/steps) | i &lt;- 0..steps ]\n/// (does NOT include \"end\")\n///\n/// linear_interpol(a, b, p) = (1 - p) * a + p * b\npub struct FloatIterator {\n    current: u64,\n    current_back: u64,\n    steps: u64,\n    start: f64,\n    end: f64,\n}\n\nimpl FloatIterator {\n    pub fn new(start: f64, end: f64, steps: u64) -&gt; Self {\n        FloatIterator {\n            current: 0,\n            current_back: steps,\n            steps: steps,\n            start: start,\n            end: end,\n        }\n    }\n\n    /// calculates number of steps from (end - start) / step\n    pub fn new_with_step(start: f64, end: f64, step: f64) -&gt; Self {\n        let steps = ((end - start) / step).abs().round() as u64;\n        Self::new(start, end, steps)\n    }\n\n    pub fn length(&amp;self) -&gt; u64 {\n        self.current_back - self.current\n    }\n\n    fn at(&amp;self, pos: u64) -&gt; f64 {\n        let f_pos = pos as f64 / self.steps as f64;\n        (1. - f_pos) * self.start + f_pos * self.end\n    }\n\n    /// panics (in debug) when len doesn't fit in usize\n    fn usize_len(&amp;self) -&gt; usize {\n        let l = self.length();\n        debug_assert!(l &lt;= ::std::usize::MAX as u64);\n        l as usize\n    }\n}\n\nimpl Iterator for FloatIterator {\n    type Item = f64;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.current &gt;= self.current_back {\n            return None;\n        }\n        let result = self.at(self.current);\n        self.current += 1;\n        Some(result)\n    }\n\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        let l = self.usize_len();\n        (l, Some(l))\n    }\n\n    fn count(self) -&gt; usize {\n        self.usize_len()\n    }\n}\n\nimpl DoubleEndedIterator for FloatIterator {\n    fn next_back(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.current &gt;= self.current_back {\n            return None;\n        }\n        self.current_back -= 1;\n        let result = self.at(self.current_back);\n        Some(result)\n    }\n}\n\nimpl ExactSizeIterator for FloatIterator {\n    fn len(&amp;self) -&gt; usize {\n        self.usize_len()\n    }\n\n    //fn is_empty(&amp;self) -&gt; bool {\n    //    self.length() == 0u64\n    //}\n}\n\npub fn main() {\n    println!(\n        \"count: {}\",\n        FloatIterator::new_with_step(-1.0, 1.0, 0.01).count()\n    );\n    for f in FloatIterator::new_with_step(-1.0, 1.0, 0.01) {\n        println!(\"{}\", f);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1513644949, "post_id": 47870614, "comment_id": 82723170, "body": "Buffering in a <code>Vec</code> seems like a really bad idea to me.  You could at least go for the nightly feature <code>conservative_impl_trait</code> and return <code>impl Iterator&lt;Item = T&gt;</code> if you don&#39;t want to implement an actual iterator."}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1513687782, "post_id": 47870614, "comment_id": 82740457, "body": "I will add the nightly version. I was trying to get it to work with the actual return type on stable but couldn&#39;t figure out how to get it to work with the closure that is capturing variables around it."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1513687947, "post_id": 47870614, "comment_id": 82740551, "body": "As far as I know you can&#39;t unless you box the closure (or the iterator)."}], "tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": false, "score": 1, "last_activity_date": 1513687939, "last_edit_date": 1513687939, "creation_date": 1513607521, "answer_id": 47870614, "question_id": 47867519, "link": "https://stackoverflow.com/questions/47867519/how-to-do-a-for-loop-with-boundary-values-and-step-as-floating-point-values/47870614#47870614", "title": "How to do a &#39;for&#39; loop with boundary values and step as floating point values?", "body": "<p>Another answer using iterators but in a slightly different way <a href=\"http://play.integer32.com/?gist=50c953744048ef38f1952c5eaf3c4340&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre><code>extern crate num;\nuse num::{Float, FromPrimitive};\n\nfn linspace&lt;T&gt;(start: T, stop: T, nstep: u32) -&gt; Vec&lt;T&gt;\nwhere\n    T: Float + FromPrimitive,\n{\n    let delta: T = (stop - start) / T::from_u32(nstep - 1).expect(\"out of range\");\n    return (0..(nstep))\n        .map(|i| start + T::from_u32(i).expect(\"out of range\") * delta)\n        .collect();\n}\n\nfn main() {\n    for f in linspace(-1f32, 1f32, 3) {\n        println!(\"{}\", f);\n    }\n}\n</code></pre>\n\n<p>Under nightly you can use the <code>conservative impl trait</code> feature to avoid the <code>Vec</code> allocation <a href=\"http://play.integer32.com/?gist=c7e51d531aca4d8f405d7d2d767a0bf9&amp;version=nightly\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre><code>#![feature(conservative_impl_trait)]\n\nextern crate num;\nuse num::{Float, FromPrimitive};\n\nfn linspace&lt;T&gt;(start: T, stop: T, nstep: u32) -&gt; impl Iterator&lt;Item = T&gt;\nwhere\n    T: Float + FromPrimitive,\n{\n    let delta: T = (stop - start) / T::from_u32(nstep - 1).expect(\"out of range\");\n    return (0..(nstep))\n        .map(move |i| start + T::from_u32(i).expect(\"out of range\") * delta);\n}\n\nfn main() {\n    for f in linspace(-1f32, 1f32, 3) {\n        println!(\"{}\", f);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3172, "user_id": 1206421, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/19dd8d6cbf16c4246914c10502fd2395?s=128&d=identicon&r=PG&f=1", "display_name": "serge1peshcoff", "link": "https://stackoverflow.com/users/1206421/serge1peshcoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4581, "favorite_count": 0, "accepted_answer_id": 47868114, "answer_count": 3, "score": 7, "last_activity_date": 1518681115, "creation_date": 1513596400, "last_edit_date": 1513607781, "question_id": 47867519, "link": "https://stackoverflow.com/questions/47867519/how-to-do-a-for-loop-with-boundary-values-and-step-as-floating-point-values", "title": "How to do a &#39;for&#39; loop with boundary values and step as floating point values?", "body": "<p>I need to implement a <code>for</code> loop that goes from one floating point number to another with the step as another floating point number.</p>\n\n<p>I know how to implement that in C-like languages:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>for (float i = -1.0; i &lt; 1.0; i += 0.01) { /* ... */ }\n</code></pre>\n\n<p>I also know that in Rust I can specify the loop step using <code>step_by</code>, and that gives me what I want if I have the boundary values and step as integers:</p>\n\n<pre><code>#![feature(iterator_step_by)]\n\nfn main() {\n    for i in (0..30).step_by(3) {\n        println!(\"Index {}\", i);\n    }\n}\n</code></pre>\n\n<p>When I do that with floating point numbers, it results in a compilation error:</p>\n\n<pre><code>#![feature(iterator_step_by)]\n\nfn main() {\n    for i in (-1.0..1.0).step_by(0.01) {\n        println!(\"Index {}\", i);\n    }\n}\n</code></pre>\n\n<p>And here is the compilation output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `step_by` found for type `std::ops::Range&lt;{float}&gt;` in the current scope\n--&gt; src/main.rs:4:26\n  |\n4 |     for i in (-1.0..1.0).step_by(0.01) {\n  |                          ^^^^^^^\n  |\n  = note: the method `step_by` exists but the following trait bounds were not satisfied:\n          `std::ops::Range&lt;{float}&gt; : std::iter::Iterator`\n          `&amp;mut std::ops::Range&lt;{float}&gt; : std::iter::Iterator`\n</code></pre>\n\n<p>How can I implement this loop in Rust?</p>\n"}, {"tags": ["data-structures", "iterator", "rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513562143, "post_id": 47861091, "comment_id": 82687268, "body": "Your reduced example shows the problem quite nicely. By returning the same mutable reference multiple times (<code>&amp;mut self.list[0]</code>) you would be breaking Rust&#39;s rules for references! <a href=\"https://play.rust-lang.org/?gist=2d88bfe774873d73543e9a0f1b4ede2d&amp;version=stable\" rel=\"nofollow noreferrer\">Here&#39;s the duplicate answer applied to your code</a>."}], "owner": {"reputation": 129, "user_id": 6037727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cca27c93999c1377e690482c67e2cc5a?s=128&d=identicon&r=PG&f=1", "display_name": "Brian", "link": "https://stackoverflow.com/users/6037727/brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 57, "favorite_count": 0, "closed_date": 1513561943, "answer_count": 0, "score": 2, "last_activity_date": 1513561217, "creation_date": 1513560782, "last_edit_date": 1513561217, "question_id": 47861091, "link": "https://stackoverflow.com/questions/47861091/why-is-this-lifetime-different-than-mut-lifetime", "closed_reason": "Duplicate", "title": "Why is this &amp; lifetime different than &amp;mut lifetime?", "body": "<p>I'm creating a custom data structure in Rust and trying to implement iterators for it. Following the example of the built-in collections (<code>LinkedList</code>, <code>Vec</code>, etc), I've created an <code>IntoIter</code> struct that iterates over an owned collection, an <code>Iter</code> struct that iterates over a borrowed collection, and an <code>IterMut</code> struct that iterates over a mutably borrowed collection. </p>\n\n<p>I was able to implement the first two iterators but I'm having trouble pleasing the borrow-checker with <code>IterMut</code>. I've cut my code down to the bare minimum repro and replaced my custom data structure with <code>Vec&lt;Option&lt;T&gt;&gt;</code>:</p>\n\n<pre><code>pub struct IterMut&lt;'a, T: 'a&gt; {\n    list: &amp;'a mut Vec&lt;Option&lt;T&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; Iterator for IterMut&lt;'a, T&gt; {\n    type Item = &amp;'a mut T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a mut T&gt; {\n        let head_node = &amp;mut self.list[0];\n        // convert &amp;mut Option&lt;T&gt; to Option&lt;&amp;mut T&gt;\n        head_node.as_mut()\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0fc05921019fdb5718f9d2b0acd5c5b8&amp;version=stable\" rel=\"nofollow noreferrer\">The example in the playground</a></p>\n\n<p>It fails to compile with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n  --&gt; src/main.rs:23:24\n   |\n23 |   let head_node = &amp;mut self.list[0];\n   |                        ^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 22:2...\n  --&gt; src/main.rs:22:2\n   |\n22 | /  fn next(&amp;mut self) -&gt; Option&lt;&amp;'a mut T&gt; {\n23 | |   let head_node = &amp;mut self.list[0];\n24 | |   // convert &amp;mut Option&lt;T&gt; to Option&lt;&amp;mut T&gt;\n25 | |   head_node.as_mut()\n26 | |  }\n   | |__^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:23:24\n   |\n23 |   let head_node = &amp;mut self.list[0];\n   |                        ^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 19:1...\n  --&gt; src/main.rs:19:1\n   |\n19 | / impl&lt;'a, T&gt; Iterator for IterMut&lt;'a, T&gt; {\n20 | |  type Item = &amp;'a mut T;\n21 | |\n22 | |  fn next(&amp;mut self) -&gt; Option&lt;&amp;'a mut T&gt; {\n...  |\n26 | |  }\n27 | | }\n   | |_^\nnote: ...so that expression is assignable (expected std::option::Option&lt;&amp;'a mut T&gt;, found std::option::Option&lt;&amp;mut T&gt;)\n  --&gt; src/main.rs:25:3\n   |\n25 |   head_node.as_mut()\n   |   ^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What really confuses me about this is that this code is almost identical to the code I used for <code>Iter</code>, which compiles successfully:</p>\n\n<pre><code>pub struct Iter&lt;'a, T: 'a&gt; {\n    list: &amp;'a Vec&lt;Option&lt;T&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; Iterator for Iter&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a T&gt; {\n        let head_node = &amp;self.list[0];\n        // convert &amp;Option&lt;T&gt; to Option&lt;&amp;T&gt;\n        head_node.as_ref()\n    }\n}\n</code></pre>\n\n<p>I know that <code>&amp;</code> and <code>&amp;mut</code> are two different things, but I thought their lifetimes would still be calculated the same way. My first guess was that <code>as_ref()</code> must be somehow different than <code>as_mut()</code> but there doesn't appear to be a difference in the source code of their implementations (<a href=\"https://doc.rust-lang.org/src/core/option.rs.html#244-249\" rel=\"nofollow noreferrer\">as_ref</a>, <a href=\"https://doc.rust-lang.org/src/core/option.rs.html#265-270\" rel=\"nofollow noreferrer\">as_mut</a>).</p>\n\n<p>What is the borrow-checker complaining about? </p>\n"}, {"tags": ["rust", "conditional-compilation"], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 133, "favorite_count": 0, "closed_date": 1513599027, "answer_count": 0, "score": 1, "last_activity_date": 1513557540, "creation_date": 1513552977, "last_edit_date": 1513553656, "question_id": 47860428, "link": "https://stackoverflow.com/questions/47860428/is-there-a-way-to-conditionally-declare-multiple-extern-crates-with-a-single-con", "closed_reason": "Duplicate", "title": "Is there a way to conditionally declare multiple extern crates with a single configuration attribute?", "body": "<p>I have a few optional features that conditionally include crates. Many of them require the <code>#[macro_use]</code> attribute, so they must be defined in the entry point file, which causes a bit of redundancy with <code>#[cfg]</code> attributes. What I'd really like to do is declare multiple extern crates in their own block or in a single statement, for example:</p>\n\n<pre><code>#[cfg(feature = \"baz-feature\")]\n{\n    #[macro_use]\n    extern crate foo_crate;\n\n    #[macro_use]\n    extern crate bar_crate;\n}\n</code></pre>\n\n<p>or perhaps</p>\n\n<pre><code>#[cfg(feature = \"baz-feature\")]\nextern crate {#[macro_use] foo_crate, #[macro_use] bar_crate};\n</code></pre>\n\n<p>Is there currently any way to accomplish something like the above, and if not, are there any active RFCs to do something similar?</p>\n"}, {"tags": ["ios", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513545624, "post_id": 47859337, "comment_id": 82683841, "body": "<code>rustc -C help | grep opt-level</code>"}, {"owner": {"reputation": 1763, "user_id": 788488, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/135a741141d72d3374028e2c6bb77114?s=128&d=identicon&r=PG", "display_name": "meisel", "link": "https://stackoverflow.com/users/788488/meisel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513620339, "post_id": 47859337, "comment_id": 82713517, "body": "That solves my problem, thanks"}], "owner": {"reputation": 1763, "user_id": 788488, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/135a741141d72d3374028e2c6bb77114?s=128&d=identicon&r=PG", "display_name": "meisel", "link": "https://stackoverflow.com/users/788488/meisel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "closed_date": 1513545590, "answer_count": 0, "score": 1, "last_activity_date": 1513545549, "creation_date": 1513543921, "question_id": 47859337, "link": "https://stackoverflow.com/questions/47859337/is-there-an-os-equivalent-in-rust", "closed_reason": "Duplicate", "title": "Is there an -Os equivalent in Rust?", "body": "<p>I see that I can select an optimization level between 0 and 3 for Rust, but I would like an -Os option as well. The reason is that not only is it possible that the -Os code would be faster, but also I'm looking at Rust for iOS, where keeping your code size small for the App Store is very important (a lot of the code gets encrypted before compression, so it can't effectively be compressed, and we have to consider people downloading the app where bandwidth is at a premium, e.g. on poor 3G connections). To me, this seems like a blocker from using Rust for large-scale iOS development.</p>\n"}, {"tags": ["macros", "rust", "rust-macros"], "answers": [{"comments": [{"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "edited": false, "score": 0, "creation_date": 1513521784, "post_id": 47856027, "comment_id": 82676488, "body": "Thanks for explaining this."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1513520513, "creation_date": 1513520513, "answer_id": 47856027, "question_id": 47855860, "link": "https://stackoverflow.com/questions/47855860/how-to-implement-the-lispian-cond-macro/47856027#47856027", "title": "How to implement the Lispian cond macro?", "body": "<p>Macros in Rust don't perform textual substitution like the C preprocessor does. Moreover, the result of a macro is already \"parsed\", so you can't just append something after the macro invocation that's supposed to be part of what the macro expands to.</p>\n\n<p>In your case, you can't put an <code>else</code> after the first <code>cond!</code> invocation because the compiler has already finished parsing the <code>if</code> expression; you need to put the <code>if</code> and the <code>else</code> together. Likewise, when you invoke <code>cond!</code> again after the <code>else</code>, you need to add braces around the call, because the sequence <code>else if</code> does not begin a nested <code>if</code> expression.</p>\n\n<pre><code>macro_rules! cond {\n    ($pred:expr =&gt; $body:expr) =&gt; {\n        if $pred { $body }\n    };\n    ($pred:expr =&gt; $body:expr, $($preds:expr =&gt; $bodies:expr),+) =&gt; {\n        if $pred { $body } else { cond! { $($preds =&gt; $bodies),+ } }\n    };\n}\n</code></pre>\n\n<p>Ultimately though, this macro is pretty much useless. An <code>if</code> expression without an <code>else</code> clause always has its type inferred to be <code>()</code>, so unless all the branches evaluate to <code>()</code> (or diverge), the expanded macro will produce type mismatch errors.</p>\n"}], "owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 47856027, "answer_count": 1, "score": 0, "last_activity_date": 1513520513, "creation_date": 1513519119, "question_id": 47855860, "link": "https://stackoverflow.com/questions/47855860/how-to-implement-the-lispian-cond-macro", "title": "How to implement the Lispian cond macro?", "body": "<p>Intended usage:</p>\n\n<pre><code>cond! {\n  x &gt; 5 =&gt; 0,\n  x &lt; 3 =&gt; 1,\n  true =&gt; -1\n}\n</code></pre>\n\n<p>Should expand to:</p>\n\n<pre><code>if x &gt; 5 { 0 } else if x &lt; 3 { 1 } else if true { -1 }\n</code></pre>\n\n<p>Note that it doesn't produce a catch-all <code>else { ... }</code> suffix.</p>\n\n<p>My attempt:</p>\n\n<pre><code>macro_rules! cond(\n    ($pred:expr =&gt; $body:expr) =&gt; {{\n        if $pred {$body}\n    }};\n    ($pred:expr =&gt; $body:expr, $($preds:expr =&gt; $bodies:expr),+) =&gt; {{\n        cond! { $pred =&gt; $body } else cond! { $($preds =&gt; $bodies),+ }\n    }};\n);\n</code></pre>\n\n<p>However, the compiler complains about the <code>else</code> keyword.</p>\n\n<pre><code>error: expected expression, found keyword `else`\n  --&gt; src/main.rs:32:34\n   |\n32 |           cond! { $pred =&gt; $body } else cond! { $($preds =&gt; $bodies),+ }\n   |                                    ^^^^\n</code></pre>\n"}, {"tags": ["rust", "rust-piston"], "comments": [{"owner": {"reputation": 6165, "user_id": 1901658, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/95eee89c6704eb4d075c33821c61af72?s=128&d=identicon&r=PG", "display_name": "Fredrick Brennan", "link": "https://stackoverflow.com/users/1901658/fredrick-brennan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513749342, "post_id": 47855009, "comment_id": 82765778, "body": "@Shepmaster Note that Piston is a low-level API -- the simplest program I could think of to demonstrate my problem was 52 lines (of which 11 are imports). I have edited my question to remove my simple Voronoi program and instead include the simplest Piston program I could think of."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513779466, "post_id": 47855009, "comment_id": 82783225, "body": "Certainly. Those 52 x 2 lines were what I wanted every potential answerer to avoid needing to create ^_^."}], "answers": [{"comments": [{"owner": {"reputation": 306, "user_id": 9118790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9af000a11dc28f20b89a0602e5231f0a?s=128&d=identicon&r=PG&f=1", "display_name": "wartmanm", "link": "https://stackoverflow.com/users/9118790/wartmanm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1514772693, "post_id": 47972338, "comment_id": 83064999, "body": "I&#39;m surprised the version I guessed at worked and the version I tested didn&#39;t! I tried it out on a Mac, and it appears the problem was with <code>OpenGL::V2_1</code>. With that version, drawing anything crashed in <code>gleRunVertexSubmitImmediate</code>. Changing it to <code>V3_2</code> worked, and I&#39;ve updated the answer to use it. Please let me know if it still segfaults on your machine."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1514773825, "post_id": 47972338, "comment_id": 83065151, "body": "Yup; both seemingly run well now!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1514974659, "post_id": 47972338, "comment_id": 83124251, "body": "Welcome to [rust]! Join us <a href=\"https://chat.stackoverflow.com/rooms/62927/rust\">in the chatroom</a> if you want to :)"}], "tags": [], "owner": {"reputation": 306, "user_id": 9118790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9af000a11dc28f20b89a0602e5231f0a?s=128&d=identicon&r=PG&f=1", "display_name": "wartmanm", "link": "https://stackoverflow.com/users/9118790/wartmanm"}, "is_accepted": true, "score": 11, "last_activity_date": 1514772372, "last_edit_date": 1514772372, "creation_date": 1514239812, "answer_id": 47972338, "question_id": 47855009, "link": "https://stackoverflow.com/questions/47855009/how-do-i-stop-piston-from-making-the-screen-flash-when-i-dont-call-graphicsc/47972338#47972338", "title": "How do I stop Piston from making the screen flash when I don&#39;t call `graphics::clear` every time the screen is rendered?", "body": "<p>I think the flashing is caused by buffer swapping: in <code>flashes.rs</code> only the first buffer to be drawn into is cleared.  The second one will be all zeros, or leftover gpu memory if you're unlucky.  According to the OpenGL <a href=\"https://www.khronos.org/opengl/wiki/Common_Mistakes#Swap_Buffers\" rel=\"noreferrer\">wiki</a> there's no good way around calling <code>graphics::clear</code>:</p>\n\n<blockquote>\n  <p>A modern OpenGL program should always use double buffering. . .\n  The buffers should <em>always</em> be cleared. On much older hardware, there\n  was a technique to get away without clearing the scene, but on even\n  semi-recent hardware, this will actually make things slower. So always\n  do the clear.</p>\n</blockquote>\n\n<p>Instead, the usual method is to accumulate your changes to a texture or renderbuffer, and then draw that to the screen, exactly as you described.</p>\n\n<p>I couldn't find any way to do this from within <code>opengl_graphics</code> either (there are no calls to <code>gl::GenFramebuffers</code> anywhere in it) but it's relatively straightforward to set up using raw <code>gl</code> calls.  (I've used textures instead of renderbuffers because they have the significant advantage of being supported by high-level methods like <code>Image::draw</code>.)</p>\n\n<pre><code>extern crate piston;\nextern crate opengl_graphics;\nextern crate graphics;\nextern crate sdl2_window;\nextern crate gl;\n\nuse opengl_graphics::{ GlGraphics, OpenGL, Texture, TextureSettings };\nuse graphics::{ Context, Graphics, Transformed };\nuse graphics::image::Image;\nuse piston::input::*;\nuse piston::event_loop::*;\nuse piston::window::Window;\nuse sdl2_window::Sdl2Window as AppWindow;\nuse gl::types::GLuint;\n\nstatic CURSOR_POS_COLOR: [f32; 4] = [0.0, 0.0, 0.0, 1.0];\n\nfn main() {\n    let opengl = OpenGL::V3_2;\n    let mut window: AppWindow = piston::window::WindowSettings::new(\"Example for StackOverflow\", [600, 600])\n        .exit_on_esc(true).opengl(opengl).build().expect(\"window\");\n\n    let ref mut gl = GlGraphics::new(opengl);\n    let (mut mx, mut my) = (0., 0.);\n\n    let draw_size = window.draw_size();\n    // It would also be possible to create a texture by hand using gl::GenTextures and call\n    // gl::TexImage2D with a null pointer for the data argument, which would require another unsafe\n    // block but would save this allocation\n    let texture_buf = vec![0u8; draw_size.width as usize * draw_size.height as usize];\n    let texture = Texture::from_memory_alpha(&amp;texture_buf, draw_size.width, draw_size.height,\n                                             &amp;TextureSettings::new()).expect(\"texture\");\n\n    let fbo;\n    unsafe {\n        let mut fbos: [GLuint; 1] = [0];\n        // Create a Framebuffer Object that we can draw to later\n        gl::GenFramebuffers(1, fbos.as_mut_ptr());\n        fbo = fbos[0];\n        // Switch to it as the active framebuffer\n        gl::BindFramebuffer(gl::FRAMEBUFFER, fbo);\n        // Set up the framebuffer object so that draws to it will go to the texture\n        gl::FramebufferTexture2D(gl::FRAMEBUFFER,\n                                 gl::COLOR_ATTACHMENT0, // draw colors, not depth or stencil data\n                                 gl::TEXTURE_2D, // the texture's type\n                                 texture.get_id(),\n                                 0); // mipmap level\n    }\n\n    let mut events = Events::new(EventSettings::new().lazy(true));\n    while let Some(e) = events.next(&amp;mut window) {\n        e.mouse_cursor(|x, y| {\n            mx = x; my = y;\n        });\n        e.render(|args| {\n            // Switch to the texture framebuffer and draw the cursor\n            unsafe {\n                gl::BindFramebuffer(gl::FRAMEBUFFER, fbo);\n            }\n            gl.draw(args.viewport(), |c, g| {\n                draw_cursor_pos([mx, my], &amp;c, g);\n            });\n\n            // Switch to the window framebuffer and draw the texture\n            unsafe {\n                gl::BindFramebuffer(gl::FRAMEBUFFER, 0);\n            }\n            gl.draw(args.viewport(), |c, g| {\n                graphics::clear([1f32, 1f32, 1f32, 0f32], g);\n                // I can't entirely explain this.  We already applied the viewport transform when\n                // we were rendering the cursor, so I think the texture is right-side-up for GL,\n                // but piston::Image is expecting an image laid out in screen coordinates.\n                // Since there is an offset in the viewport transform, the flip has to be applied\n                // first, otherwise it would flip across the origin.\n                let flipped = c.transform.prepend_transform(graphics::math::scale(1., -1.));\n                Image::new().draw(&amp;texture, &amp;c.draw_state, flipped, g);\n            });\n        });\n    }\n}\n\nfn draw_cursor_pos&lt;G: Graphics&gt;(\n    cursor: [f64; 2],\n    c: &amp;Context,\n    g: &amp;mut G,\n) {\n    graphics::ellipse(\n        CURSOR_POS_COLOR,\n        graphics::ellipse::circle(cursor[0], cursor[1], 4.0),\n        c.transform,\n        g\n    );\n}\n</code></pre>\n\n<p>Alternatively, the <code>gfx</code> backend has the promising-sounding <a href=\"http://docs.piston.rs/piston_window/gfx_core/factory/trait.Factory.html#method.create_render_target\" rel=\"noreferrer\"><code>Factory::CreateRenderTarget</code></a> method.  My hardware doesn't support it, but I believe using it would look approximately like this:</p>\n\n<pre><code>extern crate piston;\nextern crate graphics;\nextern crate piston_window;\nextern crate gfx_core;\n\nuse graphics::{ Context, Graphics, Transformed };\nuse graphics::image::Image;\nuse piston::input::*;\nuse piston::event_loop::*;\nuse piston::window::Window;\nuse piston_window::{ PistonWindow, OpenGL, G2dTexture };\nuse gfx_core::factory::Factory;\nuse gfx_core::texture::{ SamplerInfo, FilterMethod, WrapMode, Size };\n\nstatic CURSOR_POS_COLOR: [f32; 4] = [0.0, 0.0, 0.0, 1.0];\n\nfn main() {\n    let opengl = OpenGL::V2_1;\n    let window_settings =\n        piston::window::WindowSettings::new(\"Example for StackOverflow\", [600, 600])\n        .opengl(opengl)\n        .exit_on_esc(true);\n    let mut window: PistonWindow = window_settings.build().expect(\"window\");\n    window.set_lazy(true);\n\n    let size = window.draw_size();\n\n    let (texture_handle, shader_view, target) = window.factory.create_render_target(size.width as Size, size.height as Size)\n        .expect(\"render target\");\n    let sampler = window.factory.create_sampler(SamplerInfo::new(FilterMethod::Scale, WrapMode::Tile));\n    let texture = G2dTexture {\n        surface: texture_handle,\n        sampler: sampler,\n        view: shader_view,\n    };\n    let stencil = window.factory.create_depth_stencil_view_only(size.width as Size, size.height as Size)\n        .expect(\"stencil\");\n\n    let (mut mx, mut my) = (0., 0.);\n\n    while let Some(e) = window.next() {\n        e.mouse_cursor(|x, y| {\n            mx = x; my = y;\n        });\n        if let Some(args) = e.render_args() {\n            window.g2d.draw(&amp;mut window.encoder, &amp;target, &amp;stencil, args.viewport(), |c, g| {\n                draw_cursor_pos([mx, my], &amp;c, g);\n            });\n\n            window.draw_2d(&amp;e, |c, g| {\n                graphics::clear([1f32, 1f32, 1f32, 0f32], g);\n                let flipped = c.transform.prepend_transform(graphics::math::scale(1., -1.));\n                Image::new().draw(&amp;texture, &amp;c.draw_state, flipped, g);\n            });\n        }\n    }\n}\n\nfn draw_cursor_pos&lt;G: Graphics&gt;(\n    cursor: [f64; 2],\n    c: &amp;Context,\n    g: &amp;mut G,\n) {\n    graphics::ellipse(\n        CURSOR_POS_COLOR,\n        graphics::ellipse::circle(cursor[0], cursor[1], 4.0),\n        c.transform,\n        g\n    );\n}\n</code></pre>\n"}], "owner": {"reputation": 6165, "user_id": 1901658, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/95eee89c6704eb4d075c33821c61af72?s=128&d=identicon&r=PG", "display_name": "Fredrick Brennan", "link": "https://stackoverflow.com/users/1901658/fredrick-brennan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 919, "favorite_count": 1, "accepted_answer_id": 47972338, "answer_count": 1, "score": 16, "last_activity_date": 1514773892, "creation_date": 1513512901, "last_edit_date": 1513779404, "question_id": 47855009, "link": "https://stackoverflow.com/questions/47855009/how-do-i-stop-piston-from-making-the-screen-flash-when-i-dont-call-graphicsc", "title": "How do I stop Piston from making the screen flash when I don&#39;t call `graphics::clear` every time the screen is rendered?", "body": "<p>Consider <a href=\"https://gist.github.com/ctrlcctrlv/798774a7a9b1c769e01f320d00c3dbef\" rel=\"noreferrer\">two programs</a>, and the difference between them:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ diff flashes/src/main.rs doesnt_flash/src/main.rs\n22,23c22\n&lt;\n&lt;     let mut i = 0;\n---\n&gt;     let mut cursor_poses: Vec&lt;(f64, f64)&gt; = Vec::new();\n28c27\n&lt;             mx = x; my = y;\n---\n&gt;             cursor_poses.push((x,y));\n32,33c31,33\n&lt;                     if i == 0 {\n&lt;                         graphics::clear([1.0; 4], g);\n---\n&gt;                     graphics::clear([1.0; 4], g);\n&gt;                     for &amp;(x, y) in cursor_poses.iter() {\n&gt;                         draw_cursor_pos([x, y], &amp;c, g);\n35,36d34\n&lt;                     draw_cursor_pos([mx, my], &amp;c, g);\n&lt;                     i+=1;\n</code></pre>\n\n<p><a href=\"http://kittens.ph/example-rust-piston-problem.mkv\" rel=\"noreferrer\">Video demonstration of the two programs.</a></p>\n\n<p>The program is an <em>extremely basic</em> paint program, with only one brush width, brush stroke color, canvas size, no saving, etc; oh and to stop drawing, move your mouse out of the window, since every time you go over the window this counts as drawing ;-)</p>\n\n<p><code>flashes.rs</code> does not draw every pixel every time <code>e.render_args()</code> is reached, except the first time. <code>doesnt_flash.rs</code> does draw every pixel every time <code>e.render_args()</code> is reached. This is the only difference between the two programs.</p>\n\n<p>While it does not take long to generate the content in this program, so it is acceptable to re-generate it hundreds of times as the mouse moves over the window, this seems inefficient. In theory, as more and more points are added to the screen, each iteration of <code>gl.draw</code> takes longer and longer. In practice, the difference between calling <code>graphics::ellipse</code> one time vs. ten thousand times is not significant on modern hardware. </p>\n\n<p>Other programs I'd want to write won't have that luxury as it will take longer to generate the result to put on the screen.</p>\n\n<p>While perusing the API, I came up with no obvious way to just \"do nothing\". I assume that I would have to write my screen changes to some buffer object, then feed <code>GlGraphics</code> back this buffer object if <code>e.render_args()</code> is called but I don't need to update the screen. </p>\n\n<p>The problem is, I can't seem to find this buffer object. :-(</p>\n\n<p>How can I \"do nothing\" without getting screen flashing? If my theory is correct, how can I draw to a <code>GlGraphics</code> buffer instead of the screen, then feed my buffer back to the screen when I don't have anything new to draw?</p>\n\n<hr>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"stackoverflow-piston-example\"\nversion = \"0.0.0\"\nauthors = [\"Fred\"]\ndescription = \"Note: This program can be used for both of the programs below. Simply use `cargo new` and save either of the below files as `src/main.rs`\"\nkeywords = []\n\n[dependencies]\npiston = \"0.35.0\"\npiston2d-opengl_graphics = \"0.50.0\"\npiston2d-graphics = \"0.24.0\"\npiston2d-touch_visualizer = \"0.8.0\"\npistoncore-sdl2_window = \"0.47.0\"\n</code></pre>\n\n<p><strong>doesnt_flash.rs</strong></p>\n\n<pre><code>extern crate piston;\nextern crate opengl_graphics;\nextern crate graphics;\nextern crate touch_visualizer;\nextern crate sdl2_window;\n\nuse opengl_graphics::{ GlGraphics, OpenGL };\nuse graphics::{ Context, Graphics };\nuse piston::input::*;\nuse piston::event_loop::*;\nuse sdl2_window::Sdl2Window as AppWindow;\n\nstatic CURSOR_POS_COLOR: [f32; 4] = [0.0, 0.0, 0.0, 1.0];\n\nfn main() {\n    let opengl = OpenGL::V3_2;\n    let mut window: AppWindow = piston::window::WindowSettings::new(\"Example for StackOverflow\", [600, 600])\n        .exit_on_esc(true).opengl(opengl).build().unwrap();\n\n    let ref mut gl = GlGraphics::new(opengl);\n    let (mut mx, mut my) = (0., 0.);\n    let mut cursor_poses: Vec&lt;(f64, f64)&gt; = Vec::new();\n\n    let mut events = Events::new(EventSettings::new().lazy(true));\n    while let Some(e) = events.next(&amp;mut window) {\n        e.mouse_cursor(|x, y| {\n            cursor_poses.push((x,y));\n        });\n        if let Some(args) = e.render_args() {\n            gl.draw(args.viewport(), |c, g| {\n                    graphics::clear([1.0; 4], g);\n                    for &amp;(x, y) in cursor_poses.iter() {\n                        draw_cursor_pos([x, y], &amp;c, g);\n                    }\n                }\n            );\n        }\n    }\n}\n\nfn draw_cursor_pos&lt;G: Graphics&gt;(\n    cursor: [f64; 2],\n    c: &amp;Context,\n    g: &amp;mut G,\n) {\n    graphics::ellipse(\n        CURSOR_POS_COLOR,\n        graphics::ellipse::circle(cursor[0], cursor[1], 4.0),\n        c.transform,\n        g\n    );\n}\n</code></pre>\n\n<p><strong>flashes.rs</strong></p>\n\n<pre><code>extern crate piston;\nextern crate opengl_graphics;\nextern crate graphics;\nextern crate touch_visualizer;\nextern crate sdl2_window;\n\nuse opengl_graphics::{ GlGraphics, OpenGL };\nuse graphics::{ Context, Graphics };\nuse piston::input::*;\nuse piston::event_loop::*;\nuse sdl2_window::Sdl2Window as AppWindow;\n\nstatic CURSOR_POS_COLOR: [f32; 4] = [0.0, 0.0, 0.0, 1.0];\n\nfn main() {\n    let opengl = OpenGL::V3_2;\n    let mut window: AppWindow = piston::window::WindowSettings::new(\"Example for StackOverflow\", [600, 600])\n        .exit_on_esc(true).opengl(opengl).build().unwrap();\n\n    let ref mut gl = GlGraphics::new(opengl);\n    let (mut mx, mut my) = (0., 0.);\n\n    let mut i = 0;\n\n    let mut events = Events::new(EventSettings::new().lazy(true));\n    while let Some(e) = events.next(&amp;mut window) {\n        e.mouse_cursor(|x, y| {\n            mx = x; my = y;\n        });\n        if let Some(args) = e.render_args() {\n            gl.draw(args.viewport(), |c, g| {\n                    if i == 0 {\n                        graphics::clear([1.0; 4], g);\n                    }\n                    draw_cursor_pos([mx, my], &amp;c, g);\n                    i+=1;\n                }\n            );\n        }\n    }\n}\n\nfn draw_cursor_pos&lt;G: Graphics&gt;(\n    cursor: [f64; 2],\n    c: &amp;Context,\n    g: &amp;mut G,\n) {\n    graphics::ellipse(\n        CURSOR_POS_COLOR,\n        graphics::ellipse::circle(cursor[0], cursor[1], 4.0),\n        c.transform,\n        g\n    );\n}\n</code></pre>\n"}, {"tags": ["struct", "constructor", "rust", "instantiation"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1513516430, "post_id": 47854545, "comment_id": 82675015, "body": "The title of your question doesn&#39;t quite match the content; you are asking many more questions than originally stated."}, {"owner": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1513537525, "post_id": 47854545, "comment_id": 82681381, "body": "@MatthieuM. Yeah, you are right. Looks like because of this the question was put on hold."}], "answers": [{"comments": [{"owner": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "edited": false, "score": 0, "creation_date": 1513537214, "post_id": 47855658, "comment_id": 82681297, "body": "Thanks a lot Matthieu! This clarifies things quite a lot, the only thing I am not sure if I understand is the part about direct initialization and the invariants and encapsulation."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "edited": false, "score": 0, "creation_date": 1513542473, "post_id": 47855658, "comment_id": 82682930, "body": "@dawid: Imagine <code>struct Even { number: i64 }</code>. The <i>contract</i> (also known as invariant, for it never varies) is that its <code>number</code> field is always even. If anyone can direct initialize it (if <code>number</code> is <code>pub</code>), then sooner or later someone will write <code>Even { number: 3 }</code>. <i>Oops</i>. Therefore, you should have a constructor <code>fn new(n: i64) -&gt; Option&lt;Even&gt;</code> which returns <code>Some(Even { number: n })</code> if <code>n</code> is even, and <code>None</code> otherwise, thus <i>establishing the invariant</i> that <code>Even::number</code> is always even."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1513519449, "last_edit_date": 1513519449, "creation_date": 1513517684, "answer_id": 47855658, "question_id": 47854545, "link": "https://stackoverflow.com/questions/47854545/performance-of-setting-parameters-of-an-object-in-rust/47855658#47855658", "title": "Performance of setting parameters of an object in Rust", "body": "<p>You have identified 3 ways to create a <code>struct</code>:</p>\n\n<ol>\n<li>Direct: directly initializing its fields,</li>\n<li>Constructor: calling a single function which initializes the <code>struct</code>,</li>\n<li>Builder: assembling the <code>struct</code> elements piece-meal then finally initializing a <code>struct</code>.</li>\n</ol>\n\n<blockquote>\n  <p>Are there more ways of doing the same?</p>\n</blockquote>\n\n<p>Direct initialization has two variations: either initialing each field directly, or initializing a few fields and \"defaulting\" the others with <code>struct S { f0, .. OTHERS }</code> where <code>OTHERS</code> is an instance of <code>S</code>.</p>\n\n<p>The Constructor and Builder ways have a exponential number of variations, depending on how you group the parameters, and in some instances the line between the two will be blurry.</p>\n\n<p>All ways, however, must at some point converge and use (1) to create an instance of <code>S</code>.</p>\n\n<blockquote>\n  <p>What are general benefits and disadvantages of each?</p>\n</blockquote>\n\n<p>This is... irrelevant, to some extent.</p>\n\n<p>Each of the 3 alternatives caters to a different set of needs:</p>\n\n<ul>\n<li>Direct initialization requires accessible fields; since <code>pub</code> fields are rare it is therefore mostly used within the crate but not usable by clients.</li>\n<li>Constructor and Builder allow establishing invariants and are therefore the primary client's interface.</li>\n</ul>\n\n<p>The Constructor is simple but inflexible: no new parameter can be added without breaking backward compatibility (another Constructor can, of course); the Builder on the other hand is flexible, at the cost of verbosity.</p>\n\n<blockquote>\n  <p>What are the performance impact of these different solutions ( if any )? </p>\n</blockquote>\n\n<p>Ideally, in an optimized binary, both Constructor and Builder should have the same cost. If it matters, profile.</p>\n\n<p>Direct initialization will be faster than either if they establish invariants, as it does not. Comparing the performance of non-equivalent functionality rarely matters though.</p>\n\n<blockquote>\n  <p>Which is the best practice?</p>\n</blockquote>\n\n<p>Avoid Direct Initialization.</p>\n\n<p>Direct Initialization does NOT establish invariants, it's up to the surrounding code to establishing them, which therefore means that any time Direct Initialization is used the invariant checking code is duplicated, which violates the DRY principle.</p>\n\n<p>Direct Initialization also goes against encapsulation, preventing any further change of the underlying structure, down to the type of the fields used. This is generally undesirable.</p>\n\n<p>There are exceptions, as always. The most prominent being that implementing the Constructor or Builder requires using Direct Initialization down the road.</p>\n\n<p>Choosing between Constructor and Builder is more subjective. In general, I recommend a Constructor when the parameters are few, even if this means writing a few of them, such as <code>Vec::{new, with_capacity}</code>. When the number of Constructors would get out of hand if one needed to write one for each combination of parameters which makes sense, then use a Builder instead.</p>\n"}], "owner": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "closed_date": 1513536400, "accepted_answer_id": 47855658, "answer_count": 1, "score": 1, "last_activity_date": 1513519449, "creation_date": 1513509535, "question_id": 47854545, "link": "https://stackoverflow.com/questions/47854545/performance-of-setting-parameters-of-an-object-in-rust", "closed_reason": "Needs more focus", "title": "Performance of setting parameters of an object in Rust", "body": "<p>I have been wondering about different ways of instantiating structs I came across in Rust so far. So there is the most basic/simple way of setting all the fields manually when everything is public:</p>\n\n<pre><code>let a = Structure { arg1: T, arg2: T, ... }\n</code></pre>\n\n<p>When there is a need for privacy and better interface and/or defaults, it's common to use 'contructors' such us new(), etc:</p>\n\n<pre><code>let a = Structure::new(arg1, arg2, ...)\n</code></pre>\n\n<p>Now, so far it kind of makes sens to me. However there seems to be a third common way of doing the same which confuses me the most. Here is a concrete example:</p>\n\n<pre><code>let mut image_file = OpenOptions::new()\n                        .write(true)\n                        .truncate(true)\n                        .create(true)\n                        .open(file_path)\n                        .unwrap();\n</code></pre>\n\n<p>So my questions are:</p>\n\n<ol>\n<li>What are the performance impact of these different solutions ( if any )? </li>\n<li>What are general benefits and disadvantages of each?</li>\n<li>Are there more ways of doing the same?</li>\n<li>Which is the best practice?</li>\n</ol>\n"}, {"tags": ["http", "cookies", "rust", "hyper"], "comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1513507475, "post_id": 47853778, "comment_id": 82672662, "body": "How is this related to cookies? The problem is in <code>let response</code> line which is not related to cookies at all."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1513517917, "post_id": 47853778, "comment_id": 82675397, "body": "The cookies returned by the server are in the <code>Set-Cookie</code> header; the <code>Cookie</code> header is used in requests to send cookies to the server."}], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 2, "last_activity_date": 1513524734, "last_edit_date": 1513524734, "creation_date": 1513509334, "answer_id": 47854518, "question_id": 47853778, "link": "https://stackoverflow.com/questions/47853778/how-to-get-the-cookie-from-a-get-response/47854518#47854518", "title": "How to get the cookie from a GET response?", "body": "<p>See the <a href=\"https://docs.rs/futures/0.1.17/futures/future/trait.Future.html#method.wait\" rel=\"nofollow noreferrer\">documentation for the <code>wait</code> method</a>:</p>\n\n<blockquote>\n  <p><strong>Note</strong>: This method is not appropriate to call on event loops or similar\n  I/O situations because it will prevent the event loop from making\n  progress (this blocks the thread). This method should only be called\n  when it's guaranteed that the blocking work associated with this\n  future will be completed by another thread.</p>\n</blockquote>\n\n<p><code>Future::wait</code> is already <a href=\"https://github.com/alexcrichton/futures-rs/pull/634\" rel=\"nofollow noreferrer\">deprecated in the <code>tokio-reform</code></a> branch.</p>\n\n<p>I'd recommend to design the full application to deal with async concepts (i.e. <code>get_new_cookie</code> should take a <code>Handle</code> and return a <code>Future</code>, not allocating its own event loop).</p>\n\n<p>You could run the request with <a href=\"https://docs.rs/tokio-core/0.1.11/tokio_core/reactor/struct.Core.html#method.run\" rel=\"nofollow noreferrer\"><code>Core::run</code></a> like this:</p>\n\n<pre><code>let response = core.run(client.get(uri)).expect(\"Cannot get url.\");\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1513524684, "creation_date": 1513524684, "answer_id": 47856629, "question_id": 47853778, "link": "https://stackoverflow.com/questions/47853778/how-to-get-the-cookie-from-a-get-response/47856629#47856629", "title": "How to get the cookie from a GET response?", "body": "<p>As <a href=\"https://stackoverflow.com/a/47854518/155423\">Stefan points out</a>, by calling <code>wait</code>, you are putting the thread to sleep until the future has completed. However, that thread needs to run the event loop, so you've just caused a deadlock. Using <a href=\"https://docs.rs/tokio-core/0.1.11/tokio_core/reactor/struct.Core.html#method.run\" rel=\"nofollow noreferrer\"><code>Core::run</code></a> is more correct.</p>\n\n<p>As <a href=\"https://stackoverflow.com/questions/47853778/hyper-how-to-get-the-cookie-from-get-response#comment82675397_47853778\">Francis Gagn\u00e9 points out</a>, the \"Cookie\" header is used to send a cookie <em>to the server</em>. <a href=\"https://docs.rs/hyper/0.11.9/hyper/header/struct.SetCookie.html\" rel=\"nofollow noreferrer\"><code>SetCookie</code></a> is used to send a cookie <em>to the client</em>. It also returns a vector of all the cookies together:</p>\n\n<pre><code>fn get_new_cookie() -&gt; Result&lt;String, Box&lt;Error&gt;&gt; {\n    println!(\"Getting cookie...\");\n    let mut core = Core::new()?;\n\n    let client = Client::new(&amp;core.handle());\n    println!(\"Created client\");\n\n    let uri = \"http://www.cnn.com\".parse().expect(\"Cannot parse url\");\n    println!(\"Parsed url\");\n\n    let response = core.run(client.get(uri)).expect(\"Cannot get url.\");\n    println!(\"Got response\");\n\n    let cookie = response\n        .headers()\n        .get::&lt;SetCookie&gt;()\n        .expect(\"Cannot get cookie\");\n    println!(\"Cookie: {:?}\", cookie);\n\n    Ok(cookie.join(\",\"))\n}\n</code></pre>\n\n<hr>\n\n<p>However, if you only want a synchronous API, use <a href=\"https://crates.io/crates/reqwest\" rel=\"nofollow noreferrer\">Reqwest</a> instead. It is built on top of Hyper:</p>\n\n<pre><code>extern crate reqwest;\n\nuse std::error::Error;\nuse reqwest::header::SetCookie;\n\nfn get_new_cookie() -&gt; Result&lt;String, Box&lt;Error&gt;&gt; {\n    let response = reqwest::get(\"http://www.cnn.com\")?;\n\n    let cookies = match response.headers().get::&lt;SetCookie&gt;() {\n        Some(cookies) =&gt; cookies.join(\",\"),\n        None =&gt; String::new(),\n    };\n\n    Ok(cookies)\n}\n\nfn main() {\n    println!(\"{:?}\", get_new_cookie());\n}\n</code></pre>\n"}], "owner": {"reputation": 3172, "user_id": 1206421, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/19dd8d6cbf16c4246914c10502fd2395?s=128&d=identicon&r=PG&f=1", "display_name": "serge1peshcoff", "link": "https://stackoverflow.com/users/1206421/serge1peshcoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1598, "favorite_count": 0, "accepted_answer_id": 47856629, "answer_count": 2, "score": 0, "last_activity_date": 1513524734, "creation_date": 1513502845, "last_edit_date": 1513523931, "question_id": 47853778, "link": "https://stackoverflow.com/questions/47853778/how-to-get-the-cookie-from-a-get-response", "title": "How to get the cookie from a GET response?", "body": "<p>I am writing a function that makes a GET request to a website and returns the response cookie:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate tokio_core;\n\nuse tokio_core::reactor::Core;\nuse hyper::Client;\nuse std::error::Error;\nuse hyper::header::Cookie;\nuse futures::future::Future;\n\nfn get_new_cookie() -&gt; Result&lt;String, Box&lt;Error&gt;&gt; {\n    println!(\"Getting cookie...\");\n    let core = Core::new()?;\n    let client = Client::new(&amp;core.handle());\n    println!(\"Created client\");\n\n    let uri = \"http://www.cnn.com\".parse().expect(\"Cannot parse url\");\n    println!(\"Parsed url\");\n    let response = client.get(uri).wait().expect(\"Cannot get url.\");\n    println!(\"Got response\");\n    let cookie = response\n        .headers()\n        .get::&lt;Cookie&gt;()\n        .expect(\"Cannot get cookie\");\n    println!(\"Cookie: {}\", cookie);\n\n    Ok(cookie)\n}\n\nfn main() {\n    println!(\"{:?}\", get_new_cookie());\n}\n</code></pre>\n\n<p>This doesn't work; it is stuck on the <code>client.get(...)</code> string. The output I'm getting is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Getting cookie...\nCreated client\nParsed url\n</code></pre>\n\n<p>and after that nothing happens.</p>\n\n<p>What am I doing wrong and how I can change it so it'd work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9670, "user_id": 4389078, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/CF1V9.jpg?s=128&g=1", "display_name": "Gregor Doroschenko", "link": "https://stackoverflow.com/users/4389078/gregor-doroschenko"}, "edited": false, "score": 0, "creation_date": 1513504130, "post_id": 47853504, "comment_id": 82671889, "body": "Please add code example."}, {"owner": {"reputation": 858, "user_id": 4384490, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5bb9221e46973b7af64381d3314e4067?s=128&d=identicon&r=PG&f=1", "display_name": "kumarmo2", "link": "https://stackoverflow.com/users/4384490/kumarmo2"}, "reply_to_user": {"reputation": 9670, "user_id": 4389078, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/CF1V9.jpg?s=128&g=1", "display_name": "Gregor Doroschenko", "link": "https://stackoverflow.com/users/4389078/gregor-doroschenko"}, "edited": false, "score": 0, "creation_date": 1513504314, "post_id": 47853504, "comment_id": 82671928, "body": "@GregorDoroschenko. Sorry for not doing that earlier. Done now. thanks"}, {"owner": {"reputation": 273, "user_id": 286021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8366e7b2d753db522f8ab5c0846807a4?s=128&d=identicon&r=PG", "display_name": "nelsonjchen", "link": "https://stackoverflow.com/users/286021/nelsonjchen"}, "edited": false, "score": 1, "creation_date": 1513507477, "post_id": 47853504, "comment_id": 82672663, "body": "Just curious. You got your answer. So, what documentation or search engine query were you looking or looking at that still referred to the existence of BitSet in stable? It might be helpful to note that for future Rust &quot;SEO&quot; of documentation or of their site."}, {"owner": {"reputation": 858, "user_id": 4384490, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5bb9221e46973b7af64381d3314e4067?s=128&d=identicon&r=PG&f=1", "display_name": "kumarmo2", "link": "https://stackoverflow.com/users/4384490/kumarmo2"}, "reply_to_user": {"reputation": 273, "user_id": 286021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8366e7b2d753db522f8ab5c0846807a4?s=128&d=identicon&r=PG", "display_name": "nelsonjchen", "link": "https://stackoverflow.com/users/286021/nelsonjchen"}, "edited": false, "score": 0, "creation_date": 1513507628, "post_id": 47853504, "comment_id": 82672693, "body": "@crazysim, Since rust gets a release in every 6 weeks, i thought maybe a newer version than mine, might be having stable API of BitSet."}, {"owner": {"reputation": 273, "user_id": 286021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8366e7b2d753db522f8ab5c0846807a4?s=128&d=identicon&r=PG", "display_name": "nelsonjchen", "link": "https://stackoverflow.com/users/286021/nelsonjchen"}, "edited": false, "score": 0, "creation_date": 1513752220, "post_id": 47853504, "comment_id": 82766847, "body": "My question is what documentation or mention you were referring to that did not mention it&#39;s deprecation."}], "answers": [{"tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 7, "last_activity_date": 1513523849, "last_edit_date": 1513523849, "creation_date": 1513506654, "answer_id": 47854202, "question_id": 47853504, "link": "https://stackoverflow.com/questions/47853504/how-do-i-use-stdcollectionsbitset-in-stable-rust/47854202#47854202", "title": "How do I use std::collections::BitSet in stable Rust?", "body": "<p>It seems that <code>BitSet</code> <a href=\"https://doc.rust-lang.org/1.3.0/std/collections/bit_set/struct.BitSet.html\" rel=\"noreferrer\">existed in Rust 1.3.0, which is very old</a>, but was already deprecated at that time and finally <a href=\"https://github.com/rust-lang/rust/commit/7850c8d0aa14cd561fcdce816c94532a3d54ff60\" rel=\"noreferrer\">removed by this commit</a>.</p>\n\n<p>Instead, you can use <a href=\"https://crates.io/crates/bit-set\" rel=\"noreferrer\"><code>bit-set</code> crate</a>, as suggested by the deprecation message above. There's also <a href=\"http://contain-rs.github.io/bit-set/bit_set/\" rel=\"noreferrer\">documentation</a>.</p>\n\n<pre><code>extern crate bit_set;\n\nuse bit_set::BitSet;\n\nfn main() {\n    let mut s = BitSet::new();\n    s.insert(32);\n    s.insert(37);\n    s.insert(3);\n    println!(\"s = {:?}\", s);\n}\n</code></pre>\n\n<p>You'll have to add a dependency to the <code>bit-set</code> crate in some way. It's easy if you're using Cargo:</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>[package]\nname = \"foo\"\nversion = \"0.1.0\"\nauthors = [\"Foo Bar &lt;foo@example.com&gt;\"]\n\n[dependencies]\nbit-set = \"0.4.0\" # Add this line\n</code></pre>\n\n<p>If you're using <a href=\"https://play.rust-lang.org/\" rel=\"noreferrer\">the official Rust Playground</a>, you can automatically use <code>bit-set</code>, because it is one of <a href=\"https://users.rust-lang.org/t/the-official-rust-playground-now-has-the-top-100-crates-available/11817\" rel=\"noreferrer\">the top 100 downloaded crates</a> or a dependency of one of them.</p>\n"}], "owner": {"reputation": 858, "user_id": 4384490, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/5bb9221e46973b7af64381d3314e4067?s=128&d=identicon&r=PG&f=1", "display_name": "kumarmo2", "link": "https://stackoverflow.com/users/4384490/kumarmo2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2431, "favorite_count": 0, "accepted_answer_id": 47854202, "answer_count": 1, "score": 7, "last_activity_date": 1513523849, "creation_date": 1513500243, "last_edit_date": 1513523779, "question_id": 47853504, "link": "https://stackoverflow.com/questions/47853504/how-do-i-use-stdcollectionsbitset-in-stable-rust", "title": "How do I use std::collections::BitSet in stable Rust?", "body": "<p>I am trying to use <code>BitSet</code> data structure, but it gives me a compile error saying it was not able to find the <code>BitSet.</code> Has <code>std::collections::BitSet</code> been released in the stable version?</p>\n\n<pre><code>use std::collections::BitSet;\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>Produces the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `std::collections::BitSet`\n --&gt; src/main.rs:1:5\n  |\n1 | use std::collections::BitSet;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^ no `BitSet` in `collections`\n</code></pre>\n"}, {"tags": ["rust", "unix-socket", "iron"], "owner": {"reputation": 3248, "user_id": 528588, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/aae4d666764ebe4d7165c792432cad49?s=128&d=identicon&r=PG", "display_name": "MajidTaheri", "link": "https://stackoverflow.com/users/528588/majidtaheri"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 170, "favorite_count": 0, "answer_count": 0, "score": 5, "last_activity_date": 1513524879, "creation_date": 1513497263, "last_edit_date": 1513524879, "question_id": 47853192, "link": "https://stackoverflow.com/questions/47853192/how-to-configure-iron-to-listen-to-a-unix-domain-socket", "title": "How to configure Iron to listen to a Unix Domain Socket?", "body": "<p>I have this simple example from <a href=\"http://ironframework.io\" rel=\"noreferrer\">ironframework.io</a>:</p>\n\n<pre><code>extern crate iron;\n\nuse iron::prelude::*;\nuse iron::status;\n\nfn main() {\n    fn hello_world(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n        Ok(Response::with((status::Ok, \"Hello World!\")))\n    }\n    // below code\n    let _server = Iron::new(hello_world).http(\"localhost:3000\").unwrap(); \n    println!(\"On 3000\");\n}\n</code></pre>\n\n<p>I want the server to listen a Unix Domain Socket (UDS).</p>\n"}, {"tags": ["rust", "match", "quadratic"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513488968, "post_id": 47852269, "comment_id": 82669309, "body": "Idiomatic Rust uses <code>snake_case</code> for identifiers. <code>solve_quadratic</code> not <code>solveQuadratic</code>."}, {"owner": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513506813, "post_id": 47852269, "comment_id": 82672506, "body": "@Shepmaster Good point. Luckily rls plugin for Visual Studio Code flagged this for me as well after I was able to compile it. :)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1513519752, "post_id": 47852269, "comment_id": 82675951, "body": "I suppose you&#39;re eventually going to replace <code>0.0</code> and <code>1.0</code> with calculated values. Be careful not to assume that, when <code>QuadraticResult::TwoRoots(x, y)</code> is returned, <code>x != y</code>. Even if <code>d</code> is greater than 0, <code>-b + d.sqrt()</code> and <code>-b - d.sqrt()</code> may still be the same. <a href=\"https://play.rust-lang.org/?gist=f739a13470238a96374b0b8826b82a88&amp;version=stable\" rel=\"nofollow noreferrer\">Here&#39;s an easy example</a>, but it could happen with finite roots too. You may want to return <code>Option&lt;(x1, x2)&gt;</code> and let the caller decide whether <code>x1</code> and <code>x2</code> are &quot;close enough&quot; to be considered a single root."}], "answers": [{"comments": [{"owner": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "edited": false, "score": 2, "creation_date": 1513487328, "post_id": 47852309, "comment_id": 82669084, "body": "Just wanted to add that I definitely prefer &#39;match&#39; than &#39;if/else&#39; statements in this case as the code looks much neater and readable IMHO."}, {"owner": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "edited": false, "score": 0, "creation_date": 1513509699, "post_id": 47852309, "comment_id": 82673138, "body": "Another thing came to mind. Is there any obvious performance difference between &#39;if/else&#39; and &#39;match&#39;?"}, {"owner": {"reputation": 1376, "user_id": 5190508, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/9a505583a1564c89608a5dc393580654?s=128&d=identicon&r=PG&f=1", "display_name": "S.R", "link": "https://stackoverflow.com/users/5190508/s-r"}, "reply_to_user": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "edited": false, "score": 0, "creation_date": 1579903529, "post_id": 47852309, "comment_id": 105935414, "body": "@dawid even if you will have any difference in performance - it will be not guarantee to stay the same on next version. You shouldn&#39;t bother about performance at this level if you aren&#39;t force to do. First is readability - optimization is compiler work. <a href=\"https://rust.godbolt.org/z/ZBZzRx\" rel=\"nofollow noreferrer\">Here you can check assemble code of match and if</a>"}], "tags": [], "owner": {"reputation": 25596, "user_id": 3140, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/84dbc773c808111cc4ce138bff33f482?s=128&d=identicon&r=PG", "display_name": "Jacob Krall", "link": "https://stackoverflow.com/users/3140/jacob-krall"}, "is_accepted": true, "score": 30, "last_activity_date": 1513486677, "creation_date": 1513486677, "answer_id": 47852309, "question_id": 47852269, "link": "https://stackoverflow.com/questions/47852269/can-i-use-and-in-match/47852309#47852309", "title": "Can I use &#39;&lt;&#39; and &#39;&gt;&#39; in match?", "body": "<p>You can use a <a href=\"https://doc.rust-lang.org/1.6.0/book/patterns.html#guards\" rel=\"noreferrer\">match guard</a>, but that feels more verbose than a plain <code>if</code> statement:</p>\n\n<pre><code>return match delta {\n    d if d &lt; 0 =&gt; QuadraticResult::None,\n    d if d &gt; 0 =&gt; QuadraticResult::TwoRoots(0.0, 1.0),\n    _   =&gt; QuadraticResult::OneRoot(0.0),\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "edited": false, "score": 0, "creation_date": 1513487066, "post_id": 47852313, "comment_id": 82669047, "body": "Thank you Simon. I will have to accept Jacob&#39;s answer as he was first :)"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "edited": false, "score": 0, "creation_date": 1513546673, "post_id": 47852313, "comment_id": 82684118, "body": "Oh no problem at all. I didn&#39;t see Jacobs answer ... hah, they&#39;re nearly identical too! I may as well remove mine."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": false, "score": 6, "last_activity_date": 1513486750, "creation_date": 1513486750, "answer_id": 47852313, "question_id": 47852269, "link": "https://stackoverflow.com/questions/47852269/can-i-use-and-in-match/47852313#47852313", "title": "Can I use &#39;&lt;&#39; and &#39;&gt;&#39; in match?", "body": "<p><a href=\"https://play.rust-lang.org/?gist=e4886743eea194d9777c0d0cae00763a&amp;version=stable\" rel=\"noreferrer\">You can</a>, but you'll want to create a variable binding when you do it and turn it into an actual expression:</p>\n\n<pre><code>match delta {\n    d if d &lt; 0.0 =&gt; QuadraticResult::None,\n    d if d &gt; 0.0 =&gt; QuadraticResult::TwoRoots(0.0, 1.0),\n    _ =&gt; QuadraticResult::OneRoot(0.0),\n}\n</code></pre>\n\n<p>I'm not sure this is any better than just splitting this into an <code>if</code> statement though.</p>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 18, "last_activity_date": 1513517276, "creation_date": 1513517276, "answer_id": 47855600, "question_id": 47852269, "link": "https://stackoverflow.com/questions/47852269/can-i-use-and-in-match/47855600#47855600", "title": "Can I use &#39;&lt;&#39; and &#39;&gt;&#39; in match?", "body": "<p>If you want to handle the three cases where some value is greater than, equal to or less than another, you can match on an <code>Ordering</code>, which you can obtain by calling <a href=\"https://doc.rust-lang.org/stable/std/cmp/trait.Ord.html#tymethod.cmp\" rel=\"noreferrer\"><code>cmp</code></a> (from the <a href=\"https://doc.rust-lang.org/stable/std/cmp/trait.Ord.html\" rel=\"noreferrer\"><code>Ord</code></a> trait) or <a href=\"https://doc.rust-lang.org/stable/std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" rel=\"noreferrer\"><code>partial_cmp</code></a> (from the <a href=\"https://doc.rust-lang.org/stable/std/cmp/trait.PartialOrd.html\" rel=\"noreferrer\"><code>PartialOrd</code></a> trait).</p>\n\n<pre><code>fn solve_quadratic(a: f32, b: f32, c: f32) -&gt; QuadraticResult {\n    let delta = b * b - 4.0 * a * c;\n    match delta.partial_cmp(&amp;0.0).expect(\"I don't like NaNs\") {\n        Ordering::Less =&gt; QuadraticResult::None,\n        Ordering::Greater =&gt; QuadraticResult::TwoRoots(0.0, 1.0),\n        Ordering::Equal =&gt; QuadraticResult::OneRoot(0.0),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 415, "user_id": 3316999, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000078978858/picture?type=large", "display_name": "dawid", "link": "https://stackoverflow.com/users/3316999/dawid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10266, "favorite_count": 3, "accepted_answer_id": 47852309, "answer_count": 3, "score": 22, "last_activity_date": 1513517276, "creation_date": 1513486079, "last_edit_date": 1513488928, "question_id": 47852269, "link": "https://stackoverflow.com/questions/47852269/can-i-use-and-in-match", "title": "Can I use &#39;&lt;&#39; and &#39;&gt;&#39; in match?", "body": "<p>I am trying to do a simple quadratic function that would return number of roots and their values via an enum:</p>\n\n<pre><code>enum QuadraticResult {\n    None,\n    OneRoot(f32),\n    TwoRoots(f32, f32),\n}\n\nfn solveQuadratic(a: f32, b: f32, c: f32) -&gt; QuadraticResult {\n    let delta = b * b - 4.0 * a * c;\n    match delta {\n        &lt; 0 =&gt; return QuadraticResult::None,\n        &gt; 0 =&gt; return QuadraticResult::TwoRoots(0.0, 1.0),\n        _ =&gt; return QuadraticResult::OneRoot(0.0),\n    }\n}\n</code></pre>\n\n<p>This doesn't compile as it complains about '&lt;' and '>'. Is there a way to achieve this with <code>match</code> or do I need to use <code>if</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1513463471, "post_id": 47850433, "comment_id": 82665516, "body": "You can use <code>fn f(&amp;mut (ref mut x, ref mut y): &amp;mut(i32, i32)) -&gt; &amp;(i32, i32)</code> if you want to \u2013 not sure whether this is particularly readable."}], "answers": [{"comments": [{"owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "edited": false, "score": 0, "creation_date": 1513497028, "post_id": 47851092, "comment_id": 82670589, "body": "Exactly the information I was looking for. Thank You."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1513469126, "creation_date": 1513469126, "answer_id": 47851092, "question_id": 47850433, "link": "https://stackoverflow.com/questions/47850433/how-to-use-destructuring-to-handle-tuples-readably/47851092#47851092", "title": "How to use destructuring to handle tuples readably?", "body": "<blockquote>\n  <p>Can readability like this be achieved?</p>\n</blockquote>\n\n<p>No, not in current Rust or in the planned future. <em>Syntax</em> similar to what you want already exists:</p>\n\n<pre><code>fn f(t @ &amp;mut (ref x, ref y): &amp;mut (i32, i32)) -&gt; &amp;(i32, i32)\n</code></pre>\n\n<p>However, it isn't allowed:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0007]: cannot bind by-move with sub-bindings\n --&gt; src/main.rs:3:6\n  |\n3 | fn f(t @ &amp;mut (ref x, ref y): &amp;mut (i32, i32)) -&gt; &amp;(i32, i32) {\n  |      ^^^^^^^^^^^^^^^^^^^^^^^ binds an already bound by-move value by moving it\n\nerror[E0303]: pattern bindings are not allowed after an `@`\n --&gt; src/main.rs:3:16\n  |\n3 | fn f(t @ &amp;mut (ref x, ref y): &amp;mut (i32, i32)) -&gt; &amp;(i32, i32) {\n  |                ^^^^^ not allowed after `@`\n\nerror[E0303]: pattern bindings are not allowed after an `@`\n --&gt; src/main.rs:3:23\n  |\n3 | fn f(t @ &amp;mut (ref x, ref y): &amp;mut (i32, i32)) -&gt; &amp;(i32, i32) {\n  |                       ^^^^^ not allowed after `@`\n</code></pre>\n\n<p>A tricky aspect of such code is that you'd have <em>mutable aliasing</em> \u2014 you can change the same value through both <code>t.0</code> and <code>x</code>. This is disallowed in Rust.</p>\n\n<p>There's a slim possibility that the highly-anticipated <em>non-lexical lifetimes</em> (NLL) might allow the compiler to better reason about these cases, but I've not heard people taking about this specific aspect.</p>\n\n<hr>\n\n<p>If you are willing to be flexible, there are some options:</p>\n\n<pre><code>fn f(t: &amp;mut (i32, i32)) -&gt; &amp;(i32, i32) {\n    {\n        let &amp;mut (ref mut x, ref mut y) = t;\n        *x = *x + 11;\n        *y = *y * 10;\n    }\n    t\n}\n</code></pre>\n\n<p>In nightly Rust, this can be simplified:</p>\n\n<pre><code>#![feature(match_default_bindings)]\n\nfn f(t: &amp;mut (i32, i32)) -&gt; &amp;(i32, i32) {\n    {\n        let (x, y) = t;\n        *x = *x + 11;\n        *y = *y * 10;\n    }\n    t\n}\n</code></pre>\n\n<p>As I understand it, both of these cases should be improved by NLL.</p>\n\n<p>Since you are taking and returning the same value reference, you could just stop returning it:</p>\n\n<pre><code>fn f(&amp;mut (ref mut x, ref mut y): &amp;mut (i32, i32)) {\n    *x = *x + 11;\n    *y = *y * 10;\n}\n</code></pre>\n\n<p>Which can likewise be improved on in nightly Rust:</p>\n\n<pre><code>#![feature(match_default_bindings)]\n\nfn f((x, y): &amp;mut (i32, i32)) {\n    *x = *x + 11;\n    *y = *y * 10;\n}\n</code></pre>\n"}], "owner": {"reputation": 6491, "user_id": 1714997, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/44565e25a9f92a342de42b050e14aee5?s=128&d=identicon&r=PG", "display_name": "Dominykas Mostauskis", "link": "https://stackoverflow.com/users/1714997/dominykas-mostauskis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 47851092, "answer_count": 1, "score": 0, "last_activity_date": 1513489117, "creation_date": 1513462525, "last_edit_date": 1513489117, "question_id": 47850433, "link": "https://stackoverflow.com/questions/47850433/how-to-use-destructuring-to-handle-tuples-readably", "title": "How to use destructuring to handle tuples readably?", "body": "<p>I have this code:</p>\n\n<pre><code>fn f(x: &amp;mut (i32, i32)) -&gt; &amp;(i32, i32) {\n    x.1 = x.1 + 11;\n    x.0 = x.0 * 10;\n    x\n}\n</code></pre>\n\n<p>I would prefer:</p>\n\n<pre><code>fn f((x, y) as t: &amp;mut (i32, i32)) -&gt; &amp;(i32, i32) {\n    x = x + 11;\n    y = y * 10;\n    t\n}\n</code></pre>\n\n<p>Can readability like this be achieved?</p>\n"}, {"tags": ["rust", "polymorphism"], "comments": [{"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 3, "creation_date": 1513464216, "post_id": 47850312, "comment_id": 82665669, "body": "You can use Trait objects for exactly this: <code>let mut s: Box&lt;Shape&gt;</code> and then instantiate it with <code>s = Box::new(Circle::new())</code> for example"}], "owner": {"reputation": 127, "user_id": 3777628, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ZmxDB.jpg?s=128&g=1", "display_name": "MaxStrange", "link": "https://stackoverflow.com/users/3777628/maxstrange"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1513465255, "answer_count": 0, "score": 1, "last_activity_date": 1513461432, "creation_date": 1513461432, "question_id": 47850312, "link": "https://stackoverflow.com/questions/47850312/polymorphism-in-rust-canonical-way", "closed_reason": "Duplicate", "title": "Polymorphism in Rust: Canonical way", "body": "<p>What is the canonical way to do the following in Rust?</p>\n\n<pre><code>let s: Shape;\nif something {\n    s = Circle::new();\n} else {\n    s = Square::new();\n}\n</code></pre>\n\n<p>The way that seems most obvious to me:</p>\n\n<pre><code>use std::env;\n\ntrait Shape {\n    fn area(&amp;self) -&gt; f32;\n}\n\nstruct Circle {\n    rad: f32,\n}\n\nimpl Circle {\n    pub fn new() -&gt; Circle {\n        Circle {\n            rad: 5.0,\n        }\n    }\n}\n\nimpl Shape for Circle {\n    fn area(&amp;self) -&gt; f32 {\n        self.rad * self.rad * 3.14159\n    }\n}\n\nstruct Square {\n    len: f32,\n}\n\nimpl Square {\n    pub fn new() -&gt; Square {\n        Square {\n            len: 5.0,\n        }\n    }\n}\n\nimpl Shape for Square {\n    fn area(&amp;self) -&gt; f32 {\n        self.len * self.len\n    }\n}\n\nfn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();\n\n    let s: Shape;\n    if args.len() &gt; 1 {\n        s = Circle::new();\n    } else {\n        s = Square::new();\n    }\n    println!(\"Area: {}\", s.area());\n}\n</code></pre>\n\n<p>Results in:</p>\n\n<pre><code>error[E0277]: the trait bound `Shape: std::marker::Sized` is not satisfied\n --&gt; src/main.rs:46:9\n   |\n46 |     let s: Shape;\n   |         ^ `Shape` does not have a constant size known at compile-time\n   |\n</code></pre>\n\n<p>In general, Circle and Square may indeed have different sizes, so we really <strong>can't</strong> know what size 's' will be at compile time.</p>\n\n<p>This question <a href=\"https://stackoverflow.com/questions/24363369/polymorphism-in-rust\">Polymorphism in Rust</a> would seem to indicate that you need to write a wrapper struct (called ShapeStruct in this example), which takes a generic and where you break out each function that the trait implements like:</p>\n\n<pre><code>struct ShapeStruct&lt;T&gt; {\n    shape: T,\n}\n\nimpl&lt;T: Shape&gt; ShapeStruct&lt;T&gt; {\n    fn area(&amp;self) -&gt; f32 {\n        self.shape.area()\n    }\n}\n</code></pre>\n\n<p>But this would result in a lot of boilerplate - each function that the trait declares would need a break out like 'area' is broken out above. Is there no better way?</p>\n"}, {"tags": ["parsing", "rust", "nom"], "comments": [{"owner": {"reputation": 1452, "user_id": 203955, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed9901b9b80743c05aedf58b4f4926dd?s=128&d=identicon&r=PG", "display_name": "G&#233;al", "link": "https://stackoverflow.com/users/203955/g%c3%a9al"}, "edited": false, "score": 0, "creation_date": 1513499397, "post_id": 47850301, "comment_id": 82671002, "body": "what is your input type? Is it not <code>&amp;str</code>? Or do you separate the text in a list of tokens that you then want to process with nom?"}, {"owner": {"reputation": 129, "user_id": 3931121, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cb5e41cd2593b7227edc616b01b3aa6?s=128&d=identicon&r=PG&f=1", "display_name": "candronikos", "link": "https://stackoverflow.com/users/3931121/candronikos"}, "reply_to_user": {"reputation": 1452, "user_id": 203955, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed9901b9b80743c05aedf58b4f4926dd?s=128&d=identicon&r=PG", "display_name": "G&#233;al", "link": "https://stackoverflow.com/users/203955/g%c3%a9al"}, "edited": false, "score": 0, "creation_date": 1513502924, "post_id": 47850301, "comment_id": 82671654, "body": "I figured out what I was doing wrong. I assumed that the output type of one parser was the input of a parent parser.  What really happens is that all parsers can expect the same input type and return whatever they like. The generated object (which is an AST) is returned and manipulated in the end.  I literally figured that out 5 mins after posting this."}, {"owner": {"reputation": 18405, "user_id": 1145388, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/HZ9CL.png?s=128&g=1", "display_name": "Stephen Ostermiller", "link": "https://stackoverflow.com/users/1145388/stephen-ostermiller"}, "edited": false, "score": 0, "creation_date": 1513507534, "post_id": 47850301, "comment_id": 82672672, "body": "I&#39;m voting to close this question as off-topic because you say you figured out the problem, but didn&#39;t post the solution as an answer, rather you posted it as a comment."}], "answers": [{"tags": [], "owner": {"reputation": 129, "user_id": 3931121, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cb5e41cd2593b7227edc616b01b3aa6?s=128&d=identicon&r=PG&f=1", "display_name": "candronikos", "link": "https://stackoverflow.com/users/3931121/candronikos"}, "is_accepted": false, "score": 0, "last_activity_date": 1513567969, "creation_date": 1513567969, "answer_id": 47861801, "question_id": 47850301, "link": "https://stackoverflow.com/questions/47850301/does-it-make-any-sense-to-use-nom-to-process-custom-enum-types/47861801#47861801", "title": "Does it make any sense to use `nom` to process custom enum types?", "body": "<p>For what it's worth...</p>\n\n<p>I assumed that the output type of one parser was the input of a parent parser. What really happens is that all parsers can expect the same input type and return whatever they like. The generated object (which is an AST) is returned and manipulated in the end.</p>\n"}], "owner": {"reputation": 129, "user_id": 3931121, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9cb5e41cd2593b7227edc616b01b3aa6?s=128&d=identicon&r=PG&f=1", "display_name": "candronikos", "link": "https://stackoverflow.com/users/3931121/candronikos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 187, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1513567969, "creation_date": 1513461311, "last_edit_date": 1513465816, "question_id": 47850301, "link": "https://stackoverflow.com/questions/47850301/does-it-make-any-sense-to-use-nom-to-process-custom-enum-types", "title": "Does it make any sense to use `nom` to process custom enum types?", "body": "<p>I am attempting to implement a parser for a simple query language. The goal is to generate <code>operations</code> from the text and then evaluate them before passing them up the tree. If I understand correctly, I'll have to implement some of the nom traits (<code>InputLength</code>, <code>InputTake</code>, <code>Slice</code>).</p>\n\n<p>Part way through implementing the <code>InputTake</code> trait, I realize that I'm expected to return subslices of the enums which represent my query operations where a split may be made part way through an identifier. For example, I may parse an identifier <code>name_of_var</code> and this <code>take_split()</code> method could produce 2 slices which doesn't make sense to me.</p>\n\n<p>What should I be doing here? I don't like the idea of slicing a bool/number since they only make sense as a whole.</p>\n\n<p>What do you think about returning <code>None</code> in the case where I consider a byte slice invalid?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513465644, "post_id": 47848580, "comment_id": 82665943, "body": "<i>code like this worked before</i> \u2014 no, it has never worked in any stable Rust version. I even checked in Rust 1.0.0."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513496447, "post_id": 47848580, "comment_id": 82670522, "body": "@Shepmaster yes, i umderstand it after reasing the accepted answer."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1513448052, "creation_date": 1513448052, "answer_id": 47848647, "question_id": 47848580, "link": "https://stackoverflow.com/questions/47848580/rust-template-argument-parser-seems-to-be-broken/47848647#47848647", "title": "Rust template argument parser seems to be broken", "body": "<p>You must use the <a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"nofollow noreferrer\">function trait</a>:</p>\n\n<pre><code>fn f&lt;F: Fn()&gt;(f: F) {\n}\n</code></pre>\n\n<p><code>fn</code> is a <a href=\"https://doc.rust-lang.org/std/primitive.fn.html\" rel=\"nofollow noreferrer\">function pointer</a>, not a trait.</p>\n\n<p>Note that you can also write this:</p>\n\n<pre><code>fn f(f: fn()) {\n}\n</code></pre>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 47848647, "answer_count": 1, "score": 0, "last_activity_date": 1513448052, "creation_date": 1513447648, "question_id": 47848580, "link": "https://stackoverflow.com/questions/47848580/rust-template-argument-parser-seems-to-be-broken", "title": "Rust template argument parser seems to be broken", "body": "<p>I am pretty sure a code like this worked before:</p>\n\n<pre><code>fn f&lt;F: fn()&gt;(f: F) {\n}\n</code></pre>\n\n<p>However, now it gives the following error:</p>\n\n<pre><code>error: expected one of `(`, `,`, `=`, `&gt;`, `?`, `for`, lifetime, or path, found `fn`\n  --&gt; src/main.rs:96:13\n   |\n96 |     fn f&lt;F: fn()&gt;(f: F) {\n   |            -^^ unexpected token\n   |            |\n   |            expected one of 8 possible tokens here\n</code></pre>\n\n<p>Note that this compiles fine:</p>\n\n<pre><code>fn f(f: fn()) {\n\n}\n</code></pre>\n"}, {"tags": ["string", "split", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1513445082, "post_id": 47848189, "comment_id": 82660676, "body": "If you want a kind of lexer, do not do like that. There are some good crates that do a great job at making this."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1513446627, "post_id": 47848189, "comment_id": 82661111, "body": "I haven&#39;t found a function in <code>std</code> that does this, but you might be able to build it yourself using <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#method.match_indices\" rel=\"nofollow noreferrer\"><code>str::match_indices</code></a>."}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1513465446, "answer_count": 0, "score": 1, "last_activity_date": 1513444816, "creation_date": 1513444816, "question_id": 47848189, "link": "https://stackoverflow.com/questions/47848189/retain-the-elements-split-over", "closed_reason": "Duplicate", "title": "Retain the Elements Split Over", "body": "<p>I can split a <code>&amp;str</code> like so:</p>\n\n<pre><code>let v: Vec&lt;&amp;str&gt; = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n</code></pre>\n\n<p>Is there a way I can split a <code>&amp;str</code> while retaining the elements split over in the iterator? For example:</p>\n\n<pre><code>let v: Vec&lt;&amp;str&gt; = \"Mary had a little lamb\".split_retain(' ').collect();\nassert_eq!(v, [\"Mary\", \" \", \"had\", \" \", \"a\", \" \", \"little\", \" \", \"lamb\"]);\n</code></pre>\n\n<p>This <code>iter</code> isn't very useful when we are only splitting over a single <code>char</code>, but it becomes useful when we have a more complex split such as:</p>\n\n<pre><code>let mut iter = some_str.split(|c: char| c.is_whitespace() || c == ':' || c == ',' || c == '(' || c == ')')\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "is_accepted": true, "score": 15, "last_activity_date": 1513366276, "last_edit_date": 1513366276, "creation_date": 1513365998, "answer_id": 47838741, "question_id": 47838596, "link": "https://stackoverflow.com/questions/47838596/how-do-i-have-a-structs-field-be-an-iterator-over-t-elements/47838741#47838741", "title": "How do I have a struct&#39;s field be an `Iterator` over `T` elements?", "body": "<p>In Rust, <code>Iterator</code> (more specifically <code>Iterator&lt;Item = T&gt;</code> where <code>T</code> is the type yielded when iterating) is a <em>trait</em>. Types that represent iterators implement this trait.</p>\n\n<p>This is an instance of the more general question \"how can I store a value of a trait in a struct?\". I deliberately phrased the question in an imprecise way -- what we actually want is to store a value of a <em>type implementing the trait</em>, and there are broadly two ways to do that.</p>\n\n<h1>Put it in a box</h1>\n\n<p>The easiest way is to use a <code>Box&lt;Iterator&lt;Item = T&gt;&gt;</code>. The <code>Box</code> represents an owned pointer, and when you have a pointer to a trait object, Rust creates a \"fat pointer\" including runtime information about the type. This way the concrete type of the iterator is not known at compile time.</p>\n\n<p>The definition looks like this:</p>\n\n<pre><code>struct IteratorHolder {\n    iter: Box&lt;Iterator&lt;Item = u32&gt;&gt;,\n}\n</code></pre>\n\n<p>And usage:</p>\n\n<pre><code>let ih = IteratorHolder { iter: Box::new(0..10) };\nprintln!(\"{:?}\", ih.iter.collect::&lt;Vec&lt;_&gt;&gt;());\n</code></pre>\n\n<h1>Generics</h1>\n\n<p>Another way to do the same thing, while avoiding allocating any boxes on the heap, is to use a generic struct. This way we will have some type implementing <code>Iterator&lt;Item = T&gt;</code>, and what it is concretely will be determined at compile time.</p>\n\n<p>Definition:</p>\n\n<pre><code>struct IteratorHolder&lt;I: Iterator&lt;Item = u32&gt;&gt; {\n    iter: I,\n}\n</code></pre>\n\n<p>And usage:</p>\n\n<pre><code>let ih = IteratorHolder { iter: 0..10 };\nprintln!(\"{:?}\", ih.iter.collect::&lt;Vec&lt;_&gt;&gt;());\n</code></pre>\n"}], "owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3284, "favorite_count": 0, "accepted_answer_id": 47838741, "answer_count": 1, "score": 9, "last_activity_date": 1513366276, "creation_date": 1513365346, "last_edit_date": 1513366161, "question_id": 47838596, "link": "https://stackoverflow.com/questions/47838596/how-do-i-have-a-structs-field-be-an-iterator-over-t-elements", "title": "How do I have a struct&#39;s field be an `Iterator` over `T` elements?", "body": "<p>I want a struct's field to be an <code>Iterator</code> over <code>T</code> elements, however <code>Iterator</code> doesn't have a type parameter. I know I'm trying to do something fundamentally wrong, what though?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1513343680, "post_id": 47830854, "comment_id": 82629125, "body": "Note that checking that all characters are ascii is O(n) just like <code>s.chars().count()</code>, so unless you need the check for another reason, you might as well use <code>s.chars().count()</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1513353379, "post_id": 47830854, "comment_id": 82635074, "body": "Complexities should be documented for all datatypes.  Where they are missing, feel free to send a PR or file an issue.  I don&#39;t think a centralized list with all complexities is the right place for this; this only makes sense for collections, where you need an overview to decide which collection to use."}], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1513344127, "post_id": 47832140, "comment_id": 82629374, "body": "To be precise, <code>str::len</code> determines the length in code units (just like <code>String::len</code>). To get the length in code points, you need to call <code>str::chars::count</code> which is O(1) (same as for a <code>String</code>)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1513349627, "post_id": 47832140, "comment_id": 82632731, "body": "@Jmb I know you mean O(n), but just figured I&#39;d mention it in case somebody else came along and was confused :)"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 7, "last_activity_date": 1513339838, "creation_date": 1513339838, "answer_id": 47832140, "question_id": 47830854, "link": "https://stackoverflow.com/questions/47830854/where-do-i-find-the-complexity-of-an-operation/47832140#47832140", "title": "Where do I find the complexity of an operation?", "body": "<p>Other than the <a href=\"https://doc.rust-lang.org/stable/std/collections/index.html#performance\" rel=\"noreferrer\">performance section on collections</a> I don't think there currently is a common list like the Python one you referenced.</p>\n\n<p>As for <code>str</code>, determining its length is an O(1) operation, because <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#representation\" rel=\"noreferrer\">a string slice consists of a pointer and length</a>:</p>\n\n<pre><code>// We can re-build a str out of ptr and len. This is all unsafe because\n// we are responsible for making sure the two components are valid:\nlet s = unsafe {\n    // First, we build a &amp;[u8]...\n    let slice = slice::from_raw_parts(ptr, len);\n\n    // ... and then convert that slice into a string slice\n    str::from_utf8(slice)\n};\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 3, "last_activity_date": 1513344371, "creation_date": 1513344371, "answer_id": 47833334, "question_id": 47830854, "link": "https://stackoverflow.com/questions/47830854/where-do-i-find-the-complexity-of-an-operation/47833334#47833334", "title": "Where do I find the complexity of an operation?", "body": "<p><code>String</code> and <code>str</code> offer the same complexity guarantees for all actions. In fact, most operations on <code>String</code> (including <code>chars()</code>) <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#deref-methods\" rel=\"nofollow noreferrer\">are actually operations on <code>str</code></a> that use the implicit conversion from <code>String</code> to <code>str</code> (that conversion is free since they share the same low-level representation).</p>\n"}], "owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 603, "favorite_count": 0, "accepted_answer_id": 47832140, "answer_count": 2, "score": 10, "last_activity_date": 1513350422, "creation_date": 1513335320, "last_edit_date": 1513350422, "question_id": 47830854, "link": "https://stackoverflow.com/questions/47830854/where-do-i-find-the-complexity-of-an-operation", "title": "Where do I find the complexity of an operation?", "body": "<p>In <a href=\"https://stackoverflow.com/a/46290728/1994377\">this answer</a> it is mentioned that for a string doing \n<code>s.chars().count()</code> to get the number of characters is an O(n) operation.\nFor simple ASCII strings getting the number of bytes using <code>s.len()</code> works as well. When using a check to make sure that all those bytes are actually ASCII this is probably safe.</p>\n\n<p>I want to know what the complexity of that operation is. It might still have to find the end of the string like in C and be O(n).</p>\n\n<p>I tried to look it up and found the <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.len\" rel=\"nofollow noreferrer\">documentation of the <code>std::string::String</code></a>,\n which applies for appropriate <code>s</code>. However it doesn't state its complexity. Looking at the source it just does this <code>self.vec.len()</code>. So we go to look at the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.len\" rel=\"nofollow noreferrer\">vector docs</a> and find that this simply returns a stored length <code>self.len</code> meaning that this is indeed an O(1) operation.</p>\n\n<p>That was a lot of work though. Now what about the case that <code>s</code> is a <a href=\"https://doc.rust-lang.org/std/str/\" rel=\"nofollow noreferrer\">std::str</a>? I tried to do the same but got stuck in <a href=\"http://www.cs.brandeis.edu/~cs146a/rust/doc-02-21-2015/nightly/src/core/str/mod.rs.html#1327-1367\" rel=\"nofollow noreferrer\">this mess</a>.</p>\n\n<p>Is there a more easily accessible ressource for operation complexities in Rust?</p>\n\n<p>Something like this <a href=\"https://wiki.python.org/moin/TimeComplexity\" rel=\"nofollow noreferrer\">list for Python</a> would be great.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "reply_to_user": {"reputation": 385, "user_id": 1589140, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EoH4c.jpg?s=128&g=1", "display_name": "Diomedes Andreou", "link": "https://stackoverflow.com/users/1589140/diomedes-andreou"}, "edited": false, "score": 0, "creation_date": 1513331596, "post_id": 47829646, "comment_id": 82621998, "body": "@DiomedesAndreou I searched for &quot;how do I turn a string into a list of chars&quot; and couldn&#39;t find it so I asked. I think others might do the same so why don&#39;t you provide that as an answer?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513332677, "post_id": 47829646, "comment_id": 82622682, "body": "I wonder why you need to index it? Maybe this is a XY problem. You have so much tool in the std lib to deal with strings that I cannot see any reason to look for a random access to strings."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1513336426, "post_id": 47829646, "comment_id": 82625027, "body": "Which day? ----"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513338558, "post_id": 47829646, "comment_id": 82626246, "body": "I am at work, the company blocks chats. I ask the question, because maybe your problem can be solved without indexing the chars."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1513352492, "post_id": 47829722, "comment_id": 82634516, "body": "If you want a <code>Vec&lt;&amp;str&gt;</code> like <code>split(&quot;&quot;)</code> would give you, but you don&#39;t want the empty strings at beginning and end, use <code>split_terminator(&quot;&quot;).skip(1)</code>"}], "tags": [], "owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "is_accepted": false, "score": 9, "last_activity_date": 1513350914, "last_edit_date": 1513350914, "creation_date": 1513331538, "answer_id": 47829722, "question_id": 47829646, "link": "https://stackoverflow.com/questions/47829646/how-do-i-convert-a-string-to-a-list-of-chars/47829722#47829722", "title": "How do I convert a string to a list of chars?", "body": "<p>I've already come to this solution:</p>\n\n<pre><code>let chars: Vec&lt;char&gt; = input.chars().collect();\n</code></pre>\n\n<p>In a comment somebody suggested using <code>.split(\"\")</code> but it seems to be implemented in a way that is annoying for this case:</p>\n\n<pre><code>println!(\"{:?}\", \"abc\".split(\"\").collect::&lt;Vec&lt;&amp;str&gt;&gt;());\n</code></pre>\n\n<p>gives <code>[\"\", \"a\", \"b\", \"c\", \"\"]</code></p>\n"}, {"comments": [{"owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "edited": false, "score": 2, "creation_date": 1513331718, "post_id": 47829753, "comment_id": 82622083, "body": "You can also call chars() on the str and leave out the to_string()."}], "tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": true, "score": 42, "last_activity_date": 1513350948, "last_edit_date": 1513350948, "creation_date": 1513331656, "answer_id": 47829753, "question_id": 47829646, "link": "https://stackoverflow.com/questions/47829646/how-do-i-convert-a-string-to-a-list-of-chars/47829753#47829753", "title": "How do I convert a string to a list of chars?", "body": "<p>Use the <code>chars</code> method on <code>String</code> or <code>str</code>:</p>\n\n<pre><code>fn main() {\n    let s = \"Hello world!\";\n    let char_vec: Vec&lt;char&gt; = s.chars().collect();\n    for c in char_vec {\n        println!(\"{}\", c);\n    }\n}\n</code></pre>\n\n<p>Here you have a <a href=\"https://play.rust-lang.org/?gist=d1bc6f638e29abad0b26ea7428a9aafe&amp;version=stable\" rel=\"noreferrer\">live example</a></p>\n"}, {"comments": [{"owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "edited": false, "score": 0, "creation_date": 1513417090, "post_id": 47834011, "comment_id": 82652739, "body": "Interesting idea. I had something similar for the first part of the question but thought that treating the beginning and end differently in this way was a bit messy. In the second part the offset is different though and this becomes infeasible."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1513353167, "last_edit_date": 1513353167, "creation_date": 1513346783, "answer_id": 47834011, "question_id": 47829646, "link": "https://stackoverflow.com/questions/47829646/how-do-i-convert-a-string-to-a-list-of-chars/47834011#47834011", "title": "How do I convert a string to a list of chars?", "body": "<p>Since you are trying to solve the first day of Advent of Code, I'm assuming that you need to compare two consecutive characters and update an accumulator depending on whether the characters are the same. You can do that without indexing by using the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold\" rel=\"nofollow noreferrer\"><code>fold</code></a> function on <code>chars</code>. Something like this (untested):</p>\n\n<pre><code>fn example(s: &amp;str) -&gt; u32 {\n    let mut i = s.chars()\n        .map(|c| c.to_digit(10).expect(\"Invalid input: Non-digit found!\"));\n    if let Some(first) = i.next() {\n        let (tot, last) = i.fold((0, first), |acc, x| {\n            let (tot, prev) = acc;\n            if prev == x {\n                (tot + prev, x)\n            } else {\n                (tot, x)\n            }\n        });\n        if last == first {\n            tot + last\n        } else {\n            tot\n        }\n    } else {\n        0\n    }\n}\n</code></pre>\n\n<p>The <code>fold</code> iterator method allows you to walk a value over all the iterator items updating that value at each step. Here the value is a tuple containing the accumulated result and the value of the previous digit. We initialize it with some initial result and the value of the first character. Then at each step we compare the current character with the previous one taken from the current value, update the accumulated result depending on the result of the comparison and return a new value with the updated accumulator and the current character.</p>\n\n<p>The <code>fold</code> method returns the last value, which in our case contains the accumulated result and the last character, at which point you may check if the last character is the same as the first one and update the result if you need to.</p>\n"}], "owner": {"reputation": 5926, "user_id": 1994377, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/TegVp.jpg?s=128&g=1", "display_name": "Sarien", "link": "https://stackoverflow.com/users/1994377/sarien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 20697, "favorite_count": 3, "accepted_answer_id": 47829753, "answer_count": 3, "score": 25, "last_activity_date": 1513353167, "creation_date": 1513331281, "last_edit_date": 1513350846, "question_id": 47829646, "link": "https://stackoverflow.com/questions/47829646/how-do-i-convert-a-string-to-a-list-of-chars", "title": "How do I convert a string to a list of chars?", "body": "<p>Since a string supports iteration but not indexing, I would like to convert a string into a list of chars. I have <code>\"abc\"</code> and I want <code>['a', 'b', 'c']</code>.</p>\n\n<p>It can be any type as long as I can index into it. A <code>Vec&lt;char&gt;</code> or a <code>[char; 3]</code> would be fine, other ideas would also be interesting!</p>\n\n<p>Faster would be better since I am dealing with very long strings. A version that is more efficient when assuming that the string is ASCII would also be cool.</p>\n"}, {"tags": ["ios", "xcode", "rust", "lldb"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513326467, "post_id": 47825888, "comment_id": 82619102, "body": "Maybe there is a vscode plugin for IOS development?"}, {"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "edited": false, "score": 0, "creation_date": 1513907704, "post_id": 47825888, "comment_id": 82839403, "body": "I don&#39;t know about iOS, but on macOS it just works. Have you tried building Rust library with debug symbols and linking it into the iOS project?"}, {"owner": {"reputation": 76, "user_id": 6756663, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZrRxE.jpg?s=128&g=1", "display_name": "Michael.lai", "link": "https://stackoverflow.com/users/6756663/michael-lai"}, "edited": false, "score": 0, "creation_date": 1545982426, "post_id": 47825888, "comment_id": 94748302, "body": "It works with Xcode 9. But we just use Rust to write a multimedia SDK not the entire app like calling UIKit from Rust."}, {"owner": {"reputation": 1763, "user_id": 788488, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/135a741141d72d3374028e2c6bb77114?s=128&d=identicon&r=PG", "display_name": "meisel", "link": "https://stackoverflow.com/users/788488/meisel"}, "edited": false, "score": 0, "creation_date": 1546476779, "post_id": 47825888, "comment_id": 94867214, "body": "Were you able to get rust syntax highlighting?"}], "owner": {"reputation": 1763, "user_id": 788488, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/135a741141d72d3374028e2c6bb77114?s=128&d=identicon&r=PG", "display_name": "meisel", "link": "https://stackoverflow.com/users/788488/meisel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 320, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1513440143, "creation_date": 1513312610, "last_edit_date": 1513440143, "question_id": 47825888, "link": "https://stackoverflow.com/questions/47825888/is-there-a-way-to-use-xcodes-graphical-debugger-with-an-ios-app-made-with-rust", "title": "Is there a way to use Xcode&#39;s graphical debugger with an iOS app made with Rust?", "body": "<p>I want to set breakpoints at arbitrary lines so I can step into, step over, print out LLDB messages, etc...</p>\n\n<p>If there's no way, how hard would it be to implement something myself or to use an alternative IDE that can communicate with an iPhone?</p>\n"}, {"tags": ["parameters", "rust", "idioms"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1513351220, "last_edit_date": 1513351220, "creation_date": 1513326884, "answer_id": 47828524, "question_id": 47825777, "link": "https://stackoverflow.com/questions/47825777/what-is-the-idiomatic-way-to-reassign-parameter-bindings/47828524#47828524", "title": "What is the idiomatic way to reassign parameter bindings?", "body": "<p>The first solution is better. An immutable binding is always better than a mutable one when possible. That is why Rust's bindings are immutable by default and why you have to type an additional keyword to have a variable like in most procedural languages.</p>\n\n<p>When you use mutable variable, you can accidentally change the value:</p>\n\n<pre><code>fn foo(mut i1: u32) {\n    i1 = i1.count_ones();\n    let mut i2 = 0_u32;\n\n    // Some lines\n\n    i1 = 42; // Oops, I wrote `i1` instead of `i2`\n}\n</code></pre>\n\n<p>If you use the immutable version, this cannot happen:</p>\n\n<pre><code>fn foo(i1: u32) {\n    let i1 = i1.count_ones();\n    let mut i2 = 0_u32;\n\n    // Some lines\n\n    i1 = 42; // error[E0384]: re-assignment of immutable variable `i1`\n}\n</code></pre>\n\n<p>You need to use a mutable variable only when you have to feed it to another scope for modification purpose:</p>\n\n<pre><code>fn main() {\n    let mut to_be_modified = 123;\n\n    {\n        // do something in another scope\n        to_be_modified = 456;\n    }\n\n    // in another function\n    foo(&amp;mut to_be_modified);\n}\n\nfn foo(i: &amp;mut i32) {\n    *i = 789;\n}\n</code></pre>\n"}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "accepted_answer_id": 47828524, "answer_count": 1, "score": 3, "last_activity_date": 1513351220, "creation_date": 1513311647, "last_edit_date": 1513351165, "question_id": 47825777, "link": "https://stackoverflow.com/questions/47825777/what-is-the-idiomatic-way-to-reassign-parameter-bindings", "title": "What is the idiomatic way to reassign parameter bindings?", "body": "<p>Sometimes I reassign parameter bindings because the original binding is no longer needed and could lead to confusion. What is the idiomatic way to handle this? For example:</p>\n\n<pre><code>fn foo(s: &amp;str) {\n    let s = s.trim();\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>fn foo(mut s: &amp;str) {\n    s = s.trim();\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1513310259, "post_id": 47825188, "comment_id": 82613581, "body": "Thank you for your answer. However in the post they reject having Person own Car. &quot;<i>This is easy from a memory management point of view. But it has several problems. A car is not an integral part of a person. Buying and trading in cars will create copies of cars. For performance reasons we will like to avoid that. Instead, we will like Person to store an optional reference to a Car. But that\u2019s when things begin get complicated.</i>&quot; I left out some code, like trading. I&#39;ll add that to the question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1513311338, "post_id": 47825188, "comment_id": 82613805, "body": "@Schwern <i>A car is not an integral part of a person</i> \u2014 yes, when you model things in software sometimes they differ from &quot;real life&quot;, but that&#39;s nothing new. <i>Buying and trading in cars will create copies of cars</i> \u2014 there&#39;s not enough to go on here. Which copies are being made? There&#39;s no calls to <code>Clone</code>. Some bits <i>might</i> be moved between stack frames sure, but the optimizer usually deals with those handily. If that truly becomes your bottleneck (unlikely, profile to determine), then sure you can move to a <code>Box&lt;Car&gt;</code> if you need to."}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1513312048, "post_id": 47825188, "comment_id": 82613952, "body": "This particular question is an example of a larger pattern of problems I&#39;ve run into with references which don&#39;t appear to be solvable by ownership. So I&#39;d be interested to see how it&#39;s solved without ownership. I didn&#39;t know about <a href=\"https://doc.rust-lang.org/std/boxed/\" rel=\"nofollow noreferrer\">std::boxed</a>, so you&#39;ve already helped. Maybe I should finish reading TRPL first..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1513312631, "post_id": 47825188, "comment_id": 82614098, "body": "@Schwern yes, <b>please</b> do read the book. A <i>lot</i> of effort has been spent to address all sorts of introductory questions. The code you&#39;ve presented has no problems that cannot be solved with ownership. With over 70k reputation, you already know that if you have a question about a piece of course, you have to show us <i>that code</i>, not something unrelated."}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1513314110, "post_id": 47825188, "comment_id": 82614484, "body": "<a href=\"https://stackoverflow.com/questions/47784458/how-do-i-store-a-struct-in-two-places\">This earlier question is about what I&#39;m working on</a> and the real code <a href=\"https://github.com/schwern/adventofcode.rust/tree/07f8bed864ff9520ebcafcd3489475b694a2ba6f/2017/day07/src\" rel=\"nofollow noreferrer\">can be found here</a>. I fixed the earlier problem, but now I&#39;m running into the lifetime problem similar to what I asked about here. Maybe this would be better for CodeReview.SE?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1513310789, "last_edit_date": 1513310789, "creation_date": 1513306789, "answer_id": 47825188, "question_id": 47824987, "link": "https://stackoverflow.com/questions/47824987/fixing-containment-of-references-that-dont-live-long-enough-with-heap-allocati/47825188#47825188", "title": "Fixing containment of references that don&#39;t live long enough with &quot;heap allocation&quot;", "body": "<blockquote>\n  <p>The answer lies in heap allocation which in Rust is achieved via <code>Box::new</code>.</p>\n</blockquote>\n\n<p>Heap allocation via <code>Box</code> is not needed; just take ownership of the <code>Car</code>:</p>\n\n<pre><code>struct Car {\n    model: String,\n}\n\nstruct Person {\n    car: Option&lt;Car&gt;,\n}\n\nimpl Person {\n    fn new() -&gt; Person {\n        Person { car: None }\n    }\n\n    fn buy_car(&amp;mut self, c: Car) {\n        self.car = Some(c);\n    }\n\n    fn sell_car(&amp;mut self) {\n        self.car = None;\n    }\n\n    fn trade_with(&amp;mut self, other: &amp;mut Person) {\n        std::mem::swap(&amp;mut self.car, &amp;mut other.car);\n    }\n}\n\nfn shop_for_car(p: &amp;mut Person) {\n    let car = Car {\n        model: \"Mercedes GLK350\".to_string(),\n    };\n\n    p.buy_car(car);\n}\n\nfn main() {\n    let mut p = Person::new();\n    shop_for_car(&amp;mut p);\n}\n\n\nfn main() {\n    let mut p = Person::new();\n    shop_for_car(&amp;mut p);\n}\n</code></pre>\n\n<p>If you want to spuriously allocate memory on the heap, you are welcome to do so by changing to <code>Box&lt;Car&gt;</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n</ul>\n"}], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1513310789, "creation_date": 1513305054, "last_edit_date": 1513310689, "question_id": 47824987, "link": "https://stackoverflow.com/questions/47824987/fixing-containment-of-references-that-dont-live-long-enough-with-heap-allocati", "title": "Fixing containment of references that don&#39;t live long enough with &quot;heap allocation&quot;", "body": "<p>The blog post series <a href=\"https://mobiarch.wordpress.com/2015/07/08/understanding-lifetime-in-rust-part-ii-3/\" rel=\"nofollow noreferrer\"><em>Understanding Lifetime in Rust</em></a> ends with a cliffhanger summarized as follows...</p>\n\n<pre><code>struct Car {\n    model: String,\n}\n\nstruct Person&lt;'a&gt; {\n    car: Option&lt;&amp;'a Car&gt;,\n}\n\nimpl&lt;'a&gt; Person&lt;'a&gt; {\n    fn new() -&gt; Person&lt;'a&gt; {\n        Person { car: None }\n    }\n\n    fn buy_car(&amp;mut self, c: &amp;'a Car) {\n        self.car = Some(c);\n    }\n\n    fn sell_car(&amp;mut self) {\n        self.car = None;\n    }\n\n    fn trade_with(&amp;mut self, other: &amp;mut Person&lt;'a&gt;) {\n        let tmp = other.car;\n\n        other.car = self.car;\n        self.car = tmp;\n    }\n}\n\nfn shop_for_car(p: &amp;mut Person) {\n    let car = Car {\n        model: \"Mercedes GLK350\".to_string(),\n    };\n\n    p.buy_car(&amp;car); //Error! car doesn't live long enough\n}\n\nfn main() {\n    let mut p = Person::new();\n    shop_for_car(&amp;mut p);\n}\n</code></pre>\n\n<p>Sure enough, when compiled, <code>car</code> does not live long enough.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `car` does not live long enough\n  --&gt; src/main.rs:35:16\n   |\n35 |     p.buy_car(&amp;car); //Error! car doesn't live long enough\n   |                ^^^ does not live long enough\n36 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #2 defined on the function body at 30:1...\n  --&gt; src/main.rs:30:1\n   |\n30 | / fn shop_for_car(p: &amp;mut Person) {\n31 | |     let car = Car {\n32 | |         model: \"Mercedes GLK350\".to_string(),\n33 | |     };\n34 | |\n35 | |     p.buy_car(&amp;car); //Error! car doesn't live long enough\n36 | | }\n   | |_^\n</code></pre>\n\n<p>The post ends claiming to solve this in Part III...</p>\n\n<blockquote>\n  <p>That is because the car object simply doesn\u2019t live as long as the Person buying it. So how can we keep reference to an object that is created in an inner scope like a function? The answer lies in heap allocation which in Rust is achieved via Box::new. We will explore that in Part III.</p>\n</blockquote>\n\n<p>...but there is no Part III.</p>\n\n<p>I'm trying to solve a very similar problem and having Part III would help.</p>\n\n<p>Can you answer with Part III?</p>\n"}, {"tags": ["if-statement", "enums", "rust"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1513302339, "post_id": 47824449, "comment_id": 82611917, "body": "You can deduplicate <code>do_stuff()</code> by matching against <code>(foo, baz)</code>: <a href=\"https://play.rust-lang.org/?gist=32d81133f7131c508c0c8689329e22d0&amp;version=stable\" rel=\"nofollow noreferrer\">link</a>. Although you may or may not consider that more maintainable."}, {"owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "edited": false, "score": 0, "creation_date": 1513303211, "post_id": 47824449, "comment_id": 82612076, "body": "Is there any reason why <code>if foo == &amp;Foo::B(_) || baz {</code> could not be added to the language sometime in the future?"}, {"owner": {"reputation": 436, "user_id": 1152427, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f58ad5b5fc9bee2e9a0837afb1cb5da8?s=128&d=identicon&r=PG", "display_name": "Pan Hania", "link": "https://stackoverflow.com/users/1152427/pan-hania"}, "reply_to_user": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "edited": false, "score": 2, "creation_date": 1513375258, "post_id": 47824449, "comment_id": 82645030, "body": "@HiDefender There is an issue for that: <a href=\"https://github.com/rust-lang/rfcs/issues/935\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/935</a>"}], "tags": [], "owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "is_accepted": true, "score": 3, "last_activity_date": 1513301935, "last_edit_date": 1513301935, "creation_date": 1513300418, "answer_id": 47824449, "question_id": 47824393, "link": "https://stackoverflow.com/questions/47824393/how-do-i-use-an-enum-in-an-if-statement-when-i-dont-care-what-value-it-contai/47824449#47824449", "title": "How do I use an enum in an `if` statement when I don&#39;t care what value it contains?", "body": "<p>It's probably easier to use a <code>match</code> in this case:</p>\n\n<pre><code>fn do_stuff() {\n    println!(\"Do stuff\")\n}\n\nfn bar(foo: &amp;Foo, baz: bool) {\n    match foo {\n        &amp;Foo::B(_) =&gt; do_stuff(),\n        _ =&gt; {\n            if baz {\n                do_stuff();\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Alternatively with an <code>if let</code>:</p>\n\n<pre><code>fn bar(foo: &amp;Foo, baz: bool) {\n    if let &amp;Foo::B(_) = foo {\n        do_stuff();\n    } else {\n        if baz {\n            do_stuff();\n        }\n    }\n}\n</code></pre>\n\n<p>I'm not sure you can pull it all into a single condition easily, which makes you repeat <code>do_stuff</code> unfortunately.</p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 2, "last_activity_date": 1513328762, "last_edit_date": 1513328762, "creation_date": 1513327438, "answer_id": 47828651, "question_id": 47824393, "link": "https://stackoverflow.com/questions/47824393/how-do-i-use-an-enum-in-an-if-statement-when-i-dont-care-what-value-it-contai/47828651#47828651", "title": "How do I use an enum in an `if` statement when I don&#39;t care what value it contains?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/mem/fn.discriminant.html\" rel=\"nofollow noreferrer\"><code>std::mem::discriminant</code></a>:</p>\n\n<pre><code>use std::mem::discriminant;\n\n#[derive(PartialEq, Eq)]\nenum Foo {\n    A,\n    B(usize),\n}\n\nfn main() {\n    let to_test = Foo::B(123);\n    let some_bool = true;\n\n    if discriminant(&amp;to_test) == discriminant(&amp;Foo::B(0)) &amp;&amp; some_bool {\n        println!(\"Do stuff\");\n    }\n}\n</code></pre>\n\n<p>If you have to test this a lot, I advice you to implement a method for it:</p>\n\n<pre><code>impl Foo {\n    fn is_b(&amp;self) -&gt; bool {\n        discriminant(self) == discriminant(&amp;Foo::B(0))\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 47824449, "answer_count": 2, "score": 2, "last_activity_date": 1513328762, "creation_date": 1513299846, "last_edit_date": 1513303086, "question_id": 47824393, "link": "https://stackoverflow.com/questions/47824393/how-do-i-use-an-enum-in-an-if-statement-when-i-dont-care-what-value-it-contai", "title": "How do I use an enum in an `if` statement when I don&#39;t care what value it contains?", "body": "<p>I have an enum:</p>\n\n<pre><code>#[derive(PartialEq, Eq)]\nenum Foo {\n    A,\n    B(usize),\n}\n</code></pre>\n\n<p>I can use it in <code>if</code> statements involving other logic like <code>baz</code>:</p>\n\n<pre><code>fn bar(foo: &amp;Foo, baz: bool) {\n    if foo == &amp;Foo::B(3) || baz {\n        println!(\"Do stuff\")\n    }\n}\n</code></pre>\n\n<p>However, this won't compile:</p>\n\n<pre><code>fn bar(foo: &amp;Foo, baz: bool) {\n    if foo == &amp;Foo::B(_) || baz {\n        println!(\"Do stuff\")\n    }\n}\n</code></pre>\n\n<p>How do I use it in an <code>if</code> statement when I don't care what value <code>B</code> contains?</p>\n"}, {"tags": ["rust", "docopt"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513329148, "post_id": 47823800, "comment_id": 82620529, "body": "Do you know this <a href=\"https://github.com/TeXitoi/structopt\" rel=\"nofollow noreferrer\">github.com/TeXitoi/structopt</a>? That&#39;s a really cool crate for command line arguments if you can use procedural macros (currently in nightly compiler)."}, {"owner": {"reputation": 3, "user_id": 9101271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3820363d1b0b0bc5fc72fcda6f73a58?s=128&d=identicon&r=PG&f=1", "display_name": "sadmachine", "link": "https://stackoverflow.com/users/9101271/sadmachine"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513343931, "post_id": 47823800, "comment_id": 82629262, "body": "@boiethios Could you give me an example that fits my needs using this crate?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513344222, "post_id": 47823800, "comment_id": 82629424, "body": "This crate will not solve your particular problem, because as <code>docopt</code> (and as every other similar crate), it relies on <code>FromStr</code> to parse the input. But it is far more easier to use than the others. See the example."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513344252, "post_id": 47823800, "comment_id": 82629450, "body": "I will post an answer. The solution to your problem is to implement <code>FromStr</code>"}, {"owner": {"reputation": 3, "user_id": 9101271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3820363d1b0b0bc5fc72fcda6f73a58?s=128&d=identicon&r=PG&f=1", "display_name": "sadmachine", "link": "https://stackoverflow.com/users/9101271/sadmachine"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513344427, "post_id": 47823800, "comment_id": 82629549, "body": "So the solution would be: take a String and make it a vector of u8?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513344636, "post_id": 47823800, "comment_id": 82629690, "body": "Yep. You must create your own type <code>struct MyVec(Vec&lt;u8&gt;);</code> and implement <code>FromStr</code> for it."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513357302, "post_id": 47823800, "comment_id": 82637258, "body": "@Boiethios: FYI, structopt doesn&#39;t require the nightly compiler! <a href=\"https://blog.rust-lang.org/2017/02/02/Rust-1.15.html\" rel=\"nofollow noreferrer\">Procedural macros were stabilized in Rust 1.15</a> :)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1513357866, "post_id": 47823800, "comment_id": 82637542, "body": "@JoeClay It seems that I missed some information :D"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1513428438, "post_id": 47823800, "comment_id": 82655639, "body": "Do you understand that the command line is split into arguments by the shell, and not under docopt&#39;s control? Would <code>.&#47;main bytes &quot;[0, 1, 2, 3, 4, 5]&quot;</code> (with quotes) be acceptable?"}, {"owner": {"reputation": 3, "user_id": 9101271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3820363d1b0b0bc5fc72fcda6f73a58?s=128&d=identicon&r=PG&f=1", "display_name": "sadmachine", "link": "https://stackoverflow.com/users/9101271/sadmachine"}, "edited": false, "score": 0, "creation_date": 1513429238, "post_id": 47823800, "comment_id": 82655842, "body": "Yes, I understand. With quotes would be acceptable of course."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1513456743, "last_edit_date": 1513456743, "creation_date": 1513444112, "answer_id": 47848084, "question_id": 47823800, "link": "https://stackoverflow.com/questions/47823800/is-there-a-way-to-use-docopt-to-pass-a-vector-of-u8-from-the-command-line/47848084#47848084", "title": "Is there a way to use docopt to pass a vector of u8 from the command line?", "body": "<p>It's possible, but you have to implement <code>Deserialize</code> by hand.</p>\n\n<p><code>Vec&lt;u8&gt;</code> already implements <code>Deserialize</code>, and that implementation doesn't know about strings containing comma-delimited bracketed lists, nor does <a href=\"https://docs.rs/docopt/0.8.1/docopt/struct.Deserializer.html\" rel=\"nofollow noreferrer\"><code>docopt::Deserializer</code></a>, since the normal way to pass a list on the command line is element-by-element. So you have to make a new type that will deserialize from the format you want.</p>\n\n<p>Naturally, you can also implement <code>Deref&lt;Target = Vec&lt;u8&gt;&gt;</code> and <code>DerefMut</code> for <code>Bytes</code>, if you want to treat it as a <code>Vec&lt;u8&gt;</code>. <a href=\"https://stackoverflow.com/questions/45086595/is-it-considered-a-bad-practice-to-implement-deref-for-newtypes\">Some people might consider this a slight misuse of <code>Deref</code></a>, but it's probably fine in a situation like this.</p>\n\n<pre><code>extern crate docopt;\nextern crate serde;\n#[macro_use]\nextern crate serde_derive;\n\nuse docopt::Docopt;\nuse serde::de;\nuse std::fmt;\n\nconst USAGE: &amp;'static str = \"\n    Puzzle Solver.\n\n    Usage:\n      puzzle_solver string &lt;text&gt;\n      puzzle_solver bytes &lt;bin&gt;\n      puzzle_solver (-h | --help)\n      puzzle_solver --version\n\n    Options:\n      -h --help     Show this screen.\n      --version     Show version.\n    \";\n\n#[derive(Debug, Deserialize)]\nstruct Args {\n    cmd_string: bool,\n    arg_text: Option&lt;String&gt;,\n    cmd_bytes: bool,\n    arg_bin: Option&lt;Bytes&gt;,\n}\n\n#[derive(Debug)]\nstruct Bytes(Vec&lt;u8&gt;);\n\nimpl&lt;'de&gt; de::Deserialize&lt;'de&gt; for Bytes {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: de::Deserializer&lt;'de&gt;,\n    {\n        struct BytesVisitor;\n\n        impl&lt;'de&gt; de::Visitor&lt;'de&gt; for BytesVisitor {\n            type Value = Bytes;\n\n            fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; Result&lt;(), fmt::Error&gt; {\n                write!(formatter, \"a bracketed, comma-delimited string\")\n            }\n\n            fn visit_str&lt;E: de::Error&gt;(self, v: &amp;str) -&gt; Result&lt;Self::Value, E&gt; {\n                let v = if v.starts_with('[') &amp;&amp; v.ends_with(']') {\n                    &amp;v[1..v.len() - 1]\n                } else {\n                    return Err(E::custom(format!(\"expected a bracketed list, got {:?}\", v)));\n                };\n                let values: Result&lt;Vec&lt;u8&gt;, _&gt; = v.split(\",\").map(|s| s.trim().parse()).collect();\n                Ok(Bytes(values.map_err(E::custom)?))\n            }\n        }\n\n        deserializer.deserialize_str(BytesVisitor)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=26bdd0598fe71ccb3ee067e86d4ce281&amp;version=stable\" rel=\"nofollow noreferrer\">Here it is in the playground.</a> These are the changes I made to get this to work:</p>\n\n<ol>\n<li>Replace <code>[&lt;bin&gt;...]</code> with <code>&lt;bin&gt;</code> so docopt will know to look for a single thing and not a sequence of... things. (If you don't do this, docopt actually just throws you an empty string.)</li>\n<li>Introduce the newtype <code>Bytes</code> wrapper around <code>Vec&lt;u8&gt;</code>.</li>\n<li><a href=\"https://serde.rs/impl-deserialize.html\" rel=\"nofollow noreferrer\">Implement <code>serde::de::Deserialize</code></a> for <code>Bytes</code>. This entails creating a struct that implements the <code>serde::de::Visitor</code> trait, putting the code that picks apart the string inside its <code>visit_str</code> method, and passing the visitor to <code>deserialize_str</code>, which tells the <code>Deserializer</code> to expect a string and pass it to the visitor's <code>visit_str</code>.</li>\n</ol>\n\n<p>I didn't realize it until almost done, but you could implement <code>visit_seq</code> instead, and make it parse <code>bytes [1, 2, 3]</code> (without quoting the list). But I wouldn't, because that defies command line convention; if you're using the shell to split the arguments anyway, you should go the whole way and just accept <code>bytes 1 2 3</code>.</p>\n"}], "owner": {"reputation": 3, "user_id": 9101271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3820363d1b0b0bc5fc72fcda6f73a58?s=128&d=identicon&r=PG&f=1", "display_name": "sadmachine", "link": "https://stackoverflow.com/users/9101271/sadmachine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 0, "accepted_answer_id": 47848084, "answer_count": 1, "score": 0, "last_activity_date": 1513456743, "creation_date": 1513294988, "last_edit_date": 1513295394, "question_id": 47823800, "link": "https://stackoverflow.com/questions/47823800/is-there-a-way-to-use-docopt-to-pass-a-vector-of-u8-from-the-command-line", "title": "Is there a way to use docopt to pass a vector of u8 from the command line?", "body": "<p>Is there a way to make the user prompt for the bytes inside brackets and separated by commas or something similar?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./main bytes [0, 1, 2, 3, 4, 5]\n</code></pre>\n\n<p>I managed to make it look like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./main bytes 0 1 2 3 4 5\n</code></pre>\n\n<p>This is my code:</p>\n\n<pre><code>extern crate docopt;\n#[macro_use]\nextern crate serde_derive;\n\nuse docopt::Docopt;\n\nconst USAGE: &amp;'static str = \"\n    Puzzle Solver.\n\n    Usage:\n      puzzle_solver string &lt;text&gt;\n      puzzle_solver bytes [&lt;bin&gt;...] \n      puzzle_solver (-h | --help)\n      puzzle_solver --version\n\n    Options:\n      -h --help     Show this screen.\n      --version     Show version.\n    \";\n\n#[derive(Debug, Deserialize)]\nstruct Args {\n    cmd_string: bool,\n    arg_text: Option&lt;String&gt;,\n    cmd_bytes: bool,\n    arg_bin: Option&lt;Vec&lt;u8&gt;&gt;,\n}\n\nfn main() {\n    let args: Args = Docopt::new(USAGE)\n        .and_then(|d| d.deserialize())\n        .unwrap_or_else(|e| e.exit());\n\n    println!(\"ARGS: {:?}\", args);\n}\n</code></pre>\n"}, {"tags": ["memory-management", "graph", "memory-leaks", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 9097180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e7a07e8251c5be94cff5c1c3425138a?s=128&d=identicon&r=PG&f=1", "display_name": "user9097180", "link": "https://stackoverflow.com/users/9097180/user9097180"}, "edited": false, "score": 0, "creation_date": 1513291442, "post_id": 47822800, "comment_id": 82609193, "body": "Well, so does that mean that for every edge you insert, you will look through the entire graph to check if this edge will create a cycle? I did read that you can use weak pointers in trees if you want children to point back to parents. But I am not sure how to translate that in case of graphs? What does it mean to have weak pointers in graphs?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1, "user_id": 9097180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e7a07e8251c5be94cff5c1c3425138a?s=128&d=identicon&r=PG&f=1", "display_name": "user9097180", "link": "https://stackoverflow.com/users/9097180/user9097180"}, "edited": false, "score": 2, "creation_date": 1513292325, "post_id": 47822800, "comment_id": 82609493, "body": "@user9097180 you are about to embark on a journey of discovery around why exactly graphs are really hard concepts for memory management in both garbage-collected and non-GC languages. If you, the human, can&#39;t figure out a process to determine which links in a graph are strong and which are weak, how would the compiler / runtime? Maybe if your nodes have some ordering you could do strong references for &quot;bigger&quot; nodes and weak references for &quot;smaller&quot; nodes (I don&#39;t know if this will work)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1, "user_id": 9097180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e7a07e8251c5be94cff5c1c3425138a?s=128&d=identicon&r=PG&f=1", "display_name": "user9097180", "link": "https://stackoverflow.com/users/9097180/user9097180"}, "edited": false, "score": 2, "creation_date": 1513345891, "post_id": 47822800, "comment_id": 82630411, "body": "@user9097180: At this point, you may want to look up the <code>petgraph</code> crate."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1513293134, "last_edit_date": 1513293134, "creation_date": 1513289182, "answer_id": 47822800, "question_id": 47822557, "link": "https://stackoverflow.com/questions/47822557/handling-memory-leak-in-cyclic-graphs-using-refcell-and-rc/47822800#47822800", "title": "Handling memory leak in cyclic graphs using RefCell and Rc", "body": "<p>You don't have to read a blog post to find the answer, just <a href=\"https://doc.rust-lang.org/std/rc/index.html\" rel=\"nofollow noreferrer\">read the documentation</a>:</p>\n\n<blockquote>\n  <p>A cycle between <code>Rc</code> pointers will never be deallocated. For this reason, <code>Weak</code> is used to break cycles. For example, a tree could have strong <code>Rc</code> pointers from parent nodes to children, and <code>Weak</code> pointers from children back to their parents.</p>\n</blockquote>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43824077/155423\">Is there a way to build a structure with cyclic links without runtime overhead?</a></li>\n<li><a href=\"https://stackoverflow.com/q/34747464/155423\">Implement graph-like datastructure in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/36167160/155423\">Recursive Data Structures in Rust</a></li>\n</ul>\n"}], "owner": {"reputation": 1, "user_id": 9097180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e7a07e8251c5be94cff5c1c3425138a?s=128&d=identicon&r=PG&f=1", "display_name": "user9097180", "link": "https://stackoverflow.com/users/9097180/user9097180"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1513293134, "creation_date": 1513287980, "last_edit_date": 1513288495, "question_id": 47822557, "link": "https://stackoverflow.com/questions/47822557/handling-memory-leak-in-cyclic-graphs-using-refcell-and-rc", "title": "Handling memory leak in cyclic graphs using RefCell and Rc", "body": "<p>I followed the approach mentioned in <a href=\"https://ricardomartins.cc/2016/06/08/interior-mutability\" rel=\"nofollow noreferrer\">https://ricardomartins.cc/2016/06/08/interior-mutability</a> for creating a graph in Rust using <code>Rc</code> and <code>RefCell</code>.</p>\n\n<pre><code>type NodeRef&lt;i32&gt; = Rc&lt;RefCell&lt;_Node&lt;i32&gt;&gt;&gt;;\n\n#[derive(Clone)]\n// The private representation of a node.\nstruct _Node&lt;i32&gt; {\n    inner_value: i32,\n    adjacent: Vec&lt;NodeRef&lt;i32&gt;&gt;,\n}\n#[derive(Clone)]\n// The public representation of a node, with some syntactic sugar.\nstruct Node&lt;i32&gt;(NodeRef&lt;i32&gt;);\n\nimpl&lt;i32&gt; Node&lt;i32&gt; {\n    // Creates a new node with no edges.\n    fn new(inner: i32) -&gt; Node&lt;i32&gt; {\n        let node = _Node { inner_value: inner, adjacent: vec![] };\n        Node(Rc::new(RefCell::new(node)))\n    }\n\n    // Adds a directed edge from this node to other node.\n    fn add_adjacent(&amp;self, other: &amp;Node&lt;i32&gt;) {\n        (self.0.borrow_mut()).adjacent.push(other.0.clone());\n    }\n}\n#[derive(Clone)]\nstruct Graph&lt;i32&gt; {\n    nodes: Vec&lt;Node&lt;i32&gt;&gt;,\n}\n\nimpl&lt;i32&gt; Graph&lt;i32&gt; {\n    fn with_nodes(nodes: Vec&lt;Node&lt;i32&gt;&gt;) -&gt; Self {\n        Graph { nodes: nodes }\n    }\n\n}\n</code></pre>\n\n<p>I think this approach will lead to memory leaks in case of cyclic graphs. How can I fix that?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513288072, "post_id": 47822349, "comment_id": 82607788, "body": "When you call <code>chars()</code>, you borrow <code>s</code> to create a <code>Char</code> struct that hold a reference on it. When you exit the closure, s is dropped, and thus <code>Char</code> is invalidated."}, {"owner": {"reputation": 13367, "user_id": 7613, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1b83571daaddcad03235a1b8f5499549?s=128&d=identicon&r=PG", "display_name": "Andrew", "link": "https://stackoverflow.com/users/7613/andrew"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513288279, "post_id": 47822349, "comment_id": 82607881, "body": "@Boiethios This is the exact way that the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\">documentation</a> does it though. Why does it work there and not here?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1513288330, "post_id": 47822349, "comment_id": 82607900, "body": "@Andrew That example uses static strings.  In your example, the strings are created within the iterator, so they don&#39;t live long enough."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513288784, "post_id": 47822349, "comment_id": 82608100, "body": "See <a href=\"https://stackoverflow.com/q/43952104/155423\">How can I store a Chars iterator in the same struct as the String it is iterating on?</a> for a version of <code>.chars()</code> that would transfer ownership of the <code>String</code> and thus work in this case."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513318300, "post_id": 47822746, "comment_id": 82615711, "body": "Maybe we should have a consuming version of <code>chars</code> for <code>String</code> to prevent this kind of boilerplate."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513345830, "post_id": 47822746, "comment_id": 82630381, "body": "@Boiethios: I was surprised just yesterday to realize that I could not find a <code>FromIterator</code> implementation for that."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1513346213, "post_id": 47822746, "comment_id": 82630627, "body": "@MatthieuM. Seems trivial to do. If this addition does not induce any breaking change, maybe someone (You? I?) should propose something."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1513346804, "post_id": 47822746, "comment_id": 82630972, "body": "@Boiethios: Please go ahead :)"}, {"owner": {"reputation": 13367, "user_id": 7613, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1b83571daaddcad03235a1b8f5499549?s=128&d=identicon&r=PG", "display_name": "Andrew", "link": "https://stackoverflow.com/users/7613/andrew"}, "edited": false, "score": 1, "creation_date": 1513349587, "post_id": 47822746, "comment_id": 82632702, "body": "Thanks for the explanation. I&#39;m only 2 weeks into rust so still learning ownership. Slowly. So because <a href=\"https://doc.rust-lang.org/src/alloc/str.rs.html#685\" rel=\"nofollow noreferrer\">chars</a> is from the <code>StrExt</code> trait which is implemented on <code>str</code> and not <code>String</code>, it gets converted from <code>String</code> to <code>str</code>, through <code>Deref&lt;Target = str&gt;</code> then passed in to <code>chars(&amp;self)</code>? meaning if there was a version of <code>chars(self)</code> it would work?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 13367, "user_id": 7613, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1b83571daaddcad03235a1b8f5499549?s=128&d=identicon&r=PG", "display_name": "Andrew", "link": "https://stackoverflow.com/users/7613/andrew"}, "edited": false, "score": 0, "creation_date": 1513351114, "post_id": 47822746, "comment_id": 82633661, "body": "@Andrew Exactly, you summarized perfectly the issue :)"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1513288880, "creation_date": 1513288880, "answer_id": 47822746, "question_id": 47822349, "link": "https://stackoverflow.com/questions/47822349/use-flat-map-to-convert-vecu8-to-vecchar/47822746#47822746", "title": "Use flat_map to convert Vec&lt;u8&gt; to Vec&lt;char&gt;", "body": "<p>You first map the closure <code>|d| format!(\"{:04b}\", d)</code> over your iterator, yielding <code>String</code>s, which own their data, so this works perfectly find.  The <code>flat_map()</code> in the next step calls <code>.chars()</code> on each <code>String</code>.  This implicitly derefrences the <code>String</code> to an <code>&amp;str</code>, and creates a <code>Chars</code> iterator referencing this borrow.  But now we have a problem \u2013 nobody is owning the <code>String</code> that we borrowed anymore.</p>\n\n<p>One workaround is to store a temporary vector of <code>String</code>s:</p>\n\n<pre><code>let mut vec = vec![vec![0u8, 1u8], vec![2u8, 3u8], vec![4u8, 5u8]];\nvec.iter().map(|row| {\n    let strings: Vec&lt;_&gt; = row\n        .iter()\n        .map(|d| format!(\"{:04b}\", d))\n        .collect();\n    strings\n        .iter()\n        .flat_map(|s| s.chars())\n        .collect::&lt;Vec&lt;_&gt;&gt;()\n});\n</code></pre>\n\n<p>Now we have an owner for the intermediary <code>String</code>s, and everything works fine again.</p>\n"}], "owner": {"reputation": 13367, "user_id": 7613, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/1b83571daaddcad03235a1b8f5499549?s=128&d=identicon&r=PG", "display_name": "Andrew", "link": "https://stackoverflow.com/users/7613/andrew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 590, "favorite_count": 0, "accepted_answer_id": 47822746, "answer_count": 1, "score": 4, "last_activity_date": 1513288880, "creation_date": 1513287021, "last_edit_date": 1513288642, "question_id": 47822349, "link": "https://stackoverflow.com/questions/47822349/use-flat-map-to-convert-vecu8-to-vecchar", "title": "Use flat_map to convert Vec&lt;u8&gt; to Vec&lt;char&gt;", "body": "<p>I'm stuck in a similar situation to <a href=\"https://stackoverflow.com/questions/33600843/borrow-check-error-with-variable-not-living-long-enough-in-nested-lambda\">Borrow-check error with variable not living long enough in nested lambda</a> but am unable to figure out how my situation differs:</p>\n\n<pre><code>let mut vec = vec![vec![0u8, 1u8], vec![2u8, 3u8], vec![4u8, 5u8]];\nvec.iter().map(|row| {\n    row.iter()\n        .map(|d| format!(\"{:04b}\", d))\n        .flat_map(|s| s.chars())\n        .collect::&lt;Vec&lt;_&gt;&gt;()\n});\n</code></pre>\n\n<p>Which gives the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `s` does not live long enough\n --&gt; src/main.rs:6:35\n  |\n6 |             .flat_map(|s| s.chars())\n  |                           -       ^ `s` dropped here while still borrowed\n  |                           |\n  |                           borrow occurs here\n7 |             .collect::&lt;Vec&lt;_&gt;&gt;()\n  |                                - borrowed value needs to live until here\n</code></pre>\n\n<p>I worked around it by creating a new <code>Vec</code> and appending, but I'm unclear why the first approach did not work.</p>\n\n<pre><code>let mut tmp = vec![];\nvec.iter()\n    .map(|d| format!(\"{:04b}\", d))\n    .for_each(|s| {tmp.append(&amp;mut s.chars().collect::&lt;Vec&lt;_&gt;&gt;());});\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 4, "creation_date": 1513286025, "post_id": 47822002, "comment_id": 82606853, "body": "In both cases <code>x</code> doesn&#39;t leak into the outer scope. What else do you want?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513286110, "post_id": 47822002, "comment_id": 82606899, "body": "Your example <i>is</i> what I would consider idiomatic. However, I&#39;d normally go ahead and extract it to a function."}, {"owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "reply_to_user": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 0, "creation_date": 1513286559, "post_id": 47822002, "comment_id": 82607118, "body": "@JoshLee something else I&#39;m not aware of or confirmation that this is the right way, which it seems to be, thanks."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1513333587, "post_id": 47822111, "comment_id": 82623264, "body": "Side note: I would recommend offering a Builder as part of an API, for completeness, however if in my program I only &quot;needed&quot; a Builder once or twice, I&#39;d just use Block Expressions."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1513351240, "post_id": 47822111, "comment_id": 82633742, "body": "@MatthieuM. Sure, that is an overkill for a one or two times usage (~30 lines instead of 4)"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 2, "last_activity_date": 1513349791, "last_edit_date": 1513349791, "creation_date": 1513285847, "answer_id": 47822111, "question_id": 47822002, "link": "https://stackoverflow.com/questions/47822002/idiomatic-way-to-create-initialize-and-run-in-a-single-expression/47822111#47822111", "title": "Idiomatic way to create, initialize and run in a single expression", "body": "<p>You can use the <a href=\"https://github.com/rust-unofficial/patterns/blob/master/patterns/builder.md\" rel=\"nofollow noreferrer\">builder pattern</a>. This is the idiomatic way in Rust to achieve what you want:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Something {\n    property_a: String,\n    property_b: String,\n}\n\n#[derive(Debug, Default)]\nstruct SomethingBuilder {\n    property_a: Option&lt;String&gt;,\n    property_b: String,\n}\n\n#[derive(Debug)]\nenum BuildError {\n    ANotSet,\n}\n\nimpl SomethingBuilder {\n    fn new() -&gt; Self {\n        Self::default()\n    }\n\n    fn with_a(mut self, a: String) -&gt; Self {\n        self.property_a = Some(a);\n        self\n    }\n\n    fn with_b(mut self, b: String) -&gt; Self {\n        self.property_b = b;\n        self\n    }\n\n    fn build(self) -&gt; Result&lt;Something, BuildError&gt; {\n        Ok(Something {\n            property_a: self.property_a.ok_or(BuildError::ANotSet)?,\n            property_b: self.property_b,\n        })\n    }\n}\n\nfn main() {\n    let thing = SomethingBuilder::new()\n        .with_a(\"foo\".into())\n        .with_b(\"bar\".into())\n        .build() // returns BuildError if set_a is left out\n        .unwrap();\n\n    println!(\"{:?}\", thing);\n}\n</code></pre>\n\n<p>See <a href=\"http://docs.piston.rs/piston_window/glutin/struct.WindowBuilder.html\" rel=\"nofollow noreferrer\">this real world usage</a> for example.</p>\n\n<p>In the builder structure you can do all the verification you want when the <code>build</code> method is called. If everything is ok, you can return the newly built <code>struct</code>. The advantage of this pattern is the readability of the code (no \"polluting\") <strong>and</strong> the guarantee for the user that the built <code>struct</code> is fully valid.</p>\n"}], "owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1513349791, "creation_date": 1513285472, "last_edit_date": 1513285897, "question_id": 47822002, "link": "https://stackoverflow.com/questions/47822002/idiomatic-way-to-create-initialize-and-run-in-a-single-expression", "title": "Idiomatic way to create, initialize and run in a single expression", "body": "<p>Sometimes you have something like this:</p>\n\n<pre><code>let mut something = Something::new();\nsomething.set_property_a(\"foo\");\nsomething.set_property_b(\"bar\");\nlet result = something.result();\n</code></pre>\n\n<p>All you ever needed was just the result, but now the scope is polluted with <code>something</code>.</p>\n\n<p>In Kotlin, you can do it like that (among other versions, but using verbose one for clarity):</p>\n\n<pre><code>val result = Something().let { x -&gt;\n    x.propertyA = \"foo\"\n    x.propertyB = \"bar\"\n    x.result()\n}\n</code></pre>\n\n<p><code>T.let(closure)</code> just runs the closure giving object it was invoked on (the instance of <code>Something</code>) as the argument and returns whatever the closure returned. Extremely lightweight and easy concept, but very helpful.</p>\n\n<p>Can anything similar be done in Rust? The closest I've come up with is:</p>\n\n<pre><code>let result = {\n    let mut x = Something::new();\n    x.set_property_a(\"foo\");\n    x.set_property_b(\"boo\");\n    x.result()\n};\n</code></pre>\n"}, {"tags": ["json", "rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513281993, "post_id": 47821224, "comment_id": 82604952, "body": "Why did you decide to not show <i>any</i> examples of the actual JSON or how you&#39;d want them to look the same in Rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513282149, "post_id": 47821224, "comment_id": 82605039, "body": "Are you already aware you could just deserialize everything into a <a href=\"https://docs.rs/serde_json/1.0.8/serde_json/enum.Value.html\" rel=\"nofollow noreferrer\"><code>Value</code></a>?"}, {"owner": {"reputation": 2991, "user_id": 3877787, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DPxhf.jpg?s=128&g=1", "display_name": "Zalman Stern", "link": "https://stackoverflow.com/users/3877787/zalman-stern"}, "edited": false, "score": 2, "creation_date": 1513282375, "post_id": 47821224, "comment_id": 82605137, "body": "Frankly, unambiguously documenting an ugly protocol with 50 structs doesn&#39;t strike me as that bad a proposition. I&#39;d more ask the question of how this is going to evolve and change and what makes that process easier and more reliable..."}, {"owner": {"reputation": 1779, "user_id": 776966, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/81a14af94b33c11d4022161c21c55a49?s=128&d=identicon&r=PG", "display_name": "ozdrgnaDiies", "link": "https://stackoverflow.com/users/776966/ozdrgnadiies"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513282831, "post_id": 47821224, "comment_id": 82605345, "body": "@Shepmaster I did show an example though, unless you want me to change the key to match the value in the payload. The problem is that with the example above, you can get keys that are all strings but are something like &quot;channel&quot;, or &quot;message&quot;, or &quot;ops&quot;, or several other things, but they all just map to a string. Using a Value doesn&#39;t help much either since as far as I&#39;m aware that just pushes the deserializing to manual match statements which sounds even more cumbersome. If you still want an example, what would you want it to show?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1513283122, "post_id": 47821224, "comment_id": 82605477, "body": "<i>I did show an example</i> \u2014 I must be missing something, as I&#39;d expect to see two JSON input examples that are basically the same and the final Rust struct that you want to be able to deserialize both JSON inputs to and how you might use it."}, {"owner": {"reputation": 1779, "user_id": 776966, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/81a14af94b33c11d4022161c21c55a49?s=128&d=identicon&r=PG", "display_name": "ozdrgnaDiies", "link": "https://stackoverflow.com/users/776966/ozdrgnadiies"}, "edited": false, "score": 0, "creation_date": 1513283219, "post_id": 47821224, "comment_id": 82605530, "body": "The Rust struct is right there. I suppose I can add json examples that just looks like <code>{&quot;key&quot;: &quot;string&quot;}</code> and <code>{&quot;key2&quot;: &quot;string&quot;}</code>, but I&#39;d assume anyone who can help with serde would know how it works."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1513284565, "post_id": 47821224, "comment_id": 82606131, "body": "It&#39;s not about &quot;knowing how it works&quot; but about being clear what you need. For example, are you making the assertion that the name of the key basically <i>doesn&#39;t matter</i> in the two JSON blobs you&#39;ve given? You also mention &quot;same can be said for two strings&quot;, but how would <code>{a: 1, b: 2}</code> be mapped to <code>struct Foo { one: i32, two: i32 }</code>? Should <code>a</code>=&gt;<code>one</code> or <code>b</code>=&gt;<code>one</code>? You&#39;ve got a lot of context of your specific problem that is in your head and people helping on the internet <i>don&#39;t have that context</i>. When asking for help, you have to be <b>overly</b> clear and descriptive."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1513368743, "last_edit_date": 1513368743, "creation_date": 1513285729, "answer_id": 47822080, "question_id": 47821224, "link": "https://stackoverflow.com/questions/47821224/how-can-i-do-key-agnostic-deserialization-of-json-objects/47822080#47822080", "title": "How can I do key-agnostic deserialization of JSON objects?", "body": "<p>You can implement <code>Deserialize</code> for your type to decode a \"map\" and ignore the key name:</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\n\nuse std::fmt;\nuse serde::de::{Deserialize, Deserializer, Error, MapAccess, Visitor};\n\nfn main() {\n    let a = r#\"{\"key\": \"string\"}\"#;\n    let b = r#\"{\"key2\": \"string\"}\"#;\n\n    let a: SimpleString = serde_json::from_str(a).unwrap();\n    let b: SimpleString = serde_json::from_str(b).unwrap();\n\n    assert_eq!(a, b);\n}\n\n#[derive(Debug, PartialEq)]\nstruct SimpleString {\n    key: String,\n}\n\nstruct SimpleStringVisitor;\n\nimpl&lt;'de&gt; Visitor&lt;'de&gt; for SimpleStringVisitor {\n    type Value = SimpleString;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"an object with a single string value of any key name\")\n    }\n\n    fn visit_map&lt;M&gt;(self, mut access: M) -&gt; Result&lt;Self::Value, M::Error&gt;\n    where\n        M: MapAccess&lt;'de&gt;,\n    {\n        if let Some((_, key)) = access.next_entry::&lt;String, _&gt;()? {\n            if access.next_entry::&lt;String, String&gt;()?.is_some() {\n                Err(M::Error::custom(\"too many values\"))\n            } else {\n                Ok(SimpleString { key })\n            }\n        } else {\n            Err(M::Error::custom(\"not enough values\"))\n        }\n    }\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for SimpleString {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        deserializer.deserialize_map(SimpleStringVisitor)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1779, "user_id": 776966, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/81a14af94b33c11d4022161c21c55a49?s=128&d=identicon&r=PG", "display_name": "ozdrgnaDiies", "link": "https://stackoverflow.com/users/776966/ozdrgnadiies"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 597, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1513368743, "creation_date": 1513281884, "last_edit_date": 1513351425, "question_id": 47821224, "link": "https://stackoverflow.com/questions/47821224/how-can-i-do-key-agnostic-deserialization-of-json-objects", "title": "How can I do key-agnostic deserialization of JSON objects?", "body": "<p>I am working with a less than ideal API that doesn't follow any rigid standard for sending data. Each payload comes with some payload info before the JSON, followed by the actual data inside which can be a single string or several fields.</p>\n\n<p>As it stands right now, if I were to map every different payload to a struct I would end up with roughly 50 structs. I feel like this is not ideal, because a ton of these structs overlap in all but key. For instance, there are I believe 6 different versions of payloads that could be mapped to something like the following, but they all have different keys.</p>\n\n<p>I have these two JSON examples:</p>\n\n<pre><code>{\"key\": \"string\"}\n</code></pre>\n\n<pre><code>{\"key2\": \"string\"}\n</code></pre>\n\n<p>And I want to serialize both into this struct:</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\nstruct SimpleString {\n    key: String,\n}\n</code></pre>\n\n<p>The same can be said for two strings, and even a couple cases for three. The payloads are frustratingly unique in small ways, so my current solution is to just define the structs locally inside the function that deserializes them and then pass that data off wherever it needs to go (in my case a cache and an event handler)</p>\n\n<p>Is there a better way to represent this that doesn't have so much duplication? I've tried looking for things like key-agnostic deserializing but I haven't found anything yet.</p>\n"}, {"tags": ["concurrency", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 2, "creation_date": 1513272530, "post_id": 47818987, "comment_id": 82599958, "body": "Hello again Shepmaster! Thanks. Putting a lock around a lock-free data structure kind of defeats the point. I wonder if there is another map I can use..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "edited": false, "score": 0, "creation_date": 1513273168, "post_id": 47818987, "comment_id": 82600318, "body": "@EddBarrett that&#39;s going to be tricky. I&#39;ve added another &quot;see also&quot; link on how to &quot;force&quot; it if you <i>know</i> it&#39;s <code>Sync</code>, but lazy_static doesn&#39;t actually implement <code>DerefMut</code> so you can&#39;t then call mutable methods, so you&#39;d need a <code>RefCell</code> or something equivalent. It really looks like the library intends to be used as a regular variable. It could be worth asking the maintainer if it makes sense."}, {"owner": {"reputation": 81, "user_id": 7324205, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Wvr4o.jpg?s=128&g=1", "display_name": "Meet Sinojia", "link": "https://stackoverflow.com/users/7324205/meet-sinojia"}, "edited": false, "score": 0, "creation_date": 1611820512, "post_id": 47818987, "comment_id": 116574333, "body": "Dashmap is a good alternative that works inside lazy_static."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1513272968, "last_edit_date": 1513272968, "creation_date": 1513272333, "answer_id": 47818987, "question_id": 47818811, "link": "https://stackoverflow.com/questions/47818811/can-i-use-an-evmap-inside-a-lazy-static/47818987#47818987", "title": "Can I use an `evmap` inside a `lazy_static`?", "body": "<blockquote>\n  <p>Can [placing a <code>ReadHandle</code> / <code>WriteHandle</code> directly in a lazy static variable] be done?</p>\n</blockquote>\n\n<p><strong>No</strong>. As the error message states:</p>\n\n<blockquote>\n  <p><code>std::cell::Cell&lt;()&gt;</code> cannot be shared between threads safely</p>\n</blockquote>\n\n<p>You are attempting to place a type that will fail when used in a multithreaded context in a static variable, which must be thread-safe. </p>\n\n<blockquote>\n  <p>Can [placing a <code>ReadHandle</code> / <code>WriteHandle</code> in a lazy static variable at all] be done?</p>\n</blockquote>\n\n<p><strong>Yes</strong>, but you have to use something to synchronize access, such as a <code>Mutex</code> or <code>RwLock</code>:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nextern crate evmap;\n\nuse std::collections::hash_map::RandomState;\nuse std::sync::Mutex;\n\ntype ReadHandle = evmap::ReadHandle&lt;u32, u32, (), RandomState&gt;;\ntype WriteHandle = evmap::WriteHandle&lt;u32, u32, (), RandomState&gt;;\n\nlazy_static! {\n    static ref MAP: (Mutex&lt;ReadHandle&gt;, Mutex&lt;WriteHandle&gt;) = {\n        let (r, w) = evmap::new();\n        (Mutex::new(r), Mutex::new(w))\n    };\n}\n\nfn main() {\n    MAP.1.lock().unwrap().clear(1);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a></li>\n<li><a href=\"https://stackoverflow.com/q/36649865/155423\">How can I guarantee that a type that doesn&#39;t implement Sync can actually be safely shared between threads?</a></li>\n</ul>\n"}], "owner": {"reputation": 2731, "user_id": 109414, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2b68fe77303968e573ca1e7004462ae7?s=128&d=identicon&r=PG", "display_name": "Edd Barrett", "link": "https://stackoverflow.com/users/109414/edd-barrett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 662, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1513273223, "creation_date": 1513271636, "last_edit_date": 1513273223, "question_id": 47818811, "link": "https://stackoverflow.com/questions/47818811/can-i-use-an-evmap-inside-a-lazy-static", "title": "Can I use an `evmap` inside a `lazy_static`?", "body": "<p>I'd like to share an <a href=\"https://crates.io/crates/evmap\" rel=\"nofollow noreferrer\">evmap</a>, a lock-free, eventually consistent, concurrent multi-value map, across all threads in a Rust program.</p>\n\n<p>Naively, it would look like this:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nextern crate evmap;\n\nuse std::collections::hash_map::RandomState;\n\nlazy_static! {\n    static ref MAP: (evmap::ReadHandle&lt;u32, u32, (), RandomState&gt;,\n                     evmap::WriteHandle&lt;u32, u32, (), RandomState&gt;) = evmap::new();\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n    MAP.1.clear();\n}\n</code></pre>\n\n<p>This gives:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::cell::Cell&lt;()&gt;: std::marker::Sync` is not satisfied in `(evmap::ReadHandle&lt;u32, u32&gt;, evmap::WriteHandle&lt;u32, u32&gt;)`\n  --&gt; src/main.rs:8:1\n   |\n8  | / lazy_static! {\n9  | |     static ref MAP: (evmap::ReadHandle&lt;u32, u32, (), RandomState&gt;,\n10 | |                      evmap::WriteHandle&lt;u32, u32, (), RandomState&gt;) = evmap::new();\n11 | | }\n   | |_^ `std::cell::Cell&lt;()&gt;` cannot be shared between threads safely\n   |\n   = help: within `(evmap::ReadHandle&lt;u32, u32&gt;, evmap::WriteHandle&lt;u32, u32&gt;)`, the trait `std::marker::Sync` is not implemented for `std::cell::Cell&lt;()&gt;`\n   = note: required because it appears within the type `std::marker::PhantomData&lt;std::cell::Cell&lt;()&gt;&gt;`\n   = note: required because it appears within the type `evmap::ReadHandle&lt;u32, u32&gt;`\n   = note: required because it appears within the type `(evmap::ReadHandle&lt;u32, u32&gt;, evmap::WriteHandle&lt;u32, u32&gt;)`\n   = note: required by `lazy_static::lazy::Lazy`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>I think this is complaining about the <code>()</code> returned inside <code>evmap::new()</code>:</p>\n\n<pre><code>pub fn new&lt;K, V&gt;(\n) -&gt; (ReadHandle&lt;K, V, (), RandomState&gt;, WriteHandle&lt;K, V, (), RandomState&gt;) where\n    K: Eq + Hash + Clone,\n    V: Eq + ShallowCopy, \n</code></pre>\n\n<p>Can it be done?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1513271708, "post_id": 47818576, "comment_id": 82599498, "body": "Relevant part of the book: <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html#object-safety-is-required-for-trait-objects\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/second-edition/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "is_accepted": false, "score": 0, "last_activity_date": 1513271319, "creation_date": 1513271319, "answer_id": 47818730, "question_id": 47818576, "link": "https://stackoverflow.com/questions/47818576/is-it-possible-for-a-struct-to-have-a-reference-to-a-trait-object-that-has-gener/47818730#47818730", "title": "Is it possible for a struct to have a reference to a trait object that has generic methods, without making the struct itself generic?", "body": "<p>It is not possible because all the possible instantiations of <code>generic_method</code> are not known beforehand, so there is no way that the compiler could generate a proper vtable for <code>generic_method</code>.</p>\n\n<p>As you mentioned, you can make the <code>struct</code> generic instead:</p>\n\n<pre><code>struct Bar&lt;'a, T: Foo + 'a&gt; {\n    my_foo: &amp;'a mut T\n}\n\nimpl&lt;'a, T: Foo&gt; Bar&lt;'a, T&gt; {\n    fn new(my_foo: &amp;'a mut T) -&gt; Self {\n        Self {my_foo}\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 89, "user_id": 5235321, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/09e6dc5d00e71f64fb70468cae10574f?s=128&d=identicon&r=PG&f=1", "display_name": "qwipo", "link": "https://stackoverflow.com/users/5235321/qwipo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 78, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1513271657, "creation_date": 1513270781, "last_edit_date": 1513271657, "question_id": 47818576, "link": "https://stackoverflow.com/questions/47818576/is-it-possible-for-a-struct-to-have-a-reference-to-a-trait-object-that-has-gener", "title": "Is it possible for a struct to have a reference to a trait object that has generic methods, without making the struct itself generic?", "body": "<p>Is it possible for a struct to have a reference to a trait object that has generic methods, without making the struct itself generic? </p>\n\n<pre><code>trait Foo {\n    fn generic_method&lt;T&gt;(&amp;self) {}\n}\n\nstruct MyFoo {}\nimpl Foo for MyFoo {}\n\nstruct Bar&lt;'a&gt; {\n    my_foo: &amp;'a mut (Foo + 'a),\n}\n\nimpl&lt;'a&gt; Bar&lt;'a&gt; {\n    fn new(my_foo: &amp;'a mut Foo) -&gt; Self {\n        Self { my_foo }\n    }\n}\n</code></pre>\n\n<p>This code gives me the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `Foo` cannot be made into an object\n --&gt; src/main.rs:9:5\n  |\n9 |     my_foo: &amp;'a mut (Foo + 'a),\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Foo` cannot be made into an object\n  |\n  = note: method `generic_method` has generic type parameters\n\nerror[E0038]: the trait `Foo` cannot be made into an object\n  --&gt; src/main.rs:13:5\n   |\n13 |     fn new(my_foo: &amp;'a mut Foo) -&gt; Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Foo` cannot be made into an object\n   |\n   = note: method `generic_method` has generic type parameters\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513264777, "post_id": 47816692, "comment_id": 82594933, "body": "Could you address OP&#39;s question on <b>why</b> the standard library doesn&#39;t implement <code>FromIter</code> for references of tuples?"}, {"owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "edited": false, "score": 0, "creation_date": 1513267266, "post_id": 47816692, "comment_id": 82596663, "body": "Much appreciated. Why can&#39;t it use ref tuple&#39;s values though? This works: <code>let tup = &amp;(&amp;1, &amp;2); println!(&quot;{:?}&quot;, tup.0);</code>"}, {"owner": {"reputation": 338, "user_id": 5573030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91fcac7046f8930290c23c81870e7d4c?s=128&d=identicon&r=PG&f=1", "display_name": "BookOwl", "link": "https://stackoverflow.com/users/5573030/bookowl"}, "reply_to_user": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "edited": false, "score": 1, "creation_date": 1513268045, "post_id": 47816692, "comment_id": 82597177, "body": "@YuriGeinish, the only reason that works is because integers implement the <code>Copy</code> trait so they can be copied out of references. If you try with something else like <code>String</code>, you get an error <a href=\"https://play.rust-lang.org/?gist=303f6ec8190aa7b1794cfef579e5003d&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "edited": false, "score": 0, "creation_date": 1513269025, "post_id": 47816692, "comment_id": 82597851, "body": "You&#39;re right. Like it says, it would be moving out of borrowed content. Can&#39;t <code>HashMap</code> work around that by borrowing the tuple&#39;s values?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "edited": false, "score": 2, "creation_date": 1513269382, "post_id": 47816692, "comment_id": 82598091, "body": "@YuriGeinish: No. You don&#39;t tell <code>HashMap</code> how to store the key and value, it <i>may</i> store them in an array of tuples or it <i>may</i> use one array for keys and one array for values. If all it had was a reference to the tuples, how would it then tease apart the key from the value? This would require cloning, and Rust being about explicitness errs on the side of making cloning visible to the client."}], "tags": [], "owner": {"reputation": 338, "user_id": 5573030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91fcac7046f8930290c23c81870e7d4c?s=128&d=identicon&r=PG&f=1", "display_name": "BookOwl", "link": "https://stackoverflow.com/users/5573030/bookowl"}, "is_accepted": true, "score": 3, "last_activity_date": 1513265232, "last_edit_date": 1513265232, "creation_date": 1513264654, "answer_id": 47816692, "question_id": 47816300, "link": "https://stackoverflow.com/questions/47816300/why-wouldnt-the-standard-library-implement-collect-on-an-array-of-tupless-iter/47816692#47816692", "title": "Why wouldn&#39;t the standard library implement collect on an array-of-tuples&#39;s iterator without cloned()?", "body": "<p>The full error message has more information that is useful:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::collections::HashMap&lt;&amp;str, &amp;str&gt;: std::iter::FromIterator&lt;&amp;(&amp;str, &amp;str)&gt;` is not satisfied\n --&gt; src/main.rs:4:65\n  |\n4 |     let result: HashMap&lt;&amp;str, &amp;str&gt; = [(\"name\", \"Luke\")].iter().collect();\n  |                                                                 ^^^^^^^ a collection of type `std::collections::HashMap&lt;&amp;str, &amp;str&gt;` cannot be built from an iterator over elements of type `&amp;(&amp;str, &amp;str)`\n  |\n  = help: the trait `std::iter::FromIterator&lt;&amp;(&amp;str, &amp;str)&gt;` is not implemented for `std::collections::HashMap&lt;&amp;str, &amp;str&gt;`\n</code></pre>\n\n<p>Your code without <code>.cloned()</code> is trying to make a <code>HashMap</code> from an iterator of references to tuples, but the <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#impl-FromIterator%3C(K,%20V)%3E\" rel=\"nofollow noreferrer\"><code>HashMap::from_iter()</code></a> method requires an iterator of owned tuples. The <code>.cloned()</code> call turns the iterator of references into an iterator of owned tuples that can be given to <code>HashMap::from_iter()</code> (which is what <code>.collect()</code> will end up calling)</p>\n\n<p>The reason that the standard library doesn't implement <code>HashMap::from_iter()</code> for an iterator of tuple references is because <code>HashMap</code> needs to own the tuple to get the key and value from it, which is impossible if it is passed a reference to a tuple. </p>\n"}], "owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "accepted_answer_id": 47816692, "answer_count": 1, "score": 0, "last_activity_date": 1513265232, "creation_date": 1513263386, "last_edit_date": 1513263908, "question_id": 47816300, "link": "https://stackoverflow.com/questions/47816300/why-wouldnt-the-standard-library-implement-collect-on-an-array-of-tupless-iter", "title": "Why wouldn&#39;t the standard library implement collect on an array-of-tuples&#39;s iterator without cloned()?", "body": "<p>This code works:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let result: HashMap&lt;&amp;str, &amp;str&gt; = [(\"name\", \"Luke\")].iter().cloned().collect();\n\n    println!(\"{:?}\", &amp;result);\n}\n</code></pre>\n\n<p>It doesn't if I remove the call to <code>cloned()</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::collections::HashMap&lt;&amp;str, &amp;str&gt;: std::iter::FromIterator&lt;&amp;(&amp;str, &amp;str)&gt;` is not satisfied\n --&gt; src/main.rs:4:65\n  |\n4 |     let result: HashMap&lt;&amp;str, &amp;str&gt; = [(\"name\", \"Luke\")].iter().collect();\n  |                                                                 ^^^^^^^ a collection of type `std::collections::HashMap&lt;&amp;str, &amp;str&gt;` cannot be built from an iterator over elements of type `&amp;(&amp;str, &amp;str)`\n  |\n  = help: the trait `std::iter::FromIterator&lt;&amp;(&amp;str, &amp;str)&gt;` is not implemented for `std::collections::HashMap&lt;&amp;str, &amp;str&gt;`\n</code></pre>\n\n<p>My understanding is that the standard library implements lots of things for tuples but not this case? Why wouldn't it compile like that?</p>\n"}, {"tags": ["rust", "slice"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1513260277, "post_id": 47814871, "comment_id": 82591802, "body": "Would the answers to <a href=\"https://stackoverflow.com/questions/27879161/what-is-the-return-type-of-the-indexing-operation-on-a-slice\">this question</a> also answer yours?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1513261022, "post_id": 47814871, "comment_id": 82592326, "body": "Regarding the question about the difference between <code>sl1</code> and <code>sl2</code>, there isn&#39;t any.  Both cause the <code>String</code> to be dereferenced to a slice, and the slice is then indexed with a range.  See also <a href=\"https://stackoverflow.com/q/28519997/279627\">stackoverflow.com/q/28519997/279627</a>"}], "answers": [{"tags": [], "owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "is_accepted": false, "score": 1, "last_activity_date": 1513265976, "last_edit_date": 1513265976, "creation_date": 1513260056, "answer_id": 47815175, "question_id": 47814871, "link": "https://stackoverflow.com/questions/47814871/what-is-the-differences-between-the-two-slice-in-rust/47815175#47815175", "title": "What is the differences between the two slice in Rust?", "body": "<p>The compiler <em>dereferences</em> the output of <code>Index::index</code> when desugaring the indexing syntax <code>[]</code> (see related <a href=\"https://stackoverflow.com/questions/27879161/what-is-the-return-type-of-the-indexing-operation-on-a-slice\">question</a> and its answers). Using explicit type annotations, the types of the bindings are thus as follows:</p>\n\n<pre><code>let r1: &amp;str = &amp;s1;\nlet sl1: &amp;str = &amp;s1[..];\nlet sl2: &amp;str = &amp;r1[..];\nlet sl3: str = r1[..];\n</code></pre>\n\n<p><code>str</code>, being an unsized type, cannot be put on the stack and therefore cannot be used as the type for a local variable binding <code>sl3</code>, hence the compile error.</p>\n"}], "owner": {"reputation": 1857, "user_id": 6329187, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/WDkSs.jpg?s=128&g=1", "display_name": "sunfy", "link": "https://stackoverflow.com/users/6329187/sunfy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1513265976, "creation_date": 1513259127, "last_edit_date": 1513259799, "question_id": 47814871, "link": "https://stackoverflow.com/questions/47814871/what-is-the-differences-between-the-two-slice-in-rust", "title": "What is the differences between the two slice in Rust?", "body": "<pre><code>let s1 = String::from(\"hello world.\");\nlet r1 = &amp;s1;\nlet sl1 = &amp;s1[..];\nlet sl2 = &amp;r1[..];\nlet sl3 = r1[..];\nprintln!(\"{}\", sl3);\n</code></pre>\n\n<p>What is the difference between <code>sl1</code> and <code>sl2</code>, and why <code>sl3</code> is invalid? Isn't <code>r1</code> a reference already, why need <code>&amp;</code>?</p>\n"}, {"tags": ["hashmap", "rust", "case-insensitive"], "comments": [{"owner": {"reputation": 205, "user_id": 4846418, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be82940aac7db2359ec9e7b64a9e511b?s=128&d=identicon&r=PG&f=1", "display_name": "raggy", "link": "https://stackoverflow.com/users/4846418/raggy"}, "edited": false, "score": 1, "creation_date": 1513254279, "post_id": 47813162, "comment_id": 82587854, "body": "What should happen if the text contains The, THE and the"}, {"owner": {"reputation": 79, "user_id": 6124842, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-O2sNt_FUAaQ/AAAAAAAAAAI/AAAAAAAAAGI/K1aIl5m_lhM/photo.jpg?sz=128", "display_name": "Mehmet Hakan Kurto\u011flu", "link": "https://stackoverflow.com/users/6124842/mehmet-hakan-kurto%c4%9flu"}, "reply_to_user": {"reputation": 205, "user_id": 4846418, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be82940aac7db2359ec9e7b64a9e511b?s=128&d=identicon&r=PG&f=1", "display_name": "raggy", "link": "https://stackoverflow.com/users/4846418/raggy"}, "edited": false, "score": 0, "creation_date": 1513263529, "post_id": 47813162, "comment_id": 82594116, "body": "They will be all considered as the same and whichever version first found should be stored. The problem with mine is even when there is no &quot;the&quot; in text, but there is only &quot;The&quot;, it is stored as all lower case, not in original form."}], "answers": [{"comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1513256723, "post_id": 47813878, "comment_id": 82589486, "body": "I don&#39;t think that crate implements correct caseless comparisons because I don&#39;t see any normalization happening. The <code>caseless</code> crate does it correctly (but has a different API, so there might be some trade offs between them): <a href=\"https://docs.rs/caseless/0.2.0/caseless/\" rel=\"nofollow noreferrer\">docs.rs/caseless/0.2.0/caseless</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1513257370, "post_id": 47813878, "comment_id": 82589883, "body": "@BurntSushi5 Hum, I saw <code>assert_eq!(UniCase::new(&quot;Ma&#223;e&quot;), UniCase::new(&quot;MASSE&quot;));</code> and I though that it proves enough that caseless comparison is ok."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1513265249, "post_id": 47813878, "comment_id": 82595250, "body": "@Boiethios I think BurntSushi5&#39;s point is that the concept of comparison is way more complicated than <code>UniCase</code> is designed to handle. For example, this fails: <code>assert_eq!(UniCase::new(&quot;&#197;str&#246;m&quot;), UniCase::new(&quot;A\u030astro\u0308m&quot;)</code> (make sure you copy it exactly). The crate doesn&#39;t handle normalization of precomposed / non-composed Unicode text, as one example."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513265530, "post_id": 47813878, "comment_id": 82595453, "body": "@Shepmaster Thank you for the explanation. What is the difference between the two?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513265887, "post_id": 47813878, "comment_id": 82595725, "body": "For that specific example, that&#39;s a <a href=\"https://en.wikipedia.org/wiki/Precomposed_character\" rel=\"nofollow noreferrer\">precomposed character</a>. However, Unicode <a href=\"http://unicode.org/faq/normalization.html\" rel=\"nofollow noreferrer\">normalization</a> is a larger topic that I&#39;m not well-versed to speak on."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513268434, "post_id": 47813878, "comment_id": 82597463, "body": "@Shepmaster The maintainer of this crate should see this question. If I don&#39;t forget, I will open an issue in the Github."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 4, "last_activity_date": 1563350055, "last_edit_date": 1563350055, "creation_date": 1513255949, "answer_id": 47813878, "question_id": 47813162, "link": "https://stackoverflow.com/questions/47813162/is-there-any-efficient-way-to-have-a-case-insensitive-string-as-a-hashmap-key/47813878#47813878", "title": "Is there any efficient way to have a case insensitive string as a HashMap key?", "body": "<p>The easiest way to do it is to use <a href=\"https://docs.rs/unicase\" rel=\"nofollow noreferrer\"><code>UniCase</code></a> as a key:</p>\n\n<pre><code>use unicase::UniCase;\n\ntype Words = std::collections::HashMap&lt;UniCase, u32&gt;;\n</code></pre>\n\n<p>If I understand their documentation, <code>UniCase::new(\"The\")</code> stores the actual string <code>\"The\"</code> in it, but if you compare it with <code>Unicase::new(\"the\")</code>, you will see that it is the same string.</p>\n"}], "owner": {"reputation": 79, "user_id": 6124842, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-O2sNt_FUAaQ/AAAAAAAAAAI/AAAAAAAAAGI/K1aIl5m_lhM/photo.jpg?sz=128", "display_name": "Mehmet Hakan Kurto\u011flu", "link": "https://stackoverflow.com/users/6124842/mehmet-hakan-kurto%c4%9flu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1411, "favorite_count": 0, "answer_count": 1, "score": 6, "last_activity_date": 1563350055, "creation_date": 1513253717, "last_edit_date": 1513263659, "question_id": 47813162, "link": "https://stackoverflow.com/questions/47813162/is-there-any-efficient-way-to-have-a-case-insensitive-string-as-a-hashmap-key", "title": "Is there any efficient way to have a case insensitive string as a HashMap key?", "body": "<p>I'm trying to count number of times a word appears in a text. I'm using <code>HashMap</code> and my implementation ignores case. I achieve that by converting all words to lowercase:</p>\n\n<pre><code>for line in reader.lines() {\n    for mut curr in line.as_ref().unwrap().split_whitespace() {\n        match word_map.entry(curr.to_string().to_lowercase()) {\n            Entry::Occupied(entry) =&gt; {\n                *entry.into_mut() += 1;\n            }\n            Entry::Vacant(entry) =&gt; {\n                entry.insert(1);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I want to consider \"the\" and \"The\" same, but if \"the\" doesn't appear just hold \"The\" in the <code>HashMap</code>. Right now, I hold all words in lowercase. Is there any efficient way to do this?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 1025, "user_id": 1091693, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ced72bd821f098b6ff818e4b1d8904a2?s=128&d=identicon&r=PG", "display_name": "Score_Under", "link": "https://stackoverflow.com/users/1091693/score-under"}, "edited": false, "score": 0, "creation_date": 1513215100, "post_id": 47804498, "comment_id": 82570718, "body": "When you do <code>word_map.entry(curr)</code> and then potentially insert that entry, you are borrowing <code>curr</code> for the lifetime of that <code>HashMap</code>. You will probably need to copy or own that value. (Disclaimer: I don&#39;t know rust)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1025, "user_id": 1091693, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ced72bd821f098b6ff818e4b1d8904a2?s=128&d=identicon&r=PG", "display_name": "Score_Under", "link": "https://stackoverflow.com/users/1091693/score-under"}, "edited": false, "score": 0, "creation_date": 1513222089, "post_id": 47804498, "comment_id": 82572375, "body": "@Score_Under close, but not quite. <code>split_whitespace</code> returns references to the original string, but that memory will be dropped at the end of loop."}, {"owner": {"reputation": 79, "user_id": 6124842, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-O2sNt_FUAaQ/AAAAAAAAAAI/AAAAAAAAAGI/K1aIl5m_lhM/photo.jpg?sz=128", "display_name": "Mehmet Hakan Kurto\u011flu", "link": "https://stackoverflow.com/users/6124842/mehmet-hakan-kurto%c4%9flu"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1513247432, "post_id": 47804498, "comment_id": 82583410, "body": "@Shepmaster thanks, that solved the problem."}], "owner": {"reputation": 79, "user_id": 6124842, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-O2sNt_FUAaQ/AAAAAAAAAAI/AAAAAAAAAGI/K1aIl5m_lhM/photo.jpg?sz=128", "display_name": "Mehmet Hakan Kurto\u011flu", "link": "https://stackoverflow.com/users/6124842/mehmet-hakan-kurto%c4%9flu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 127, "favorite_count": 0, "closed_date": 1513221768, "answer_count": 0, "score": 0, "last_activity_date": 1513221512, "creation_date": 1513214166, "last_edit_date": 1513221512, "question_id": 47804498, "link": "https://stackoverflow.com/questions/47804498/borrowed-value-does-not-live-long-enough-when-using-lines", "closed_reason": "Duplicate", "title": "\u201cborrowed value does not live long enough\u201d when using .lines()", "body": "<p>I'm trying to read text through a buffer and then calculate how many times each single word appears in the text:</p>\n\n<pre><code>let mut word_map: HashMap&lt;&amp;str, isize&gt; = HashMap::new();\nlet reader = BufReader::new(file);\nfor line in reader.lines() {\n    for mut curr in line.unwrap().split_whitespace() {\n        match word_map.entry(curr) {\n            Entry::Occupied(entry) =&gt; {\n                *entry.into_mut() += 1;\n            }\n            Entry::Vacant(entry) =&gt; {\n                entry.insert(1);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I'm trying to use a <code>HashMap</code> with words as keys and their frequencies in text as value. If a new word is found its value is one otherwise its value gets incremented.</p>\n\n<p>I'm constantly getting this error and cannot find a way out. I've tried to use <code>let</code> before the inner loop, but I still get the same error stating that temporary value </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    error[E0597]: `line` does not live long enough\n  --&gt; src\\main.rs:32:2\n   |\n26 |   for mut curr in line.as_ref().unwrap().split_whitespace(){\n   |                   ---- borrow occurs here\n...\n32 |  }\n   |  ^ `line` dropped here while still borrowed\n33 |\n34 | }\n   | - borrowed value needs to live until here\n</code></pre>\n\n<p>I'm having trouble finding why <code>line</code> has to live until the end of main and why it gets dropped while still borrowed. Why am I having this error?</p>\n"}]