[{"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1565937587, "post_id": 57502491, "comment_id": 101507139, "body": "Note that this will only color the symbol, whereas the OP&#39;s attempt would also color the brackets if it worked."}, {"owner": {"reputation": 174, "user_id": 1354814, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pmtMb.jpg?s=128&g=1", "display_name": "riginding", "link": "https://stackoverflow.com/users/1354814/riginding"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1565943646, "post_id": 57502491, "comment_id": 101509212, "body": "you can move the brackets out of the format string into the argument"}], "tags": [], "owner": {"reputation": 174, "user_id": 1354814, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pmtMb.jpg?s=128&g=1", "display_name": "riginding", "link": "https://stackoverflow.com/users/1354814/riginding"}, "is_accepted": false, "score": 3, "last_activity_date": 1565819333, "creation_date": 1565819333, "answer_id": 57502491, "question_id": 57501907, "link": "https://stackoverflow.com/questions/57501907/how-do-i-used-the-colored-crate-with-non-static-strings/57502491#57502491", "title": "How do I used the colored crate with non-static strings?", "body": "<p>You can not use the color methods on the format string, which is required to be a string literal by the compiler. You have to use it on the arguments. Like this:</p>\n\n<pre><code> for row in &amp;self.board {\n    for symbol in row {\n        if let Some(s) = symbol {\n            print!(\"\\t[{}]\", s.red());\n        } else {\n            print!(\"\\t[ ]\");\n        }\n    }\n    println!(\"\\n\");\n}\n</code></pre>\n"}], "owner": {"reputation": 55, "user_id": 11711302, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb00cae530390ce4187150985cfb6dd6?s=128&d=identicon&r=PG&f=1", "display_name": "gooddayjay", "link": "https://stackoverflow.com/users/11711302/gooddayjay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 56, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1565819333, "creation_date": 1565816018, "last_edit_date": 1565816446, "question_id": 57501907, "link": "https://stackoverflow.com/questions/57501907/how-do-i-used-the-colored-crate-with-non-static-strings", "title": "How do I used the colored crate with non-static strings?", "body": "<p>I am making a connect 4 game where I want to print colored text on the terminal window using the <code>colored</code> crate.</p>\n\n<p>I am checking to see if there is a symbol in the table to print like this:</p>\n\n<pre><code>for row in &amp;self.board {\n    for symbol in row {\n        if let Some(s) = symbol {\n            print!(\"\\t[{}]\", s);\n        } else {\n            print!(\"\\t[ ]\");\n        }\n    }\n    println!(\"\\n\");\n}\n</code></pre>\n\n<p>When I want to turn the letters to red, it does not work unless it is a static string. </p>\n\n<p>I tried doing this but it doesn't work:</p>\n\n<pre><code>for row in &amp;self.board {\n    for symbol in row {\n        if let Some(s) = symbol {\n            print!(\"\\t[{}]\".red(), s);\n        } else {\n            print!(\"\\t[ ]\");\n        }\n    }\n    println!(\"\\n\");\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 83, "user_id": 11010869, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e15421a384cb3301964a495ae844fce?s=128&d=identicon&r=PG&f=1", "display_name": "goodknight", "link": "https://stackoverflow.com/users/11010869/goodknight"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565816665, "post_id": 57501789, "comment_id": 101473152, "body": "No, if you use read and enter a letter, you get <code>thread &#39;main&#39; panicked at &#39;called </code>Result::unwrap()` on an <code>Err</code> value: Parse(&quot;q&quot;, &quot;<b>try_read_var</b>&quot;)&#39;,`"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1566224854, "creation_date": 1566224854, "answer_id": 57558773, "question_id": 57501789, "link": "https://stackoverflow.com/questions/57501789/is-there-a-way-to-check-that-the-user-entered-an-integer-with-text-ios-read/57558773#57558773", "title": "Is there a way to check that the user entered an integer with text_io&#39;s read!() macro?", "body": "<p>The point of <a href=\"https://docs.rs/text_io/0.1.7/text_io/macro.read.html\" rel=\"nofollow noreferrer\"><code>read!</code></a> is to handle errors by killing the thread so that the caller doesn\u2019t need to worry about them. That\u2019s why <a href=\"https://docs.rs/text_io/0.1.7/text_io/macro.try_read.html\" rel=\"nofollow noreferrer\"><code>try_read!</code></a> exists:</p>\n\n<pre><code>#[macro_use]\nextern crate text_io; // 0.1.7\n\nfn main() {\n    let mut y_col: Result&lt;usize, _&gt;;\n\n    y_col = try_read!();\n    match y_col {\n        Ok(v) =&gt; println!(\"Got a number: {}\", v),\n        Err(e) =&gt; eprintln!(\"Was not a number ({})\", e),\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n123\nGot a number: 123\n\n$ cargo run\nmoo\nWas not a number (could not parse moo as target type of __try_read_var__)\n</code></pre>\n"}], "owner": {"reputation": 83, "user_id": 11010869, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e15421a384cb3301964a495ae844fce?s=128&d=identicon&r=PG&f=1", "display_name": "goodknight", "link": "https://stackoverflow.com/users/11010869/goodknight"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566224854, "creation_date": 1565815353, "last_edit_date": 1565815888, "question_id": 57501789, "link": "https://stackoverflow.com/questions/57501789/is-there-a-way-to-check-that-the-user-entered-an-integer-with-text-ios-read", "title": "Is there a way to check that the user entered an integer with text_io&#39;s read!() macro?", "body": "<p>I want to check that a user entered an integer. If they didn't, I want to redirect them back to the input question:</p>\n\n<pre><code>println!(\"Place Your Chip\");\nlet mut y_col: usize;\n\nloop {\n    y_col = read!();\n    // Check if user entered in a integer or not\n    if y_col &lt; 1 || y_col &gt; 6 {\n        println!(\"Column space is 1 to 6\");\n        continue;\n    } else {\n        y_col -= 1;\n    }\n    if game.check_column(y_col) {\n        println!(\"\\t\\t\\t\\t\\t\\t\\t\\tThe column you choose is full\");\n        continue;\n    }\n    break;\n}\n</code></pre>\n"}, {"tags": ["api", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565812526, "post_id": 57501032, "comment_id": 101471711, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/57501032/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 55, "user_id": 7206831, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/004d8b661aa171708023c2487544fa87?s=128&d=identicon&r=PG&f=1", "display_name": "systderr", "link": "https://stackoverflow.com/users/7206831/systderr"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565824166, "post_id": 57501032, "comment_id": 101474996, "body": "@Shepmaster Added a MRE."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565826270, "post_id": 57501032, "comment_id": 101475360, "body": "<a href=\"https://meta.stackoverflow.com/q/380194/155423\">To make Stack Overflow a useful resource for future visitors beyond the context of your repository</a>, please <a href=\"https://stackoverflow.com/posts/57501032/edit\">edit</a> your question to add a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> in the question itself, in addition to the link to your repository."}, {"owner": {"reputation": 55, "user_id": 7206831, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/004d8b661aa171708023c2487544fa87?s=128&d=identicon&r=PG&f=1", "display_name": "systderr", "link": "https://stackoverflow.com/users/7206831/systderr"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565852309, "post_id": 57501032, "comment_id": 101479870, "body": "@Shepmaster Added the code."}], "answers": [{"tags": [], "owner": {"reputation": 55, "user_id": 7206831, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/004d8b661aa171708023c2487544fa87?s=128&d=identicon&r=PG&f=1", "display_name": "systderr", "link": "https://stackoverflow.com/users/7206831/systderr"}, "is_accepted": true, "score": 0, "last_activity_date": 1565896321, "creation_date": 1565896321, "answer_id": 57514945, "question_id": 57501032, "link": "https://stackoverflow.com/questions/57501032/cant-figure-out-how-to-send-a-signed-post-request-to-okex/57514945#57514945", "title": "Can&#39;t figure out how to send a signed POST request to OKEx", "body": "<p>Solution was to use <code>\"https://www.okex.com\"</code> instead of <code>\"https://okex.com</code>. The latter produces the \"Invalid Sign\" error. But just for POST requests. Issue was therefore not Rust related.</p>\n"}], "owner": {"reputation": 55, "user_id": 7206831, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/004d8b661aa171708023c2487544fa87?s=128&d=identicon&r=PG&f=1", "display_name": "systderr", "link": "https://stackoverflow.com/users/7206831/systderr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 327, "favorite_count": 0, "accepted_answer_id": 57514945, "answer_count": 1, "score": 0, "last_activity_date": 1565896757, "creation_date": 1565811690, "last_edit_date": 1565896757, "question_id": 57501032, "link": "https://stackoverflow.com/questions/57501032/cant-figure-out-how-to-send-a-signed-post-request-to-okex", "title": "Can&#39;t figure out how to send a signed POST request to OKEx", "body": "<p>I want to send a signed POST request to Okex: <a href=\"https://www.okex.com/docs/en/#summary-yan-zheng\" rel=\"nofollow noreferrer\">Authentication Docs</a> <a href=\"https://www.okex.com/docs/en/#spot-orders\" rel=\"nofollow noreferrer\">POST Request Docs</a>.</p>\n\n<p>I always get back an \"invalid sign\" error.</p>\n\n<p>I successfully sent a signed GET request. For the POST you also need to add the body in the signature. If I do that, none of my signatures are valid anymore. I already verified that my signature is the same as one produced by their official Python SDK (that's why I wrote the JSON by hand. Python has spaces in the JSON). I am new to Rust so I am hoping I am missing something obvious.</p>\n\n<p>OKEx client implementations in other languages: <a href=\"https://github.com/okcoin-okex/open-api-v3-sdk\" rel=\"nofollow noreferrer\">https://github.com/okcoin-okex/open-api-v3-sdk</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// [dependencies]\n/// hmac=\"0.7.1\"\n/// reqwest = \"0.9.18\"\n/// chrono = \"0.4.6\"\n/// base64=\"0.10.1\"\n/// sha2=\"0.8.0\"\n\nuse reqwest::header::{HeaderMap, HeaderValue, CONTENT_TYPE};\nuse chrono::prelude::{Utc, SecondsFormat};\nuse hmac::{Hmac, Mac};\nuse sha2::{Sha256};\n\nstatic API_KEY: &amp;'static str = \"&lt;insert your key!&gt;\";\nstatic API_SECRET: &amp;'static str = \"&lt;insert your secret!&gt;\";\nstatic PASSPHRASE: &amp;'static str = \"&lt;insert your passphrase!&gt;\";\n\nfn main() {\n    let timestamp = Utc::now().to_rfc3339_opts(SecondsFormat::Millis, true);\n    let method = \"POST\";\n    let request_path = \"/api/spot/v3/orders\";\n\n    let body_str = \"{\\\"type\\\": \\\"market\\\", \\\"side\\\": \\\"sell\\\", \\\"instrument_id\\\": \\\"ETH-USDT\\\", \\\"size\\\": \\\"0.001\\\"}\";\n    let mut signature_content = String::new();\n    signature_content.push_str(&amp;timestamp);\n    signature_content.push_str(method);\n    signature_content.push_str(request_path);\n    signature_content.push_str(&amp;body_str);\n\n    type HmacSha256 = Hmac&lt;Sha256&gt;;\n    let mut mac = HmacSha256::new_varkey(API_SECRET.as_bytes()).unwrap();\n    mac.input(signature_content.as_bytes());\n    let signature = mac.result().code();\n    let base64_signature = base64::encode(&amp;signature);\n\n    let mut header_map = HeaderMap::new();\n    header_map.insert(\"OK-ACCESS-KEY\", HeaderValue::from_str(API_KEY).unwrap());\n    header_map.insert(\"OK-ACCESS-SIGN\", HeaderValue::from_str(&amp;base64_signature).unwrap());\n    header_map.insert(\"OK-ACCESS-TIMESTAMP\", HeaderValue::from_str(&amp;timestamp).unwrap());\n    header_map.insert(\"OK-ACCESS-PASSPHRASE\", HeaderValue::from_str(PASSPHRASE).unwrap());\n    header_map.insert(CONTENT_TYPE, HeaderValue::from_static(\"application/json; charset=UTF-8\"));\n\n    let client = reqwest::Client::new();\n    let mut complete_url = String::from(\"https://okex.com\");\n    complete_url.push_str(request_path);\n\n    let res = client\n        .post(complete_url.as_str())\n        .headers(header_map)\n        .body(body_str)\n        .send().unwrap().text();\n\n    println!(\"{:#?}\", res);\n}\n</code></pre>\n\n<p>This returns an \"Invalid Sign\" error at the moment but should return a successful http code (if enough funds are on the account).</p>\n"}, {"tags": ["javascript", "html", "rust", "rust-actix"], "comments": [{"owner": {"reputation": 328, "user_id": 9201313, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cBb0j.jpg?s=128&g=1", "display_name": "ds_secret", "link": "https://stackoverflow.com/users/9201313/ds-secret"}, "edited": false, "score": 0, "creation_date": 1565806739, "post_id": 57500023, "comment_id": 101469565, "body": "Have you checked Web Inspector?"}, {"owner": {"reputation": 121, "user_id": 11326476, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-CfdhGIV4dpE/AAAAAAAAAAI/AAAAAAAAClo/2WDyuMZZmAs/photo.jpg?sz=128", "display_name": "Ray Kochenderfer", "link": "https://stackoverflow.com/users/11326476/ray-kochenderfer"}, "reply_to_user": {"reputation": 328, "user_id": 9201313, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cBb0j.jpg?s=128&g=1", "display_name": "ds_secret", "link": "https://stackoverflow.com/users/9201313/ds-secret"}, "edited": false, "score": 0, "creation_date": 1565807202, "post_id": 57500023, "comment_id": 101469775, "body": "Yes, I have. When I open the file that it says is linked there it is blank. If I open the file directly from the file explorer the JavaScript file is properly linked and working."}, {"owner": {"reputation": 328, "user_id": 9201313, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cBb0j.jpg?s=128&g=1", "display_name": "ds_secret", "link": "https://stackoverflow.com/users/9201313/ds-secret"}, "edited": false, "score": 0, "creation_date": 1565807348, "post_id": 57500023, "comment_id": 101469835, "body": "Do you have it open to the internet so that I could check it out?"}, {"owner": {"reputation": 121, "user_id": 11326476, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-CfdhGIV4dpE/AAAAAAAAAAI/AAAAAAAAClo/2WDyuMZZmAs/photo.jpg?sz=128", "display_name": "Ray Kochenderfer", "link": "https://stackoverflow.com/users/11326476/ray-kochenderfer"}, "reply_to_user": {"reputation": 328, "user_id": 9201313, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cBb0j.jpg?s=128&g=1", "display_name": "ds_secret", "link": "https://stackoverflow.com/users/9201313/ds-secret"}, "edited": false, "score": 0, "creation_date": 1565807469, "post_id": 57500023, "comment_id": 101469885, "body": "Sorry no, I&#39;m developing it locally as of right now."}, {"owner": {"reputation": 328, "user_id": 9201313, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cBb0j.jpg?s=128&g=1", "display_name": "ds_secret", "link": "https://stackoverflow.com/users/9201313/ds-secret"}, "edited": false, "score": 0, "creation_date": 1565808185, "post_id": 57500023, "comment_id": 101470160, "body": "Are you sure that <code>index.html</code> is pointing to the correct location to get <code>index.js</code>?"}, {"owner": {"reputation": 121, "user_id": 11326476, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-CfdhGIV4dpE/AAAAAAAAAAI/AAAAAAAAClo/2WDyuMZZmAs/photo.jpg?sz=128", "display_name": "Ray Kochenderfer", "link": "https://stackoverflow.com/users/11326476/ray-kochenderfer"}, "reply_to_user": {"reputation": 328, "user_id": 9201313, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cBb0j.jpg?s=128&g=1", "display_name": "ds_secret", "link": "https://stackoverflow.com/users/9201313/ds-secret"}, "edited": false, "score": 0, "creation_date": 1565808890, "post_id": 57500023, "comment_id": 101470418, "body": "Yes, when I open the file on my computer it works fine but when I serve it it is not present. The index.js file is in the same directory as index.html so src=&quot;index.js&quot; should be pointing right at it."}, {"owner": {"reputation": 328, "user_id": 9201313, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/cBb0j.jpg?s=128&g=1", "display_name": "ds_secret", "link": "https://stackoverflow.com/users/9201313/ds-secret"}, "edited": false, "score": 0, "creation_date": 1565809437, "post_id": 57500023, "comment_id": 101470604, "body": "No, that&#39;s not what I meant to ask. Are you sure that <code>index.html</code> shouldn&#39;t be pointing to <code>checksheet&#47;public&#47;index.js</code>?"}], "owner": {"reputation": 121, "user_id": 11326476, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-CfdhGIV4dpE/AAAAAAAAAAI/AAAAAAAAClo/2WDyuMZZmAs/photo.jpg?sz=128", "display_name": "Ray Kochenderfer", "link": "https://stackoverflow.com/users/11326476/ray-kochenderfer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 257, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1565806504, "creation_date": 1565806504, "question_id": 57500023, "link": "https://stackoverflow.com/questions/57500023/served-javascript-file-is-blank", "title": "Served JavaScript file is blank", "body": "<p>I'm setting up an Actix server that will host a  variety of static files with the traffic of the web applications running through this single server. When I try to serve a file however, it will serve my assets folder and my HTML file but not my JavaScript file.</p>\n\n<p>I've tried using NamedFile to no advantage and I have tried using \"./index.js\", \"index.js\", and moving it to its own js folder and trying \"js/index.js\".</p>\n\n<p>main.rs</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>HttpServer::new(|| {\n    App::new()\n        .service(\n            web::scope(\"/\")\n            // Checksheet\n                .service(\n                    web::scope(\"/checksheet\")\n                        .route(\"/save\", web::get().to(save_checksheet))\n                        .service(\n                            fs::Files::new(\"\", \"./quality- \n                            checksheet/public/\")\n                               .index_file(\"index.html\")\n                        )                            \n                 )\n</code></pre>\n\n<p>index.html</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\n    &lt;title&gt;Quality Checksheet&lt;/title&gt;\n    &lt;script src=\"index.js\"&gt;&lt;/script&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css?family=Roboto&amp;display=swap\" rel=\"stylesheet\"&gt;\n</code></pre>\n\n<p>Project Structure</p>\n\n<pre><code>.\n+-- src\n|   +-- main.rs\n+-- checksheet\n|   +-- public\n|       +-- assets\n|           +-- badge.img\n|       +-- index.html\n|       +-- index.js\n</code></pre>\n\n<p>When my server is launched and you go to the page the index.js file is empty, but the assets folder has the images used in the page and the index.html page is displaying.</p>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565804464, "post_id": 57499536, "comment_id": 101468627, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/28126735/155423\">Is there a way to perform an index access to an instance of a struct?</a> and <a href=\"https://stackoverflow.com/q/25413201/155423\">How do I implement a trait I don&#39;t own for a type I don&#39;t own?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57499536/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565804602, "post_id": 57499536, "comment_id": 101468702, "body": "@Shepmaster Thanks, this did answer my question."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 5, "creation_date": 1565804629, "post_id": 57499536, "comment_id": 101468716, "body": "You can just also <code>i * 2 + 1</code> and <code>i * 2 + 2</code> instead for the child indices?"}, {"owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1565804843, "post_id": 57499536, "comment_id": 101468807, "body": "@Zeta oops, maybe I didn&#39;t get enough sleep last night"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1565804954, "post_id": 57499536, "comment_id": 101468849, "body": "For future searchers, explicitly stating the fusion of the two duplicates: No, you cannot change how a <code>Vec</code> is indexed, but you can create a <i>newtype</i> around a <code>Vec</code> and implement <code>Index</code> / <code>IndexMut</code> for that type however you&#39;d like."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1565804989, "post_id": 57499536, "comment_id": 101468867, "body": "@laptou I accidentally a word in my comment too, so I probably didn&#39;t get enough sleep last night either... :D"}], "owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 318, "favorite_count": 1, "closed_date": 1565804655, "answer_count": 0, "score": 2, "last_activity_date": 1565804662, "creation_date": 1565804191, "question_id": 57499536, "link": "https://stackoverflow.com/questions/57499536/is-there-a-way-to-index-vectors-from-1-in-rust", "closed_reason": "Duplicate", "title": "Is there a way to index vectors from 1 in Rust?", "body": "<p>I'm implementing a binary heap, and in other languages, it's most convenient to do so by storing an internal array, but set the first element of this array to <code>null</code> and ignore it. This way, if a node is located at index <code>i</code>, its children will always be located at <code>i * 2</code> and <code>i * 2 + 1</code>.</p>\n\n<p>This no longer works if index 0 is used, because 0 * 2 = 0. However, in Rust, there is no <code>null</code>, so I would have to use <code>Vec&lt;Option&lt;MyHeapItem&gt;&gt;</code> instead of <code>Vec&lt;MyHeapItem&gt;</code>, which makes everything more cumbersome.</p>\n\n<p>So my question is, is there a way to customize <code>Vec&lt;T&gt;</code> so that index 1 refers to the first element?</p>\n"}, {"tags": ["recursion", "rust", "reference-counting"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565799215, "post_id": 57498358, "comment_id": 101466527, "body": "You seem be attempting to lock the mutex twice at the same time, which creates a deadlock. Why are you doing that? Why do you leak the <code>Box</code>? Why do you set <code>f</code> in main to a number and then overwrite it?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565800457, "post_id": 57498358, "comment_id": 101467088, "body": "<code>Box::leak</code> seems unnecessary here. Actually, the whole inner <code>Box</code> does. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ae83edac29242e00b61c166b439423b5\" rel=\"nofollow noreferrer\">This appears to do the same thing</a> (which is to say, it deadlocks)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565800791, "post_id": 57498358, "comment_id": 101467216, "body": "I bet the <code>Box::leak</code> was a workaround for <code>Box&lt;dyn FnMut...&gt;</code> not implementing <code>FnMut</code> in a version of Rust prior to 1.35. Although why the <code>Box</code> is there at all, I&#39;m not sure."}], "owner": {"reputation": 11, "user_id": 11927504, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0bb8a9fe90ff7f6772420d25a27d98d?s=128&d=identicon&r=PG&f=1", "display_name": "u89", "link": "https://stackoverflow.com/users/11927504/u89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 78, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1565799597, "creation_date": 1565798778, "last_edit_date": 1565799597, "question_id": 57498358, "link": "https://stackoverflow.com/questions/57498358/how-to-recursively-call-a-closure-that-is-stored-in-an-arcmutex", "title": "How to recursively call a closure that is stored in an Arc&lt;Mutex&lt;_&gt;&gt;?", "body": "<p>I\u2019m trying to transpile a dynamic language into Rust and closures are the most difficult part to implement.</p>\n\n<p>I've tried  using a <code>Arc&lt;Mutex&lt;dyn FnMut&gt;&gt;</code>, but it doesn't support recursion.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Mutex};\n\ntype Data = Arc&lt;DataUnpack&gt;;\nenum DataUnpack {\n    Number(f64),\n    Function(Box&lt;Mutex&lt;FnMut(Vec&lt;Data&gt;) -&gt; Data&gt;&gt;),\n}\n\nfn call(f: Data, args: Vec&lt;Data&gt;) -&gt; Data {\n    if let DataUnpack::Function(v) = &amp;*f {\n        let f = &amp;mut *v.lock().unwrap();\n        f(args)\n    } else {\n        panic!(\"TYPE ERR\")\n    }\n}\n\nfn lambda(f: Box&lt;FnMut(Vec&lt;Data&gt;) -&gt; Data&gt;) -&gt; Data {\n    Arc::new(DataUnpack::Function(Box::new(Mutex::new(Box::leak(f)))))\n}\n\nfn main() {\n    let f: Arc&lt;Mutex&lt;Data&gt;&gt; = Arc::new(Mutex::new(Arc::new(DataUnpack::Number(0.0))));\n    *f.lock().unwrap() = {\n        let f = f.clone();\n        lambda(Box::new(move |xs| {\n            println!(\"Ha\");\n            call(f.lock().unwrap().clone(), xs.clone())\n        }))\n    };\n    call(f.lock().unwrap().clone(), vec![]);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a30bef46414614a775a1002aecabb564\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>It shows one <code>Ha</code> and then stops. Where am I wrong?</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 482, "user_id": 4760674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tMvVK.jpg?s=128&g=1", "display_name": "Major", "link": "https://stackoverflow.com/users/4760674/major"}, "reply_to_user": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1565876607, "post_id": 57497045, "comment_id": 101489196, "body": "The regex crate says look around isn&#39;t supported, so I didn&#39;t even try it.  I get the error: <code>error: look-around, including look-ahead and look-behind, is not supported</code>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565795166, "post_id": 57497310, "comment_id": 101464447, "body": "It&#39;s not possible to get the offset of the first match, then start the next search one codepoint in, repeating until no more matches?"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565810381, "post_id": 57497310, "comment_id": 101470970, "body": "Yeah I guess that to me falls under &quot;different approach.&quot; I don&#39;t think it will work in all cases. When I get a chance I can update my answer to include some code for that."}, {"owner": {"reputation": 482, "user_id": 4760674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tMvVK.jpg?s=128&g=1", "display_name": "Major", "link": "https://stackoverflow.com/users/4760674/major"}, "edited": false, "score": 0, "creation_date": 1565976571, "post_id": 57497310, "comment_id": 101523706, "body": "I used the onig binding and the look-ahead method works now. However, this particular method requires knowing how long the capture will be because we can&#39;t capture the part inside the look-ahead part. Do you know if there&#39;s an option to turn that on? I can&#39;t find documentation for that at all."}], "tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": true, "score": 3, "last_activity_date": 1565794887, "creation_date": 1565794887, "answer_id": 57497310, "question_id": 57497045, "link": "https://stackoverflow.com/questions/57497045/how-to-get-overlapping-regex-captures-in-rust/57497310#57497310", "title": "How to get overlapping regex captures in Rust?", "body": "<p>You can't. Your only recourse is to either find a different approach entirely, or use a different regex engine that supports look-around like <a href=\"https://crates.io/crates/onig\" rel=\"nofollow noreferrer\"><code>onig</code></a> or <a href=\"https://crates.io/crates/pcre2\" rel=\"nofollow noreferrer\"><code>pcre2</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 482, "user_id": 4760674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tMvVK.jpg?s=128&g=1", "display_name": "Major", "link": "https://stackoverflow.com/users/4760674/major"}, "is_accepted": false, "score": 1, "last_activity_date": 1565880163, "creation_date": 1565880163, "answer_id": 57511423, "question_id": 57497045, "link": "https://stackoverflow.com/questions/57497045/how-to-get-overlapping-regex-captures-in-rust/57511423#57511423", "title": "How to get overlapping regex captures in Rust?", "body": "<p>I found a solution, unfortunately not regex though:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn main() {\n    print_char_matches (\"aba34jf baacdaab\", 'a', 2);\n    //aba a34 aac acd aab, as it should.\n}\n\npub fn print_char_matches( st:&amp;str, char_match:char, match_length:usize ) {\n    let chars:Vec&lt;_&gt; = st.char_indices().collect();\n\n    println!(\"String to match: {}\", st);\n\n    for i in 0..chars.len()-match_length {\n        if chars[i].1 == char_match {\n            for j in 0..=match_length {\n                print!(\"{}\", chars[i+j].1);\n            }\n            print!(\" \");\n        }\n    }\n    println!(\"\");\n}\n</code></pre>\n\n<p>This is a bit more generalizable, ASCII only.  Matches the character provided and the specified number of digits after the match.</p>\n"}], "owner": {"reputation": 482, "user_id": 4760674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tMvVK.jpg?s=128&g=1", "display_name": "Major", "link": "https://stackoverflow.com/users/4760674/major"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 397, "favorite_count": 0, "accepted_answer_id": 57497310, "answer_count": 2, "score": 2, "last_activity_date": 1565964114, "creation_date": 1565794019, "last_edit_date": 1565964114, "question_id": 57497045, "link": "https://stackoverflow.com/questions/57497045/how-to-get-overlapping-regex-captures-in-rust", "title": "How to get overlapping regex captures in Rust?", "body": "<p>I'm trying to match the two characters after a specific character. The trailing values may contain the specified character, which is ok, but I also need to capture that specified character as the beginning of the next capture group.</p>\n\n<p>This code should illustrate what I mean:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate regex;\nuse regex::Regex;\n\n\npub fn main() {\n    let re = Regex::new(\"(a..)\").unwrap();\n    let st = String::from(\"aba34jf baacdaab\");\n    println!(\"String to match: {}\", st);\n\n    for cap in re.captures_iter(&amp;st) {\n        println!(\"{}\", cap[1].to_string());\n        // Prints \"aba\" and \"aac\",\n        // Should print \"aba\", \"a34\", \"aac\", \"acd\", \"aab\"\n    }\n}\n</code></pre>\n\n<p>How do I get overlapping captures without using look around (which the regex crate doesn't support in Rust)?  Is there something similar to what is in Python (<a href=\"https://stackoverflow.com/questions/11430863/how-to-find-overlapping-matches-with-a-regexp/18966698#18966698\">as mentioned here</a>) but in Rust?</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>Using onig as BurntSushi5 suggested, we get the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate onig;\nuse onig::*;\n\npub fn main() {\n    let re = Regex::new(\"(?=(a.{2}))\").unwrap();\n    let st = String::from(\"aba34jf baacdaab\");\n    println!(\"String to match: {}\", st);\n\n    for ch in re.find_iter(&amp;st) {\n        print!(\"{} \", &amp;st[ch.0..=ch.1+2]);\n        // aba a34 aac acd aab, as it should.\n        // but we have to know how long the capture is.\n    }\n    println!(\"\");\n}\n</code></pre>\n\n<p>Now the problem with this is that you have to know how long the regex is, because the look ahead group doesn't capture. Is there a way to get the look ahead regex captured without knowing the length beforehand? How would we print it out if we had something like <code>(?=(a.+))</code> as the regex?</p>\n"}, {"tags": ["string", "pointers", "vector", "rust", "slice"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1565797809, "post_id": 57496456, "comment_id": 101465853, "body": "I get the feeling you don&#39;t quite believe that <code>str</code> is to <code>String</code> as <code>[T]</code> is to <code>Vec&lt;T&gt;</code>. <code>[T]</code> is built-in, just like <code>str</code> -- you wouldn&#39;t be able to find the source for <code>[T]</code> in the standard library. But you seem to be confused about <code>String</code>, and not about <code>Vec</code> -- can you articulate why?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565798563, "post_id": 57496456, "comment_id": 101466231, "body": "your question could be why not use <code>*mut u8</code>... This is basic object concept. String is a mutable UTF-8, <code>str</code> is a no mutable UTF-8. It&#39;s two type because it&#39;s represent two different thing. If we use <code>Vec&lt;u8&gt;</code> what guarantee would we have that it&#39;s a utf-8 string ? none. The user would have to know that. That the C way;"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565985013, "post_id": 57496456, "comment_id": 101526727, "body": "@Stargateur to which the answer would be: because <i>pointer</i> dereferencing is impossible in safe rust."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565796366, "post_id": 57496514, "comment_id": 101465140, "body": "More common is a string literal, which is also not a <code>String</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565796547, "post_id": 57496514, "comment_id": 101465253, "body": "@Shepmaster Very true. I should have think about it first."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 7, "last_activity_date": 1565796335, "last_edit_date": 1565796335, "creation_date": 1565792234, "answer_id": 57496514, "question_id": 57496456, "link": "https://stackoverflow.com/questions/57496456/why-does-the-str-primitive-exist/57496514#57496514", "title": "Why does the &amp;str primitive exist?", "body": "<p><code>&amp;str</code> is not necessarily a view to a <code>String</code>, it can be a view to anything that is a valid UTF-8 string.</p>\n\n<p>For example, the crate <a href=\"https://crates.io/crates/arraystring\" rel=\"nofollow noreferrer\">arraystring</a> allows creating a string on the stack that can be <a href=\"https://docs.rs/arraystring/0.3.0/arraystring/struct.ArrayString.html#impl-AsRef%3Cstr%3E\" rel=\"nofollow noreferrer\">viewed as a <code>&amp;str</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 0, "creation_date": 1565795698, "post_id": 57497049, "comment_id": 101464747, "body": "Could you add to your 4 points above another pair of points for <code>Vector&lt;char&gt;</code> vs <code>[char]</code> for clarity? Perhaps that would help me refine my question. I didn&#39;t compute that <code>&amp;str</code> is a strongly typed pointer to UTF-8, whereas <code>String</code> is just a type with the constraint in it&#39;s constructor and that we would need the ability to differentiate <code>&amp;mut [u8]</code> from a subtype that has to be constructed as UTF-8."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 1, "creation_date": 1565797475, "post_id": 57497049, "comment_id": 101465706, "body": "@EvanCarroll a <code>Vec&lt;char&gt;</code> / <code>&amp;[char]</code> don&#39;t have any real relation to <code>String</code> / <code>str</code>. At best, they would be a UTF-32 string, but generally there&#39;s no use for such a type. <i><code>String</code> [...] constraint in it&#39;s constructor</i> \u2014 and every mutating method."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1565797227, "last_edit_date": 1565797227, "creation_date": 1565794037, "answer_id": 57497049, "question_id": 57496456, "link": "https://stackoverflow.com/questions/57496456/why-does-the-str-primitive-exist/57497049#57497049", "title": "Why does the &amp;str primitive exist?", "body": "<p>It exists for the same reason that <code>String</code> exists, and we don't just pass around <code>Vec&lt;u8&gt;</code> for every string.</p>\n\n<ul>\n<li>A <code>String</code> is an owned, growable container of data that <strong>is guaranteed to be UTF-8</strong>.</li>\n<li><code>&amp;str</code> is a borrowed, fixed-length container of data that <strong>is guaranteed to be UTF-8</strong></li>\n<li>A <code>Vec&lt;u8&gt;</code> is an owned, growable container of <code>u8</code>.</li>\n<li><code>&amp;[u8]</code> is a borrowed, fixed-length container of <code>u8</code>.</li>\n</ul>\n\n<p>This is effectively the reason that types exist, period \u2014 to provide abstraction and guarantees (a.k.a. restrictions) on a looser blob of bits.</p>\n\n<p>If we had access to the string as <code>&amp;mut [u8]</code>, then we could trivially ruin the UTF-8 guarantee, which is why all such methods are marked as <code>unsafe</code>. Even with an immutable <code>&amp;[u8]</code>, we wouldn't be able to make assumptions (a.k.a. optimizations) about the data and would have to write much more defensive code everywhere.</p>\n\n<blockquote>\n  <p>but there isn't any mention of a single method that they're different</p>\n</blockquote>\n\n<p>Looking at the documentation for <a href=\"https://doc.rust-lang.org/std/primitive.str.html\" rel=\"nofollow noreferrer\"><code>str</code></a> and <a href=\"https://doc.rust-lang.org/std/primitive.slice.html\" rel=\"nofollow noreferrer\"><code>slice</code></a> quickly shows a number of methods that exist on one that don't exist on the other, so I don't understand your statement. <code>split_last</code> is the first one that caught my eye, for example.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1565797227, "creation_date": 1565792002, "last_edit_date": 1565793992, "question_id": 57496456, "link": "https://stackoverflow.com/questions/57496456/why-does-the-str-primitive-exist", "title": "Why does the &amp;str primitive exist?", "body": "<p>If <a href=\"https://doc.rust-lang.org/src/alloc/string.rs.html#283-285\" rel=\"nofollow noreferrer\"><code>String</code> is actually</a></p>\n\n<pre><code>pub struct String {\n    vec: Vec&lt;u8&gt;,\n}\n</code></pre>\n\n<p>Then why is there a special syntax (<code>&amp;str</code>) for a slice of a <code>Vec&lt;u8&gt;</code>? In Chapter 3 of <a href=\"https://www.oreilly.com/library/view/programming-rust/9781491927274/ch03.html\" rel=\"nofollow noreferrer\"><em>\"Programming Rust\"</em> by Jim Blandy &amp; Jason Orendorff</a> it says,</p>\n\n<blockquote>\n  <p><em><code>&amp;str</code> is very much like <code>&amp;[T]</code>: a fat pointer to some data. <code>String</code> is analogous to <code>Vec&lt;T&gt;</code></em></p>\n</blockquote>\n\n<p>Following that statement there is a chart which shows all the ways they're similar, but there isn't any mention of a single method that they're different. Is a <code>&amp;str;</code> just a <code>&amp;[T]</code>?</p>\n\n<p>Likewise  in the answer to, <a href=\"https://stackoverflow.com/a/24159933/124486\"><em>What are the differences between Rust's <code>String</code> and <code>str</code>?</em></a> it says</p>\n\n<blockquote>\n  <p>This is identical to the relationship between a vector <code>Vec&lt;T&gt;</code> and a slice <code>&amp;[T]</code>, and is similar to the relationship between by-value <code>T</code> and by-reference <code>&amp;T</code> for general types.</p>\n</blockquote>\n\n<p>That question focuses on the difference between <code>String</code> and <code>&amp;str</code>. Knowing that a <code>String</code> really is a vector of <code>u8</code>, I'm more interested in <code>&amp;str</code>, which I can't even find the source to. Why does this primitive even exist when we have a primitive (implemented as a fat pointer) for regular vector slices?</p>\n"}, {"tags": ["hash", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565793621, "post_id": 57496355, "comment_id": 101463531, "body": "It&#39;s very unclear what the problem is here; how have you tried to return it? Do you know how to return values in Rust?"}, {"owner": {"reputation": 101, "user_id": 4604062, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/Br5nS.jpg?s=128&g=1", "display_name": "hphex", "link": "https://stackoverflow.com/users/4604062/hphex"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565830792, "post_id": 57496355, "comment_id": 101476058, "body": "@Shepmaster Sorry for the cunfusion. I would like to pass the value to a variable instead of just doing <code>print_result(&amp;sh.result());</code>"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 1, "last_activity_date": 1566557307, "creation_date": 1566557307, "answer_id": 57624759, "question_id": 57496355, "link": "https://stackoverflow.com/questions/57496355/how-to-return-a-result-from-the-blake2-crate-in-rust/57624759#57624759", "title": "How to return a result from the Blake2 crate in Rust?", "body": "<p>When you're returning a newly-created object, you have to return it as an <em>owned</em> value.</p>\n\n<p>Borrowed references, such as <code>&amp;[u8]</code> are temporary and can't exist by themselves, they're merely a views of data that has storage in an owned form elsewhere.</p>\n\n<p>You can for example, call <code>.to_vec()</code> on the slice and return <code>Vec&lt;u8&gt;</code>.</p>\n"}], "owner": {"reputation": 101, "user_id": 4604062, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/Br5nS.jpg?s=128&g=1", "display_name": "hphex", "link": "https://stackoverflow.com/users/4604062/hphex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 57624759, "answer_count": 1, "score": 0, "last_activity_date": 1566557307, "creation_date": 1565791654, "last_edit_date": 1565793575, "question_id": 57496355, "link": "https://stackoverflow.com/questions/57496355/how-to-return-a-result-from-the-blake2-crate-in-rust", "title": "How to return a result from the Blake2 crate in Rust?", "body": "<p>I am struggling getting the hash of the passed file name using the <code>blake2</code> crate. From the documentation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate blake2;\n\nuse blake2::{Blake2b, Digest};\nuse std::env;\nuse std::fs;\nuse std::io::{self, Read};\n\nconst BUFFER_SIZE: usize = 1024;\n\nfn print_result(sum: &amp;[u8]) {\n    for byte in sum {\n        print!(\"{:02x}\", byte);\n    }\n}\n\nfn process&lt;D: Digest + Default, R: Read&gt;(reader: &amp;mut R) {\n    let mut sh = D::default();\n    let mut buffer = [0u8; BUFFER_SIZE];\n    loop {\n        let n = match reader.read(&amp;mut buffer) {\n            Ok(n) =&gt; n,\n            Err(_) =&gt; return,\n        };\n        sh.input(&amp;buffer[..n]);\n        if n == 0 || n &lt; BUFFER_SIZE {\n            break;\n        }\n    }\n    print_result(&amp;sh.result());\n}\n\nfn main() {\n    let args = env::args();\n    if args.len() &gt; 1 {\n        for path in args.skip(1) {\n            if let Ok(mut file) = fs::File::open(&amp;path) {\n                process::&lt;Blake2b, _&gt;(&amp;mut file);\n            }\n        }\n    } else {\n        process::&lt;Blake2b, _&gt;(&amp;mut io::stdin());\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>blake-test   $ cargo run hoge.txt\n   Compiling blake-test v0.1.0 (/Users/hoge/blake-test)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.61s\n     Running `target/debug/blake-test hoge.txt`\neefea9ae6b7fb678ed54e6d58d46aed9eae6d003f29419948cdb42a44a7016dee3eb566e7e95c68ac7587d5debd516a3b195eed0db84d72819e387d687fd06a6\n</code></pre>\n\n<p>It can successfully print the the <code>&amp;[u8]</code> slice.</p>\n\n<p>However, I want to receive/return the results instead of printing them. </p>\n"}, {"tags": ["rust", "iterator", "traits"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1565783107, "post_id": 57493895, "comment_id": 101457760, "body": "The usual alternative is either a <code>Box</code> or to create an enum of possible iterators types. I wouldn&#39;t say either one is more Rusty than the other, but really which is the best for your use case."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565783269, "post_id": 57493895, "comment_id": 101457815, "body": "An enum will give callers the ability to inspect which type of iterator they&#39;ve got (you might want this or you might want to hide this information), but will also be hard to express because you&#39;ll need to include the exact iterator types, which can be clunky if you use iterator combinators."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565783352, "post_id": 57493895, "comment_id": 101457850, "body": "The other option is to return a single iterator  type, which handles all of the possibilities. Perhaps that can be done with combinators, or might need to be custom."}, {"owner": {"reputation": 1177, "user_id": 1641860, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac2f6e7d63f9076d86cabaab5a60ddb2?s=128&d=identicon&r=PG", "display_name": "JeroenHoek", "link": "https://stackoverflow.com/users/1641860/jeroenhoek"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565783419, "post_id": 57493895, "comment_id": 101457886, "body": "With &#39;single iterator type&#39; you mean a concrete implemntation of the <code>Iterator&lt;Item = char&gt;</code> trait?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565783708, "post_id": 57493895, "comment_id": 101458029, "body": "Yes, that&#39;s what I meant."}, {"owner": {"reputation": 1177, "user_id": 1641860, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac2f6e7d63f9076d86cabaab5a60ddb2?s=128&d=identicon&r=PG", "display_name": "JeroenHoek", "link": "https://stackoverflow.com/users/1641860/jeroenhoek"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565783805, "post_id": 57493895, "comment_id": 101458084, "body": "I guess I could simply return <code>Vec&lt;char&gt;</code>, but since I&#39;m using the returned iterator in a <code>flat_map</code> the iterator seems to make sense. Returning an empty or single item vector feels a bit wrong compared to <code>iter::empty</code> and <code>iter::once(n)</code>."}], "owner": {"reputation": 1177, "user_id": 1641860, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac2f6e7d63f9076d86cabaab5a60ddb2?s=128&d=identicon&r=PG", "display_name": "JeroenHoek", "link": "https://stackoverflow.com/users/1641860/jeroenhoek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 65, "favorite_count": 0, "closed_date": 1565788883, "answer_count": 0, "score": 1, "last_activity_date": 1565789025, "creation_date": 1565782485, "last_edit_date": 1565789025, "question_id": 57493895, "link": "https://stackoverflow.com/questions/57493895/is-the-box-necessary-to-return-a-trait-from-a-function", "closed_reason": "Duplicate", "title": "Is the Box necessary to return a trait from a function?", "body": "<p>I have a function that parses strings gathered from command line arguments. The function looks if the single argument it receives matches a Unicode codepoint notation (like <code>U+20AC</code> or a special case for non-BMP characters <code>U-000020AC</code>), and if it does, convert that to a <code>char</code>. If the argument does not look like this notation, every character in that argument is converted to <code>char</code>.</p>\n\n<p>The function returns an <code>Iterator&lt;Item = char&gt;</code> containing all Unicode characters found in the input \u2014 regardless of how they were specified, for example, as <code>U+20AC</code>, <code>U-000020AC</code>, or <code>\u20ac</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(trait_alias)]\n\nuse std::iter;\n\ntrait CharIterator = Iterator&lt;Item = char&gt;;\n\nfn to_chars(input: &amp;str) -&gt; impl CharIterator {\n    if input.starts_with(\"U+\") || input.starts_with(\"U-\") {\n        // A Unicode codepoint reference.\n        let cp = &amp;input[2..];\n        let c = u32::from_str_radix(cp, 16)\n            .ok()\n            .and_then(std::char::from_u32);\n        match c {\n            Some(c) =&gt; Box::new(iter::once(c)) as Box&lt;dyn CharIterator&gt;,\n            // For now, just ignore erronous input.\n            _ =&gt; Box::new(iter::empty::&lt;char&gt;()) as Box&lt;dyn CharIterator&gt;,\n        }\n    } else {\n        // Characters as-is.\n        Box::new(input.chars().collect::&lt;Vec&lt;_&gt;&gt;().into_iter()) as Box&lt;dyn CharIterator&gt;\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn to_chars_test() {\n        assert_eq!(vec!('a'), to_chars(\"a\").collect::&lt;Vec&lt;_&gt;&gt;());\n        assert_eq!(vec!('a', 'b'), to_chars(\"ab\").collect::&lt;Vec&lt;_&gt;&gt;());\n        assert_eq!(vec!('a'), to_chars(\"U+0061\").collect::&lt;Vec&lt;_&gt;&gt;());\n        assert_eq!(vec!('\u6f22', '\u5b57'), to_chars(\"\u6f22\u5b57\").collect::&lt;Vec&lt;_&gt;&gt;());\n        assert_eq!(vec!('\u6f22'), to_chars(\"U+6F22\").collect::&lt;Vec&lt;_&gt;&gt;());\n        assert_eq!(None, to_chars(\"U+9999999\").next());\n    }\n}\n</code></pre>\n\n<p>The function can return three kinds of iterator:</p>\n\n<ul>\n<li>Valid Unicode codepoint notation: iterator with a single item</li>\n<li>Bogus Unicode codepoint notation: empty iterator</li>\n<li>Just a sequence of characters: iterator containing said characters</li>\n</ul>\n\n<p>In Rust, I can't seem to return different <code>Iterator</code> implementations from within <code>match</code>-branches in the same <code>match</code>. The solution people suggest is to return a <code>Box&lt;dyn Trait&gt;</code>.</p>\n\n<p>The above code works, but is it idiomatic?</p>\n\n<p>Is there a more elegant way?</p>\n\n<p>Some background: I'm a novice in Rust, but have experience in Java programming. In Java it is a good practice to code to an interface, not an implementation, thus returning interfaces is common.</p>\n\n<p>Am I approaching programming in Rust in the wrong way by automatically trying to apply this notion?</p>\n"}, {"tags": ["rust", "iterator", "lifetime"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565777306, "post_id": 57492551, "comment_id": 101454896, "body": "I would take a set of indices instead of a slice (to guarantee uniqueness) and use unsafe code."}, {"owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565778677, "post_id": 57492551, "comment_id": 101455606, "body": "I just added a note about a blog post that also mentions an unsafe solution. For my specific use case going through a set might actually work quite well."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565782217, "post_id": 57492551, "comment_id": 101457345, "body": "Or you can keep the slice and have a policy about the duplicates: either return an error or ignore the other times an index appears."}, {"owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1565783622, "post_id": 57492551, "comment_id": 101457991, "body": "I guess with a set you could even just reverse iteration (iterate the things and check whether the item&#39;s index is in the set) and do it all safely."}, {"owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565791331, "post_id": 57492551, "comment_id": 101462309, "body": "...but that is a lot slower. Quick benching shows a slowdown of about 50x compared to the loop solution."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565791555, "post_id": 57492551, "comment_id": 101462434, "body": "How is that possible? Do you have a code example?"}, {"owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565791591, "post_id": 57492551, "comment_id": 101462457, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/197942/discussion-between-michael-mauderer-and-french-boiethios\">continue this discussion in chat</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565791824, "post_id": 57492551, "comment_id": 101462584, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/55939552/155423\">Simultaneous mutable access to arbitrary indices of a large vector that are guaranteed to be disjoint</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57492551/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565792426, "post_id": 57492551, "comment_id": 101462910, "body": "@Shepmaster I have addressed the difference in the desired outcome in the question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565792892, "post_id": 57492551, "comment_id": 101463165, "body": "The question is about multithreaded, yes, but none of the answers are. Please review the <b>answers</b> and see if they answer your question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565792937, "post_id": 57492551, "comment_id": 101463200, "body": "<i>which might even allow indices to repeat</i> \u2014 absolutely 100% not possible and would lead to memory unsafety. <a href=\"https://stackoverflow.com/q/25730586/155423\">How can I create my own data structure with an iterator that returns mutable references?</a>. See also <a href=\"https://stackoverflow.com/q/30422177/155423\">How do I write an iterator that returns references to itself?</a>"}, {"owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "edited": false, "score": 0, "creation_date": 1565793585, "post_id": 57492551, "comment_id": 101463514, "body": "I think what I had in mind was a somewhat restricted iterator, that, e.g., only allows chaining of <code>for_each</code> and not &quot;collect&quot;, thus avoiding the issue of multiple concurrent mutable references. But I guess then the answer is that something like that just doesn&#39;t exist and needs workarounds like proposed in those answer (and my question)"}, {"owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "edited": false, "score": 0, "creation_date": 1565794137, "post_id": 57492551, "comment_id": 101463818, "body": "Actually this is what I was looking for: <a href=\"https://stackoverflow.com/a/30422716/1175813\">stackoverflow.com/a/30422716/1175813</a> &quot;Streaming iterators&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565794449, "post_id": 57492551, "comment_id": 101464013, "body": "So you&#39;d be happy marking this as a duplicate of the streaming iterators Q?"}, {"owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "edited": false, "score": 0, "creation_date": 1565794549, "post_id": 57492551, "comment_id": 101464073, "body": "Sure, go for it."}], "owner": {"reputation": 3351, "user_id": 1175813, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d347e8e2db656b5ab68b0248f0fd2111?s=128&d=identicon&r=PG", "display_name": "Michael Mauderer", "link": "https://stackoverflow.com/users/1175813/michael-mauderer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 106, "favorite_count": 0, "closed_date": 1565794781, "answer_count": 0, "score": 2, "last_activity_date": 1565794824, "creation_date": 1565777087, "last_edit_date": 1565792389, "question_id": 57492551, "link": "https://stackoverflow.com/questions/57492551/how-to-create-an-iterator-that-allows-mapping-indices-to-mutable-items-in-a-slic", "closed_reason": "Duplicate", "title": "How to create an iterator that allows mapping indices to mutable items in a slice", "body": "<p>I have a slice of items and a slice of indices into the first slice, essentially giving me a sub-group of items that I want to modify. To iterate over the items and manipulate them I can create the following helper function.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn process_things_by_index_loop&lt;T&gt;(things: &amp;mut [T], indices: &amp;[usize], f: &amp;dyn Fn(&amp;mut T)) {\n    for &amp;ix in indices {\n        let t = &amp;mut things[ix];\n        f(t);\n    }\n}\n</code></pre>\n\n<p>This works fine, but I would actually just like to get an iterator over the items so I can apply, e.g., a filter to them before further processing.</p>\n\n<p>It looks like this could just be a mapping of indices to items like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn iterate_thigns&lt;'a, T&gt;(\n    things: &amp;'a mut [T],\n    indices: &amp;'a [usize],\n) -&gt; impl Iterator&lt;Item = &amp;'a mut T&gt; {\n    indices.iter().map(|&amp;ix| -&gt; &amp;mut T { &amp;mut things[ix] })\n}\n</code></pre>\n\n<p>This can't work of course, since I could have the same index twice in the indices slice and when collecting the iterator I would create two mutable references to the same item. So this gives appropriately a life-time error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n --&gt; src\\main.rs:4:47\n  |\n4 |     indices.iter().map(|&amp;ix|-&gt;  &amp;mut T { &amp;mut things[ix]})\n  |                                               ^^^^^^^^^^\n  |\n\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n --&gt; src\\main.rs:4:47\n  |\n4 |     indices.iter().map(|&amp;ix|-&gt;  &amp;mut T { &amp;mut things[ix]})\n  |                                               ^^^^^^^^^^\n  |\nnote: first, the lifetime cannot outlive the lifetime '_ as defined on the body at 4:24...\n --&gt; src\\main.rs:4:24\n  |\n4 |     indices.iter().map(|&amp;ix|-&gt;  &amp;mut T { &amp;mut things[ix]})\n  |                        ^^^^^^^^^^^^^^^\nnote: ...so that reference does not outlive borrowed content\n --&gt; src\\main.rs:4:47\n  |\n4 |     indices.iter().map(|&amp;ix|-&gt;  &amp;mut T { &amp;mut things[ix]})\n  |                                               ^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the function body at 3:19...\n --&gt; src\\main.rs:3:19\n  |\n3 | fn iterate_thigns&lt;'a, T&gt;(things: &amp;'a mut [T], indices: &amp;'a [usize]) -&gt; impl Iterator&lt;Item=&amp;'a mut T&gt;{\n  |                   ^^\n  = note: ...so that the types are compatible:\n          expected &amp;mut T\n             found &amp;'a mut T\n</code></pre>\n\n<p>This also means the return type probably can't be a simple <code>Iterator</code> at all.</p>\n\n<p>This issues seems also related to <a href=\"https://smallcultfollowing.com/babysteps/blog/2013/10/24/iterators-yielding-mutable-references/\" rel=\"nofollow noreferrer\">this blog post from 2013 on \"Iterators yielding mutable references\"</a>, which states that no standard solutions for this pattern exist yet.</p>\n\n<p>There is also a related question <a href=\"https://stackoverflow.com/questions/55939552/simultaneous-mutable-access-to-arbitrary-indices-of-a-large-vector-that-are-guar\">asking about mutable multi threaded access to the content of a vector</a>, but I am really interested in a single threaded, iterator-like solution, which might even allow indices to repeat.</p>\n\n<p>So, is there something that enables an iterator-like interface for sequential iteration of the items indicated by the indices?</p>\n"}, {"tags": ["rust", "reqwest"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1565777148, "post_id": 57492508, "comment_id": 101454814, "body": "Please, read the Rust basis in the book. <code>&amp;mut body</code> allows the function to modify <code>body</code> without owning it."}], "answers": [{"comments": [{"owner": {"reputation": 57, "user_id": 4301173, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2741047c803d4cd696ef99656677a54b?s=128&d=identicon&r=PG", "display_name": "NickDa", "link": "https://stackoverflow.com/users/4301173/nickda"}, "edited": false, "score": 0, "creation_date": 1565777550, "post_id": 57492575, "comment_id": 101455019, "body": "See thats whats confusing me , the response from the GET request should contain the Status Code , Headers and body yet when you print the response that has been stored in res its only the body content so surely somewhere there is some &#39;filtering&#39;"}, {"owner": {"reputation": 2505, "user_id": 3118401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c066b73af214d8e7cf6b52f6ef75314a?s=128&d=identicon&r=PG", "display_name": "marcolz", "link": "https://stackoverflow.com/users/3118401/marcolz"}, "reply_to_user": {"reputation": 57, "user_id": 4301173, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2741047c803d4cd696ef99656677a54b?s=128&d=identicon&r=PG", "display_name": "NickDa", "link": "https://stackoverflow.com/users/4301173/nickda"}, "edited": false, "score": 2, "creation_date": 1565779787, "post_id": 57492575, "comment_id": 101456146, "body": "<a href=\"https://docs.rs/reqwest/0.6.2/reqwest/struct.Response.html\" rel=\"nofollow noreferrer\">reqwest::Response 0.6.2 documentation</a> states for <code>Read</code> for <code>Response</code>: <i>Read the body of the Response</i> which somehow seems missing from the documentation of the current version."}, {"owner": {"reputation": 57, "user_id": 4301173, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2741047c803d4cd696ef99656677a54b?s=128&d=identicon&r=PG", "display_name": "NickDa", "link": "https://stackoverflow.com/users/4301173/nickda"}, "edited": false, "score": 0, "creation_date": 1565786746, "post_id": 57492575, "comment_id": 101459569, "body": "ah that makes more sense. Thanks so much"}], "tags": [], "owner": {"reputation": 2505, "user_id": 3118401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c066b73af214d8e7cf6b52f6ef75314a?s=128&d=identicon&r=PG", "display_name": "marcolz", "link": "https://stackoverflow.com/users/3118401/marcolz"}, "is_accepted": true, "score": 1, "last_activity_date": 1565786990, "last_edit_date": 1565786990, "creation_date": 1565777196, "answer_id": 57492575, "question_id": 57492508, "link": "https://stackoverflow.com/questions/57492508/where-does-a-variable-passed-to-reqwests-resultread-to-string-get-the-data-fr/57492575#57492575", "title": "Where does a variable passed to Reqwest&#39;s Result::read_to_string get the data from?", "body": "<p>The <code>res</code> object has a <code>read_to_string()</code> method which stores the response into the <code>String</code> that you pass it in</p>\n\n<pre><code>res.read_to_string(&amp;mut body);\n</code></pre>\n\n<p>Edit: imported from my comment:</p>\n\n<p><a href=\"https://docs.rs/reqwest/0.6.2/reqwest/struct.Response.html\" rel=\"nofollow noreferrer\">reqwest::Response 0.6.2 documentation</a> states for <code>Read</code> for <code>Response</code>:</p>\n\n<blockquote>\n  <p>Read the body of the Response</p>\n</blockquote>\n\n<p>which somehow seems missing from the documentation of the current version.</p>\n"}], "owner": {"reputation": 57, "user_id": 4301173, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2741047c803d4cd696ef99656677a54b?s=128&d=identicon&r=PG", "display_name": "NickDa", "link": "https://stackoverflow.com/users/4301173/nickda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 57492575, "answer_count": 1, "score": -2, "last_activity_date": 1565790858, "creation_date": 1565776929, "last_edit_date": 1565790858, "question_id": 57492508, "link": "https://stackoverflow.com/questions/57492508/where-does-a-variable-passed-to-reqwests-resultread-to-string-get-the-data-fr", "title": "Where does a variable passed to Reqwest&#39;s Result::read_to_string get the data from?", "body": "<p>I am learning Rust and have been playing around with this example to perform an HTTP GET request and then display the data: </p>\n\n<pre><code>extern crate reqwest;\nuse std::io::Read;\n\nfn run() -&gt; Result&lt;()&gt; {\n    let mut res = reqwest::get(\"http://httpbin.org/get\")?;\n    let mut body = String::new();\n    res.read_to_string(&amp;mut body)?;\n\n    println!(\"Status: {}\", res.status());\n    println!(\"Headers:\\n{:#?}\", res.headers());\n    println!(\"Body:\\n{}\", body);\n\n    Ok(())\n}\n</code></pre>\n\n<p>I cannot understand how the variable <code>body</code> is actually ending up with the correct data. For headers and status, I can see the associated functions but for the body data it just uses <code>read_to_string</code> for the whole data?</p>\n"}, {"tags": ["rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1565793477, "creation_date": 1565793477, "answer_id": 57496885, "question_id": 57492028, "link": "https://stackoverflow.com/questions/57492028/how-do-i-use-tokiotimertimeout-with-futurewait/57496885#57496885", "title": "How do I use tokio::timer::Timeout with Future::wait?", "body": "<p>I wouldn't, and it's possible that you just <em>can't</em>.</p>\n\n<p>Read the documentation for the <code>timer</code> module:</p>\n\n<blockquote>\n  <p>These types must be used from within the context of the <code>Runtime</code> or a timer context must be setup explicitly. See the <a href=\"https://docs.rs/tokio-timer/0.2.11/tokio_timer/\" rel=\"nofollow noreferrer\">tokio-timer crate</a> for more details on how to setup a timer context.</p>\n</blockquote>\n\n<p>Following the thread, we get to <a href=\"https://docs.rs/tokio-timer/0.2.11/tokio_timer/fn.with_default.html\" rel=\"nofollow noreferrer\"><code>tokio_timer::with_default</code></a> which requires a Tokio executor and a <code>Timer</code>. The executor uses the <a href=\"https://docs.rs/tokio-executor/0.1.7/tokio_executor/struct.Enter.html\" rel=\"nofollow noreferrer\"><code>Enter</code></a> type, which itself wants a future to block on. </p>\n\n<p>All of this is to say that Tokio's futures may rely on features outside of the pure <em>executor</em>. If I understand the terms correctly (and it's likely I do not), those features are provided by the <em>reactor</em>. Calling <code>wait</code> has no knowledge of that.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 711, "user_id": 4914568, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh6.googleusercontent.com/-sPuWYwZq4T8/AAAAAAAAAAI/AAAAAAAAAAA/g7OO9YxrOxg/photo.jpg?sz=128", "display_name": "pd176", "link": "https://stackoverflow.com/users/4914568/pd176"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1953, "favorite_count": 1, "accepted_answer_id": 57496885, "answer_count": 1, "score": 3, "last_activity_date": 1565793477, "creation_date": 1565775240, "last_edit_date": 1565792029, "question_id": 57492028, "link": "https://stackoverflow.com/questions/57492028/how-do-i-use-tokiotimertimeout-with-futurewait", "title": "How do I use tokio::timer::Timeout with Future::wait?", "body": "<p>I am trying to introduce a timeout in my RPC requests using <a href=\"https://docs.rs/tokio/0.1.17/tokio/timer/struct.Timeout.html\" rel=\"nofollow noreferrer\"><code>tokio:timer:Timeout</code></a>:</p>\n\n<pre><code>use std::time::{Duration, Instant};\nuse tokio::prelude::*;\nuse tokio::timer::Delay;\n\nfn main() {\n    let when = Instant::now() + Duration::from_millis(4000);\n    let task = Delay::new(when)\n        .and_then(|_| {\n            println!(\"Hello world!\");\n            Ok(())\n        })\n        .map_err(|e| panic!(\"delay errored; err={:?}\", e));\n\n    let task_with_timeout = task\n        .timeout(Duration::from_millis(3000))\n        .map_err(|e| println!(\"Timeout hit {:?}\", e));\n    let _ = task_with_timeout.wait().expect(\"Failure\");\n    // tokio::run(task_with_timeout);\n}\n</code></pre>\n\n<p>If I run my <code>future_with_timeout</code> with <code>tokio::run()</code>, it works as expected. </p>\n\n<p>However, calling wait on the <code>task_with_timeout</code> results in the <code>task</code> future getting an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'delay errored; err=Error(Shutdown)'\n</code></pre>\n\n<p>instead of getting</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Timeout hit Error(Elapsed)\n</code></pre>\n\n<p>I don't understand the difference here between using <code>tokio::run()</code> and <code>wait()</code>. </p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=77e06bc351a44c87e37ed1cc9c1f052a\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>How do I make the code work using <code>wait</code>? </p>\n"}, {"tags": ["rust", "mutability"], "comments": [{"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 0, "creation_date": 1565771548, "post_id": 57490650, "comment_id": 101452059, "body": "Looks like it&#39;s essentially being borrowed for a bit before returning to <code>vec</code>. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5146d3407d26f179967532fb5b525988\" rel=\"nofollow noreferrer\">Similar example.</a>"}], "answers": [{"tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 3, "last_activity_date": 1565791728, "last_edit_date": 1565791728, "creation_date": 1565771214, "answer_id": 57490916, "question_id": 57490650, "link": "https://stackoverflow.com/questions/57490650/why-does-a-variable-holding-the-result-of-vecget-mut-not-need-to-be-mutable/57490916#57490916", "title": "Why does a variable holding the result of Vec::get_mut not need to be mutable?", "body": "<p><code>vec.get_mut(0)</code> returns an <code>Option&lt;&amp;mut String&gt;</code>, so when you <code>unwrap</code> that value you will have a mutable borrow of a <code>String</code>.  Remember, that a <code>let</code> statement's left side is using pattern matching, so when your <em>pattern</em> is just a variable name you essentially say match whatever is on the right and call it <em>name</em>.  Thus <code>row</code> matches against <code>&amp;mut String</code> so it already is mutable.</p>\n\n<p>Here's a much simpler and more straightforward example to illustrate the case (which you can try in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0e297733c54b56a681cadb969125d54d\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut x = 55i32;\n    dbg!(&amp;x);\n    let y = &amp;mut x; // &lt;-- y's type is `&amp;mut i32`\n    *y = 12;\n    dbg!(&amp;x);\n}\n</code></pre>\n"}], "owner": {"reputation": 1673, "user_id": 592744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/P1HSy.jpg?s=128&g=1", "display_name": "Philipp", "link": "https://stackoverflow.com/users/592744/philipp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 2, "accepted_answer_id": 57490916, "answer_count": 1, "score": 4, "last_activity_date": 1565791728, "creation_date": 1565770077, "last_edit_date": 1565791701, "question_id": 57490650, "link": "https://stackoverflow.com/questions/57490650/why-does-a-variable-holding-the-result-of-vecget-mut-not-need-to-be-mutable", "title": "Why does a variable holding the result of Vec::get_mut not need to be mutable?", "body": "<p>I have the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut vec = Vec::new();\n    vec.push(String::from(\"Foo\"));\n    let mut row = vec.get_mut(0).unwrap();\n    row.push('!');\n    println!(\"{}\", vec[0])\n}\n</code></pre>\n\n<p>It prints out \"Foo!\", but the compiler tells me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: variable does not need to be mutable\n --&gt; src/main.rs:4:9\n  |\n4 |     let mut row = vec.get_mut(0).unwrap();\n  |         ----^^^\n  |         |\n  |         help: remove this `mut`\n</code></pre>\n\n<p>Surprisingly, removing the <code>mut</code> works. This raises a few questions:</p>\n\n<ul>\n<li>Why does this work?</li>\n<li>Why <em>doesn't</em> this work when I use <code>vec.get</code> instead of <code>vec.get_mut</code>, regardless of whether I use <code>let</code> or <code>let mut</code>?</li>\n<li>Why doesn't <code>vec</code> work in the same way, i.e. when I use <code>let vec = Vec::new()</code>, why can't I call <code>vec.push()</code>?</li>\n</ul>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 3, "creation_date": 1565760371, "post_id": 57488387, "comment_id": 101447608, "body": "See <a href=\"https://stevedonovan.github.io/rust-gentle-intro/6-error-handling.html\" rel=\"nofollow noreferrer\">stevedonovan.github.io/rust-gentle-intro/6-error-handling.ht&zwnj;&#8203;ml</a>. Custom error types must implement <code>Error</code> and <code>Display</code>. But <code>Result</code> allows using any type for errors, even strings and base types like <code>i32</code>."}, {"owner": {"reputation": 1538, "user_id": 1148470, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/8ad108bf0cfdcf34fe3d601ede04f614?s=128&d=identicon&r=PG", "display_name": "Josh R", "link": "https://stackoverflow.com/users/1148470/josh-r"}, "reply_to_user": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1566105844, "post_id": 57488387, "comment_id": 101547587, "body": "Well thanks everyone, this helps me understand the Result type and Rust&#39;s errors better than the documentation."}], "answers": [{"tags": [], "owner": {"reputation": 174, "user_id": 1354814, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pmtMb.jpg?s=128&g=1", "display_name": "riginding", "link": "https://stackoverflow.com/users/1354814/riginding"}, "is_accepted": false, "score": 2, "last_activity_date": 1565791052, "last_edit_date": 1565791052, "creation_date": 1565761236, "answer_id": 57488694, "question_id": 57488387, "link": "https://stackoverflow.com/questions/57488387/what-are-all-the-different-error-types-in-rust/57488694#57488694", "title": "What are all the different error types in Rust?", "body": "<p>Result types are often aliased in the standard library. If you see a function in the standard library documentation, you can click on <code>Result</code>, which should lead you to the aliased type (e.g. <a href=\"https://doc.rust-lang.org/std/io/type.Result.html\" rel=\"nofollow noreferrer\"><code>std::io::Result</code></a>)\nYou can then see which kind of <code>Error</code> is used in the <code>Result</code>.</p>\n\n<p>The documentation also has a <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html#implementors\" rel=\"nofollow noreferrer\">list</a> of all enums and structs in the standard library that implement the <code>Error</code> trait.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1565791550, "creation_date": 1565791550, "answer_id": 57496326, "question_id": 57488387, "link": "https://stackoverflow.com/questions/57488387/what-are-all-the-different-error-types-in-rust/57496326#57496326", "title": "What are all the different error types in Rust?", "body": "<p>It's not well defined what \"an error type\" would mean, so no, there is no global list of errors.</p>\n\n<p>If you mean \"is there a list of all the types that are used as <code>Result::Err</code>, the answer is still no. There are methods like <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.binary_search\" rel=\"nofollow noreferrer\"><code>slice::binary_search</code></a> which return <code>Result&lt;usize, usize&gt;</code>. Is <code>usize</code> to be considered an error type? What if a <code>Result::Err</code> is constructed entirely inside of a function and never leaves it; is that type considered an error type? What about a generic type that contains a <code>Result&lt;i32, E&gt;</code>; should any concrete <code>E</code> be called an error type?</p>\n\n<p>If you mean \"is there a list of all the types that implement <code>std::error::Error</code>, then the answer is \"kind of\". See <a href=\"https://stackoverflow.com/q/55216559/155423\">How can I get a list of structs that implement a particular trait in Rust?</a> for details.</p>\n\n<blockquote>\n  <p>does the standard library have a group of predefined errors </p>\n</blockquote>\n\n<p>Yes.</p>\n\n<blockquote>\n  <p>available for use</p>\n</blockquote>\n\n<p>Sometimes. <a href=\"https://doc.rust-lang.org/std/io/struct.Error.html\" rel=\"nofollow noreferrer\"><code>io::Error</code></a> allows you to construct your own error value, but <a href=\"https://doc.rust-lang.org/std/num/struct.ParseIntError.html\" rel=\"nofollow noreferrer\"><code>num::ParseIntError</code></a> does not.</p>\n\n<blockquote>\n  <p>is that the solution? Make all custom errors types?</p>\n</blockquote>\n\n<p>Generally, yes.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42584368/155423\">How do you define custom `Error` types in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 1538, "user_id": 1148470, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/8ad108bf0cfdcf34fe3d601ede04f614?s=128&d=identicon&r=PG", "display_name": "Josh R", "link": "https://stackoverflow.com/users/1148470/josh-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1623, "favorite_count": 0, "accepted_answer_id": 57496326, "answer_count": 2, "score": 2, "last_activity_date": 1565791550, "creation_date": 1565758725, "last_edit_date": 1565791115, "question_id": 57488387, "link": "https://stackoverflow.com/questions/57488387/what-are-all-the-different-error-types-in-rust", "title": "What are all the different error types in Rust?", "body": "<p>I'm learning Rust and can't find a list of all error types. When a function is returning a <code>Result</code>, does the standard library have a group of predefined errors available for use?</p>\n\n<p>I know custom error types can be made in Rust, is that the solution? Make all custom errors types?</p>\n"}, {"tags": ["tree", "rust", "reference-counting", "interior-mutability"], "comments": [{"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 1, "creation_date": 1565759270, "post_id": 57487948, "comment_id": 101447354, "body": "<code>RefCell&lt;Rc&gt;</code> has more strict borrowing control: you can get only one mutable reference on data. <code>Rc&lt;RefCell&gt;</code>, allows having many mutable references at a time. So for your case <code>RefCell&lt;Rc&gt;</code> is better."}, {"owner": {"reputation": 701, "user_id": 10005095, "user_type": "registered", "profile_image": "https://graph.facebook.com/144174703037393/picture?type=large", "display_name": "Evian", "link": "https://stackoverflow.com/users/10005095/evian"}, "reply_to_user": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1565760182, "post_id": 57487948, "comment_id": 101447559, "body": "@Zefick What if T is a struct and I want to change some fields of T in RefCell&lt;Rc&lt;T&gt;&gt;? Am I supposed to use RefCell&lt;Rc&lt;RefCell&lt;T&gt;&gt;&gt;?"}, {"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1565760979, "post_id": 57487948, "comment_id": 101447766, "body": "Yes because in this case, you have two independently mutable entities - counted reference to T and T itself, Each of this needs its own <code>RefCell</code>."}], "owner": {"reputation": 701, "user_id": 10005095, "user_type": "registered", "profile_image": "https://graph.facebook.com/144174703037393/picture?type=large", "display_name": "Evian", "link": "https://stackoverflow.com/users/10005095/evian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 43, "favorite_count": 0, "closed_date": 1565789511, "answer_count": 0, "score": 0, "last_activity_date": 1565789321, "creation_date": 1565754802, "last_edit_date": 1565789321, "question_id": 57487948, "link": "https://stackoverflow.com/questions/57487948/should-i-use-refcellrct-or-rcrefcellt-for-a-tree-with-parents-which-can", "closed_reason": "Duplicate", "title": "Should I use RefCell&lt;Rc&lt;T&gt;&gt; or Rc&lt;RefCell&lt;T&gt;&gt; for a tree with parents which can be mutated?", "body": "<p>I want to implement a tree whose node has <code>parent</code> field using Rust. From the official guide <a href=\"https://doc.rust-lang.org/book/ch15-06-reference-cycles.html#adding-a-reference-from-a-child-to-its-parent\" rel=\"nofollow noreferrer\">adding-a-reference-from-a-child-to-its-parent</a>, they use the structure</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Node {\n    value: i32,\n    parent: RefCell&lt;Weak&lt;Node&gt;&gt;,\n    children: RefCell&lt;Vec&lt;Rc&lt;Node&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>To use an instance of <code>RefCell&lt;Rc&lt;T&gt;&gt;</code> mutably, I can call <code>.borrow_mut()</code>.</p>\n\n<p>In the <a href=\"https://doc.rust-lang.org/std/cell/index.html#introducing-mutability-inside-of-something-immutable\" rel=\"nofollow noreferrer\">doc of <code>std::cell</code></a>, <code>let shared_map: Rc&lt;RefCell&lt;_&gt;&gt; = Rc::new(RefCell::new(HashMap::new()));</code> is used to introduce mutability to <code>Rc</code>.</p>\n\n<p>If I want a tree with parents which can be mutated, which one is recommended?</p>\n"}, {"tags": ["reference", "rust", "clone", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 431, "user_id": 3287359, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JNYJw.png?s=128&g=1", "display_name": "TechnoSam", "link": "https://stackoverflow.com/users/3287359/technosam"}, "edited": false, "score": 0, "creation_date": 1565786053, "post_id": 57487810, "comment_id": 101459182, "body": "<code>map</code> is actually a <code>HashMap&lt;usize, AsciiDisplayPixel&gt;</code>. So <code>pixel</code> is a <code>&amp;AsciiDisplayPixel</code>. I&#39;ve edited my question to include a full reproducible example."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 431, "user_id": 3287359, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JNYJw.png?s=128&g=1", "display_name": "TechnoSam", "link": "https://stackoverflow.com/users/3287359/technosam"}, "edited": false, "score": 1, "creation_date": 1565795125, "post_id": 57487810, "comment_id": 101464418, "body": "@TechnoSam: The issue there is that <code>AsciiDisplayPixel</code> isn\u2019t <code>Clone</code>."}, {"owner": {"reputation": 431, "user_id": 3287359, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JNYJw.png?s=128&g=1", "display_name": "TechnoSam", "link": "https://stackoverflow.com/users/3287359/technosam"}, "edited": false, "score": 0, "creation_date": 1565800628, "post_id": 57487810, "comment_id": 101467148, "body": "Thank you very much, that seems so obvious in hindsight!"}], "tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": true, "score": 3, "last_activity_date": 1565795345, "last_edit_date": 1565795345, "creation_date": 1565753279, "answer_id": 57487810, "question_id": 57487716, "link": "https://stackoverflow.com/questions/57487716/is-there-any-way-to-clone-a-reference-type-into-an-owned-type/57487810#57487810", "title": "Is there any way to clone a reference type into an owned type?", "body": "<p><code>AsciiDisplayPixel</code> needs to implement <code>Clone</code> for you to be able to clone (<code>Copy</code>, <code>Debug</code>, and others probably make sense too):</p>\n\n<pre><code>#[derive(Clone)]\nstruct AsciiDisplayPixel {\n    value: char,\n    color: u32,\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8e4777aee7f97e3a33c7f660cb58d4c0\" rel=\"nofollow noreferrer\">(updated playground)</a></p>\n\n<p>at which point the implementation can be simplified to:</p>\n\n<pre><code>pub fn map(&amp;self, index: usize) -&gt; Option&lt;AsciiDisplayPixel&gt; {\n    self.map.get(&amp;index).cloned()\n}\n</code></pre>\n"}], "owner": {"reputation": 431, "user_id": 3287359, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JNYJw.png?s=128&g=1", "display_name": "TechnoSam", "link": "https://stackoverflow.com/users/3287359/technosam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "closed_date": 1565795460, "accepted_answer_id": 57487810, "answer_count": 1, "score": 0, "last_activity_date": 1565795519, "creation_date": 1565752281, "last_edit_date": 1565795443, "question_id": 57487716, "link": "https://stackoverflow.com/questions/57487716/is-there-any-way-to-clone-a-reference-type-into-an-owned-type", "closed_reason": "Duplicate", "title": "Is there any way to clone a reference type into an owned type?", "body": "<p>I have a method that I want to return an owned copy of an element. I can justify why I want this if needed.</p>\n\n<p>Here is a minimal reproducible example: (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c78bf8c95f2e5aeb001eb7dfcaa1f469\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct AsciiDisplayPixel {\n    value: char,\n    color: u32,\n}\n\nstruct PieceToPixelMapper {\n    map: HashMap&lt;usize, AsciiDisplayPixel&gt;,\n}\n\nimpl PieceToPixelMapper {\n    pub fn map(&amp;self, index: usize) -&gt; Option&lt;AsciiDisplayPixel&gt; {\n        let pixel = self.map.get(&amp;index);\n        let pixel = match pixel {\n            None =&gt; return None,\n            Some(x) =&gt; x,\n        };\n\n        return Some(pixel.clone());\n    }\n}\n\nfn main() {\n    println!(\"Hello World\");\n}\n</code></pre>\n\n<p>This fails to compile with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:20:21\n   |\n20 |         return Some(pixel.clone());\n   |                     ^^^^^^^^^^^^^ expected struct `AsciiDisplayPixel`, found reference\n   |\n   = note: expected type `AsciiDisplayPixel`\n              found type `&amp;AsciiDisplayPixel`\n</code></pre>\n\n<p>I'm not sure why this is the case. According to the <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html#tymethod.clone\" rel=\"nofollow noreferrer\">documentation on clone</a>, it looks like the resulting type of <code>clone</code> be whatever the parent was, so if you clone a reference, you still get a reference, which I guess if fine, but then I have no clue how I clone to owned data. <code>to_owned</code> seems to have the exact same problem and gives the same error message.</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565789195, "post_id": 57487568, "comment_id": 101461047, "body": "No, there is not."}], "answers": [{"tags": [], "owner": {"reputation": 31, "user_id": 10000917, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-F4yX2qpWyTI/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq372s23s7qOwAgZR33j8UoSH_z8iw/mo/photo.jpg?sz=128", "display_name": "Joel Nordstr&#246;m", "link": "https://stackoverflow.com/users/10000917/joel-nordstr%c3%b6m"}, "is_accepted": false, "score": 1, "last_activity_date": 1571502265, "last_edit_date": 1571502265, "creation_date": 1571501950, "answer_id": 58465624, "question_id": 57487568, "link": "https://stackoverflow.com/questions/57487568/is-there-any-mechanism-to-generate-an-ownership-tree-visualization-with-rust-o/58465624#58465624", "title": "Is there any mechanism to generate an &quot;ownership tree&quot; visualization with Rust or the Rust tooling?", "body": "<p>There isn't really a specific tool for it, but you can get pretty close by deriving the <code>Debug</code> trait. When you derive the <code>Debug</code> trait for a struct, it will give you a recursive representation of all owned data, terminating at primitive types such as <code>str</code>, <code>u32</code> etc, or when it encounters a custom <code>Debug</code> implementation.\nFor example, this program here:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rand;\n\n#[derive(Debug)]\nenum State {\n    Good,\n    Bad,\n    Ugly(&amp;'static str),\n}\n\n#[derive(Debug)]\nstruct ExampleStruct {\n    x_factor: Option&lt;f32&gt;,\n    children: Vec&lt;ExampleStruct&gt;,\n    state: State,\n}\n\nimpl ExampleStruct {\n    fn random(max_depth: usize) -&gt; Self {\n        use rand::Rng;\n        let mut rng = rand::thread_rng();\n\n        let child_count = match max_depth {\n            0 =&gt; 0,\n            _ =&gt; rng.gen::&lt;usize&gt;() % max_depth,\n        };\n\n        let mut children = Vec::with_capacity(child_count);\n\n        for _ in 0..child_count {\n            children.push(ExampleStruct::random(max_depth - 1));\n        }\n\n        let state = if rng.gen() {\n            State::Good\n        } else if rng.gen() {\n            State::Bad\n        } else {\n            State::Ugly(\"really ugly\")\n        };\n\n        Self {\n            x_factor: Some(rng.gen()),\n            children,\n            state,\n        }\n    }\n}\n\nfn main() {\n    let foo = ExampleStruct::random(3);\n    dbg!(foo);\n}\n</code></pre>\n\n<p>prints something like this:</p>\n\n<pre><code>[src/main.rs:51] foo = ExampleStruct {\n    x_factor: Some(\n        0.27388978,\n    ),\n    children: [\n        ExampleStruct {\n            x_factor: Some(\n                0.5051847,\n            ),\n            children: [\n                ExampleStruct {\n                    x_factor: Some(\n                        0.9675246,\n                    ),\n                    children: [],\n                    state: Ugly(\n                        \"really ugly\",\n                    ),\n                },\n            ],\n            state: Bad,\n        },\n        ExampleStruct {\n            x_factor: Some(\n                0.70672345,\n            ),\n            children: [],\n            state: Ugly(\n                \"really ugly\",\n            ),\n        },\n    ],\n    state: Bad,\n}\n</code></pre>\n\n<p>Note that not all the data is in line: The children live somewhere else on the heap. They are not stored inside the ExampleStruct, they are simply owned by it.</p>\n\n<p>This could get confusing if you store references to things, because Debug may start to traverse these references. It does not matter to Debug that they aren't owned. In fact, this is the case with the <code>&amp;'static str</code> inside <code>State::Ugly</code>. The actual bytes that make up the string are not owned by any variable, they are hard coded and live inside the program itself. They will exist for as long as the program is running.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 204, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1571502265, "creation_date": 1565750878, "last_edit_date": 1565789178, "question_id": 57487568, "link": "https://stackoverflow.com/questions/57487568/is-there-any-mechanism-to-generate-an-ownership-tree-visualization-with-rust-o", "title": "Is there any mechanism to generate an &quot;ownership tree&quot; visualization with Rust or the Rust tooling?", "body": "<p>In Chapter 4 of <a href=\"https://www.oreilly.com/library/view/programming-rust/9781491927274/ch04.html\" rel=\"nofollow noreferrer\"><em>\"Programming Rust\"</em> by Jim Blandy &amp; Jason Orendorff</a> it says,</p>\n\n<blockquote>\n  <p>It follows that the owners and their owned values form trees: your owner is your parent, and the values you own are your children. And at the ultimate root of each tree is a variable; when that variable goes out of scope, the entire tree goes with it. <strong>We can see such an ownership tree in the diagram for composers</strong>: it\u2019s not a \u201ctree\u201d in the sense of a search tree data structure, or an HTML document made from DOM elements. Rather, we have a tree built from a mixture of types, with Rust\u2019s single-owner rule forbidding any rejoining of structure that could make the arrangement more complex than a tree. Every value in a Rust program is a member of some tree, rooted in some variable.</p>\n</blockquote>\n\n<p>An example is provided,</p>\n\n<p><a href=\"https://i.stack.imgur.com/8XckP.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/8XckP.png\" alt=\"Rust Ownership Tree\"></a></p>\n\n<p>This is simplified and pretty, but is there any mechanism to generate an \"ownership tree\" visualization with Rust or the Rust tooling? Can I dump an ownership tree when debugging?</p>\n"}, {"tags": ["loops", "rust", "stdin"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565747552, "post_id": 57486991, "comment_id": 101445277, "body": "See also <a href=\"https://stackoverflow.com/q/48037128/155423\">How to use the same iterator twice, once for counting and once for iteration?</a>; <a href=\"https://stackoverflow.com/q/23969191/155423\">Using the same iterator multiple times in Rust</a>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565773862, "post_id": 57486991, "comment_id": 101453135, "body": "well that the very first design of stdin. You should have understand it since you claim to have do this since years. data must be stock somewhere there is no magic bullet."}], "answers": [{"comments": [{"owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "edited": false, "score": 0, "creation_date": 1565746428, "post_id": 57487098, "comment_id": 101445087, "body": "&quot;They do not duplicate the input stream&quot; then how do you duplicate the input stream? I have been Googling all day and cannot find any mention of ways to do this. Also I already have buffer structs implemented to cache prior results, but I need a way to look ahead in the iteration the way that <code>itertools::multipeek</code> allows. I do not want to read all of the input stream into memory, I want to only hold <code>n</code> lines at a time, where <code>n</code> is the current line + previous/next input lines."}, {"owner": {"reputation": 4313, "user_id": 2706707, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BoAxS.gif?s=128&g=1", "display_name": "D&#250;thomhas", "link": "https://stackoverflow.com/users/2706707/d%c3%bathomhas"}, "reply_to_user": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "edited": false, "score": 2, "creation_date": 1565752573, "post_id": 57487098, "comment_id": 101446122, "body": "@user5359531 \u201cthen how do you duplicate the input stream\u201d; \u201cI do not want to read all of the input stream into memory\u201d \u2014 Then you are stuck. If you want to see a stream multiple times, you <i><b>must</b></i> have a copy of that stream somewhere."}], "tags": [], "owner": {"reputation": 4313, "user_id": 2706707, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BoAxS.gif?s=128&g=1", "display_name": "D&#250;thomhas", "link": "https://stackoverflow.com/users/2706707/d%c3%bathomhas"}, "is_accepted": false, "score": 3, "last_activity_date": 1565746209, "creation_date": 1565746209, "answer_id": 57487098, "question_id": 57486991, "link": "https://stackoverflow.com/questions/57486991/how-to-iterate-over-stdin-twice/57487098#57487098", "title": "How to iterate over stdin twice?", "body": "<p>I am not familiar with Rust enough to offer a concrete solution, but you are failing because on lines 6-8 you process stdin (into lines), then on lines 10-12 you try to process it again. But there is nothing left to process a second time; you processed it already.</p>\n\n<p>Remember, <code>reader1</code> and <code>reader2</code> are <em>readers</em>, not buffers. They do not duplicate the input stream.</p>\n\n<p>If you wish to review any part of prior input, you must read it into some kind of storage object. Then you can create a <code>BufReader</code> or otherwise prepare access to that data.</p>\n\n<p>From what you appear to be doing, an easy way would be simply to create a single <code>BufReader</code> object to populate an array of strings with the input. Then just iterate over that array as many times as you want.</p>\n"}, {"tags": [], "owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "is_accepted": false, "score": 1, "last_activity_date": 1565749204, "last_edit_date": 1565749204, "creation_date": 1565748604, "answer_id": 57487337, "question_id": 57486991, "link": "https://stackoverflow.com/questions/57486991/how-to-iterate-over-stdin-twice/57487337#57487337", "title": "How to iterate over stdin twice?", "body": "<p>Alternative solution to the second problem that avoids duplicating the stdin iterator and allows for look-ahead with <code>itertools::multipeek</code></p>\n\n<pre><code>use std::io::{self, BufRead, BufReader, Result};\nuse itertools::multipeek;\n\nfn main(){\n    let num_peeks = 2;\n    let mut mp = multipeek(BufReader::new(io::stdin()).lines());\n    loop {\n        let a = mp.next();\n        match a {\n            Some(l) =&gt; {\n                println!(\"line: {:?}\", l);\n\n                for _ in 0..num_peeks {\n                    println!(\"peek: {:?}\", mp.peek());\n                }\n            }\n            None =&gt; break,\n        }\n    }\n}\n</code></pre>\n\n<p>output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ printf '1\\n2\\n3\\n4\\n' | cargo run\nline: Ok(\"1\")\npeek: Some(Ok(\"2\"))\npeek: Some(Ok(\"3\"))\nline: Ok(\"2\")\npeek: Some(Ok(\"3\"))\npeek: Some(Ok(\"4\"))\nline: Ok(\"3\")\npeek: Some(Ok(\"4\"))\npeek: None\nline: Ok(\"4\")\npeek: None\npeek: None\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565749291, "post_id": 57487385, "comment_id": 101445577, "body": "This doesn&#39;t appear to be an answer to the question: <i>How to iterate over stdin twice?</i>"}, {"owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565755212, "post_id": 57487385, "comment_id": 101446550, "body": "@Shepmaster The author posted a better solution themselves. The actual answer is &quot;you can&#39;t do that&quot; (adding to the answer), but that&#39;s not very helpful."}], "tags": [], "owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "is_accepted": false, "score": 1, "last_activity_date": 1565755341, "last_edit_date": 1565755341, "creation_date": 1565749061, "answer_id": 57487385, "question_id": 57486991, "link": "https://stackoverflow.com/questions/57486991/how-to-iterate-over-stdin-twice/57487385#57487385", "title": "How to iterate over stdin twice?", "body": "<p>You can't iterate over stdin twice, because you can read it once only. If you want to do something similar, you need to buffer the data in your app yourself.</p>\n\n<p>In your question, you duplicate not only the stream, but also create two buffered readers. This is important, because the buffered reader will likely read more data than required each time. For example, to get lines of text, it won't read byte-after-byte looking for a newline because that would be slow. Most likely it will read a multiple-of-page-size blocks into a preallocated space instead. Then your lines will come from there without any stream reads until it runs out of lines to return.</p>\n\n<p><a href=\"https://stackoverflow.com/a/57487337/31667\">Your solution</a> works because you have only one backing buffer, so everything works as expected. In the question though, after the first execution of <code>for line in reader</code> you don't have anything in your stream anymore - it's all been consumed. So <code>mp.next()</code> / <code>mp.peek()</code> won't read anything.</p>\n\n<p>If you want to confirm this, try with input of multiple KB - you'll see <code>mp.peek</code> return values from the middle of your input.</p>\n"}], "owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 427, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1565755341, "creation_date": 1565744886, "last_edit_date": 1565747380, "question_id": 57486991, "link": "https://stackoverflow.com/questions/57486991/how-to-iterate-over-stdin-twice", "title": "How to iterate over stdin twice?", "body": "<p>I need to create two iterators for stdin. However, I cannot figure out how to implement this. </p>\n\n<p>Here is a simple example:</p>\n\n<pre><code>use std::io::{self, BufRead, BufReader, Result};\n\nfn main() {\n    let reader1 = BufReader::new(io::stdin()).lines();\n    let reader2 = BufReader::new(io::stdin()).lines();\n\n    for line in reader1 {\n        println!(\"reader1: {:?}\", line);\n    }\n\n    for line in reader2 {\n        println!(\"reader2: {:?}\", line);\n    }\n}\n</code></pre>\n\n<p>output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ printf '1\\n2\\n3\\n4\\n' | cargo run\nreader1: Ok(\"1\")\nreader1: Ok(\"2\")\nreader1: Ok(\"3\")\nreader1: Ok(\"4\")\n</code></pre>\n\n<p>The iterator <code>reader2</code> never gets implemented.</p>\n\n<p>The full example of what I am trying to accomplish is a little more complex...</p>\n\n<pre><code>use itertools::multipeek;\nuse std::io::{self, BufRead, BufReader, Result};\n\nfn main() {\n    let reader = BufReader::new(io::stdin()).lines();\n    let mut mp = multipeek(BufReader::new(io::stdin()).lines());\n\n    for line in reader {\n        mp.next();\n        match line {\n            Ok(l) =&gt; {\n                println!(\"line: {}\", l);\n                println!(\"peek: {:?}\", mp.peek());\n                println!(\"peek: {:?}\", mp.peek());\n            }\n            Err(e) =&gt; println!(\"error parsing line: {:?}\", e),\n        }\n    }\n}\n</code></pre>\n\n<p>output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ printf '1\\n2\\n3\\n4\\n' | cargo run\nline: 1\npeek: None\npeek: None\nline: 2\npeek: None\npeek: None\nline: 3\npeek: None\npeek: None\nline: 4\npeek: None\npeek: None\n</code></pre>\n\n<p>from what I can tell though, it has something to do with using <code>stdin</code> because it works fine when reading from a file.</p>\n"}, {"tags": ["rust", "type-conversion"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1565747757, "post_id": 57485921, "comment_id": 101445310, "body": "None that come to mind. See also <a href=\"https://stackoverflow.com/q/28273169/155423\">How do I convert between numeric types safely and idiomatically?</a>. My gut says that the authors used &quot;weasel words&quot; because proving a negative is hard and prone to breaking if Rust ever decides to add one."}, {"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565749635, "post_id": 57485921, "comment_id": 101445634, "body": "@Shepmaster I think the only fair thing, in light of how hard it is to prove a negative is to mark your comment as an answer pending someone else demonstrating otherwise."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1565764561, "post_id": 57485921, "comment_id": 101448923, "body": "The only thing that comes to mind is the way that numeric constants are handled. E.g. <code>let a: u8 = 1;</code> automatically &quot;converts&quot; the <code>1</code> into an <code>u8</code> (&quot;converts&quot; between quotes because it is not strictly speaking a conversion, but it could look that way at first glance)."}], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 12925102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/H3JbR.jpg?s=128&g=1", "display_name": "Jarrrkob", "link": "https://stackoverflow.com/users/12925102/jarrrkob"}, "is_accepted": false, "score": 1, "last_activity_date": 1582914541, "creation_date": 1582914541, "answer_id": 60457386, "question_id": 57485921, "link": "https://stackoverflow.com/questions/57485921/what-implicit-numeric-conversions-does-rust-support/60457386#60457386", "title": "What implicit numeric conversions does Rust support?", "body": "<p>Like the comments above I don't know of any such implicit conversion and couldn't find an example, but the <a href=\"https://doc.rust-lang.org/rust-by-example/\" rel=\"nofollow noreferrer\">Rust by example</a> book states the following about <a href=\"https://doc.rust-lang.org/rust-by-example/types/cast.html\" rel=\"nofollow noreferrer\">type casts</a></p>\n\n<blockquote>\n  <p>Rust provides no implicit type conversion (coercion) between primitive types. But, explicit type conversion (casting) can be performed using the <code>as</code> keyword.</p>\n</blockquote>\n\n<p>There is/was a <a href=\"https://internals.rust-lang.org/t/pre-rfc-implicit-number-type-widening/10432/121\" rel=\"nofollow noreferrer\">Pre-RFC</a> where this topic got discussed in more detail showing the pro/con arguments about why Rust should/n't have this feature.</p>\n\n<p>For further information you may have a look at the <a href=\"https://doc.rust-lang.org/rust-by-example/conversion/from_into.html\" rel=\"nofollow noreferrer\">From and Into</a> traits.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 371, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1582914541, "creation_date": 1565734370, "last_edit_date": 1565747633, "question_id": 57485921, "link": "https://stackoverflow.com/questions/57485921/what-implicit-numeric-conversions-does-rust-support", "title": "What implicit numeric conversions does Rust support?", "body": "<p>On page 51 of <a href=\"http://shop.oreilly.com/product/0636920040385.do\" rel=\"nofollow noreferrer\"><em>\"Programming Rust\"</em> by Jim Blandy &amp; Jason Orendorff</a> the authors state,</p>\n\n<blockquote>\n  <p>Unlike C and C++, Rust performs <strong>almost</strong> no numeric conversions implicitly.</p>\n</blockquote>\n\n<p>Why <em>\"almost\"</em>? What implicit numeric conversions will Rust perform?</p>\n"}, {"tags": ["rust", "closures", "reference-counting"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565717869, "post_id": 57482574, "comment_id": 101436829, "body": "I don&#39;t get the same error message, please do a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, add space it&#39;s free, remove useless &quot;...&quot;. Also why put <code>_</code> in front on struct name that very ugly."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565720890, "post_id": 57482574, "comment_id": 101438186, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cf586a57bd2974a84ac52138eb14139e\" rel=\"nofollow noreferrer\">The duplicates applied</a>. TL;DR: Use <code>Arc&lt;Mutex&lt;dyn FnMut&gt;&gt;</code>"}], "owner": {"reputation": 13, "user_id": 11923676, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EO-nyDPgN-8/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcNfgpLbE0LF7qr8KIglMiFH3GDHQ/photo.jpg?sz=128", "display_name": "zaoqi libre", "link": "https://stackoverflow.com/users/11923676/zaoqi-libre"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 265, "favorite_count": 0, "closed_date": 1565720724, "answer_count": 0, "score": 0, "last_activity_date": 1565720880, "creation_date": 1565717006, "last_edit_date": 1565720485, "question_id": 57482574, "link": "https://stackoverflow.com/questions/57482574/how-to-store-and-use-an-arcdyn-fnmut", "closed_reason": "Duplicate", "title": "How to store and use an `Arc&lt;dyn FnMut&gt;`?", "body": "<p>I don't know how to store a <code>FnMut</code> in an enum. I use <code>std::sync::Arc</code> in order to <code>#[derive(Clone)]</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[allow(non_camel_case_types)]\n#[derive(Hash,PartialEq,Eq,Clone,Debug)]\nstruct _lua_data {\n    val: std::sync::Arc&lt;_lua_data_unpack&gt;,\n}\n...\n#[allow(non_camel_case_types)]\n#[derive(Hash,PartialEq,Eq,Debug,Clone)]\nenum _lua_data_unpack {\n    Function(_lua_data_unpack_function),\n    ...\n}\n#[allow(non_camel_case_types)]\n#[derive(Clone)]\nstruct _lua_data_unpack_function {\n    val: std::sync::Arc&lt;FnMut(Vec&lt;_lua_data&gt;) -&gt; _lua_data&gt;,\n}\n...\nfn _lua_call(f: _lua_data, args: Vec&lt;_lua_data&gt;) -&gt; _lua_data {\n    if let _lua_data_unpack::Function(v) = (*f.clone().val).clone() {\n        let mut a: std::sync::Arc&lt;FnMut(Vec&lt;_lua_data&gt;) -&gt; _lua_data&gt; = v.val.clone();\n        (&amp;mut a)(args).clone()\n    } else {\n        panic!(\"attempt to call a value that isn't a function\")\n    }\n}\n</code></pre>\n\n<p><a href=\"https://gitlab.com/the-language/lua2rust/blob/3728cf6e3925490e00e8724270027517b06c91f6/prelude.rs\" rel=\"nofollow noreferrer\">Complete code without <code>_lua_call</code></a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow data in a `&amp;` reference as mutable\n   --&gt; prelude.rs:123:9\n    |\n123 |         (&amp;mut a)(args).clone()\n    |         ^^^^^^^^ cannot borrow as mutable\n</code></pre>\n\n<p>Where am I wrong?</p>\n"}, {"tags": ["rust", "macros"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565713127, "post_id": 57481590, "comment_id": 101434943, "body": "<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=f6e0a66f3403266610cc6156d60c1fdb\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>."}, {"owner": {"reputation": 875, "user_id": 452201, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/08760b50e40c6affe1e5895fba9873e0?s=128&d=identicon&r=PG", "display_name": "mamidon", "link": "https://stackoverflow.com/users/452201/mamidon"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565714235, "post_id": 57481590, "comment_id": 101435384, "body": "Yes, I&#39;ve found that before -- it doesn&#39;t answer my question!"}, {"owner": {"reputation": 875, "user_id": 452201, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/08760b50e40c6affe1e5895fba9873e0?s=128&d=identicon&r=PG", "display_name": "mamidon", "link": "https://stackoverflow.com/users/452201/mamidon"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565714289, "post_id": 57481590, "comment_id": 101435402, "body": "That particular answer claims that token trees match &#39;anything&#39;, which jives with the documentation that I&#39;ve read.  But what I&#39;m feeding in seems like it should match -- it&#39;s a stream of tokens, yet that isn&#39;t the case here."}, {"owner": {"reputation": 875, "user_id": 452201, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/08760b50e40c6affe1e5895fba9873e0?s=128&d=identicon&r=PG", "display_name": "mamidon", "link": "https://stackoverflow.com/users/452201/mamidon"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565714319, "post_id": 57481590, "comment_id": 101435413, "body": "Marking my question as a duplicate isn&#39;t helpful!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565714378, "post_id": 57481590, "comment_id": 101435432, "body": "The answer was recently rephrased to more clearly address your specific problem. With my emphasis added: <i><code>tt</code> will match <b>any single token</b> or any pair of parenthesis/brackets/braces and their content</i>. Also, at the end of the answer, you can see <i><code>$($arg:tt)*</code> means \u201call the rest\u201d</i>; you need the repetition operator to capture your sequential <code>tt</code>s."}], "owner": {"reputation": 875, "user_id": 452201, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/08760b50e40c6affe1e5895fba9873e0?s=128&d=identicon&r=PG", "display_name": "mamidon", "link": "https://stackoverflow.com/users/452201/mamidon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 31, "favorite_count": 0, "closed_date": 1565713106, "answer_count": 0, "score": 1, "last_activity_date": 1565712804, "creation_date": 1565712520, "last_edit_date": 1565712697, "question_id": 57481590, "link": "https://stackoverflow.com/questions/57481590/why-does-the-tt-metavariable-reject-multiple-tokens", "closed_reason": "Duplicate", "title": "Why does the tt metavariable reject multiple tokens?", "body": "<p>I've been trying to use Rust macros but I'm hitting a stumbling block with token trees, I'm given to understand a token tree will accept any valid sequence of tokens, grouping them into a hierarchy based on paired <code>()</code>, <code>[]</code>, <code>{}</code>.</p>\n\n<p>When I try to pass in any sequence of tokens, I get parse errors that reject the 2nd token in the sequence.</p>\n\n<pre><code>#![feature(trace_macros)]\n#![allow(dead_code)]\n\nmacro_rules! repro {\n    ($foo:tt) =&gt; {\n        stringify!($foo);\n    };\n}\n\nfn main() {\n    trace_macros!(true);\n    // println!(\"{}\", repro!(bar)); works\n\n    //these break, but succeed for meta type expr\n    println!(\"{}\", repro!(bar: fizz));\n    println!(\"{}\", repro!(1 + 2));\n    trace_macros!(false);\n}\n</code></pre>\n\n<p>In the above code, the ':' and '+' tokens trigger failures:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no rules expected the token `:`\n  --&gt; src/main.rs:15:30\n   |\n4  | macro_rules! repro {\n   | ------------------ when calling this macro\n...\n15 |     println!(\"{}\", repro!(bar: fizz));\n   |                              ^ no rules expected this token in macro call\n\nnote: trace_macro\n  --&gt; src/main.rs:15:5\n   |\n15 |     println!(\"{}\", repro!(bar: fizz));\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expanding `println! { \"{}\" , repro ! (bar : fizz) }`\n   = note: to `{ $crate :: io :: _print (format_args_nl ! (\"{}\" , repro ! (bar : fizz))) ; }`\n\nnote: trace_macro\n  --&gt; src/main.rs:15:20\n   |\n15 |     println!(\"{}\", repro!(bar: fizz));\n   |                    ^^^^^^^^^^^^^^^^^\n   |\n   = note: expanding `repro! { bar : fizz }`\n\nerror: no rules expected the token `+`\n  --&gt; src/main.rs:16:29\n   |\n4  | macro_rules! repro {\n   | ------------------ when calling this macro\n...\n16 |     println!(\"{}\", repro!(1 + 2));\n   |                             ^ no rules expected this token in macro call\n\nnote: trace_macro\n  --&gt; src/main.rs:16:20\n   |\n16 |     println!(\"{}\", repro!(1 + 2));\n   |                    ^^^^^^^^^^^^^\n   |\n   = note: expanding `repro! { 1 + 2 }`\n\nnote: trace_macro\n  --&gt; src/main.rs:16:5\n   |\n16 |     println!(\"{}\", repro!(1 + 2));\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expanding `println! { \"{}\" , repro ! (1 + 2) }`\n   = note: to `{ $crate :: io :: _print (format_args_nl ! (\"{}\" , repro ! (1 + 2))) ; }`\n</code></pre>\n\n<p>I would expect that <code>bar: fizz</code> maps to <code>['bar', ':', 'fizz']</code> and <code>1 + 2</code> maps to <code>['1', '+', '2']</code> </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 480272, "user_id": 1968, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd630f72eef3790bfb4ef38d08c7f85?s=128&d=identicon&r=PG", "display_name": "Konrad Rudolph", "link": "https://stackoverflow.com/users/1968/konrad-rudolph"}, "edited": false, "score": 0, "creation_date": 1565706093, "post_id": 57479666, "comment_id": 101431183, "body": "Your Conda installation is messing with Rust finding the correct resources because it\u2019s misconfigured. Step 1 should be to try to fix the Conda environment (specifically, libssh2). If that fails, disable the Conda environment or, if that\u2019s not enough, uninstall it (obviously this is a drastic suggestion and you might not want to do that)."}, {"owner": {"reputation": 55, "user_id": 7685436, "user_type": "registered", "profile_image": "https://graph.facebook.com/1352194544801504/picture?type=large", "display_name": "Donovan So", "link": "https://stackoverflow.com/users/7685436/donovan-so"}, "reply_to_user": {"reputation": 480272, "user_id": 1968, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd630f72eef3790bfb4ef38d08c7f85?s=128&d=identicon&r=PG", "display_name": "Konrad Rudolph", "link": "https://stackoverflow.com/users/1968/konrad-rudolph"}, "edited": false, "score": 0, "creation_date": 1565706592, "post_id": 57479666, "comment_id": 101431502, "body": "@KonradRudolph do you mind elaborating on what you meant by &quot;fixing the Conda environment&quot;? Thanks!"}, {"owner": {"reputation": 480272, "user_id": 1968, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd630f72eef3790bfb4ef38d08c7f85?s=128&d=identicon&r=PG", "display_name": "Konrad Rudolph", "link": "https://stackoverflow.com/users/1968/konrad-rudolph"}, "edited": false, "score": 0, "creation_date": 1565706710, "post_id": 57479666, "comment_id": 101431556, "body": "I can only speculate but you could try reinstalling libssh2 and libssl in the Conda environment, since that (at minimum) seems to be broken. Better yet, try uninstalling libssh2, since it\u2019s apparently labelled as \u201cbroken\u201d in Conda."}, {"owner": {"reputation": 55, "user_id": 7685436, "user_type": "registered", "profile_image": "https://graph.facebook.com/1352194544801504/picture?type=large", "display_name": "Donovan So", "link": "https://stackoverflow.com/users/7685436/donovan-so"}, "reply_to_user": {"reputation": 480272, "user_id": 1968, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd630f72eef3790bfb4ef38d08c7f85?s=128&d=identicon&r=PG", "display_name": "Konrad Rudolph", "link": "https://stackoverflow.com/users/1968/konrad-rudolph"}, "edited": false, "score": 0, "creation_date": 1565789946, "post_id": 57479666, "comment_id": 101461494, "body": "@KonradRudolph uninstalling Anaconda fixed the issue, thank you!"}], "owner": {"reputation": 55, "user_id": 7685436, "user_type": "registered", "profile_image": "https://graph.facebook.com/1352194544801504/picture?type=large", "display_name": "Donovan So", "link": "https://stackoverflow.com/users/7685436/donovan-so"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 344, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1565706328, "creation_date": 1565705706, "last_edit_date": 1565706328, "question_id": 57479666, "link": "https://stackoverflow.com/questions/57479666/how-to-fix-library-not-loaded-rpath-libssl-1-0-0-dylib-when-installing-rust", "title": "How to fix &quot;library not loaded: @rpath/libssl.1.0.0.dylib&quot; when installing Rust on macOS?", "body": "<p>I was trying to install Rust on my Mac with the command <code>curl https://sh.rustup.rs -sSf | sh</code>, but received the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>dyld: Library not loaded: @rpath/libssl.1.0.0.dylib\n  Referenced from: /anaconda3/lib/libssh2.1.dylib\n  Reason: image not found\n[1]    5499 abort      curl https://sh.rustup.rs -sSf | \n       5500 done       sh\n</code></pre>\n\n<p>What should I do?</p>\n"}, {"tags": ["rust", "geojson", "geos"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565704267, "post_id": 57477992, "comment_id": 101429950, "body": "Please paste the exact and entire error that you&#39;re getting \u2014 that will help us to understand what the problem is so we can help best. Sometimes trying to interpret an error message is tricky and it&#39;s actually a different part of the error message that&#39;s important."}], "answers": [{"comments": [{"owner": {"reputation": 51, "user_id": 5797292, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cf627b75e5899f6ab5fc282aa9bdbcf?s=128&d=identicon&r=PG&f=1", "display_name": "user5797292", "link": "https://stackoverflow.com/users/5797292/user5797292"}, "edited": false, "score": 0, "creation_date": 1565706352, "post_id": 57479433, "comment_id": 101431366, "body": "Thank you very much! This does indeed solve the issue! I am pretty new to Rust, so this was especially confusing."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1565704922, "creation_date": 1565704922, "answer_id": 57479433, "question_id": 57477992, "link": "https://stackoverflow.com/questions/57477992/unable-to-convert-geo-typepolygon-into-geospolygon-could-not-find-from-geo/57479433#57479433", "title": "Unable to convert geo_type::Polygon into geos::Polygon: could not find from_geo in geos", "body": "<p>The <code>from_geo</code> module <a href=\"https://github.com/georust/geos/blob/37b2e0d456a2120d1a60c2e5f269570b2ee287dd/src/lib.rs#L65-L66\" rel=\"nofollow noreferrer\">is behind a feature flag</a>:</p>\n\n<pre><code>#[cfg(any(feature = \"geo\", feature = \"dox\"))]\npub mod from_geo;\n</code></pre>\n\n<p>You need to specify that feature when you add the crate to your Cargo.toml:</p>\n\n<pre><code>[dependencies]\ngeos = { version = \"5.0.0\", features = [\"geo\"] }\n</code></pre>\n\n<p>You should also file issues with the crate to document this. </p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\" rel=\"nofollow noreferrer\">Cargo documentation for feature flags</a></li>\n</ul>\n"}], "owner": {"reputation": 51, "user_id": 5797292, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2cf627b75e5899f6ab5fc282aa9bdbcf?s=128&d=identicon&r=PG&f=1", "display_name": "user5797292", "link": "https://stackoverflow.com/users/5797292/user5797292"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 143, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1565704922, "creation_date": 1565700271, "last_edit_date": 1565704516, "question_id": 57477992, "link": "https://stackoverflow.com/questions/57477992/unable-to-convert-geo-typepolygon-into-geospolygon-could-not-find-from-geo", "title": "Unable to convert geo_type::Polygon into geos::Polygon: could not find from_geo in geos", "body": "<p>I have a geojson document on which I want to perform some GEOS transforms on, such as: calculating the intersection, subtracting a polygon from another etc.</p>\n\n<p>I have been able to create a <code>geo_types::Polygon</code> from the document but haven't been able to convert that to a GEOS Polygon. The documentation for the geos library says that this is possible, but I am getting compilation errors.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json::{Result, Value};\nuse geo_geojson;\nuse geos::from_geo::TryInto;\nuse geos::{Error, Geometry};\n\nfn main() {\n    let data = r#\"\n        {\n            \"type\" : \"Feature\",\n            \"properties\" : {},\n            \"geometry\" : {\n                \"type\" : \"Polygon\",\n                \"coordinates\" : [ [ [ -80.2006099057282, 25.7667778809006], [ -80.2005810927863, 25.7667893295156],\n                [ -80.2005511360631, 25.7667981904308], [ -80.2005203313322, 25.7668043699427], [ -80.2004889842378, 25.7668078025078],\n                [ -80.2004574067358, 25.766808451653], [ -80.2004259134638, 25.7668063104759], [ -80.2003948180789, 25.7668014017381],\n                [ -80.2003644296081, 25.7667937775553], [ -80.2003350488499, 25.7667835186779], [ -80.2003069648777, 25.7667707333574],\n                [ -80.2002804517018, 25.7667555557905], [ -80.2002557651654, 25.7667381441435], [ -80.2002331401646, 25.7667186781729],\n                [ -80.2002127882898, 25.7666973564876], [ -80.200194895997, 25.7666743935394], [ -80.2001796233871, 25.7666500164743],\n                [ -80.2001671036392, 25.7666244620256], [ -80.2001574430594, 25.7665979736533], [ -80.2001507216193, 25.7665707991263],\n                [ -80.2001469937692, 25.7665431886774], [ -80.2001462892496, 25.766515393747], [ -80.2001486136429, 25.7664876661955],\n                [ -80.200153948486, 25.7664602577369], [ -80.2001622509086, 25.7664334192908], [ -80.2001734529129, 25.7664073999664],\n                [ -80.2001874605259, 25.7663824454984], [ -80.2002041531028, 25.7663587960835], [ -80.2002233830273, 25.7663366837049],\n                [ -80.2002449759842, 25.7663163291135], [ -80.2002687318761, 25.7662979386737], [ -80.2002944263789, 25.7662817012691],\n                [ -80.2003218130656, 25.7662677854259], [ -80.2003506260038, 25.7662563367582], [ -80.2003805827209, 25.7662474758012],\n                [ -80.2004113874437, 25.7662412962597], [ -80.2004427345288, 25.766237863678], [ -80.2004743120208, 25.7662372145296],\n                [ -80.200505805283, 25.7662393557171], [ -80.2005369006592, 25.7662442644785], [ -80.2005672891229, 25.7662518886976],\n                [ -80.2005966698762, 25.7662621476228], [ -80.200624753846, 25.7662749330014], [ -80.2006512670223, 25.7662901106348],\n                [ -80.2006759535611, 25.7663075223545], [ -80.2006985785666, 25.7663269884019], [ -80.200718930447, 25.7663483101652],\n                [ -80.2007368227461, 25.7663712731897], [ -80.2007520953618, 25.7663956503261], [ -80.2007646151143, 25.7664212048378],\n                 [ -80.2007742756976, 25.766447693262], [ -80.2007809971394, 25.7664748678266], [ -80.20078472499, 25.766502478297],\n                  [ -80.2007854295097, 25.7665302732315], [ -80.2007831051166, 25.7665580007696], [ -80.2007777702746, 25.7665854091976],\n                   [ -80.2007694678545, 25.7666122475983], [ -80.2007582658544, 25.7666382668644], [ -80.2007442582467, 25.7666632212646],\n                   [ -80.2007275656759, 25.7666868706053], [ -80.2007083357575, 25.7667089829062], [ -80.2006867428059, 25.7667293374198],\n                   [ -80.2006629869175, 25.7667477277848], [ -80.200637292416, 25.7667639651196], [ -80.2006099057282, 25.7667778809006]]]\n            }\n        }\"#;\n\n    // Parse the string of data into serde_json::Value.\n    let serialized: Value = serde_json::from_str(data).unwrap();\n    let collection: geo_types::GeometryCollection&lt;f64&gt; = geo_geojson::from_str(&amp;serialized.to_string()).unwrap();\n    for geom in collection {\n        let poly = geom.into_polygon().unwrap();\n        let converted_poly: geos::Geometry = (&amp;poly).try_into().expect(\"failed conversion\");\n    }\n}\n\n</code></pre>\n\n<p>I expect this to compile and have <code>converted_poly</code> be a <code>geos::Polygon</code>. Instead I get this from the compiler:</p>\n\n<p><code>could not find from_geo in geos</code></p>\n\n<p><code>no method named try_into found for type &amp;geo_types::polygon::Polygon&lt;f64&gt; in the current scope</code></p>\n\n<p>Both the <code>import</code> and the <code>try_into</code> call are referenced on the first page of <a href=\"https://docs.rs/crate/geos/5.0.0\" rel=\"nofollow noreferrer\">the documentation for the geos crate</a> under the \"Conversion from rust-geo\" section.</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565747845, "post_id": 57477967, "comment_id": 101445331, "body": "I <i>swear</i> this has been asked before; I&#39;m positive I misread that question and suggested <a href=\"https://serde.rs/transcode.html\" rel=\"nofollow noreferrer\">serde-transcode</a> before understanding the goal. I believe my suggestion there was just to use <code>From</code>, as you have."}], "answers": [{"comments": [{"owner": {"reputation": 535, "user_id": 1436289, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/HRq26.png?s=128&g=1", "display_name": "xiaodong", "link": "https://stackoverflow.com/users/1436289/xiaodong"}, "edited": false, "score": 1, "creation_date": 1604487751, "post_id": 57488708, "comment_id": 114360407, "body": "PS: the <code>Entry</code> type need implement <code>serde::ser::Serialize</code>"}], "tags": [], "owner": {"reputation": 66, "user_id": 11743361, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-wMISugZaPd0/AAAAAAAAAAI/AAAAAAAACsI/VqVDomZwH30/photo.jpg?sz=128", "display_name": "Selicre", "link": "https://stackoverflow.com/users/11743361/selicre"}, "is_accepted": true, "score": 5, "last_activity_date": 1565791612, "last_edit_date": 1565791612, "creation_date": 1565761293, "answer_id": 57488708, "question_id": 57477967, "link": "https://stackoverflow.com/questions/57477967/how-can-i-use-serde-to-serialize-a-struct-to-another-rust-data-structure/57488708#57488708", "title": "How can I use serde to serialize a struct to another Rust data structure?", "body": "<p>The simplest way to do this would be to use <a href=\"https://docs.serde.rs/serde_json/fn.from_value.html\" rel=\"nofollow noreferrer\"><code>serde_json::from_value</code></a> (applicable even if you're not using JSON, but requires all fields to be valid JSON [e.g. no non-string keys in hashmaps]):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let entry = Entry {\n    a: 24,\n    b: 42,\n    c: \"nice\".to_string()\n};\nlet v = serde_json::to_value(&amp;entry).unwrap();\nlet document: Document = serde_json::from_value(v).unwrap();\n</code></pre>\n\n<p>Caveat: the value type of <code>Document</code> will have to implement <code>Deserialize</code>, and in a way that can deserialize any value into the correct argument. This can be done by using <code>#[serde(untagged)]</code>, but may be prone to certain types being wrong, such as <code>u8</code> being converted to <code>u64</code>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b1b7fc40161b3785627bd50ea90b788d\" rel=\"nofollow noreferrer\">Full playground example</a></p>\n\n<p>A more sophisticated method that doesn't involve any unnecessary copies will require you to write a custom (De)serializer, and a good one to look at would be <a href=\"https://docs.serde.rs/serde_transcode/fn.transcode.html\" rel=\"nofollow noreferrer\"><code>serde_transcode::transcode</code></a>, which does the inverse of the thing you want - it converts between two data formats.</p>\n"}], "owner": {"reputation": 1049, "user_id": 6580990, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/kZNPw.jpg?s=128&g=1", "display_name": "stimulate", "link": "https://stackoverflow.com/users/6580990/stimulate"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1839, "favorite_count": 2, "accepted_answer_id": 57488708, "answer_count": 1, "score": 6, "last_activity_date": 1594294784, "creation_date": 1565700188, "last_edit_date": 1594294784, "question_id": 57477967, "link": "https://stackoverflow.com/questions/57477967/how-can-i-use-serde-to-serialize-a-struct-to-another-rust-data-structure", "title": "How can I use serde to serialize a struct to another Rust data structure?", "body": "<p>I have a data structure <code>Document</code>, which I would like to serialize other Rust structs to. It is basically a <code>HashMap</code> for the fields internally, however it interacts with a database API, so I will definitely want to convert other types into those <code>Document</code>s.</p>\n<p>For example this struct</p>\n<pre><code>struct Entry {\n    id: String,\n    user: String,\n    duration: u32,\n    location: (f64, f64),\n}\n</code></pre>\n<p>I already have a conversion to the <code>Document</code> type using the <code>From</code> trait, however this is an extra place I have to modify when the <code>Entry</code> struct changes. The implementation uses a <code>DocumentBuilder</code> and looks like this:</p>\n<pre><code>impl From&lt;Entry&gt; for Document {\n    fn from(entry: Entry) -&gt; Self {\n        Document::builder()\n            .name(&amp;entry.id)           // set the name of the document\n            .field(&quot;user&quot;, entry.user) // add fields ...\n            .field(&quot;duration&quot;, entry.duration)\n            .field(&quot;location&quot;, entry.location)\n            .build()                   // build a Document\n\n    }\n}\n</code></pre>\n<p>The <code>field</code> method can assign any value which can be converted to a <code>FieldValue</code> to a key. So the signature of <code>field</code> is:</p>\n<pre><code>impl DocumentBuilder {\n    // ...\n    pub fn field&lt;T: Into&lt;FieldValue&gt;&gt;(mut self, key: &amp;str, value: T) -&gt; Self { ... }\n    // ...\n}\n</code></pre>\n<p>I would like to use serde and its derive feature to automatically serialize the struct and its fields into a <code>Document</code>. How would I go about doing this? I looked at the wiki for <a href=\"https://serde.rs/impl-serializer.html\" rel=\"nofollow noreferrer\">Implementing a Serializer</a> but the example shown writes to a string and I would like to know how I can serialize to a data structure using the builder pattern.</p>\n"}, {"tags": ["sorting", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1976, "user_id": 1622475, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/94a2da046a4b68cdaaa274f822e7804e?s=128&d=identicon&r=PG", "display_name": "Toni Kanoni", "link": "https://stackoverflow.com/users/1622475/toni-kanoni"}, "edited": false, "score": 0, "creation_date": 1565699193, "post_id": 57476690, "comment_id": 101427177, "body": "Wow, great answer, and even with working code... Thank you! :) I will now wrap my head around this"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565704013, "post_id": 57476690, "comment_id": 101429797, "body": "Thoughts on a duplicate of <a href=\"https://stackoverflow.com/a/46514082/155423\">Sort a vector with a comparator which changes its behavior dynamically</a> ?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565712893, "post_id": 57476690, "comment_id": 101434849, "body": "@Shepmaster yup, seems right."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1565695573, "last_edit_date": 1565695573, "creation_date": 1565695200, "answer_id": 57476690, "question_id": 57475986, "link": "https://stackoverflow.com/questions/57475986/dynamic-chained-sorting-of-a-vector-by-struct-fields/57476690#57476690", "title": "Dynamic chained sorting of a vector by struct fields", "body": "<p>I would define an <code>enum</code> with a variant for each member of your structure and then implement a <code>cmp_by</code> function like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum MyStructKey {\n    A,\n    B,\n    C,\n    D,\n}\n\nimpl MyStruct {\n    fn cmp_by(&amp;self, other: &amp;Self, keys: &amp;[MyStructKey]) -&gt; Ordering {\n        match keys.split_first() {\n            Some((MyStructKey::A, tail)) =&gt; {\n                self.a.cmp(&amp;other.a).then_with(|| self.cmp_by(other, tail))\n            }\n            Some((MyStructKey::B, tail)) =&gt; {\n                self.b.cmp(&amp;other.b).then_with(|| self.cmp_by(other, tail))\n            }\n            Some((MyStructKey::C, tail)) =&gt; {\n                self.c.cmp(&amp;other.c).then_with(|| self.cmp_by(other, tail))\n            }\n            Some((MyStructKey::D, tail)) =&gt; {\n                self.d.cmp(&amp;other.d).then_with(|| self.cmp_by(other, tail))\n            }\n            None =&gt; Ordering::Equal,\n        }\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5c2715f5ad60b18fca7ddd1ef348c5b3\" rel=\"nofollow noreferrer\">Permalink to the playground</a>)</p>\n\n<p>Assuming that you have more structures you want to compare like this, or that you have more fields, I would then create a macro that can generate this for you.</p>\n\n<p>If you want to compare a vector, you can then use <code>cmp_by</code> in combination with <code>sort_by</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let order = &amp;[MyStructKey::B, MyStructKey::A, MyStructKey::C, MyStructKey::D];\nlet mut v = vec![a, b, c];\nv.sort_by(|l, r| l.cmp_by(&amp;r, order));\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=57dfe8c8f92f1ddf8509a9f691acabf7\" rel=\"nofollow noreferrer\">Permalink to the playground</a>)</p>\n"}], "owner": {"reputation": 1976, "user_id": 1622475, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/94a2da046a4b68cdaaa274f822e7804e?s=128&d=identicon&r=PG", "display_name": "Toni Kanoni", "link": "https://stackoverflow.com/users/1622475/toni-kanoni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "closed_date": 1565959307, "accepted_answer_id": 57476690, "answer_count": 1, "score": 1, "last_activity_date": 1565703381, "creation_date": 1565692614, "last_edit_date": 1565703381, "question_id": 57475986, "link": "https://stackoverflow.com/questions/57475986/dynamic-chained-sorting-of-a-vector-by-struct-fields", "closed_reason": "Duplicate", "title": "Dynamic chained sorting of a vector by struct fields", "body": "<p>I have a struct</p>\n\n<pre><code>struct MyStruct {\n    a: usize,\n    b: String,\n    c: String,\n    d: usize,\n}\n</code></pre>\n\n<p>I fill a vector with <code>MyStruct</code> objects and this vector then needs to be sorted by multiple fields of the structure. To make it harder, the sort priority is given as a list and can change, for example:</p>\n\n<p><code>sort_by = [\"a\", \"b\"]</code> means sort the vector by <code>MyStruct::a</code> values first, THEN (if the a values are equal) by <code>MyStruct::b</code> values</p>\n\n<p>but it could also be </p>\n\n<p><code>sort_by = [\"d\", \"c\", \"a\"]</code> for example, which is of course sort by <code>MyStruct::d</code>, THEN <code>MyStruct::c</code>, THEN <code>MyStruct::a</code>.</p>\n\n<p>So, it's an ORDER_BY basically...</p>\n\n<p>How can I do that? Do I need external crates for this? </p>\n"}, {"tags": ["rust", "static-linking", "libgcc"], "comments": [{"owner": {"reputation": 69264, "user_id": 256138, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ed9e8c0ff767e38f8fade11f5af00a45?s=128&d=identicon&r=PG", "display_name": "rubenvb", "link": "https://stackoverflow.com/users/256138/rubenvb"}, "edited": false, "score": 0, "creation_date": 1565690416, "post_id": 57475184, "comment_id": 101422533, "body": "You need a statically build libgcc in order for <code>-static-libgcc</code> to do anything if I remember correctly. Are you sure your cross-compiler actually provides a static version of libgcc? I believe it should be named <code>libgcc_s.a</code>"}], "owner": {"reputation": 301, "user_id": 4608865, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/uAcdI.jpg?s=128&g=1", "display_name": "Thomas", "link": "https://stackoverflow.com/users/4608865/thomas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 405, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1565690620, "creation_date": 1565689699, "last_edit_date": 1565690620, "question_id": 57475184, "link": "https://stackoverflow.com/questions/57475184/how-do-i-link-libgcc-statically-in-rust", "title": "How do I link libgcc statically in rust", "body": "<p>I am trying to compile a Rust program with statically linked libgcc. </p>\n\n<p>The program is meant to run in <code>initramfs</code> in a restricted environment and is compiled for different platforms (arm, x86_64). </p>\n\n<p>Currently my only solution is to compile against musl which produces a statically linked binary. </p>\n\n<p>Unfortunately this adds a bit of complexity to the build process - I have not found a way to cross-compile for arm-musl on x86 and I have extra installation requirements (musl-gcc). </p>\n\n<p>I have tried to add this:</p>\n\n<pre><code>[target.x86_64-unknown-linux-gnu]\nrustflags = [\"-C\", \"target-feature=+crt-static\", \"-C\", \"link-args=-static-libgcc\"]\n</code></pre>\n\n<p>...to <code>.cargo/config</code>, but as far as I understand <code>+crt-static</code> only works on Windows, and <code>-static-libgcc</code> showed no effect either.</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1565692160, "post_id": 57474040, "comment_id": 101423488, "body": "You could store all elements in your <code>SerializeSeq</code> instance until the call to <code>end</code>, where you would do the actual serialization."}], "answers": [{"tags": [], "owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "is_accepted": true, "score": 0, "last_activity_date": 1566313093, "creation_date": 1566313093, "answer_id": 57576446, "question_id": 57474040, "link": "https://stackoverflow.com/questions/57474040/serializing-a-sequence-in-serde-when-both-sequence-length-and-types-must-be-know/57576446#57576446", "title": "Serializing a sequence in Serde when both sequence length and types must be known?", "body": "<p>Solved using the suggestion from <a href=\"https://stackoverflow.com/users/2733851/mcarton\">mcarton</a> about storing elements in the sequence serializer.</p>\n\n<p>This stores each serialized sequence of bytes in a <code>Vec</code> (i.e. as a <code>Vec&lt;Vec&lt;u8&gt;&gt;</code>), and checks whether all items are of equal length before serializing into <code>output</code>.</p>\n\n<p>This looks something like:</p>\n\n<pre><code>/// Main top level serializer.\npub struct Serializer {\n    output: Vec&lt;u8&gt;\n}\n\nimpl&lt;'a&gt; ser::Serializer for &amp;'a mut Serializer {\n    // ... skipped ...\n\n    type SerializeSeq = ArraySerializer&lt;'a&gt;;\n\n    fn serialize_seq(self, len: Option&lt;usize&gt;) -&gt; Result&lt;Self::SerializeSeq&gt; {\n        let array_ser = ArraySerializer {\n            items: Vec::new(),\n            output: &amp;mut self.output,\n        };\n        Ok(array_ser)\n    }\n\n    // ... skipped ...\n}\n\n\npub struct ArraySerializer&lt;'a&gt; {\n    /// Temporary storage for individual serialized array elements.\n    items: Vec&lt;Vec&lt;u8&gt;&gt;,\n\n    /// Storage for final serialized output of header plus all elements. This is\n    /// typically a reference to the full output buffer being serialized into.\n    output: &amp;'a mut Vec&lt;u8&gt;,\n}\n\nimpl &lt;'a&gt; ser::SerializeSeq for ArraySerializer&lt;'a&gt; {\n    type Ok = ();\n    type Error = Error;\n\n    fn serialize_element&lt;T&gt;(&amp;mut self, value: &amp;T) -&gt; Result&lt;Self::Ok&gt; where\n        T: ?Sized + Serialize {\n        // default serializer used for serializing array elements\n        let mut serializer = Serializer::default();\n\n        // serialize individual item and add to `items`\n        value.serialize(&amp;mut serializer)?;\n        self.items.push(serializer.output);\n        Ok(())\n    }\n\n    fn end(self) -&gt; Result&lt;Self::Ok&gt; {\n        if self.items.is_empty() {\n            self.output.push(EMPTY_ARRAY_HEADER);\n            return Ok(());\n        }\n\n        let all_elems_same_length = self.items\n            .iter()\n            .all(|ref v| v.len() == self.items[0].len());\n        };\n\n        if all_elems_same_length {\n            self.output.push(SAME_LENGTH_HEADER);\n            for item in &amp;mut self.items.iter_mut() {\n                self.output.append(item);\n            }\n        } else {\n            self.output.push(VARIABLE_LENGTH_HEADER);\n\n            // ... skipped: encode rest of items using more complicated serialization ...\n        }\n\n        Ok(())\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 340, "favorite_count": 0, "accepted_answer_id": 57576446, "answer_count": 1, "score": 2, "last_activity_date": 1566313093, "creation_date": 1565685456, "question_id": 57474040, "link": "https://stackoverflow.com/questions/57474040/serializing-a-sequence-in-serde-when-both-sequence-length-and-types-must-be-know", "title": "Serializing a sequence in Serde when both sequence length and types must be known?", "body": "<p>I'm working on a <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">Serde</a> serializer in Rust for a JSON-like binary format.</p>\n\n<p>It uses different binary encodings for sequences depending on whether each element is the same size, or whether it's a sequence with mixed element sizes.</p>\n\n<p>E.g.:</p>\n\n<ul>\n<li><code>[1, 2, 3]</code>: serializes using a compact encoding, as all elements serialize to the same byte length</li>\n<li><code>[1, \"two\", [\"a\", 1]]</code>: serializes using a different encoding, since each element serializes to a different byte length</li>\n</ul>\n\n<p>From what I understand of Serde, it serializes a sequence an element at a time, and only the sequence length is optionally know at the start of sequence serialization (via a call to <a href=\"https://docs.serde.rs/serde/trait.Serializer.html#tymethod.serialize_seq\" rel=\"nofollow noreferrer\">serialize_seq</a> on a <a href=\"https://docs.serde.rs/serde/trait.Serializer.html\" rel=\"nofollow noreferrer\">Serializer</a>).</p>\n\n<p>Is there a good pattern for dealing with cases such as the above, where a sequence can't be serialized until all elements have been inspected (and serialized to know their byte length)? It also needs to cope with nested sequences too, as in the example above.</p>\n"}, {"tags": ["generics", "struct", "types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "edited": false, "score": 0, "creation_date": 1565690731, "post_id": 57475251, "comment_id": 101422702, "body": "Thanks! That&#39;s exactly what I needed!"}], "tags": [], "owner": {"reputation": 16, "user_id": 11797207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b30e1699c1396d0b1da5a5f302840aa?s=128&d=identicon&r=PG&f=1", "display_name": "helga-helga", "link": "https://stackoverflow.com/users/11797207/helga-helga"}, "is_accepted": true, "score": 0, "last_activity_date": 1565689894, "creation_date": 1565689894, "answer_id": 57475251, "question_id": 57473557, "link": "https://stackoverflow.com/questions/57473557/rust-expected-type-parameter-found-struct/57475251#57475251", "title": "rust: expected type parameter, found struct", "body": "<p>As I understood correctly, you want to create a generic function to call <code>ymd()</code> for different time zones.</p>\n\n<p>Here is a working example of a generic function for this case:</p>\n\n<pre><code>fn event&lt;T: TimeZone&gt;(s: T) -&gt; DateTime&lt;T&gt; {\n    s.ymd(2019,8,13).and_hms(17, 30, 0)\n}\n</code></pre>\n\n<p>To call the function, use:</p>\n\n<pre><code>event::&lt;Local&gt;(Local);\n</code></pre>\n"}], "owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "closed_date": 1565703111, "accepted_answer_id": 57475251, "answer_count": 1, "score": 0, "last_activity_date": 1565689894, "creation_date": 1565683480, "question_id": 57473557, "link": "https://stackoverflow.com/questions/57473557/rust-expected-type-parameter-found-struct", "closed_reason": "Duplicate", "title": "rust: expected type parameter, found struct", "body": "<p>I have written functions that calcuate some datetime (from chrono) for various TimeZone's T. The functions differ mostly only in the returned value's type <code>DateTime&lt;Utc&gt;</code>, <code>DateTime&lt;Local&gt;</code> etc.\nI am wondering if it is possible to generalize this using generics with something like</p>\n\n<p><code>fn event&lt;T: TimeZone&gt;() -&gt; DateTime&lt;T&gt;</code></p>\n\n<p>instead of separate functions</p>\n\n<p><code>fn event_local() -&gt; DateTime&lt;Local&gt;</code></p>\n\n<p><code>fn event_local() -&gt; DateTime&lt;Utc&gt;</code></p>\n\n<p>...</p>\n\n<p>Trying to put it in the generalized version, I get the error \n\"expected type parameter, found struct\"\nI understand the error, but I'd like to know if there is a way to circumvent it since it is tedious to implement multiple functions with almost identical logic.</p>\n\n<pre><code>extern crate chrono;\n\nuse chrono::{TimeZone, DateTime, Local};\n\nfn event() -&gt; DateTime&lt;Local&gt; {\n    Local.ymd(2019,8,13).and_hms(17, 30, 0)\n}\n\nfn event_utc() -&gt; DateTime&lt;Local&gt; {\n    Utc.ymd(2019,8,13).and_hms(17, 30, 0)\n}\n\n</code></pre>\n\n<p>works, while</p>\n\n<pre><code>fn event&lt;T: TimeZone&gt;() -&gt; DateTime&lt;T&gt; {\n    Local.ymd(2019,8,13).and_hms(17, 30, 0)\n}\n</code></pre>\n\n<p>doesn't compile with the above error.</p>\n\n<p>Looking at question <a href=\"https://stackoverflow.com/questions/34708584/how-to-return-an-instance-of-a-trait\">How to return an instance of a trait?</a>, it is suggested to use a Box, but I am not able to figure out how to do it. I'd appreciate if someone could help me. Thanks!</p>\n"}, {"tags": ["rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565702540, "post_id": 57472754, "comment_id": 101428936, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/57369123/155423\">No method named <code>poll</code> found for a type that implements <code>Future</code></a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57472754/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565712461, "post_id": 57472754, "comment_id": 101434663, "body": "Why don&#39;t you take <code>self: Pin&lt;&amp;mut Self&gt;</code> instead of <code>&amp;mut Self</code>?"}, {"owner": {"reputation": 1098, "user_id": 989615, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bdaff808be1ee4e0378cda9412401af2?s=128&d=identicon&r=PG", "display_name": "krojew", "link": "https://stackoverflow.com/users/989615/krojew"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565715933, "post_id": 57472754, "comment_id": 101436081, "body": "That propagated the problem upwards, but I managed to work around it (not yet sure why it works, need to digest it a bit): <a href=\"https://gist.github.com/rust-play/83bc9a87f9bca8b4af5ec4fbe44f7263\" rel=\"nofollow noreferrer\">gist.github.com/rust-play/83bc9a87f9bca8b4af5ec4fbe44f7263</a>"}], "owner": {"reputation": 1098, "user_id": 989615, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bdaff808be1ee4e0378cda9412401af2?s=128&d=identicon&r=PG", "display_name": "krojew", "link": "https://stackoverflow.com/users/989615/krojew"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 175, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1565712370, "creation_date": 1565680160, "last_edit_date": 1565712370, "question_id": 57472754, "link": "https://stackoverflow.com/questions/57472754/how-do-i-use-pin-with-tokios-sink", "title": "How do I use Pin with Tokio&#39;s Sink?", "body": "<p>I would like to create a method sending some data on a struct which implements Tokio's <a href=\"https://docs.rs/tokio/0.2.0-alpha.1/tokio/prelude/trait.Sink.html\" rel=\"nofollow noreferrer\"><code>Sink</code></a>, but I'm having problems working with <code>Pin</code> as self. In essence, I need something like this:</p>\n\n<pre><code>fn send_data(&amp;mut self, data: Item, cx: &amp;mut Context) -&gt; Poll&lt;Result&lt;(), Error&gt;&gt; {\n    futures_core::ready!(something.poll_ready(cx))?;\n    something.start_send(data)?;\n    futures_core::ready!(something.poll_close(cx))\n}\n</code></pre>\n\n<p>The problem is that each call to <code>poll_ready()</code>, <code>start_send()</code> and <code>poll_close()</code> takes <code>self: Pin&lt;&amp;mut Self&gt;</code> and I don't know what <code>something</code> in my use case should be. If I try to use <code>let something = Pin::new(self);</code> then <code>something</code> gets moved after the call to <code>poll_ready()</code> and I cannot use it for subsequent calls (self is also gone at this point). How do I work around this problem?</p>\n\n<pre><code>use futures_core;\nuse std::pin::Pin;\nuse tokio::prelude::*; // 0.3.0-alpha.1\n\nstruct Test {}\n\nimpl Sink&lt;i32&gt; for Test {\n    type Error = ();\n\n    fn poll_ready(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Result&lt;(), Self::Error&gt;&gt; {\n        Poll::Ready(Ok(()))\n    }\n\n    fn start_send(self: Pin&lt;&amp;mut Self&gt;, item: i32) -&gt; Result&lt;(), Self::Error&gt; {\n        Ok(())\n    }\n\n    fn poll_flush(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Result&lt;(), Self::Error&gt;&gt; {\n        Poll::Ready(Ok(()))\n    }\n\n    fn poll_close(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Result&lt;(), Self::Error&gt;&gt; {\n        Poll::Ready(Ok(()))\n    }\n}\n\nimpl Test {\n    fn send_data(&amp;mut self, data: i32, cx: &amp;mut Context) -&gt; Poll&lt;Result&lt;(), Error&gt;&gt; {\n        // what should \"something\" here be?\n        futures_core::ready!(something.poll_ready(cx))?;\n        something.start_send(data)?;\n        futures_core::ready!(something.poll_close(cx))\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "closures", "move-semantics"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565684106, "post_id": 57470283, "comment_id": 101419500, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=32c00cb1fd3c0952194a393f68f905ed\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1565664428, "post_id": 57470365, "comment_id": 101413550, "body": "The value <code>a</code> has been moved to the closure. So shouldnt <code>a</code> be dropped at the end of the closure call ? Isnt that the reason why <code>FnOnce</code> can only be called once? And an equivalent <code>move</code> <code>ClosureLike</code> implementation should have `    fn call(mut self) {` in it right to move <code>self</code>not borrow."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1565664694, "post_id": 57470365, "comment_id": 101413595, "body": "@raj no, it will be dropped when the closure is dropped. The closure here implements <code>FnMut</code>; it can be called multiple times. See <a href=\"https://stackoverflow.com/q/30177395/155423\">when does a closure implement Fn, FnMut, and FnOnce?</a>"}, {"owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "reply_to_user": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1565675614, "post_id": 57470365, "comment_id": 101415936, "body": "@raj keeping rest of the semantics same, here&#39;s the <code>FnOnce</code> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9382cd11d99a7ae1a22d765a814920ac\" rel=\"nofollow noreferrer\">version of your code</a> . The error is self explanatory."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1565663054, "creation_date": 1565663054, "answer_id": 57470365, "question_id": 57470283, "link": "https://stackoverflow.com/questions/57470283/why-am-i-able-to-call-a-closure-twice-even-though-i-have-moved-a-variable-into-i/57470365#57470365", "title": "Why am I able to call a closure twice even though I have moved a variable into it?", "body": "<p>The variable <code>a</code> has indeed been moved into the closure:</p>\n\n<pre><code>fn main() {\n    let mut a = String::from(\"dd\");\n    let mut x = move || {\n        a.push_str(\"string: &amp;str\");\n    };\n    x();\n    x();\n\n    a.len();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: borrow of moved value: `a`\n --&gt; src/main.rs:9:5\n  |\n2 |     let mut a = String::from(\"dd\");\n  |         ----- move occurs because `a` has type `std::string::String`, which does not implement the `Copy` trait\n3 |     let mut x = move || {\n  |                 ------- value moved into closure here\n4 |         a.push_str(\"string: &amp;str\");\n  |         - variable moved due to use in closure\n...\n9 |     a.len();\n  |     ^ value borrowed here after move\n</code></pre>\n\n<p>It's unclear why you think that the <em>closure</em> <code>x</code> would become invalid after calling it, but it doesn't. No more than the same applied to a struct:</p>\n\n<pre><code>struct ClosureLike {\n    a: String,\n}\n\nimpl ClosureLike {\n    fn call(&amp;mut self) {\n        self.a.push_str(\"string: &amp;str\");\n    }\n}\n\nfn main() {\n    let a = String::from(\"dd\");\n    let mut x = ClosureLike { a };\n    x.call();\n    x.call();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "is_accepted": false, "score": 0, "last_activity_date": 1565702381, "last_edit_date": 1565702381, "creation_date": 1565679256, "answer_id": 57472547, "question_id": 57470283, "link": "https://stackoverflow.com/questions/57470283/why-am-i-able-to-call-a-closure-twice-even-though-i-have-moved-a-variable-into-i/57472547#57472547", "title": "Why am I able to call a closure twice even though I have moved a variable into it?", "body": "<p>The question came from my wrong understanding of closures. The way it is documented in the Rust book also contributed to the confusion (I am not saying the book is bad). If anyone else had this same confusion, here is what I found.</p>\n\n<p>Closures do not just store the scope and run it when its called. It captures the environment in the preferred way. The environment which contains <code>a</code> is stored in the closure. How the values are captured from the environment decides the trait.</p>\n\n<p>The value of <code>a</code> persists until the closure exists, <strong>unless</strong> some operation moves it, such as if the closure returns <code>a</code> or a method consumes <code>a</code>. Here, nothing moves <code>a</code> out of the closure so the closure can be called as many times as I want.</p>\n\n<p>A better understanding can be obtained from the <code>FnOnce</code>, <code>FnMut</code>, and <code>Fn</code> traits. These traits are decided by how the variables are captured by the closure, not by how the variables are moved into the closure. <code>FnMut</code> can be implemented on a closure where a value is <code>move</code>d .</p>\n"}], "owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 313, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1565702381, "creation_date": 1565662199, "last_edit_date": 1565663173, "question_id": 57470283, "link": "https://stackoverflow.com/questions/57470283/why-am-i-able-to-call-a-closure-twice-even-though-i-have-moved-a-variable-into-i", "title": "Why am I able to call a closure twice even though I have moved a variable into it?", "body": "<pre><code>fn main() {\n    let mut a = String::from(\"dd\");\n    let mut x = move || {\n        a.push_str(\"string: &amp;str\");\n    };\n    x();\n    x();\n}\n</code></pre>\n\n<p>I have added <code>move</code> here to capture <code>a</code> but I am still able to call the <code>x</code> closure twice. Is <code>a</code> still borrowed as a mutable reference here? Why doesn't <code>move</code> force a move? </p>\n"}, {"tags": ["rust", "rust-diesel"], "answers": [{"tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": false, "score": 1, "last_activity_date": 1565673812, "creation_date": 1565673812, "answer_id": 57471550, "question_id": 57469925, "link": "https://stackoverflow.com/questions/57469925/how-do-i-get-autocompletion-for-diesels-schema-module/57471550#57471550", "title": "How do I get autocompletion for Diesel&#39;s schema module?", "body": "<p>Intellij-rust has very poor macro/generated code support right now. While diesel generated a file that is in idea's indexing path, its use of macro internally makes it unable to expand and get autocompletion, because running the macro requires executing the diesel procedural macro, which spawns an actual process, rendering it impractical to automatically be done in terms of performance.</p>\n\n<p>If you really want such a thing, something very troublesome yet marginally usable would be to use <a href=\"https://crates.io/crates/cargo-expand\" rel=\"nofollow noreferrer\"><code>cargo expand</code></a> to expand the diesel-generated module, then copy and paste the result in place of the diesel macro call. Nevertheless, it is impractical to do this every time, especially with VCS, but it might be useful for learning the diesel API.</p>\n"}], "owner": {"reputation": 41, "user_id": 8341366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a1ffb61d8e2e1297e4e1099debf4e48?s=128&d=identicon&r=PG&f=1", "display_name": "Krallznut", "link": "https://stackoverflow.com/users/8341366/krallznut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 361, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1565673812, "creation_date": 1565658242, "last_edit_date": 1565659298, "question_id": 57469925, "link": "https://stackoverflow.com/questions/57469925/how-do-i-get-autocompletion-for-diesels-schema-module", "title": "How do I get autocompletion for Diesel&#39;s schema module?", "body": "<p>I figured out how to make Diesel work with my project, but when I try to use a functionality from the schema module, I get no code completion suggestions from VS Code with the RLS extension installed.</p>\n\n<p>I also tried to get suggestions with the IntelliJ Rust plugin without any success; maybe I'm missing something. The problem seems to come from macro usage.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate diesel;\nuse diesel::prelude::*;\n\nmod db;\nmod models;\nmod schema;\n\nuse models::post::Post;\n\n#[get(\"/\")]\nfn main() {\n    use schema::posts::dsl::*;\n\n    let connection = db::establish_connection();\n    let results = posts.load::&lt;Post&gt;(&amp;connection).unwrap();\n\n    for post in results {\n        println!(\"{}\", post.content);\n    }\n}\n</code></pre>\n\n<p>The code works but I get nothing from VS Code after I write <code>posts</code>. or <code>schema::</code>.</p>\n\n<p>This seems to me to be a big feature from Diesel and I can't believe code completion is impossible with it.</p>\n"}, {"tags": ["loops", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565657567, "post_id": 57469848, "comment_id": 101412466, "body": "<a href=\"https://stackoverflow.com/q/42134874/155423\">Are there equivalents to slice::chunks/windows for iterators to loop over pairs, triplets etc?</a>"}, {"owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565657941, "post_id": 57469848, "comment_id": 101412524, "body": "Thanks for the link but &quot;The best way to have chunks and windows on an arbitrary iterator/collection is to first collect it into a Vec and iterate over that.&quot; -&gt; this is exactly what I am trying to avoid. I am trying to replicate the exact functionality of <code>grep</code> in Rust, so having to read the entire file into memory defeats the purpose of the program. I only want to hold <code>n</code> + 1 lines in memory at a time; the line being iterated over, and its previous &amp; following lines in the input stream."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565658141, "post_id": 57469848, "comment_id": 101412545, "body": "Keep reading to the part of that answer that has a complete, ready-to-go code snippet that creates the chunking thing you want. &quot;If dynamic allocations are accepted, then it is possible to use <code>Vec&lt;Iterator::Item&gt;</code> as the Item of the chunking iterator.&quot;"}, {"owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565660944, "post_id": 57469848, "comment_id": 101412977, "body": "Thanks, I got a simple version of the answer there to work and output the line following a match. It even has the exact same memory footprint as GNU <code>grep</code>, ~900KB while iterating over a 3GB file, though it takes 4x as long (4min vs 1min). However I am not sure how to extend this to also include the lines preceeding a match, might still need a buffer of some kind?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565661037, "post_id": 57469848, "comment_id": 101412993, "body": "<a href=\"https://stackoverflow.com/q/43028653/155423\">Rust file I/O is very slow compared with C. Is something wrong?</a>; <a href=\"https://stackoverflow.com/q/25255736/155423\">Why is my Rust program slower than the equivalent Java program?</a>."}, {"owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565704258, "post_id": 57469848, "comment_id": 101429941, "body": "Thanks, compiling with <code>cargo --release</code> has dropped the execution time down to ~15-20s, which is even faster than the equivalent GNU <code>grep -A</code>."}], "answers": [{"comments": [{"owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "edited": false, "score": 0, "creation_date": 1565658273, "post_id": 57469893, "comment_id": 101412555, "body": "yeah this is roughly what I was working on for my own implementation, basically a <code>Vec&lt;String&gt;</code> that gets <code>push</code>&#39;d each line then truncated to <code>n</code> size every iteration, when a match is found print the Vec contents. This would work for the lines preceeding the match. Have not figured out how to handle the lines after the match yet though. I was thinking that maybe <a href=\"https://docs.rs/itertools/0.8.0/itertools/fn.multipeek.html\" rel=\"nofollow noreferrer\"><code>itertools::multipeek</code></a> might help for the lines following the match, but I cant find a working example of how to use it"}], "tags": [], "owner": {"reputation": 48201, "user_id": 1250772, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/633e1f643d2c9b043231b4a32b078907?s=128&d=identicon&r=PG", "display_name": "Kaz", "link": "https://stackoverflow.com/users/1250772/kaz"}, "is_accepted": false, "score": 1, "last_activity_date": 1565657954, "creation_date": 1565657954, "answer_id": 57469893, "question_id": 57469848, "link": "https://stackoverflow.com/questions/57469848/how-to-output-lines-before-and-after-a-match-while-iterating-over-lines-in-a-fil/57469893#57469893", "title": "How to output lines before and after a match while iterating over lines in a file?", "body": "<p>One approach is to develop a state machine that keeps a window of the last 2N+1 lines at all times. When a matching line is found, it adds a new entry to a list of to-be-printed pending matches, associated with a future line number. When that future line number is reached, the entries with that line number are printed, along with their lines of context pulled from the context window, keeping in mind that matches close to the beginnig of the input have fewer than N leading context lines.  When the end of input is reached, any entries still pending are printed, keeping in mind these have fewer than N trailing context lines.</p>\n\n<p>Good luck fighting Rust with all this mutation!</p>\n"}, {"tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": false, "score": 3, "last_activity_date": 1565660676, "last_edit_date": 1565660676, "creation_date": 1565660153, "answer_id": 57470092, "question_id": 57469848, "link": "https://stackoverflow.com/questions/57469848/how-to-output-lines-before-and-after-a-match-while-iterating-over-lines-in-a-fil/57470092#57470092", "title": "How to output lines before and after a match while iterating over lines in a file?", "body": "<p>Implementing this efficiently is pretty tricky, and your instinct to use a roll buffer is pretty much on the money. This is what both GNU grep and ripgrep do. If you're willing to incur some dependencies, then you can pretty much achieve what you want by relying on some of ripgrep's internal libraries. For example, here's a program that does what you want which makes use of the <a href=\"https://docs.rs/grep-searcher\" rel=\"nofollow noreferrer\"><code>grep-searcher</code></a> crate:</p>\n\n<pre><code>use std::error::Error;\nuse std::io;\n\nuse grep_regex::RegexMatcher;\nuse grep_searcher::{Searcher, SearcherBuilder, Sink, SinkContext, SinkMatch};\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let re = RegexMatcher::new(r\"foo\")?;\n    let mut searcher = SearcherBuilder::new()\n        .before_context(1)\n        .after_context(1)\n        .build();\n    searcher.search_reader(\n        &amp;re,\n        io::stdin().lock(),\n        MySink(io::stdout().lock()),\n    )?;\n    Ok(())\n}\n\nstruct MySink&lt;W&gt;(W);\n\nimpl&lt;W: io::Write&gt; Sink for MySink&lt;W&gt; {\n    type Error = io::Error;\n\n    fn matched(\n        &amp;mut self,\n        _: &amp;Searcher,\n        mat: &amp;SinkMatch,\n    ) -&gt; Result&lt;bool, io::Error&gt; {\n        self.0.write_all(mat.bytes())?;\n        Ok(true)\n    }\n\n    fn context(\n        &amp;mut self,\n        _: &amp;Searcher,\n        ctx: &amp;SinkContext,\n    ) -&gt; Result&lt;bool, io::Error&gt; {\n        self.0.write_all(ctx.bytes())?;\n        Ok(true)\n    }\n\n    fn context_break(\n        &amp;mut self,\n        _: &amp;Searcher,\n    ) -&gt; Result&lt;bool, io::Error&gt; {\n        self.0.write_all(b\"--\\n\")?;\n        Ok(true)\n    }\n}\n</code></pre>\n\n<p>With the following dependencies:</p>\n\n<pre><code>[dependencies]\ngrep-regex = \"0.1.5\"\ngrep-searcher = \"0.1.6\"\n</code></pre>\n\n<p>Its output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ printf '1\\n2\\n3\\nfoo\\n4\\n5\\n6\\n7\\nfoo\\n8\\n9' | ./target/release/grepex\n3\nfoo\n4\n--\n7\nfoo\n8\n</code></pre>\n\n<p>The <code>grep-regex</code> dependency could be dropped if you don't need regexes, but it will require writing a bit more code to provide your own implementation of <a href=\"https://docs.rs/grep-matcher/0.1.3/grep_matcher/trait.Matcher.html\" rel=\"nofollow noreferrer\"><code>grep-matcher::Matcher</code></a> (which is easier than it looks, if all you need is simple substring search).</p>\n\n<p>If you did want to implement this yourself, then you could try reading the <a href=\"https://github.com/BurntSushi/ripgrep/blob/ef0e7af56a9b1afce7be46db87b3ff3709187ee2/grep-searcher/src/searcher/core.rs\" rel=\"nofollow noreferrer\">implementation inside <code>grep-searcher</code></a>. Effectively, it's all built on top of a <a href=\"https://github.com/BurntSushi/ripgrep/blob/ef0e7af56a9b1afce7be46db87b3ff3709187ee2/grep-searcher/src/line_buffer.rs#L1\" rel=\"nofollow noreferrer\">roll buffer</a>.</p>\n\n<p>If performance is less of a concern, then you could do a line-by-line loop, and keep enough buffer available to store the previous <code>N</code> lines (where <code>N</code> is the size of your \"before\" window). When you find a match, print the previous <code>N</code> lines from your buffer. At the same time, start a counter at <code>N</code> that decreases by <code>1</code> with each successive line. While the counter is above <code>0</code>, print the line, which will correspond to the \"after\" window. (This is not that dissimilar to what you'd do with a roll buffer.)</p>\n"}], "owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1565660676, "creation_date": 1565657247, "last_edit_date": 1565657540, "question_id": 57469848, "link": "https://stackoverflow.com/questions/57469848/how-to-output-lines-before-and-after-a-match-while-iterating-over-lines-in-a-fil", "title": "How to output lines before and after a match while iterating over lines in a file?", "body": "<p>I am trying to replicate the <code>-A</code> and <code>-B</code> argument functionality from GNU <code>grep</code> in Rust. This prints out lines of text before and after a matched line read from a file or stdin. Example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ printf '1\\n2\\n3\\nfoo\\n4\\n5\\n6\\n7\\nfoo\\n8\\n9' | grep -A 1 -B 1 foo\n3\nfoo\n4\n--\n--\n7\nfoo\n8\n</code></pre>\n\n<p>My desired output would return <code>n</code> lines preceding and/or following a pattern match. </p>\n\n<p>Using just stdin as an example, the simple case of just returning the matched line is easy to implement like this:</p>\n\n<pre><code>use std::io::{self, BufRead, BufReader, Result};\nfn main() {\n    for line in BufReader::new(io::stdin()).lines() {\n        match line {\n            Ok(l) =&gt; {\n                if l.contains(\"foo\"){\n                    println!(\"{}\", l);\n                }\n            }\n            Err(e) =&gt; println!(\"error parsing line: {:?}\", e),\n        }\n    }\n}\n</code></pre>\n\n<p>output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ printf '1\\n2\\n3\\nfoo\\n4\\n5\\n6\\n7\\nfoo\\n8\\n9' | cargo run\nfoo\nfoo\n</code></pre>\n\n<p>However, returning the surrounding lines in an iterator like this does not seem possible, since the previous lines are no longer accessible upon each iteration of the loop.</p>\n\n<p>I saw the <a href=\"https://doc.rust-lang.org/std/slice/struct.Windows.html\" rel=\"nofollow noreferrer\"><code>Windows</code></a> type, but it only works on a slice.</p>\n\n<p>This <a href=\"https://github.com/flo-l/rust-sliding_windows\" rel=\"nofollow noreferrer\"><code>sliding_windows</code></a> crate appears to be the kind of functionality I want, but I cannot figure out how to get it to work with an iterator over lines from a file. </p>\n\n<p>I also looked at <a href=\"https://docs.rs/itertools/0.8.0/itertools/\" rel=\"nofollow noreferrer\"><code>itertools</code></a> but did not see any kind of window iterator function that did this. </p>\n\n<p>Before I get too deep in rolling my own form of line-buffer object in order to cache <code>n</code> previously seen lines (maybe some kind of ring buffer?), I was hoping that there might already be some method available in Rust that could easily accomplish this. </p>\n"}, {"tags": ["rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1565690954, "creation_date": 1565690954, "answer_id": 57475577, "question_id": 57469527, "link": "https://stackoverflow.com/questions/57469527/how-can-i-support-an-unknown-or-other-value-for-a-serde-enum/57475577#57475577", "title": "How can I support an unknown or other value for a Serde enum?", "body": "<p>Simple case should be fine with this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::de::Visitor;\nuse serde::{Deserialize, Deserializer, Serialize};\nuse serde_json::from_str;\n\n#[derive(Deserialize, Serialize, Debug)]\n#[serde(rename_all = \"PascalCase\")]\npub struct PortMapping {\n    pub private_port: u16,\n    pub public_port: u16,\n    #[serde(rename = \"Type\")]\n    pub port_type: PortType,\n}\n\n#[derive(Clone, Eq, PartialEq, Serialize, Debug)]\npub enum PortType {\n    Sctp,\n    Tcp,\n    Udp,\n    Unknown(String),\n}\n\nconst PORT_TYPE: &amp;'static [(&amp;'static str, PortType)] = &amp;[\n    (\"sctp\", PortType::Sctp),\n    (\"tcp\", PortType::Tcp),\n    (\"udp\", PortType::Udp),\n];\n\nimpl From&lt;String&gt; for PortType {\n    fn from(variant: String) -&gt; Self {\n        PORT_TYPE\n            .iter()\n            .find(|(id, _)| *id == &amp;*variant)\n            .map(|(_, port_type)| port_type.clone())\n            .unwrap_or(PortType::Unknown(variant))\n    }\n}\n\nimpl&lt;'a&gt; From&lt;&amp;'a str&gt; for PortType {\n    fn from(variant: &amp;'a str) -&gt; Self {\n        PORT_TYPE\n            .iter()\n            .find(|(id, _)| *id == &amp;*variant)\n            .map(|(_, port_type)| port_type.clone())\n            .unwrap_or_else(|| PortType::Unknown(variant.to_string()))\n    }\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for PortType {\n    fn deserialize&lt;D&gt;(de: D) -&gt; Result&lt;PortType, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        struct PortTypeVisitor {}\n\n        impl&lt;'de&gt; Visitor&lt;'de&gt; for PortTypeVisitor {\n            type Value = PortType;\n\n            fn expecting(\n                &amp;self,\n                fmt: &amp;mut std::fmt::Formatter&lt;'_&gt;,\n            ) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; {\n                fmt.write_str(\"We expected a string\")\n            }\n\n            fn visit_str&lt;E&gt;(self, variant: &amp;str) -&gt; Result&lt;Self::Value, E&gt; {\n                Ok(variant.into())\n            }\n\n            fn visit_string&lt;E&gt;(self, variant: String) -&gt; Result&lt;Self::Value, E&gt; {\n                Ok(variant.into())\n            }\n        }\n\n        de.deserialize_string(PortTypeVisitor {})\n    }\n}\n\nfn main() {\n    let input = r#\"\n    {\n      \"PrivatePort\": 2222,\n      \"PublicPort\": 3333,\n      \"Type\": \"dccp\"\n    }\n    \"#;\n\n    let result: Result&lt;PortMapping, _&gt; = from_str(input);\n\n    println!(\"{:#?}\", result);\n}\n</code></pre>\n\n<p>I don't think there is a idiomatic way to do this, that could be included in the future.</p>\n"}, {"tags": [], "owner": {"reputation": 18146, "user_id": 646619, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/bd61a0f309ebc135d2661710c2faf379?s=128&d=identicon&r=PG", "display_name": "Colonel Thirty Two", "link": "https://stackoverflow.com/users/646619/colonel-thirty-two"}, "is_accepted": false, "score": 2, "last_activity_date": 1600569677, "creation_date": 1600569677, "answer_id": 63975047, "question_id": 57469527, "link": "https://stackoverflow.com/questions/57469527/how-can-i-support-an-unknown-or-other-value-for-a-serde-enum/63975047#63975047", "title": "How can I support an unknown or other value for a Serde enum?", "body": "<p>There's an issue for this, though it's been open for 3 years with no full resolution so far. <a href=\"https://github.com/serde-rs/serde/issues/912\" rel=\"nofollow noreferrer\">Serde #912</a>.</p>\n<p>What seems to be currently implemented (though undocumented) at the time of this post is <code>#[serde(other)]</code>. It can only be applied to unit enum fields, which limits its usefulness:</p>\n<pre><code>#[derive(Deserialize, PartialEq)]\n#[serde(tag = &quot;tag&quot;)]\nenum Target {\n   A(()),\n   B(()),\n   #[serde(other)]\n   Others\n}\n\nfn main() {\n    assert_eq!(Target::Others, from_str::&lt;Target&gt;(r#&quot;{ &quot;tag&quot;: &quot;blablah&quot; }&quot;#).unwrap());\n}\n</code></pre>\n<p>Other than that, the only other method as of this writing is writing your own <code>Deserialize</code> implementation.</p>\n"}, {"tags": [], "owner": {"reputation": 541, "user_id": 1204368, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4c4833d3a1ec1685839f37aea0caa28?s=128&d=identicon&r=PG", "display_name": "Rekby", "link": "https://stackoverflow.com/users/1204368/rekby"}, "is_accepted": false, "score": 2, "last_activity_date": 1607788315, "creation_date": 1607788315, "answer_id": 65266890, "question_id": 57469527, "link": "https://stackoverflow.com/questions/57469527/how-can-i-support-an-unknown-or-other-value-for-a-serde-enum/65266890#65266890", "title": "How can I support an unknown or other value for a Serde enum?", "body": "<p>I do it with serde(from=&quot;String&quot;)</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Eq, PartialEq, Deserialize, Serialize, Debug)]\n#[serde(rename_all = &quot;snake_case&quot;, from=&quot;String&quot;)]\npub enum PortType {\n    Sctp,\n    Tcp,\n    Udp,\n    Unknown(String),\n}\n\nimpl From&lt;String&gt; for PortType {\n    fn from(s: String)-&gt;Self {\n        use PortType::*;\n\n        return match s.as_str() {\n            &quot;sctp&quot; =&gt; Sctp,\n            &quot;tcp&quot; =&gt; Tcp,\n            &quot;udp&quot; =&gt; Udp,\n            _ =&gt; Unknown(s)\n        }\n    }\n}\n\n#[derive(Deserialize, Serialize, Debug)]\n#[serde(rename_all = &quot;PascalCase&quot;)]\npub struct PortMapping {\n    pub private_port: u16,\n    pub public_port: u16,\n    #[serde(rename = &quot;Type&quot;)]\n    pub port_type: PortType,\n}\n</code></pre>\n"}], "owner": {"reputation": 24653, "user_id": 254306, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/0745d192010b591257e771df7f439524?s=128&d=identicon&r=PG", "display_name": "Travis Gockel", "link": "https://stackoverflow.com/users/254306/travis-gockel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 631, "favorite_count": 1, "accepted_answer_id": 57475577, "answer_count": 3, "score": 5, "last_activity_date": 1607788315, "creation_date": 1565653636, "last_edit_date": 1565656498, "question_id": 57469527, "link": "https://stackoverflow.com/questions/57469527/how-can-i-support-an-unknown-or-other-value-for-a-serde-enum", "title": "How can I support an unknown or other value for a Serde enum?", "body": "<p>I have a JSON API that returns an object that looks like this:</p>\n\n<pre><code>{\n  \"PrivatePort\": 2222,\n  \"PublicPort\": 3333,\n  \"Type\": \"tcp\"\n}\n</code></pre>\n\n<p>To capture this, I have an enum and a struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Eq, PartialEq, Deserialize, Serialize, Debug)]\n#[serde(rename_all = \"snake_case\")]\npub enum PortType {\n    Sctp,\n    Tcp,\n    Udp,\n}\n\n#[derive(Deserialize, Serialize, Debug)]\n#[serde(rename_all = \"PascalCase\")]\npub struct PortMapping {\n    pub private_port: u16,\n    pub public_port: u16,\n    #[serde(rename = \"Type\")]\n    pub port_type: PortType,\n}\n</code></pre>\n\n<p>Right now, this API only supports the three protocols listed in <code>PortType</code>, but let's assume that support for <code>DCCP</code> is added in the future. I do not want clients of the API to start failing simply because of an unknown string in a configuration option they might not be looking at.</p>\n\n<p>To address this, I've added an <code>Unknown</code> variant with a <code>String</code> to represent the value:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Eq, PartialEq, Deserialize, Serialize, Debug)]\n#[serde(rename_all = \"snake_case\")]\npub enum PortType {\n    Sctp,\n    Tcp,\n    Udp,\n    Unknown(String),\n}\n</code></pre>\n\n<p>The goal here is to end up with the slightly-inconvenient <code>PortType::Unknown(\"dccp\")</code> value when an unknown value is passed in. Of course, this does not do what I would like out-of-box -- passing the unknown <code>\"dccp\"</code> value will result in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error(\"unknown variant `dccp`, expected one of `sctp`, `tcp`, `udp`, `unknown`\", line: 1, column: 55)\n</code></pre>\n\n<p>Is there a Serde configuration for doing what I want or should I resort to manually writing <code>Deserialize</code> and <code>Serialize</code> implementations for <code>PortType</code>?</p>\n"}, {"tags": ["arrays", "function", "rust", "return"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565643910, "post_id": 57468139, "comment_id": 101409578, "body": "<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=75e139c5598466ffc78e0f595d6dc15f\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>"}, {"owner": {"reputation": 566, "user_id": 9991191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/987a714fc1dc156870e5f2989f234c86?s=128&d=identicon&r=PG&f=1", "display_name": "Teiem", "link": "https://stackoverflow.com/users/9991191/teiem"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565644435, "post_id": 57468139, "comment_id": 101409720, "body": "@Shepmaster I dont understand how the other question applies to my question - I dont see any arrays being returned and they speak about features that will be implemented in the future - does that mean returning an array of unknown size is not possible right now?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565645421, "post_id": 57468139, "comment_id": 101410024, "body": "correct, it\u2019s not possible in stable Rust 1.36. You can\u2019t define an array that will have a fixed length without hard coding that length in the type. It doesn\u2019t matter that you want to accept or return it from a function if it cannot be represented in the type system."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1565645566, "post_id": 57468139, "comment_id": 101410075, "body": "Make sure you refresh yourself on the differences between an <i>array</i>, a <i>slice</i>, and a <i><code>Vec</code></i>. These are all different in Rust and can be used in similar but different manners."}], "owner": {"reputation": 566, "user_id": 9991191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/987a714fc1dc156870e5f2989f234c86?s=128&d=identicon&r=PG&f=1", "display_name": "Teiem", "link": "https://stackoverflow.com/users/9991191/teiem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 89, "favorite_count": 0, "closed_date": 1565643772, "answer_count": 0, "score": 0, "last_activity_date": 1565643752, "creation_date": 1565643367, "last_edit_date": 1565643752, "question_id": 57468139, "link": "https://stackoverflow.com/questions/57468139/how-do-i-return-an-arbitrary-array-with-the-same-size-as-an-argument-in-rust", "closed_reason": "Duplicate", "title": "How do I return an arbitrary array with the same size as an argument in Rust?", "body": "<p>I want to write a function that takes an array as an input and returns a new array with each value doubled. Since the size of the returned array depends on the array given as a parameter, its size cant be known at compile time.</p>\n\n<p>How can I return an array with an unknown size? The code could look similar to this:</p>\n\n<pre><code>fn double_array(arr: &amp;[i32]) -&gt; &amp;[i32] { /* ... */ }\n</code></pre>\n\n<p>Inside I would use an anonymous function in combination with <code>map</code> to do the actual work.</p>\n\n<p>I know that this functions is useless since I could just do the same in the place I need it, and that I should use generics instead of <code>i32</code> - but this is just for me to understand the language.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565656971, "post_id": 57468109, "comment_id": 101412353, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/a/46394300/155423\">How do I borrow a reference to what is inside an Option&lt;T&gt;?</a>. (replace <code>Option</code> with <code>Result</code>) If not, please <b><a href=\"https://stackoverflow.com/posts/57468109/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 377, "user_id": 964618, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/725108080fde47145f1a646312da2e95?s=128&d=identicon&r=PG", "display_name": "ansrivas", "link": "https://stackoverflow.com/users/964618/ansrivas"}, "edited": false, "score": 0, "creation_date": 1565722217, "post_id": 57482051, "comment_id": 101438750, "body": "Thank you for this information: <code>because and_then() is design to consume the value</code> Makes absolute sense now :)"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 0, "last_activity_date": 1565714466, "creation_date": 1565714466, "answer_id": 57482051, "question_id": 57468109, "link": "https://stackoverflow.com/questions/57468109/how-do-i-use-combinators-to-avoid-verbose-matching-without-getting-the-error-ca/57482051#57482051", "title": "How do I use combinators to avoid verbose matching without getting the error &quot;cannot return value referencing function parameter&quot;?", "body": "<p><code>as_ref()</code> doesn't solve the problem because <code>and_then()</code> is design to consume the value, not to borrow it. As you can see, <a href=\"https://docs.rs/git2/0.8.0/git2/struct.Remote.html\" rel=\"nofollow noreferrer\"><code>Remote</code></a> borrow <code>&amp;self</code> and <a href=\"https://docs.rs/git2/0.8.0/git2/struct.Remote.html#method.url\" rel=\"nofollow noreferrer\"><code>url()</code></a> too.</p>\n\n<p>I strongly recommend you to just use <code>?</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use git2::{Config, Repository}; // git2 = \"0.9.2\"\nuse std::path::Path;\n\nfn main() -&gt; Result&lt;(), git2::Error&gt; {\n    let absolute_path = \"Some existing git repository\";\n    let repo = Repository::open(&amp;Path::new(absolute_path))?;\n    let remote = repo.find_remote(\"origin\")?;\n    let url = remote.url().ok_or(git2::Error::from_str(\"failed\"))?;\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 377, "user_id": 964618, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/725108080fde47145f1a646312da2e95?s=128&d=identicon&r=PG", "display_name": "ansrivas", "link": "https://stackoverflow.com/users/964618/ansrivas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 182, "favorite_count": 0, "accepted_answer_id": 57482051, "answer_count": 1, "score": 0, "last_activity_date": 1565714466, "creation_date": 1565643219, "last_edit_date": 1565706028, "question_id": 57468109, "link": "https://stackoverflow.com/questions/57468109/how-do-i-use-combinators-to-avoid-verbose-matching-without-getting-the-error-ca", "title": "How do I use combinators to avoid verbose matching without getting the error &quot;cannot return value referencing function parameter&quot;?", "body": "<p>I have this small snippet which works but doesn't look very elegant.</p>\n\n<pre><code>use git2::{Config, Repository}; // git2 = \"0.9.2\"\nuse std::path::Path;\n\nfn main() {\n    let absolute_path = \"Some existing git repository\";\n    let repo_option = Repository::open(&amp;Path::new(absolute_path));\n    let repo = match repo_option {\n        Ok(expr) =&gt; expr,\n        Err(_) =&gt; {\n            return;\n        }\n    };\n\n    let remote = match repo.find_remote(\"origin\") {\n        Ok(remote) =&gt; remote,\n        Err(_) =&gt; {\n            return;\n        }\n    };\n\n    let url = match remote.url() {\n        Some(url) =&gt; url,\n        None =&gt; {\n            return;\n        }\n    };\n}\n</code></pre>\n\n<p>I tried doing this, but it throws errors about \"can not return value referencing function parameter repo\":</p>\n\n<pre><code>let repo_option = Repository::open(&amp;Path::new(absolute_path));\nlet url = repo_option\n    .and_then(|repo| repo.find_remote(\"origin\"))\n    .and_then(|remote| remote.url().ok_or(git2::Error::from_str(\"failed\")));\n</code></pre>\n\n<p>Complete error output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing function parameter `repo`\n  --&gt; src/main.rs:38:26\n   |\n38 |         .and_then(|repo| repo.find_remote(\"origin\"))\n   |                          ----^^^^^^^^^^^^^^^^^^^^^^\n   |                          |\n   |                          returns a value referencing data owned by the current function\n   |                          `repo` is borrowed here\n\nerror[E0515]: cannot return value referencing function parameter `remote`\n  --&gt; src/main.rs:39:28\n   |\n39 |         .and_then(|remote| remote.url().ok_or(git2::Error::from_str(\"failed\")));\n   |                            ------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |                            |\n   |                            returns a value referencing data owned by the current function\n   |                            `remote` is borrowed here\n\n</code></pre>\n\n<p>How can I overcome this error?</p>\n\n<p>The intention of asking this question is to learn effective usage of combinators. <a href=\"https://stackoverflow.com/q/51344951/155423\">How do you unwrap a Result on Ok or return from the function on Err?</a> is a related question that solves the issue, but I am confused with the lifetimes while using combinators.</p>\n\n<p>Followed the example from this question <a href=\"https://stackoverflow.com/q/51344951/155423\">How do you unwrap a Result on Ok or return from the function on Err?</a>  </p>\n\n<p>In this snippet, I am using <code>repo_option</code> as <code>as_ref</code>, so I that should get <code>Result&lt;&amp;S,&amp;T&gt;</code> but it fails.</p>\n\n<pre><code>    let url = repo_option\n        .as_ref()\n        .and_then(|repo| repo.find_remote(\"origin\"))\n        .and_then(|remote| remote.url().as_ref().ok_or(git2::Error::from_str(\"failed\")))\n        .unwrap();\n</code></pre>\n\n<p>errors:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:39:26\n   |\n39 |         .and_then(|repo| repo.find_remote(\"origin\"))\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected reference, found struct `git2::error::Error`\n   |\n   = note: expected type `std::result::Result&lt;_, &amp;git2::error::Error&gt;`\n              found type `std::result::Result&lt;git2::remote::Remote&lt;'_&gt;, git2::error::Error&gt;`\n</code></pre>\n"}, {"tags": ["rust", "mutex", "raii", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1565641307, "last_edit_date": 1565641307, "creation_date": 1565640519, "answer_id": 57467655, "question_id": 57467555, "link": "https://stackoverflow.com/questions/57467555/will-the-non-lexical-lifetime-borrow-checker-release-locks-prematurely/57467655#57467655", "title": "Will the non-lexical lifetime borrow checker release locks prematurely?", "body": "<blockquote>\n  <p>Does Rust treat locks specially, so that their lifetimes are guaranteed to extend to the end of their scope?</p>\n</blockquote>\n\n<p>No. This is the default for <em>every</em> type, and has nothing to do with the borrow checker. </p>\n\n<blockquote>\n  <p>Must we use that variable explicitly to avoid premature dropping of the lock</p>\n</blockquote>\n\n<p>No.</p>\n\n<p>All you need to do is ensure that the lock guard is bound to a variable. Your example does this (<code>let _lock = ...</code>), so the lock will be dropped at the end of scope. If you had used the <code>_</code> pattern instead, the lock would have been dropped immediately:</p>\n\n<p>You can prove this for yourself by testing if the lock has indeed been dropped:</p>\n\n<pre><code>pub fn lock_and_execute() {\n    let shared = Mutex::new(Something);\n\n    println!(\"A\");\n    let _locked = shared.lock().unwrap();\n\n    // If `_locked` was dropped, then we can re-lock it:\n    println!(\"B\");\n    shared.lock().unwrap();\n\n    println!(\"C\");\n}\n\nfn main() {\n    lock_and_execute();\n}\n</code></pre>\n\n<p>This code will deadlock, as the same thread attempts to acquire the lock twice.</p>\n\n<p>You could also attempt to use a method that requires <code>&amp;mut self</code> to see that the immutable borrow is still held by the guard, which has not been dropped:</p>\n\n<pre><code>pub fn lock_and_execute() {\n    let mut shared = Mutex::new(Something);\n\n    println!(\"A\");\n    let _locked = shared.lock().unwrap();\n\n    // If `_locked` was dropped, then we can re-lock it:\n    println!(\"B\");\n    shared.get_mut().unwrap();\n\n    println!(\"C\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `shared` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:13:5\n   |\n9  |     let _locked = shared.lock().unwrap();\n   |                   ------ immutable borrow occurs here\n...\n13 |     shared.get_mut().unwrap();\n   |     ^^^^^^^^^^^^^^^^ mutable borrow occurs here\n...\n16 | }\n   | - immutable borrow might be used here, when `_locked` is dropped and runs the `Drop` code for type `std::sync::MutexGuard`\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51335679/155423\">Where is a MutexGuard if I never assign it to a variable?</a></li>\n<li><a href=\"https://stackoverflow.com/q/57256035/155423\">How to lock a Rust struct the way a struct is locked in Go?</a></li>\n<li><a href=\"https://stackoverflow.com/q/51237017/155423\">Why does _ destroy at the end of statement?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 2792, "user_id": 8626243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LYirU.jpg?s=128&g=1", "display_name": "Zhiyao", "link": "https://stackoverflow.com/users/8626243/zhiyao"}, "edited": false, "score": 0, "creation_date": 1565718808, "post_id": 57473764, "comment_id": 101437280, "body": "Will variable shadowing end a variable&#39;s lifetime immediately? (i.e. bind the same name to another object using <code>let</code>)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2792, "user_id": 8626243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LYirU.jpg?s=128&g=1", "display_name": "Zhiyao", "link": "https://stackoverflow.com/users/8626243/zhiyao"}, "edited": false, "score": 0, "creation_date": 1565764408, "post_id": 57473764, "comment_id": 101448859, "body": "@ZhiyaoMa: Shadowing no. Assigning yes."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1565684369, "creation_date": 1565684369, "answer_id": 57473764, "question_id": 57467555, "link": "https://stackoverflow.com/questions/57467555/will-the-non-lexical-lifetime-borrow-checker-release-locks-prematurely/57473764#57473764", "title": "Will the non-lexical lifetime borrow checker release locks prematurely?", "body": "<p>There is a misunderstanding here: NLL (non-lexical lifetimes) affects the <em>borrow-checks</em>, not the actual <em>lifetime</em> of the objects.</p>\n\n<p>Rust uses RAII<sup>1</sup> extensively, and thus the <code>Drop</code> implementation of a number of objects, such as locks, has side-effects which <em>have</em> to occur at a well-determined and predictable point in the flow of execution.</p>\n\n<p>NLL did NOT change the lifetime of such objects, and therefore their destructor is executed at exactly the same point that it was before: at the end of their lexical scope, in reverse order of creation.</p>\n\n<p>NLL did change the <em>understanding of the compiler</em> of the use of lifetimes for the purpose of borrow-checking. This does not, actually, cause any code change; this is purely analysis. This analysis was made more clever, to better recognize the actual scope in which a reference is used:</p>\n\n<ul>\n<li>Prior to NLL, a reference was considered \"in use\" from the moment it was created to the moment it was dropped, generally its lexical scope (hence the name).</li>\n<li>NLL, instead:\n\n<ul>\n<li>Tries to defer the start of the \"in use\" span, if possible.</li>\n<li>Ends the \"in use\" span with the last use of the reference.</li>\n</ul></li>\n</ul>\n\n<p>In the case of a <code>Ref&lt;'a&gt;</code> (from <code>RefCell</code>), the <code>Ref&lt;'a&gt;</code> will be dropped at the end of the lexical scope, at which point it will <em>use</em> the reference to <code>RefCell</code> to decrement the counter.</p>\n\n<p>NLL does not peel away layers of abstractions, so <em>must</em> consider that any object containing a reference (such as <code>Ref&lt;'a&gt;</code>) <em>may</em> access said reference in its <code>Drop</code> implementation. As a result, any object that contains a reference, such as a lock, will force NLL to consider that the \"in use\" span of the reference extends until they are dropped.</p>\n\n<p><sup>1</sup> <em>Resource Acquisition Is Initialization, whose original meaning is that once a variable constructor has been executed it has acquired the resources it needed and is not in a half-baked state, and which is generally used to mean that the destruction of said variable will release any resources it owned.</em></p>\n"}], "owner": {"reputation": 2792, "user_id": 8626243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LYirU.jpg?s=128&g=1", "display_name": "Zhiyao", "link": "https://stackoverflow.com/users/8626243/zhiyao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 403, "favorite_count": 0, "accepted_answer_id": 57473764, "answer_count": 2, "score": 6, "last_activity_date": 1565684369, "creation_date": 1565639980, "last_edit_date": 1565640873, "question_id": 57467555, "link": "https://stackoverflow.com/questions/57467555/will-the-non-lexical-lifetime-borrow-checker-release-locks-prematurely", "title": "Will the non-lexical lifetime borrow checker release locks prematurely?", "body": "<p>I've read <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">What are non-lexical lifetimes?</a>. With the non-lexical borrow checker, the following code compiles:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut scores = vec![1, 2, 3];\n    let score = &amp;scores[0]; // borrows `scores`, but never used\n                            // its lifetime can end here\n\n    scores.push(4);         // borrows `scores` mutably, and succeeds\n}\n</code></pre>\n\n<p>It seems reasonable in the case above, but when it comes to a mutex lock, we don't want it to be released prematurely.</p>\n\n<p>In the following code, I would like to lock a shared structure first and then execute a closure, mainly to avoid deadlock. However, I'm not sure if the lock will be released prematurely.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use lazy_static::lazy_static; // 1.3.0\nuse std::sync::Mutex;\n\nstruct Something;\n\nlazy_static! {\n    static ref SHARED: Mutex&lt;Something&gt; = Mutex::new(Something);\n}\n\npub fn lock_and_execute(f: Box&lt;Fn()&gt;) {\n    let _locked = SHARED.lock(); // `_locked` is never used.\n                                 // does its lifetime end here?\n    f();\n}\n</code></pre>\n\n<p>Does Rust treat locks specially, so that their lifetimes are guaranteed to extend to the end of their scope? Must we use that variable explicitly to avoid premature dropping of the lock, like in the following code?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn lock_and_execute(f: Box&lt;Fn()&gt;) {\n    let locked = SHARED.lock(); // - lifetime begins\n    f();                        // |\n    drop(locked);               // - lifetime ends\n}\n</code></pre>\n"}, {"tags": ["async-await", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565635189, "post_id": 57466422, "comment_id": 101406388, "body": "<i>Why</i> are you using the lower-level interface of <code>poll_fn</code>? Note that you aren&#39;t using the <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.17/futures/task/struct.Context.html\" rel=\"nofollow noreferrer\"><code>Context</code></a>, which is how you register interest in being woken up when something changes."}], "answers": [{"comments": [{"owner": {"reputation": 2418, "user_id": 1232832, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2c492983af89b49d44250c79579a2641?s=128&d=identicon&r=PG", "display_name": "Shou Ya", "link": "https://stackoverflow.com/users/1232832/shou-ya"}, "edited": false, "score": 0, "creation_date": 1565637162, "post_id": 57466862, "comment_id": 101407182, "body": "Thanks a lot! That&#39;s exactly what I wanted!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1565637376, "last_edit_date": 1565637376, "creation_date": 1565636633, "answer_id": 57466862, "question_id": 57466422, "link": "https://stackoverflow.com/questions/57466422/how-do-i-write-an-asynchronous-function-which-polls-a-resource-and-returns-when/57466862#57466862", "title": "How do I write an asynchronous function which polls a resource and returns when it&#39;s ready or otherwise retries in a few seconds?", "body": "<p>Since you are using <code>async</code> / <code>await</code> keywords, write a loop that exits when the resource is available, or waits when it's not. Waiting can be accomplished with Tokio's <a href=\"https://docs.rs/tokio/0.2.0-alpha.1/tokio/timer/struct.Delay.html\" rel=\"nofollow noreferrer\"><code>Delay</code></a>:</p>\n\n<pre><code>#![feature(async_await)]\n\nuse futures; // 0.3.0-alpha.17\nuse rand; // 0.7.0\nuse std::time::Duration;\nuse tokio::timer; // 0.2.0-alpha.1\n\nenum ResourceStatus {\n    Ready,\n    NotReady,\n}\nuse ResourceStatus::*;\n\nasync fn async_get_resource() {\n    const SLEEP_TIME: Duration = Duration::from_secs(1);\n\n    loop {\n        match poll_web_resource() {\n            Ready =&gt; return,\n            NotReady =&gt; {\n                // Don't actually use println in production async code.\n                println!(\"Waiting...\");\n                timer::Delay::new(tokio::clock::now() + SLEEP_TIME).await;\n            }\n        }\n    }\n}\n\nfn poll_web_resource() -&gt; ResourceStatus {\n    if rand::random::&lt;f32&gt;() &lt; 0.1 {\n        Ready\n    } else {\n        NotReady\n    }\n}\n\nfn main() {\n    let runtime = tokio::runtime::Runtime::new().expect(\"Unable to create the runtime\");\n    let _resource = runtime.block_on(async_get_resource());\n}\n</code></pre>\n"}], "owner": {"reputation": 2418, "user_id": 1232832, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2c492983af89b49d44250c79579a2641?s=128&d=identicon&r=PG", "display_name": "Shou Ya", "link": "https://stackoverflow.com/users/1232832/shou-ya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 289, "favorite_count": 0, "accepted_answer_id": 57466862, "answer_count": 1, "score": 1, "last_activity_date": 1565637376, "creation_date": 1565634624, "last_edit_date": 1565636947, "question_id": 57466422, "link": "https://stackoverflow.com/questions/57466422/how-do-i-write-an-asynchronous-function-which-polls-a-resource-and-returns-when", "title": "How do I write an asynchronous function which polls a resource and returns when it&#39;s ready or otherwise retries in a few seconds?", "body": "<p>I want to write an asynchronous function which repeatedly polls a resource from the web and returns when it's ready. I am implementing it using <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.17/futures/future/fn.poll_fn.html\" rel=\"nofollow noreferrer\"><code>future::poll_fn</code></a>:</p>\n\n<pre><code>#![feature(async_await)]\n\n/*\n[dependencies]\nrand = \"0.7.0\"\nfutures-preview = \"=0.3.0-alpha.18\"\n*/\n\nuse futures::future;\nuse rand;\nuse std::task::Poll;\n\nenum ResourceStatus {\n    Ready,\n    NotReady,\n}\nuse ResourceStatus::*;\n\n// Mocking the function requesting a web resource\nfn poll_web_resource() -&gt; ResourceStatus {\n    if rand::random::&lt;f32&gt;() &lt; 0.1 {\n        Ready\n    } else {\n        NotReady\n    }\n}\n\nasync fn async_get_resource() {\n    // do other works\n    future::poll_fn(|ctx| match poll_web_resource() {\n        Ready =&gt; Poll::Ready(()),\n        NotReady =&gt; Poll::Pending,\n    })\n    .await\n}\n\nfn main() {\n    futures::executor::block_on(async_get_resource());\n}\n</code></pre>\n\n<p>It doesn't work because the task gets parked forever when <code>poll_web_resource()</code> returns <code>NotReady</code>. One way to solve it is to wake the task every time it returns <code>Pending</code>:</p>\n\n<pre><code>future::poll_fn(|ctx| match poll_web_resource() {\n    Ready =&gt; Poll::Ready(()),\n    NotReady =&gt; {\n        ctx.waker().wake_by_ref();\n        Poll::Pending\n    }\n})\n.await\n</code></pre>\n\n<p>This creates loads of unnecessary requests. For my use case, the ideal situation would be request the resource every few seconds when it's not ready. Here's my current workaround:</p>\n\n<pre><code>future::poll_fn(|ctx| match poll_web_resource() {\n    Ready =&gt; Poll::Ready(()),\n    NotReady =&gt; {\n        let waker = ctx.waker().clone();\n        thread::spawn(move || {\n            thread::sleep(Duration.from_millis(5000));\n            waker.wake();\n        });\n        Poll::Pending\n    }\n})\n.await\n</code></pre>\n\n<p>This works, but it uses an extra thread just for tracking the timeout. I think there should be a better way to do it. How can I achieve the same goal more idiomatically?</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565633038, "post_id": 57465978, "comment_id": 101405453, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/a/42034863/155423\">How can I use Serde with a JSON array with different objects for successes and errors?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57465978/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565639532, "post_id": 57465978, "comment_id": 101408079, "body": "Why does your <code>Message</code> not refer to <code>PhotosMessage</code> or <code>ContentMessage</code> at all?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565639595, "post_id": 57465978, "comment_id": 101408104, "body": "The <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0e616ca1e00cbd7571e6edcc300fd030\" rel=\"nofollow noreferrer\">duplicate applied to your question</a>. TL;DR: <code>#[derive(Deserialize, Debug)] #[serde(untagged)] enum Message { ContentMessage(ContentMessage), PhotosMessage(PhotosMessage) }</code>"}], "owner": {"reputation": 1, "user_id": 11133770, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-067WmVI8ABQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdWhDmQ_yhPw2d7jOwCdu-tE0J3Cg/mo/photo.jpg?sz=128", "display_name": "luremus", "link": "https://stackoverflow.com/users/11133770/luremus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 26, "favorite_count": 0, "closed_date": 1565639571, "answer_count": 0, "score": 0, "last_activity_date": 1565638985, "creation_date": 1565632521, "last_edit_date": 1565638985, "question_id": 57465978, "link": "https://stackoverflow.com/questions/57465978/how-to-deserialize-with-different-possible-field-names", "closed_reason": "Duplicate", "title": "How to deserialize with different possible field names?", "body": "<p>I'm trying to deserialize a big JSON file with a list of messages. The content of the messages are almost the same, but some of the messages have the field \"content\" while others have the field \"photos\" which is a list of different photos.</p>\n\n<p>How can I deserialize the file when I don't know which messages have which fields? For example I could like all the messages that contains the field \"content\" to become the type <code>ContentMessage</code> and all the messages that contains \"photos\" to become <code>PhotosMessage</code>.</p>\n\n<p>messages.json:</p>\n\n<pre><code>{\n    \"messages\": [\n        {\n            \"sender_name\": \"Ellie\",\n            \"timestamp_ms\": 1565429540063,\n            \"content\": \"Hi\"\n        },\n        {\n            \"sender_name\": \"Ola\",\n            \"timestamp_ms\": 1565429535795,\n            \"photos\": [\n            {\n                \"uri\": \"messages/inbox/photo1.jpg\",\n                \"creation_timestamp\": 1565387272\n            },\n            {\n                \"uri\": \"messages/inbox/photo2.jpg\",\n                \"creation_timestamp\": 1565387273\n            },\n            {\n                \"uri\": \"messages/inbox/photo3.jpg\",\n                \"creation_timestamp\": 1565387273\n            }\n            ]\n        }\n    ]\n}\n</code></pre>\n\n<p>main.rs:</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde;\nextern crate serde_json;\n\nuse std::error::Error;\nuse std::fs::File;\nuse std::io::Read;\n\n\n#[derive(Deserialize, Debug)]\nstruct MessageFile {\n    messages: Vec&lt;Message&gt;,\n}\n\n#[derive(Deserialize, Debug)]\nenum Message {\n    ContentMessage,\n    PhotosMessage\n}\n\n#[derive(Deserialize, Debug)]\nstruct ContentMessage {\n    sender_name: String,\n    timestamp_ms: u64,\n    content: String\n}\n\n#[derive(Deserialize, Debug)]\nstruct PhotosMessage {\n    sender_name: String,\n    timestamp_ms: u64,\n    photos: Vec&lt;Photo&gt;\n}\n\n#[derive(Deserialize, Debug)]\nstruct Photo {\n    uri: String,\n    creation_timestamp: u64,\n}\n\nfn main() {\n    try_main().unwrap();\n}\n\nfn try_main() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    // Read the input file to string.\n    let mut file = File::open(\"messages.json\")?;\n    let mut contents = String::new();\n    file.read_to_string(&amp;mut contents)?;\n\n    // Deserialize and print Rust data structure.\n    let data: MessageFile = serde_json::from_str(&amp;contents)?;\n    println!(\"{:#?}\", data);\n\n    Ok(())\n}\n</code></pre>\n\n<p>With this code I get an error \"unknown variant <code>sender_name</code>, expected 'ContentMessage' or 'PhotosMessage'\". I expected the whole message to match either of those categories, not only the <code>sender_name</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1565631986, "post_id": 57465744, "comment_id": 101405059, "body": "Hi there! I am pretty sure the linked Q&amp;A answers your question. If that&#39;s not the case, please let us know and explain why it is not the case. And hint for the next time asking on SO: make sure you have a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> (this is neither minimal nor complete) and to include the full error message. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565632676, "post_id": 57465744, "comment_id": 101405324, "body": "See also: <a href=\"https://stackoverflow.com/q/28280035/155423\">Accessing the last element of a Vec or a slice</a>; <a href=\"https://stackoverflow.com/q/37579949/155423\">Get the last element of a vector and push it to the same vector</a>; <a href=\"https://stackoverflow.com/q/31907887/155423\">How to clone last element from vector?</a>."}], "owner": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 127, "favorite_count": 0, "closed_date": 1565631921, "answer_count": 0, "score": 0, "last_activity_date": 1565632708, "creation_date": 1565631377, "question_id": 57465744, "link": "https://stackoverflow.com/questions/57465744/making-a-mutable-reference-to-the-last-value-of-a-vector", "closed_reason": "Duplicate", "title": "Making a mutable reference to the last value of a vector", "body": "<p>I am trying to obtain a reference to the last value of a vector to simplify referencing it in the following code.</p>\n\n<pre><code>fn calculate_errors(&amp;mut self, targets: &amp;[f64]) -&gt; () {r\n    let ref mut last_layer = self.vector[self.vector.len() - 1];\n    for i in 0..last_layer.len() {\n        last_layer[i].error = targets[i] - last_layer[i].value;\n    }\n}\n</code></pre>\n\n<p>In my attempt here I get the error:</p>\n\n<blockquote>\n  <p>error[E0502]: cannot borrow <code>self.vector</code> as immutable because\n  it is also borrowed as mutable</p>\n</blockquote>\n\n<p>What would be the proper way to do this? How could I fix this?</p>\n"}, {"tags": ["rust", "webassembly"], "owner": {"reputation": 3467, "user_id": 3393308, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a3f30f7c191e8d556c70c951fe3d9af?s=128&d=identicon&r=PG", "display_name": "yorodm", "link": "https://stackoverflow.com/users/3393308/yorodm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1565624748, "creation_date": 1565623618, "last_edit_date": 1565624748, "question_id": 57464058, "link": "https://stackoverflow.com/questions/57464058/compiling-curl-sys-on-x86-64-pc-windows-gnu-fails-with-undefined-reference-to", "title": "Compiling curl-sys on x86_64-pc-windows-gnu fails with undefined reference to &#39;__imp___acrt_iob_func&#39;", "body": "<p>I'm trying to install <code>wasm-pack</code> on Windows using the <code>x86_64-pc-windows-gnu</code> target (can't use <code>msvc</code>) and the build fails because of a linker error (<code>undefined reference to '__imp___acrt_iob_func'</code>).</p>\n\n<p>After a little research I found <a href=\"https://github.com/alexcrichton/curl-rust/issues/239\" rel=\"nofollow noreferrer\">this issue</a>, so I changed my <code>.cargo/config</code>.</p>\n\n<pre><code>[target.x86_64-pc-windows-gnu]\nlinker = \"c:/msys64/mingw64/bin/gcc.exe\"\nar = \"c:/msys64/mingw64/bin/ar.exe\"\n\n[target.i686-pc-windows-gnu]\nlinker = \"c:/msys64/mingw32/bin/gcc.exe\"\nar = \"c:/msys64/mingw32/bin/ar.exe\"\n</code></pre>\n\n<p>But the problem persists. Is there anything else to be done here?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1565616411, "post_id": 57461796, "comment_id": 101397556, "body": "The compiler warning that <code>a</code> is unused should be a clue that you&#39;re not doing something right. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=701fc9dae1aca1ad89db47684d2b0804\" rel=\"nofollow noreferrer\">If you remove <code>a</code> entirely, you get a more descriptive message that should point you in the right direction.</a>"}, {"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 0, "creation_date": 1565619604, "post_id": 57461796, "comment_id": 101399342, "body": "Not addressing the question itself directly, but looking at the code, why not just do <code>let v: Vec&lt;_&gt; = Vec::from_iter(0..5);</code>? (which needs <code>use std::iter::FromIterator;</code>)"}, {"owner": {"reputation": 1, "user_id": 11447776, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-zVbPqsQCG8A/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfXEyPesKHTE0XsvBKlp3VhLLqpfw/mo/photo.jpg?sz=128", "display_name": "\u9ec4\u6e2d\u9633", "link": "https://stackoverflow.com/users/11447776/%e9%bb%84%e6%b8%ad%e9%98%b3"}, "reply_to_user": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 0, "creation_date": 1565663808, "post_id": 57461796, "comment_id": 101413431, "body": "@SirDarius Thanks. This is just a piece of code to demonstrate the problem. We usually don&#39;t use it that way."}, {"owner": {"reputation": 1, "user_id": 11447776, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-zVbPqsQCG8A/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfXEyPesKHTE0XsvBKlp3VhLLqpfw/mo/photo.jpg?sz=128", "display_name": "\u9ec4\u6e2d\u9633", "link": "https://stackoverflow.com/users/11447776/%e9%bb%84%e6%b8%ad%e9%98%b3"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565664483, "post_id": 57461796, "comment_id": 101413561, "body": "@trentcl I&#39;ve changed <code>a</code> to <code>_</code> to avoid this compiler warning."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 11447776, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-zVbPqsQCG8A/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfXEyPesKHTE0XsvBKlp3VhLLqpfw/mo/photo.jpg?sz=128", "display_name": "\u9ec4\u6e2d\u9633", "link": "https://stackoverflow.com/users/11447776/%e9%bb%84%e6%b8%ad%e9%98%b3"}, "edited": false, "score": 0, "creation_date": 1565618253, "post_id": 57462179, "comment_id": 101398577, "body": "Thanks for your answer. My problem was solved. Maybe I&#39;d better to read <a href=\"https://doc.rust-lang.org/book/ch13-02-iterators.html\" rel=\"nofollow noreferrer\">the book</a> again :)"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1565620075, "post_id": 57462179, "comment_id": 101399613, "body": "&quot;One of the ways to force the new iterator to perform its job is the <code>Iterator::collect</code>&quot; which is probably the worst way to do that if you don&#39;t care about the result."}], "tags": [], "owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "is_accepted": false, "score": 0, "last_activity_date": 1565618163, "last_edit_date": 1565618163, "creation_date": 1565616631, "answer_id": 57462179, "question_id": 57461796, "link": "https://stackoverflow.com/questions/57461796/why-does-the-closure-executed-in-map-not-change-the-captured-value/57462179#57462179", "title": "Why does the closure executed in .map not change the captured value?", "body": "<p>The <code>map</code> method does not iterate through elements immediately. Instead, it creates a lazy iterator which you can use later. One of the ways to force the new iterator to perform its job is the <code>Iterator::collect</code> method. In your case, it will produce a new collection filled with empty values (<code>()</code> because it's the type of <code>v.push(i)</code>):</p>\n\n<pre><code>let mut v = Vec::new();\nlet v2: Vec&lt;()&gt; = (0..5).map(|i| v.push(i)).collect();\nprintln!(\"{:?}\", v); //output: [0, 1, 2, 3, 4]\n</code></pre>\n\n<p>This does excess work by creating the vector <code>v2</code>. Try to avoid such inefficient operations.</p>\n"}], "owner": {"reputation": 1, "user_id": 11447776, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-zVbPqsQCG8A/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfXEyPesKHTE0XsvBKlp3VhLLqpfw/mo/photo.jpg?sz=128", "display_name": "\u9ec4\u6e2d\u9633", "link": "https://stackoverflow.com/users/11447776/%e9%bb%84%e6%b8%ad%e9%98%b3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "closed_date": 1565617791, "answer_count": 1, "score": 0, "last_activity_date": 1565664156, "creation_date": 1565615158, "last_edit_date": 1565664156, "question_id": 57461796, "link": "https://stackoverflow.com/questions/57461796/why-does-the-closure-executed-in-map-not-change-the-captured-value", "closed_reason": "Duplicate", "title": "Why does the closure executed in .map not change the captured value?", "body": "<p>Here is my code:</p>\n\n<pre><code>let mut v = Vec::new();\nlet _ = (0..5).map(|i| v.push(i));\n\nprintln!(\"{:?}\", v);   //output: []\n</code></pre>\n\n<p>The captured value is <code>v</code>. I expect the code above to print <code>[0, 1, 2, 3, 4]</code>, but it prints <code>[]</code>.</p>\n\n<p>Why is that?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1565605094, "post_id": 57459302, "comment_id": 101392068, "body": "Are you sure it&#39;s the borrow checker who got confused? ;)"}, {"owner": {"reputation": 136, "user_id": 4913983, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh5.googleusercontent.com/-bbuM_6B5FEY/AAAAAAAAAAI/AAAAAAAAANU/Cp_VRYRjL7M/photo.jpg?sz=128", "display_name": "arlyon", "link": "https://stackoverflow.com/users/4913983/arlyon"}, "reply_to_user": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1565605563, "post_id": 57459302, "comment_id": 101392271, "body": "I haven&#39;t come across a language in which method extraction doesn&#39;t &quot;just work&quot; but being new to rust, no, I&#39;m not sure."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1565606665, "post_id": 57459302, "comment_id": 101392773, "body": "<code>mark_multiples</code> mutably borrows the entirety of <code>self</code>, but <code>prime</code> is also immutably borrowed <i>from</i> self. What would happen to <code>prime</code> if the implementation of <code>mark_multiples</code> decided to replace <code>self</code> and drop the original version? Now, <i>you</i> know that your function doesn&#39;t do this, but the compiler doesn&#39;t!"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1565607253, "post_id": 57459302, "comment_id": 101393023, "body": "Rust references work like read-write locks. You either exclusively acquire (<code>&amp;mut</code>) it mutably, or you acquire a shared lock (<code>&amp;</code>) immutably. Exclusive and shared can&#39;t happen simultaneously."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 3, "creation_date": 1565609059, "post_id": 57459302, "comment_id": 101393825, "body": "@arlyon, method extraction indeed does <i>not</i> \u201cjust work\u201d in Rust, because the borrow checker works separately in each function, only considering the signature for their interfaces. So you can extract functions, but if you pass them references to more than they actually touch, they may start to conflict where the mixed code didn&#39;t. This is very intentional, because it allows you to refactor the function bodies with confidence that you are not creating a conflict with code in some caller."}], "answers": [{"tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 1, "last_activity_date": 1565685638, "last_edit_date": 1565685638, "creation_date": 1565607164, "answer_id": 57459848, "question_id": 57459302, "link": "https://stackoverflow.com/questions/57459302/modify-a-struct-while-iterating-over-an-iterable-in-the-struct/57459848#57459848", "title": "Modify a struct while iterating over an Iterable in the struct", "body": "<p>Why?  Because <code>self.primes</code> borrowed immutably (because of <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.iter\" rel=\"nofollow noreferrer\"><code>Vec::iter</code></a>, i.e. the newly created iterator, <a href=\"https://doc.rust-lang.org/std/slice/struct.Iter.html\" rel=\"nofollow noreferrer\"><code>Iter</code></a> is referencing the vector which is owned by <code>self</code>) and while this is happening <code>mark_multiples</code> tries to borrow <code>self</code> as mutable.  The borrowing rules are simple and straightforward:</p>\n\n<ol>\n<li>You could have arbitrary number of immutable borrows of an object at a given time, or</li>\n<li>You could have a single mutable borrow of an object at a given time.</li>\n</ol>\n\n<p>Thus, you cannot have a mutable borrow of <code>self</code>, while you still hold an immutable borrow of it, and that's exactly the reason why the compiler refuses to compile your code.</p>\n\n<p>Why is this safety feature considered any good here?  If what you want would be allowed for you that would mean, you could potentially change the values of <code>self.primes</code> in the method <code>self.mark_multiples</code> while you iterate over it in <code>self.compute_chunk</code>.  You could easily run into referencing invalid memory locations!</p>\n"}], "owner": {"reputation": 136, "user_id": 4913983, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh5.googleusercontent.com/-bbuM_6B5FEY/AAAAAAAAAAI/AAAAAAAAANU/Cp_VRYRjL7M/photo.jpg?sz=128", "display_name": "arlyon", "link": "https://stackoverflow.com/users/4913983/arlyon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "closed_date": 1565619109, "accepted_answer_id": 57459848, "answer_count": 1, "score": 0, "last_activity_date": 1565685638, "creation_date": 1565604790, "last_edit_date": 1565619137, "question_id": 57459302, "link": "https://stackoverflow.com/questions/57459302/modify-a-struct-while-iterating-over-an-iterable-in-the-struct", "closed_reason": "Duplicate", "title": "Modify a struct while iterating over an Iterable in the struct", "body": "<p>I am implementing a rolling prime sieve in Rust. The struct looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Sieve {\n    window_index: u32,\n    window_size: u32,\n    board: BitVec,\n    primes: Vec&lt;u32&gt;,\n}\n</code></pre>\n\n<p>There is a moving 'window' in which prime multiples are marked on a board of size <code>window_size</code>, and any numbers encountered that are unmarked are known to be prime.</p>\n\n<p>When the window is moved, the new board needs to be re-initialized with all the multiples of the previously discovered primes marked.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let square_optimization = (self.window_index + self.window_size).integer_sqrt();\nfor &amp;prime in self.primes.iter().filter(|&amp;&amp;p| p &lt; square_optimization) {\n    let remainder = self.window_index % prime;\n    let start_prime = if remainder &gt; 0 { self.window_index + prime - remainder } else { remainder };\n    if start_prime &gt; self.window_index + self.window_size { return; }\n\n    for i in (start_prime % self.window_size..self.window_size).step_by(prime as usize) {\n        self.board.set(i as usize, true)\n    }\n}\n</code></pre>\n\n<p>The exact logic doesn't matter, however you can see that there is an immutable borrow of <code>self.primes</code> and a mutable borrow of <code>self.board</code>. The compiler is happy. The problem appears when extracting the logic into a function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn mark_multiples(&amp;mut self, prime: u32) {\n    let remainder = self.window_index % prime;\n    let start_prime = if remainder &gt; 0 { self.window_index + prime - remainder } else { remainder };\n    if start_prime &gt; self.window_index + self.window_size { return; }\n\n    for i in (start_prime % self.window_size..self.window_size).step_by(prime as usize) {\n        self.board.set(i as usize, true)\n    }\n}\n\nfn compute_chunk(&amp;mut self) {\n    let square_optimization = (self.window_index + self.window_size).integer_sqrt();\n    for &amp;prime in self.primes.iter().filter(|&amp;&amp;p| p &lt; square_optimization) {\n        self.mark_multiples(prime)\n    }\n\n    // do work\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*self` as mutable because it is also borrowed as immutable\n  --&gt; src/lib.rs:54:13\n   |\n53 |         for &amp;prime in self.primes.iter().filter(|&amp;&amp;p| p &lt; square_optimization) {\n   |                       --------------------------------------------------------\n   |                       |\n   |                       immutable borrow occurs here\n   |                       immutable borrow later used here\n54 |             self.mark_multiples(prime)\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n</code></pre>\n\n<p>Why does the borrow checker get confused here? Is <code>self</code> not mutably borrowed in the first case?</p>\n"}, {"tags": ["arrays", "performance", "rust", "llvm-codegen"], "comments": [{"owner": {"reputation": 7374, "user_id": 593425, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ad54f71e8e63bf711680cf8f5f1e53c1?s=128&d=identicon&r=PG", "display_name": "Guy Korland", "link": "https://stackoverflow.com/users/593425/guy-korland"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1565607290, "post_id": 57458460, "comment_id": 101393040, "body": "<a href=\"https://github.com/gkorland/benchmark-rust\" rel=\"nofollow noreferrer\">github.com/gkorland/benchmark-rust</a>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 4, "creation_date": 1565609419, "post_id": 57458460, "comment_id": 101394001, "body": "Maybe with 240 you are overflowing a CPU cache line? If that is the case, your results would be very CPU specific."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 11, "creation_date": 1565610670, "post_id": 57458460, "comment_id": 101394599, "body": "Reproduced <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=257a3b6f7bdf66aaa4ce3d81855b6ed5\" rel=\"nofollow noreferrer\">here</a>. Now I&#39;m guessing that it has something to do with loop unrolling."}], "answers": [{"comments": [{"owner": {"reputation": 7374, "user_id": 593425, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ad54f71e8e63bf711680cf8f5f1e53c1?s=128&d=identicon&r=PG", "display_name": "Guy Korland", "link": "https://stackoverflow.com/users/593425/guy-korland"}, "edited": false, "score": 2, "creation_date": 1565618405, "post_id": 57462362, "comment_id": 101398664, "body": "@lukas-kalbertodt thanks for the great answer! now I also understand why original code that updated <code>sum</code> directly on not a local <code>s</code> was running much slower. <code>for i in 0..arr.len() {                     sum += arr[i];                 }</code>"}, {"owner": {"reputation": 4654, "user_id": 332733, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BR7yE.jpg?s=128&g=1", "display_name": "Mgetz", "link": "https://stackoverflow.com/users/332733/mgetz"}, "edited": false, "score": 4, "creation_date": 1565619751, "post_id": 57462362, "comment_id": 101399429, "body": "@LukasKalbertodt <a href=\"https://godbolt.org/z/fIbhYX\" rel=\"nofollow noreferrer\">Something else is going on in LLVM</a> turning on AVX2 shouldn&#39;t make that big of a difference. <a href=\"https://rust.godbolt.org/z/QwZnUQ\" rel=\"nofollow noreferrer\">Repro&#39;d in rust too</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 4654, "user_id": 332733, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BR7yE.jpg?s=128&g=1", "display_name": "Mgetz", "link": "https://stackoverflow.com/users/332733/mgetz"}, "edited": false, "score": 4, "creation_date": 1565620236, "post_id": 57462362, "comment_id": 101399702, "body": "@Mgetz Interesting! But it doesn&#39;t sound too crazy to me to make that threshold dependent on the available SIMD instructions, as this ultimately determines the number of instructions in a completely unrolled loop. But unfortunately, I cannot say for sure. Would be sweet to have an LLVM dev answering this."}, {"owner": {"reputation": 4654, "user_id": 332733, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BR7yE.jpg?s=128&g=1", "display_name": "Mgetz", "link": "https://stackoverflow.com/users/332733/mgetz"}, "edited": false, "score": 0, "creation_date": 1565620469, "post_id": 57462362, "comment_id": 101399826, "body": "@LukasKalbertodt I&#39;m curious if this whole thing related to some issues the LLVM team have discussed in regards to unsigned iterators and UB cases in C/C++ that they&#39;ve done talks on. But that&#39;s purely speculation."}, {"owner": {"reputation": 1042, "user_id": 2506634, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/sF034.png?s=128&g=1", "display_name": "jackmott", "link": "https://stackoverflow.com/users/2506634/jackmott"}, "edited": false, "score": 0, "creation_date": 1565700985, "post_id": 57462362, "comment_id": 101428097, "body": "Great answer! I would say there are things you can &quot;do about this&quot; though. Which is to write the more optimized version in the first place, so you are less likely to be subject to the whims of varying compilers and settings."}, {"owner": {"reputation": 301, "user_id": 7335904, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0db88e02f06f535bafc89d9bc9ae90c6?s=128&d=identicon&r=PG&f=1", "display_name": "Uncreative Name", "link": "https://stackoverflow.com/users/7335904/uncreative-name"}, "edited": false, "score": 8, "creation_date": 1565703281, "post_id": 57462362, "comment_id": 101429372, "body": "Why doesn&#39;t the compiler or LLVM realize that the entire calculation can be made at compile time? I would have expected to have the loop result hardcoded. Or is the use of <code>Instant</code> preventing that?"}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1565712775, "post_id": 57462362, "comment_id": 101434791, "body": "Why should the analysis to determine a calculation in an inner loop can be moved outside it depend on any number of bytes? That should be a property of the loop regardless of number of iterations."}, {"owner": {"reputation": 1301, "user_id": 1578471, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/ac9edf397f164ecc1a44eec0d8994504?s=128&d=identicon&r=PG", "display_name": "Muqito", "link": "https://stackoverflow.com/users/1578471/muqito"}, "edited": false, "score": 0, "creation_date": 1565716657, "post_id": 57462362, "comment_id": 101436346, "body": "You could also add that the rust book talks about the code unrolling and about the idiomatic recommendations: <a href=\"https://doc.rust-lang.org/book/ch13-04-performance.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch13-04-performance.html</a>"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 4, "creation_date": 1565751539, "post_id": 57462362, "comment_id": 101445960, "body": "@JosephGarvin: I assume it&#39;s because fully unrolling happens to allow the later optimization pass to see that.  Remember that optimizing compilers still care about compiling quickly, as well as making efficient asm, so they have to limit the worst-case complexity of any analysis they do so it doesn&#39;t take hours / days to compile some nasty source code with complicated loops.  But yes, this is obviously a missed optimization for size &gt;= 240.  I wonder if not optimizing away loops inside of loops is intentional to avoid breaking simple benchmarks?  Probably not, but maybe."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 375, "last_activity_date": 1565949903, "last_edit_date": 1565949903, "creation_date": 1565617368, "answer_id": 57462362, "question_id": 57458460, "link": "https://stackoverflow.com/questions/57458460/why-is-there-a-large-performance-impact-when-looping-over-an-array-with-240-or-m/57462362#57462362", "title": "Why is there a large performance impact when looping over an array with 240 or more elements?", "body": "<p><strong>Summary</strong>: below 240, LLVM fully unrolls the inner loop and that lets it notice it can optimize away the repeat loop, breaking your benchmark.</p>\n\n<p><br></p>\n\n<hr>\n\n<p><strong>You found a magic threshold above which LLVM stops performing certain optimizations</strong>. The threshold is 8 bytes * 240 = 1920 bytes (your array is an array of <code>usize</code>s, therefore the length is multiplied with 8 bytes, assuming x86-64 CPU). In this benchmark, one specific optimization \u2013 only performed for length 239 \u2013 is responsible for the huge speed difference. But let's start slowly:</p>\n\n<p><em>(All code in this answer is compiled with <code>-C opt-level=3</code>)</em></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn foo() -&gt; usize {\n    let arr = [0; 240];\n    let mut s = 0;\n    for i in 0..arr.len() {\n        s += arr[i];\n    }\n    s\n}\n</code></pre>\n\n<p>This simple code will produce roughly the assembly one would expect: a loop adding up elements. However, if you change <code>240</code> to <code>239</code>, the emitted assembly differs quite a lot. <a href=\"https://rust.godbolt.org/z/VKL9MS\" rel=\"noreferrer\">See it on Godbolt Compiler Explorer</a>. Here is a small part of the assembly:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>movdqa  xmm1, xmmword ptr [rsp + 32]\nmovdqa  xmm0, xmmword ptr [rsp + 48]\npaddq   xmm1, xmmword ptr [rsp]\npaddq   xmm0, xmmword ptr [rsp + 16]\npaddq   xmm1, xmmword ptr [rsp + 64]\n; more stuff omitted here ...\npaddq   xmm0, xmmword ptr [rsp + 1840]\npaddq   xmm1, xmmword ptr [rsp + 1856]\npaddq   xmm0, xmmword ptr [rsp + 1872]\npaddq   xmm0, xmm1\npshufd  xmm1, xmm0, 78\npaddq   xmm1, xmm0\n</code></pre>\n\n<p>This is what's called <em>loop unrolling</em>: LLVM pastes the loop body a bunch of time to avoid having to execute all those \"loop management instructions\", i.e. incrementing the loop variable, check if the loop has ended and the jump to the start of the loop.</p>\n\n<p>In case you're wondering: the <code>paddq</code> and similar instructions are SIMD instructions which allow summing up multiple values in parallel. Moreover, two 16-byte SIMD registers (<code>xmm0</code> and <code>xmm1</code>) are used in parallel so that instruction-level parallelism of the CPU can basically execute two of these instructions at the same time. After all, they are independent of one another. In the end, both registers are added together and then horizontally summed down to the scalar result.</p>\n\n<p>Modern mainstream x86 CPUs (not low-power Atom) really can do 2 vector loads per clock when they hit in L1d cache, and <code>paddq</code> throughput is also at least 2 per clock, with 1 cycle latency on most CPUs.  See <a href=\"https://agner.org/optimize/\" rel=\"noreferrer\">https://agner.org/optimize/</a> and also <a href=\"https://stackoverflow.com/questions/45113527/why-does-mulss-take-only-3-cycles-on-haswell-different-from-agners-instruction\">this Q&amp;A</a> about multiple accumulators to hide latency (of FP FMA for a dot product) and bottleneck on throughput instead.</p>\n\n<p>LLVM does unroll small loops <em>some</em> when it's not <em>fully</em> unrolling, and still uses multiple accumulators. So usually, front-end bandwidth and back-end latency bottlenecks aren't a huge problem for LLVM-generated loops even without full unrolling.</p>\n\n<hr>\n\n<p><strong>But loop unrolling is not responsible for a performance difference of factor 80!</strong> At least not loop unrolling alone. Let's take a look at the actual benchmarking code, which puts the one loop inside another one:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const CAPACITY: usize = 239;\nconst IN_LOOPS: usize = 500000;\n\npub fn foo() -&gt; usize {\n    let mut arr = [0; CAPACITY];\n    for i in 0..CAPACITY {\n        arr[i] = i;\n    }\n\n    let mut sum = 0;\n    for _ in 0..IN_LOOPS {\n        let mut s = 0;\n        for i in 0..arr.len() {\n            s += arr[i];\n        }\n        sum += s;\n    }\n\n    sum\n}\n</code></pre>\n\n<p>(<a href=\"https://rust.godbolt.org/z/73xy5I\" rel=\"noreferrer\">On Godbolt Compiler Explorer</a>)</p>\n\n<p>The assembly for <code>CAPACITY = 240</code> looks normal: two nested loops. (At the start of the function there is quite some code just for initializing, which we will ignore.) For 239, however, it looks very different! We see that the initializing loop and the inner loop got unrolled: so far so expected.</p>\n\n<p><strong>The important difference is that for 239, LLVM was able to figure out that the result of the inner loop does not depend on the outer loop!</strong> As a consequence, LLVM emits code that basically first executes only the inner loop (calculating the sum) and then simulates the outer loop by adding up <code>sum</code> a bunch of times! </p>\n\n<p>First we see almost the same assembly as above (the assembly representing the inner loop). Afterwards we see this (I commented to explain the assembly; the comments with <code>*</code> are especially important):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>        ; at the start of the function, `rbx` was set to 0\n\n        movq    rax, xmm1     ; result of SIMD summing up stored in `rax`\n        add     rax, 711      ; add up missing terms from loop unrolling\n        mov     ecx, 500000   ; * init loop variable outer loop\n.LBB0_1:\n        add     rbx, rax      ; * rbx += rax\n        add     rcx, -1       ; * decrement loop variable\n        jne     .LBB0_1       ; * if loop variable != 0 jump to LBB0_1\n        mov     rax, rbx      ; move rbx (the sum) back to rax\n        ; two unimportant instructions omitted\n        ret                   ; the return value is stored in `rax`\n</code></pre>\n\n<p>As you can see here, the result of the inner loop is taken, added up as often as the outer loop would have ran and then returned. LLVM can only perform this optimization because it understood that the inner loop is independent of the outer one. </p>\n\n<p><strong>This means the runtime changes from <code>CAPACITY * IN_LOOPS</code> to <code>CAPACITY + IN_LOOPS</code></strong>. And this is responsible for the huge performance difference.</p>\n\n<hr>\n\n<p>An additional note: can you do anything about this? Not really. LLVM has to have such magic thresholds as without them LLVM-optimizations could take forever to complete on certain code. But we can also agree that this code was highly artificial. In practice, I doubt that such a huge difference would occur. The difference due to full loop unrolling is usually not even factor 2 in these cases. So no need to worry about real use cases.</p>\n\n<p>As a last note about idiomatic Rust code: <code>arr.iter().sum()</code> is a better way to sum up all elements of an array. And changing this in the second example does not lead to any notable differences in emitted assembly. You should use short and idiomatic versions unless you measured that it hurts performance.</p>\n"}, {"comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 3, "creation_date": 1565708298, "post_id": 57479876, "comment_id": 101432453, "body": "Or better still, <code>(0..CAPACITY).sum::&lt;usize&gt;() * IN_LOOPS</code>, which yields the same result."}, {"owner": {"reputation": 500, "user_id": 9061909, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dyipU.jpg?s=128&g=1", "display_name": "Josep", "link": "https://stackoverflow.com/users/9061909/josep"}, "edited": false, "score": 11, "creation_date": 1565719777, "post_id": 57479876, "comment_id": 101437699, "body": "I would actually explain that the assembly is not actually doing the calculation, but LLVM has precomputed the answer in this case."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1565798914, "post_id": 57479876, "comment_id": 101466397, "body": "I\u2019m kind of surprised that <code>rustc</code> is missing the opportunity to do this strength-reduction. In this specific context, though, this appears to be a timing loop, and you deliberately want it not to be optimized out. The whole point is to repeat the computation that number of times from scratch and divide by the number of repetitions. In C, the (unofficial) idiom for that is to declare the loop counter as <code>volatile</code>, e.g. the BogoMIPS counter in the Linux kernel. Is there a way to achieve this in Rust? There might be, but I don\u2019t know it. Calling an external <code>fn</code> might help."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1565868826, "post_id": 57479876, "comment_id": 101485652, "body": "@Davislor: A <code>volatile</code> loop counter also forces it to be stored in memory, not a register.  Not a big deal for an outer loop, but for an inner loop it introduces store-forwarding latency.  e.g. on modern x86 it makes a tight loop up to 5x slower, from a 1-cycle loop-carried dep chain to 5 or 6 cycles.  If you <i>just</i> want a delay loop that&#39;s fine, though, and acceptable in a microbenchmark as long as the loop body is big enough, and it doesn&#39;t CSE across iterations.  (i.e. hoist the real work out and turn it into 2 sequent loops instead of nested loops. <code>volatile</code> doesn&#39;t stop that at all.)"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1565868953, "post_id": 57479876, "comment_id": 101485700, "body": "TL:DR: a <code>volatile</code> loop counter isn&#39;t a specially-recognized idiom, it&#39;s just a consequence of what C <code>volatile</code> means on a normal CPU with registers and memory."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1565885190, "post_id": 57479876, "comment_id": 101493460, "body": "@PeterCordes How to do it in C is getting a little off-topic, but in general a timing loop will be an outer loop and a delay loop will always be innermost. The reason you\u2019d use <code>volatile</code> here is specifically to force the computation to actually be performed, not optimized away. (If you wanted to do synchronization in modern C, you would use atomics, not <code>volatile</code>. Low-level code might also use <code>volatile</code> for memory-mapped hardware.)"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 1, "creation_date": 1565902377, "post_id": 57479876, "comment_id": 101500125, "body": "@Davislor: <code>volatile</code> forces that memory to be in sync.  Applying it to the loop counter only forces actual reload/store of the loop counter value.  It doesn&#39;t directly affect the loop body.  That&#39;s why a better way to use it is normally to assign the actual important result to <code>volatile int sink</code> or something either after the loop (if there&#39;s a loop-carried dependency) or every iteration, to let the compiler optimize the loop counter however it wants but force it to materialize <i>the result you want</i> in a register so it can store it."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 1, "creation_date": 1565902805, "post_id": 57479876, "comment_id": 101500254, "body": "@Davislor: I think Rust has inline asm syntax something like GNU C.  You can use inline asm to force the compiler to materialize a value <i>in a register</i> without forcing it to store it.  Using that on the result of each loop iteration can stop it from optimizing away.  (But also from auto-vectorizing if you aren&#39;t careful).  e.g. <a href=\"//stackoverflow.com/q/33975479\">&quot;Escape&quot; and &quot;Clobber&quot; equivalent in MSVC</a> explains 2 macros (while asking how to port them to MSVC which isn&#39;t really possible) and links to Chandler Carruth&#39;s talk where he shows their use."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1565903705, "post_id": 57479876, "comment_id": 101500510, "body": "@PeterCordes Rust also lets you call a function written in C. Is there a way to guarantee that a timing loop works, natively? Perhaps updating an atomic counter with relaxed memory ordering?"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1565910737, "post_id": 57479876, "comment_id": 101502243, "body": "@Davislor: The inline asm statement I&#39;m talking about has an empty template so it&#39;s not ISA specific, assuming Rust supports it.  Delay-loop timing is never portable, though; different platforms have different performance, and frequency-scaling...  A relaxed-atomic increment will be significantly slower than <code>volatile</code> (separate load and store), but yeah that could work too with fewer iterations.  Modern uarches only need a cache-lock in the core doing the increment so it shouldn&#39;t interfere with DMA or other cores.  Spinning on a gettimeofday or equivalent can also work."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1565913396, "post_id": 57479876, "comment_id": 101502734, "body": "@PeterCordes To clarify, by \u201ctiming loop,\u201d I was thinking of a loop like the one in this example: run an operation N times to get a more accurate measurement of the average time. A delay loop, I suppose, might better yield the CPU."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1565913709, "post_id": 57479876, "comment_id": 101502796, "body": "@Davislor: oh lol, no you wouldn&#39;t use an atomic increment in a benchmark repeat loop!!  Except maybe on a non-x86 system where relaxed is actually possible in asm.  On x86 <code>lock add</code> is a full memory barrier, effectively strengthening relaxed to seq_cst.  Like I said, use inline asm to force the compiler to materialize some value from the inner loop in a register, or assign it to a volatile object, every iteration.  Or if you can get away with it, sum it in the loop and use the result.  <a href=\"https://doc.rust-lang.org/1.8.0/book/inline-assembly.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.8.0/book/inline-assembly.html</a> Rust inline asm does roughly match GNU C."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1565914292, "post_id": 57479876, "comment_id": 101502892, "body": "@PeterCordes Is that really the best way to do it in Rust? I\u2019m surprised."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1565914504, "post_id": 57479876, "comment_id": 101502919, "body": "@Davislor: It&#39;s the best way in C, if you want to force the compiler to actually compute the value of each loop body.  An empty inline asm statement that makes the compiler forget what it knows about a variable&#39;s value is exactly what you need to block optimizations without actually making the asm do unnecessary work that could be a bottleneck itself.  And forcing it to actually count a loop counter a certain way is not useful; what you care about is making it do the work in the loop body.  I don&#39;t know Rust very well, but it seems pretty obvious that&#39;s the best way to control the optimizer."}], "tags": [], "owner": {"reputation": 947, "user_id": 5456794, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ad6bcc88e5c8701ac8e196f8a902d21a?s=128&d=identicon&r=PG&f=1", "display_name": "mja", "link": "https://stackoverflow.com/users/5456794/mja"}, "is_accepted": false, "score": 30, "last_activity_date": 1565877528, "last_edit_date": 1565877528, "creation_date": 1565706417, "answer_id": 57479876, "question_id": 57458460, "link": "https://stackoverflow.com/questions/57458460/why-is-there-a-large-performance-impact-when-looping-over-an-array-with-240-or-m/57479876#57479876", "title": "Why is there a large performance impact when looping over an array with 240 or more elements?", "body": "<p>In addition to Lukas' answer, if you want to use an iterator, try this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const CAPACITY: usize = 240;\nconst IN_LOOPS: usize = 500000;\n\npub fn bar() -&gt; usize {\n    (0..CAPACITY).sum::&lt;usize&gt;() * IN_LOOPS\n}\n</code></pre>\n\n<p>Thanks @Chris Morgan for the suggestion about range pattern.</p>\n\n<p>The <a href=\"https://rust.godbolt.org/z/_BuPrM\" rel=\"noreferrer\">optimized assembly</a> is quite good:</p>\n\n<pre><code>example::bar:\n        movabs  rax, 14340000000\n        ret\n</code></pre>\n"}], "owner": {"reputation": 7374, "user_id": 593425, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ad54f71e8e63bf711680cf8f5f1e53c1?s=128&d=identicon&r=PG", "display_name": "Guy Korland", "link": "https://stackoverflow.com/users/593425/guy-korland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 20443, "favorite_count": 46, "accepted_answer_id": 57462362, "answer_count": 2, "score": 241, "last_activity_date": 1565949903, "creation_date": 1565601394, "last_edit_date": 1565836539, "question_id": 57458460, "link": "https://stackoverflow.com/questions/57458460/why-is-there-a-large-performance-impact-when-looping-over-an-array-with-240-or-m", "title": "Why is there a large performance impact when looping over an array with 240 or more elements?", "body": "<p>When running a sum loop over an array in Rust, I noticed a huge performance drop when <code>CAPACITY</code> >= 240. <code>CAPACITY</code> = 239 is about 80 times faster. </p>\n\n<p>Is there special compilation optimization Rust is doing for \"short\" arrays? </p>\n\n<p>Compiled with <code>rustc -C opt-level=3</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::Instant;\n\nconst CAPACITY: usize = 240;\nconst IN_LOOPS: usize = 500000;\n\nfn main() {\n    let mut arr = [0; CAPACITY];\n    for i in 0..CAPACITY {\n        arr[i] = i;\n    }\n    let mut sum = 0;\n    let now = Instant::now();\n    for _ in 0..IN_LOOPS {\n        let mut s = 0;\n        for i in 0..arr.len() {\n            s += arr[i];\n        }\n        sum += s;\n    }\n    println!(\"sum:{} time:{:?}\", sum, now.elapsed());\n}\n</code></pre>\n"}, {"tags": ["image-processing", "rust", "base64"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1565599091, "post_id": 57457818, "comment_id": 101389478, "body": "What happens when you try running that code? If it doesn&#39;t compile or if it fails to run, paste the complete error message in your question. If it runs but gives a &quot;wrong&quot; result, tell us what the actual and expected results are so we can understand what&#39;s going on."}, {"owner": {"reputation": 661, "user_id": 4932065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PWJhM.jpg?s=128&g=1", "display_name": "digiwizkid", "link": "https://stackoverflow.com/users/4932065/digiwizkid"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1565599692, "post_id": 57457818, "comment_id": 101389688, "body": "I have added more details, please check. thanks"}], "answers": [{"comments": [{"owner": {"reputation": 661, "user_id": 4932065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PWJhM.jpg?s=128&g=1", "display_name": "digiwizkid", "link": "https://stackoverflow.com/users/4932065/digiwizkid"}, "edited": false, "score": 0, "creation_date": 1565618895, "post_id": 57459203, "comment_id": 101398948, "body": "It was expecting a typed vector vec![], after that it&#39;s working perfectly. Thanks"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1565619442, "last_edit_date": 1565619442, "creation_date": 1565604399, "answer_id": 57459203, "question_id": 57457818, "link": "https://stackoverflow.com/questions/57457818/how-to-convert-dynamicimage-to-base64/57459203#57459203", "title": "How to convert DynamicImage to Base64?", "body": "<p>The Base64 values of the original and Gimp images represent PNG-encoded images. The response you're getting represents raw pixel data. You will need to convert the data to PNG before encoding as Base64. This should do it:</p>\n\n<pre><code>let mut buf = vec![[]];\nbase_img.write_to(&amp;mut buf, image::ImageOutputFormat::PNG);\nlet res_base64 = base64::encode(&amp;buf);\n</code></pre>\n"}], "owner": {"reputation": 661, "user_id": 4932065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PWJhM.jpg?s=128&g=1", "display_name": "digiwizkid", "link": "https://stackoverflow.com/users/4932065/digiwizkid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 0, "accepted_answer_id": 57459203, "answer_count": 1, "score": 1, "last_activity_date": 1565619442, "creation_date": 1565598389, "last_edit_date": 1565619399, "question_id": 57457818, "link": "https://stackoverflow.com/questions/57457818/how-to-convert-dynamicimage-to-base64", "title": "How to convert DynamicImage to Base64?", "body": "<p>I can convert a Base64 string to a <code>DynamicImage</code> using the <code>image</code> and <code>base64</code> crates but I can not convert the image back to a Base64 string.</p>\n\n<p>What I am doing wrong here? How to achieve this?</p>\n\n<pre><code>extern crate base64;\nextern crate image;\n\nfn main() {\n    /*\n    Base64 to image\n        let img_buffer = base64::decode(\"qwerty...\").unwrap();\n        let mut base_img = image::load_from_memory(img_buffer.as_slice()).unwrap();\n\n    */\n\n    let mut base_img = image::open(\"player.png\").unwrap();\n\n    base_img.invert();\n\n    // base_img.save(\"player1.png\").unwrap();\n\n    // image to Base64\n    let res_base64 = base64::encode(base_img.raw_pixels().as_slice());\n\n    println!(\"{}\", res_base64)\n}\n</code></pre>\n\n<p>Base64 value of original image </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAgAElEQVR42uydd5hlRZn/v1Un3dzdt/P0pJ6enANxGKISFEQkg4ur6667uquuCiKCIJKUpAj7U3cN66orWVERVxBmmDxMYHLOM90znfvGk6rq98e9ICoo0Kf73u5+P8+DjPBwZrpO1Xm...\n</code></pre>\n\n<p>Base64 value of Gimp inverted image</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH4wgMCCwxQF4N2QAAIABJREFUeNrsvXmc3FWZ7...\n</code></pre>\n\n<p>The response I am getting not the proper Base64 value:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///...\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1565589659, "post_id": 57456244, "comment_id": 101386371, "body": "It seems you just answered your own question. What else are you expecting?"}, {"owner": {"reputation": 3358, "user_id": 852385, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5c0eac51aaa99541fb966854b5dcb131?s=128&d=identicon&r=PG", "display_name": "Helin Wang", "link": "https://stackoverflow.com/users/852385/helin-wang"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1565589702, "post_id": 57456244, "comment_id": 101386387, "body": "Just want to confirm if my logic and guess is correct, and are there any exceptions to my guess?"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 1, "creation_date": 1565589976, "post_id": 57456244, "comment_id": 101386454, "body": "<code>b</code> has the type <code>&amp;&#39;a mut str</code>. The lifetime of the reference would be the scope that owns the value. In this case, you didn&#39;t move <code>a</code> into <code>&#39;b</code>, so your reference is still <code>&amp;&#39;a</code>. However, if you pass <code>&amp;b</code> into <code>foo</code> (even if the type matches), you will get error because <code>b</code> lives inside <code>&#39;b</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1565625899, "post_id": 57456244, "comment_id": 101402634, "body": "The lifetime of a borrow expression isn&#39;t necessarily the same as the lifetime of any variable. The compiler doesn&#39;t have to <i>choose</i> an output lifetime from the input lifetimes, it can create a &quot;new&quot; lifetime that satisfies the requirements any place there is a borrow expression. (also note <code>foo(b)</code> does an implicit reborrow, so the type of <code>c</code> and the type of <code>b</code> don&#39;t need to have the same lifetime parameter)"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565710069, "post_id": 57465289, "comment_id": 101433443, "body": "I don&#39;t think this model can account for more complicated borrowing relationships. If <code>a</code> is used again after the <code>println!</code>, for example, the mutable borrow can&#39;t be for the entire lifetime of <code>a</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565714158, "post_id": 57465289, "comment_id": 101435349, "body": "Better. We&#39;re dealing with a lack of precision in terminology, as you mention. It still doesn&#39;t match my own mental model, but I might be overfitting."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1565711114, "last_edit_date": 1565711114, "creation_date": 1565628974, "answer_id": 57465289, "question_id": 57456244, "link": "https://stackoverflow.com/questions/57456244/does-a-generic-lifetime-materialize-as-the-references-lifetime-or-the-reference/57465289#57465289", "title": "Does a generic lifetime materialize as the reference&#39;s lifetime or the referenced value&#39;s lifetime?", "body": "<p>A value has a lifetime of its own, but a reference also tracks the lifetime of the thing it references. Unfortunately, there's a lack of official terminology to use here. The term that I (and some others) have started using is <em>concrete lifetime</em>. There are three variables in main and thus there are three concrete lifetimes:</p>\n\n<pre><code>fn main() {\n    let c;                     //       'c\n    let mut a = String::new(); // 'a     \u00a6\n    {                          //  |     \u00a6\n        let b = &amp;mut a;        //  | 'b  \u00a6\n        c = foo(b);            //  |  |  |\n    }                          //  |     |\n    println!(\"{}\", c)          //  |     |\n}\n</code></pre>\n\n<p><code>a</code> is a <code>String</code>, <code>b</code> is a <code>&amp;mut String</code>, and <code>c</code> is a <code>&amp;str</code>. All three variables are values, but <code>b</code> and <code>c</code> are <em>also</em> references. In this case, <code>b</code> refers to the value in <code>a</code> and is <code>&amp;'a mut String</code>. Since <code>c</code> is derived from <code>b</code>, it has the same \"inner lifetime\": <code>&amp;'a str</code>.</p>\n\n<p>Notably, the lifetime of <code>b</code> itself <strong>never</strong> comes into play. It's exceedingly rare for it to, as you need to have mutable borrows and an \"extra\" borrow:</p>\n\n<pre><code>fn main() {\n    let c;\n    let mut a = String::new();\n    {\n        let mut b = &amp;mut a;\n        c = foo(&amp;mut b);    // Mutably borrowing `b` here\n    }\n    println!(\"{}\", c)\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `b` does not live long enough\n --&gt; src/main.rs:6:17\n  |\n6 |         c = foo(&amp;mut b);\n  |                 ^^^^^^ borrowed value does not live long enough\n7 |     }\n  |     - `b` dropped here while still borrowed\n8 |     println!(\"{}\", c)\n  |                    - borrow later used here\n</code></pre>\n\n<p>In this case, the value passed to <code>foo</code> is of type <code>&amp;'b mut &amp;'a mut String</code>, which is coerced down to <code>&amp;'b mut str</code>. The value <code>b</code> does not live long enough, and you get the error.</p>\n\n<blockquote>\n  <p>I don't think this model can account for more complicated borrowing relationships. If <code>a</code> is used again after the <code>println!</code>, for example, the mutable borrow can't be for the entire lifetime of <code>a</code></p>\n</blockquote>\n\n<p>The mutable borrow of <code>a</code> is held by <code>c</code>, but the <em>duration of the borrow</em> doesn't need to correspond to the lifetime of <code>c</code>. Due to <a href=\"https://stackoverflow.com/q/50251487/155423\">non-lexical lifetimes</a> (better called \"non-lexical borrows\" in this context), the borrow of <code>a</code> held by <code>c</code> can terminate after the <code>println!</code> but before the end of scope.</p>\n\n<p>Enhancing the the diagram from above to show the lifetime of the <em>value</em> combined with the lifetime of the <em>referred-to value</em> in parenthesis:</p>\n\n<pre><code>fn main() {\n    let c;                     //           'c\n    let mut a = String::new(); // 'a         \u00a6\n    {                          //  |         \u00a6\n        let b = &amp;mut a;        //  | 'b('a)  \u00a6\n        c = foo(b);            //  |  |('a)  |('a)\n    }                          //  |         |('a)\n    println!(\"{}\", c);         //  |         |('a)\n                               //  |         |\n    println!(\"{}\", a);         //  |         |\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32165917/155423\">Why does linking lifetimes matter only with mutable references?</a></li>\n<li><a href=\"https://stackoverflow.com/q/42637911/155423\">How can this instance seemingly outlive its own parameter lifetime?</a></li>\n<li><a href=\"https://stackoverflow.com/q/51502717/155423\">Mutable borrow in a getter not living long enough</a></li>\n<li><a href=\"https://stackoverflow.com/q/48158063/155423\">Reference does not live long enough in nested structure</a></li>\n<li><a href=\"https://stackoverflow.com/q/31067031/155423\">Cannot borrow as mutable more than once at a time in one code - but can in another very similar</a></li>\n<li><a href=\"https://stackoverflow.com/q/45833618/155423\">What is the difference between &#39;&amp;self&#39; and &#39;&amp;&#39;a self&#39;?</a></li>\n</ul>\n"}], "owner": {"reputation": 3358, "user_id": 852385, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5c0eac51aaa99541fb966854b5dcb131?s=128&d=identicon&r=PG", "display_name": "Helin Wang", "link": "https://stackoverflow.com/users/852385/helin-wang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "accepted_answer_id": 57465289, "answer_count": 1, "score": 3, "last_activity_date": 1565711114, "creation_date": 1565589439, "last_edit_date": 1565629903, "question_id": 57456244, "link": "https://stackoverflow.com/questions/57456244/does-a-generic-lifetime-materialize-as-the-references-lifetime-or-the-reference", "title": "Does a generic lifetime materialize as the reference&#39;s lifetime or the referenced value&#39;s lifetime?", "body": "<p>Consider the following program:</p>\n\n<pre><code>fn main() {\n    let c;                                      |&lt;-'a\n    let mut a = \"Hello, world!\".to_string();    |\n    {                                           |\n        let b = &amp;mut a;           |&lt;-'b         |\n        c = foo(b);               |             |\n    }                                           |\n    println!(\"{}\", c)                           |\n}\n\nfn foo&lt;'z&gt;(a: &amp;'z mut str) -&gt; &amp;'z str {\n    a\n}\n</code></pre>\n\n<p><code>b</code>'s lifetime is <code>'b</code>, but <code>c</code>'s lifetime is <code>'a</code>, which is longer than <code>'b</code>. <code>foo</code>'s lifetime constraint says <code>foo</code>'s return value (<code>c</code> in this case) should have the same lifetime with its argument (<code>b</code> in this case). How is <code>foo</code>'s lifetime constraint satisfied?</p>\n\n<p>However, this program compiles, so I guess <code>foo</code>'s lifetime parameter <code>'z</code> materializes as <code>b</code>'s referenced value (<code>a</code>)'s lifetime so that <code>foo</code>'s lifetime constraint is satisfied?</p>\n"}, {"tags": ["rust", "tuples"], "answers": [{"tags": [], "owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "is_accepted": true, "score": 2, "last_activity_date": 1565624881, "last_edit_date": 1565624881, "creation_date": 1565574758, "answer_id": 57454888, "question_id": 57454887, "link": "https://stackoverflow.com/questions/57454887/how-do-i-append-to-a-tuple/57454888#57454888", "title": "How do I append to a tuple?", "body": "<p>There's no built-in way to do this, but we can implement it ourselves with a helper trait and a macro to implement that trait for tuples up to N arguments:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait TupleAppend&lt;T&gt; {\n    type ResultType;\n\n    fn append(self, t: T) -&gt; Self::ResultType;\n}\n\nimpl&lt;T&gt; TupleAppend&lt;T&gt; for () {\n    type ResultType = (T,);\n\n    fn append(self, t: T) -&gt; Self::ResultType {\n        (t,)\n    }\n}\n\nmacro_rules! impl_tuple_append {\n    ( () ) =&gt; {};\n    ( ( $t0:ident $(, $types:ident)* ) ) =&gt; {\n        impl&lt;$t0, $($types,)* T&gt; TupleAppend&lt;T&gt; for ($t0, $($types,)*) {\n            // Trailing comma, just to be extra sure we are dealing\n            // with a tuple and not a parenthesized type/expr.\n            type ResultType = ($t0, $($types,)* T,);\n\n            fn append(self, t: T) -&gt; Self::ResultType {\n                // Reuse the type identifiers to destructure ourselves:\n                let ($t0, $($types,)*) = self;\n                // Create a new tuple with the original elements, plus the new one:\n                ($t0, $($types,)* t,)\n            }\n        }\n\n        // Recurse for one smaller size:\n        impl_tuple_append! { ($($types),*) }\n    };\n}\n\nimpl_tuple_append! {\n    // Supports tuples up to size 10:\n    (_1, _2, _3, _4, _5, _6, _7, _8, _9, _10)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a906cc0c7ac56fe47e274410a22a337e\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1565621795, "creation_date": 1565621795, "answer_id": 57463582, "question_id": 57454887, "link": "https://stackoverflow.com/questions/57454887/how-do-i-append-to-a-tuple/57463582#57463582", "title": "How do I append to a tuple?", "body": "<p>As an alternative to a tuple, consider using an <a href=\"https://docs.rs/frunk/0.3.0/frunk/macro.hlist.html\" rel=\"nofollow noreferrer\"><code>HList</code></a>:</p>\n\n<pre><code>use frunk::hlist; // 0.3.0\n\nfn main() {\n    let some_values = hlist![1, \"Hello\", true];\n\n    let with_world = some_values.prepend(\"World\");\n\n    println!(\"{:?}\", with_world);\n}\n</code></pre>\n"}], "owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 981, "favorite_count": 0, "accepted_answer_id": 57454888, "answer_count": 2, "score": 2, "last_activity_date": 1565624881, "creation_date": 1565574758, "question_id": 57454887, "link": "https://stackoverflow.com/questions/57454887/how-do-i-append-to-a-tuple", "title": "How do I append to a tuple?", "body": "<p>I have something which I know is a tuple. How do I generically append a single value to the tuple?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let some_tuple: (i32, &amp;str, bool) = (1, \"Hello\", true);\n\nlet with_world: (i32, &amp;str, bool, &amp;str) = some_tuple.append(\"World\");\n</code></pre>\n\n<hr>\n\n<p>As a possible use-case, consider a parser combinator which takes a variadic number of parsers and runs each in sequence, producing a tuple of their attributes:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Emulate variadic parameters:\nmacro_rules! seq {\n    ($($parsers:expr),*) =&gt; {\n        move |input: &amp;[u8]| {\n            let result = ();\n            let remaining = input;\n            $(\n                let (remaining, parser_result) = $parsers(remaining);\n                let result = result.append(parser_result);\n            )*\n            result\n        }\n    }\n}\n</code></pre>\n\n<p>With tuple appending, <code>seq!(a, b, c, d)</code> can yield <code>(A, B, C, D)</code>, rather than the ugly <code>(((A, B), C), D)</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 2, "creation_date": 1565543088, "post_id": 57451077, "comment_id": 101378676, "body": "The <a href=\"https://doc.rust-lang.org/nomicon/drop-flags.html\" rel=\"nofollow noreferrer\">nomicon</a> might be interesting to you."}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 7930513, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb8548ecf3b2f2ee7fd709015093f665?s=128&d=identicon&r=PG&f=1", "display_name": "Babur", "link": "https://stackoverflow.com/users/7930513/babur"}, "edited": false, "score": 0, "creation_date": 1565539046, "post_id": 57451150, "comment_id": 101377805, "body": "Thank you for your reply, could you point me to official documentation, where I can read more about this, if there&#39;s any?"}, {"owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "reply_to_user": {"reputation": 33, "user_id": 7930513, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb8548ecf3b2f2ee7fd709015093f665?s=128&d=identicon&r=PG&f=1", "display_name": "Babur", "link": "https://stackoverflow.com/users/7930513/babur"}, "edited": false, "score": 2, "creation_date": 1565548457, "post_id": 57451150, "comment_id": 101379834, "body": "@Babur: Take a look at <a href=\"https://doc.rust-lang.org/std/ops/trait.Drop.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/ops/trait.Drop.html</a> and the linked part of the rust book"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 6, "last_activity_date": 1565536230, "creation_date": 1565536230, "answer_id": 57451150, "question_id": 57451077, "link": "https://stackoverflow.com/questions/57451077/what-happens-to-heap-allocated-value-after-variable-that-holds-the-ownership-of/57451150#57451150", "title": "What happens to heap allocated value after variable that holds the ownership of that value gets reassigned?", "body": "<p>Whenever you assign a new value to a variable of a type implementing <code>Drop</code>, the old value will be dropped before the new value is assigned. For a type owning heap-allocated memory like <code>Box</code>, this means the memory will be freed at the time of the assignment.</p>\n\n<p>While it is <em>possible</em> to leak unreachable memory in safe Rust code, it is quite unlikely to happen by accident.</p>\n"}], "owner": {"reputation": 33, "user_id": 7930513, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb8548ecf3b2f2ee7fd709015093f665?s=128&d=identicon&r=PG&f=1", "display_name": "Babur", "link": "https://stackoverflow.com/users/7930513/babur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "closed_date": 1565814400, "accepted_answer_id": 57451150, "answer_count": 1, "score": 3, "last_activity_date": 1565539488, "creation_date": 1565535576, "last_edit_date": 1565539488, "question_id": 57451077, "link": "https://stackoverflow.com/questions/57451077/what-happens-to-heap-allocated-value-after-variable-that-holds-the-ownership-of", "closed_reason": "Duplicate", "title": "What happens to heap allocated value after variable that holds the ownership of that value gets reassigned?", "body": "<p>I'm currently learning about Rust programming language, and after reading about ownership and lifetime concepts (which I find as an elegant alternative to GC), I cannot find an answer to the following question. \nAs far as the ownership and lifetimes are concerned, the following code works as described with comments.</p>\n\n<pre><code>fn main() {\n    let mut x: u32 = 10; // x is pointing to memory in stack\n    println!(\"before reassignment: x = {}\", x); // prints 10\n    x = 11; // memory in stack simply has been updated with another value\n    println!(\"after reassignment: x = {}\", x); // prints 11\n} // x is dropped here\n</code></pre>\n\n<p>everyone is happy, but imagine if we had a code like this:</p>\n\n<pre><code>fn main() {\n    let mut x = Box::new([99; 1000]); // x owns a Box, which owns heap allocated array \n    println!(\"before reassignment: x[0] = {}\", x[0]); \n    x = Box::new([100; 1000]); // x has been assigned another Box\n    // what happened to previous heap allocated array, has it been\n    // dropped behind the scenes, or is that a memory leak?\n    println!(\"after reassignment: x[0] = {}\", x[0]);\n} // x is dropped here, only the last assigned value gets dropped with it.\n</code></pre>\n\n<p>What happens to heap allocated array (the one that was assigned first), does it live until the end of function, or will it be dropped at the moment of reassignment? \nI'm still learning Rust, so my understanding of memory management might be not complete.</p>\n\n<p>The question is a little different than the one asked in <a href=\"https://stackoverflow.com/questions/31955165\">When is the storage reclaimed for a resource that is no longer owned?</a>, because it's about the case when owner-variable is still in scope, but simply has been assigned another value.</p>\n"}, {"tags": ["import", "rust", "rust-cargo", "rust-crates"], "answers": [{"tags": [], "owner": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "is_accepted": true, "score": 2, "last_activity_date": 1565560188, "creation_date": 1565560188, "answer_id": 57453866, "question_id": 57450632, "link": "https://stackoverflow.com/questions/57450632/how-to-reuse-code-from-the-main-bin-in-another-bin/57453866#57453866", "title": "How to reuse code from the main bin in another bin?", "body": "<p>Use a library and two binaries, then reuse the lib's code in the two binaries. Example:</p>\n\n<p>Cargo.toml</p>\n\n<pre><code>[lib]\nname = \"utils\"\npath = \"src/utils.rs\"\n\n# cargo build --bin other\n[[bin]]\nname = \"other\"\npath = \"src/bin/other.rs\"\n\n# cargo build --bin main\n[[bin]]\nname = \"main\"\npath = \"src/main.rs\"\n</code></pre>\n\n<p>Then <code>use utils::{...}</code>. The path are taken from your question, but putting main inside bin/ and renaming utils.rs to lib.rs could be a more standard way to do it.</p>\n\n<p>If the library is generic enough, you could even release it on crates.io for others to benefit from it.</p>\n"}], "owner": {"reputation": 6355, "user_id": 3755692, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/F7x32.png?s=128&g=1", "display_name": "msrd0", "link": "https://stackoverflow.com/users/3755692/msrd0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 1, "accepted_answer_id": 57453866, "answer_count": 1, "score": 2, "last_activity_date": 1565560188, "creation_date": 1565532358, "question_id": 57450632, "link": "https://stackoverflow.com/questions/57450632/how-to-reuse-code-from-the-main-bin-in-another-bin", "title": "How to reuse code from the main bin in another bin?", "body": "<p>My project structure looks like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 bin\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 other.rs\n    \u251c\u2500\u2500 main.rs\n    \u2514\u2500\u2500 util.rs\n</code></pre>\n\n<p>(code: <a href=\"https://gitlab.com/msrd0/cargo-bin-import\" rel=\"nofollow noreferrer\">https://gitlab.com/msrd0/cargo-bin-import</a>)</p>\n\n<p>In my <code>other.rs</code>, I'm trying to reuse code from the <code>util</code> mod, which is declared as a public mod in my <code>main.rs</code> file. I tried the following:</p>\n\n<ul>\n<li><code>use util::do_sth</code></li>\n<li><code>use crate::util::do_sth</code></li>\n<li><code>use cargo_bin_import::util::do_sth</code> (with and without extern crate)</li>\n<li><code>mod util; use util::do_sth</code></li>\n<li><code>extern crate util; use util::do_sth</code> (suggested by rustc)</li>\n</ul>\n\n<p>None of the above worked and gave me error messages similar to this one:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `crate::util`\n --&gt; src/bin/other.rs:1:12\n  |\n1 | use crate::util::do_sth;\n  |            ^^^^ maybe a missing `extern crate util;`?\n\nerror: aborting due to previous error\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 1679, "user_id": 267874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/007a9c64b82a001443ff463ef326366b?s=128&d=identicon&r=PG", "display_name": "Paul-Sebastian Manole", "link": "https://stackoverflow.com/users/267874/paul-sebastian-manole"}, "edited": false, "score": 4, "creation_date": 1574712606, "post_id": 57477060, "comment_id": 104321433, "body": "Does this mean it doesn&#39;t run <b>anything</b> else but <code>cargo check</code>? (No.)"}], "tags": [], "owner": {"reputation": 174, "user_id": 1354814, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pmtMb.jpg?s=128&g=1", "display_name": "riginding", "link": "https://stackoverflow.com/users/1354814/riginding"}, "is_accepted": true, "score": 10, "last_activity_date": 1588336962, "last_edit_date": 1588336962, "creation_date": 1565696664, "answer_id": 57477060, "question_id": 57449356, "link": "https://stackoverflow.com/questions/57449356/is-cargo-clippy-a-superset-of-cargo-check/57477060#57477060", "title": "Is `cargo clippy` a superset of `cargo check`?", "body": "<p><a href=\"https://github.com/rust-lang/rust-clippy/blob/c154754b74577906c5d55d57f7daeff02d6a33e7/src/main.rs#L59\" rel=\"noreferrer\"><code>clippy</code> itself runs <code>cargo check</code></a>.</p>\n"}], "owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2391, "favorite_count": 3, "accepted_answer_id": 57477060, "answer_count": 1, "score": 11, "last_activity_date": 1588336962, "creation_date": 1565520837, "question_id": 57449356, "link": "https://stackoverflow.com/questions/57449356/is-cargo-clippy-a-superset-of-cargo-check", "title": "Is `cargo clippy` a superset of `cargo check`?", "body": "<p>I'm trying to build and test my Rust code with a CI, and I'm wondering whether <code>cargo clippy</code> (potentially with options) covers everything that <code>cargo check</code> does. Do I only need to run <code>cargo clippy</code>, or do I need to run both?</p>\n"}, {"tags": ["vector", "collections", "rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 12, "last_activity_date": 1565521226, "creation_date": 1565521226, "answer_id": 57449400, "question_id": 57449264, "link": "https://stackoverflow.com/questions/57449264/how-to-get-replace-a-value-in-rust-vec/57449400#57449400", "title": "How to get &amp; replace a value in Rust Vec?", "body": "<p>You can emulate this easily on any container that gives you mutable references to its elements using <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"noreferrer\"><code>std::mem::replace</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut v = vec![1, 2, 3, 4, 5, 6];\n\n    let got = std::mem::replace(&amp;mut v[3], 42);\n\n    println!(\"v = {:?}\", v);\n    println!(\"got = {:?}\", got);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f145116db5d80a7cdff04ef6081e2537\" rel=\"noreferrer\">Permalink to the playground</a>)</p>\n\n<p>Result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>v = [1, 2, 3, 42, 5, 6]\ngot = 4\n</code></pre>\n\n<hr>\n\n<p>In the case of <code>Vec</code>, should you want to replace a range of elements, you would be interested in the method <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.splice\" rel=\"noreferrer\"><code>splice</code></a>, which replaces values, and returns the old one. However, it is likely to be less efficient for a single value.</p>\n"}], "owner": {"reputation": 7374, "user_id": 593425, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ad54f71e8e63bf711680cf8f5f1e53c1?s=128&d=identicon&r=PG", "display_name": "Guy Korland", "link": "https://stackoverflow.com/users/593425/guy-korland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3468, "favorite_count": 1, "accepted_answer_id": 57449400, "answer_count": 1, "score": 9, "last_activity_date": 1565521662, "creation_date": 1565519991, "last_edit_date": 1592644375, "question_id": 57449264, "link": "https://stackoverflow.com/questions/57449264/how-to-get-replace-a-value-in-rust-vec", "title": "How to get &amp; replace a value in Rust Vec?", "body": "<p>What I'm looking for is a replace method:</p>\n<blockquote>\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn replace(&amp;mut self, index: usize, element: T) -&gt; T\n</code></pre>\n<p>Replaces an element at position index within the vector and returns the existing value.</p>\n</blockquote>\n<p>Calling remove+insert seems wasteful to me.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565531062, "post_id": 57448690, "comment_id": 101376002, "body": "Welcome to Stack Overflow! I have edited your post to be more explicit about what I think you want (to make a linked list without a <code>struct List</code>, only <code>Node</code>s). Please check over it and make sure you agree with my edits."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1565531141, "post_id": 57448690, "comment_id": 101376021, "body": "I&#39;m not sure what you want the <code>pop</code> function to do, though. Your data structure <i>can&#39;t</i> represent an empty list! What should <code>list.pop()</code> do when <code>list</code> only contains one element?"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1565540555, "post_id": 57448690, "comment_id": 101378135, "body": "You might want to have a look at something like <a href=\"https://docs.rs/typed-arena/\" rel=\"nofollow noreferrer\"><code>typed_arena</code></a>"}, {"owner": {"reputation": 1, "user_id": 7993036, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7b5d1e842de5701a91caf679ac20ffc?s=128&d=identicon&r=PG&f=1", "display_name": "\u9673\u5955\u71b9", "link": "https://stackoverflow.com/users/7993036/%e9%99%b3%e5%a5%95%e7%86%b9"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565581168, "post_id": 57448690, "comment_id": 101384811, "body": "@trentcl I do consider the problem of not able to represent empty list, since in C we can just use a pointer to NULL to indicate, so using a node struct might be enough for C implementation. However, since Leetcode&#39;s linked-list is defined in the &quot;C&quot; style, I am not sure if this is a valid or common idea in rust, or it just a malformed linked-list struct ?"}, {"owner": {"reputation": 1, "user_id": 7993036, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7b5d1e842de5701a91caf679ac20ffc?s=128&d=identicon&r=PG&f=1", "display_name": "\u9673\u5955\u71b9", "link": "https://stackoverflow.com/users/7993036/%e9%99%b3%e5%a5%95%e7%86%b9"}, "edited": false, "score": 0, "creation_date": 1565582012, "post_id": 57448690, "comment_id": 101384910, "body": "And yes, not able to represent a empty list also lead to the undefined behavior of popping out a list with only one element..."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1565582021, "post_id": 57448690, "comment_id": 101384912, "body": "But <code>Node</code> isn&#39;t a pointer, it&#39;s just... a node. Structs can&#39;t be NULL, even in C. That&#39;s more or less the point of the <code>List</code> struct. The leetcode example, whatever it is, must be defined differently."}], "owner": {"reputation": 1, "user_id": 7993036, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7b5d1e842de5701a91caf679ac20ffc?s=128&d=identicon&r=PG&f=1", "display_name": "\u9673\u5955\u71b9", "link": "https://stackoverflow.com/users/7993036/%e9%99%b3%e5%a5%95%e7%86%b9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1565530903, "creation_date": 1565514499, "last_edit_date": 1565530903, "question_id": 57448690, "link": "https://stackoverflow.com/questions/57448690/singular-linked-list-like-too-many-lists-example-but-without-pointer-to-head", "title": "Singular linked list like &quot;Too many lists&quot; example but without pointer to head", "body": "<p>I have tried the examples in <a href=\"https://rust-unofficial.github.io/too-many-lists/index.html#learn-rust-with-entirely-too-many-linked-lists\" rel=\"nofollow noreferrer\">Learn Rust with Entirely Too Many LInked Lists</a>, but I would like to make a linked list structure without a dedicated struct to point to the head of the list. </p>\n\n<p>In the <code>pop()</code> function, since I only have a mutable reference to the node, so I \"cannot move out of borrowed content\". Is there a way to take out the node with only mutable reference or ownership is the requirement?</p>\n\n<p>I have tried to use <code>mem::replace()</code>, but it's not for removing elements. Also the replacement on initializing a new node is pretty weird. Is there a more elegant way of writing a linked list without head pointer?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::mem;\ntype Link&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\npub struct Node&lt;T&gt; {\n    val: T,\n    next: Link&lt;T&gt;,\n}\n\nimpl&lt;T:Copy&gt; Node&lt;T&gt; {\n    fn new(val: T) -&gt; Self {\n        Node { \n            val: val,\n            next: None,\n        }\n    }\n\n    fn push(&amp;mut self, val: T) {\n        let mut new_node = Node {\n            val: val,\n            next: Some(Box::new(mem::replace(self, Node::new(val)))),\n        };\n        self = &amp;mut new_node;\n    }\n\n    pub fn pop(mut self) -&gt; Option&lt;T&gt; {\n        let val = self.val;\n        self = *self.next.unwrap();\n        Some(val)\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1565500611, "post_id": 57446938, "comment_id": 101370784, "body": "<a href=\"https://docs.rs/libloading/0.5.2/libloading/struct.Library.html#impl-Send\" rel=\"nofollow noreferrer\">docs.rs/libloading/0.5.2/libloading/&hellip;</a> You can share the Library instance around."}], "answers": [{"tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 0, "last_activity_date": 1565521771, "last_edit_date": 1565521771, "creation_date": 1565520765, "answer_id": 57449346, "question_id": 57446938, "link": "https://stackoverflow.com/questions/57446938/injecting-dynamic-lib-into-a-thread/57449346#57449346", "title": "Injecting dynamic lib into a thread", "body": "<p>The shared libraries are <a href=\"https://stackoverflow.com/a/9553380/257568\">loaded</a> into a <em>process</em>. It shouldn't matter what <em>thread</em> you've used to load the library, the code should equally be available to all the threads once the library has been loaded. This is because the POSIX threads share the same memory space, namely the memory space of the <em>process</em>.</p>\n\n<p>When a CPU jumps to a memory address belonging to a loaded library, the memory is already there, mapped by the operating system into the process memory space. Threads has no influence whatsoever on the availability of the said memory address.</p>\n\n<p>Keep in mind though, that according to the <a href=\"https://docs.rs/libloading/0.5.2/libloading/struct.Library.html#thread-safety\" rel=\"nofollow noreferrer\">library documentation</a> you might want to avoid calling <code>Library::new</code> from multiple threads simultaneously.</p>\n"}], "owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 57449346, "answer_count": 1, "score": 0, "last_activity_date": 1565521771, "creation_date": 1565490004, "question_id": 57446938, "link": "https://stackoverflow.com/questions/57446938/injecting-dynamic-lib-into-a-thread", "title": "Injecting dynamic lib into a thread", "body": "<p>I am using the <a href=\"https://crates.io/crates/libloading\" rel=\"nofollow noreferrer\">libloading</a> crate to load a dynamic library that I need to use in multiple threads.</p>\n\n<pre><code>let lib = Library::new(\"lib.dylib\").unwrap();\n</code></pre>\n\n<p>Do I load the library on each thread, or is there a way to inject/share the library into a thread when the thread is started?</p>\n"}, {"tags": ["rust", "raspberry-pi", "embedded-linux", "interrupt"], "comments": [{"owner": {"reputation": 693, "user_id": 1188717, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/b6e97c0e8dd39b7684a0267cbf77d30a?s=128&d=identicon&r=PG", "display_name": "risingtiger", "link": "https://stackoverflow.com/users/1188717/risingtiger"}, "edited": false, "score": 0, "creation_date": 1565458214, "post_id": 57444267, "comment_id": 101364603, "body": "And, I know that the Rust crate tokio exists which may handle this, but it seems way overkill to include the entire tokio library to achieve such a simple task."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1565458806, "post_id": 57444267, "comment_id": 101364764, "body": "Well, aren&#39;t you including the Photon&#39;s library when you do it in C++? Why would you expect Rust to have something built-in but be fine with using a library in C++?"}, {"owner": {"reputation": 693, "user_id": 1188717, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/b6e97c0e8dd39b7684a0267cbf77d30a?s=128&d=identicon&r=PG", "display_name": "risingtiger", "link": "https://stackoverflow.com/users/1188717/risingtiger"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1565459232, "post_id": 57444267, "comment_id": 101364886, "body": "I&#39;m not expecting the core Rust lang to have a high level library built in, necessarily. I&#39;m just looking for a lightweight solution. And, if Particle has written a library in C to access System Timers, surely, there must be a way to do access System Timers in Rust -- even if its not as convenient as a two liner."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1565460302, "post_id": 57444267, "comment_id": 101365133, "body": "So, a &quot;just use <a href=\"https://doc.rust-lang.org/nomicon/ffi.html\" rel=\"nofollow noreferrer\">FFI</a>&quot; answer would be fine with you?"}, {"owner": {"reputation": 66560, "user_id": 9072753, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EPmGy.jpg?s=128&g=1", "display_name": "KamilCuk", "link": "https://stackoverflow.com/users/9072753/kamilcuk"}, "edited": false, "score": 0, "creation_date": 1565461988, "post_id": 57444267, "comment_id": 101365486, "body": "<code>with Debian</code> - which &quot;system timers&quot; do you have in mind? There is no such thing as &quot;system timer interrupt&quot; on linux on user side. Unless they implemented custom module for that. If they access some &quot;system timers&quot; (somehow I don&#39;t believe such thing exists), you surely will see calls in <code>strace</code> to those timers. Mostly such things are implemented as a thread that just waits for some action. And you can do the same in rust."}, {"owner": {"reputation": 693, "user_id": 1188717, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/b6e97c0e8dd39b7684a0267cbf77d30a?s=128&d=identicon&r=PG", "display_name": "risingtiger", "link": "https://stackoverflow.com/users/1188717/risingtiger"}, "edited": false, "score": 0, "creation_date": 1565464639, "post_id": 57444267, "comment_id": 101366115, "body": "Mark Phillipp wrote an article detailing the two system timers present on the raspberry pi -- one of which is the ARM AP804. He then gets into low level ARM assembly to access it. I&#39;m coming into this whole system timer thing without much knowledge of low level computer firmware, so I fully acknowledge I may be making assumptions about whats possible on the C/Rust level. --- article ref: <a href=\"https://www.studica.com/blog/raspberry-pi-timer-embedded-environments\" rel=\"nofollow noreferrer\">studica.com/blog/raspberry-pi-timer-embedded-environments</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1565598441, "post_id": 57444267, "comment_id": 101389224, "body": "This article runs on a bare Pi (ie. without an OS) and accesses the timer using specialized assembly. If you want to do the same in Rust, I suggest you start by reading some of the bare-metal tutorials like <a href=\"https://medium.com/@thiagopnts/raspberry-pi-bare-metal-programming-with-rust-a6f145e84024\" rel=\"nofollow noreferrer\">medium.com/@thiagopnts/&hellip;</a> you can&#39;t access those timers with an OS running (in any language)."}, {"owner": {"reputation": 693, "user_id": 1188717, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/b6e97c0e8dd39b7684a0267cbf77d30a?s=128&d=identicon&r=PG", "display_name": "risingtiger", "link": "https://stackoverflow.com/users/1188717/risingtiger"}, "edited": false, "score": 0, "creation_date": 1566255880, "post_id": 57444267, "comment_id": 101591318, "body": "Thanks Jmb for the reply. I\u2019m starting to gather that. The timer does indeed seem to be only accessed via the Linux kernel. For this reason, among others, it seems senseless to use Raspberry Pi for most embedded programming needs."}], "owner": {"reputation": 693, "user_id": 1188717, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/b6e97c0e8dd39b7684a0267cbf77d30a?s=128&d=identicon&r=PG", "display_name": "risingtiger", "link": "https://stackoverflow.com/users/1188717/risingtiger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 278, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1565458124, "creation_date": 1565458124, "question_id": 57444267, "link": "https://stackoverflow.com/questions/57444267/how-to-access-system-timer-interrupts-in-rust", "title": "How to access System Timer Interrupts in Rust", "body": "<p>It seems that Rust would have a simple way to access system timer interrupts, but, alas, I'm not finding it. </p>\n\n<p>I am running a stepper motor from a Raspberry Pi Compute 3+ module with Debian implemented via the Rust lang. I need to 'pulse' the GPIO pin to move the stepper motor (essentially PWM).</p>\n\n<p>On Particle's Photon this is accomplished like this:</p>\n\n<pre><code>Timer timerPeriodic(100, []() {   pulseStepper();   });\ntimerPeriodic.start();\n</code></pre>\n\n<p>This would execute 10 times a second. I need something like this in Rust. </p>\n\n<p>Yes, I know I can setup a loop and do constant polling with something like this:</p>\n\n<pre><code>if (millis() - this-&gt;old_time &gt;= this-&gt;speed) { ... }\n</code></pre>\n\n<p>But I would rather stay away from polling and use event driven architectures instead (of course, I'm open to suggestions why polling might be better anyway for this situation).</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 19030, "user_id": 69746, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8bb00903daaba6a14c238611b21ab677?s=128&d=identicon&r=PG", "display_name": "Xolve", "link": "https://stackoverflow.com/users/69746/xolve"}, "edited": false, "score": 0, "creation_date": 1565469686, "post_id": 57443554, "comment_id": 101367216, "body": "Thanks :-) I kinda knew this but still need pedantic explanation!"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1565451939, "creation_date": 1565451939, "answer_id": 57443554, "question_id": 57443320, "link": "https://stackoverflow.com/questions/57443320/mutex-can-deference-structs-but-not-primitives/57443554#57443554", "title": "Mutex can deference struct&#39;s but not primitives", "body": "<p><code>c_int</code> is not actually the integer or <code>Counter</code> instance, it's a <code>std::sync::MutexGuard&lt;'_, T&gt;</code>.</p>\n\n<p>The reason why <code>c_int.count += 1;</code> works in the first example is <code>Deref</code> coercion: Wherever it sees an expression such as <code>foo.bar</code>, the compiler checks if <code>foo</code> has a member <code>bar</code>, and if it doesn't, it dereferences it, and tries again. In your case, because <code>c_int</code> is a mutex guard, it doesn't have a <code>count</code> member, the compiler will try <code>(*c_int).count</code>.</p>\n\n<p>Now, <code>std::sync::MutexGuard&lt;'_, T&gt;</code> does implement <code>Deref&lt;Target=T&gt;</code>, which in your case means you can get a <code>Counter</code> out of the mutex guard, and the compiler stops there.</p>\n\n<p>However, in the integer case, you only have <code>c_int += 1</code>, assignment by itself does not trigger <code>Deref</code> coercion, so the compiler rightfully gives you an error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>8 |         (c_int) += 1;\n  |         -------^^^^^\n  |         |\n  |         cannot use `+=` on type `std::sync::MutexGuard&lt;'_, {integer}&gt;`\n</code></pre>\n\n<p>To get the second example to work, you have to dereference yourself:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>*c_int += 1;\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">What are Rust's exact auto-dereferencing rules?</a></li>\n</ul>\n"}], "owner": {"reputation": 19030, "user_id": 69746, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/8bb00903daaba6a14c238611b21ab677?s=128&d=identicon&r=PG", "display_name": "Xolve", "link": "https://stackoverflow.com/users/69746/xolve"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 57443554, "answer_count": 1, "score": 3, "last_activity_date": 1565451939, "creation_date": 1565449852, "question_id": 57443320, "link": "https://stackoverflow.com/questions/57443320/mutex-can-deference-structs-but-not-primitives", "title": "Mutex can deference struct&#39;s but not primitives", "body": "<p>The following code in which a struct <code>Counter</code> wraps a <code>u32</code>. I am using <code>Arc</code> to wrap and <code>Mutex</code> to allow safe and shared access to the value. I have omitted the threaded code to provide a simple example:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\n\nfn main() {\n    #[derive(Debug)]\n    struct Counter {\n        count: u32,\n    }\n\n    let counter = Arc::new(Mutex::new(Counter { count: 0 }));\n\n    for _ in 0..10 {\n        let mut c_int = counter.lock().unwrap();\n        c_int.count += 1;\n    }\n\n    println!(\"{:?}\", counter.lock().unwrap());\n}\n</code></pre>\n\n<p>Here <code>counter.lock().unwrap()</code> is able to transparently lock the mutex and unwrap the result and I don't need to dereference the <code>Arc</code>. Also dereference on <code>c_int</code> works transparently.</p>\n\n<p>Consider following code where <code>Counter</code> is replaces with <code>u32</code>:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\n\nfn main() {\n    let counter = Arc::new(Mutex::new(32));\n\n    for _ in 0..10 {\n        let mut c_int = counter.lock().unwrap();\n        c_int += 1;\n    }\n\n    println!(\"{:?}\", counter.lock().unwrap());\n}\n</code></pre>\n\n<p>It wouldn't compile because <code>c_int += 1</code> is not valid as it doesn't derefernces to u32.</p>\n\n<p>My questions are:</p>\n\n<ol>\n<li><p>Why structs are special while primitives are not while using through a smart pointer like <code>Mutex</code>?</p></li>\n<li><p>How I can use functions of <code>Mutex</code> directly on an <code>Arc</code>?</p></li>\n</ol>\n\n<p>I think both have to do with <code>Deref</code> but not sure how.</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 1326, "user_id": 1836144, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e250d748ff6c2ff23bc4550e0f0971f5?s=128&d=identicon&r=PG", "display_name": "little-dude", "link": "https://stackoverflow.com/users/1836144/little-dude"}, "edited": false, "score": 0, "creation_date": 1565502090, "post_id": 57446313, "comment_id": 101370951, "body": "Yes but I want that <code>&#39;static</code> bound, because <a href=\"https://docs.rs/failure/0.1.5/failure/trait.Fail.html#impl-Fail-3\" rel=\"nofollow noreferrer\"><code>failure::Fail</code></a> is implemented for <code>Send + Sync + Error + &#39;static</code>. Sorry I should have made the question clearer."}], "tags": [], "owner": {"reputation": 303, "user_id": 8414238, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-65YNUNKtwfU/AAAAAAAAAAI/AAAAAAAAACw/JRZyvo0sUbQ/photo.jpg?sz=128", "display_name": "Nicol&#225;s Abram", "link": "https://stackoverflow.com/users/8414238/nicol%c3%a1s-abram"}, "is_accepted": false, "score": 1, "last_activity_date": 1565479138, "creation_date": 1565479138, "answer_id": 57446313, "question_id": 57442885, "link": "https://stackoverflow.com/questions/57442885/lifetime-bound-on-associated-type-is-rejected-although-it-seems-valid/57446313#57446313", "title": "lifetime bound on associated type is rejected although it seems valid", "body": "<p>I'm still not sure <em>why</em>, but it seems just removing the 'static bound on the error worked?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d4f46a0ad9a5dd7dc538fe4e197d823d\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d4f46a0ad9a5dd7dc538fe4e197d823d</a></p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1579812686, "last_edit_date": 1579812686, "creation_date": 1565530056, "answer_id": 57450327, "question_id": 57442885, "link": "https://stackoverflow.com/questions/57442885/lifetime-bound-on-associated-type-is-rejected-although-it-seems-valid/57450327#57450327", "title": "lifetime bound on associated type is rejected although it seems valid", "body": "<p>This appears to be a gap in the compiler's ability to reason about lifetimes and associated types.</p>\n\n<p>Sometimes, in order to help the compiler, you can add a generic parameter to alias an associated type. This parameter doesn't \"count\" in that it doesn't make the item \"more generic\", but because generics are resolved at use instead of declaration, it defers the hard part of type checking until the exact types are known. In other words: the compiler might be able to prove that any <em>particular</em> <code>T::Error</code> works, but it can't quite prove that <em>every</em> <code>T::Error</code> must work, so we introduce a new parameter <code>E</code> which is bound to be <code>T::Error</code> and tell the compiler to figure out what <code>E</code> is only when we try to use it.</p>\n\n<p>The following works (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=880824bf42db0476167dccc9bc20032c\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>impl&lt;'a, T, E&gt; Deserializable&lt;T&gt; for MyBuffer&lt;'a&gt;\nwhere\n    T: TryFrom&lt;&amp;'a [u8], Error = E&gt;,\n    E: Error + Sync + Send + 'static,\n{\n    // ...\n}\n</code></pre>\n\n<p>Instead of bounding <code>T::Error</code>, we introduce a new type parameter <code>E</code> with the bounds we want and constrain <code>T</code> such that its <code>TryFrom::Error</code> is <code>E</code>. This is logically (as far as I can tell) the same thing as what you wrote, but it compiles without complaint.</p>\n\n<p>I can't find official documentation that refers to this; it may be an inherent limitation of the solver, or merely a bug.</p>\n"}], "owner": {"reputation": 1326, "user_id": 1836144, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e250d748ff6c2ff23bc4550e0f0971f5?s=128&d=identicon&r=PG", "display_name": "little-dude", "link": "https://stackoverflow.com/users/1836144/little-dude"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 308, "favorite_count": 1, "accepted_answer_id": 57450327, "answer_count": 2, "score": 3, "last_activity_date": 1579812686, "creation_date": 1565446315, "last_edit_date": 1565502201, "question_id": 57442885, "link": "https://stackoverflow.com/questions/57442885/lifetime-bound-on-associated-type-is-rejected-although-it-seems-valid", "title": "lifetime bound on associated type is rejected although it seems valid", "body": "<p>I have a piece of code that does not compile and that can be reduced to this snippet:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error;\nuse std::convert::TryFrom;\n\n// A trait that provides methods for parsing data into a type T.\npub trait Deserializable&lt;T&gt; {\n    // some methods\n}\n\npub struct MyBuffer&lt;'a&gt; {\n    inner: &amp;'a [u8]\n}\n\nimpl&lt;'a, T&gt; Deserializable&lt;T&gt; for MyBuffer&lt;'a&gt; \nwhere\n    T: TryFrom&lt;&amp;'a [u8]&gt;,\n    &lt;T as TryFrom&lt;&amp;'a [u8]&gt;&gt;::Error: Error + Sync + Send + 'static \n{\n    // some methods to implement\n}\n\nfn main() {}\n</code></pre>\n\n<p>The compiler rejects this program with a confusing error message:</p>\n\n<pre><code>error[E0310]: the associated type `&lt;T as std::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::Error` may not live long enough\n  --&gt; src/main.rs:13:13\n   |\n13 | impl&lt;'a, T&gt; Deserializable&lt;T&gt; for MyBuffer&lt;'a&gt; \n   |             ^^^^^^^^^^^^^^^^^\n   |\n   = help: consider adding an explicit lifetime bound `&lt;T as std::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::Error: 'static`...\nnote: ...so that the type `&lt;T as std::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::Error` will meet its required lifetime bounds\n  --&gt; src/main.rs:13:13\n   |\n13 | impl&lt;'a, T&gt; Deserializable&lt;T&gt; for MyBuffer&lt;'a&gt; \n   |             ^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>The error suggests that I add the <code>'static</code> lifetime bound, but I already added it:</p>\n\n<pre><code>consider adding an explicit lifetime bound `&lt;T as std::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::Error: 'static`\n</code></pre>\n\n<p>Can someone explain why this program does not compile, and/or how to fix it (if possible)? It seems to me that it <em>should</em> be possible to have <code>&lt;T as TryFrom&lt;&amp;'a [u8]&gt;&gt;::Error</code> to be <code>'static</code> even though <code>T</code> itself is bound to <code>'a</code>.</p>\n\n<p>The reason I want <code>Error</code> to be <code>'static</code> is that I use <code>failure</code> and <a href=\"https://docs.rs/failure/0.1.5/failure/trait.Fail.html#impl-Fail-3\" rel=\"nofollow noreferrer\"><code>failure::Fail</code></a> is implemented for <code>Send + Sync + Error + 'static</code>.</p>\n"}, {"tags": ["generics", "rust", "dereference"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 6, "creation_date": 1565440159, "post_id": 57442126, "comment_id": 101360472, "body": "<code>Rc&lt;i32&gt;</code> may not implement <code>IsSend</code>, but <code>i32</code> does, and dot notation invokes <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">auto-deref</a>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565445204, "post_id": 57442126, "comment_id": 101361621, "body": "@trentcl Could you make a real answer out of that?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565456312, "post_id": 57442126, "comment_id": 101364146, "body": "In an hour or two..."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565456371, "post_id": 57442126, "comment_id": 101364157, "body": "Oops, it looks a bit mean of me to post my &quot;stolen&quot; answer just a few seconds after @trentcl replied :("}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1565458771, "post_id": 57442126, "comment_id": 101364753, "body": "@SOFe Not to worry! Saves me the trouble :-)"}], "answers": [{"tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": true, "score": 2, "last_activity_date": 1565456737, "last_edit_date": 1565456737, "creation_date": 1565456325, "answer_id": 57444062, "question_id": 57442126, "link": "https://stackoverflow.com/questions/57442126/why-are-trait-bounds-for-send-on-trait-implementations-ignored/57444062#57444062", "title": "Why are trait bounds for Send on trait implementations ignored?", "body": "<p>Have a look at <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cd0564d581b50e05d20e8f3dc54af7b5\" rel=\"nofollow noreferrer\">this slightly modified version of your playground</a></p>\n\n<pre><code>use std::any::TypeId;\n\ntrait IsSend {\n    fn is_send(&amp;self);    \n}\n\nimpl&lt;T: Send + 'static&gt; IsSend for T {\n    fn is_send(&amp;self){\n        println!(\"TypeId of T: {:?}\", TypeId::of::&lt;T&gt;());\n    }\n}\n\nfn main() -&gt; Result&lt;(),Box&lt;dyn std::error::Error&gt;&gt; {\n    println!(\"TypeId of i32: {:?}\", TypeId::of::&lt;i32&gt;());\n    println!(\"TypeId of Rc&lt;i32&gt;: {:?}\", TypeId::of::&lt;std::rc::Rc&lt;i32&gt;&gt;());\n\n     let i = std::rc::Rc::new(43);\n     i.is_send(); // (!!) no compiler error although Rc is not Send\n     Ok(())\n}\n</code></pre>\n\n<p>And we have the result:</p>\n\n<pre><code>TypeId of i32: TypeId { t: 13431306602944299956 }\nTypeId of Rc&lt;i32&gt;: TypeId { t: 1918842018359854094 }\nTypeId of T: TypeId { t: 13431306602944299956 }\n</code></pre>\n\n<p>I changed:</p>\n\n<ul>\n<li>Added a few <code>println!</code> calls so that we can see the TypeId of the types</li>\n<li>Added a requirement <code>T: 'static</code>, due to <code>TypeId</code> constraints. This should not affect our answer, since both <code>Rc&lt;i32&gt;</code> and <code>i32</code> are <code>'static</code>.</li>\n</ul>\n\n<p>It can be seen that <code>T</code> is resolved as <code>i32</code> instead of <code>Rc&lt;i32&gt;</code>. That is, <code>is_send</code> is called with <code>T = i32</code> rather than <code>T = Rc&lt;i32&gt;</code>.</p>\n\n<p>This is because <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html?search=#impl-Deref\" rel=\"nofollow noreferrer\"><code>Rc&lt;T&gt;</code> implements <code>Deref&lt;Target = T&gt;</code></a>. When you call <code>i.is_send()</code>, it is actually equivalent to <code>(*i).is_send()</code>, and <code>*i</code> is an <code>i32</code>, which is a <code>Send</code>. The compiler attempts to perform dereferencing when you use the dot operator to call a method on a value until the type bounds are satisfied.</p>\n\n<p>To show this, let's <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d86d7b38b3e8f15931d7c70e79523048\" rel=\"nofollow noreferrer\">try changing <code>Rc</code> to <code>Arc</code></a>, where <code>Arc</code> implements <code>Send</code>. You can see that <code>T</code> now has the same TypeId as <code>Arc&lt;i32&gt;</code> rather than <code>i32</code>. This is because <code>Arc</code> already satisfies the <code>T: Send</code> bound, and no further dereferencing is required.</p>\n\n<pre><code>use std::any::TypeId;\nuse std::sync::Arc;\n\ntrait IsSend {\n    fn is_send(&amp;self);    \n}\n\nimpl&lt;T: Send + 'static&gt; IsSend for T {\n    fn is_send(&amp;self){\n        println!(\"TypeId of T: {:?}\", TypeId::of::&lt;T&gt;());\n    }\n}\n\nfn main() -&gt; Result&lt;(),Box&lt;dyn std::error::Error&gt;&gt; {\n    println!(\"TypeId of i32: {:?}\", TypeId::of::&lt;i32&gt;());\n    println!(\"TypeId of Arc&lt;i32&gt;: {:?}\", TypeId::of::&lt;Arc&lt;i32&gt;&gt;());\n\n     let i = Arc::new(43);\n     i.is_send(); // (!!) no compiler error although Rc is not Send\n     Ok(())\n}\n</code></pre>\n\n<pre><code>TypeId of i32: TypeId { t: 13431306602944299956 }\nTypeId of Arc&lt;i32&gt;: TypeId { t: 3504454246784010795 }\nTypeId of T: TypeId { t: 3504454246784010795 }\n</code></pre>\n"}], "owner": {"reputation": 383, "user_id": 1752169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69b1c11b3939e22c79f66443e0ac761e?s=128&d=identicon&r=PG", "display_name": "user1752169", "link": "https://stackoverflow.com/users/1752169/user1752169"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 57444062, "answer_count": 1, "score": 8, "last_activity_date": 1565540386, "creation_date": 1565439830, "last_edit_date": 1565540386, "question_id": 57442126, "link": "https://stackoverflow.com/questions/57442126/why-are-trait-bounds-for-send-on-trait-implementations-ignored", "title": "Why are trait bounds for Send on trait implementations ignored?", "body": "<p>Why are trait bounds for auto trait <code>Send</code> on trait implementations ignored?  (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=59afbb47cdc4dabed291eda2782e928f\" rel=\"nofollow noreferrer\">Playground(1)</a>) </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait IsSend {\n    fn is_send(&amp;self);\n}\n\nimpl&lt;T: Send&gt; IsSend for T {\n    fn is_send(&amp;self) {}\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let i = std::rc::Rc::new(43);\n    i.is_send(); // (!!) no compiler error although Rc&lt;...&gt; is not Send\n    Ok(())\n}\n</code></pre>\n\n<p>For example using a trait bound for a self defined trait (X) it works:\n(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1dc6fff7f75d302563390711dcb239fc\" rel=\"nofollow noreferrer\">Playground(2)</a>)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait X {}\n\ntrait IsSend {\n    fn is_send(&amp;self);\n}\n\nimpl&lt;T: X&gt; IsSend for T {\n    fn is_send(&amp;self) {}\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let i = std::rc::Rc::new(43);\n    i.is_send(); // (ok) compiler error as Rc&lt;...&gt; does not implement X\n    Ok(())\n}\n</code></pre>\n\n<p>Even more confusing, using a trait bound on a function it works as expected: (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fc246da5c5388f1d32606273906b4cf7\" rel=\"nofollow noreferrer\">Playground(3)</a>)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn is_send&lt;T: Send&gt;(_s: &amp;T) {}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let i = std::rc::Rc::new(43);\n    is_send(&amp;i); // (ok) compiler as Rc&lt;...&gt; is not Send\n    Ok(())\n}\n</code></pre>\n\n<p>It looks like the auto trait <code>Send</code> (or auto traits in general) is treated specially. However, I have not found any documentation about this. Is this a bug or just my lack of understanding :-)?</p>\n"}, {"tags": ["function", "constructor", "rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565438664, "post_id": 57440412, "comment_id": 101360200, "body": "Consider writing <code>Constrained</code> as a struct generic over a (possibly zero-sized) type that implements a <code>Constraint</code> trait. The struct governs your data layout and the trait governs behavior. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ea56f90986b222c2452c8a8039a226ea\" rel=\"nofollow noreferrer\">Here&#39;s one way to do it</a>, but I can think of several variations."}], "answers": [{"tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": true, "score": 1, "last_activity_date": 1565435269, "last_edit_date": 1565435269, "creation_date": 1565427874, "answer_id": 57440787, "question_id": 57440412, "link": "https://stackoverflow.com/questions/57440412/implementing-constructor-function-in-rust-trait/57440787#57440787", "title": "Implementing constructor function in rust trait", "body": "<p>From your code, it seems that you have several requirements:</p>\n\n<ul>\n<li>The implementing struct must provide storage for a field <code>Option&lt;f64&gt;</code></li>\n<li>The implementation must provide two constants, MAX and MIN.</li>\n</ul>\n\n<p>What you are really looking for is const generics on the struct. Unfortunately, it is still a highly unstable and incomplete nightly feature as of August 2019. Alternatively, you might resort to macros.</p>\n\n<p>The <code>derive_more</code> crate allows you to derive <code>From&lt;Option&lt;f64&gt;&gt;</code> for each implementating struct tuple that contains exactly one field. That is, you might want this:</p>\n\n<pre><code>#[derive(From)]\npub struct A(Option&lt;f64&gt;);\n\n// just a blanket impl with two consts\n</code></pre>\n\n<p>Then your trait can require implementors to also implement <code>From&lt;Option&lt;f64&gt;&gt;</code>, which is the required constructor here:</p>\n\n<pre><code>pub trait Constrained : From&lt;Option&lt;f64&gt;&gt; {\n    const MAX: f64;\n    const MIN: f64;\n\n    // Your is_constrained method\n    // Use Self::from(None) instead of Self(None)\n}\n</code></pre>\n\n<p>This improves your attempt in that <code>From</code> can be automatically derived from an existing macro (it is also an idiomatic constructor in Rust style).</p>\n\n<p>The whole point is that Rust traits must not impose any requirements on the precise structure of the implementors. It is also valid for some implementor to have another unused (or irrelevant to <code>Constrained</code>) field; then your trait is not flexible enough.</p>\n\n<hr>\n\n<p>Side note: it also appears that your trait might be inconvenient to pass around in the future, since trait const items aren't very flexible. Perhaps you will want to use macros-by-example to generate the whole definition+impl in the future.</p>\n"}], "owner": {"reputation": 77, "user_id": 4409029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/180a3a92dbaf9cd07205d0bb2abb3177?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Schaadt", "link": "https://stackoverflow.com/users/4409029/daniel-schaadt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1164, "favorite_count": 1, "accepted_answer_id": 57440787, "answer_count": 1, "score": 1, "last_activity_date": 1565435269, "creation_date": 1565423912, "question_id": 57440412, "link": "https://stackoverflow.com/questions/57440412/implementing-constructor-function-in-rust-trait", "title": "Implementing constructor function in rust trait", "body": "<p>I'd like to define several similar types struct A(Option), struct B(Option) etc., where a floating point value is constrained within a range. The structs may differ further a little bit in their behaviour, but the constructor of each type ist the same: it returns Some(value) if the value is already constrained, otherwise None.\nTo avoid having to implement each constructor individually for each type; I'd like to implement it in the trait. Is this really not possible?</p>\n\n<p>Using the following below, I am told that Self is not a function and that I </p>\n\n<blockquote>\n  <p>can't use <code>Self</code> as a constructor, you must use the implemented struct</p>\n</blockquote>\n\n<p>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct A(Option&lt;f64&gt;);\n\ntrait Constrained {\n    const MIN: f64;\n    const MAX: f64;\n\n    fn is_constrained(value: f64) -&gt; bool {\n        value &gt;= Self::MIN &amp;&amp; value &lt;= Self::MAX\n    }\n\n    fn new(value: f64) -&gt; Self where Self: std::marker::Sized {\n        if Self::is_constrained(value) {\n            Self(Some(value))\n        } else {\n            Self(None)\n        }\n    }\n}\n\nimpl Constrained for A {\n    const MIN: f64 = -360.0;\n    const MAX: f64 = 360.0;\n/*\n    fn new(value: f64) -&gt; A {\n        if Self::is_constrained(value) {\n            Self(Some(value))\n        } else {\n            Self(None)\n        }\n    }\n*/\n}\n\n\nfn main() {\n    let some_val: A = A::new(1000.0);\n    println!(\"{:?}\", some_val);\n}\n</code></pre>\n\n<p>Commenting out the implementation of the new function in the trait (starting before where), and uncommenting the impl for each indivdiual struct works of course, but this leads to unncessary code doubling for each type.\nIs there anything possible or planned to generalize this?</p>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 3, "last_activity_date": 1565416872, "creation_date": 1565416872, "answer_id": 57439711, "question_id": 57439297, "link": "https://stackoverflow.com/questions/57439297/rust-how-to-handle-error-precisely-and-gracefully/57439711#57439711", "title": "Rust -- How to handle error precisely and gracefully?", "body": "<p><code>Result</code> has a function called <code>or</code>, that allows you to forward the result if it's Ok, or transform it if it's an error. With that, you can do something like this:</p>\n\n<pre><code>fn foo(dir_a: &amp;Path, dir_b: &amp;Path, dir_c: &amp;Path) -&gt; Result&lt;(), MyError&gt; {\n    dir_a.read_dir().or(Err(MyError::DirAnotExist))?;\n    dir_b.read_dir().or(Err(MyError::DirBnotExist))?;\n    dir_c.read_dir().or(Err(MyError::DirCnotExist))?;\n\n    /* do something */\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 701, "user_id": 10005095, "user_type": "registered", "profile_image": "https://graph.facebook.com/144174703037393/picture?type=large", "display_name": "Evian", "link": "https://stackoverflow.com/users/10005095/evian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 57439711, "answer_count": 1, "score": 0, "last_activity_date": 1565416872, "creation_date": 1565410899, "question_id": 57439297, "link": "https://stackoverflow.com/questions/57439297/rust-how-to-handle-error-precisely-and-gracefully", "title": "Rust -- How to handle error precisely and gracefully?", "body": "<p>Sorry for naming this a so ambiguous title, but I can't come up with a better one.</p>\n\n<p>The <code>read_dir()</code> method defined in <code>std::fs</code> returns instances of <code>io::Result&lt;DirEntry&gt;</code>, which is the alias of <code>Result&lt;DirEntry, io::Error&gt;</code>. When the caller does not exist on file system, it returns the error.</p>\n\n<p>Now my code is</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>dir_a.read_dir();\ndir_b.read_dir();\ndir_c.read_dir();\n</code></pre>\n\n<p>And <code>dir_a</code>, <code>dir_b</code>, <code>dir_c</code> all may not exist. So these three statements may return the same <code>io::Error</code>, but for my program, <code>dir_a</code>, <code>dir_b</code> and <code>dir_c</code> have different meaning, where I want to handle the error for each one respectively.</p>\n\n<p>So I defined my own enum <code>MyError</code> as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum MyError {\n    Dir_a_not_exist,\n    Dir_b_not_exist,\n    Dir_c_not_exist,\n}\n</code></pre>\n\n<p>How can I transform the same <code>io::Error</code> to my different three <code>MyError</code>?</p>\n\n<p>My ugly way is to</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match dir_a.read_dir() {\n    Ok =&gt; match dir_b.read_dir() {\n              Ok =&gt; match dir_c.read_dir() {\n                        Ok =&gt; { /* do something */ },\n                        Err =&gt; return MyError::Dir_c_not_exist,\n                    },\n              Err =&gt; return MyError::Dir_b_not_exist,\n          },\n    Err =&gt; return MyError::Dir_a_not_exist,\n};\n</code></pre>\n\n<p>Is there any graceful way I can handle this?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "edited": false, "score": 0, "creation_date": 1565407093, "post_id": 57438955, "comment_id": 101355191, "body": "Thanks! Nice to see how I&#39;d go about implementing <code>into_values()</code>, but I think I&#39;ll use the into_iter().map() to avoid all the extra code."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 1, "last_activity_date": 1565405935, "creation_date": 1565405935, "answer_id": 57438955, "question_id": 57438461, "link": "https://stackoverflow.com/questions/57438461/get-the-vec-of-owned-values-from-a-hashmap/57438955#57438955", "title": "Get the Vec of owned values from a HashMap", "body": "<p><code>.into_iter().map(|(_, v)| v)</code> is the idiomatic way to do it. That not ugly at all.</p>\n\n<p>If you want you could do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::hash_map;\nuse std::collections::HashMap;\nuse std::iter::{ExactSizeIterator, FusedIterator};\n\nstruct IntoValues&lt;K, V&gt; {\n    iter: hash_map::IntoIter&lt;K, V&gt;,\n}\n\nimpl&lt;K, V&gt; IntoValues&lt;K, V&gt; {\n    fn new(map: HashMap&lt;K, V&gt;) -&gt; Self {\n        Self {\n            iter: map.into_iter(),\n        }\n    }\n}\n\nimpl&lt;K, V&gt; Iterator for IntoValues&lt;K, V&gt; {\n    type Item = V;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.iter.next().map(|(_, v)| v)\n    }\n\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        self.iter.size_hint()\n    }\n}\nimpl&lt;K, V&gt; ExactSizeIterator for IntoValues&lt;K, V&gt; {}\n\nimpl&lt;K, V&gt; FusedIterator for IntoValues&lt;K, V&gt; {}\n\ntrait HashMapTool {\n    type IntoValues;\n    type Item;\n    fn into_values(self) -&gt; Self::IntoValues;\n}\n\nimpl&lt;K, V&gt; HashMapTool for HashMap&lt;K, V&gt; {\n    type Item = V;\n    type IntoValues = IntoValues&lt;K, V&gt;;\n    fn into_values(self) -&gt; Self::IntoValues {\n        IntoValues::new(self)\n    }\n}\n\nfn main() {\n    let mut h: HashMap&lt;_, _&gt; = HashMap::new();\n    h.insert(1, \"foo\".to_owned());\n\n    let _vals: Vec&lt;_&gt; = h.into_values().collect();\n}\n</code></pre>\n"}], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 57438955, "answer_count": 1, "score": 1, "last_activity_date": 1565405935, "creation_date": 1565397347, "last_edit_date": 1565403655, "question_id": 57438461, "link": "https://stackoverflow.com/questions/57438461/get-the-vec-of-owned-values-from-a-hashmap", "title": "Get the Vec of owned values from a HashMap", "body": "<p>An algorithm I wrote builds a temporary <code>HashMap</code>. Once it's finished, I'm only interested in the <code>values</code> of the hashmap, so I'd like to transfer ownership of the values from the <code>HashMap&lt;K, V&gt;</code> to a <code>Vec&lt;V&gt;</code>.</p>\n\n<p>With a simplified example hashmap:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    use std::collections::HashMap;\n    let mut h: HashMap&lt;_, _&gt; = HashMap::new();\n    h.insert(1, \"foo\".to_owned());\n}\n</code></pre>\n\n<p>I can do:</p>\n\n<ul>\n<li><code>let vals: Vec&lt;&amp;String&gt; = h.values().collect();</code> - which is short and sweet, but the hashmap still owns the values;</li>\n<li><code>let vals: Vec&lt;String&gt; = h.values().cloned().collect()</code> (as in <a href=\"https://stackoverflow.com/questions/56724014/collect-values-of-a-hashmap-into-a-vector\">this question</a>) - the result is what I need, but I was taught to avoid the extra clones;</li>\n<li><code>let vals: Vec&lt;String&gt; = h.into_iter().map(|(_k, v)| v).collect();</code> - does what I need without a clone, but is a bit ugly.</li>\n</ul>\n\n<p>The actual values are a mid-sized struct (<code>{String, Vec&lt;String&gt;}</code>, under a KB total).</p>\n\n<p>Should I default to avoiding <code>clone</code> in this case or is it premature optimization? Is there an idiomatic way to do this that I'm missing?</p>\n"}, {"tags": ["rust", "rust-rocket"], "answers": [{"comments": [{"owner": {"reputation": 1076, "user_id": 962095, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/036cbb0fc02b72f0d5d06ec8f8246693?s=128&d=identicon&r=PG", "display_name": "Jonathan Mayer", "link": "https://stackoverflow.com/users/962095/jonathan-mayer"}, "edited": false, "score": 0, "creation_date": 1609518073, "post_id": 57441310, "comment_id": 115858097, "body": "When I tried this, I got <code>conflicting implementation for &quot;rocket::StaticRouteInfo&quot;</code> errors."}, {"owner": {"reputation": 8777, "user_id": 3102264, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/G69VV.jpg?s=128&g=1", "display_name": "mpromonet", "link": "https://stackoverflow.com/users/3102264/mpromonet"}, "reply_to_user": {"reputation": 1076, "user_id": 962095, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/036cbb0fc02b72f0d5d06ec8f8246693?s=128&d=identicon&r=PG", "display_name": "Jonathan Mayer", "link": "https://stackoverflow.com/users/962095/jonathan-mayer"}, "edited": false, "score": 0, "creation_date": 1609602696, "post_id": 57441310, "comment_id": 115875597, "body": "@JonathanMayer: I just try with <code>rustc 1.51.0-nightly</code> and <code>rocket v0.4.6</code> and the proposed answer still work. Which version are you using ?"}, {"owner": {"reputation": 1076, "user_id": 962095, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/036cbb0fc02b72f0d5d06ec8f8246693?s=128&d=identicon&r=PG", "display_name": "Jonathan Mayer", "link": "https://stackoverflow.com/users/962095/jonathan-mayer"}, "edited": false, "score": 0, "creation_date": 1609697512, "post_id": 57441310, "comment_id": 115897900, "body": "I&#39;ll try again this evening.  Possibly, the difference in my environment is that my paths are:  &quot;/foo/&lt;path..&gt;&quot; vs &quot;/foo/&lt;path..&gt;?bar=&lt;bar&gt;&quot;  Will retest tonight with nightly and report back."}, {"owner": {"reputation": 8777, "user_id": 3102264, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/G69VV.jpg?s=128&g=1", "display_name": "mpromonet", "link": "https://stackoverflow.com/users/3102264/mpromonet"}, "reply_to_user": {"reputation": 1076, "user_id": 962095, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/036cbb0fc02b72f0d5d06ec8f8246693?s=128&d=identicon&r=PG", "display_name": "Jonathan Mayer", "link": "https://stackoverflow.com/users/962095/jonathan-mayer"}, "edited": false, "score": 0, "creation_date": 1609700143, "post_id": 57441310, "comment_id": 115898736, "body": "This answer propose a solution to add index.html to a path if not specified, your case may be different"}], "tags": [], "owner": {"reputation": 8777, "user_id": 3102264, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/G69VV.jpg?s=128&g=1", "display_name": "mpromonet", "link": "https://stackoverflow.com/users/3102264/mpromonet"}, "is_accepted": true, "score": 1, "last_activity_date": 1609609008, "last_edit_date": 1609609008, "creation_date": 1565432771, "answer_id": 57441310, "question_id": 57437310, "link": "https://stackoverflow.com/questions/57437310/rocket-rs-optional-pathbuf-has-no-matching-routes/57441310#57441310", "title": "Rocket.rs: Optional PathBuf has no matching routes", "body": "<p>A multiple segments path cannot be empty.</p>\n<p>A different approach is to use 2 routes :</p>\n<ul>\n<li>one for the multiple segment <code>/demo/&lt;id&gt;/&lt;pathbuf..&gt;</code></li>\n<li>one for the empty segment <code>/demo/&lt;id&gt;</code> that redirect to <code>/demo/&lt;id&gt;/index.html</code></li>\n</ul>\n<p>A sample using rust <strong>nightly</strong> and rocket <strong>0.4</strong> :</p>\n<pre><code>#![feature(proc_macro_hygiene, decl_macro)]  \n#[macro_use] extern crate rocket;\n\nuse std::path::{Path,PathBuf};\nuse rocket::response::{Redirect,NamedFile};\n\n#[get(&quot;/demo/&lt;id&gt;/&lt;pathbuf..&gt;&quot;)]\nfn site_demo(id: usize, pathbuf: PathBuf) -&gt; Option&lt;NamedFile&gt; {\n    let demo = format!{&quot;static/projects/{:03}/demo/&quot;, id};\n    NamedFile::open(Path::new(&amp;demo).join(pathbuf)).ok()\n}\n\n#[get(&quot;/demo/&lt;pathbuf..&gt;&quot;, rank=2)]\nfn redirect(pathbuf: PathBuf) -&gt; Redirect {\n    Redirect::to(format!{&quot;/demo/{}/index.html&quot;, pathbuf.display()})\n}\n\nfn main() {\n    rocket::ignite().mount(&quot;/&quot;, routes![site_demo,redirect]).launch();\n}\n</code></pre>\n<p>A sample using rust <strong>stable</strong> and rocket <strong>0.5</strong> :</p>\n<pre><code>#[macro_use] extern crate rocket;\n\nuse std::path::{Path,PathBuf};\nuse rocket::response::{Redirect,NamedFile};\n\n#[get(&quot;/demo/&lt;id&gt;/&lt;pathbuf..&gt;&quot;)]\nasync fn site_demo(id: usize, pathbuf: PathBuf) -&gt; Option&lt;NamedFile&gt; {\n    let demo = format!{&quot;static/projects/{:03}/demo/&quot;, id};\n    NamedFile::open(Path::new(&amp;demo).join(pathbuf)).await.ok()\n}\n\n#[get(&quot;/demo/&lt;pathbuf..&gt;&quot;, rank=2)]\nfn redirect(pathbuf: PathBuf) -&gt; Redirect {\n    Redirect::to(format!{&quot;/demo/{}/index.html&quot;, pathbuf.display()})\n}\n\n#[launch]\nfn rocket() -&gt; rocket::Rocket {\n    rocket::ignite().mount(&quot;/&quot;, routes![site_demo,redirect])\n}\n</code></pre>\n<p>Like this <code>localhost:5050/demo/003/</code> will be redirect to <code>localhost:5050/demo/003/index.html</code> and then <code>localhost:5050/demo/003/index.html</code> will load <code>static/projects/003/demo/index.html</code></p>\n"}], "owner": {"reputation": 33, "user_id": 7775047, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a898546399ec0bd9bcfa29df86fe444?s=128&d=identicon&r=PG&f=1", "display_name": "Lukas", "link": "https://stackoverflow.com/users/7775047/lukas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 260, "favorite_count": 0, "accepted_answer_id": 57441310, "answer_count": 1, "score": 1, "last_activity_date": 1609609008, "creation_date": 1565386153, "question_id": 57437310, "link": "https://stackoverflow.com/questions/57437310/rocket-rs-optional-pathbuf-has-no-matching-routes", "title": "Rocket.rs: Optional PathBuf has no matching routes", "body": "<p>I'm creating a portfolio website and some projects have static HTML demos which I'd like to serve according to the ID in the URL. The route looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[get(\"/demo/&lt;id&gt;/&lt;pathbuf..&gt;\")]\nfn site_demo(id: usize, pathbuf: Option&lt;PathBuf&gt;) -&gt; Option&lt;NamedFile&gt; {\n    // set path according to id\n    let demo = format!{\"static/projects/{:03}/demo/\", id};\n    // if `pathbuf` is not provided, set file to `index.html`\n    let pathbuf = pathbuf.unwrap_or(PathBuf::from(\"index.html\"));\n\n    let path = Path::new(&amp;demo).join(pathbuf);\n    NamedFile::open(path).ok()\n}\n</code></pre>\n\n<p>When I type <code>localhost:5050/demo/003/index.html</code> in my browser, the demo (and everything else in the demo folder) gets loaded. However, once I type just <code>localhost:5050/demo/003/</code> I get this error (same result without <code>/</code> at the end):</p>\n\n<pre><code>GET /demo/003/ text/html:\n    =&gt; Error: No matching routes for GET /demo/003/ text/html.\n    =&gt; Warning: Responding with 404 Not Found catcher.\n    =&gt; Response succeeded.\n</code></pre>\n\n<p>I'd expect the route to match, because the <code>PathBuf</code> is optional and gets set to <code>index.html</code>. Would make sense to me...</p>\n\n<p>Did I go wrong somewhere or should I open an issue?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1565386423, "post_id": 57437256, "comment_id": 101352189, "body": "@SvenMarnach That would give you an <code>&amp;mut &amp;Row</code>, which doesn&#39;t really help."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 4, "creation_date": 1565386424, "post_id": 57437256, "comment_id": 101352191, "body": "No, strike that. The <code>row()</code> function only returns a read-only reference, so you can&#39;t use that reference to modify the row. You need to add a <code>row_mut()</code> that returns a mutable reference."}], "answers": [{"tags": [], "owner": {"reputation": 97521, "user_id": 565635, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7b4b3e7c9ac68b7d2c93ad02d0b9c79d?s=128&d=identicon&r=PG", "display_name": "orlp", "link": "https://stackoverflow.com/users/565635/orlp"}, "is_accepted": false, "score": 2, "last_activity_date": 1565389113, "creation_date": 1565389113, "answer_id": 57437719, "question_id": 57437256, "link": "https://stackoverflow.com/questions/57437256/cannot-borrow-as-mutable-as-it-is-behind-a-reference/57437719#57437719", "title": "cannot borrow as mutable, as it is behind a `&amp;` reference", "body": "<p>What you want is impossible. You'll have to write two functions (note that I replaced <code>u16</code> with <code>usize</code> - there is no reason why you should limit yourself to 65536 characters per line):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn row(&amp;self, index: usize) -&gt; &amp;Row {\n    &amp;self.rows[index]\n}\n\nfn row_mut(&amp;mut self, index: usize) -&gt; &amp;mut Row {\n    &amp;mut self.rows[index]\n}\n</code></pre>\n\n<p>Note that this is a common pattern across all Rust code. For example <code>Vec</code> has <code>get(idx)</code> and <code>get_mut(idx)</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1673, "user_id": 592744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/P1HSy.jpg?s=128&g=1", "display_name": "Philipp", "link": "https://stackoverflow.com/users/592744/philipp"}, "edited": false, "score": 0, "creation_date": 1565415157, "post_id": 57437754, "comment_id": 101356041, "body": "Thanks for a) answering the question, b) pointing me towards <code>get</code> and <code>get_mut</code>, and c) highlighting the <code>u16</code> issue, which really does not make a lot of sense."}], "tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": true, "score": 6, "last_activity_date": 1567773748, "last_edit_date": 1567773748, "creation_date": 1565389370, "answer_id": 57437754, "question_id": 57437256, "link": "https://stackoverflow.com/questions/57437256/cannot-borrow-as-mutable-as-it-is-behind-a-reference/57437754#57437754", "title": "cannot borrow as mutable, as it is behind a `&amp;` reference", "body": "<p>Here is a more idiomatic implementation for <code>File</code>:</p>\n\n<pre><code>impl File {\n    fn row(&amp;self, index: usize) -&gt; Option&lt;&amp;Row&gt; {\n        self.rows.get(index)\n    }\n\n    fn row_mut(&amp;mut self, index: usize) -&gt; Option&lt;&amp;mut Row&gt; {\n        self.rows.get_mut(index)\n    }\n}\n</code></pre>\n\n<p>Items of note here:</p>\n\n<ul>\n<li>Your implementation would panic if <code>index</code> is out of bounds. The idiomatic way of handling this is to return an Option, which <code>get</code> and <code>get_mut</code> allow you to get for free.</li>\n<li>Using u16 does not make much sense, as Vec is indexed using usize. Using <code>u16</code> is arbitrary here unless you really want to provide hard-coded limitations. In that case, I wouldn't rely on the type's max value but a constant instead that would make the intent clearer.</li>\n</ul>\n"}], "owner": {"reputation": 1673, "user_id": 592744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/P1HSy.jpg?s=128&g=1", "display_name": "Philipp", "link": "https://stackoverflow.com/users/592744/philipp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7087, "favorite_count": 0, "accepted_answer_id": 57437754, "answer_count": 2, "score": 8, "last_activity_date": 1567773748, "creation_date": 1565385752, "question_id": 57437256, "link": "https://stackoverflow.com/questions/57437256/cannot-borrow-as-mutable-as-it-is-behind-a-reference", "title": "cannot borrow as mutable, as it is behind a `&amp;` reference", "body": "<p>In order to get to know Rust a bit better, I am building a simple text editor and have the following structs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct File {\n    rows: Vec&lt;Row&gt;,\n    filename: Option&lt;String&gt;\n}\n\nimpl File {\n    fn row(&amp;self, index: u16) -&gt; &amp;Row{\n        &amp;self.rows[index as usize]\n    }\n\n}\n\nstruct Row {\n    string: String,\n}\n\nstruct EditorState {\n    file: File,\n}\n</code></pre>\n\n<p>As you can see, I am keeping the state of an editor in a struct, which references the file, which contains a number of rows, which contains a string (Each of these structs has more fields, but I have removed the ones not relevant to the problem)</p>\n\n<p>Now I want to make my rows editable and added this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Row {\n    fn insert(&amp;mut self, at: u16, c: char) {\n        let at = at as usize;\n        if at &gt;= self.string.len() {\n            self.string.push(c);\n        } else {\n            self.string.insert(at, c)\n        }\n    }\n}\n</code></pre>\n\n<p>This is how I try to update the row:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//In the actual functon, I am capturing the keypress,\n//get the correct row from the state and pass it and the pressed\n// char to row.insert\nfn update_row(mut state: &amp;mut EditorState)  {\nlet row = &amp;state.file.row(0);\nrow.insert(0, 'a');\n\n}\n</code></pre>\n\n<p>This fails to compile:</p>\n\n<pre><code>error[E0596]: cannot borrow `*row` as mutable, as it is behind a `&amp;` reference\n</code></pre>\n\n<p>From the error, I can see that the issue is that Row should be mutable so I can edit it (which makes sense, since I am mutating it's String). I can't figure out a) how to be able to mutate the string here, and b) how to do this without having <code>row</code> always return a mutable reference, as in all other cases, I am calling <code>row</code> to read a row, and not to write it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1565374858, "post_id": 57435244, "comment_id": 101348403, "body": "You cannot do that. The trait method <code>Deref::deref</code> returns a reference."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 2, "creation_date": 1565377095, "post_id": 57435244, "comment_id": 101349257, "body": "Implementing <code>Deref&lt;Target = U&gt;</code> for <code>T</code> does not mean that you can get a <code>U</code> from a <code>T</code>! It means that you can get an <code>&amp;U</code> from an <code>&amp;T</code>.  In this case, the new <code>Option</code> that is created by the <code>as_ref</code> call in the <code>deref</code> function is not the same <code>Option</code> that your <code>Wrapper</code> stores, and as such you can&#39;t return a reference to it."}, {"owner": {"reputation": 379, "user_id": 818006, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Vt77B.jpg?s=128&g=1", "display_name": "Boss Man", "link": "https://stackoverflow.com/users/818006/boss-man"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1565379984, "post_id": 57435244, "comment_id": 101350210, "body": "@turbulencetoo that&#39;s true but the same can be said about <code>my_deref</code> function where <code>self.val.as_ref()</code> returns new <code>Option</code>. I guess then the main question is: how compiler correctly elided in case of <code>my_deref</code> but not <code>deref</code>?"}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1565380159, "post_id": 57435244, "comment_id": 101350259, "body": "The main problem isn&#39;t the elision, but the unconstrained lifetime parameter. It doesn&#39;t make sense to have <code>type Target = Option&lt;&amp;&#39;a i32&gt;;</code> because the <code>&#39;a</code> comes out of nowhere."}, {"owner": {"reputation": 379, "user_id": 818006, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Vt77B.jpg?s=128&g=1", "display_name": "Boss Man", "link": "https://stackoverflow.com/users/818006/boss-man"}, "edited": false, "score": 0, "creation_date": 1565381737, "post_id": 57435244, "comment_id": 101350776, "body": "I think I got it..So <code>&amp;&#39;a i32</code> (correctly elided) is allowed but not <code>&amp;&#39;a Option&lt;&amp;&#39;b i32&gt;</code>. That&#39;s because now we have new lifetime <code>&#39;b</code> that compiler cannot elide. Is my understanding correct?"}], "answers": [{"comments": [{"owner": {"reputation": 379, "user_id": 818006, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Vt77B.jpg?s=128&g=1", "display_name": "Boss Man", "link": "https://stackoverflow.com/users/818006/boss-man"}, "edited": false, "score": 0, "creation_date": 1565380166, "post_id": 57435876, "comment_id": 101350260, "body": "You don&#39;t have to repeat the return type. I think it&#39;s better to use <code>fn deref(&amp;self) -&gt; &amp;Self::Target</code>. See <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#examples\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/ops/trait.Deref.html#examples</a>"}, {"owner": {"reputation": 2792, "user_id": 8626243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LYirU.jpg?s=128&g=1", "display_name": "Zhiyao", "link": "https://stackoverflow.com/users/8626243/zhiyao"}, "reply_to_user": {"reputation": 379, "user_id": 818006, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Vt77B.jpg?s=128&g=1", "display_name": "Boss Man", "link": "https://stackoverflow.com/users/818006/boss-man"}, "edited": false, "score": 0, "creation_date": 1565380386, "post_id": 57435876, "comment_id": 101350324, "body": "@SujitJoshi is there any extra benefit using <code>&amp;Self::Target</code> rather than typing <code>&amp;i32</code> again? <code>&amp;i32</code> is shorter though lol."}, {"owner": {"reputation": 379, "user_id": 818006, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Vt77B.jpg?s=128&g=1", "display_name": "Boss Man", "link": "https://stackoverflow.com/users/818006/boss-man"}, "edited": false, "score": 0, "creation_date": 1565380614, "post_id": 57435876, "comment_id": 101350394, "body": "Well...if you decide to change Target type...then you would have to search and replace. And depending on how complicated you <code>Deref</code> impl is that might not be easy. In that case...just changing Target is much easier."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1565383921, "post_id": 57435876, "comment_id": 101351455, "body": "If <code>val</code> is never <code>None</code>, why do you need to wrap it in an <code>Option</code>?"}, {"owner": {"reputation": 2792, "user_id": 8626243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LYirU.jpg?s=128&g=1", "display_name": "Zhiyao", "link": "https://stackoverflow.com/users/8626243/zhiyao"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1565465262, "post_id": 57435876, "comment_id": 101366246, "body": "@SvenMarnach I use <code>Option</code> as a container. The object contained in <code>Option</code> is &quot;moved&quot; from other places. I also implement <code>Drop</code> for the wrapper struct, which is not shown in the code above. When the wrapper struct goes out of scope, I want the contained object to be automatically returned to its original place. But <code>drop()</code> takes a mutable reference to <code>self</code>, rather than owning <code>self</code>. I must encompass it into <code>Option</code> to let it be able to &quot;move&quot; back in <code>drop()</code> function."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1565471324, "post_id": 57435876, "comment_id": 101367530, "body": "@ZhiyaoMa Thanks for the explanation, I was genuinely curious. So it&#39;s not really &quot;never&quot; <code>None</code> \u2013 it&#39;s <code>None</code> towards the end of your <code>drop()</code> impl. If the wrapped type has a cheaply constructable default, you can also use <code>std::mem::replace()</code> to swap in the default."}, {"owner": {"reputation": 2792, "user_id": 8626243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LYirU.jpg?s=128&g=1", "display_name": "Zhiyao", "link": "https://stackoverflow.com/users/8626243/zhiyao"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1565472095, "post_id": 57435876, "comment_id": 101367687, "body": "@SvenMarnach You are right. And I choose to do that way exactly because constructing a new object of same type is expensive. :)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1565475020, "post_id": 57435876, "comment_id": 101368170, "body": "Another option would be <code>ManuallyDrop::take()</code>, but it&#39;s unstable and unsafe."}], "tags": [], "owner": {"reputation": 2792, "user_id": 8626243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LYirU.jpg?s=128&g=1", "display_name": "Zhiyao", "link": "https://stackoverflow.com/users/8626243/zhiyao"}, "is_accepted": true, "score": 0, "last_activity_date": 1565377788, "creation_date": 1565377788, "answer_id": 57435876, "question_id": 57435244, "link": "https://stackoverflow.com/questions/57435244/how-can-i-return-a-reference-wrapped-by-option-by-implementing-deref-in-rust/57435876#57435876", "title": "How can I return a reference wrapped by `Option` by implementing `Deref` in Rust?", "body": "<p>After reading turbulencetoo's comment, I come up with the following code, which does exactly what I intend. By program logic the <code>Option</code> field will never be <code>None</code>, so I can safely unwrap it. I must use <code>Option</code> to wrap it for some other reason irrelevant to this topic.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Deref;\nstruct Wrapper {\n    val: Option&lt;i32&gt;\n}\n\nimpl Deref for Wrapper {\n    type Target = i32;\n    fn deref(&amp;self) -&gt; &amp;i32 {\n        self.val.as_ref().unwrap()\n    }\n}\n</code></pre>\n\n<p>Quoting turbulencetoo's comment below.</p>\n\n<blockquote>\n  <p>Implementing Deref for T does not mean that you can get a U from a T! It means that you can get an &amp;U from an &amp;T. In this case, the new Option that is created by the as_ref call in the deref function is not the same Option that your Wrapper stores, and as such you can't return a reference to it.</p>\n</blockquote>\n"}], "owner": {"reputation": 2792, "user_id": 8626243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LYirU.jpg?s=128&g=1", "display_name": "Zhiyao", "link": "https://stackoverflow.com/users/8626243/zhiyao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 801, "favorite_count": 0, "accepted_answer_id": 57435876, "answer_count": 1, "score": 1, "last_activity_date": 1565377788, "creation_date": 1565374229, "question_id": 57435244, "link": "https://stackoverflow.com/questions/57435244/how-can-i-return-a-reference-wrapped-by-option-by-implementing-deref-in-rust", "title": "How can I return a reference wrapped by `Option` by implementing `Deref` in Rust?", "body": "<p>I have a wrapper struct which stores an <code>Option</code> field. I would like to get a reference to the data stored in this field. The following code compiles.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Wrapper {\n    val: Option&lt;i32&gt;\n}\n\nimpl Wrapper {\n    // lifetime specifier elided because Rust compiler can infer it\n    // to be fn my_deref&lt;'a&gt;(&amp;'a self) -&gt; Option&lt;&amp;'a i32&gt;\n    fn my_deref(&amp;self) -&gt; Option&lt;&amp;i32&gt; {\n        self.val.as_ref()\n    }\n}\n</code></pre>\n\n<p>However, I prefer implementing <code>Deref</code> trait for <code>Wrapper</code>, so that I can have dereference coercion which is very nice. I tried the following code but the compiler complains.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Deref;\nstruct Wrapper {\n    val: Option&lt;i32&gt;\n}\n\nimpl Deref for Wrapper {\n    type Target = Option&lt;&amp;i32&gt;; // It tells me I need a lifetime specifier.\n    fn deref(&amp;self) -&gt; Option&lt;&amp;i32&gt; {\n        self.val.as_ref()\n    }\n}\n</code></pre>\n\n<p>I then tried to add a lifetime specifier, but failed again.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Deref;\nstruct Wrapper&lt;'a&gt; { // It tells me 'a is never used.\n    val: Option&lt;i32&gt;\n}\n\nimpl&lt;'a&gt; Deref for Wrapper&lt;'a&gt; {\n    type Target = Option&lt;&amp;'a i32&gt;;\n    fn deref(&amp;'a self) -&gt; Option&lt;&amp;'a i32&gt; {\n        self.val.as_ref()\n    }\n}\n</code></pre>\n\n<p>What is the correct way to implement <code>deref</code> that does the same thing as <code>my_deref</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": true, "score": 3, "last_activity_date": 1565341055, "creation_date": 1565341055, "answer_id": 57426673, "question_id": 57423880, "link": "https://stackoverflow.com/questions/57423880/handling-serde-error-and-other-error-type/57426673#57426673", "title": "Handling serde error and other error type?", "body": "<p>rustc failed to automatically infer that the <code>Box</code> inside the closure wants to be <code>Box&lt;dyn std::error::Error&gt;</code> or <code>Box&lt;serde_json::Error&gt;</code>. You have to tell the compiler that you're actually creating a boxed trait object rather than a boxed struct.</p>\n\n<p>On the other hand, you can't directly call <code>Box::&lt;std::error::Error&gt;::new</code> because <code>Error</code> does not extend <code>std::marker::Sized</code>.</p>\n\n<p>However, a boxed <code>serde_json::Error</code> is indeed a boxed <code>std::error::Error</code>. So you can force this conversion using the <code>as</code> operator:</p>\n\n<pre><code>result.or_else(|err| Err(Box::new(err) as Box&lt;dyn std::error::Error&gt;)\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4e18d3d2d55d4e66f2d1a4e3a50e122a\" rel=\"nofollow noreferrer\">Working example on Rust Playground</a></p>\n"}], "owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 777, "favorite_count": 2, "accepted_answer_id": 57426673, "answer_count": 1, "score": 2, "last_activity_date": 1593028623, "creation_date": 1565328244, "last_edit_date": 1593028623, "question_id": 57423880, "link": "https://stackoverflow.com/questions/57423880/handling-serde-error-and-other-error-type", "title": "Handling serde error and other error type?", "body": "<p>I have the following function of <code>export_directory</code>.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>// For handling multiple error type\ntype BoxResult&lt;T&gt; = Result&lt;T, Box&lt;std::error::Error&gt;&gt;;\n\nfn export_directory(dir: &amp;Directory, export_path: &amp;str) -&gt; BoxResult&lt;String&gt; {\n  let mut file = OpenOptions::new().write(true).truncate(true).create(true).open(export_path)?;\n  serde_json::to_string(dir).or_else(|err| Err(Box::new(err)))\n}\n\nfn main() {\n  let mut dir = Directory::new();\n  export_directory(&amp;dir, &quot;export_path.json&quot;);\n}\n</code></pre>\n<p>When I compile the code, it gives me</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:98:3\n   |\n96 | fn export_directory(dir: &amp;Directory, export_path: &amp;str) -&gt; BoxResult&lt;String&gt; {\n   |                                                            ----------------- expected `std::result::Result&lt;std::string::String, std::boxed::Box&lt;(dyn std::error::Error + 'static)&gt;&gt;` because of return type\n97 |   let mut file = OpenOptions::new().write(true).truncate(true).create(true).open(export_path)?;\n98 |   serde_json::to_string(dir).or_else(|err| Err(Box::new(err)))\n   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected trait std::error::Error, found struct `serde_json::error::Error`\n   |\n   = note: expected type `std::result::Result&lt;_, std::boxed::Box&lt;(dyn std::error::Error + 'static)&gt;&gt;`\n              found type `std::result::Result&lt;_, std::boxed::Box&lt;serde_json::error::Error&gt;&gt;`\n</code></pre>\n<p>But when referring to <a href=\"https://docs.serde.rs/serde_json/error/struct.Error.html\" rel=\"nofollow noreferrer\">serde documentation</a>, the <code>serde_json::error::Error</code> has already implemented <code>Error</code> trait. What's going wrong here?</p>\n"}, {"tags": ["rust", "add", "traits"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1565328574, "post_id": 57423833, "comment_id": 101326357, "body": "I guess you haven&#39;t import <code>Add</code> by adding <code>use std::ops::Add;</code> to the file(trait must be visible in the file) : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=113eeb1c952bc45ec5dafa5b8c6eb28e\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 2, "creation_date": 1565329064, "post_id": 57423833, "comment_id": 101326471, "body": "I&#39;m voting to close this question as off-topic because OP needs to read error messages."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1565329363, "post_id": 57423833, "comment_id": 101326551, "body": "@jhpratt error message might be confusing for the newcomer to Rust, OP thinks it should work because implementation is already in scope and error message says (items from traits can only be used if the trait is in scope)"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 5, "creation_date": 1565329545, "post_id": 57423833, "comment_id": 101326605, "body": "@&#214;merErden Sometimes the error message aren&#39;t clear \u2014 that&#39;s absolutely not the case here. The compiler says what the error is <i>and how to fix it</i> in actual code."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1565329898, "post_id": 57423833, "comment_id": 101326716, "body": "@jhpratt sure, maybe the question should have been asked in this way: <i>i have implementation in scope but compiler tells me &quot;you don&#39;t have it in scope&quot; why ?</i>."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1565329996, "post_id": 57423833, "comment_id": 101326754, "body": "The &quot;why&quot; is literally &quot;you don&#39;t have this line that we are literally giving you&quot;"}, {"owner": {"reputation": 105, "user_id": 8923382, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MzKnrPp4Viw/AAAAAAAAAAI/AAAAAAAAAEg/yLooe0LF9Bk/photo.jpg?sz=128", "display_name": "\uc8fc\ud53c\ud130", "link": "https://stackoverflow.com/users/8923382/%ec%a3%bc%ed%94%bc%ed%84%b0"}, "edited": false, "score": 0, "creation_date": 1565331821, "post_id": 57423833, "comment_id": 101327322, "body": "@ jhpratt Thank you for clear my question. Then would you tell me i have implementation in scope but compiler tells me &quot;you don&#39;t have it in scope&quot; why? and What is difference between &quot;+&quot; operator and &quot;add&quot; operator as one works but the other not."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565345319, "post_id": 57423833, "comment_id": 101333735, "body": "The underlying question is a duplicate of <a href=\"https://stackoverflow.com/q/48803064/3650362\">How is it possible that ops traits are not in scope?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 105, "user_id": 8923382, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MzKnrPp4Viw/AAAAAAAAAAI/AAAAAAAAAEg/yLooe0LF9Bk/photo.jpg?sz=128", "display_name": "\uc8fc\ud53c\ud130", "link": "https://stackoverflow.com/users/8923382/%ec%a3%bc%ed%94%bc%ed%84%b0"}, "edited": false, "score": 0, "creation_date": 1565331211, "post_id": 57423960, "comment_id": 101327123, "body": "Would you give me some more information? (1) How Foo is used here without instantiation? (2) Foo clearly implemented Add&lt;Bar&gt;, then why Foo can&#39;t call the trait method &quot;add&quot;? That is to say, Foo.add(). Is that related to &quot;items from traits can only be used if the trait is in scope&quot;?"}, {"owner": {"reputation": 105, "user_id": 8923382, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MzKnrPp4Viw/AAAAAAAAAAI/AAAAAAAAAEg/yLooe0LF9Bk/photo.jpg?sz=128", "display_name": "\uc8fc\ud53c\ud130", "link": "https://stackoverflow.com/users/8923382/%ec%a3%bc%ed%94%bc%ed%84%b0"}, "edited": false, "score": 0, "creation_date": 1565331544, "post_id": 57423960, "comment_id": 101327232, "body": "If items from traits can only be used if the trait is in scope, then how &quot;Foo + Bar&quot; works? What is difference between &quot;+&quot; and &quot;add&quot;? Thank you very much anyway."}, {"owner": {"reputation": 105, "user_id": 8923382, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MzKnrPp4Viw/AAAAAAAAAAI/AAAAAAAAAEg/yLooe0LF9Bk/photo.jpg?sz=128", "display_name": "\uc8fc\ud53c\ud130", "link": "https://stackoverflow.com/users/8923382/%ec%a3%bc%ed%94%bc%ed%84%b0"}, "edited": false, "score": 0, "creation_date": 1565336102, "post_id": 57423960, "comment_id": 101329168, "body": "Would you explain me why &quot;+&quot; works and &quot;add&quot; not? I think, in the same circumstance, both work or both don&#39;t."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 105, "user_id": 8923382, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MzKnrPp4Viw/AAAAAAAAAAI/AAAAAAAAAEg/yLooe0LF9Bk/photo.jpg?sz=128", "display_name": "\uc8fc\ud53c\ud130", "link": "https://stackoverflow.com/users/8923382/%ec%a3%bc%ed%94%bc%ed%84%b0"}, "edited": false, "score": 1, "creation_date": 1565339167, "post_id": 57423960, "comment_id": 101330555, "body": "@\uc8fc\ud53c\ud130 you shouldn&#39;t consider <code>Foo.add(Bar)</code> same with <code>Foo + Bar</code>,<code>Foo + Bar</code> is exactly same with <code>std::ops::Add::add(Foo, Bar)</code>. please read <a href=\"https://doc.rust-lang.org/reference/expressions/call-expr.html#disambiguating-function-calls\" rel=\"nofollow noreferrer\">this</a>"}, {"owner": {"reputation": 105, "user_id": 8923382, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MzKnrPp4Viw/AAAAAAAAAAI/AAAAAAAAAEg/yLooe0LF9Bk/photo.jpg?sz=128", "display_name": "\uc8fc\ud53c\ud130", "link": "https://stackoverflow.com/users/8923382/%ec%a3%bc%ed%94%bc%ed%84%b0"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1565398878, "post_id": 57423960, "comment_id": 101354330, "body": "@&#214;mer Erden Exactly what I want. Thanks Erden."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 3, "last_activity_date": 1565344726, "last_edit_date": 1565344726, "creation_date": 1565328981, "answer_id": 57423960, "question_id": 57423833, "link": "https://stackoverflow.com/questions/57423833/difference-between-add-and/57423960#57423960", "title": "Difference between add and +?", "body": "<p>As the compiler said:</p>\n\n<blockquote>\n  <p>items from traits can only be used if the trait is in scope</p>\n</blockquote>\n\n<p>just do what the compiler advice you:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Add;\n\nfn main() {\n    println!(\"Foo + Bar = {:?}\", Foo + Bar);\n    println!(\"Foo + Bar = {:?}\", Foo.add(Bar));\n}\n</code></pre>\n\n<p>To be clear :</p>\n\n<p>\"<em>below not works though both struct and trait implementation are in scope</em>\"</p>\n\n<p>This is not correct, the trait <code>Add</code> is not in the scope, you only have <code>ops</code> module, this is totally different than <code>use std::ops::Add;</code>. You can also see that in your implementation, you write <code>ops::Add&lt;Bar&gt;</code> not <code>Add&lt;Bar&gt;</code> so <code>Add</code> is not in the scope in your code just <code>ops</code>.</p>\n\n<blockquote>\n  <p>If items from traits can only be used if the trait is in scope, then how \"Foo + Bar\" works? What is difference between \"+\" and \"add\"?</p>\n</blockquote>\n\n<p><code>+</code> is just a syntax sugar, a magic thing that compiler do for you. How it works doesn't really matter, <code>+</code> doesn't need anything to call <code>add()</code> (because it's a builtin, the compiler \"know\" what to do) but if you call it yourself, compiler has no reason to not apply general rules about trait and also rules about import this trait in the scope (some trait are import by default but not <code>Add</code>). <code>+</code> is special but not <code>Add</code> trait. The same apply to <code>?</code> operator and many more in rust. We use trait to implement some basic operator, this is really clean and very flexible.</p>\n"}], "owner": {"reputation": 105, "user_id": 8923382, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MzKnrPp4Viw/AAAAAAAAAAI/AAAAAAAAAEg/yLooe0LF9Bk/photo.jpg?sz=128", "display_name": "\uc8fc\ud53c\ud130", "link": "https://stackoverflow.com/users/8923382/%ec%a3%bc%ed%94%bc%ed%84%b0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "closed_date": 1565344104, "accepted_answer_id": 57423960, "answer_count": 1, "score": -1, "last_activity_date": 1565344726, "creation_date": 1565327899, "last_edit_date": 1565328601, "question_id": 57423833, "link": "https://stackoverflow.com/questions/57423833/difference-between-add-and", "closed_reason": "Not suitable for this site", "title": "Difference between add and +?", "body": "<p>I am reading <a href=\"https://doc.rust-lang.org/rust-by-example/trait/ops.html\" rel=\"nofollow noreferrer\">Rust by Examples</a>. </p>\n\n<p>The code below works.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"Bar + Foo = {:?}\", Bar + Foo);\n</code></pre>\n\n<p>but, below not works though both struct and trait implementation are in scope. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"Bar + Foo = {:?}\", Bar.add(Foo));\n</code></pre>\n\n<p>Full code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops;\n\nstruct Foo;\nstruct Bar;\n\n#[derive(Debug)]\nstruct FooBar;\n\nimpl ops::Add&lt;Bar&gt; for Foo {\n    type Output = FooBar;\n\n    fn add(self, _rhs: Bar) -&gt; FooBar {\n        println!(\"&gt; Foo.add(Bar) was called\");\n\n        FooBar\n    }\n}\n\nfn main() {\n    println!(\"Foo + Bar = {:?}\", Foo + Bar);\n    println!(\"Foo + Bar = {:?}\", Foo.add(Bar));\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `add` found for type `Foo` in the current scope\n  --&gt; src/main.rs:21:38\n   |\n3  | struct Foo;\n   | ----------- method `add` not found for this\n...\n21 |     println!(\"Foo + Bar = {:?}\", Foo.add(Bar));\n   |                                      ^^^\n   |\n   = help: items from traits can only be used if the trait is in scope\nhelp: the following trait is implemented but not in scope, perhaps add a `use` for it:\n   |\n1  | use std::ops::Add;\n   |\n</code></pre>\n\n<p>Why not?</p>\n"}, {"tags": ["rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 209014, "user_id": 125816, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7f5aa40b1e7a95599c7a19451f88ff3a?s=128&d=identicon&r=PG", "display_name": "Sergio Tulentsev", "link": "https://stackoverflow.com/users/125816/sergio-tulentsev"}, "reply_to_user": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "edited": false, "score": 0, "creation_date": 1565359833, "post_id": 57430931, "comment_id": 101341791, "body": "@James: comma probably can be left unescaped :)"}, {"owner": {"reputation": 11, "user_id": 3734858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/03a035bd9b32244277b605dbc3448c9c?s=128&d=identicon&r=PG&f=1", "display_name": "Uther", "link": "https://stackoverflow.com/users/3734858/uther"}, "edited": false, "score": 0, "creation_date": 1565360948, "post_id": 57430931, "comment_id": 101342419, "body": "Indeed, if you your format handle quote, you probably don&#39;t need to escape commas"}], "tags": [], "owner": {"reputation": 11, "user_id": 3734858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/03a035bd9b32244277b605dbc3448c9c?s=128&d=identicon&r=PG&f=1", "display_name": "Uther", "link": "https://stackoverflow.com/users/3734858/uther"}, "is_accepted": false, "score": 1, "last_activity_date": 1565357019, "last_edit_date": 1565357019, "creation_date": 1565356702, "answer_id": 57430931, "question_id": 57422748, "link": "https://stackoverflow.com/questions/57422748/how-to-parse-str-with-named-parameters/57430931#57430931", "title": "How to parse &amp;str with named parameters?", "body": "<p>Your code seems to work for extracting the command and the full parameter list. If you don't need to parse something more complex than that, you can probably avoid using nom as a dependency.</p>\n\n<p>But you will probably have problems if you want to parse individually each parameters : your format seems broken. In your example, there is no escape caracters neither for double quote nor comma. <code>param2</code> just can't be extracted cleanly. </p>\n"}], "owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1565537507, "creation_date": 1565316963, "last_edit_date": 1565537506, "question_id": 57422748, "link": "https://stackoverflow.com/questions/57422748/how-to-parse-str-with-named-parameters", "title": "How to parse &amp;str with named parameters?", "body": "<p>I am trying to find the best way to parse a <code>&amp;str</code> and extract out the <code>COMMAND_TYPE</code> and named parameters. The named parameters can be anything.</p>\n\n<p>Here is the proposed string (it can be changed).</p>\n\n<pre><code>COMMAND_TYPE(param1:2222,param2:\"the quick \\\"brown\\\" fox, blah,\", param3:true)\n</code></pre>\n\n<p>I have been trying a few ways to extract the <code>COMMAND_TYPE</code>, which seems fairly simple:</p>\n\n<pre><code>pub fn parse_command(command: &amp;str) -&gt; Option&lt;String&gt; {\n    let mut matched = String::new();\n    let mut chars = command.chars();\n\n    while let Some(next) = chars.next() {\n        if next != '(' {\n            matched.push(next);\n        } else {\n            break;\n        }\n    }\n    if matched.is_empty() {\n        None\n    } else {\n        Some(matched)\n    }\n}\n</code></pre>\n\n<p>Extracting the parameters from within the brackets seems straightforward to:</p>\n\n<pre><code>pub fn parse_params(command: &amp;str) -&gt; Option&lt;&amp;str&gt; {\n    let start = command.find(\"(\");\n    let end = command.rfind(\")\");\n\n    if start.is_some() &amp;&amp; end.is_some() {\n        Some(&amp;command[start.unwrap() + 1..end.unwrap()])\n    } else {\n        None\n    }\n}\n</code></pre>\n\n<p>I have been looking at the <a href=\"https://crates.io/crates/nom\" rel=\"nofollow noreferrer\">nom</a> crate and that seems fairly powerful (and complicated), so I am not sure if I really need to use it.</p>\n\n<p>How do I extract the named parameters in between the brackets into a <code>HashMap</code>?</p>\n"}, {"tags": ["rust", "rustdoc"], "answers": [{"comments": [{"owner": {"reputation": 62, "user_id": 865042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a09220e8c689bf21cce83a3703c60a2?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/865042/alex"}, "edited": false, "score": 1, "creation_date": 1610338847, "post_id": 57421526, "comment_id": 116092064, "body": "<code>#[doc = include_str!(&quot;my_doc.md&quot;)</code> is the new way to do this in nightly via <a href=\"https://github.com/rust-lang/rust/pull/78837\" rel=\"nofollow noreferrer\">#78837</a>"}], "tags": [], "owner": {"reputation": 1587, "user_id": 956856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64eec6ff41ec4774fa9db39daf8c386b?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner-Hall", "link": "https://stackoverflow.com/users/956856/daniel-wagner-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1565304489, "last_edit_date": 1565304489, "creation_date": 1565304332, "answer_id": 57421526, "question_id": 57421461, "link": "https://stackoverflow.com/questions/57421461/how-to-include-an-arbitrary-markdown-file-as-a-documentation-attribute/57421526#57421526", "title": "How to include an arbitrary markdown file as a documentation attribute?", "body": "<p>There is an unstable feature, <a href=\"https://doc.rust-lang.org/unstable-book/language-features/external-doc.html\" rel=\"nofollow noreferrer\"><code>external-doc</code></a>, which enables this: </p>\n\n<p>Example usage (nightly-only):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(external_doc)]\n\n#![doc(include = \"../README.md\")]\n</code></pre>\n"}], "owner": {"reputation": 1587, "user_id": 956856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64eec6ff41ec4774fa9db39daf8c386b?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner-Hall", "link": "https://stackoverflow.com/users/956856/daniel-wagner-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 538, "favorite_count": 0, "closed_date": 1565305557, "answer_count": 1, "score": 3, "last_activity_date": 1565305130, "creation_date": 1565303761, "last_edit_date": 1565304657, "question_id": 57421461, "link": "https://stackoverflow.com/questions/57421461/how-to-include-an-arbitrary-markdown-file-as-a-documentation-attribute", "closed_reason": "Duplicate", "title": "How to include an arbitrary markdown file as a documentation attribute?", "body": "<p>If the <code>readme</code> <code>Cargo.toml</code> key is set, doc.rs renders the README on the crate's index page. Is there a way to emulate this when running <code>cargo doc</code> locally?</p>\n\n<p>If I add:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![doc = r###\"contents\nof\nREADME.md\nhere\n\"###]\n</code></pre>\n\n<p>as a literal, I get the behaviour I'm looking for, but inlining a copy of my whole README.md is pretty inconvenient for making updates.</p>\n\n<p>I tried:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![doc = include!(\"README.md\")]\n</code></pre>\n\n<p>but this gives an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: unexpected token: `include`\n --&gt; src/lib.rs:3:10\n  |\n3 | #![doc = include!(\"README.md\")]\n  |          ^^^^^^^\n</code></pre>\n"}, {"tags": ["string", "rust", "smart-pointers"], "comments": [{"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 1, "creation_date": 1565301499, "post_id": 57420937, "comment_id": 101321472, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\">What are the differences between Rust&#39;s `String` and `str`?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1565304824, "post_id": 57420937, "comment_id": 101322319, "body": "why vector is a vector and not a <code>Box&lt;slice&gt;</code> ?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1565308210, "post_id": 57420937, "comment_id": 101323031, "body": "Note that <code>Box&lt;str&gt;</code> is a perfectly valid and occasionally useful type. It&#39;s not a &quot;rather than&quot;, but &quot;as well as&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 261, "user_id": 1591272, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fbcVN.png?s=128&g=1", "display_name": "Lemma Prism", "link": "https://stackoverflow.com/users/1591272/lemma-prism"}, "edited": false, "score": 0, "creation_date": 1565305097, "post_id": 57421082, "comment_id": 101322378, "body": "Ah, so perhaps I should now ask, why isn&#39;t it a <code>Vec&lt;str&gt;</code>? But thank you, I hadn&#39;t realized that requirement--though it&#39;s obvious in retrospect."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 261, "user_id": 1591272, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fbcVN.png?s=128&g=1", "display_name": "Lemma Prism", "link": "https://stackoverflow.com/users/1591272/lemma-prism"}, "edited": false, "score": 3, "creation_date": 1565305420, "post_id": 57421082, "comment_id": 101322452, "body": "@LemmaPrism I&#39;d quibble about <code>Vec&lt;char&gt;</code> and prefer to say <code>Vec&lt;u8&gt;</code> for reasons, but <a href=\"https://doc.rust-lang.org/1.36.0/src/alloc/string.rs.html#283-285\" rel=\"nofollow noreferrer\"><code>String</code> <b>is</b> literally a <code>Vec&lt;u8&gt;</code></a>. The source is open and also linked from the docs; feel free to browse it."}, {"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565355775, "post_id": 57421082, "comment_id": 101339231, "body": "@Shepmaster That&#39;s a fair point. I think I mean conceptually, <code>Vec&lt;char&gt;</code> is closer to the concept, but implementation-wise, <code>Vec&lt;u8&gt;</code> is literally true (and represents the memory footprint more accurately)"}, {"owner": {"reputation": 261, "user_id": 1591272, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fbcVN.png?s=128&g=1", "display_name": "Lemma Prism", "link": "https://stackoverflow.com/users/1591272/lemma-prism"}, "edited": false, "score": 0, "creation_date": 1565627728, "post_id": 57421082, "comment_id": 101403365, "body": "I&#39;ve belated realized I said <code>Vec&lt;str&gt;</code> instead of <code>Vec&lt;char&gt;</code>; silly me. But yes, the source is surprisingly easy to review! And thank you @Zarenor for identifying the question I <i>should</i> have asked."}], "tags": [], "owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "is_accepted": true, "score": 7, "last_activity_date": 1565301156, "creation_date": 1565301156, "answer_id": 57421082, "question_id": 57420937, "link": "https://stackoverflow.com/questions/57420937/why-is-str-encapsulated-inside-string-instead-of-inside-a-boxstr/57421082#57421082", "title": "Why is `str` encapsulated inside `String` instead of inside a `Box&lt;str&gt;`?", "body": "<p><code>String</code> is more like a <code>Vec&lt;char&gt;</code> than a <code>Box&lt;str&gt;</code> - it has methods to push more <code>char</code>s on the end, or push a whole <code>str</code>. It has length and capacity, rather than only length. Like <code>Box</code> and <code>Vec</code>, it owns it's contents, and places them on the heap; unlike <code>Box</code>, it also extends the functionality of <code>str</code> beyond its inherent properties.</p>\n"}, {"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 5, "last_activity_date": 1565303032, "creation_date": 1565303032, "answer_id": 57421365, "question_id": 57420937, "link": "https://stackoverflow.com/questions/57420937/why-is-str-encapsulated-inside-string-instead-of-inside-a-boxstr/57421365#57421365", "title": "Why is `str` encapsulated inside `String` instead of inside a `Box&lt;str&gt;`?", "body": "<p><code>str</code> mainly has <code>&amp;self</code> methods because it cannot change any of the characters it contains because a change in a character might mean a change in the length, and it cannot reallocate itself. On the other hand <code>String</code> is like a <code>&amp;mut str</code> because it provides methods to manipulate <code>str</code>s. </p>\n\n<p>For example, you can <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.push_str\" rel=\"noreferrer\">push</a> to it, or <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.replace_range\" rel=\"noreferrer\">replace a section</a>.</p>\n\n<p>On the other hand, a <code>Box&lt;str&gt;</code> provides none of this because it is essentially an owned <code>str</code> and so it only provides the <code>&amp;self</code> methods I talked about earlier. </p>\n"}], "owner": {"reputation": 261, "user_id": 1591272, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fbcVN.png?s=128&g=1", "display_name": "Lemma Prism", "link": "https://stackoverflow.com/users/1591272/lemma-prism"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 57421082, "answer_count": 2, "score": 5, "last_activity_date": 1565304928, "creation_date": 1565300223, "last_edit_date": 1565304928, "question_id": 57420937, "link": "https://stackoverflow.com/questions/57420937/why-is-str-encapsulated-inside-string-instead-of-inside-a-boxstr", "title": "Why is `str` encapsulated inside `String` instead of inside a `Box&lt;str&gt;`?", "body": "<p>It's not causing me any difficulties \u2014\u00a0I am perfectly capable of using <code>String</code> \u2014 but is there any reason that <code>str</code> is encapsulated in its own special type rather than inside the more general <code>Box</code> type? If there <em>is</em> a reason then the answer might help me model how to work with <code>Box</code> differently.</p>\n\n<p>Why is <code>str</code> encapsulated inside <code>String</code> instead of inside a <code>Box&lt;str&gt;</code>? Is it simply for convenience of typing such a common structure or is there a deeper reason?</p>\n"}, {"tags": ["string", "rust", "formatting", "literals"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565294499, "post_id": 57419762, "comment_id": 101319140, "body": "Please define &quot;litter&quot;, ideally with some objective metrics. What is &quot;litter&quot; to you might not be to other people, and it&#39;s a shame if someone tries to help you only to also &quot;litter&quot;. Providing an example of what code you have (with a truncated literal!) is likely to also help."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565294650, "post_id": 57419762, "comment_id": 101319213, "body": "It&#39;d be good to state what <i>hard constraints</i> you have. Are you requiring that specifically the <code>format</code> macro be used?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1565294771, "post_id": 57419762, "comment_id": 101319248, "body": "<code>format!</code> seems to be the wrong tool to generate large pieces of HTML."}, {"owner": {"reputation": 88, "user_id": 6513106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b6f98024e29da0c55dea2a0080f26a6?s=128&d=identicon&r=PG", "display_name": "janqo", "link": "https://stackoverflow.com/users/6513106/janqo"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1565296247, "post_id": 57419762, "comment_id": 101319785, "body": "@mcarton how is that wrong?"}, {"owner": {"reputation": 88, "user_id": 6513106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b6f98024e29da0c55dea2a0080f26a6?s=128&d=identicon&r=PG", "display_name": "janqo", "link": "https://stackoverflow.com/users/6513106/janqo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565296296, "post_id": 57419762, "comment_id": 101319800, "body": "@Shepmaster it&#39;s hard to provide objective metrics as the question is rather about practices and appearance of code"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1565299358, "post_id": 57419762, "comment_id": 101320822, "body": "@janqo at the very least you&#39;d want a tool that understands HTML escaping."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565294558, "post_id": 57419831, "comment_id": 101319177, "body": "<i>I use the <code>format!</code> macro with &quot;{}&quot; in places in the literal</i> \u2014 please demonstrate how that would work with your solution. See also <a href=\"https://stackoverflow.com/q/27734708/155423\">println! error: expected a literal / format argument must be a string literal</a>"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565303676, "post_id": 57419831, "comment_id": 101322047, "body": "@Shepmaster it in fact does work, I tested it locally and is reflected in my edit."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 2, "last_activity_date": 1565331690, "last_edit_date": 1565331690, "creation_date": 1565294523, "answer_id": 57419831, "question_id": 57419762, "link": "https://stackoverflow.com/questions/57419762/how-to-store-large-string-literals-to-be-used-with-the-format-macro-without-litt/57419831#57419831", "title": "How to store large string literals to be used with the format macro without littering code?", "body": "<p>You can save the HTML in an external file and include it via <a href=\"https://doc.rust-lang.org/std/macro.include_str.html\" rel=\"nofollow noreferrer\"><code>std::include_str</code></a>. For example</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let html_code = format!(include_str!(\"src/index.html\"), my, values, in, the, template);\n</code></pre>\n\n<p>A playground application doesn't quite work here due to the compile-time requirement of the file, but locally the following worked:</p>\n\n<pre><code>src/\n    foo.txt -- \"{}\"\n    main.rs -- println!(include_str!(\"foo.txt\"), 1234);\n</code></pre>\n"}], "owner": {"reputation": 88, "user_id": 6513106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b6f98024e29da0c55dea2a0080f26a6?s=128&d=identicon&r=PG", "display_name": "janqo", "link": "https://stackoverflow.com/users/6513106/janqo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 57419831, "answer_count": 1, "score": 1, "last_activity_date": 1565331690, "creation_date": 1565294186, "last_edit_date": 1565315503, "question_id": 57419762, "link": "https://stackoverflow.com/questions/57419762/how-to-store-large-string-literals-to-be-used-with-the-format-macro-without-litt", "title": "How to store large string literals to be used with the format macro without littering code?", "body": "<p>I have a function in my library that takes some variables and returns an HTML page with those variables inserted. What is the best practice not to litter my module with a large HTML literal? I mean that when I read my code it just \"doesn't seem right\" to have a piece of HTML that I have to scroll through. </p>\n\n<p>I use the <code>format!</code> macro with \"{}\" in places in the literal where I want insert variables so I guess that keeping the page as a file and loading it wouldn't work. I don't have to use <code>format!</code> macro, but it seems elegant to not process text manually when I have this kind of tool.</p>\n\n<p>Would creating an entire module just to hold this page be a good practice? In my mind a module is something \"bigger\", but maybe that's the best thing to do?</p>\n"}, {"tags": ["file-io", "rust", "rayon"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565294116, "post_id": 57419699, "comment_id": 101318976, "body": "<code>std::process::exit(0)</code> is redundant; exiting main normally does that. You also <i>probably</i> want to use <code>panic!</code> instead of the other call to <code>exit</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565294189, "post_id": 57419699, "comment_id": 101319008, "body": "What exactly is your <b>question</b>? You&#39;ve provided code and an error message; what do you want from us?"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 2, "last_activity_date": 1566922901, "last_edit_date": 1566922901, "creation_date": 1566552179, "answer_id": 57623319, "question_id": 57419699, "link": "https://stackoverflow.com/questions/57419699/rayonstrlines-is-not-an-iterator/57623319#57623319", "title": "rayon::str::Lines&lt;&#39;_&#39;&gt; is not an iterator", "body": "<p>You can't use parallel iterators with the (non-parallel) <code>for</code> loop. </p>\n\n<p>Instead, use <code>.for_each(|| \u2026)</code> callback on the parallel iterator. </p>\n\n<p>Alternatively, first call <code>.collect::&lt;Vec&lt;_&gt;&gt;()</code>, and then non-parallel <code>for</code>.</p>\n\n<p>For more advanced cases you can also send results to a <a href=\"https://lib.rs/crossbeam-channel\" rel=\"nofollow noreferrer\">channel</a> in parallel, and then use non-parallel <code>for</code> to read from the channel.</p>\n"}], "owner": {"reputation": 264, "user_id": 10756455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/584555d27f8df3e5e8c4d4c7047498cf?s=128&d=identicon&r=PG&f=1", "display_name": "Toothless204", "link": "https://stackoverflow.com/users/10756455/toothless204"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 275, "favorite_count": 0, "closed_date": 1566923056, "answer_count": 1, "score": 0, "last_activity_date": 1566923064, "creation_date": 1565293851, "last_edit_date": 1565380104, "question_id": 57419699, "link": "https://stackoverflow.com/questions/57419699/rayonstrlines-is-not-an-iterator", "closed_reason": "Duplicate", "title": "rayon::str::Lines&lt;&#39;_&#39;&gt; is not an iterator", "body": "<p>I'm trying process a file line by line in Rust and parallelise this using Rayon. It complains of the following</p>\n\n<pre><code>rayon::str::Lines&lt;'_&gt;` is not an iterator\n   = help: the trait `std::iter::Iterator` is not implemented for \n   = note: required by `std::iter::IntoIterator::into_iter`\n</code></pre>\n\n<p>This is what the code looks like so far</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rayon::prelude::*;\nuse std::fs;\n\nfn main() {\n    let file_content = match fs::read_to_string(\"input.txt\") {\n        Ok(s) =&gt; s,\n        Err(e) =&gt; {\n            eprintln!(\"Error: {}\", e);\n            std::process::exit(1);\n        }\n    };\n\n    file_content = 5;\n\n    for line in file_content.par_lines() {\n        println!(\"{}\", line);\n    }\n\n    std::process::exit(0);\n}\n</code></pre>\n\n<p>Am I missing a trait definition? How could I fix this error?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 1, "creation_date": 1565281509, "post_id": 57416657, "comment_id": 101313761, "body": "It&#39;s probably more idiomatic for the return type, C, to be an associated type. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5ba7871b9211321cdff0cb6f8d82d5c5\" rel=\"nofollow noreferrer\">See here</a>. Typically, returned types are determined by the <code>impl</code>, which may accept types parametrically (possibly with trait restrictions). Note this doesn&#39;t actually restrict the parameterization, if the <code>impl</code> supports it."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 1, "creation_date": 1565282038, "post_id": 57416657, "comment_id": 101314006, "body": "@Zarenor Some would not agree with you. That an opinion to use or not use associated type. Generic work perfectly too."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 0, "creation_date": 1565284073, "post_id": 57416657, "comment_id": 101314889, "body": "@Zarenor How does it not restrict the parameterisation? In one version A,B,C are all independent, and in another <code>C</code> is determined by A and B no?"}, {"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1565285628, "post_id": 57416657, "comment_id": 101315564, "body": "@Cubic I suppose it depends on how sensible your implementation is. Generally, A and B will necessarily determine the set of options for the type of C. But one can imagine a trivial, if useless, broad implementation, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c804c889511cb07c746f187b97aa318e\" rel=\"nofollow noreferrer\">like this</a>. It&#39;s not fully unconstrained, but I can&#39;t imagine anything less constrained being useful - though there are surely more useful constraints"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1565286862, "post_id": 57416657, "comment_id": 101316062, "body": "&quot;Generally, A and B will necessarily determine the set of options for the type of C.&quot;  No, that&#39;s just incorrect. Just because you can obtain a <code>C</code> somehow given an <code>A</code> and a <code>B</code> that doesn&#39;t mean the <code>C</code> is determined from that. For example, <code>A</code> could be a stream, <code>B</code> a generic deserializer and <code>C</code> the thing you&#39;re deserializing, with the constructor of <code>C</code> controlling how exactly that happens. It&#39;s a common enough situation that there is a dependency between the generic parameters, but it&#39;s not the <i>only</i> situation that occurs in practice."}, {"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 0, "creation_date": 1565289894, "post_id": 57416657, "comment_id": 101317340, "body": "This is a reasonable point. But my point is the rust-y way to do what you propose is probably a marker trait on deserialized types <code>C</code>, and a deserializer parameterized on that trait. The result type is still inferable, and parameterization becomes exposed on the generic deserializer - which otherwise would require a repeat of the type <code>C</code> in the generic <code>B</code>. I never argued that the proposed solution is invalid. Just that for a trait whose main point is some conversion <code>fn(A,B) -&gt; C</code> , the <i>idiomatic</i> thing to do is probably use an associated type for <code>C</code>"}], "tags": [], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "is_accepted": true, "score": 3, "last_activity_date": 1565282081, "last_edit_date": 1565282081, "creation_date": 1565280117, "answer_id": 57416657, "question_id": 57416624, "link": "https://stackoverflow.com/questions/57416624/is-there-a-way-to-define-multi-param-traits-in-rust/57416657#57416657", "title": "Is there a way to define multi-param traits in Rust?", "body": "<p>Yes, you can parameterize traits:</p>\n\n<pre><code>trait Combiner&lt;A, B, C&gt; {\n    fn combine(a: &amp;A, b: &amp;B) -&gt; C;\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f1b8c596c61af59caa60deb657425513\" rel=\"nofollow noreferrer\">on the Rust playground</a></p>\n"}], "owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 57416657, "answer_count": 1, "score": 0, "last_activity_date": 1565282125, "creation_date": 1565279981, "last_edit_date": 1565282125, "question_id": 57416624, "link": "https://stackoverflow.com/questions/57416624/is-there-a-way-to-define-multi-param-traits-in-rust", "title": "Is there a way to define multi-param traits in Rust?", "body": "<p>In Haskell, I can define a type class that references two or more types:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>class Combiner a b c where\n  combine :: a -&gt; b -&gt; c\n</code></pre>\n\n<p>This is called a multi-param type class. Is there a way to write an equivalent trait in Rust, either directly or via a macro that achieves a similar effect? Something like:</p>\n\n<pre><code>trait Combiner {\n    fn combine(&amp;self1, &amp;self2) -&gt; self3;\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1565275002, "post_id": 57414785, "comment_id": 101310165, "body": "Maybe this helps: <a href=\"https://stackoverflow.com/questions/42917566/what-is-this-question-mark-operator-about\" title=\"what is this question mark operator about\">stackoverflow.com/questions/42917566/&hellip;</a>"}, {"owner": {"reputation": 57, "user_id": 4301173, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2741047c803d4cd696ef99656677a54b?s=128&d=identicon&r=PG", "display_name": "NickDa", "link": "https://stackoverflow.com/users/4301173/nickda"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565275875, "post_id": 57414785, "comment_id": 101310696, "body": "I think it makes more sense now , so if i was to add the ? to these two lines : 1) let mut res = reqwest::get(uri).unwrap();   ( remove unwrap and add ? )  2) res.read_to_string(&amp;mut body);  And then modified where i call the function to look something like   let f =  get(url); let f = match f { \tOk(file) =&gt; file, \tErr(error) =&gt; error ,  \t};  Would this be more along the correct lines ?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1565276299, "post_id": 57414785, "comment_id": 101310930, "body": "sounds okay-ish. You can diretly write <code>match get(url) { ... }</code> but yes, that&#39;s what you basically do."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565283524, "post_id": 57414785, "comment_id": 101314650, "body": "The code that you <i>already have</i> works fine if you <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d19035e601b704009c6ce51023b37f17\" rel=\"nofollow noreferrer\">replace <code>unwrap</code> with <code>?</code></a>. You can even <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9dbac48ae8fd6e511e7312b5d05192d3\" rel=\"nofollow noreferrer\">return it all the way up and out of main</a>."}], "owner": {"reputation": 57, "user_id": 4301173, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2741047c803d4cd696ef99656677a54b?s=128&d=identicon&r=PG", "display_name": "NickDa", "link": "https://stackoverflow.com/users/4301173/nickda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 184, "favorite_count": 0, "closed_date": 1565283366, "answer_count": 0, "score": 1, "last_activity_date": 1565283382, "creation_date": 1565274010, "last_edit_date": 1565283317, "question_id": 57414785, "link": "https://stackoverflow.com/questions/57414785/example-for-using-result-instead-of-unwrap-on-function-in-rust", "closed_reason": "Duplicate", "title": "Example for using Result instead of unwrap on function in Rust", "body": "<p>I am learning Rust with little previous coding experience. I am stuck on a simple recipe from the Rust cookbook: making a HTTP GET request.</p>\n\n<p>I am trying to use the <code>Result</code> type to catch errors instead of using <code>.unwrap</code>, which is far from ideal from what I have read. </p>\n\n<p>The code kind of works, but I want to learn how to implement the <code>Result</code> type on the line <code>let mut res = reqwest::get(uri)</code>:</p>\n\n<pre><code>extern crate reqwest;\nuse std::error::Error;\nuse std::io::Read;\n\nfn main() {\n    let url = \"http://www.somedomain.com\";\n    println!(\"Getting source for: {} \", url);\n    get(url);\n}\n\nfn get(uri: &amp;str) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let mut res = reqwest::get(uri).unwrap();\n    let mut body = String::new();\n    res.read_to_string(&amp;mut body);\n\n    println!(\"Status: {}\\n\", res.status());\n    println!(\"Headers : \\n {:#?}\", res.headers());\n    println!(\"Body : \\n\\n {:#?}\", body);\n\n    Ok(())\n}\n</code></pre>\n\n<p>The only examples I have found seem to use the <code>match</code> keyword which I don't think is right in this case.  </p>\n\n<pre><code>let x = match somecondition {\n    Ok() =&gt; { /* ....... */ }\n    Err() =&gt; { /* ....... */ }\n};\n</code></pre>\n\n<p>How can I achieve what I am trying?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565282837, "post_id": 57413949, "comment_id": 101314337, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/57413949/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565282842, "post_id": 57413949, "comment_id": 101314342, "body": "Please paste the exact and entire error that you&#39;re getting \u2014 that will help us to understand what the problem is so we can help best. Sometimes trying to interpret an error message is tricky and it&#39;s actually a different part of the error message that&#39;s important."}, {"owner": {"reputation": 184, "user_id": 10662470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gjEiX.jpg?s=128&g=1", "display_name": "Christian Bell", "link": "https://stackoverflow.com/users/10662470/christian-bell"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565344399, "post_id": 57413949, "comment_id": 101333262, "body": "Awesome - I will check out those tools next time!"}], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 4, "last_activity_date": 1565282913, "last_edit_date": 1565282913, "creation_date": 1565280353, "answer_id": 57416713, "question_id": 57413949, "link": "https://stackoverflow.com/questions/57413949/object-orientated-rust-the-rust-book-chapter-17-blog/57416713#57416713", "title": "Object Orientated Rust (The rust book chapter 17 blog)", "body": "<p>The problem is that <code>state</code> is a member of <code>Post</code>. If you borrow <code>state</code> then you cannot mutably borrow <code>self</code> (that is the <code>Post</code>) at the same time, and that is right. Consider what would happen if your <code>Draft::add_text()</code> function were to assign to the received <code>post.state</code>:</p>\n\n<pre><code>impl State for Draft {\n    fn add_text&lt;'a&gt;(&amp;self, post: &amp;'a mut Post, string: &amp;str) {\n        post.state = None; //killed self!\n    }\n}\n</code></pre>\n\n<p>That would make <code>self</code> disappear while this function is running! That would be terribly unsafe.</p>\n\n<p>This usage pattern is not allowed in Rust, but you have several workarounds available. The nicest, IMO, would be to separate the data to be mutated into another type:</p>\n\n<pre><code>pub struct PostData {\n    content: String,\n}\npub struct Post {\n    state: Option&lt;Box&lt;dyn State&gt;&gt;,\n    data: PostData,\n}\ntrait State {\n    fn add_text&lt;'a&gt;(&amp;self, post: &amp;'a mut PostData, string: &amp;str) {\n        \"\";\n    }\n    //...\n}\nimpl Post {\n    pub fn add_text(&amp;mut self, string: &amp;str) {\n        self.state.as_ref().unwrap().add_text(&amp;mut self.data, string)\n    }\n}\n</code></pre>\n\n<p>This works because you are borrowing separated pieces of <code>self</code>, that is <code>self.state</code> on one hand and <code>self.data</code> on the other.</p>\n\n<p>Another easy workaround would be to remove the status from the <code>Post</code> and re-add it later:</p>\n\n<pre><code>impl Post {\n    pub fn add_text(&amp;mut self, string: &amp;str) {\n        let state = self.state.take();\n        state.as_ref().unwrap().add_text(&amp;mut self, string);\n        assert!(self.state.is_none());\n        self.state = Some(state);\n    }\n}\n</code></pre>\n\n<p>Personally, I find this solution a bit <em>hacky</em>.</p>\n"}, {"tags": [], "owner": {"reputation": 139, "user_id": 10798480, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87dc3efd17e54a8da800585ac7725654?s=128&d=identicon&r=PG&f=1", "display_name": "kkeey", "link": "https://stackoverflow.com/users/10798480/kkeey"}, "is_accepted": false, "score": 1, "last_activity_date": 1592007328, "creation_date": 1592007328, "answer_id": 62354116, "question_id": 57413949, "link": "https://stackoverflow.com/questions/57413949/object-orientated-rust-the-rust-book-chapter-17-blog/62354116#62354116", "title": "Object Orientated Rust (The rust book chapter 17 blog)", "body": "<p>There is a solution provided <a href=\"https://github.com/rust-lang/book/issues/1079#issuecomment-369972431\" rel=\"nofollow noreferrer\">here</a></p>\n\n<p>But this solution has a few deprecation warnings. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=64f8cdbe0364da42c23e808b627a09c4\" rel=\"nofollow noreferrer\">Here's my version which fixes the warnings</a> </p>\n\n<p>For posterity's sake, here is the code in the provided playground link:</p>\n\n<pre><code>pub struct Post {\n    state: Option&lt;Box&lt;dyn State&gt;&gt;,\n    content: String,\n}\n\nimpl Post {\n    pub fn new() -&gt; Post {\n        Post {\n            state: Some(Box::new(Draft {})),\n            content: String::new(),\n        }\n    }\n\n    pub fn add_text(&amp;mut self, text: &amp;str) {\n        self.content = self.state.as_ref().unwrap().add_text(&amp;self.content, text);\n    }\n\n    pub fn content(&amp;self) -&gt; &amp;str {\n        self.state.as_ref().unwrap().content(&amp;self)\n    }\n\n    pub fn request_review(&amp;mut self) {\n        if let Some(s) = self.state.take() {\n            self.state = Some(s.request_review())\n        }\n    }\n\n    pub fn approve(&amp;mut self) {\n        if let Some(s) = self.state.take() {\n            self.state = Some(s.approve())\n        }\n    }\n}\n\ntrait State {\n    fn request_review(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt;;\n    fn approve(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt;;\n\n    fn content&lt;'a&gt;(&amp;self, _post: &amp;'a Post) -&gt; &amp;'a str {\n        \"\"\n    }\n\n    fn add_text(&amp;self, original_text: &amp;str, _text_to_add: &amp;str) -&gt; String {\n        original_text.to_string()\n    }\n}\n\nstruct Draft {}\n\nimpl State for Draft {\n    fn request_review(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt; {\n        Box::new(PendingReview {})\n    }\n\n    fn approve(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt; {\n        self\n    }\n\n    fn add_text(&amp;self, original_text: &amp;str, text_to_add: &amp;str) -&gt; String {\n        format!(\"{}{}\", original_text, text_to_add)\n    }\n}\n\nstruct PendingReview {}\n\nimpl State for PendingReview {\n    fn request_review(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt; {\n        self\n    }\n\n    fn approve(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt; {\n        Box::new(Published {})\n    }\n}\n\nstruct Published {}\n\nimpl State for Published {\n    fn request_review(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt; {\n        self\n    }\n\n    fn approve(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt; {\n        self\n    }\n\n    fn content&lt;'a&gt;(&amp;self, post: &amp;'a Post) -&gt; &amp;'a str {\n        &amp;post.content\n    }\n}\n\n\nfn main() {\n    let mut post = Post::new();\n\n    post.add_text(\"I ate a salad for lunch today\");\n    post.add_text(\"\\nAnd a steak!\");\n    assert_eq!(\"\", post.content());\n\n    post.request_review();\n    post.add_text(\"\\nAnd dessert!\");\n    assert_eq!(\"\", post.content());\n\n    post.approve();\n    post.add_text(\"\\nAnd coffee!\");\n    assert_eq!(\"I ate a salad for lunch today\\nAnd a steak!\", post.content());\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 25, "user_id": 5512810, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-f86f9uwgPfM/AAAAAAAAAAI/AAAAAAAAAEQ/PEbfqSrtA88/photo.jpg?sz=128", "display_name": "Pat", "link": "https://stackoverflow.com/users/5512810/pat"}, "is_accepted": false, "score": 0, "last_activity_date": 1598096416, "creation_date": 1598096416, "answer_id": 63535750, "question_id": 57413949, "link": "https://stackoverflow.com/questions/57413949/object-orientated-rust-the-rust-book-chapter-17-blog/63535750#63535750", "title": "Object Orientated Rust (The rust book chapter 17 blog)", "body": "<p>Here's my take.</p>\n<p>Since it was hinted that the state will be responsible of what might change and not for modifying the Post, add add_text (or a much more appropriate function name) to the State trait. Make it accept a string slice.</p>\n<pre><code>trait State {\n    // Some codes here\n    fn add_text&lt;'a&gt;(&amp;self, _text: &amp;'a str) -&gt; &amp;'a str {\n        &quot;&quot;\n    }\n}\n</code></pre>\n<p>Implement the add_text method for the Draft struct:</p>\n<pre><code>impl State for Draft {\n    // Some codes here\n    fn add_text&lt;'a&gt;(&amp;self, text: &amp;'a str) -&gt; &amp;'a str {\n        text\n    }\n}\n</code></pre>\n<p>Re-write the add_text of Post struct in such a way that it will call add_text of the state and return the &quot;change&quot; that should be added to the current content.</p>\n<pre><code>impl Post {\n    // Some codes here\n    pub fn add_text(&amp;mut self, text: &amp;str) {\n        if let Some(s) = self.state.as_ref() {\n            let text = s.add_text(text);\n            self.content.push_str(text)\n        }\n    }\n    // Some codes here\n}\n</code></pre>\n<p>Only Draft state will return the string slice we pass to it. We'll use the add_text of the state to determine what to append to the current content.</p>\n<pre><code>fn main() {\n    let mut post = Post::new();\n\n    post.add_text(&quot;I ate a salad for lunch today&quot;);\n    post.add_text(&quot;\\nThen slept&quot;);\n    assert_eq!(&quot;&quot;, post.content());\n\n    post.request_review();\n    post.add_text(&quot;\\nThen woke up&quot;);\n    assert_eq!(&quot;&quot;, post.content());\n\n    post.approve();\n    post.add_text(&quot;\\nThen got back to work&quot;);\n    assert_eq!(&quot;I ate a salad for lunch today\\nThen slept&quot;, post.content());\n}\n</code></pre>\n"}], "owner": {"reputation": 184, "user_id": 10662470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gjEiX.jpg?s=128&g=1", "display_name": "Christian Bell", "link": "https://stackoverflow.com/users/10662470/christian-bell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 1, "accepted_answer_id": 57416713, "answer_count": 3, "score": 1, "last_activity_date": 1598096416, "creation_date": 1565271460, "last_edit_date": 1565282831, "question_id": 57413949, "link": "https://stackoverflow.com/questions/57413949/object-orientated-rust-the-rust-book-chapter-17-blog", "title": "Object Orientated Rust (The rust book chapter 17 blog)", "body": "<p>I want to implement the last bullet point on the <a href=\"https://doc.rust-lang.org/book/ch17-03-oo-design-patterns.html#trade-offs-of-the-state-pattern\" rel=\"nofollow noreferrer\">options of going further for creating the blog from <em>The Rust Programming Language</em></a>: </p>\n\n<blockquote>\n  <p>Allow users to add text content only when a post is in the <code>Draft</code> state. Hint: have the state object responsible for what might change about the content but not responsible for modifying the <code>Post</code>.</p>\n</blockquote>\n\n<p>I want to implement the <code>add_text</code> method that would have a default implementation that does nothing in the <code>State</code> trait but would push the string into <code>post.content</code> if the state was <code>Draft</code>:</p>\n\n<pre><code>pub struct Post {\n    state: Option&lt;Box&lt;dyn State&gt;&gt;,\n    content: String,\n}\n\nimpl Post {\n    pub fn new() -&gt; Post {\n        Post {\n            state: Some(Box::new(Draft {})),\n            content: String::new(),\n        }\n    }\n\n    pub fn add_text(&amp;mut self, string: &amp;str) {\n        self.state.as_ref().unwrap().add_text(&amp;mut self, string)\n    }\n\n    pub fn content(&amp;self) -&gt; &amp;str {\n        self.state.as_ref().unwrap().content(&amp;self)\n    }\n}\n\ntrait State {\n    fn content&lt;'a&gt;(&amp;self, post: &amp;'a Post) -&gt; &amp;'a str {\n        \"\"\n    }\n    fn add_text&lt;'a&gt;(&amp;self, post: &amp;'a mut Post, string: &amp;str) {\n        \"\";\n    }\n}\n\nimpl State for Draft {\n    fn add_text&lt;'a&gt;(&amp;self, post: &amp;'a mut Post, string: &amp;str) {\n        &amp;mut post.content.push_str(string);\n    }\n}\n</code></pre>\n\n<p>My issue is around this line of <code>Post::add_text</code></p>\n\n<pre><code>self.state.as_ref().unwrap().add_text(&amp;mut self, string)\n</code></pre>\n\n<p>I get a cannot borrow as mutable try removing &amp;mut.</p>\n\n<p>However:</p>\n\n<pre><code>self.state.as_ref().unwrap().add_text(self, string)\n</code></pre>\n\n<p>Gives me 'cannot borrow <code>*self</code> as mutable because it is also borrowed as immutable'.</p>\n\n<p>Can someone help me with this? I am not sure whether I am going about this in the right way.</p>\n"}, {"tags": ["parsing", "rust"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 8, "last_activity_date": 1565280967, "last_edit_date": 1565280967, "creation_date": 1565257490, "answer_id": 57409689, "question_id": 57408862, "link": "https://stackoverflow.com/questions/57408862/how-to-parse-rust-code-without-using-procedural-macros/57409689#57409689", "title": "How to parse Rust code without using procedural macros?", "body": "<p><code>syn</code> is a Rust parser and is not only for procedural macros. Take a look at <a href=\"https://docs.rs/syn/0.15.43/syn/#functions\" rel=\"nofollow noreferrer\">the \"functions\" section of the documentation</a>. There you will find these functions (as of syn 0.15):</p>\n\n<ul>\n<li><code>fn parse&lt;T: Parse&gt;(tokens: proc_macro::TokenStream) -&gt; Result&lt;T&gt;</code>: this is what you would use in a procedural macro.</li>\n<li><code>fn parse2&lt;T: Parse&gt;(tokens: proc_macro2::TokenStream) -&gt; Result&lt;T&gt;</code>: the same, but with the <code>TokenStream</code> from the <code>proc_macro2</code> crate.</li>\n<li><code>fn parse_str&lt;T: Parse&gt;(s: &amp;str) -&gt; Result&lt;T&gt;</code>: parsing from a simple string. No <code>TokenStream</code>s required.</li>\n<li><code>fn parse_file(content: &amp;str) -&gt; Result&lt;File&gt;</code>: Very similar to <code>parse_str</code>, but some convenient differences. See <a href=\"https://docs.rs/syn/0.15.43/syn/fn.parse_file.html\" rel=\"nofollow noreferrer\">docs for more information</a>.</li>\n</ul>\n\n<p><strong>You can use <code>parse_str</code> or <code>parse_file</code> to parse Rust code from outside of procedural macros.</strong> </p>\n\n<p>A few additional notes:</p>\n\n<ul>\n<li><code>quote</code> is not needed in your case. This crate is just used to easily create <code>TokenStream</code>s; it's not required for parsing.</li>\n<li>In case you are just interested in parsing the tokens, you can use <code>proc_macro2</code> outside of a procedural macro, too!</li>\n<li><code>syntex_syntax</code> is indeed deprecated and shouldn't be used anymore. Just thinking about how it was used makes me shudder :P</li>\n</ul>\n"}], "owner": {"reputation": 124, "user_id": 11882755, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-aYcOuhoU5BA/AAAAAAAAAAI/AAAAAAAAAAc/FT37Y35HapM/photo.jpg?sz=128", "display_name": "Phosphorus15", "link": "https://stackoverflow.com/users/11882755/phosphorus15"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 381, "favorite_count": 0, "accepted_answer_id": 57409689, "answer_count": 1, "score": 4, "last_activity_date": 1565280967, "creation_date": 1565254908, "last_edit_date": 1565280910, "question_id": 57408862, "link": "https://stackoverflow.com/questions/57408862/how-to-parse-rust-code-without-using-procedural-macros", "title": "How to parse Rust code without using procedural macros?", "body": "<p>I am writing an analyzer which needs an abstract syntax tree (AST) or control flow graph (CFG) of Rust code. It seems impossible for me to do this without implementing a parser by myself.</p>\n\n<p>I've noticed some crates such as <code>syn</code> and <code>quote</code>, but they don't work without using procedural macros and creating a totally unnecessary project structure. I've found that there's a crate called <code>syntex_syntax</code> which meets my requirements, but it is no longer maintained and panics when some code with newer syntax is given.</p>\n\n<p>Is there any way of parsing Rust code directly: read from an arbitrary external *.rs file and parse it using <code>syn</code> or <code>quote</code> just like <code>syntex_syntax</code> did?</p>\n"}, {"tags": ["generics", "rust", "operator-overloading"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1565257930, "post_id": 57406658, "comment_id": 101299913, "body": "<a href=\"https://stackoverflow.com/questions/29256519/i-implemented-a-trait-for-another-trait-but-cannot-call-methods-from-both-traits\">Related</a>. But it seems like you already figured out how to correctly do that. The problem here seems to stem from <i>orphan rules</i>. This might be a term to search for."}, {"owner": {"reputation": 4773, "user_id": 535962, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6aa3a26bc30fdd702ce2b00cac46a1ca?s=128&d=identicon&r=PG", "display_name": "lovesh", "link": "https://stackoverflow.com/users/535962/lovesh"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1565258571, "post_id": 57406658, "comment_id": 101300319, "body": "@LukasKalbertodt The orphan rule applies when the trait and type are in different crates which is not the case here."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1565258933, "post_id": 57406658, "comment_id": 101300519, "body": "That is the case here as you implement <code>for T</code> which could be any type. Yes, the type has to implement <code>GroupElement</code> (which is from your crate), but people could depend on your crate and implement <code>GroupElement</code> for their types. So indeed orphan rules are the problem here. But I understand why it doesn&#39;t seem like a problem (especially so if <code>GroupElement</code> is private or your crate is an executable). <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2451-re-rebalancing-coherence.md\" rel=\"nofollow noreferrer\">This RFC</a> which relaxes the rules a bit could help you, but I&#39;m not sure."}, {"owner": {"reputation": 4773, "user_id": 535962, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6aa3a26bc30fdd702ce2b00cac46a1ca?s=128&d=identicon&r=PG", "display_name": "lovesh", "link": "https://stackoverflow.com/users/535962/lovesh"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1565260316, "post_id": 57406658, "comment_id": 101301337, "body": "@LukasKalbertodt Thanks. That makes sense."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1565278388, "post_id": 57406658, "comment_id": 101312149, "body": "Well, you can always do it with a macro. The syntax in <code>impl Add for $group_element</code> even looks like one (due to the <code>$</code>)\u2026"}], "owner": {"reputation": 4773, "user_id": 535962, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6aa3a26bc30fdd702ce2b00cac46a1ca?s=128&d=identicon&r=PG", "display_name": "lovesh", "link": "https://stackoverflow.com/users/535962/lovesh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "closed_date": 1565282018, "answer_count": 0, "score": 0, "last_activity_date": 1565279374, "creation_date": 1565246816, "last_edit_date": 1565279374, "question_id": 57406658, "link": "https://stackoverflow.com/questions/57406658/implement-stdopsadd-for-a-trait", "closed_reason": "Duplicate", "title": "Implement std::ops::Add for a trait", "body": "<p>I have a trait like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Add;\n\npub trait GroupElement: Clone + Sized {\n    fn plus(&amp;self, b: &amp;Self) -&gt; Self;\n}\n\n#[derive(Debug)]\nstruct G1 {\n    value: i32,\n}\n\n#[derive(Debug)]\nstruct G2 {\n    value: i32,\n}\n\nimpl GroupElement for G1 {\n    fn plus(&amp;self, b: &amp;Self) -&gt; Self {\n        let value = self.value + b.value;\n        G1 { value }\n    }\n}\n\nimpl GroupElement for G2 {\n    fn plus(&amp;self, b: &amp;Self) -&gt; Self {\n        let value = self.value + b.value;\n        G2 { value }\n    }\n}\n</code></pre>\n\n<p>Now if I wanted to overload the <code>+</code> operator without code duplication I could use a macro to implement the <code>Add</code> trait like this</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Add for $group_element {\n    type Output = Self;\n\n    fn add(self, other: Self) -&gt; Self {\n        self.plus(&amp;other)\n    }\n}\n</code></pre>\n\n<p>But I want to implement <code>Add</code> for the trait <code>GroupElement</code> so that I can use the generic functions over <code>GroupElement</code> by using the <code>+</code> operator. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T: GroupElement&gt; Add&lt;T&gt; for GroupElement {\n    type Output = Self;\n\n    fn add(self, other: T) -&gt; Self {\n        self.plus(&amp;other)\n    }\n}\n</code></pre>\n\n<p>Above code comlains about GroupElement not having a known size at compile time which I agree with, different groups will have different sizes.</p>\n\n<p>I tried the following code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T: GroupElement&gt; Add&lt;T&gt; for T {\n    type Output = T;\n\n    fn add(self, other: T) -&gt; T {\n        self.plus(&amp;other)\n    }\n}\n</code></pre>\n\n<p>I get error with message <code>type parameter `T` must be used as the type parameter for some local type</code> which seems incorrect since <code>GroupElement</code> is local to my crate. </p>\n\n<p>How should I solve this? The actual implementation of GroupElement is <a href=\"https://github.com/lovesh/amcl_rust_wrapper/blob/master/src/group_elem.rs#L21\" rel=\"nofollow noreferrer\">here</a>. Links to <a href=\"https://github.com/lovesh/amcl_rust_wrapper/blob/master/src/group_elem_g1.rs#L20\" rel=\"nofollow noreferrer\">G1</a> and <a href=\"https://github.com/lovesh/amcl_rust_wrapper/blob/master/src/group_elem_g2.rs#L21\" rel=\"nofollow noreferrer\">G2</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1565246267, "post_id": 57406458, "comment_id": 101293922, "body": "You can pass <code>&amp;path</code> to <code>File::open()</code> to avoid moving <code>path</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565280712, "post_id": 57406458, "comment_id": 101313378, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/57406458/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565280717, "post_id": 57406458, "comment_id": 101313380, "body": "Please paste the exact and entire error that you&#39;re getting \u2014 that will help us to understand what the problem is so we can help best. Sometimes trying to interpret an error message is tricky and it&#39;s actually a different part of the error message that&#39;s important."}], "answers": [{"tags": [], "owner": {"reputation": 355, "user_id": 5258887, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-L9zRIe9evM8/AAAAAAAAAAI/AAAAAAAADGM/FnvN5XDDkmU/photo.jpg?sz=128", "display_name": "Arash Outadi", "link": "https://stackoverflow.com/users/5258887/arash-outadi"}, "is_accepted": false, "score": 0, "last_activity_date": 1565284145, "last_edit_date": 1565284145, "creation_date": 1565247103, "answer_id": 57406734, "question_id": 57406458, "link": "https://stackoverflow.com/questions/57406458/how-can-i-rename-a-file-given-a-path-once-the-path-has-been-moved/57406734#57406734", "title": "How can I rename a file given a Path once the path has been moved?", "body": "<p>As <a href=\"https://stackoverflow.com/questions/57406458/rename-file-given-a-path#comment101293922_57406458\">Sven Marnach said</a>, the trick was to pass a reference to <code>File::open()</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Settings {\n        pub fn load() -&gt; Self {\n        let mut path = Settings::get_settings_path();\n        if let Ok(file) = fs::File::open(&amp;path) {\n            match ron::de::from_reader(file) {\n                Ok(x) =&gt; x,\n                Err(e) =&gt; {\n                    log::warn!(\"Failed to parse setting file! Fallback to default. {}\", e);\n                    // Rename the corrupted settings file\n                    let mut new_path = path.to_owned();\n                    new_path.pop();\n                    new_path.push(\"settings.invalid.ron\");\n                    if let Err(err) = std::fs::rename(path, new_path) {\n                        log::warn!(\"Failed to rename settings file. {}\", err);\n                    }\n                }\n            }\n        }\n        let default_settings = Self::default();\n        default_settings.save_to_file_warn();\n        default_settings\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 355, "user_id": 5258887, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-L9zRIe9evM8/AAAAAAAAAAI/AAAAAAAADGM/FnvN5XDDkmU/photo.jpg?sz=128", "display_name": "Arash Outadi", "link": "https://stackoverflow.com/users/5258887/arash-outadi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 114, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1565284145, "creation_date": 1565245948, "last_edit_date": 1565280704, "question_id": 57406458, "link": "https://stackoverflow.com/questions/57406458/how-can-i-rename-a-file-given-a-path-once-the-path-has-been-moved", "title": "How can I rename a file given a Path once the path has been moved?", "body": "<p>I am trying to rename a file named <code>settings.ron</code> -> <code>setting.invalid.ron</code>, given the path to <code>settings.ron</code> which might change depending on the environment.     </p>\n\n<p>I am running into trouble with moving the value of <code>path</code> when it was already borrowed in the <code>File</code> reading operation.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Settings {\n    pub fn load() -&gt; Self {\n        let path = Settings::get_settings_path();\n        if let Ok(file) = fs::File::open(path) {\n            match ron::de::from_reader(file) {\n                Ok(x) =&gt; x,\n                Err(e) =&gt; {\n                    log::warn!(\"Failed to parse setting file! Fallback to default. {}\", e);\n                    path.with_file_name(\"settings.invalid.ron\");\n                }\n            }\n        }\n        let default_settings = Self::default();\n        default_settings.save_to_file_warn();\n        default_settings\n    }\n}\n</code></pre>\n\n<p>I got it working, but it seems odd to have to create an extra variable:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Settings {\n    pub fn load() -&gt; Self {\n        let path = Settings::get_settings_path();\n        let mut path_buf = path.to_owned();\n        if let Ok(file) = fs::File::open(path) {\n            match ron::de::from_reader(file) {\n                Ok(x) =&gt; x,\n                Err(e) =&gt; {\n                    log::warn!(\"Failed to parse setting file! Fallback to default. {}\", e);\n                    path_buf.set_file_name(\"settings.invalid.ron\");\n                }\n            }\n        }\n        let default_settings = Self::default();\n        default_settings.save_to_file_warn();\n        default_settings\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 1059, "user_id": 3877913, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/U2MTh.jpg?s=128&g=1", "display_name": "Marouane Fazouane", "link": "https://stackoverflow.com/users/3877913/marouane-fazouane"}, "edited": false, "score": 0, "creation_date": 1565244420, "post_id": 57406018, "comment_id": 101293165, "body": "Maybe because of concurrency ? I would guess that v.len() wouldn&#39;t play nice when another thread is changing v."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565244459, "post_id": 57406018, "comment_id": 101293180, "body": "You could alter the length of the vector in that for loop/statement and then what would <code>v.len()</code> give you? The old length? The new one? This violates Rust borrowing rules which means either one exclusive (mut) reference or multiple shared (immutable) references. Not both"}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1565245156, "post_id": 57406018, "comment_id": 101293438, "body": "This is unrelated to your question, but <code>s[i] = v[i];</code> will panic at runtime since array access is dependent on the <i>length</i> of the vector, not its capacity. A better way to express what you have would be <code>let s = v[..n].to_vec();</code> (of course you&#39;ll want to make sure n &lt; v.len() to avoid a panic here)."}, {"owner": {"reputation": 448, "user_id": 1094478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a7cb0e6622baaed2aa19506424451d?s=128&d=identicon&r=PG", "display_name": "jspencer", "link": "https://stackoverflow.com/users/1094478/jspencer"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565245182, "post_id": 57406018, "comment_id": 101293450, "body": "@hellow, if I pull the index calc out to a let statement just above the access, the compiler would be fine with that, but it&#39;s subject to the same issue you raise.  That issue is one of running out of bounds, which the borrow checker doesn&#39;t make any guarantees about."}, {"owner": {"reputation": 448, "user_id": 1094478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a7cb0e6622baaed2aa19506424451d?s=128&d=identicon&r=PG", "display_name": "jspencer", "link": "https://stackoverflow.com/users/1094478/jspencer"}, "reply_to_user": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1565245428, "post_id": 57406018, "comment_id": 101293544, "body": "@SCappella  Very good points, updated.  Though, as you said, it was not the focus of the question, I did not see the panic coming (&#39;cause I couldn&#39;t run it!)  Thanks for the catch."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565280061, "post_id": 57406018, "comment_id": 101313032, "body": "yes but you simply never need to do that in real Rust code."}, {"owner": {"reputation": 448, "user_id": 1094478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a7cb0e6622baaed2aa19506424451d?s=128&d=identicon&r=PG", "display_name": "jspencer", "link": "https://stackoverflow.com/users/1094478/jspencer"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565280537, "post_id": 57406018, "comment_id": 101313275, "body": "@Stargateur Are you saying you never need to index based on the length of the vector?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565281168, "post_id": 57406018, "comment_id": 101313602, "body": "@jspencer because in rust we would do <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dde54bb585a42d387826ed32a85125de\" rel=\"nofollow noreferrer\">this</a> or use iterator, depend on the case. We don&#39;t use index expect for few cases. (the exemple does not match your case because I don&#39;t understand what you want to do with this strange loop)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565281536, "post_id": 57406018, "comment_id": 101313773, "body": "See also <a href=\"https://stackoverflow.com/q/41187296/155423\">Cannot borrow as immutable because it is also borrowed as mutable in function arguments</a>"}, {"owner": {"reputation": 448, "user_id": 1094478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a7cb0e6622baaed2aa19506424451d?s=128&d=identicon&r=PG", "display_name": "jspencer", "link": "https://stackoverflow.com/users/1094478/jspencer"}, "edited": false, "score": 0, "creation_date": 1565282675, "post_id": 57406018, "comment_id": 101314269, "body": "@Stargteur Thanks for that alternative.  Even so, &quot;simply never need to do this&quot; seems an overly strong statement.  The original code was from a vector rotation--move n elements from the front circularly to the back.  You can imagine in-place transformations reading from one part of the vector and writing to another, in which case an iterator only covers one of those indexing ops.  Imagine s[i] here as a different indexing of v also.  Granted this is very C-in-Rust-y, and there&#39;s always <i>another</i> way, but the question is &quot;why should this way be disallowed?&quot;"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565305551, "post_id": 57406018, "comment_id": 101322479, "body": "@jspencer The thing is Rust don&#39;t disallow it, just mutate thing is not something so easy in Rust, still much better than Ocaml :p. But this kind of thing is often build one time in core std or in a crate and the user never have to deal with some unpractical thing in Rust. Well, that the goal at least. If you want to rotate you better look at <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.rotate_left\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.slice.html#method.rotate_lef&zwnj;&#8203;t</a>. (also, Rust and llvm is better to optimize iterator than index obscure operation)(Instead of describe Y problem that you have trying to solve X, ask directly X and say you try Y)"}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1565245055, "post_id": 57406208, "comment_id": 101293391, "body": "<i>Since it is not possible to start the call to IndexMut&lt;Idx&gt;::index_mut(&amp;mut self, index: Idx) before computing the Idx</i> it works with this way btw  <code>*v.index_mut(i + v.len() - n) = s[1]</code> , <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=479383c87c75df47c5ee3788ab08446c\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 448, "user_id": 1094478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a7cb0e6622baaed2aa19506424451d?s=128&d=identicon&r=PG", "display_name": "jspencer", "link": "https://stackoverflow.com/users/1094478/jspencer"}, "edited": false, "score": 0, "creation_date": 1565245077, "post_id": 57406208, "comment_id": 101293407, "body": "Right.  I guess I&#39;m wondering why the compiler doesn&#39;t do this first and then run the borrow checker."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1565246194, "post_id": 57406208, "comment_id": 101293890, "body": "@&#214;merErden: That&#39;s interesting!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 448, "user_id": 1094478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a7cb0e6622baaed2aa19506424451d?s=128&d=identicon&r=PG", "display_name": "jspencer", "link": "https://stackoverflow.com/users/1094478/jspencer"}, "edited": false, "score": 0, "creation_date": 1565265673, "post_id": 57406208, "comment_id": 101304201, "body": "@jspencer <a href=\"https://github.com/rust-lang/rust/issues/49434\" rel=\"nofollow noreferrer\">Issue #49434</a> relates to this: &quot;Note this does /not/ include <code>IndexMut</code> operations at this time&quot;."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1565281219, "last_edit_date": 1565281219, "creation_date": 1565244881, "answer_id": 57406208, "question_id": 57406018, "link": "https://stackoverflow.com/questions/57406018/why-is-indexing-a-mutable-vector-based-on-its-len-considered-simultaneous-borr/57406208#57406208", "title": "Why is indexing a mutable vector based on its len() considered simultaneous borrowing?", "body": "<blockquote>\n  <p>If so, surely the compiler could improve this...right? </p>\n</blockquote>\n\n<p>Indeed, NLL intentionally started conservatively, as explained in <a href=\"https://github.com/rust-lang/rust/issues/49434\" rel=\"nofollow noreferrer\">#49434</a><sup>1</sup>.</p>\n\n<p>Extracting the temporary allows it to compile:</p>\n\n<pre><code>fn main() {\n    let mut v = vec![1, 2, 3, 4, 5];\n    let n = 3;\n    // checks on n and v.len() and whatever else...\n    let s = v[..n].to_vec();\n    for i in 0..n {\n        let index = i + v.len() - n;\n        v[index] = s[1];\n    }\n}\n</code></pre>\n\n<p>This makes it clear that the issue is strictly one of not computing the index before attempting to use it.</p>\n\n<p>Since it is not possible to start the call to <code>IndexMut&lt;Idx&gt;::index_mut(&amp;mut self, index: Idx)</code> before computing the <code>Idx</code>, there is no reason to start the mutable borrow of <code>v</code> before computing the index.</p>\n\n<p><sup>1</sup> <em>Courtesy of <a href=\"https://stackoverflow.com/users/3650362/trentcl\">trentcl</a>.</em></p>\n"}], "owner": {"reputation": 448, "user_id": 1094478, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6a7cb0e6622baaed2aa19506424451d?s=128&d=identicon&r=PG", "display_name": "jspencer", "link": "https://stackoverflow.com/users/1094478/jspencer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "accepted_answer_id": 57406208, "answer_count": 1, "score": 5, "last_activity_date": 1565281435, "creation_date": 1565244103, "last_edit_date": 1565281435, "question_id": 57406018, "link": "https://stackoverflow.com/questions/57406018/why-is-indexing-a-mutable-vector-based-on-its-len-considered-simultaneous-borr", "title": "Why is indexing a mutable vector based on its len() considered simultaneous borrowing?", "body": "<p>I know the general answer \u2014 You can only borrow mutably once or immutably many times, but not both. I want to know why this specific case is considered simultaneous borrowing.</p>\n\n<p>I have the following code:</p>\n\n<pre><code>fn main() {\n    let mut v = vec![1, 2, 3, 4, 5];\n    let n = 3;\n    // checks on n and v.len() and whatever else...\n    let mut s = v[..n].to_vec();\n    for i in 0..n {\n        v[i + v.len() - n] = s[1];\n    }\n}\n</code></pre>\n\n<p>which produces the following error under 1.36.0:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `v` as immutable because it is also borrowed as mutable\n --&gt; src/main.rs:7:15\n  |\n7 |         v[i + v.len() - n] = s[1];\n  |         ------^-----------\n  |         |     |\n  |         |     immutable borrow occurs here\n  |         mutable borrow occurs here\n  |         mutable borrow later used here\n</code></pre>\n\n<p>It seems that there is no way for the write to <code>v[x]</code> to happen until <code>x</code> is computed, by which time the immutable borrow will be complete.  Since the ordering here is completely in series, why doesn't the compiler recognize the dependency and treat these as non-overlapping borrows?  Put another way, is there any scenario where this could lead to an actual problem?</p>\n\n<p><a href=\"https://stackoverflow.com/questions/57406018/in-rust-why-cant-i-index-a-mutable-vector-based-on-its-len#comment101293165_57406018\">Marouane Fazouane suggested concurrency as a possibility</a>, but I don't think this is the case.  If there were another thread with a (presumably) mutable reference, it would be a violation to then call <code>v.len()</code>, or to start <code>v[...]</code>.  Here, the compiler knows everything that's happening to <code>v</code> \u2014 it's a local definition with no other calls.  For me, the question is why is this simultaneous borrowing when there's no way for <code>v[]</code> to happen until <code>len()</code> returns.  It's akin to <code>v.mutable_call(v.immutable_call());</code></p>\n\n<p>Incidentally, an earlier version of the compiler (1.28) gave an error that indicated the close bracket as the end of the mutable borrow, so it seemed order is based on the source order, and since the source has the two intermingled, they could be considered overlapping.  If so, surely the compiler could improve this...right?</p>\n\n<p>This seems closely related to <a href=\"https://stackoverflow.com/questions/55922926/why-is-there-a-borrow-error-when-no-borrowing-overlap-is-occurring?rq=1\">Why is there a borrow error when no borrowing overlap is occurring?</a></p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565231217, "post_id": 57404264, "comment_id": 101290222, "body": "What resources did you follow that led you to think that <code>&amp;&#39;a self.first</code> is valid syntax?"}, {"owner": {"reputation": 261, "user_id": 1591272, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fbcVN.png?s=128&g=1", "display_name": "Lemma Prism", "link": "https://stackoverflow.com/users/1591272/lemma-prism"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565232341, "post_id": 57404264, "comment_id": 101290419, "body": "<i>Ooh...</i> So that&#39;s something that led me astray. Thank you, I must have been generalizing from type signatures. Okay, so in that case what I needed to figure out is how to disambiguate lifetimes so Rust can infer the correct one. (I now get, <code>cannot infer an appropriate lifetime for borrow expression due to conflicting requirements</code>.)"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1565231394, "creation_date": 1565231394, "answer_id": 57404414, "question_id": 57404264, "link": "https://stackoverflow.com/questions/57404264/how-to-resolve-expected-found-keyword-self/57404414#57404414", "title": "How to resolve expected `:`, found keyword `self`?", "body": "<p>Your <em>question</em> is solved by pointing out that <code>&amp;'a foo</code> isn't a valid expression. It doesn't make sense to specify a lifetime when taking a reference as the compiler will automatically ensure the correct lifetimes.</p>\n\n<p>You want to use <code>Some(&amp;self.first)</code>.</p>\n\n<hr>\n\n<p>Your <em>problem</em> is addressed by <a href=\"https://stackoverflow.com/q/30422177/155423\">How do I write an iterator that returns references to itself?</a>.</p>\n"}], "owner": {"reputation": 261, "user_id": 1591272, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fbcVN.png?s=128&g=1", "display_name": "Lemma Prism", "link": "https://stackoverflow.com/users/1591272/lemma-prism"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 316, "favorite_count": 0, "accepted_answer_id": 57404414, "answer_count": 1, "score": 0, "last_activity_date": 1565231441, "creation_date": 1565229740, "last_edit_date": 1565231441, "question_id": 57404264, "link": "https://stackoverflow.com/questions/57404264/how-to-resolve-expected-found-keyword-self", "title": "How to resolve expected `:`, found keyword `self`?", "body": "<p>I'm learning to write iterators in Rust but am hitting an \"expected colon\" issue where I would not expect a colon to even make sense. Maybe it has to do with lifetimes? References? I tried making a regular function that returns the same data in the same way and it worked (or at least got past this error message) so it appears to be special to the <code>Iterator</code> trait... but I can't work out why.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct LogEntry;\n\npub struct LogIter&lt;'a&gt; {\n    index0: bool,\n    first: LogEntry,\n    iter: ::std::slice::Iter&lt;'a, LogEntry&gt;,\n}\n\nimpl&lt;'a&gt; Iterator for LogIter&lt;'a&gt; {\n    type Item = &amp;'a LogEntry;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.index0 = false;\n        match self.index0 {\n            true =&gt; Some(&amp;'a self.first),\n            false =&gt; self.iter.next(),\n        }\n    }\n}\n\n</code></pre>\n\n<p>It is meant to return <code>first</code> and then iterate normally but I cannot figure out why or how I could possibly fit a colon in here.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected `:`, found keyword `self`\n  --&gt; src/lib.rs:14:30\n   |\n14 |             true =&gt; Some(&amp;'a self.first),\n   |                              ^^^^ expected `:`\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 1, "last_activity_date": 1565227239, "creation_date": 1565227239, "answer_id": 57404056, "question_id": 57403939, "link": "https://stackoverflow.com/questions/57403939/how-to-return-a-value-and-a-reference-to-a-portion-of-that-value/57404056#57404056", "title": "How to return a value and a reference to a portion of that value?", "body": "<p>There would be a use after free error if you did this:</p>\n\n<ol>\n<li><code>conn</code> is created, it has no attached lifetime</li>\n<li>We borrow <code>conn</code> for <code>'a</code>, which in and of itself is impossible since I could say the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d4968ad190dd21fbde3c2f40f7275d48\" rel=\"nofollow noreferrer\">following</a>:</li>\n</ol>\n\n<pre><code>State::&lt;'static&gt;::new()\n</code></pre>\n\n<ol start=\"3\">\n<li>We move <code>conn</code> out of the function, invalidating any references to it. </li>\n</ol>\n\n<p>So therefore, unless if there's a different way to achieve this in the library you're working with, this won't work as-is. Another name for this is a self-referential struct, so you might want to do some looking into why that doesn't work in rust. </p>\n"}], "owner": {"reputation": 15, "user_id": 5693310, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe174ad995cefac7e6321cc404a41a2e?s=128&d=identicon&r=PG", "display_name": "personkfl453kmt0", "link": "https://stackoverflow.com/users/5693310/personkfl453kmt0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "closed_date": 1565231033, "accepted_answer_id": 57404056, "answer_count": 1, "score": 0, "last_activity_date": 1565231645, "creation_date": 1565225929, "last_edit_date": 1565231645, "question_id": 57403939, "link": "https://stackoverflow.com/questions/57403939/how-to-return-a-value-and-a-reference-to-a-portion-of-that-value", "closed_reason": "Duplicate", "title": "How to return a value and a reference to a portion of that value?", "body": "<p>I'm trying to use <a href=\"https://rtbo.github.io/rust-xcb/xcb/index.html\" rel=\"nofollow noreferrer\">some xcb bindings</a> while trying to learn Rust.</p>\n\n<p><code>conn.get_setup()</code> only borrows an immutable reference; doesn't that borrow end after the function call ends?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error; \nuse std::convert::From;\n\npub struct State&lt;'a&gt; {\n    conn: xcb::Connection,\n    screen: xcb::Screen&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; State&lt;'a&gt; {\n    pub fn new() -&gt; Result&lt;State&lt;'a&gt;, Box&lt;dyn Error&gt;&gt; {\n        let (conn, _) = xcb::Connection::connect(None)?;\n        let screen = conn.get_setup().roots().next().ok_or::&lt;Box&lt;dyn Error&gt;&gt;(From::from(\"Couldn't get screen\"))?;\n        Ok(State{conn: conn, screen:screen})\n    }\n}\n</code></pre>\n\n<p>The compiler gives me</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing local variable `conn`\n  --&gt; /.../src/lib.rs:16:4\n   |\n15 |             let screen = conn.get_setup().roots().next().ok_or::&lt;Box&lt;dyn Error&gt;&gt;(From::from(\"Couldn't get screen\"))?;\n   |                          ---- `conn` is borrowed here\n16 |             Ok(State{conn: conn, screen:screen})\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returns a value referencing data owned by the current function\n\nerror[E0505]: cannot move out of `conn` because it is borrowed\n  --&gt; /.../src/lib.rs:16:19\n   |\n12 |     impl&lt;'a&gt; State&lt;'a&gt; {\n   |          -- lifetime `'a` defined here\n...\n15 |             let screen = conn.get_setup().roots().next().ok_or::&lt;Box&lt;dyn Error&gt;&gt;(From::from(\"Couldn't get screen\"))?;\n   |                          ---- borrow of `conn` occurs here\n16 |             Ok(State{conn: conn, screen:screen})\n   |             ---------------^^^^-----------------\n   |             |              |\n   |             |              move out of `conn` occurs here\n   |             returning this value requires that `conn` is borrowed for `'a`\n</code></pre>\n\n<p>Is there any way to return both <code>conn</code> and <code>state</code> or am I just limited to <code>conn</code>?</p>\n"}]