[{"tags": ["module", "rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1545860058, "post_id": 53937379, "comment_id": 94714794, "body": "Congratulations on 10k."}], "tags": [], "owner": {"reputation": 10986, "user_id": 442558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcbab42b4e40d170dfb4551b24152656?s=128&d=identicon&r=PG", "display_name": "stew", "link": "https://stackoverflow.com/users/442558/stew"}, "is_accepted": true, "score": 10, "last_activity_date": 1545883677, "last_edit_date": 1545883677, "creation_date": 1545859814, "answer_id": 53937379, "question_id": 53937312, "link": "https://stackoverflow.com/questions/53937312/cant-compile-project-when-using-modules-in-multiple-files-imports-can-only-re/53937379#53937379", "title": "Can&#39;t compile project when using modules in multiple files: &quot;imports can only refer to extern crate names passed with --extern&quot;", "body": "<p>Change</p>\n\n<pre><code>use bear::factory::make_bear;\n</code></pre>\n\n<p>to </p>\n\n<pre><code>use crate::bear::factory::make_bear;\n</code></pre>\n\n<p>This was a change <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html\" rel=\"noreferrer\">in the 2018 edition of Rust</a>. I won't recreate everything on this page, but I can say that the motivation for this change is twofold, one is to stop requiring the <code>extern crate bear;</code> directives, while also removing the ambiguities that might arise in the case that you have both a local module name <code>bear</code> and also a dependency on an external crate also named <code>bear</code>.</p>\n"}], "owner": {"reputation": 70, "user_id": 10464125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e44d6508570b7f487dfebb73bac1a787?s=128&d=identicon&r=PG&f=1", "display_name": "DanielGuy", "link": "https://stackoverflow.com/users/10464125/danielguy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 841, "favorite_count": 0, "accepted_answer_id": 53937379, "answer_count": 1, "score": 5, "last_activity_date": 1545883677, "creation_date": 1545859373, "last_edit_date": 1545859851, "question_id": 53937312, "link": "https://stackoverflow.com/questions/53937312/cant-compile-project-when-using-modules-in-multiple-files-imports-can-only-re", "title": "Can&#39;t compile project when using modules in multiple files: &quot;imports can only refer to extern crate names passed with --extern&quot;", "body": "<p>I have <em>main.rs</em> and <em>bear.rs</em> under the <em>src</em> directory. Every time I compile, the compiler points to <a href=\"https://doc.rust-lang.org/stable/error-index.html#E0658\" rel=\"noreferrer\">E0658</a>. I've read the docs for E0658, and it tells me that this is an unstable feature. </p>\n\n<p><em>main.rs</em></p>\n\n<pre><code>mod bear;\n\nuse bear::factory::make_bear;\n\nfn main() {\n    println!(\"Hello, world!\");\n    let bear = make_bear();\n}\n</code></pre>\n\n<p><em>bear.rs</em></p>\n\n<pre><code>pub mod factory {\n    pub fn make_bear() -&gt; Bear {\n        // code to instantiate Bear struct.\n    }    \n}\n</code></pre>\n\n<p>When I compile this code I get this from the compiler:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0658]: imports can only refer to extern crate names passed with `--extern` on stable channel (see issue #53130)\n  --&gt; src/main.rs:1:5\n   |\n1  |   use bear::factory::make_bear;\n   |       ^^^^\n...\n8  | / mod bear {\n9  | |     pub mod factory {\n10 | |         pub fn make_bear() -&gt; Bear {\n11 | |             // code to instantiate Bear struct.\n12 | |         }\n13 | |     }\n14 | | }\n   | |_- not an extern crate passed with `--extern`\n   |\n</code></pre>\n\n<p>Do I have to wait for consensus among the  Rust community, or is there something I can do right now besides the inconvenient suggestion in the docs? </p>\n"}, {"tags": ["hashmap", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545851578, "post_id": 53936003, "comment_id": 94712406, "body": "<code>employee_department_map.entry(String::from(department_name.t&zwnj;&#8203;rim())).or_insert_wi&zwnj;&#8203;th(Vec::new).push(St&zwnj;&#8203;ring::from(employee_&zwnj;&#8203;name.trim()));</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545851702, "post_id": 53936003, "comment_id": 94712448, "body": "Stackoverflow is not here to post question about already working code. Better ask on the chat, <a href=\"https://chat.stackoverflow.com/rooms/62927/rust\">chat.stackoverflow.com/rooms/62927/rust</a>, for little tips about how to write code in more elegant way."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545851764, "post_id": 53936003, "comment_id": 94712468, "body": "<code>&amp;i32</code> =&gt; <code>i32</code>, there is no gain to use a reference for Copy type."}], "owner": {"reputation": 1155, "user_id": 4983469, "user_type": "registered", "accept_rate": 94, "profile_image": "https://lh6.googleusercontent.com/-btlwMISgi2c/AAAAAAAAAAI/AAAAAAAAAKs/L041fOZBcY0/photo.jpg?sz=128", "display_name": "leoOrion", "link": "https://stackoverflow.com/users/4983469/leoorion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 1, "closed_date": 1545851491, "answer_count": 0, "score": 0, "last_activity_date": 1545878349, "creation_date": 1545850664, "last_edit_date": 1545878349, "question_id": 53936003, "link": "https://stackoverflow.com/questions/53936003/is-there-a-cleaner-way-to-mutate-vectors-in-hashmaps", "closed_reason": "Duplicate", "title": "Is there a cleaner way to mutate vectors in hashmaps?", "body": "<p>I have <code>HashMap&lt;String, Vec&lt;String&gt;&gt;</code>. It is a map of departments to a list of employees in each of them. If an entry for the department already exists, it takes the vector and adds the employee to it, otherwise it creates a new vector and inserts it as value for the department:</p>\n\n<pre><code>use std::{\n    collections::{hash_map::Entry::*, HashMap},\n    io,\n};\n\nfn create_map_of_employees(number_of_employees: &amp;i32) -&gt; HashMap&lt;String, Vec&lt;String&gt;&gt; {\n    let mut employee_department_map: HashMap&lt;String, Vec&lt;String&gt;&gt; = HashMap::new();\n\n    for _ in 0..*number_of_employees {\n        let mut employee_name = String::new();\n        let mut department_name = String::new();\n        println!(\"Enter Employee name:\");\n        io::stdin()\n            .read_line(&amp;mut employee_name)\n            .expect(\"Input Error\");\n\n        println!(\"Enter Department name:\");\n        io::stdin()\n            .read_line(&amp;mut department_name)\n            .expect(\"Input Error\");\n\n        match employee_department_map.entry(String::from(department_name.trim())) {\n            Occupied(o) =&gt; {\n                let vector = o.into_mut();\n                vector.push(String::from(employee_name.trim()));\n            }\n            Vacant(v) =&gt; {\n                v.insert(vec![String::from(employee_name.trim())]);\n            }\n        }\n    }\n    employee_department_map\n}\n</code></pre>\n\n<p>Is there a cleaner way to do this than what is currently being done? It seems a very messy to me right now. </p>\n\n<p>I have already looked up on these questions.</p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1545845794, "post_id": 53935089, "comment_id": 94710594, "body": "AFAICT, the compiler tries to tell you that items returned by decoder may have a shorter lifetime than <code>&#39;a</code>, so references to them can&#39;t be safely put to the <code>data</code> vector. Either guarantee the lifetime of the decoded objects, or make copies, or maybe &quot;move&quot; the data, not &quot;borrow&quot; it."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1545851236, "post_id": 53935089, "comment_id": 94712281, "body": "This is the &quot;streaming iterator&quot; problem, a recurring issue with the way Rust&#39;s iterators are defined. See especially the comments by &quot;le_me&quot; in my linked dupe suggestion for a bit of explanation."}], "owner": {"reputation": 4768, "user_id": 787366, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a49b6d8775416297257c4c4d36e39967?s=128&d=identicon&r=PG", "display_name": "Shmoopy", "link": "https://stackoverflow.com/users/787366/shmoopy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1545851658, "answer_count": 0, "score": 0, "last_activity_date": 1545851742, "creation_date": 1545844839, "last_edit_date": 1545851742, "question_id": 53935089, "link": "https://stackoverflow.com/questions/53935089/implement-an-iterator-which-lazily-fetches-data-from-another-struct", "closed_reason": "Duplicate", "title": "Implement an iterator which lazily fetches data from another struct", "body": "<p>I'm trying to write an iterator over data which is lazily fetched from the local disk:</p>\n\n<pre><code>struct Data {}\n\nstruct DataDecoder {}\n\nimpl DataDecoder {\n    fn decode_data(&amp;mut self) -&gt; Option&lt;Vec&lt;Data&gt;&gt; {\n        // in reality does some IO, might fail\n        Some(vec![Data {}])\n    }\n\n    fn iter(&amp;self) -&gt; DataIterator {\n        DataIterator {\n            decoder: self,\n            data: None,\n            idx: 0,\n        }\n    }\n}\n\nstruct DataIterator&lt;'a&gt; {\n    decoder: &amp;'a DataDecoder,\n    data: Option&lt;Vec&lt;Data&gt;&gt;,\n    idx: usize,\n}\n\nimpl&lt;'a&gt; Iterator for DataIterator&lt;'a&gt; {\n    type Item = &amp;'a Data;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.data.is_none() {\n            self.data = self.decoder.decode_data();\n        }\n        let ret = match self.data {\n            None =&gt; None,\n            Some(ref data) =&gt; data.get(self.idx),\n        };\n        self.idx += 1;\n        ret\n    }\n}\n</code></pre>\n\n<p>I'm getting a compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for pattern due to conflicting requirements\n  --&gt; src/lib.rs:35:18\n   |\n35 |             Some(ref data) =&gt; data.get(self.idx),\n   |                  ^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 29:5...\n  --&gt; src/lib.rs:29:5\n   |\n29 | /     fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n30 | |         if self.data.is_none() {\n31 | |             self.data = self.decoder.decode_data();\n32 | |         }\n...  |\n38 | |         ret\n39 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:35:18\n   |\n35 |             Some(ref data) =&gt; data.get(self.idx),\n   |                  ^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 26:6...\n  --&gt; src/lib.rs:26:6\n   |\n26 | impl&lt;'a&gt; Iterator for DataIterator&lt;'a&gt; {\n   |      ^^\n   = note: ...so that the types are compatible:\n           expected std::iter::Iterator\n              found std::iter::Iterator\n</code></pre>\n\n<p>What do I need to change?</p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545859675, "post_id": 53934888, "comment_id": 94714668, "body": "Not all IO errors <i>have</i> a path associated (or even deal with a filesystem to start with!)"}], "answers": [{"comments": [{"owner": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 0, "creation_date": 1545857841, "post_id": 53935077, "comment_id": 94714154, "body": "It looks quite good \u2014 I only had to change <code>&quot;IO Error&quot;</code> to <code>&quot;{path}: {source}&quot;</code> in order to have a more user friendly message when using <code>eprintln!(&quot;{}&quot;, err);</code>. I must say I was hoping something simpler / less verbose, especially to convert the IO error to the custom error."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 0, "creation_date": 1545858105, "post_id": 53935077, "comment_id": 94714251, "body": "This is the less verbose version. Try the same without a crate like custom_error or failure. Note that custom_error makes it easier to deal with several error types when you don&#39;t add data but just wrap the source error: <a href=\"https://docs.rs/custom_error/latest/custom_error/macro.custom_error.html#automatic-conversion-from-other-error-types\" rel=\"nofollow noreferrer\">docs.rs/custom_error/latest/custom_error/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545859645, "post_id": 53935077, "comment_id": 94714654, "body": "I also think I&#39;d store the path as a <code>PathBuf</code> instead of eagerly performing the lossy transformation."}, {"owner": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 1, "creation_date": 1545903848, "post_id": 53935077, "comment_id": 94724468, "body": "Using a <code>PathBuf</code> in the error is a bit more work, because the <code>custom_error!</code> macro generates some code that tries to use <code>to_string()</code> on the path, but this method is not available there."}, {"owner": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 1, "creation_date": 1545904157, "post_id": 53935077, "comment_id": 94724596, "body": "the updated code is in this gist: <a href=\"https://gist.github.com/glehmann/72e0acd5c176e6a3d532433b0d671e61\" rel=\"nofollow noreferrer\">gist.github.com/glehmann/72e0acd5c176e6a3d532433b0d671e61</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 0, "creation_date": 1545904300, "post_id": 53935077, "comment_id": 94724653, "body": "@Ga&#235;tanLehmann your updated code looks good. I&#39;d suggest you edit my answer (but be wary that changing the argument passed to <code>file_size</code> is changing the question too)"}, {"owner": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 0, "creation_date": 1545904436, "post_id": 53935077, "comment_id": 94724698, "body": "After scratching my head a bit on that problem, I think what I&#39;d really like to have is just <code>Ok(metadata(path).with_path(path)?.len())</code>, <code>with_path</code> being equivalent to a call to <code>map_err</code> to convert the error to a new type, but much less verbose\u2026"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 0, "creation_date": 1545905689, "post_id": 53935077, "comment_id": 94725219, "body": "@Ga&#235;tanLehmann I modified my answer to use map and map_err instead of match. But I&#39;d advise against hiding the err transformation more: I see no reason to make it look like magic, this is an important part of the logic"}, {"owner": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 0, "creation_date": 1545933576, "post_id": 53935077, "comment_id": 94736509, "body": "I doubt that I can do anything to make err transformation look more like magic than the <code>From</code> transformation performed by the <code>?</code> operator. For now, I ended with a function that does the transformation, and that I call in <code>map_err</code>: <a href=\"https://github.com/glehmann/hld/commit/4865b461cc73f57b3c6d1b15c1927270b7373f3f#diff-0c20ef37727d2015fb136ac1092cd3f3R46\" rel=\"nofollow noreferrer\">github.com/glehmann/hld/commit/&hellip;</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1545934810, "post_id": 53935077, "comment_id": 94736919, "body": "Oh, hard link deduplication... looks a little like what I just did: <a href=\"https://github.com/Canop/broot/blob/master/src/file_sizes.rs#L23\" rel=\"nofollow noreferrer\">github.com/Canop/broot/blob/master/src/file_sizes.rs#L23</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1545934902, "post_id": 53935077, "comment_id": 94736952, "body": "as this is getting verbose: There&#39;s a rust chat room on SO: <a href=\"https://chat.stackoverflow.com/rooms/62927/rust\">chat.stackoverflow.com/rooms/62927/rust</a>"}, {"owner": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 0, "creation_date": 1545944319, "post_id": 53935077, "comment_id": 94740130, "body": "I&#39;ve implemented a new trait on <code>io::Result</code> to add the <code>with_path</code> method: <a href=\"https://gist.github.com/glehmann/b261e7aa22bd01f70501883d97b2f6bd\" rel=\"nofollow noreferrer\">gist.github.com/glehmann/b261e7aa22bd01f70501883d97b2f6bd</a> \u2014 works great :)"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 5, "last_activity_date": 1546105607, "last_edit_date": 1546105607, "creation_date": 1545844782, "answer_id": 53935077, "question_id": 53934888, "link": "https://stackoverflow.com/questions/53934888/how-to-include-the-file-path-in-an-io-error-in-rust/53935077#53935077", "title": "How to include the file path in an IO error in Rust?", "body": "<p>You must define your own error type in order to wrap this additional data.</p>\n\n<p>Personally, I like to use the <a href=\"https://docs.rs/custom_error/latest/custom_error/macro.custom_error.html\" rel=\"nofollow noreferrer\">custom_error</a> crate for that, as it's especially convenient for dealing with several types. In your case it might look like this:</p>\n\n<pre><code>use custom_error::custom_error;\nuse std::fs::metadata;\nuse std::io;\nuse std::path::{Path, PathBuf};\nuse std::result::Result;\n\ncustom_error! {ProgramError\n    Io {\n        source: io::Error,\n        path: PathBuf\n    } = @{format!(\"{path}: {source}\", source=source, path=path.display())},\n}\n\nfn file_size(path: &amp;Path) -&gt; Result&lt;u64, ProgramError&gt; {\n    metadata(path)\n        .map(|md| md.len())\n        .map_err(|e| ProgramError::Io {\n            source: e,\n            path: path.to_path_buf(),\n        })\n}\n\nfn main() {\n    if let Err(err) = file_size(&amp;PathBuf::from(\"/not/there\")) {\n        eprintln!(\"{}\", err);\n    }\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>/not/there: No such file or directory (os error 2)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "edited": false, "score": 0, "creation_date": 1546675175, "post_id": 53972021, "comment_id": 94934859, "body": "A nice way to do it too, and it more closely match the <code>with_path</code> method I was proposing. I&#39;ll give it a try!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1556493950, "last_edit_date": 1556493950, "creation_date": 1546106268, "answer_id": 53972021, "question_id": 53934888, "link": "https://stackoverflow.com/questions/53934888/how-to-include-the-file-path-in-an-io-error-in-rust/53972021#53972021", "title": "How to include the file path in an IO error in Rust?", "body": "<p>While <a href=\"https://stackoverflow.com/a/53935077/155423\">Denys S\u00e9guret's answer</a> is correct, I like using my crate <a href=\"https://crates.io/crates/snafu\" rel=\"nofollow noreferrer\">SNAFU</a> because it provides the concept of a <a href=\"https://docs.rs/snafu/0.2.3/snafu/trait.ResultExt.html#tymethod.context\" rel=\"nofollow noreferrer\">context</a>. This makes the act of attaching the path (or anything else!) very easy to do:</p>\n\n<pre><code>use snafu::{ResultExt, Snafu}; // 0.2.3\nuse std::{\n    fs, io,\n    path::{Path, PathBuf},\n};\n\n#[derive(Debug, Snafu)]\nenum ProgramError {\n    #[snafu(display(\"Could not get metadata for {}: {}\", path.display(), source))]\n    Metadata { source: io::Error, path: PathBuf },\n}\n\nfn file_size(path: impl AsRef&lt;Path&gt;) -&gt; Result&lt;u64, ProgramError&gt; {\n    let path = path.as_ref();\n    let md = fs::metadata(&amp;path).context(Metadata { path })?;\n    Ok(md.len())\n}\n\nfn main() {\n    if let Err(err) = file_size(\"/not/there\") {\n        eprintln!(\"{}\", err);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 718, "user_id": 2241364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a5fe9fd140b01eeaaaf78607686fdcf1?s=128&d=identicon&r=PG", "display_name": "Ga&#235;tan Lehmann", "link": "https://stackoverflow.com/users/2241364/ga%c3%abtan-lehmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 553, "favorite_count": 1, "accepted_answer_id": 53935077, "answer_count": 2, "score": 5, "last_activity_date": 1556493950, "creation_date": 1545843606, "last_edit_date": 1545905773, "question_id": 53934888, "link": "https://stackoverflow.com/questions/53934888/how-to-include-the-file-path-in-an-io-error-in-rust", "title": "How to include the file path in an IO error in Rust?", "body": "<p>In this minimalist program, I'd like the <code>file_size</code> function to include the path <code>/not/there</code> in the <code>Err</code> so it can be displayed in the <code>main</code> function:</p>\n\n<pre><code>use std::fs::metadata;\nuse std::io;\nuse std::path::Path;\nuse std::path::PathBuf;\n\nfn file_size(path: &amp;Path) -&gt; io::Result&lt;u64&gt; {\n    Ok(metadata(path)?.len())\n}\n\nfn main() {\n    if let Err(err) = file_size(&amp;PathBuf::from(\"/not/there\")) {\n        eprintln!(\"{}\", err);\n    }\n}\n</code></pre>\n"}, {"tags": ["string", "rust", "constants", "literals"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 4, "creation_date": 1545831954, "post_id": 53932824, "comment_id": 94706117, "body": "A <code>String</code> is a growable buffer. Its purpose is to be modifiable. Why would you pass around a <code>String</code> if it&#39;s meant to be constant? Remember that API should usually take a <code>&amp;str</code> as argument, not a <code>String</code>. The right constant type <b>is</b> <code>&amp;str</code>."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1545832684, "post_id": 53932824, "comment_id": 94706383, "body": "Oh, I see the point. The main reason why I was asking that the API was taking <code>String</code> parameters but it seems these parameters are immutable and constant as well so yes I can change them to <code>&amp;str</code> as well. Thanks for clearing that out."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1545832974, "post_id": 53932824, "comment_id": 94706489, "body": "Even if you want an owned string (<code>String</code> type), it is better to take an <code>Into&lt;String&gt;</code> so that your API is more flexible."}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1780, "favorite_count": 0, "closed_date": 1545837338, "answer_count": 0, "score": 5, "last_activity_date": 1545838747, "creation_date": 1545831287, "last_edit_date": 1545838747, "question_id": 53932824, "link": "https://stackoverflow.com/questions/53932824/how-to-declare-a-const-string-in-stable-rust", "closed_reason": "Duplicate", "title": "How to declare a const String in stable Rust?", "body": "<p>I am trying to declare a <code>const String</code> in stable Rust but it does not let me declare it:</p>\n\n<pre><code>const CONSTANT_VALUE: String = String::from(\"constant value\");\n\nfn main() {\n    println!(\"{}\", TARGET_PORT_KEY);     \n}\n</code></pre>\n\n<p>It is saying that:</p>\n\n<blockquote>\n  <p>Calls in constants are limited to tuple structs and tuple variants</p>\n</blockquote>\n\n<p>I do not want to declare my <code>string</code> as literal and call <code>to_string()</code> on literal all the time. </p>\n\n<p>What is the correct way to declare a constant <code>String</code> value?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a5d41c2cac4b5a2ebdf4ef74617baefa\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545808652, "post_id": 53928194, "comment_id": 94698409, "body": "First question: why?! Second: I don&#39;t think it&#39;s possible because you need the systems linker (ld.exe, ld, ld.gold,...)"}, {"owner": {"reputation": 35, "user_id": 10833948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a387a36ffb07aad0f4554329ea6e174a?s=128&d=identicon&r=PG", "display_name": "user10833948", "link": "https://stackoverflow.com/users/10833948/user10833948"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545808729, "post_id": 53928194, "comment_id": 94698438, "body": "Well, I want to bring it around with me to school and home and all that."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545808763, "post_id": 53928194, "comment_id": 94698451, "body": "well, read the doc of rustup that simple."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545808807, "post_id": 53928194, "comment_id": 94698469, "body": "You can install it per user, you don&#39;t need admin privileges for that at all (expect for the mentioned linker)"}, {"owner": {"reputation": 35, "user_id": 10833948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a387a36ffb07aad0f4554329ea6e174a?s=128&d=identicon&r=PG", "display_name": "user10833948", "link": "https://stackoverflow.com/users/10833948/user10833948"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545808912, "post_id": 53928194, "comment_id": 94698501, "body": "@hellow Could you be able to shove a copy of GCC on the device and use it with the 32bit gnu copy? Or is that not a possibility"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545809074, "post_id": 53928194, "comment_id": 94698555, "body": "It would be possible, but you propably need to build it yourself, because you need a static binary and normally binaries are build dynamically"}, {"owner": {"reputation": 35, "user_id": 10833948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a387a36ffb07aad0f4554329ea6e174a?s=128&d=identicon&r=PG", "display_name": "user10833948", "link": "https://stackoverflow.com/users/10833948/user10833948"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545809137, "post_id": 53928194, "comment_id": 94698575, "body": "@hellow I&#39;m fine with building the binary myself, it&#39;s that I needed to get it portable."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545809463, "post_id": 53928194, "comment_id": 94698670, "body": "by the way, the best solution is to ask to the admin system of your school to install rust and every tool needed on computer, that his job."}, {"owner": {"reputation": 233489, "user_id": 14122, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5e2861b08f37fa306fbf5384994af688?s=128&d=identicon&r=PG", "display_name": "Charles Duffy", "link": "https://stackoverflow.com/users/14122/charles-duffy"}, "edited": false, "score": 0, "creation_date": 1545941399, "post_id": 53928194, "comment_id": 94739181, "body": "This really isn&#39;t a usefully detailed question -- we don&#39;t even know which operating system you&#39;re dealing with. A chroot usable across Linux distros is a whole different thing from a Windows binary, f/e, which is different from a portable VM image, which is different from... etc; right now, which of those answers is appropriate can&#39;t be distinguished."}], "answers": [{"comments": [{"owner": {"reputation": 233489, "user_id": 14122, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5e2861b08f37fa306fbf5384994af688?s=128&d=identicon&r=PG", "display_name": "Charles Duffy", "link": "https://stackoverflow.com/users/14122/charles-duffy"}, "edited": false, "score": 1, "creation_date": 1545941489, "post_id": 53950264, "comment_id": 94739212, "body": "Triple-quotes are a GitHub-flavored markdown extension. We don&#39;t support that variant here -- only four-space indents format multi-line blocks as code with syntax highlighting, full-line backdrop, &amp;c."}, {"owner": {"reputation": 233489, "user_id": 14122, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/5e2861b08f37fa306fbf5384994af688?s=128&d=identicon&r=PG", "display_name": "Charles Duffy", "link": "https://stackoverflow.com/users/14122/charles-duffy"}, "edited": false, "score": 1, "creation_date": 1545941566, "post_id": 53950264, "comment_id": 94739239, "body": "BTW, you usually don&#39;t need to <code>export PATH=...</code>, and certainly not more than once -- just <code>PATH=...</code> will change both environment and shell-internal instances of an already-exported variable. (<code>LD_LIBRARY_PATH</code> may not be exported yet, so explicitly exporting <i>that</i> one is useful)."}], "tags": [], "owner": {"reputation": 1539, "user_id": 320546, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df48760ae51273ce62b3b72e188796d8?s=128&d=identicon&r=PG", "display_name": "Tom Parker-Shemilt", "link": "https://stackoverflow.com/users/320546/tom-parker-shemilt"}, "is_accepted": false, "score": 1, "last_activity_date": 1605902041, "last_edit_date": 1605902041, "creation_date": 1545940807, "answer_id": 53950264, "question_id": 53928194, "link": "https://stackoverflow.com/questions/53928194/how-do-i-get-a-portable-installation-of-the-rust-programming-language/53950264#53950264", "title": "How do I get a portable installation of the Rust programming language?", "body": "<p>Something like <a href=\"https://www.codejam.info/2015/03/portable-rust-installation.html\" rel=\"nofollow noreferrer\">https://www.codejam.info/2015/03/portable-rust-installation.html</a> might work? Possibly with putting the profile script on the drive to be run after inserting? Also, is this for Linux, Windows or something else?</p>\n<blockquote>\n<p>First, get the binaries according to your system, and the Rust version\nyou want. For me (nightly 64-bit Linux binaries) and extract the\narchive (I like to put it in ~/opt):</p>\n<pre class=\"lang-sh prettyprint-override\"><code>wget https://static.rust-lang.org/dist/rust-nightly-x86_64-unknown-linux-gnu.tar.gz\ntar xf rust-nightly-x86_64-unknown-linux-gnu.tar.gz\nmv rust-nightly-x86_64-unknown-linux-gnu rust\n</code></pre>\n<p>Then, just export the appropriate environment variables (do this from\nyour ~/.profile or equivalent to have it set up automatically). No\nneed to install anything globally!</p>\n<pre class=\"lang-sh prettyprint-override\"><code>export LD_LIBRARY_PATH=~/opt/rust/rustc/lib:$LD_LIBRARY_PATH\nexport PATH=~/opt/rust/rustc/bin:~/opt/rust/cargo/bin:$PATH\n</code></pre>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 16085, "user_id": 58805, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/9e65438df95dc28b6024e20e11562dc3?s=128&d=identicon&r=PG", "display_name": "Calmarius", "link": "https://stackoverflow.com/users/58805/calmarius"}, "is_accepted": false, "score": 1, "last_activity_date": 1615652228, "creation_date": 1615652228, "answer_id": 66615774, "question_id": 53928194, "link": "https://stackoverflow.com/questions/53928194/how-do-i-get-a-portable-installation-of-the-rust-programming-language/66615774#66615774", "title": "How do I get a portable installation of the Rust programming language?", "body": "<p>Since this question comes up first in the search engine when I searching for installing Rust on a pen drive. I'll answer it.</p>\n<p>Installing on pen drive makes sense on Windows, if you want to carry the installation with you.</p>\n<ol>\n<li>Download rustup-init.exe from the official Rust page (you probably want the 64 bit one nowadays).</li>\n<li>set RUSTUP_HOME and CARGO_HOME environment variables to point to a location on your pen drive.</li>\n<li>When you start it will echo back these environment variables. To let you verify it.</li>\n<li>When asked tell it to customize install.</li>\n<li>I have portable MinGW on my pen drive so I have chosen x86_64-pc-windows-gnu as the host triplet to install.</li>\n<li>Tell it to not to alter your PATH, instead have a BAT script that you can start to set these vars for the shell.</li>\n</ol>\n<p>I have a BAT script on the pen drive to ensure the PATHs are right despite what drive letter gets assigned, such as this:</p>\n<pre><code>set DRIVE=%CD:~0,2%\n\nset MINGW_PATH=%DRIVE%\\!\\Mingw64\\mingw64\\bin\nset GIT_PATH=%DRIVE%\\!\\PortableGit\\cmd\nset VSCODE_PATH=%DRIVE%\\!\\VSCode\nset RUSTUP_HOME=%DRIVE%\\!\\Rust\\rust\nset CARGO_HOME=%DRIVE%\\!\\Rust\\cargo\nset RUST_PATH=%CARGO_HOME%\\bin\n</code></pre>\n<p>And when you plug in the pen drive to a different computer, then after the install run this bat to have the paths.</p>\n"}], "owner": {"reputation": 35, "user_id": 10833948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a387a36ffb07aad0f4554329ea6e174a?s=128&d=identicon&r=PG", "display_name": "user10833948", "link": "https://stackoverflow.com/users/10833948/user10833948"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 913, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1615652228, "creation_date": 1545805424, "last_edit_date": 1545942364, "question_id": 53928194, "link": "https://stackoverflow.com/questions/53928194/how-do-i-get-a-portable-installation-of-the-rust-programming-language", "title": "How do I get a portable installation of the Rust programming language?", "body": "<p>I've been trying to get a windows installation on a flash drive for a while now.  </p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545854129, "post_id": 53927781, "comment_id": 94713129, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/53927781/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"comments": [{"owner": {"reputation": 2341, "user_id": 2225444, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1d5a3f96e4d79bac13f2349c70f75aa0?s=128&d=identicon&r=PG", "display_name": "Turtles Are Cute", "link": "https://stackoverflow.com/users/2225444/turtles-are-cute"}, "edited": false, "score": 0, "creation_date": 1545846965, "post_id": 53928040, "comment_id": 94710927, "body": "This answers my question, and prevents the <code>warning: unused `futures::future::and_then::AndThen` that must be used</code>. I&#39;m still experiencing the runtime panic, but this appears to be specific to wasm_bindgen, vice futures in general"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 1, "last_activity_date": 1545856186, "last_edit_date": 1545856186, "creation_date": 1545804316, "answer_id": 53928040, "question_id": 53927781, "link": "https://stackoverflow.com/questions/53927781/how-do-i-split-an-and-then-chain-into-two-parts/53928040#53928040", "title": "How do I split an and_then chain into two parts?", "body": "<p>In Part 2, you are chaining your future with <code>and_then</code> in the following:</p>\n\n<pre><code>r.and_then(|json| {\n    let branch_info: Branch = json.into_serde().unwrap();\n    future::ok(JsValue::from_serde(&amp;branch_info).unwrap())\n});\n</code></pre>\n\n<p>the problem is you are not assigning it to anything so you lost the result, You need to assign it to a variable and use it afterwards like following:</p>\n\n<pre><code>let r_fin = r.and_then(|json| {\n    let branch_info: Branch = json.into_serde().unwrap();\n    future::ok(JsValue::from_serde(&amp;branch_info).unwrap())\n});\n</code></pre>\n\n<p>After assigning it to <code>r_fin</code>, you can pass it to <code>future_to_promise</code>:</p>\n\n<pre><code>future_to_promise(r_fin)\n</code></pre>\n\n<p>This way you will use the chained future <code>r_fin</code>.</p>\n"}], "owner": {"reputation": 2341, "user_id": 2225444, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1d5a3f96e4d79bac13f2349c70f75aa0?s=128&d=identicon&r=PG", "display_name": "Turtles Are Cute", "link": "https://stackoverflow.com/users/2225444/turtles-are-cute"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 314, "favorite_count": 0, "accepted_answer_id": 53928040, "answer_count": 1, "score": 0, "last_activity_date": 1545856186, "creation_date": 1545802200, "last_edit_date": 1545854111, "question_id": 53927781, "link": "https://stackoverflow.com/questions/53927781/how-do-i-split-an-and-then-chain-into-two-parts", "title": "How do I split an and_then chain into two parts?", "body": "<p>I'm attempting to split <a href=\"https://rustwasm.github.io/wasm-bindgen/examples/fetch.html\" rel=\"nofollow noreferrer\">this future/and-then chain</a> in two, so part can be hidden in a crate, and the other exposed in an API.</p>\n\n<p>Original, working code:</p>\n\n<pre><code>let future = wasm_bindgen_futures::JsFuture::from(request_promise)\n    .and_then(|resp_value| {\n        // `resp_value` is a `Response` object.\n        assert!(resp_value.is_instance_of::&lt;Response&gt;());\n        let resp: web_sys::Response = resp_value.dyn_into().unwrap();\n        resp.json()\n    })\n    .and_then(|json_value: Promise| {\n        // Convert this other `Promise` into a rust `Future`.\n        wasm_bindgen_futures::JsFuture::from(json_value)\n    })\n    .and_then(|json| {\n        // Use serde to parse the JSON into a struct.\n        let branch_info: Branch = json.into_serde().unwrap();\n\n        // Send the `Branch` struct back to JS as an `Object`.\n        future::ok(JsValue::from_serde(&amp;branch_info).unwrap())\n    });\n\n// Convert this Rust `Future` back into a JS `Promise`.\nfuture_to_promise(future)\n</code></pre>\n\n<p>Attempted split, part 1:</p>\n\n<pre><code>pub fn fetch(...) -&gt; impl Future&lt;Item = JsValue&gt;\n// ...\n wasm_bindgen_futures::JsFuture::from(request_promise)\n    .and_then(|resp_value| {\n        // `resp_value` is a `Response` object.\n        assert!(resp_value.is_instance_of::&lt;web_sys::Response&gt;());\n        let resp: web_sys::Response = resp_value.dyn_into().unwrap();\n        resp.json()\n    })\n    .and_then(|json_value: js_sys::Promise| {\n        // Convert this other `Promise` into a rust `Future`.\n        wasm_bindgen_futures::JsFuture::from(json_value)\n    })\n</code></pre>\n\n<p>Part 2:</p>\n\n<pre><code>let r = fetch(...);\n\nr.and_then(|json| {\n    let branch_info: Branch = json.into_serde().unwrap();\n    future::ok(JsValue::from_serde(&amp;branch_info).unwrap())\n});\n</code></pre>\n\n<p>This compiles, but results in the warning <code>warning: unused `futures::future::and_then::AndThen` that must be used</code>, and a runtime panic (In browser), which is presumably related. Per the original example I linked, this can be alleviated with the line <code>wasm_bindgen_futures::future_to_promise(r)</code> at the end, but when used after the split, vice intact function, we receive this error: <code>expected associated type, found struct `wasm_bindgen::JsValue`.</code> There is presumably a futures-specific way to resolve this that doesn't involve converting back to a JsValue and dealing with a promise at the end. I suspect this can be resolved with a short modification (Something like unwrap() at the end), but I've been unable to determine what, from the futures API docs.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1545987623, "post_id": 53927598, "comment_id": 94749849, "body": "What does this <code>vals</code> vector mean? What are you trying to output?"}], "answers": [{"comments": [{"owner": {"reputation": 4269, "user_id": 2770044, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/I0uQa.jpg?s=128&g=1", "display_name": "RPiAwesomeness", "link": "https://stackoverflow.com/users/2770044/rpiawesomeness"}, "edited": false, "score": 0, "creation_date": 1545847606, "post_id": 53934669, "comment_id": 94711102, "body": "Interesting, I didn&#39;t know that those were considered functions, but I guess that would make sense. So there&#39;s no way to implement <code>Debug</code> on an enum like that, even manually?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4269, "user_id": 2770044, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/I0uQa.jpg?s=128&g=1", "display_name": "RPiAwesomeness", "link": "https://stackoverflow.com/users/2770044/rpiawesomeness"}, "edited": false, "score": 0, "creation_date": 1545851288, "post_id": 53934669, "comment_id": 94712295, "body": "@RPiAwesomeness <code>Debug</code> is implemented for a value of the enum; you don&#39;t <i>have</i> a value of the enum."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1545842280, "creation_date": 1545842280, "answer_id": 53934669, "question_id": 53927598, "link": "https://stackoverflow.com/questions/53927598/debug-trait-not-implemented-for-some-enum-variants/53934669#53934669", "title": "Debug trait not implemented for some enum variants", "body": "<p><code>TokenType::Ident</code> is <strong>not</strong> an enum variant; it is an enum variant <em>constructor</em>. The error message points out that it is a function:</p>\n\n<pre><code>fn(std::string::String) -&gt; TokenType {TokenType::Ident}\n</code></pre>\n\n<p>Functions do not implement <code>Debug</code>. There is no solution for what you want.</p>\n"}], "owner": {"reputation": 4269, "user_id": 2770044, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/I0uQa.jpg?s=128&g=1", "display_name": "RPiAwesomeness", "link": "https://stackoverflow.com/users/2770044/rpiawesomeness"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 838, "favorite_count": 0, "accepted_answer_id": 53934669, "answer_count": 1, "score": 2, "last_activity_date": 1545842280, "creation_date": 1545800468, "last_edit_date": 1545842169, "question_id": 53927598, "link": "https://stackoverflow.com/questions/53927598/debug-trait-not-implemented-for-some-enum-variants", "title": "Debug trait not implemented for some enum variants", "body": "<p>I have this enum:</p>\n\n<pre><code>#[derive(Debug)]\npub enum TokenType {\n    Illegal,\n    Integer(String),\n    Ident(String),\n}\n\nfn main() {\n    let vals = vec![(TokenType::Ident, \"identifier\")];\n    println!(\"Expected one of {:?}\", vals);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=54d4d86395a04723ad960814bc3067a9\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>When I try to use a <code>TokenType</code> value, it appears to be ignoring the <code>Debug</code> derivation, and I get the following compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `fn(std::string::String) -&gt; TokenType {TokenType::Ident}` doesn't implement `std::fmt::Debug`\n  --&gt; src/main.rs:10:38\n   |\n10 |     println!(\"Expected one of {:?}\", vals);\n   |                                      ^^^^ `fn(std::string::String) -&gt; TokenType {TokenType::Ident}` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`\n   |\n   = help: the trait `std::fmt::Debug` is not implemented for `fn(std::string::String) -&gt; TokenType {TokenType::Ident}`\n   = note: required because of the requirements on the impl of `std::fmt::Debug` for `(fn(std::string::String) -&gt; TokenType {TokenType::Ident}, &amp;str)`\n   = note: required because of the requirements on the impl of `std::fmt::Debug` for `std::vec::Vec&lt;(fn(std::string::String) -&gt; TokenType {TokenType::Ident}, &amp;str)&gt;`\n   = note: required by `std::fmt::Debug::fmt`\n</code></pre>\n\n<p>It would appear to me that the issue is because I have a few variants of that enum that contain a <code>String</code> (ex. <code>Ident(String)</code>) it's not properly deriving the <code>Debug</code> trait, but I don't know how to resolve it.</p>\n\n<p>Is there some way to force Rust to derive the trait for that enum or is there a way that I can resolve this error by manually implementing <code>fmt::Debug</code> for those variants?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1545796238, "post_id": 53927109, "comment_id": 94695918, "body": "so you just don&#39;t want to write <code>use colorful::{Tiger, Animal}</code> ?"}, {"owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545796558, "post_id": 53927109, "comment_id": 94695947, "body": "@Stargateur Yeah, that&#39;s one way, but if this is called inheritance, why not just provide one trait for the user so that they can easily import this trait and use all methods, right?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 7, "creation_date": 1545800021, "post_id": 53927109, "comment_id": 94696439, "body": "this is not called inheritance but trait extending."}], "answers": [{"comments": [{"owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "edited": false, "score": 0, "creation_date": 1545882123, "post_id": 53936549, "comment_id": 94718565, "body": "Sorry, maybe I just didn&#39;t describe my question clearly, I know that I can import multiple trait with one line, I wonder is there a way to inherit methods of a trait like the above Python code?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "edited": false, "score": 3, "creation_date": 1546002470, "post_id": 53936549, "comment_id": 94755734, "body": "@McGrady No. Rust does not have inheritance."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1546104296, "last_edit_date": 1546104296, "creation_date": 1545854321, "answer_id": 53936549, "question_id": 53927109, "link": "https://stackoverflow.com/questions/53927109/is-there-a-way-to-inherit-one-trait-in-order-to-use-all-methods-of-this-trait/53936549#53936549", "title": "Is there a way to inherit one trait in order to use all methods of this trait?", "body": "<blockquote>\n  <p>Is there a way to import one trait in order to use all methods of this trait and its subtraits?</p>\n</blockquote>\n\n<p>No.</p>\n\n<p>Really, that amount of typing seems like a minuscule thing to worry about. If it bothers you that much, use a <em>glob import</em>:</p>\n\n<pre><code>use foo::*;\n</code></pre>\n\n<p>Some crates often have the concept of a <em>prelude</em>, a module with all of the commonly imported types and traits:</p>\n\n<pre><code>pub mod prelude {\n    pub use super::{Animal, Tiger};\n}\n</code></pre>\n\n\n\n<pre><code>use foo::prelude::*;\n</code></pre>\n\n<blockquote>\n  <p>Rust has trait inheritance</p>\n</blockquote>\n\n<p>This is a dubious statement. While we programmers are lazy and use the term \"supertrait\", it's not inheritance as programmers in classical object-oriented programming languages think of it. Really, it's just another type of trait bound:</p>\n\n<pre><code>trait Alpha {}\n\ntrait Beta: Alpha {}\n\n// Basically the same as\ntrait Beta\nwhere\n    Self: Alpha,\n{}\n</code></pre>\n\n<p>That is, any type that implements <code>Beta</code> must also implement <code>Alpha</code>.</p>\n"}], "owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 467, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1546104296, "creation_date": 1545794448, "last_edit_date": 1546099214, "question_id": 53927109, "link": "https://stackoverflow.com/questions/53927109/is-there-a-way-to-inherit-one-trait-in-order-to-use-all-methods-of-this-trait", "title": "Is there a way to inherit one trait in order to use all methods of this trait?", "body": "<p>I've read <a href=\"https://users.rust-lang.org/t/extending-traits/1802/11\" rel=\"nofollow noreferrer\">Extending Traits</a>, where the comment said: </p>\n\n<blockquote>\n  <p>Rust has trait inheritance, it looks like this:</p>\n\n<pre><code>pub trait A {}\npub trait B: A {}\n</code></pre>\n</blockquote>\n\n<p>I tried to implement this Python code in Rust:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>class Animal(object):\n    @classmethod\n    def howl(cls):\n        print(\"ao ao\")\n\nclass Tiger(Animal):\n    @classmethod\n    def find_food(cls):\n        print(\"find food\")\n\na = Tiger()\na.howl()\na.find_food()\n</code></pre>\n\n<p>Rust way:</p>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>pub trait Animal {\n    fn howl(&amp;self) {\n        println!(\"ao ao\");\n    }\n}\npub trait Tiger: Animal {\n    fn find_food(&amp;self) {\n        println!(\"find food\");\n    }\n}\nimpl&lt;'a&gt; Animal for &amp;'a str {}\nimpl&lt;'a&gt; Tiger for &amp;'a str {}\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>extern crate foo;\nuse foo::Tiger;\n\nfn main() {\n    \"da\".find_food();\n    //    \"da\".howl();\n}\n</code></pre>\n\n<p>If I want to use <code>howl</code>, I must import the <code>Animal</code> trait, and I don't think this is inheritance. Is there a way to inherit one trait in order to use all methods of this trait? How can I organize code to implement the above Python code?</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 1038, "user_id": 6734723, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/64KvA.jpg?s=128&g=1", "display_name": "Stefan Mesken", "link": "https://stackoverflow.com/users/6734723/stefan-mesken"}, "edited": false, "score": 0, "creation_date": 1545786682, "post_id": 53926435, "comment_id": 94694755, "body": "Please post (a link to) the complete program including the tests you&#39;re running."}, {"owner": {"reputation": 10087, "user_id": 24954, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/d8d149d3236df011a3037aab8313e7bd?s=128&d=identicon&r=PG", "display_name": "Nathan", "link": "https://stackoverflow.com/users/24954/nathan"}, "edited": false, "score": 7, "creation_date": 1545788044, "post_id": 53926435, "comment_id": 94694881, "body": "Also, what type of processor are you using? And what c++ complier/options are you using? If I&#39;m not mistaken, the size of a c++ int depends on target architecture, etc, whereas in the rust code you explicitly state a 64 bit int. Not sure it&#39;s likely, but possibly you are comparing code using different underlying type sizes."}, {"owner": {"reputation": 289, "user_id": 5404459, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e1eaadeca33c5f8d00701484f231f7e?s=128&d=identicon&r=PG&f=1", "display_name": "georch", "link": "https://stackoverflow.com/users/5404459/georch"}, "reply_to_user": {"reputation": 10087, "user_id": 24954, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/d8d149d3236df011a3037aab8313e7bd?s=128&d=identicon&r=PG", "display_name": "Nathan", "link": "https://stackoverflow.com/users/24954/nathan"}, "edited": false, "score": 1, "creation_date": 1545821067, "post_id": 53926435, "comment_id": 94702428, "body": "@Nathan Thanks, that was it! The C++ int is aparrently not word-sized, as I thought. I&#39;ve replaced it with int64_t and that seemed to make the difference."}, {"owner": {"reputation": 289, "user_id": 5404459, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e1eaadeca33c5f8d00701484f231f7e?s=128&d=identicon&r=PG&f=1", "display_name": "georch", "link": "https://stackoverflow.com/users/5404459/georch"}, "reply_to_user": {"reputation": 10087, "user_id": 24954, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/d8d149d3236df011a3037aab8313e7bd?s=128&d=identicon&r=PG", "display_name": "Nathan", "link": "https://stackoverflow.com/users/24954/nathan"}, "edited": false, "score": 0, "creation_date": 1545822700, "post_id": 53926435, "comment_id": 94703013, "body": "@Nathan And as the difference was quite close to a factor of two, I should&#39;ve been suspicious about data types..."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 3, "creation_date": 1545826415, "post_id": 53926435, "comment_id": 94704245, "body": "That is not a Sieve of Erathostenes. You are doing trial division."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 10087, "user_id": 24954, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/d8d149d3236df011a3037aab8313e7bd?s=128&d=identicon&r=PG", "display_name": "Nathan", "link": "https://stackoverflow.com/users/24954/nathan"}, "edited": false, "score": 3, "creation_date": 1545833456, "post_id": 53926435, "comment_id": 94706655, "body": "It is better to answer your own question than to edit the answer into the question. You may give @Nathan a chance to write the answer since it was their suggestion, but you don&#39;t have to."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1545838612, "post_id": 53926435, "comment_id": 94708230, "body": "<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}, {"owner": {"reputation": 289, "user_id": 5404459, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e1eaadeca33c5f8d00701484f231f7e?s=128&d=identicon&r=PG&f=1", "display_name": "georch", "link": "https://stackoverflow.com/users/5404459/georch"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1545843741, "post_id": 53926435, "comment_id": 94709914, "body": "@starblue Just read up on it. Sieve of Erathostenes would be removing all multiples of the primes instead of checking whether a number is divisible, right? Sorry for the misunderstanding."}], "answers": [{"tags": [], "owner": {"reputation": 10087, "user_id": 24954, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/d8d149d3236df011a3037aab8313e7bd?s=128&d=identicon&r=PG", "display_name": "Nathan", "link": "https://stackoverflow.com/users/24954/nathan"}, "is_accepted": true, "score": 1, "last_activity_date": 1546106540, "last_edit_date": 1546106540, "creation_date": 1546056126, "answer_id": 53966589, "question_id": 53926435, "link": "https://stackoverflow.com/questions/53926435/why-is-iterating-over-a-vector-of-integers-slower-in-rust-than-in-python-c-and/53966589#53966589", "title": "Why is iterating over a vector of integers slower in Rust than in Python, C# and C++?", "body": "<p>The size of a C++ <code>int</code> depends on target architecture, compiler options etc.. In the Rust code, you explicitly state a 64-bit integer. You may be comparing code using different underlying type sizes.</p>\n"}], "owner": {"reputation": 289, "user_id": 5404459, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e1eaadeca33c5f8d00701484f231f7e?s=128&d=identicon&r=PG&f=1", "display_name": "georch", "link": "https://stackoverflow.com/users/5404459/georch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 246, "favorite_count": 0, "accepted_answer_id": 53966589, "answer_count": 1, "score": 2, "last_activity_date": 1546106540, "creation_date": 1545782935, "last_edit_date": 1545838364, "question_id": 53926435, "link": "https://stackoverflow.com/questions/53926435/why-is-iterating-over-a-vector-of-integers-slower-in-rust-than-in-python-c-and", "title": "Why is iterating over a vector of integers slower in Rust than in Python, C# and C++?", "body": "<p>I'm learning Rust right now and I'm using this simple Sieve of Erathostenes implementation:</p>\n\n<pre><code>fn get_primes(known_primes: &amp;Vec&lt;i64&gt;, start: i64, stop: i64) -&gt; Vec&lt;i64&gt; {\n    let mut new_primes = Vec::new();\n    for number in start..stop {\n        let mut is_prime = true;\n        let limit = (number as f64).sqrt() as i64;\n        for prime in known_primes {\n            if number % prime == 0 {\n                is_prime = false;\n                break;\n            }\n            if *prime &gt; limit {\n                break;\n            }\n        }\n        if is_prime {\n            new_primes.push(number);\n        }\n    }\n    return new_primes;\n}\n</code></pre>\n\n<p>I'm comparing it to virtually the same code (modulo syntax) in Python (with numba), C#, and C++ (gcc/clang). All of them are about 3x faster than this implementation on my machine.</p>\n\n<p>I am compiling in release mode. To be exact, I've added this to my  Cargo.toml, which seems to have the same effect:</p>\n\n<pre><code>[profile.dev]\nopt-level = 3 \n</code></pre>\n\n<p>I've also checked the toolchain, there is a slight (15% or so) difference between MSVC and GNU, but nothing that would explain this gap.</p>\n\n<p>Am I getting something wrong here? Am I making a copy somewhere?</p>\n\n<p>Is this code equivalent to the following C++ code?</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>vector&lt;int&gt; getPrimes(vector&lt;int&gt; &amp;knownPrimes, int start, int stop) {\n    vector&lt;int&gt; newPrimes;\n    for (int number = start; number &lt; stop; number += 1) {\n        bool isPrime = true;\n        int limit = (int)sqrt(number);\n        for (auto&amp; prime : knownPrimes) {\n            if (number % prime == 0) {\n                isPrime = false;\n                break;\n            }\n            if (prime &gt; limit)\n                break;\n        }\n        if (isPrime) {\n            newPrimes.push_back(number);\n        }\n    }\n    return newPrimes;\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545837684, "post_id": 53925873, "comment_id": 94707966, "body": "You ask about &quot;the associated type&quot;, but that&#39;s a <i>specific concept</i> (<code>impl X { type ThisIsAnAssociatedType }</code>) that your example doesn&#39;t have."}], "answers": [{"comments": [{"owner": {"reputation": 34459, "user_id": 3320, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82b1a2cb56adfa86634e7310ff639064?s=128&d=identicon&r=PG", "display_name": "Mendelt", "link": "https://stackoverflow.com/users/3320/mendelt"}, "edited": false, "score": 0, "creation_date": 1545842978, "post_id": 53933975, "comment_id": 94709689, "body": "Thanks! I looked at self_ty but got lost somewhere in the Type enum and never found that there&#39;s a Path value that might have the information I was looking for. Still getting used to Rust. Now I have to figure out how to get the useful information out there and what to do if the Type has one of the other enum values :-)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1545838132, "creation_date": 1545838132, "answer_id": 53933975, "question_id": 53925873, "link": "https://stackoverflow.com/questions/53925873/how-do-you-get-the-type-of-an-impl-block-in-a-rust-procedural-macro/53933975#53933975", "title": "How do you get the type of an impl block in a Rust procedural macro?", "body": "<p>The <a href=\"https://docs.rs/syn/0.15.23/syn/struct.ItemImpl.html\" rel=\"nofollow noreferrer\">documentation</a> lists 9 fields on an <code>ItemImpl</code>:</p>\n\n<ol>\n<li><code>attrs: Vec&lt;Attribute&gt;</code></li>\n<li><code>defaultness: Option&lt;Default&gt;</code></li>\n<li><code>unsafety: Option&lt;Unsafe&gt;</code></li>\n<li><code>impl_token: Impl</code></li>\n<li><code>generics: Generics</code></li>\n<li><code>trait_: Option&lt;(Option&lt;Bang&gt;, Path, For)&gt;</code></li>\n<li><code>self_ty: Box&lt;Type&gt;</code></li>\n<li><code>brace_token: Brace</code></li>\n<li><code>items: Vec&lt;ImplItem&gt;</code></li>\n</ol>\n\n<p>Only one of those has the word \"type\" in it: <code>self_ty</code>.</p>\n\n<pre><code>use syn; // 0.15.23\n\nfn example(input: syn::ItemImpl) {\n    println!(\"{:#?}\", input.self_ty);\n}\n\nfn main() {\n    let code = syn::parse_str(\n        r###\"\n        impl Foo {}\n        \"###,\n    )\n    .unwrap();\n\n    example(code);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Path(\n    TypePath {\n        qself: None,\n        path: Path {\n            leading_colon: None,\n            segments: [\n                PathSegment {\n                    ident: Ident(\n                        Foo\n                    ),\n                    arguments: None\n                }\n            ]\n        }\n    }\n)\n</code></pre>\n"}], "owner": {"reputation": 34459, "user_id": 3320, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/82b1a2cb56adfa86634e7310ff639064?s=128&d=identicon&r=PG", "display_name": "Mendelt", "link": "https://stackoverflow.com/users/3320/mendelt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 481, "favorite_count": 1, "accepted_answer_id": 53933975, "answer_count": 1, "score": 0, "last_activity_date": 1545838132, "creation_date": 1545775131, "last_edit_date": 1545837896, "question_id": 53925873, "link": "https://stackoverflow.com/questions/53925873/how-do-you-get-the-type-of-an-impl-block-in-a-rust-procedural-macro", "title": "How do you get the type of an impl block in a Rust procedural macro?", "body": "<p>I'm trying to write a Rust procedural macro that can be applied to an impl block like this;</p>\n\n<pre><code>struct SomeStruct { }\n\n#[my_macro]\nimpl SomeStruct { }\n</code></pre>\n\n<p>I'm using syn and quote to parse and format <code>TokenStream</code>s in the macro. It looks something like this:</p>\n\n<pre><code>#[proc_macro_attribute]\npub fn my_macro(meta: TokenStream, code: TokenStream) -&gt; TokenStream {\n    let input = parse_macro_input!(code as ItemImpl);\n\n    // ...\n\n    TokenStream::from(quote!(#input))\n}\n</code></pre>\n\n<p>Is there a way to access the type name of the impl block using syn? I don't see any field in <code>ItemImpl</code> that gives me that information.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545765234, "post_id": 53924904, "comment_id": 94691502, "body": "I didn&#39;t understand anything, please try to be more precise, you want return more than one value by function ?"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1545765497, "post_id": 53924904, "comment_id": 94691555, "body": "I agree with stargateur, could you please clarify the question. If you want to return some value and use that value in the next iteration you can take a look at the usage of the fold like this <a href=\"https://stackoverflow.com/questions/29548819/how-do-i-sum-a-vector-using-fold\">example</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545857103, "post_id": 53924904, "comment_id": 94713950, "body": "<i>Of course, I understand why I should not do that, and why I can not do it in Rust.</i> \u2014 please share with us why it&#39;s so obvious that you &quot;should not&quot; do this and provide code that shows that you &quot;can not&quot; do it."}, {"owner": {"reputation": 103, "user_id": 2879157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efe2184a94def91f26245a2204b4d19b?s=128&d=identicon&r=PG", "display_name": "Yvan Sraka", "link": "https://stackoverflow.com/users/2879157/yvan-sraka"}, "edited": false, "score": 0, "creation_date": 1545903938, "post_id": 53924904, "comment_id": 94724501, "body": "What may not be clear in my post is that the inputs and outputs of the function could rely on IOs in the for loop, but this is not the case for s: it&#39;s just about sharing a mutable value between function calls! S&#233;bastien Renauld&#39;s first reply answers my question in a rusty way, I was probably thinking in first place of something a little more functional and a bit off topic ..."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545856688, "post_id": 53925049, "comment_id": 94713836, "body": "I disagree that the second example is &quot;less readable&quot; or &quot;one more level of indirection&quot;. I do think that using <code>Iterator::for_each</code> is a misstep in this case."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1545861400, "last_edit_date": 1545861400, "creation_date": 1545765646, "answer_id": 53925049, "question_id": 53924904, "link": "https://stackoverflow.com/questions/53924904/how-to-let-a-rust-function-propagate-state/53925049#53925049", "title": "How to let a Rust function propagate state?", "body": "<p>The answer lies in references.</p>\n\n<p>A shared pointer in C comes with caveats as to where and when it is okay to do so, and when it isn't. Rust has a borrow checker to make sure that you're not doing anything stupid/unsafe with pointers to prevent a large part of the issues people get bitten by in C.</p>\n\n<p>For instance, consider a slight variation your code (made purely so it compiles). One can rewrite it as follows:</p>\n\n<pre><code>fn do_with(s: &amp;mut u8, item: u8) {\n    *s = *s + item;\n}\nfn main() {\n    let mut s: u8 = 0;\n    (1..10).for_each(|item| do_with(&amp;mut s, item));\n    println!(\"{}\", s)\n}\n</code></pre>\n\n<p>You'll recognize this syntax from C, but it is a lot safer than C as the borrow checker ensures that your code only ever has one mutable reference at any given time. As a result, the code is considered sane at every step and compiles.</p>\n\n<p>You can also do it the way you did, by effectively trampolining the value from call to call. However, that does lead to less readable code and one more level of indirection. Example below:</p>\n\n<pre><code>fn do_with(s: u8, item: u8) -&gt; u8 {\n    s + item\n}\nfn main() {\n    let mut s: u8 = 0;\n    (1..10).for_each(|item| s = do_with(s, item));\n    println!(\"{}\", s)\n}\n</code></pre>\n\n<p>In C, the danger in pointers mostly lies in upkeep and maintenance regarding them. As Rust checks and enforces this for you (and this - positively - prevents you from shooting yourself in the foot whenever you're using <code>futures</code>), making this largely a non-issue.</p>\n"}], "owner": {"reputation": 103, "user_id": 2879157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efe2184a94def91f26245a2204b4d19b?s=128&d=identicon&r=PG", "display_name": "Yvan Sraka", "link": "https://stackoverflow.com/users/2879157/yvan-sraka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 53925049, "answer_count": 1, "score": 0, "last_activity_date": 1545861400, "creation_date": 1545764390, "last_edit_date": 1545857071, "question_id": 53924904, "link": "https://stackoverflow.com/questions/53924904/how-to-let-a-rust-function-propagate-state", "title": "How to let a Rust function propagate state?", "body": "<p>I need to write a Rust function that can modify state defined in a higher function and propagate it from one function call to another in an iterator (see the pseudo-code below).</p>\n\n<p>In bad C, I would do it using a shared pointer. Of course, I understand why I should not do that, and why I can not do it in Rust.</p>\n\n<p>The workaround I found is to add an extra function parameter and an additional return argument:</p>\n\n<pre><code>fn f(inputs ..., s) {\n    let mut s = s;\n    // computations that rely on the value of s\n    // ...\n    outputs ..., s\n}\n\nfn main() {\n    let mut s;\n    for ... {\n        let (outputs ..., x) = f(inputs ..., s);\n        s = x;\n    }\n}\n</code></pre>\n\n<p>This seems a bit heavy in terms of programming style and I hope that there is a lighter construction (maybe more monadic), I imagine using closures. How I should write it is not obvious to me.</p>\n"}, {"tags": ["opengl", "rust", "lldb"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545759717, "post_id": 53924174, "comment_id": 94690477, "body": "and you didn&#39;t look for any error return cause ? that basic."}, {"owner": {"reputation": 6225, "user_id": 284681, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6148631c6a332d77f1f6cb5e6b382f29?s=128&d=identicon&r=PG", "display_name": "rlkw1024", "link": "https://stackoverflow.com/users/284681/rlkw1024"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545762027, "post_id": 53924174, "comment_id": 94690879, "body": "Yep, you&#39;re right--pretty basic. If there had been any such info, I&#39;d have surely stated it in my question."}], "answers": [{"tags": [], "owner": {"reputation": 6225, "user_id": 284681, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6148631c6a332d77f1f6cb5e6b382f29?s=128&d=identicon&r=PG", "display_name": "rlkw1024", "link": "https://stackoverflow.com/users/284681/rlkw1024"}, "is_accepted": true, "score": 0, "last_activity_date": 1546283010, "last_edit_date": 1546283010, "creation_date": 1545868079, "answer_id": 53938298, "question_id": 53924174, "link": "https://stackoverflow.com/questions/53924174/window-doesnt-open-when-running-a-rust-opengl-program-inside-of-lldb-on-windows/53938298#53938298", "title": "Window doesn&#39;t open when running a Rust OpenGL program inside of LLDB on Windows", "body": "<p><strong>Partial answer:</strong> As a workaround, you can <em>attach</em> LLDB to a running process instead of <em>launching</em> the process from LLDB. In VSCode, you can do this with: <code>Add Configuration -&gt; LLDB: Attach by Name</code>. With this workflow, the OpenGL window opens just like it would if LLDB weren't involved. Unfortunately, attaching is significantly less ergonomic.</p>\n\n<p><strong>Update</strong>: I prefer to launch with the debugger rather than attach. I've found that Rust's MSVC x64 toolchain along with Microsoft's C/C++ debugger works well for this use case. The steps that work for me are:</p>\n\n<ol>\n<li>If necessary, install MSVC toolchain: <code>rustup install stable-x86_64-pc-windows-msvc</code></li>\n<li>Set the MSVC toolchain as default: <code>rustup default stable-x86_64-pc-windows-msvc</code></li>\n<li>Update Rust: <code>rustup update</code></li>\n<li>Install <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools\" rel=\"nofollow noreferrer\">Microsoft's C/C++ extension</a> for Visual Studio Code. The extension includes a debugger that's compatible with the MSVC binaries that Rust compiles.</li>\n<li>Add a debug configuration to Visual Studio Code. I started by adding the default configuration but had to modify it. Ultimately, this is what I had in <code>.vs-code/launch.json</code>--note that the string <code>rust-test</code> is unique to the project:</li>\n</ol>\n\n<p>-</p>\n\n<pre><code>{\n  \"name\": \"(Windows) Launch\",\n  \"type\": \"cppvsdbg\",\n  \"request\": \"launch\",\n  \"program\": \"${workspaceFolder}/target/debug/rust-test.exe\",\n  \"args\": [],\n  \"symbolSearchPath\": \"${workspaceFolder}/target/debug/rust-test.pdb\",\n  \"stopAtEntry\": false,\n  \"cwd\": \"${workspaceFolder}/target/debug\",\n  \"environment\": [],\n  \"externalConsole\": true\n}\n</code></pre>\n\n<p>I'd still be grateful if anyone has any thoughts about the LLDB issue. Although the MSVC toolchain solves my problem for now, there may be others out there who really want to use LLDB and come across this question.</p>\n"}], "owner": {"reputation": 6225, "user_id": 284681, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/6148631c6a332d77f1f6cb5e6b382f29?s=128&d=identicon&r=PG", "display_name": "rlkw1024", "link": "https://stackoverflow.com/users/284681/rlkw1024"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 0, "accepted_answer_id": 53938298, "answer_count": 1, "score": -1, "last_activity_date": 1546283010, "creation_date": 1545757378, "last_edit_date": 1545867615, "question_id": 53924174, "link": "https://stackoverflow.com/questions/53924174/window-doesnt-open-when-running-a-rust-opengl-program-inside-of-lldb-on-windows", "title": "Window doesn&#39;t open when running a Rust OpenGL program inside of LLDB on Windows", "body": "<p>I have a minimal Rust/OpenGL app on Windows. I'm using Visual Studio Code, LLDB, and Glutin (a library resembling GLFW).</p>\n\n<p>Launching via <code>cargo run</code> opens an empty window, but when launching via LLDB, no window opens. I've confirmed both in LLDB and with <code>println!</code> that the context-creation functions are being called and the main loop is executing. In other words, I've verified that all lines of code are reached. The same holds true whether running from within VSCode or not.</p>\n\n<p>I'm using a 32-bit Rust toolchain, <code>stable-i686-pc-windows-gnu</code>, because LLDB doesn't fully support 64-bit Windows. Aside from this issue, LLDB seems to be working as expected.</p>\n\n<p>Below is <code>main.rs</code>, which is adapted from the <a href=\"https://github.com/tomaka/glutin/blob/master/README.md\" rel=\"nofollow noreferrer\">Glutin readme</a>. (Glutin is a Rust library similar to GLFW.) I've deleted all but the essentials necessary to open a window.</p>\n\n<p><strong>Desired behavior:</strong> The window opens when the program launches from LLDB, the same as it does when the program launches from outside LLDB.</p>\n\n<p><strong>Actual behavior:</strong> The window doesn't open when the program launches from LLDB.</p>\n\n<p><strong>Question:</strong> What could explain this difference in behavior? I.e. why would the window not open from LLDB when it does from the terminal?</p>\n\n<hr>\n\n<pre><code>extern crate gl;\nextern crate glutin;\n\nfn main() {\n    let events_loop = glutin::EventsLoop::new();\n    let window = glutin::WindowBuilder::new();\n    let context = glutin::ContextBuilder::new();\n\n    // When running outside LLDB, this line causes the window to appear.\n    // The let binding is necessary because without it, the value will be dropped\n    // and the window will close before the loop starts.\n    let gl_window = glutin::GlWindow::new(window, context, &amp;events_loop).unwrap();\n\n    // Normally, we'd make the window current here. But it's not necessary\n    // to reproduce the problem.\n    loop {\n        // This is where we'd swap the buffers and clear. But it's not necessary\n        // to reproduce the problem.\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "unwrap"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1545833287, "post_id": 53921319, "comment_id": 94706600, "body": "This question does not have an answer that is almost entirely based on opinion, so I&#39;ve voted to re-open it. Idiomatic Rust code only uses unwrap where its failure would otherwise indicate a bug in the code. This is fairly easy to support by doing a survey of the ecosystem."}], "answers": [{"comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1545734243, "post_id": 53921514, "comment_id": 94684960, "body": "Okay, I am thinking in the same manner. So by looking that perspective I do not see any advantages the usage of <code>unwrap</code> in any cases? Maybe only at quick test codes it may be usefull?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1545734352, "post_id": 53921514, "comment_id": 94684980, "body": "@AkinerAlkan there&#39;s a reason <code>unwrap()</code> is widely considered a code smell in rust. The only time you may have a justification for it is if you&#39;re consuming a <code>Result</code> but your function&#39;s signature does not have one - at which point you either need to consider 1) why the overarching signature had a <code>Result</code>, or 2) why yours does not"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1545740229, "post_id": 53921514, "comment_id": 94686412, "body": "unwrap is most certainly not widely considered a code smell."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1545743277, "post_id": 53921514, "comment_id": 94687057, "body": "@BurntSushi5 <a href=\"https://doc.rust-lang.org/1.5.0/book/error-handling.html#a-brief-interlude-unwrapping-isnt-evil\" rel=\"nofollow noreferrer\">the doc</a> has a section on this, with two (albeit opinionated) edge cases where <code>unwrap</code> can be judicious: in hackish code, or when you <i>cannot recover</i> from the failure (and where the panic is justified). The OP is very clearly in neither of those two cases, I&#39;m sure we can agree on that."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1545747084, "post_id": 53921514, "comment_id": 94687897, "body": "Yes, I know what that doc says. I wrote it. The point of that section in the docs is to specially say that unwrapping is okay in some circumstances. I am specifically taking issue with your claim that it is widely regarded as a code smell. But it isn&#39;t. It&#39;s only a code smell when it&#39;s used for error handling, which is an important qualification. Also, the doc doesn&#39;t say &quot;it&#39;s okay when you cannot recover,&quot; which is less actionable. Instead, it&#39;s easier to just say that if end users observe a panic, then there exists a bug somewhere in the code."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1545747134, "post_id": 53921514, "comment_id": 94687912, "body": "OP doesn&#39;t give a very specific scenario, so it&#39;s hard to say concretely what the answer is. It seems like a broad question which probably deserves a broad answer."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 4, "last_activity_date": 1545837099, "last_edit_date": 1545837099, "creation_date": 1545734027, "answer_id": 53921514, "question_id": 53921319, "link": "https://stackoverflow.com/questions/53921319/are-there-any-nice-cases-where-we-should-use-unwrap/53921514#53921514", "title": "Are there any nice cases where we should use `unwrap`?", "body": "<p>Let's focus on <code>Result</code>; I'll go back to <code>Option</code> at the end.</p>\n\n<p>The purpose of <code>Result</code> is to signal a result which may succeed or fail with an error. As such, any use of it should fall into this category. Let's ignore the cases where a crate returns <code>Result</code> for impossible-to-fail operations.</p>\n\n<p>By doing what you are doing (checking <code>if result.is_ok()</code> <em>then</em> extracting the value), you're effectively doing the same thing twice. The first time, you're inspecting the content of the <code>Result</code>, and the second, you're checking and extracting unsafely.</p>\n\n<p>This could indeed have been done with a <code>match</code> or <code>map</code>, and both would have been more idiomatic than an <code>if</code>. Consider this case for a moment:</p>\n\n<p>You have an object implementing the following trait:</p>\n\n<pre><code>use std::io::{Error, ErrorKind};\n\ntrait Worker {\n    fn hours_left(&amp;self) -&gt; Result&lt;u8, Error&gt;;\n    fn allocate_hours(&amp;mut self, hours: u8) -&gt; Result&lt;u8, Error&gt;;\n}\n</code></pre>\n\n<p>We're going to assume <code>hours_left()</code> does exactly what it says on the tin. We'll also assume we have a mutable borrow of <code>Worker</code>. Let's implement <code>allocate_hours()</code>.</p>\n\n<p>In order to do so, we'll obviously need to check if our worker has extra hours left over to allocate. You <em>could</em> write it similar to yours:</p>\n\n<pre><code>fn allocate_hours(&amp;mut self, hours: u8) {\n    let hours_left = self.hours_left();\n    if (hours_left.is_ok()) {\n        let remaining_hours = hours_left.unwrap();\n        if (remaining_hours &lt; hours) {\n            return Err(Error::new(ErrorKind::NotFound, \"Not enough hours left\"));\n        }\n    // Do the actual operation and return\n    } else {\n        return hours_left;\n    }\n}\n</code></pre>\n\n<p>However, this implementation is both clunky and inefficient. We can simplify this by avoiding <code>unwrap</code> and <code>if</code> statements altogether.</p>\n\n<pre><code>fn allocate_hours(&amp;mut self, hours: u8) -&gt; Result&lt;u8, Error&gt; {\n    self.hours_left()\n        .and_then(|hours_left| {\n            // We are certain that our worker is actually there to receive hours\n            // but we are not sure if he has enough hours. Check.\n            match hours_left {\n                x if x &gt;= hours =&gt; Ok(x),\n                _ =&gt; Err(Error::new(ErrorKind::NotFound, \"Not enough hours\")),\n            }\n        })\n        .map(|hours_left| {\n            // At this point we are sure the worker has enough hours.\n            // Do the operations\n        })\n}\n</code></pre>\n\n<p>We've killed multiple birds with one stone here. We've made our code more readable, easier to follow and we've removed a whole bunch of repeated operations. This is also beginning to look like Rust and less like PHP ;-)</p>\n\n<p><code>Option</code> is similar and supports the same operations. If you want to process the content of either <code>Option</code> or <code>Result</code> and branch accordingly, and you're using <code>unwrap</code>, there are so many pitfalls you'll inevitably fall into when you forget you unwrapped something.</p>\n\n<p>There are genuine cases where your program should barf out. For those, consider <code>expect(&amp;str)</code> as opposed to <code>unwrap()</code></p>\n"}, {"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 2, "last_activity_date": 1545738492, "creation_date": 1545738492, "answer_id": 53922090, "question_id": 53921319, "link": "https://stackoverflow.com/questions/53921319/are-there-any-nice-cases-where-we-should-use-unwrap/53922090#53922090", "title": "Are there any nice cases where we should use `unwrap`?", "body": "<p>In many, many cases you can avoid <code>unwrap</code> and others by more elegant means. However, I think there are situations where it is the correct solution to <code>unwrap</code>.</p>\n\n<p>For example, many methods in <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"nofollow noreferrer\"><code>Iterator</code></a> return an <code>Option</code>. Let us assume that you have a nonempty slice (known to be nonempty by invariants) and you want to obtain the maximum, you could do the following:</p>\n\n<pre><code>assert!(!slice.empty()); // known to be nonempty by invariants\ndo_stuff_with_maximum(slice.iter().max().unwrap());\n</code></pre>\n\n<p>There are probably several opinions regarding this, but I would argue that using <code>unwrap</code> in the above scenario is perfectly fine - in the presence of the preceeding <code>assert!</code>.</p>\n\n<p>My guideline is: If the parameters I am dealing with are all coming from my own code, not interfacing with 3rd party code, possibly <code>assert!</code>ing invariants, I am fine with <code>unwrap</code>. As soon as I am the slightest bit unsure, I resort to <code>if</code>, <code>match</code>, <code>map</code> and others.</p>\n\n<p>Note that there is also <code>expect</code> which is basically an \"<code>unwrap</code> with a comment printed in the error case\". However, I have found this to be not-really-ergonomic. Moreover, I found the backtraces a bit hard to read if <code>unwrap</code> fails. Thus, I currently use a macro <code>verify!</code> whose sole argument is an <code>Option</code> or <code>Result</code> and that checks that the value is <code>unwrap</code>able. It is implemented like this:</p>\n\n<pre><code>pub trait TVerifiableByVerifyMacro {\n    fn is_verify_true(&amp;self) -&gt; bool;\n}\nimpl&lt;T&gt; TVerifiableByVerifyMacro for Option&lt;T&gt; {\n    fn is_verify_true(&amp;self) -&gt; bool {\n        self.is_some()\n    }\n}\nimpl&lt;TOk, TErr&gt; TVerifiableByVerifyMacro for Result&lt;TOk, TErr&gt; {\n    fn is_verify_true(&amp;self) -&gt; bool {\n        self.is_ok()\n    }\n}\nmacro_rules! verify {($e: expr) =&gt; {{\n    let e = $e;\n    assert!(e.is_verify_true(), \"verify!({}): {:?}\", stringify!($e), e)\n    e\n}}}\n</code></pre>\n\n<p>Using this macro, the aforementioned example could be written as:</p>\n\n<pre><code>assert!(!slice.empty()); // known to be nonempty by invariants\ndo_stuff_with_maximum(verify!(slice.iter().max()).unwrap());\n</code></pre>\n\n<p>If I can't <code>unwrap</code> the value, I get an error message mentioning <code>slice.iter().max()</code>, so that I can search my codebase quickly for the place where the error occurs. (Which is - in my experience - faster than looking through the backtrace for the origin of the error.)</p>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 381, "favorite_count": 0, "closed_date": 1545806075, "answer_count": 2, "score": 0, "last_activity_date": 1545837099, "creation_date": 1545732453, "last_edit_date": 1545836995, "question_id": 53921319, "link": "https://stackoverflow.com/questions/53921319/are-there-any-nice-cases-where-we-should-use-unwrap", "closed_reason": "Opinion-based", "title": "Are there any nice cases where we should use `unwrap`?", "body": "<p>Since using <code>unwrap</code> may be problematic because it crashes in the error scenario, it may be considered as dangerous usage.</p>\n\n<p>What if I am hundred percent sure that it will not crash, like in the following scenarios:</p>\n\n<pre><code>if option.is_some() {\n    let value = option.unwrap();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>if result.is_ok() {\n    let result_value = result.unwrap();\n}\n</code></pre>\n\n<p>Since we already checked the <code>Result</code> and <code>Option</code> there will be no crash with the <code>unwrap()</code> usage. However, we could have used <code>match</code> or <code>if let</code>. In my opinion, either <code>match</code> or <code>if let</code> usage is more elegant. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "edited": false, "score": 0, "creation_date": 1545733209, "post_id": 53921367, "comment_id": 94684751, "body": "I just edit my sample code, actually I want to use <code>Foo</code> trait like this <code>&quot;some word&quot;.test()</code>, and I just wonder why <code>String</code> works too."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "edited": false, "score": 0, "creation_date": 1545733356, "post_id": 53921367, "comment_id": 94684789, "body": "@McGrady as stated in the reply - the compiler is taking advantage that <code>String</code> implements <code>Deref</code> into <code>&amp;&#39;a str</code>, doing the call to <code>deref()</code> for you, and then using your method. Two years ago, this would&#39;ve been an error."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1545740380, "post_id": 53921367, "comment_id": 94686438, "body": "@trentcl Good catch. Seeing as the method in the trait is no longer requiring <code>self</code> but <code>&amp;self</code> instead, there is no reason for <code>Foo</code> to be on <code>String</code> as opposed to <code>str</code>. Editing."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1545836734, "last_edit_date": 1545836734, "creation_date": 1545732826, "answer_id": 53921367, "question_id": 53921256, "link": "https://stackoverflow.com/questions/53921256/does-the-rust-compiler-convert-string-to-str-implicitly/53921367#53921367", "title": "Does the Rust compiler convert String to &amp;str implicitly?", "body": "<p>First off, careful. <code>String</code> != <code>CString</code>. And <code>s.test(var)</code> will not yield anything but an error since your <code>test</code> method takes no parameter but <code>self</code>.</p>\n\n<p>Now, on to what is <em>actually</em> happening.</p>\n\n<p>When you define an extension method like you did by defining a trait then implementing it for <code>&amp;_ str</code> but not on <code>String</code>, and then try to invoke it, the compiler implicitly does the dereferencing (since <code>String</code> implements <code>Deref</code> into <code>&amp;_ str</code>).</p>\n\n<p>As a result, your <code>main</code> function can be written for clarity as:</p>\n\n<pre><code>fn main() {\n    let s = String::from(\"123456789\");\n    println!(\"{}\", (s.deref()).test());\n}\n</code></pre>\n\n<p>and is entirely analogous to what the compiler does under-the-hood. The compiler essentially saw that you were trying to use this, and did so for you.</p>\n\n<p>I need to warn you, though - your code is extremely weird in multiple ways:</p>\n\n<ul>\n<li>One normally implements trait methods like these on objects, not their <code>Deref</code> counterpart, precisely to avoid this level of indirection</li>\n<li>Your implementation consumes a reference. Consider this for a moment.</li>\n</ul>\n\n<p>A much better, and less indirect way to write it, is as follows:</p>\n\n<pre><code>pub trait Foo {\n    fn test(&amp;self) -&gt; String;\n}\n\nimpl Foo for str {\n    fn test(&amp;self) -&gt; String {\n        String::from(\"da\")\n    }\n}\n\nfn main() {\n    let s = String::from(\"123456789\");\n    println!(\"{}\", s.test());\n}\n</code></pre>\n\n<p>You are not sacrificing anything, the functionality remains identical, but:</p>\n\n<ul>\n<li>You are no longer needlessly consuming a reference</li>\n<li>You are no longer needlessly forcing the compiler to infer a <code>deref</code> call</li>\n</ul>\n"}], "owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "accepted_answer_id": 53921367, "answer_count": 1, "score": 0, "last_activity_date": 1545836734, "creation_date": 1545731859, "last_edit_date": 1545836686, "question_id": 53921256, "link": "https://stackoverflow.com/questions/53921256/does-the-rust-compiler-convert-string-to-str-implicitly", "title": "Does the Rust compiler convert String to &amp;str implicitly?", "body": "<p>I implemented the trait <code>Foo</code> for <code>&amp;'a str</code>, but when I call the method <code>test</code> for <code>std::string::String</code>, it works. I checked my code and I'm sure that I don't implement the trait for <code>String</code>, so does the Rust compiler convert <code>String</code> to <code>str</code> implicitly?</p>\n\n<p>The code likes this:</p>\n\n<pre><code>pub trait Foo {\n    fn test(self) -&gt; String;\n}\n\nimpl&lt;'a&gt; Foo for &amp;'a str {\n    fn test(self) -&gt; String {\n        String::from(\"da\")\n    }\n}\n\nfn main() {\n    let s = String::from(\"123456789\");\n    println!(\"{}\", s.test());\n}\n</code></pre>\n\n<p>The Rust plugin for the Jetbrains IDE can't find <code>test</code> method for <code>String</code>, but it works well.</p>\n\n<p>Why does that code work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 5, "creation_date": 1545717318, "post_id": 53919631, "comment_id": 94681779, "body": "your question doesn&#39;t contain a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, we can&#39;t answer you, but generally try to <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.cloned\" rel=\"nofollow noreferrer\"><code>cloned()</code></a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1545726907, "post_id": 53919631, "comment_id": 94683510, "body": "The question is why you want a <code>Option&lt;Body&gt;</code> at all? This seems either be a misunderstanding of ownership or a XY-Problem."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1545737944, "post_id": 53919631, "comment_id": 94685866, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51338579/how-to-convert-optiont-to-optiont-in-the-most-idiomatic-way-in-rust\">How to convert Option&lt;&amp;T&gt; to Option&lt;T&gt; in the most idiomatic way in Rust?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 2, "last_activity_date": 1545734827, "creation_date": 1545734827, "answer_id": 53921622, "question_id": 53919631, "link": "https://stackoverflow.com/questions/53919631/how-do-i-convert-optiont-to-optiont/53921622#53921622", "title": "How do I convert Option&lt;&amp;T&gt; to Option&lt;T&gt;?", "body": "<p>When you have an <code>Option&lt;&amp;T&gt;</code>, you don't actually have the <em>object</em> itself. You have, maybe, a reference to the said object. Obviously, you cannot go from \"a reference\" to \"a full-fledged owned object\" without some trickery in between. You only currently have a <strong>pointer</strong> to the object, not the object itself, and as such, your only recourse is to find a way to make a copy of it.</p>\n\n<p>If <code>T</code> implements <code>Clone</code>, you could in theory <code>clone()</code> your object and call it a day - this would turn your <code>Option&lt;&amp;T&gt;</code> into <code>Option&lt;T&gt;</code> at the cost of a full memory copy. Judging by the type signature, this is probably a <code>hyper</code> question, however, and <code>Body</code> does not implement such a trait.</p>\n\n<p>All other solutions will fail:</p>\n\n<ul>\n<li>You cannot create a method on the object to destructure it and return <code>self</code>, as that would invalidate the borrow you have on <code>&amp;T</code></li>\n<li>You have no way to turn directly from <code>&amp;T</code> to <code>T</code> as you only have a borrow</li>\n</ul>\n"}], "owner": {"reputation": 9, "user_id": 10830910, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Cgib53QXFyc/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcb8cVRqdyd8D4unTCBU4n1SOhGa9Q/mo/photo.jpg?sz=128", "display_name": "pyama", "link": "https://stackoverflow.com/users/10830910/pyama"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "closed_date": 1545773407, "answer_count": 1, "score": -2, "last_activity_date": 1608754167, "creation_date": 1545716448, "last_edit_date": 1608754167, "question_id": 53919631, "link": "https://stackoverflow.com/questions/53919631/how-do-i-convert-optiont-to-optiont", "closed_reason": "Not suitable for this site", "title": "How do I convert Option&lt;&amp;T&gt; to Option&lt;T&gt;?", "body": "<p>I don't know how convert <code>Option&lt;&amp;T&gt;</code> to <code>Option&lt;T&gt;</code>. I'm using the reqwest crate. This is my code:</p>\n<pre><code>let body: Option&lt;Body&gt; = request.body();\n</code></pre>\n<p>But I get <code>mismatched type</code> error. How do I convert <code>Option&lt;&amp;Body&gt;</code> to <code>&lt;Option&lt;Body&gt;&gt;</code>?</p>\n"}, {"tags": ["scala", "rust", "rust-actix"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545708095, "post_id": 53918926, "comment_id": 94680763, "body": "well, first futures is a concept free langage, also there is many way to implement it, rust is trying to improve this concept by adding it &quot;directly&quot; in the language <a href=\"https://github.com/rust-lang/rust/issues/50547\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/50547</a>. futures crates is still under development and will change a lot. So yes the doc is very poor currently. Also your question is unclear, actix currently is build on top of tokio that it&#39;s build on top of many thing. &quot;iterable of futures to a single Future of iterable&quot; don&#39;t see the difference."}, {"owner": {"reputation": 153, "user_id": 1664659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e5ce42343188b363f611b10829127cf?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/1664659/manu"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545713323, "post_id": 53918926, "comment_id": 94681296, "body": "Also I am eagerly waiting for stable futures :). Yes tokio uses many other things but basic future is still same right. Or does each implement their own futures? If yes then they should give a way to convert their Future to standard rust Future."}, {"owner": {"reputation": 153, "user_id": 1664659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e5ce42343188b363f611b10829127cf?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/1664659/manu"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545714662, "post_id": 53918926, "comment_id": 94681460, "body": "@Stargateur Well i mean like Vec&lt;Future&lt;i32&gt;&gt; to Future&lt;Vec&lt;i32&gt;&gt;. futures-util crate has join_all function defined for the same. But don&#39;t know how to use it. I am a totally Rust beginner here."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545714675, "post_id": 53918926, "comment_id": 94681461, "body": "you mean <code>Vec&lt;Future&gt;</code> to <code>Future&lt;Vec&lt;Future&gt;&gt;</code> ? you sure you don&#39;t want use <a href=\"https://docs.rs/futures/0.1.25/futures/stream/fn.iter_ok.html\" rel=\"nofollow noreferrer\"><code>iter_ok()</code></a> ?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1545714736, "post_id": 53918926, "comment_id": 94681469, "body": "haha begin rust with actix is clearly not a good idea ^^ it&#39;s like learn C by doing a HTTP server."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545715100, "post_id": 53918926, "comment_id": 94681513, "body": "Oh I understand your problem, wait I will try to on my machine probably a versoin problem indeed"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1545715568, "post_id": 53918926, "comment_id": 94681580, "body": "your cargo.toml don&#39;t have actix crate also your question is far than from having a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> keep it simple. why there is a lib, a workspace and all stuff that I ignore and are not linking to the question ? Seem like you just copy actix toml file"}, {"owner": {"reputation": 153, "user_id": 1664659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e5ce42343188b363f611b10829127cf?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/1664659/manu"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545716107, "post_id": 53918926, "comment_id": 94681650, "body": "@Stargateur yup i did copy of actix cargo.toml. because I edited example file provided in actix. Due to which I need not put dependency on actix."}, {"owner": {"reputation": 153, "user_id": 1664659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e5ce42343188b363f611b10829127cf?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/1664659/manu"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545716216, "post_id": 53918926, "comment_id": 94681668, "body": "iter_ok? let me try that. Also let me provide a simple example by creating a new project instead of editing what actix has given in examples."}, {"owner": {"reputation": 153, "user_id": 1664659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e5ce42343188b363f611b10829127cf?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/1664659/manu"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545716556, "post_id": 53918926, "comment_id": 94681700, "body": "@Stargateur, haha I agree, Need to start from simple programs. But the problem is, I work in environment of distributed computing in scala, akka, spark etc.. So I really dont get enough time to start from beginning. But reading thru docs of rust I can fairly understand stuff. Many things translates to the way scala is. So a direct jump."}], "answers": [{"comments": [{"owner": {"reputation": 153, "user_id": 1664659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e5ce42343188b363f611b10829127cf?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/1664659/manu"}, "edited": false, "score": 0, "creation_date": 1545745638, "post_id": 53919657, "comment_id": 94687587, "body": "Wow awesome, fututes crate has this method. Superb. Thanks @Stargateur"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 1, "last_activity_date": 1545853745, "last_edit_date": 1545853745, "creation_date": 1545716789, "answer_id": 53919657, "question_id": 53918926, "link": "https://stackoverflow.com/questions/53918926/cannot-use-the-futures-util-crate-with-actix-because-the-trait-future-is-not-imp/53919657#53919657", "title": "Cannot use the futures-util crate with Actix because the trait Future is not implemented", "body": "<p>In your project, you use the <code>join_all</code> function of futures included in <code>futures-util</code>. It seems like this crate is in conflict with the actix version of futures.</p>\n\n<p>In <a href=\"https://github.com/actix/actix/blob/68b03dd905cb35719c784367c829b8513ca5e4ce/Cargo.toml\" rel=\"nofollow noreferrer\">actix 0.7.10</a></p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>futures = \"0.1\"\n</code></pre>\n\n<p>in <a href=\"https://github.com/canndrew/future-utils/blob/a03447069c3e9d9ccc52b7f4f4cb9285f5b3d05c/Cargo.toml\" rel=\"nofollow noreferrer\">futures-util 0.2.1</a>:</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>futures = \"~0.1.15\"\n</code></pre>\n\n<p>I advise you to directly use <code>join_all</code> from <code>futures</code>:</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>[package]\nname = \"Battlefield Vietnam\"\nversion = \"0.0.1\"\n\n[dependencies]\nactix = \"0.7\"\nfutures = \"0.1\"\ntokio = \"0.1.7\"\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate actix;\nextern crate futures;\nextern crate tokio;\n\nuse actix::prelude::*;\nuse futures::future::*;\nuse futures::Future;\nuse std::time::SystemTime;\n\n/// Define `Ping` message\nstruct Ping(usize);\n\nimpl Message for Ping {\n    type Result = usize;\n}\n\n/// Actor\nstruct MyActor {\n    count: usize,\n}\n\n/// Declare actor and its context\nimpl Actor for MyActor {\n    type Context = Context&lt;Self&gt;;\n}\n\n/// Handler for `Ping` message\nimpl Handler&lt;Ping&gt; for MyActor {\n    type Result = usize;\n\n    fn handle(&amp;mut self, msg: Ping, _: &amp;mut Context&lt;Self&gt;) -&gt; Self::Result {\n        self.count += msg.0;\n        self.count\n    }\n}\n\nfn main() {\n    // start system, this is required step\n    System::run(|| {\n        // start new actor\n        let addr = MyActor { count: 10 }.start();\n\n        let start = SystemTime::now();\n\n        // send message and get future for result\n        let res = join_all((1..10).into_iter().map(move |x| addr.send(Ping(x))));\n\n        // handle() returns tokio handle\n        tokio::spawn(\n            res.map(move |res| {\n                let difference = start\n                    .duration_since(start)\n                    .expect(\"SystemTime::duration_since failed\");\n                println!(\"Time taken: {:?}\", difference);\n\n                // stop system and exit\n                System::current().stop();\n            })\n            .map_err(|_| ()),\n        );\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 153, "user_id": 1664659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e5ce42343188b363f611b10829127cf?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/1664659/manu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 689, "favorite_count": 0, "closed_date": 1545853675, "accepted_answer_id": 53919657, "answer_count": 1, "score": 0, "last_activity_date": 1545853783, "creation_date": 1545705042, "last_edit_date": 1545853783, "question_id": 53918926, "link": "https://stackoverflow.com/questions/53918926/cannot-use-the-futures-util-crate-with-actix-because-the-trait-future-is-not-imp", "closed_reason": "Duplicate", "title": "Cannot use the futures-util crate with Actix because the trait Future is not implemented", "body": "<p>Scala has a way to convert a iterable of futures to a single future of iterables via <code>Futures.sequence</code></p>\n\n<p>I was searching for same in Rust and found the <a href=\"https://crates.io/crates/futures-util\" rel=\"nofollow noreferrer\">futures_util crate</a>. I used this crate in a program edited from the Actix example, but it failed to compile.</p>\n\n<p>Cargo.toml </p>\n\n<pre><code>[package]\nname = \"actix\"\nversion = \"0.7.10\"\nauthors = [\"Nikolay Kim &lt;fafhrd91@gmail.com&gt;\"]\ndescription = \"Actor framework for Rust\"\nreadme = \"README.md\"\nkeywords = [\"actor\", \"futures\", \"actix\", \"async\", \"tokio\"]\nhomepage = \"https://actix.rs\"\nrepository = \"https://github.com/actix/actix.git\"\ndocumentation = \"https://docs.rs/actix/\"\ncategories = [\"network-programming\", \"asynchronous\"]\nlicense = \"MIT/Apache-2.0\"\nexclude = [\".gitignore\", \".travis.yml\", \".cargo/config\", \"appveyor.yml\"]\n\n[badges]\ntravis-ci = { repository = \"actix/actix\", branch = \"master\" }\nappveyor = { repository = \"fafhrd91/actix-n9e64\" }\ncodecov = { repository = \"actix/actix\", branch = \"master\", service = \"github\" }\n\n[lib]\nname = \"actix\"\npath = \"src/lib.rs\"\n\n[workspace]\nmembers = [\"examples/chat\"]\n\n[features]\ndefault = [\"signal\", \"resolver\"]\n\n# dns resolver\nresolver = [\"trust-dns-resolver\", \"trust-dns-proto\"]\n\n# signal handling\nsignal = [\"tokio-signal\"]\n\n[dependencies]\nactix_derive = \"0.3\"\n\n# io\nbytes = \"0.4\"\nfutures = \"0.1\"\nfutures-util = \"0.2.1\"\ntokio = \"0.1.7\"\ntokio-io = \"0.1\"\ntokio-codec = \"0.1\"\ntokio-executor = \"0.1\"\ntokio-reactor = \"0.1\"\ntokio-tcp = \"0.1\"\ntokio-timer = \"0.2\"\n\n# other\nlog = \"0.4\"\nfnv = \"1.0.5\"\nfailure = \"0.1.1\"\nbitflags = \"1.0\"\nsmallvec = \"0.6\"\ncrossbeam-channel = \"0.3\"\nparking_lot = \"0.7\"\nuuid = { version = \"0.7\", features = [\"v4\"] }\n\n# signal handling\ntokio-signal = { version = \"0.2\", optional = true }\n\n# dns resolver\ntrust-dns-proto = { version = \"^0.5.0\", optional = true }\ntrust-dns-resolver = { version = \"^0.10.0\", optional = true }\n\n[target.'cfg(unix)'.dependencies]\nlibc = \"0.2\"\n\n[profile.release]\nlto = true\nopt-level = 3\ncodegen-units = 1\n</code></pre>\n\n<p>Code :</p>\n\n<pre><code>extern crate actix;\nextern crate futures;\nextern crate tokio;\nextern crate futures_util;\n\nuse actix::prelude::*;\nuse futures::Future;\nuse futures_util::future::*;\nuse std::time::{SystemTime, UNIX_EPOCH};\n\n/// Define `Ping` message\nstruct Ping(usize);\n\nimpl Message for Ping {\n    type Result = usize;\n}\n\n/// Actor\nstruct MyActor {\n    count: usize,\n}\n\n/// Declare actor and its context\nimpl Actor for MyActor {\n    type Context = Context&lt;Self&gt;;\n}\n\n/// Handler for `Ping` message\nimpl Handler&lt;Ping&gt; for MyActor {\n    type Result = usize;\n\n    fn handle(&amp;mut self, msg: Ping, _: &amp;mut Context&lt;Self&gt;) -&gt; Self::Result {\n        self.count += msg.0;\n        self.count\n    }\n}\n\nfn main() {\n    // start system, this is required step\n    System::run(|| {\n        // start new actor\n        let addr = MyActor { count: 10 }.start();\n\n        let start = SystemTime::now();\n\n        // send message and get future for result\n        let res =  join_all((1..10).into_iter().map(|x| addr.send(Ping(x))));\n\n        // handle() returns tokio handle\n        tokio::spawn(\n       res.map(|res| {\n           let difference = start.duration_since(start)\n                          .expect(\"SystemTime::duration_since failed\");\n           println!(\"Time taken: {:?}\", difference);\n\n           // stop system and exit\n           System::current().stop();\n       }).map_err(|_| ()),\n        );\n    });\n}\n</code></pre>\n\n<p>Even though the error is meaningful, I find it difficult to resolve as <code>Request</code> in Actix implements <code>Future</code>. Did I miss any imports?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `actix::prelude::Request&lt;MyActor, Ping&gt;: futures_core::future::Future` is not satisfied\n  --&gt; examples/ping.rs:47:20\n   |\n47 |         let res =  join_all((1..10).into_iter().map(|x| addr.send(Ping(x))));\n   |                    ^^^^^^^^ the trait `futures_core::future::Future` is not implemented for `actix::prelude::Request&lt;MyActor, Ping&gt;`\n   |\n   = note: required because of the requirements on the impl of `futures_core::future::IntoFuture` for `actix::prelude::Request&lt;MyActor, Ping&gt;`\n   = note: required by `futures_util::future::join_all`\n\nerror[E0277]: the trait bound `actix::prelude::Request&lt;MyActor, Ping&gt;: futures_core::future::Future` is not satisfied\n  --&gt; examples/ping.rs:47:20\n   |\n47 |         let res =  join_all((1..10).into_iter().map(|x| addr.send(Ping(x))));\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `futures_core::future::Future` is not implemented for `actix::prelude::Request&lt;MyActor, Ping&gt;`\n   |\n   = note: required by `futures_util::future::JoinAll`\n\nerror[E0599]: no method named `map` found for type `futures_util::future::JoinAll&lt;actix::prelude::Request&lt;MyActor, Ping&gt;&gt;` in the current scope\n  --&gt; examples/ping.rs:55:12\n   |\n55 |        res.map(|res| {\n   |            ^^^\n   |\n   = note: the method `map` exists but the following trait bounds were not satisfied:\n           `futures_util::future::JoinAll&lt;actix::prelude::Request&lt;MyActor, Ping&gt;&gt; : futures_util::FutureExt`\n           `&amp;futures_util::future::JoinAll&lt;actix::prelude::Request&lt;MyActor, Ping&gt;&gt; : futures_util::FutureExt`\n           `&amp;mut futures_util::future::JoinAll&lt;actix::prelude::Request&lt;MyActor, Ping&gt;&gt; : futures_util::FutureExt`\n           `&amp;mut futures_util::future::JoinAll&lt;actix::prelude::Request&lt;MyActor, Ping&gt;&gt; : futures::Future`\n           `&amp;mut futures_util::future::JoinAll&lt;actix::prelude::Request&lt;MyActor, Ping&gt;&gt; : std::iter::Iterator`\n</code></pre>\n"}, {"tags": ["javascript", "rust", "webassembly", "wasm-bindgen"], "answers": [{"comments": [{"owner": {"reputation": 53, "user_id": 882682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b58a6f61b13d15a4d01a128d06f66c39?s=128&d=identicon&r=PG", "display_name": "on_pwogram&#232;", "link": "https://stackoverflow.com/users/882682/on-pwogram%c3%a8"}, "edited": false, "score": 0, "creation_date": 1545708511, "post_id": 53918413, "comment_id": 94680796, "body": "Thx for your answer. So, this would mean, for my particular case, using <code>web-sys</code>/<code>webassembly</code> would be like over-engineering something I could write completely in plain JS without knowing if it would benefit the performance. Right?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 53, "user_id": 882682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b58a6f61b13d15a4d01a128d06f66c39?s=128&d=identicon&r=PG", "display_name": "on_pwogram&#232;", "link": "https://stackoverflow.com/users/882682/on-pwogram%c3%a8"}, "edited": false, "score": 0, "creation_date": 1545730856, "post_id": 53918413, "comment_id": 94684288, "body": "@on_pwogram&#232; depends how much of it you already have in rust. You <i>could</i> write the entire thing in JS but image manipulation is something that benefits massively from SIMD, which is something that (I think?) is in the works right now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545857586, "post_id": 53918413, "comment_id": 94714080, "body": "<i>Depending on the size of the image you&#39;re desaturating, and the computer you&#39;re running it on, this may or may not present a gain in performance</i> \u2014 so your answer is <b>&quot;maybe&quot;</b>?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545861277, "post_id": 53918413, "comment_id": 94715178, "body": "@Shepmaster it also depends on how much he already wrote in rust - and by the looks of it he edited his question with some code, so I can be more precise! The code and extra precision weren&#39;t there yesterday."}, {"owner": {"reputation": 3796, "user_id": 4661625, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c3cd0caf54e0766c83f04f51f881303b?s=128&d=identicon&r=PG&f=1", "display_name": "Bumsik Kim", "link": "https://stackoverflow.com/users/4661625/bumsik-kim"}, "edited": false, "score": 0, "creation_date": 1556712502, "post_id": 53918413, "comment_id": 98524553, "body": "WebAssembly currently doesn&#39;t have SIMD instructions, it&#39;s a beta feature. I think for now it is always over-engineering (I mean it introduces overhead) and there is no actual benefits other than you use the same Rust, if your main purpose is DOM manipulation."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 3, "last_activity_date": 1545857510, "last_edit_date": 1545857510, "creation_date": 1545695417, "answer_id": 53918413, "question_id": 53918351, "link": "https://stackoverflow.com/questions/53918351/is-there-a-performance-gain-to-use-web-sys-instead-of-plain-old-javascript/53918413#53918413", "title": "Is there a performance gain to use web-sys instead of plain old JavaScript?", "body": "<p>If I understand you correctly, you're marshalling the data back and forth using browser methods at the moment to bask in <code>web-sys</code>'s glory. I have some good news and some bad news for you.</p>\n\n<p>The good news is that if your code is laid out the way you've said it is (and this is where a snippet would've come in very handy), you'll gain on one memory copy going each way.</p>\n\n<p>Right now, the process would be as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>            1              2\n         ======&gt;        =====&gt;       \\\nBrowser         WebWorker      Rust   ||\n         &lt;======        &lt;=====      &lt;=/\n            4              3\n</code></pre>\n\n<p>(Quality ASCII art, I know)</p>\n\n<p>1 is a user input of some sort. 2->3 is a <code>fetch</code> cycle. 4 is the marshalling back.</p>\n\n<p>At best, if your code <strong>is</strong> indeed structured this way, you can get rid of the data copy on steps 2 and 3 by moving everything to <code>web-sys</code>. You will not get rid of the (relatively minimal) copy of data on 1, nor on 4.</p>\n\n<p>Depending on the size of the image you're desaturating, and the computer you're running it on, this may or may not present a gain in performance. I have not looked into the internals of <code>web-sys</code> (this isn't typically my area of expertise - I'm an embedded systems developer), so I cannot speak about the internals of the crate itself, but I assume <code>fetch()</code> as done by the browser or done through <code>web-sys</code> to be identical in performance.</p>\n"}], "owner": {"reputation": 53, "user_id": 882682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b58a6f61b13d15a4d01a128d06f66c39?s=128&d=identicon&r=PG", "display_name": "on_pwogram&#232;", "link": "https://stackoverflow.com/users/882682/on-pwogram%c3%a8"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 961, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1545857510, "creation_date": 1545694417, "last_edit_date": 1545857377, "question_id": 53918351, "link": "https://stackoverflow.com/questions/53918351/is-there-a-performance-gain-to-use-web-sys-instead-of-plain-old-javascript", "title": "Is there a performance gain to use web-sys instead of plain old JavaScript?", "body": "<p>I used <code>wasm-bindgen</code> to write a very basic JS/Wasm webapp in which a grayscale transformation (written in Rust) is applied to an image uploaded by the user of the webapp through an <code>&lt;input type=\"file\"&gt;</code> and displayed in a <code>&lt;canvas&gt;</code>.</p>\n\n<p>Doing so, I had to load the image in the WebAssembly memory space, apply the transformation on each pixel then return the result in the memory space for the JS to take care of the display:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>import { memory} from \"img-grayscale-wasm/img_grayscale_wasm_bg\";\nimport {MyImage} from \"img-grayscale-wasm\"\n\n//...\n\nasync function processImg(file, width, height){\n  const canvas = document.getElementById(\"pixel-grayscale\");\n\n  var resp = await fetch(file.name)\n  var bytes = await resp.arrayBuffer()\n\n  const myImage = MyImage.new();\n  const ptr = myImage.alloc(bytes.byteLength); \n\n  // Copy to memory space\n  const imgArray = new Uint8Array(memory.buffer, ptr, bytes.byteLength);    \n  imgArray.set(new Uint8Array(bytes));\n\n  // transform img\n  myImage.read_img(ptr, bytes.byteLength) \n  const grayScalePtr = myImage.to_grayscale(width, height)\n\n  // read from memory space\n  const arr = new Uint8ClampedArray(memory.buffer, grayScalePtr, width * height * 4);\n  let imageData = new ImageData(arr, width);\n\n  getContextFromCanvas(canvas, width, height).putImageData(imageData, 0, 0);\n}\n</code></pre>\n\n<p>I think I can avoid the whole process of copying stuff back and forth to the memory space if I use the web's API binding defined in the <code>web-sys</code> crate, from <code>fetch</code>ing the file to the display of the grayscaled picture.</p>\n\n<p>This is where I get confused: performance-wise, is there a gain in using <code>web-sys</code> and its web's API bindings instead of doing it all in JavaScript? Well, I suppose there is, but where is it?</p>\n"}, {"tags": ["reference", "rust", "slice", "mutable", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545853185, "post_id": 53917610, "comment_id": 94712850, "body": "A slice <b>is</b> a fat pointer, comprised of a data pointer and a length."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1545687701, "last_edit_date": 1545687701, "creation_date": 1545687354, "answer_id": 53917844, "question_id": 53917610, "link": "https://stackoverflow.com/questions/53917610/structs-containing-mutable-slices/53917844#53917844", "title": "Structs containing mutable slices", "body": "<p>The Rust compiler isn't able to detect that the two borrows of sub-slices are non-overlapping. When you borrow <code>&amp;mut self.slice[..n]</code>, the whole of <code>self.slice</code> is considered to be borrowed, so you can't then borrow the remaining elements.</p>\n\n<p>There is a method <code>split_at_mut</code>, designed to solve this problem by producing two disjoint mutable borrows from a slice. Your code can be updated to use it like this:</p>\n\n<pre><code>impl&lt;'a&gt; Blah&lt;'a&gt; {\n    pub fn take(&amp;'a mut self, n: usize) -&gt; Option&lt;Self&gt; {\n        if self.slice.len() &gt; n {\n            let (left, right) = self.slice.split_at_mut(n);\n            let blah = Blah {\n                slice: left\n            };\n            self.slice = right;\n            Some(blah)\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1247, "user_id": 3169543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7416c0dca5630ff1c31b955e185e955b?s=128&d=identicon&r=PG&f=1", "display_name": "user3169543", "link": "https://stackoverflow.com/users/3169543/user3169543"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 305, "favorite_count": 0, "closed_date": 1545853280, "accepted_answer_id": 53917844, "answer_count": 1, "score": 0, "last_activity_date": 1545853162, "creation_date": 1545684795, "last_edit_date": 1545853162, "question_id": 53917610, "link": "https://stackoverflow.com/questions/53917610/structs-containing-mutable-slices", "closed_reason": "Duplicate", "title": "Structs containing mutable slices", "body": "<p>I'm trying to understand lifetimes and storing mutable slices inside a struct. </p>\n\n<p>I came up with this example with a struct with a slice and a <code>take</code> function that will return <code>n</code> elements (if present) and store the rest in the structure itself. This code does not compile.</p>\n\n<pre><code>fn main() {\n    let mut v: Vec&lt;u8&gt; = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    let mut blah = Blah { slice: &amp;mut v[..] };\n\n    let b = blah.take(5);\n\n    println!(\"b: {:?}\", b);\n}\n\n#[derive(Debug)]\nstruct Blah&lt;'a&gt; {\n    slice: &amp;'a mut [u8],\n}\n\nimpl&lt;'a&gt; Blah&lt;'a&gt; {\n    pub fn take(&amp;'a mut self, n: usize) -&gt; Option&lt;Self&gt; {\n        if self.slice.len() &gt; n {\n            let blah = Blah {\n                slice: &amp;mut self.slice[..n],\n            };\n            self.slice = &amp;mut self.slice[n..];\n            Some(blah)\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>Compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*self.slice` as mutable more than once at a time\n  --&gt; src/main.rs:21:31\n   |\n15 | impl&lt;'a&gt; Blah&lt;'a&gt; {\n   |      -- lifetime `'a` defined here\n...\n19 |                 slice: &amp;mut self.slice[..n],\n   |                             ---------- first mutable borrow occurs here\n20 |             };\n21 |             self.slice = &amp;mut self.slice[n..];\n   |                               ^^^^^^^^^^ second mutable borrow occurs here\n22 |             Some(blah)\n   |             ---------- returning this value requires that `*self.slice` is borrowed for `'a`\n</code></pre>\n\n<p>I have a large in-memory buffer that I don't want to copy. Instead, I want to keep referring to the same memory by carrying around \"fat pointers\" (something like offset + length).</p>\n"}, {"tags": ["json", "rust", "serde"], "comments": [{"owner": {"reputation": 189551, "user_id": 5233410, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/XAODw.png?s=128&g=1", "display_name": "Nkosi", "link": "https://stackoverflow.com/users/5233410/nkosi"}, "edited": false, "score": 4, "creation_date": 1545677789, "post_id": 53916828, "comment_id": 94676548, "body": "That is not valid JSON."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1545678761, "post_id": 53916828, "comment_id": 94676774, "body": "Since this is not valid JSON you can not deserialize it with serde_json but maybe you can try to parse it with <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">nom</a>"}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 1, "last_activity_date": 1545677799, "creation_date": 1545677799, "answer_id": 53916897, "question_id": 53916828, "link": "https://stackoverflow.com/questions/53916828/is-it-possible-to-deserialize-data-that-looks-like-json-but-isnt-using-serde/53916897#53916897", "title": "Is it possible to deserialize data that looks like JSON (but isn&#39;t) using serde_json?", "body": "<p>The input you show is not valid JSON. You will not be able to use serde_json to deserialize that input because serde_json only accepts JSON.</p>\n\n<p>If you find out what format the data is intended to be in, consider using (or writing) a Rust library dedicated to that specific format.</p>\n"}], "owner": {"reputation": 2479, "user_id": 178154, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/3325e461df2fda8738f35a8bf4fd735e?s=128&d=identicon&r=PG", "display_name": "big_gie", "link": "https://stackoverflow.com/users/178154/big-gie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1545836478, "creation_date": 1545677063, "last_edit_date": 1545836478, "question_id": 53916828, "link": "https://stackoverflow.com/questions/53916828/is-it-possible-to-deserialize-data-that-looks-like-json-but-isnt-using-serde", "title": "Is it possible to deserialize data that looks like JSON (but isn&#39;t) using serde_json?", "body": "<p>I have a hard time deserializing (using Rust's <code>serde</code> and <code>serde_json</code> v1.0) the following JSON I receive:</p>\n\n<pre><code>{\n    [\"string content\"]\n}\n</code></pre>\n\n<p>The object's array is <em>not</em> identified by a key, so the following doesn't work:</p>\n\n<pre><code>#[derive(Deserialize)]\nstruct Data {\n    key: Vec&lt;String&gt;\n}\n</code></pre>\n\n<p>I've also tried using <code>#[serde(flatten)]</code> on the <code>key</code> field but I get an error:</p>\n\n<pre><code>can only flatten structs and maps (got a sequence)\n</code></pre>\n\n<p>The data I receive doesn't look like valid JSON. Is it still possible using <code>serde_json</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1545681352, "post_id": 53916203, "comment_id": 94677327, "body": "that not an alias but a macro. I don&#39;t understand your MCVE"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 2, "creation_date": 1545695839, "post_id": 53916203, "comment_id": 94679623, "body": "That is some serious macro abuse, my friend."}, {"owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545819051, "post_id": 53916203, "comment_id": 94701707, "body": "@Stargateur trait alias is not implemented yet, so I need to find a better workaround to avoid code duplication of long <code>Fn</code>s. That is why I used a macro."}], "answers": [{"tags": [], "owner": {"reputation": 269, "user_id": 3649339, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ntoDQ.png?s=128&g=1", "display_name": "doctor_n_", "link": "https://stackoverflow.com/users/3649339/doctor-n"}, "is_accepted": true, "score": 3, "last_activity_date": 1546128173, "last_edit_date": 1546128173, "creation_date": 1546087297, "answer_id": 53969627, "question_id": 53916203, "link": "https://stackoverflow.com/questions/53916203/alias-a-generic-function-with-lifetimes/53969627#53969627", "title": "Alias a generic function with lifetimes?", "body": "<p>You can do this without macros using supertraits and universal <code>impl</code>s. Using the example above:</p>\n\n<pre><code>trait Foo&lt;'a&gt;: Fn(&amp;'a u32) {}\n\nimpl&lt;'a, T&gt; Foo&lt;'a&gt; for T where T: Fn(&amp;'a u32) {}\n\nfn foo_not_broken&lt;'a&gt;(f: impl Foo&lt;'a&gt;) {\n    f(&amp;4);\n}\n\nfn main() {\n    foo_not_broken(|i| {\n        println!(\"{}\", i);\n    });\n}\n</code></pre>\n\n<p>With this approach, you avoid specifying lifetimes on your closures, but must be willing to parameterise your higher order functions in terms of the lifetimes of the references taken by the function(s) they receive.</p>\n\n<p>I realise this is the approach your macro is trying to achieve; however, it cannot cope with additional lifetime specifiers and significantly hurts readability.</p>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 320, "favorite_count": 0, "closed_date": 1546128967, "accepted_answer_id": 53969627, "answer_count": 1, "score": 1, "last_activity_date": 1546128173, "creation_date": 1545672142, "last_edit_date": 1545836327, "question_id": 53916203, "link": "https://stackoverflow.com/questions/53916203/alias-a-generic-function-with-lifetimes", "closed_reason": "Duplicate", "title": "Alias a generic function with lifetimes?", "body": "<p>I have a long function signature that looks like this</p>\n\n<pre><code>Fn(&amp;Framegraph&lt;Compiled&gt;, &amp;Blackboard, &amp;mut Allocator&lt;'_&gt;) -&gt; CommandList + 'static\n</code></pre>\n\n<p>I would like to alias this because it is used in multiple locations:</p>\n\n<pre><code>macro_rules! define_fn {\n    (pub type $name: ident = $($tts:tt)*) =&gt; {\n        pub trait $name: $($tts)* {}\n        impl&lt;T&gt; $name for T\n        where T: $($tts)* {}\n    }\n}\n\ndefine_fn! {\n    pub type Foo = Fn(&amp;'_ u32)\n}\n\nfn foo_broken&lt;F: Foo&gt;(f: F) {\n    f(&amp;4);\n}\n\nfn foo_works&lt;F: Fn(&amp;'_ u32)&gt;(f: F){\n    f(&amp;4);\n}\n\nfn main() {\n    foo_works(|i| {\n        println!(\"{}\", i);\n    });\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8c53c6fd076fbb761e08aae6f2abce79\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p><code>foo_broken</code> doesn't compile:</p>\n\n<pre><code>foo_broken(|i| {\n    println!(\"{}\", i);\n});\n</code></pre>\n\n<p>I would have to add an explicit type, which I don't want to do: </p>\n\n<pre><code>foo_broken(|i: &amp;u32| {\n    println!(\"{}\", i);\n});\n</code></pre>\n\n<p>Is there a better way to alias generic functions with lifetimes? The only implementation that comes to mind is to put everything inside a macro.</p>\n"}, {"tags": ["rust", "type-conversion", "fixed-point"], "comments": [{"owner": {"reputation": 380, "user_id": 11817773, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lakZI.jpg?s=128&g=1", "display_name": "Hyunwoong Kang", "link": "https://stackoverflow.com/users/11817773/hyunwoong-kang"}, "edited": false, "score": 1, "creation_date": 1597564441, "post_id": 53915557, "comment_id": 112169470, "body": "parsing OTF file with Rust...! I love this question"}], "answers": [{"tags": [], "owner": {"reputation": 308, "user_id": 1703320, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/67568f488533b8f36c300c76d7aaf046?s=128&d=identicon&r=PG", "display_name": "Nirlah", "link": "https://stackoverflow.com/users/1703320/nirlah"}, "is_accepted": true, "score": 0, "last_activity_date": 1545675892, "creation_date": 1545675892, "answer_id": 53916688, "question_id": 53915557, "link": "https://stackoverflow.com/questions/53915557/how-do-i-parse-a-twos-complement-fixed-point-number-from-a-primitive-integer-ty/53916688#53916688", "title": "How do I parse a two&#39;s-complement fixed-point number from a primitive integer type with an arbitrary split of integer and fraction?", "body": "<p>Was able to solve my issue, here is an example of parsing 16-bit fixed point number:</p>\n\n<pre><code>use std::mem::size_of;\n\nfn from_u16(raw: u16, frac_count: usize) -&gt; f32 {\n  let bit_count = size_of::&lt;u16&gt;() * 8;\n  let int_count = bit_count - frac_count;\n\n  let unsigned = (raw &gt;&gt; frac_count) as isize;\n  let sign_bit = unsigned &gt;&gt; (int_count - 1) &amp; 1;\n  let high_bits = if sign_bit == 1 { -1 } else { 0 };\n  let signed = high_bits &lt;&lt; int_count | unsigned as isize;\n\n  let mut mask = 0;\n  for i in 0..=frac_count {\n    mask = mask &lt;&lt; i | 1;\n  }\n\n  let frac = (raw &amp; mask) as f32 / (1 &lt;&lt; frac_count) as f32;\n  signed as f32 + frac\n}\n</code></pre>\n"}], "owner": {"reputation": 308, "user_id": 1703320, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/67568f488533b8f36c300c76d7aaf046?s=128&d=identicon&r=PG", "display_name": "Nirlah", "link": "https://stackoverflow.com/users/1703320/nirlah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 566, "favorite_count": 0, "accepted_answer_id": 53916688, "answer_count": 1, "score": 0, "last_activity_date": 1545730495, "creation_date": 1545667715, "last_edit_date": 1545730495, "question_id": 53915557, "link": "https://stackoverflow.com/questions/53915557/how-do-i-parse-a-twos-complement-fixed-point-number-from-a-primitive-integer-ty", "title": "How do I parse a two&#39;s-complement fixed-point number from a primitive integer type with an arbitrary split of integer and fraction?", "body": "<p>I am working on parsing OpenType font files, and need to parse (and write) two kind of fixed-point numbers:</p>\n\n<ul>\n<li>16-bit signed fixed number with the low 14 bits of fraction (2.14)</li>\n<li>32-bit signed fixed-point number (16.16)</li>\n</ul>\n\n<p>I assume that, in the end, it should be cast to/from <code>f32</code></p>\n\n<hr>\n\n<p>The <a href=\"https://docs.microsoft.com/en-us/typography/opentype/spec/otff#data-types\" rel=\"nofollow noreferrer\">OpenType Spec</a> describes:</p>\n\n<blockquote>\n  <p>The F2DOT14 format consists of a signed, 2\u2019s complement integer and an\n  unsigned fraction. To compute the actual value, take the integer and\n  add the fraction.</p>\n</blockquote>\n\n<p>Examples of 2.14 values are:</p>\n\n<pre><code>Decimal Value   Hex Value   Integer     Fraction\n1.999939        0x7fff      1           16383/16384\n1.75            0x7000      1           12288/16384\n0.000061        0x0001      0           1/16384\n0.0             0x0000      0           0/16384\n-0.000061       0xffff      -1          16383/16384\n-2.0            0x8000      -2          0/16384\n</code></pre>\n\n<hr>\n\n<p>I have a solution that works but only for 2.14 values:</p>\n\n<pre><code>fn from(number: u16) -&gt; f32 {\n    let mut int = (number &gt;&gt; 14) as f32;\n    if int &gt; 1f32 {\n        int -= 4f32;\n    }\n    let frac = (number &amp; 0b11_1111_1111_1111) as f32 / 16384 as f32;\n    int + frac\n}\n</code></pre>\n\n<p>Because the integer value should be [-2, 2), I subtract 4 if the parsed integer is higher than 1 to achieve the negative numbers.</p>\n\n<p>I am looking for a way of doing this for a any possible split of fixed-point numbers (like <code>2.14</code>, <code>16.16</code>, <code>3.5</code>, <code>24.40</code>, etc.) inside the standard range of Rust integer primitive types (<code>u16</code>, <code>u32</code>, <code>u64</code>, etc.).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545660969, "post_id": 53912711, "comment_id": 94672227, "body": "<i>Questions seeking debugging help must include [...] code necessary to reproduce it <b>in the question itself</b>.</i> \u2014 please summarize the content of your second link."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1545666713, "post_id": 53912711, "comment_id": 94673832, "body": "I&#39;m not sure if this is a very useful formulation of the pattern. In a typical OOP implementation, you&#39;d use method overloading so that when a visitee calls <code>visit</code> on the visitor, it will call a specific overload. Doing this in Rust would require either an enum for visitees or else an impl of <code>Visitor</code> for each <i>permutation</i> of visitor/visitee.  And you&#39;d still lose a lot of the benefits (unless we get some form of trait impl specialization in the language)."}, {"owner": {"reputation": 678, "user_id": 1494700, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/9f0c7b2c2eab3cd08e72a17d997a5792?s=128&d=identicon&r=PG", "display_name": "prinsen", "link": "https://stackoverflow.com/users/1494700/prinsen"}, "edited": false, "score": 0, "creation_date": 1545667082, "post_id": 53912711, "comment_id": 94673947, "body": "I know it can be done with an enum of all Visitable types. The thing I liked with the GitHub impl is that it avoids it. However then Visitable isn&#39;t easily stored in a Vec"}], "answers": [{"comments": [{"owner": {"reputation": 678, "user_id": 1494700, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/9f0c7b2c2eab3cd08e72a17d997a5792?s=128&d=identicon&r=PG", "display_name": "prinsen", "link": "https://stackoverflow.com/users/1494700/prinsen"}, "edited": false, "score": 0, "creation_date": 1545652480, "post_id": 53912993, "comment_id": 94669694, "body": "This does not allow to pass in different visitors, or do I miss something?"}, {"owner": {"reputation": 678, "user_id": 1494700, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/9f0c7b2c2eab3cd08e72a17d997a5792?s=128&d=identicon&r=PG", "display_name": "prinsen", "link": "https://stackoverflow.com/users/1494700/prinsen"}, "edited": false, "score": 1, "creation_date": 1545659989, "post_id": 53912993, "comment_id": 94671945, "body": "I think you got visitor pattern wrong, accept should take a visitor"}, {"owner": {"reputation": 678, "user_id": 1494700, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/9f0c7b2c2eab3cd08e72a17d997a5792?s=128&d=identicon&r=PG", "display_name": "prinsen", "link": "https://stackoverflow.com/users/1494700/prinsen"}, "edited": false, "score": 0, "creation_date": 1545660377, "post_id": 53912993, "comment_id": 94672055, "body": "If you look at the visitor impl in the link, it allows a visitor impl to implement visitor for a set of types implementing Visitable, and when you call object.accept(visitor), the correct impl is called depending on the type of object"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 1, "last_activity_date": 1545661024, "last_edit_date": 1545661024, "creation_date": 1545651767, "answer_id": 53912993, "question_id": 53912711, "link": "https://stackoverflow.com/questions/53912711/visitor-pattern-in-rust/53912993#53912993", "title": "Visitor pattern in Rust", "body": "<p><code>Visitable</code> is a trait and traits have no size (implementors are not guaranteed to have the same size). You need to store something that has a size. Wrap the values in a <code>Box</code> and then use it like following:</p>\n\n<pre><code>trait VisitorTrait {\n    fn visit(&amp;self, visitable: &amp;Box&lt;VisitableTrait&gt;);\n}\n\nstruct Visitor1 {}\nstruct Visitor2 {}\n\nimpl VisitorTrait for Visitor1 {\n    fn visit(&amp;self, visitable: &amp;Box&lt;VisitableTrait&gt;) {\n        println!(\"visited via Visitor1\");\n        visitable.accept()\n    }\n}\n\nimpl VisitorTrait for Visitor2 {\n    fn visit(&amp;self, visitable: &amp;Box&lt;VisitableTrait&gt;) {\n        println!(\"visited via Visitor2\");\n        visitable.accept()\n    }\n}\n\ntrait VisitableTrait {\n    fn accept(&amp;self);\n}\n\n#[derive(Clone)]\nstruct Visitable1 {}\n#[derive(Clone)]\nstruct Visitable2 {}\n\nimpl VisitableTrait for Visitable1 {\n    fn accept(&amp;self) {\n        println!(\"accepted1.\");\n    }\n}\n\nimpl VisitableTrait for Visitable2 {\n    fn accept(&amp;self) {\n        println!(\"accepted2.\");\n    }\n}\n\nfn main() {\n    let visitor1 = Visitor1 {};\n    let visitor2 = Visitor2 {};\n    let visitable1 = Visitable1 {};\n    let visitable2 = Visitable2 {};\n\n    let mut visitors: Vec&lt;Box&lt;VisitorTrait&gt;&gt; = Vec::new();\n    let mut visitables: Vec&lt;Box&lt;VisitableTrait&gt;&gt; = Vec::new();\n\n    visitors.push(Box::new(visitor1));\n    visitors.push(Box::new(visitor2));\n\n    visitables.push(Box::new(visitable1));\n    visitables.push(Box::new(visitable2));\n\n    for visitable in visitables.iter() {\n        for visitor in visitors.iter() {\n            visitor.visit(visitable.clone());\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a1834d31063db86cf59df0f0fd335a85\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>We declare two different traits for visitor and the visitables and traversing the visitables with the help of visitors with two for loops.</p>\n"}], "owner": {"reputation": 678, "user_id": 1494700, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/9f0c7b2c2eab3cd08e72a17d997a5792?s=128&d=identicon&r=PG", "display_name": "prinsen", "link": "https://stackoverflow.com/users/1494700/prinsen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 956, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1545661024, "creation_date": 1545650124, "last_edit_date": 1545660893, "question_id": 53912711, "link": "https://stackoverflow.com/questions/53912711/visitor-pattern-in-rust", "title": "Visitor pattern in Rust", "body": "<p>I found <a href=\"https://github.com/rust-unofficial/patterns/issues/55\" rel=\"nofollow noreferrer\">an interesting implementation of the visitor pattern in Rust</a>: </p>\n\n<pre><code>pub trait Visitor&lt;T&gt; {\n    fn visit(&amp;mut self, t: &amp;T);\n}\n\npub trait Visitable: Sized {\n    fn accept&lt;T&gt;(&amp;self, t: &amp;mut T)\n    where\n        T: Visitor&lt;Self&gt;,\n    {\n        t.visit(self);\n    }\n}\n</code></pre>\n\n<p>As <code>Visitable</code> is not object safe, I'm unable to store a <code>Vec</code> of <code>Visitable</code> objects. I found <a href=\"https://stackoverflow.com/a/30353928\">a solution to a similar problem</a>, would it be possible to do a similar solution for <code>Visitable</code>?</p>\n"}, {"tags": ["syntax", "rust", "coercion"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1545615130, "post_id": 53908386, "comment_id": 94661480, "body": "I&#39;m not sure why this is, but you can make it work by using two ampersands: <code>reset(&amp;&amp;{Homura});</code> or putting the ampersand inside the block: <code>reset({&amp;Homura});</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1545615408, "post_id": 53908386, "comment_id": 94661513, "body": "Usually in these situations I will say that it&#39;s a bug, and then @trentcl will explain how it&#39;s actually expected behaviour. With that in mind... I think it looks like a bug."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1545616401, "post_id": 53908386, "comment_id": 94661646, "body": "There seems to be something special about slices. If <code>&amp;Deref::Target</code> is a slice then it works."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1545658708, "post_id": 53908386, "comment_id": 94671567, "body": "@PeterHall Sorry to disappoint, because I think this must be a bug. ;-)"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1545676906, "post_id": 53908386, "comment_id": 94676341, "body": "It also works like these : <code>let h = &amp;{Homura}; reset(h);</code> or  <code>reset(&amp;*{Homura});</code>"}, {"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 1, "creation_date": 1547863369, "post_id": 53908386, "comment_id": 95351090, "body": "I&#39;ve filed an issue on <a href=\"https://github.com/rust-lang/rust/issues/57749\" rel=\"nofollow noreferrer\">GitHub</a>."}], "owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 164, "favorite_count": 1, "answer_count": 0, "score": 10, "last_activity_date": 1545663509, "creation_date": 1545614669, "last_edit_date": 1545663509, "question_id": 53908386, "link": "https://stackoverflow.com/questions/53908386/why-does-this-deref-coercion-fail-when-the-expression-is-wrapped-in-a-block", "title": "Why does this deref coercion fail when the expression is wrapped in a block?", "body": "<p><code>String</code> implements <code>Deref&lt;Target = str&gt;</code>, which means that the following code compiles:</p>\n\n<pre><code>fn save(who: &amp;str) {\n    println!(\"I'll save you, {}!\", who);\n}\n\nsave(&amp;String::from(\"Madoka\"));\n</code></pre>\n\n<p>If I create a custom type that also implements <code>Deref&lt;Target = str&gt;</code>, then that works too:</p>\n\n<pre><code>struct Madoka;\n\nimpl Deref for Madoka {\n    type Target = str;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        \"Madoka\"\n    }\n}\n\nsave(&amp;Madoka);\n</code></pre>\n\n<p>Now, let's try coercing to another type -- say, <code>u32</code>. It seems to work as well:</p>\n\n<pre><code>fn reset(how: &amp;u32) {\n    println!(\"Reset {} times\", how);\n}\n\nstruct Homura;\n\nimpl Deref for Homura {\n    type Target = u32;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;42\n    }\n}\n\nreset(&amp;Homura);\n</code></pre>\n\n<p>But when I wrap the expression in a block, it no longer compiles:</p>\n\n<pre><code>reset(&amp;{ Homura });\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:17:14\n   |\n17 |     reset(&amp;{ Homura });\n   |              ^^^^^^ expected u32, found struct `main::Homura`\n   |\n   = note: expected type `u32`\n              found type `main::Homura`\n</code></pre>\n\n<p>The weird thing is that the equivalent expression with <code>&amp;str</code> compiles just fine:</p>\n\n<pre><code>save(&amp;{ Madoka });  // OK\n</code></pre>\n\n<p>Why does the first expression fail to compile, but the second succeed?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=19b7a96a8bcf4e4f9c21326e642026b7\" rel=\"noreferrer\">Playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1545608367, "post_id": 53907854, "comment_id": 94660554, "body": "never mind, it&#39;s because <code>T::bar()</code> is not a constant function so, array is not constant, so the array is construct at runtime. Maybe you can work around with the nightly feature of const function. Doesn&#39;t look like trait can have const function, <a href=\"https://github.com/rust-lang/rust/issues/24111\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/24111</a>"}, {"owner": {"reputation": 42460, "user_id": 642626, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/fedc5e6b7fef29a8b539e20da8c85971?s=128&d=identicon&r=PG", "display_name": "Bryan Chen", "link": "https://stackoverflow.com/users/642626/bryan-chen"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545608772, "post_id": 53907854, "comment_id": 94660613, "body": "@Stargateur I see your point. The array of <code>Test::foo</code> only contains constants so it is possible to take a static lifetime reference from it. But for <code>Test2:foo</code> it have to evaluate some non-const expression which make the array non const and therefore cannot be taken static lifetime reference from it. Is this right?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545609014, "post_id": 53907854, "comment_id": 94660648, "body": "that what I think yes, maybe wait some other opinion because I&#39;m not a rust expert yet ;)"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1545612051, "post_id": 53907854, "comment_id": 94661057, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/49581900/how-do-i-set-the-return-values-lifetime\">How do I set the return value&#39;s lifetime?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 42460, "user_id": 642626, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/fedc5e6b7fef29a8b539e20da8c85971?s=128&d=identicon&r=PG", "display_name": "Bryan Chen", "link": "https://stackoverflow.com/users/642626/bryan-chen"}, "edited": false, "score": 0, "creation_date": 1545613502, "post_id": 53908229, "comment_id": 94661260, "body": "Thanks for answering. But unfortunately your example doesn&#39;t help much. I know how to make something compiles. But I want to know if it is possible for the current Rust compiler to support my use cases. (i.e. return static reference of an array that contains a result from some method call)"}, {"owner": {"reputation": 42460, "user_id": 642626, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/fedc5e6b7fef29a8b539e20da8c85971?s=128&d=identicon&r=PG", "display_name": "Bryan Chen", "link": "https://stackoverflow.com/users/642626/bryan-chen"}, "edited": false, "score": 0, "creation_date": 1545613722, "post_id": 53908229, "comment_id": 94661284, "body": "Also I don&#39;t see why make a generic lifetime parameter helps at all. All I needs to support is <code>&#39;static</code>."}, {"owner": {"reputation": 1254, "user_id": 1207060, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/77a4c7259fa080dc084138c7198b1e3e?s=128&d=identicon&r=PG", "display_name": "cfs", "link": "https://stackoverflow.com/users/1207060/cfs"}, "reply_to_user": {"reputation": 42460, "user_id": 642626, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/fedc5e6b7fef29a8b539e20da8c85971?s=128&d=identicon&r=PG", "display_name": "Bryan Chen", "link": "https://stackoverflow.com/users/642626/bryan-chen"}, "edited": false, "score": 0, "creation_date": 1545614032, "post_id": 53908229, "comment_id": 94661316, "body": "Const functions is soon landing in rust, but I don&#39;t think that will make a difference here (if I understand your question correctly). The problem is that the array you create only lives to the end of that function (that memory is freed at that point), even if the array contains static data. So you need to make a static array, and that has to be a constant. The generic lifetimes doesn&#39;t help, but in this case declaring them as static don&#39;t make any sense either so it was just to seperate the &#39;statics that served a purpose from those that just as well could be a generic parameter."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 42460, "user_id": 642626, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/fedc5e6b7fef29a8b539e20da8c85971?s=128&d=identicon&r=PG", "display_name": "Bryan Chen", "link": "https://stackoverflow.com/users/642626/bryan-chen"}, "edited": false, "score": 0, "creation_date": 1545614421, "post_id": 53908229, "comment_id": 94661375, "body": "@BryanChen <a href=\"https://play.integer32.com/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=d8f51d333a06969bbad224e7d9f1ed1d\" rel=\"nofollow noreferrer\">one solution</a> could be this at the moment but as you didn&#39;t provide why you want this it&#39;s hard to me to guess what you need."}, {"owner": {"reputation": 1254, "user_id": 1207060, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/77a4c7259fa080dc084138c7198b1e3e?s=128&d=identicon&r=PG", "display_name": "cfs", "link": "https://stackoverflow.com/users/1207060/cfs"}, "edited": false, "score": 0, "creation_date": 1545614649, "post_id": 53908229, "comment_id": 94661412, "body": "Maybe it&#39;s me misunderstanding the question, and if so I&#39;m sorry, but the method call you want to have as static needs to be known at compile time (which it is here since you only store static strings) but you will still need to declare it as a const... If you look here at const functions, maybe that&#39;s what you&#39;re looking for (still have to be a constant though): <a href=\"https://github.com/rust-lang-nursery/reference/blob/3a7b6d863183079d46d92313df7875e22801de8d/src/items/functions.md#const-functions\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/reference/blob/&hellip;</a>"}, {"owner": {"reputation": 42460, "user_id": 642626, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/fedc5e6b7fef29a8b539e20da8c85971?s=128&d=identicon&r=PG", "display_name": "Bryan Chen", "link": "https://stackoverflow.com/users/642626/bryan-chen"}, "edited": false, "score": 0, "creation_date": 1545614838, "post_id": 53908229, "comment_id": 94661436, "body": "What I really need are 1) have <code>T::bar()</code> return a constant, 2) have <code>Test:foo</code> return an array constant, that is constructed from <code>T::bar()</code> and <code>U::bar()</code> and <code>U</code>, <code>T</code> are generic parameter to <code>Test</code>. I have tried static variable solution and it doesn&#39;t work with generic type"}, {"owner": {"reputation": 1254, "user_id": 1207060, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/77a4c7259fa080dc084138c7198b1e3e?s=128&d=identicon&r=PG", "display_name": "cfs", "link": "https://stackoverflow.com/users/1207060/cfs"}, "edited": false, "score": 0, "creation_date": 1545615850, "post_id": 53908229, "comment_id": 94661571, "body": "I haven&#39;t tried it for your case but if that&#39;s not working either I don&#39;t think your exact problem is so easy to solve the way you want it to right now without changing the design somewhat. Maybe someone else has a solution that I haven&#39;t thought of."}, {"owner": {"reputation": 42460, "user_id": 642626, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/fedc5e6b7fef29a8b539e20da8c85971?s=128&d=identicon&r=PG", "display_name": "Bryan Chen", "link": "https://stackoverflow.com/users/642626/bryan-chen"}, "edited": false, "score": 0, "creation_date": 1545615860, "post_id": 53908229, "comment_id": 94661573, "body": "I can&#39;t figure out how to make <code>lazy_static</code> works with generic. I don&#39;t just have one static variable, I will like to have one per type implements <code>Foo</code> trait."}, {"owner": {"reputation": 42460, "user_id": 642626, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/fedc5e6b7fef29a8b539e20da8c85971?s=128&d=identicon&r=PG", "display_name": "Bryan Chen", "link": "https://stackoverflow.com/users/642626/bryan-chen"}, "edited": false, "score": 0, "creation_date": 1545615938, "post_id": 53908229, "comment_id": 94661583, "body": "If I can&#39;t make this work, I can always adjust the design to workaround it. Thanks for your help anyway."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545662416, "post_id": 53908229, "comment_id": 94672677, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=50f5ed4ff8c83bb041ab6fe0e0a86400\" rel=\"nofollow noreferrer\">Your basic premise about ways to create static data is incorrect</a>"}, {"owner": {"reputation": 1254, "user_id": 1207060, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/77a4c7259fa080dc084138c7198b1e3e?s=128&d=identicon&r=PG", "display_name": "cfs", "link": "https://stackoverflow.com/users/1207060/cfs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545753521, "post_id": 53908229, "comment_id": 94689261, "body": "@Shepmaster. Thanks for feedback, but can you elaborate where the premise is wrong? My main point was that a lifetime for a non-str type doesn&#39;t change if you declare them as &#39;static. It has no meaning other than telling the compiler you intend for it to live the full lifetime of the program, but the compiler will still stop you if you don&#39;t actually live up to your intentions and declare the variable as a const or static variable..."}, {"owner": {"reputation": 1254, "user_id": 1207060, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/77a4c7259fa080dc084138c7198b1e3e?s=128&d=identicon&r=PG", "display_name": "cfs", "link": "https://stackoverflow.com/users/1207060/cfs"}, "edited": false, "score": 0, "creation_date": 1545753528, "post_id": 53908229, "comment_id": 94689264, "body": "I changed the example to not use primitives and add a scope where a &quot;static&quot; lifetime should outlive the scope: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a3576b29d4f4c4846cf6216c224a081d\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 1254, "user_id": 1207060, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/77a4c7259fa080dc084138c7198b1e3e?s=128&d=identicon&r=PG", "display_name": "cfs", "link": "https://stackoverflow.com/users/1207060/cfs"}, "is_accepted": false, "score": 0, "last_activity_date": 1545662476, "last_edit_date": 1545662476, "creation_date": 1545611842, "answer_id": 53908229, "question_id": 53907854, "link": "https://stackoverflow.com/questions/53907854/cannot-return-a-static-reference-to-a-temporary-array-even-when-the-array-contai/53908229#53908229", "title": "Cannot return a static reference to a temporary array even when the array contains a value that also has the static lifetime", "body": "<p>I think you're thinking about lifetimes the wrong way. It seems like you use them to \"declare\" how long you want it to live, but you can't change the lifetime of a reference. All the lifetime specifiers do is to help the compiler to understand the lifetime in cases where it doesn't have the information to elide it.</p>\n\n<p><a href=\"https://doc.rust-lang.org/rust-by-example/scope/lifetime/static_lifetime.html\" rel=\"nofollow noreferrer\">Chapter 15.4.7 Static from Rust by Example</a> should help you out.</p>\n\n<p>Basically, there are only two ways you can create <code>'static</code> data:</p>\n\n<ol>\n<li>Make a constant with the <code>static</code> declaration.</li>\n<li>Make a string literal which has type: <code>&amp;'static str</code>.</li>\n</ol>\n\n<p>You could achieve the same as above by declaring lifetimes specifiers like you normally do in Rust (but the compiler suggested a <code>'static</code> lifetime since you hadn't declared any lifetimes yourself). See below.</p>\n\n<p>The main point is that, with the exception of <code>&amp;'static str</code>, a lifetime can never be changed by annotating lifetimes in your functions. When you write <code>&amp;[T::bar()]</code>, the array is not a constant and will get dropped when you leave the scope if your function. If you want it to live with a <code>'static</code> lifetime, you need to make it a constant like I show below.</p>\n\n<p>Now that's probably not exactly what you wanted to do but it will compile and I hope explain the difference:</p>\n\n<pre><code>const ARR: &amp;'static [&amp;'static StructType] = &amp;[&amp;StructType { a: \"asdf\" }];\n\npub struct StructType {\n    a: &amp;'static str,\n}\n\npub trait Foo&lt;'a&gt; {\n    fn foo() -&gt; &amp;'a [&amp;'a StructType];\n    fn bar() -&gt; &amp;'a StructType;\n}\n\npub struct Test;\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; for Test {\n    fn foo() -&gt; &amp;'a [&amp;'a StructType] {\n        &amp;[&amp;StructType { a: \"asdf\" }]\n    }\n\n    fn bar() -&gt; &amp;'a StructType {\n        &amp;StructType { a: \"asdf\" }\n    }\n}\n\npub struct Test2&lt;T: Foo&lt;'static&gt;&gt;(T);\n\nimpl&lt;T: Foo&lt;'static&gt;&gt; Test2&lt;T&gt; {\n    pub fn foo() -&gt; &amp;'static [&amp;'static StructType] {\n        ARR\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1545669019, "last_edit_date": 1545669019, "creation_date": 1545662799, "answer_id": 53914844, "question_id": 53907854, "link": "https://stackoverflow.com/questions/53907854/cannot-return-a-static-reference-to-a-temporary-array-even-when-the-array-contai/53914844#53914844", "title": "Cannot return a static reference to a temporary array even when the array contains a value that also has the static lifetime", "body": "<p>The <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1414-rvalue_static_promotion.md\" rel=\"nofollow noreferrer\">RFC that added the automatic promotion of references to values to <code>'static</code></a> states:</p>\n\n<blockquote>\n  <p>Promote constexpr rvalues to values in static memory instead of stack slots, and expose those in the language by being able to directly create 'static references to them.</p>\n</blockquote>\n\n<p>Literal values are the most obvious constant expressions. However, a function call is <em>not</em> constant unless explicitly marked as such using <code>const</code>. However, as of Rust 1.31, the types of operations that are available in a user-defined <code>const</code> function are fairly limited. Literal values are allowed:</p>\n\n<pre><code>const fn bar() -&gt; &amp;'static StructType {\n    &amp;StructType(\"asdf\")\n}\n\nconst fn combo() -&gt; &amp;'static [&amp;'static StructType; 1] {\n    &amp;[Self::bar()]\n}\n</code></pre>\n\n<p>Converting from a reference to an array to a slice is <em>not</em> allowed in a <code>const</code> function yet, so that needs to be in a different function:</p>\n\n<pre><code>fn wombo() -&gt; &amp;'static [&amp;'static StructType] {\n    Self::combo()\n}\n</code></pre>\n\n<p>Additionally, you cannot define <code>const</code> functions in a trait.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/50345139/155423\">Why can I return a reference to a local literal but not a variable?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47662253/155423\">Why is it legal to borrow a temporary?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32551177/155423\">&quot;Expected type parameter&quot; error in the constructor of a generic struct</a></li>\n</ul>\n\n<blockquote>\n  <p>What I really need are 1) have <code>T::bar()</code> return a constant, 2) have <code>Test:foo</code> return an array constant, that is constructed from <code>T::bar()</code> and <code>U::bar()</code> and <code>U</code>, <code>T</code> are generic parameter to <code>Test</code></p>\n</blockquote>\n\n<p>You cannot do this</p>\n\n<pre><code>fn example&lt;T&gt;() {\n    static NO_CAN_DO: T = unimplemented!();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0401]: can't use type parameters from outer function\n --&gt; src/lib.rs:2:23\n  |\n1 | fn example&lt;T&gt;() {\n  |    ------- - type variable from outer function\n  |    |\n  |    try adding a local type parameter in this method instead\n2 |     static NO_CAN_DO: T = unimplemented!();\n  |                       ^ use of type variable from outer function\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/45892973/155423\">Is it possible for different instances of a generic function to have different static variables?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47967549/155423\">What is the rationale for not being able to use the outer type parameter within an inner function?</a></li>\n</ul>\n"}], "owner": {"reputation": 42460, "user_id": 642626, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/fedc5e6b7fef29a8b539e20da8c85971?s=128&d=identicon&r=PG", "display_name": "Bryan Chen", "link": "https://stackoverflow.com/users/642626/bryan-chen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1040, "favorite_count": 0, "accepted_answer_id": 53914844, "answer_count": 2, "score": 2, "last_activity_date": 1545669019, "creation_date": 1545606659, "last_edit_date": 1545662968, "question_id": 53907854, "link": "https://stackoverflow.com/questions/53907854/cannot-return-a-static-reference-to-a-temporary-array-even-when-the-array-contai", "title": "Cannot return a static reference to a temporary array even when the array contains a value that also has the static lifetime", "body": "<p>The value returned from <code>T::bar</code> has the <code>'static</code> lifetime, so <code>Test2::foo</code> scope doesn't need to own anything. Returning <code>&amp;[T::bar()]</code> as <code>&amp;'static [&amp;'static StructType]</code> should be safe? <code>Test:foo</code> compiles without issue so I was expecting <code>Test2::foo</code> to compile as well.</p>\n\n<p>Code</p>\n\n<pre><code>pub struct StructType {\n    a: &amp;'static str,\n}\n\npub trait Foo {\n    fn foo() -&gt; &amp;'static [&amp;'static StructType];\n    fn bar() -&gt; &amp;'static StructType;\n}\n\npub struct Test;\n\nimpl Foo for Test {\n    fn foo() -&gt; &amp;'static [&amp;'static StructType] {\n        &amp;[&amp;StructType { a: \"asdf\" }]\n    }\n\n    fn bar() -&gt; &amp;'static StructType {\n        &amp;StructType { a: \"asdf\" }\n    }\n}\n\npub struct Test2&lt;T: Foo&gt;(T);\n\nimpl&lt;T: Foo&gt; Test2&lt;T&gt; {\n    pub fn foo() -&gt; &amp;'static [&amp;'static StructType] {\n        &amp;[T::bar()]\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8302df38385b63a75d18ad9d5baca4f6\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return reference to temporary value\n  --&gt; src/lib.rs:26:9\n   |\n26 |         &amp;[T::bar()]\n   |         ^----------\n   |         ||\n   |         |temporary value created here\n   |         returns a reference to data owned by the current function\n</code></pre>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1545585294, "post_id": 53905472, "comment_id": 94655731, "body": "1) Did you mean <code>.lock().unwrap()</code>? 2) How are <code>V</code> and <code>T</code> related, why are you trying to assign a <code>V</code> where a <code>T</code> would be expected? In your first example, both <code>T</code> and <code>V</code> seem to be the same type <code>f64</code>."}, {"owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1545585486, "post_id": 53905472, "comment_id": 94655771, "body": "1) yes - fixed 2) In this case yes, but in my real code, V is not the underlying type"}], "answers": [{"tags": [], "owner": {"reputation": 20334, "user_id": 78667, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b13a3e168d85c7f7f45ae1e54dc9db57?s=128&d=identicon&r=PG", "display_name": "Arkaitz Jimenez", "link": "https://stackoverflow.com/users/78667/arkaitz-jimenez"}, "is_accepted": true, "score": 1, "last_activity_date": 1545663316, "last_edit_date": 1545663316, "creation_date": 1545585254, "answer_id": 53905594, "question_id": 53905472, "link": "https://stackoverflow.com/questions/53905472/how-to-define-a-generic-function-that-takes-a-mutext/53905594#53905594", "title": "How to define a generic function that takes a Mutex&lt;T&gt;?", "body": "<p>You don't need as many parameters, just use <code>Mutex&lt;T&gt;</code> and <code>T</code> for parameters. I presume you will need to receive a reference and not a value since you are not returning anything. This should work:</p>\n\n<pre><code>use std::sync::Mutex;\n\nfn bar() {\n    let a = Mutex::new(1.0);\n    let mut b = a.lock().unwrap();\n    *b = 2.0;\n    foo(&amp;a, 3.0);\n}\n\nfn foo&lt;T&gt;(lockable_param: &amp;Mutex&lt;T&gt;, value: T) {\n    let mut lock = lockable_param.lock().unwrap();\n    *lock = value;\n}\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 53905594, "answer_count": 1, "score": 1, "last_activity_date": 1545663390, "creation_date": 1545584502, "last_edit_date": 1545663273, "question_id": 53905472, "link": "https://stackoverflow.com/questions/53905472/how-to-define-a-generic-function-that-takes-a-mutext", "title": "How to define a generic function that takes a Mutex&lt;T&gt;?", "body": "<p>This simple function locks a <code>f64</code> and updates the value</p>\n\n<pre><code>use std::sync::Mutex;\n\nfn bar() {\n    let a = Mutex::new(1.0);\n    let mut b = a.lock().unwrap();\n    *b = 2.0;\n    foo(a, 3.0);\n}\n</code></pre>\n\n<p>I would like to encapsulate the behaviour into a function but I cannot figure out how to specify the <code>where</code> clause for T</p>\n\n<pre><code>fn foo&lt;T, V&gt;(lockable_param: T, value: V)\n// where\n//    T: Mutex??,\n{\n    let mut lock = lockable_param.lock().unwrap();\n    *lock = value;\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545671016, "post_id": 53905328, "comment_id": 94674924, "body": "To add, I think I could have included <i>no</i> code snippet at all, and this would have been a high enough quality question. The code snippet was just to illustrate one possible approach that I know doesn&#39;t work as well as an explanation as to why it doesn&#39;t work. The question is what approach would work."}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545671089, "post_id": 53905328, "comment_id": 94674941, "body": "I understand that, but I&#39;m confused about why you&#39;d need to compile it to answer the question. I don&#39;t want to fix the code snippet: I want to find a code snippet that works. The code snippet is fundamentally flawed from top to bottom."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545671090, "post_id": 53905328, "comment_id": 94674944, "body": "<i>included no code snippet at all</i> \u2014 such a question might be on topic perhaps, but people also tend to look unfavorably on questions without any attempt to solve it, so such a question might be downvoted."}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545671158, "post_id": 53905328, "comment_id": 94674968, "body": "Yep, that&#39;s exactly why I included a snippet in the first place. I wanted to show that I&#39;d tried something, and what I&#39;d tried, and why it didn&#39;t work. Potential answers don&#39;t really need to consider what was wrong with the approach, especially when the question clearly states why it doesn&#39;t work."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1545672856, "last_edit_date": 1545672856, "creation_date": 1545672369, "answer_id": 53916234, "question_id": 53905328, "link": "https://stackoverflow.com/questions/53905328/how-to-close-a-modified-and-executing-futuressyncmpscreceiver-stream/53916234#53916234", "title": "How to close a modified and executing `futures::sync::mpsc::Receiver` stream?", "body": "<p>You can use a crate like <a href=\"https://crates.io/crates/stream-cancel\" rel=\"nofollow noreferrer\">stream-cancel</a> to achieve this. Here, I've used the <a href=\"https://docs.rs/stream-cancel/0.4.4/stream_cancel/struct.Valved.html\" rel=\"nofollow noreferrer\"><code>Valved</code></a> stream wrapper which takes an existing stream and returns a value you can use to cancel the stream later on:</p>\n\n<pre><code>use futures::{\n    future::lazy,\n    {Future, Sink, Stream},\n}; // 0.1.25\nuse stream_cancel::Valved; // 0.4.4\nuse tokio::timer::{Delay, Interval}; // 0.1.13\n\nfn main() {\n    tokio::run(lazy(|| {\n        let (tx, rx) = futures::sync::mpsc::channel(1000);\n        let (trigger, rx) = Valved::new(rx);\n\n        tokio::spawn({\n            rx.for_each(|num| {\n                println!(\"{}\", num);\n                Ok(())\n            })\n        });\n\n        tokio::spawn({\n            Delay::new(std::time::Instant::now() + std::time::Duration::from_secs(1))\n                .map_err(|e| eprintln!(\"Some delay err {:?}\", e))\n                .map(move |_| trigger.cancel()),\n        });\n\n        tokio::spawn({\n            Interval::new_interval(std::time::Duration::from_millis(10))\n                .take(10)\n                .map_err(|e| eprintln!(\"Interval error?! {:?}\", e))\n                .fold((tx, 0), |(tx, i), _| {\n                    tx.send(i)\n                        .map_err(|e| eprintln!(\"Send error?! {:?}\", e))\n                        .map(move |tx| (tx, i + 1))\n                })\n                .map(|_| ()),\n        });\n\n        Ok(())\n    }));\n}\n</code></pre>\n\n<p>The crate has other types suited for subtly different usecases, be sure to check out the documentation.</p>\n\n<p>See <a href=\"https://stackoverflow.com/a/53916268/155423\">S\u00e9bastien Renauld's answer</a> for one way of implementing this yourself.</p>\n"}, {"comments": [{"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545674088, "post_id": 53916268, "comment_id": 94675640, "body": "The <code>.take_until</code> approach is interesting. In the meantime, I&#39;ve implemented a similar approach that actually drops the <code>tx</code> and checks whether the <code>tx</code> has been dropped inside the <code>fold</code> (this makes more sense given the code I&#39;m actually writing outside of the scope of the question). I was really hoping to achieve this from the <code>Receiver</code> side however, rather than from the <code>Sender</code> side. This is because my <code>Sender</code>s are organized in a structure, while my <code>Receiver</code>s are given to the client which will treat them as &quot;special&quot;."}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545674142, "post_id": 53916268, "comment_id": 94675660, "body": "As such, as a direct answer to the question, I think the <code>stream-cancel</code> library is more suitable -- it allows me to do exactly what I want to do. I will need to benchmark, however, as I want to make sure it&#39;s not going to harm the performance of the nominal flow."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545674186, "post_id": 53916268, "comment_id": 94675672, "body": "The <code>return</code> in the <code>take_while</code> is non-idiomatic."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545674670, "post_id": 53916268, "comment_id": 94675786, "body": "@RiverTam the clue was in the name: <code>mpsc</code> - multiple producers, single consumer. You could <i>also</i> send your receiver into a fan-out structure (I&#39;ve had to write my own on this once after trying to adapt <code>spmc</code>. Not sure if there is a crate fully satisfying your need) and start/stop consumers as a result.  The <code>take_while()</code> explicitely does what <code>stream-cancel</code> does under the hood. The <a href=\"https://github.com/jonhoo/stream-cancel/blob/master/src/wrapper.rs#L25\" rel=\"nofollow noreferrer\">source</a> of it uses virtually the same construct :-)"}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545674792, "post_id": 53916268, "comment_id": 94675810, "body": "@S&#233;bastienRenauld Yes, before trying all of this I was looking into mpmc or spmc solutions, but I found nothing that worked exactly how I wanted, so I ended up going with my own solution. <code>multiqueue</code> does what I want, but it has a bug in it (<a href=\"https://stackoverflow.com/questions/53711246/tokio-with-multiqueue-sometimes-hangs-sometimes-works\" title=\"tokio with multiqueue sometimes hangs sometimes works\">stackoverflow.com/questions/53711246/&hellip;</a>). Crossbeam channels also offer a broadcast I think, but they don&#39;t work with tokio as far as I could tell."}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545674889, "post_id": 53916268, "comment_id": 94675838, "body": "The <code>take_while</code> solution would make a lot of sense if the <code>tx</code> weren&#39;t in a structure. It&#39;s clearly a correct approach for the situation posed in the question, but it happens to be the wrong solution for me. Wrapping the <code>rx</code> with the canceler happens to be what I want. I&#39;m still testing though, so I may have to keep my  more explicit approach."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545675990, "post_id": 53916268, "comment_id": 94676113, "body": "@RiverTam if none of the crates suit you (I know none of them did for the project I was on a year ago - had a similar problem), you could roll your own. I&#39;ll jot down an example for you"}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545676228, "post_id": 53916268, "comment_id": 94676176, "body": "@S&#233;bastienRenauld that would be awesome. I think it&#39;s high time Rust/tokio had something like this. I think it would be excellent as well for those of us coming from JS who love the event emitter/observable pattern (as that&#39;s really what a broadcaster is). I&#39;ve been considering publishing the work I&#39;m doing as its own crate. As of yesterday, it was benchmarking at nearly as efficient as just doing the work synchronously in the interval."}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545676716, "post_id": 53916268, "comment_id": 94676301, "body": "I&#39;m marking this as the correct answer simply because it offers both options, but I could see arguments for both or neither being correct (neither meaning the correct answer is &quot;there&#39;s no way to do this&quot;, as neither addresses the problem head-on, though <code>stream-cancel</code> gets very close). Someone please let me know if this is not proper SO etiquette. As for my problem in particular, <code>FnBox</code> will make the <code>stream-cancel</code> approach more viable, but we&#39;re on stable and an approach very similar to the manual approach works well enough and benchmarks very well."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545679196, "post_id": 53916268, "comment_id": 94676885, "body": "@RiverTam edited my answer with a 15-minute effort into making a fan-out stream with a single flow control element"}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1545680280, "post_id": 53916268, "comment_id": 94677126, "body": "@S&#233;bastienRenauld Nice! It looks good. Thanks for the taking the time. =)"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1545679167, "last_edit_date": 1545679167, "creation_date": 1545672662, "answer_id": 53916268, "question_id": 53905328, "link": "https://stackoverflow.com/questions/53905328/how-to-close-a-modified-and-executing-futuressyncmpscreceiver-stream/53916268#53916268", "title": "How to close a modified and executing `futures::sync::mpsc::Receiver` stream?", "body": "<p>Not going to lie, I'm with @shepmaster on this one, your question is pretty unclear. That said, it <em>feels</em> like you're trying to do something the <code>mpsc</code> part of <code>futures</code> isn't geared to do.</p>\n\n<p>Anyway. Explanation time.</p>\n\n<p>Whenever you combine/compose streams (or futures!), every single composition method takes <code>self</code>, not <code>&amp;self</code> or <code>&amp;mut self</code> as I think you might have hoped.</p>\n\n<p>The moment you get to this code block of yours:</p>\n\n<pre><code>    {\n        let mut maybe_stream = arc.lock().unwrap();\n        let stream = maybe_stream.take().expect(\"Stream already ripped out\"); // line \"B\"\n\n        let rx = stream.for_each(|_| Ok(()));\n        tokio::spawn(rx);\n    }\n</code></pre>\n\n<p>...The stream is extracted from the <code>Arc&lt;Option&lt;Receiver&lt;T&gt;&gt;&gt;</code> when you <code>take()</code> it, and the content of it is replaced by <code>None</code>. You then spawn it on the Tokio reactor, which starts processing this part. This <code>rx</code> is now on the loop, and no longer available to you. Additionally, your <code>maybe_stream</code> now contains <code>None</code>.</p>\n\n<p>After a delay, you then try to <code>take()</code> the content of the <code>Arc&lt;Option&lt;Receiver&lt;T&gt;&gt;&gt;</code> (line A). Since there's now nothing left, you're left with nothing, and therefore there is nothing left to close. Your code errors out.</p>\n\n<p>Instead of passing around a <code>mpsc::Receiver</code> and hoping to destroy it, use a mechanism to stop the stream itself. You can do so yourself or you can use a crate like <code>stream-cancel</code> to do so for you.</p>\n\n<p>The DIY version is here, modified from your code:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio;\n\nuse futures::future::lazy;\nuse futures::{future, Future, Sink, Stream};\nuse std::sync::{Arc, RwLock};\nuse std::sync::atomic::{Ordering, AtomicBool};\nuse tokio::timer::{Delay, Interval};\n\nfn main() {\n    tokio::run(lazy(|| {\n        let (tx, rx) = futures::sync::mpsc::channel(1000);\n\n        let circuit_breaker:Arc&lt;AtomicBool&gt; = Arc::new(AtomicBool::new(false));\n        let c_b_copy = Arc::clone(&amp;circuit_breaker);\n        tokio::spawn(\n            Delay::new(std::time::Instant::now() + std::time::Duration::from_secs(1))\n                .map_err(|e| eprintln!(\"Some delay err {:?}\", e))\n                .and_then(move |_| {\n                    // We set the CB to true in order to stop processing of the stream\n                    circuit_breaker.store(true, Ordering::Relaxed);\n                    Ok(())\n                }),\n        );\n\n        {\n            let rx2 = rx.for_each(|e| {\n                println!(\"{:?}\", e);\n                Ok(())\n            });\n            tokio::spawn(rx2);\n        }\n\n        tokio::spawn(\n            Interval::new_interval(std::time::Duration::from_millis(100))\n                .take(100)\n                // take_while causes the stream to continue as long as its argument returns a future resolving to true.\n                // In this case, we're checking every time if the circuit-breaker we've introduced is false\n                .take_while(move |_| {\n                    future::ok(\n                        c_b_copy.load(Ordering::Relaxed) == false\n                    );\n                })\n                .map_err(|e| {\n                    eprintln!(\"Interval error?! {:?}\", e);\n                })\n                .fold((tx, 0), |(tx, i), _| {\n                    tx.send(i as u32)\n                        .map_err(|e| eprintln!(\"Send error?! {:?}\", e))\n                        .map(move |tx| (tx, i + 1))\n                })\n                .map(|_| ()),\n        );\n\n        Ok(())\n    }));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ae97065c3d0f05377642d88e1e767950\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The added <code>take_while()</code> allows you to operate on either the stream's content, or an outside predicate, to continue or to stop a stream. Note that even though we're using an <code>AtomicBool</code>, we still need the <code>Arc</code> due to <code>'static</code> lifetime requirements from Tokio.</p>\n\n<h2>Reversing the flow</h2>\n\n<p>After some discussion in the comments, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dd352c443a1866492b605eca43d7fdaa\" rel=\"nofollow noreferrer\">this solution</a> may be more suited for your use case. I effectively implemented a fan-out stream covered by a circuit breaker. The magic happens here:</p>\n\n<pre><code>impl&lt;S&gt; Stream for FanOut&lt;S&gt; where S:Stream, S::Item:Clone {\n\n    type Item = S::Item;\n\n    type Error = S::Error;\n\n    fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Option&lt;S::Item&gt;&gt;, S::Error&gt; {\n        match self.inner.as_mut() {\n            Some(ref mut r) =&gt; {\n                let mut breaker = self.breaker.write().expect(\"Poisoned lock\");\n                match breaker.status {\n                    false =&gt; {\n                        let item = r.poll();\n                        match &amp;item {\n                            &amp;Ok(Async::Ready(Some(ref i))) =&gt; {\n                                breaker.registry.iter_mut().for_each(|sender| {\n                                    sender.try_send(i.clone()).expect(\"Dead channel\");\n                                });\n                                item\n                            },\n                            _ =&gt; item\n                        }\n                    },\n                    true =&gt; Ok(Async::Ready(None))\n                }\n            }\n            _ =&gt; {\n\n                let mut breaker = self.breaker.write().expect(\"Poisoned lock\");\n                // Stream is over, drop all the senders\n\n                breaker.registry = vec![];\n                Ok(Async::Ready(None))\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>If the status indicator is set to false, the above stream is polled; the result is then sent to all listeners. If the result of the <code>poll</code> is <code>Async::Ready(None)</code> (indicating that the stream is finished), all listener channels are closed.</p>\n\n<p>If the status indicator is set to true, all listener channels are closed, and the stream returns <code>Async::Ready(None)</code> (and is dropped from execution by Tokio).</p>\n\n<p>The <code>FanOut</code> object is cloneable, but only the initial instance will do anything.</p>\n"}], "owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 554, "favorite_count": 0, "accepted_answer_id": 53916268, "answer_count": 2, "score": 2, "last_activity_date": 1545679167, "creation_date": 1545583340, "last_edit_date": 1545671461, "question_id": 53905328, "link": "https://stackoverflow.com/questions/53905328/how-to-close-a-modified-and-executing-futuressyncmpscreceiver-stream", "title": "How to close a modified and executing `futures::sync::mpsc::Receiver` stream?", "body": "<p>I'd like to be able to do something along these lines in order to close a <code>Receiver</code> stream asynchronously:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio;\n\nuse futures::future::lazy;\nuse futures::stream::AndThen;\nuse futures::sync::mpsc::Receiver;\nuse futures::{Future, Sink, Stream};\nuse std::sync::{Arc, Mutex};\n\nuse tokio::timer::{Delay, Interval};\n\nfn main() {\n    tokio::run(lazy(|| {\n        let (tx, rx) = futures::sync::mpsc::channel(1000);\n\n        let arc = Arc::new(Mutex::&lt;Option&lt;AndThen&lt;Receiver&lt;u32&gt;, _, _&gt;&gt;&gt;::new(None));\n\n        {\n            let mut and_then = arc.lock().unwrap();\n            *and_then = Some(rx.and_then(|num| {\n                println!(\"{}\", num);\n                Ok(())\n            }));\n        }\n\n        let arc_clone = arc.clone();\n        // This is the part I'd like to be able to do\n        // After one second, close the `Receiver` so that future\n        // calls to the `Sender` don't call the callback above in the\n        // closure passed to `rx.and_then`\n        tokio::spawn(\n            Delay::new(std::time::Instant::now() + std::time::Duration::from_secs(1))\n                .map_err(|e| eprintln!(\"Some delay err {:?}\", e))\n                .and_then(move |_| {\n                    let mut maybe_stream = arc_clone.lock().unwrap();\n                    match maybe_stream.take() {\n                        Some(stream) =&gt; stream.into_inner().close(),\n                        None =&gt; eprintln!(\"Can't close non-existent stream\"), // line \"A\"\n                    }\n                    Ok(())\n                }),\n        );\n\n        {\n            let mut maybe_stream = arc.lock().unwrap();\n            let stream = maybe_stream.take().expect(\"Stream already ripped out\"); // line \"B\"\n\n            let rx = stream.for_each(|_| Ok(()));\n            tokio::spawn(rx);\n        }\n\n        tokio::spawn(\n            Interval::new_interval(std::time::Duration::from_millis(10))\n                .take(10)\n                .map_err(|e| {\n                    eprintln!(\"Interval error?! {:?}\", e);\n                })\n                .fold((tx, 0), |(tx, i), _| {\n                    tx.send(i as u32)\n                        .map_err(|e| eprintln!(\"Send error?! {:?}\", e))\n                        .map(move |tx| (tx, i + 1))\n                })\n                .map(|_| ()),\n        );\n\n        Ok(())\n    }));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f0f29de2d2065d081cc346cc31165c26\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>However, line A runs because I have to move the stream on line B in order to call <code>.for_each</code> on it. If I don't call <code>.for_each</code> (or something like it), I can't execute the <code>AndThen</code> at all, as far as I know. I can't call <code>.for_each</code> without actually moving the object because <code>for_each</code> is a moving method.</p>\n\n<p>Is it possible for me to do what I'm trying to do? This seems like it should definitely be possible, but maybe I'm missing something obvious.</p>\n\n<p>I'm using futures at 0.1 and tokio at 0.1.</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1545581824, "post_id": 53905118, "comment_id": 94654879, "body": "What are you comparing this with? That algorithm is quite inefficient, so it will never beat, say, the Sieve of Eratosthenes, even in an interpreted language."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1545581847, "post_id": 53905118, "comment_id": 94654890, "body": "It gets slower as it goes along because you are calling <code>is_prime</code> (which has O(n) complexity) with higher and higher inputs."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1545583202, "post_id": 53905118, "comment_id": 94655203, "body": "Imho, you can not get it faster with this is_prime algorithm. Maybe you can look for better prime number checking algorithm or consider an external crate for this purpose"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1545587500, "post_id": 53905676, "comment_id": 94656233, "body": "I don&#39;t think there exist a know algorithm that could be called &quot;efficient&quot; for searching prime number, also this is a good thing because that would be the end of internet ;)"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545593048, "post_id": 53905676, "comment_id": 94657498, "body": "Haha you are right, but at least we can find a better solution then O(n) right :)"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 1, "last_activity_date": 1545586072, "creation_date": 1545586072, "answer_id": 53905676, "question_id": 53905118, "link": "https://stackoverflow.com/questions/53905118/what-part-of-my-code-to-filter-prime-numbers-causes-it-to-slow-down-as-it-proces/53905676#53905676", "title": "What part of my code to filter prime numbers causes it to slow down as it processes?", "body": "<p>The function which is slowing the execution is:</p>\n\n<pre><code>is_prime(i: i32) \n</code></pre>\n\n<p>You may consider to use more efficient crate like <a href=\"https://docs.rs/primes/0.2.3/primes/\" rel=\"nofollow noreferrer\">primes</a> or you can check efficient prime number checking algorithms <a href=\"https://stackoverflow.com/questions/1801391/what-is-the-best-algorithm-for-checking-if-a-number-is-prime\">here</a></p>\n"}], "owner": {"reputation": 24484, "user_id": 1600821, "user_type": "registered", "accept_rate": 99, "profile_image": "https://i.stack.imgur.com/05jSW.png?s=128&g=1", "display_name": "cantdutchthis", "link": "https://stackoverflow.com/users/1600821/cantdutchthis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 53905676, "answer_count": 1, "score": -3, "last_activity_date": 1545663134, "creation_date": 1545581340, "last_edit_date": 1545663134, "question_id": 53905118, "link": "https://stackoverflow.com/questions/53905118/what-part-of-my-code-to-filter-prime-numbers-causes-it-to-slow-down-as-it-proces", "title": "What part of my code to filter prime numbers causes it to slow down as it processes?", "body": "<p>I am doing some problems on <a href=\"https://projecteuler.net/problem=10\" rel=\"nofollow noreferrer\">Project Euler</a>. This challenge requires filtering prime numbers from an array. I was halfway near my solution when I found out that Rust was a bit slow. I added a <a href=\"http://a8m.github.io/pb/doc/pbr/struct.ProgressBar.html\" rel=\"nofollow noreferrer\">progressbar</a> to check the progress.</p>\n\n<p>Here is the code: \n    extern crate pbr;</p>\n\n<pre><code>use self::pbr::ProgressBar;\n\npub fn is_prime(i: i32) -&gt; bool {\n    for d in 2..i {\n        if i % d == 0 {\n            return false;\n        }\n    }\n    true\n}\n\npub fn calc_sum_loop(max_num: i32) -&gt; i32 {\n    let mut pb = ProgressBar::new(max_num as u64);\n    pb.format(\"[=&gt;_]\");\n    let mut sum_primes = 0;\n    for i in 1..max_num {\n        if is_prime(i) {\n            sum_primes += i;\n        }\n        pb.inc();\n    }\n    sum_primes\n}\n\npub fn solve() {\n    println!(\"About to calculate sum of primes in the first 20000\");\n    println!(\"When using a forloop {:?}\", calc_sum_loop(400000));\n}\n</code></pre>\n\n<p>I am calling the <code>solve</code> function from my <code>main.rs</code> file. Turns out that the number of iterations in my for loop is a lot faster in the beginning and a lot slower later. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u279c  euler-rust git:(master) \u2717 cargo run --release\n    Finished release [optimized] target(s) in 0.05s\n     Running `target/release/euler-rust`\nAbout to calculate sum of primes..\n118661 / 400000 [===========&gt;__________________________] 29.67 % 48780.25/s 6s\n... \n...\n400000 / 400000 [=======================================]     100.00 % 23725.24/s\n</code></pre>\n\n<p>I am sort of drawing a blank in what might be causing this slowdown. It feels like Rust should be able to be much faster than what I am currently seeing. Note that I am telling Cargo to build with the <code>--release</code> flag. I am aware that not doing this might slow things down even further. </p>\n"}, {"tags": ["algorithm", "floating-point", "rust", "idioms"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1545568149, "post_id": 53903318, "comment_id": 94651877, "body": "<i>&quot;Where nets is a <code>&amp;Vec&lt;f32&gt;</code>. Which to me seems blatantly incorrect.&quot;</i> \u2014 Does that mean you think there is something wrong with <code>Vec</code> or that you have made a mistake?"}, {"owner": {"reputation": 3866, "user_id": 3364618, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9fbbb284e1a7ec696af1a7ddea4a4290?s=128&d=identicon&r=PG", "display_name": "Juxhin", "link": "https://stackoverflow.com/users/3364618/juxhin"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1545568426, "post_id": 53903318, "comment_id": 94651955, "body": "@PeterHall -- That I made a mistake. :-)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545664194, "post_id": 53903318, "comment_id": 94673192, "body": "See also <a href=\"https://stackoverflow.com/q/37127209/155423\">Using max_by_key on a vector of floats</a>; <a href=\"https://stackoverflow.com/q/28446632/155423\">How do I get the minimum or maximum value of an iterator containing floating point numbers?</a>; <a href=\"https://stackoverflow.com/q/28247990/155423\">How to do a binary search on a Vec of floats?</a>; <a href=\"https://stackoverflow.com/q/26489701/155423\">Why does Rust not implement total ordering via the Ord trait for f64 and f32?</a>; etc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545664239, "post_id": 53903318, "comment_id": 94673205, "body": "<i><code>nets</code> is a <code>&amp;Vec&lt;f32&gt;</code></i> \u2014 <a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>."}, {"owner": {"reputation": 3866, "user_id": 3364618, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9fbbb284e1a7ec696af1a7ddea4a4290?s=128&d=identicon&r=PG", "display_name": "Juxhin", "link": "https://stackoverflow.com/users/3364618/juxhin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545665671, "post_id": 53903318, "comment_id": 94673562, "body": "Thanks @Shepmaster!"}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1545569038, "post_id": 53903615, "comment_id": 94652081, "body": "You can find max value with single line by: <code>my_vec.iter().fold(0.0f32, |max, &amp;val| if val &gt; max{ val } else{ max });</code>, and unwrapping makes code unstable"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1545575946, "post_id": 53903615, "comment_id": 94653561, "body": "@&#214;mer Panicking when you get data you don&#39;t know how to deal with is usually preferable to proceeding with bad data, in my opinion. If NaN should be impossible, <code>unwrap</code> isn&#39;t the wrong way to deal with it"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1545577453, "post_id": 53903615, "comment_id": 94653865, "body": "@trentcl Thanks for pointing it out, i thought it could panic on empty vector then this code can be considered as neat and stable, with the assumption about NAN"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1545582260, "post_id": 53903615, "comment_id": 94654973, "body": "Oh, hmm. I misinterpreted the code a little. It does appear to panic on an empty Vec and I agree that it&#39;s an issue."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1545584179, "post_id": 53903615, "comment_id": 94655467, "body": "Yes, I wrote it as a pseudo-code and yes i assumed that calling index check after that the max value is existing in the vec and found in the vec. So, if you are going to call the check index in different code block then you need to check it&#39;s max value existency first"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 5, "last_activity_date": 1590659064, "last_edit_date": 1590659064, "creation_date": 1545567982, "answer_id": 53903615, "question_id": 53903318, "link": "https://stackoverflow.com/questions/53903318/what-is-the-idiomatic-way-to-get-the-index-of-a-maximum-or-minimum-floating-poin/53903615#53903615", "title": "What is the idiomatic way to get the index of a maximum or minimum floating point value in a slice or Vec in Rust?", "body": "<p>You can find the maximum value with the following:</p>\n\n<pre><code>let mut max_value = my_vec.iter().fold(0.0f32, |max, &amp;val| if val &gt; max{ val } else{ max });\n</code></pre>\n\n<p>After finding <code>max_value</code> you can track its position in the vector itself:</p>\n\n<pre><code>let index = my_vec.iter().position(|&amp;r| r == max_value).unwrap();\n</code></pre>\n\n<p>To get this result you need to iterate twice over the same vector. To improve the performance, you can return the index value with the max value as tuple in the <code>fold</code> iteration.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8842b835ce60bd8d6ee9966b728bd5bd\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 5, "last_activity_date": 1545574443, "last_edit_date": 1545574443, "creation_date": 1545568074, "answer_id": 53903623, "question_id": 53903318, "link": "https://stackoverflow.com/questions/53903318/what-is-the-idiomatic-way-to-get-the-index-of-a-maximum-or-minimum-floating-poin/53903623#53903623", "title": "What is the idiomatic way to get the index of a maximum or minimum floating point value in a slice or Vec in Rust?", "body": "<p>I will probably do something like this:</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let samples = vec![\n        0.28, 0.3102, 0.9856, 0.3679, 0.3697, 0.46, 0.4311, 0.9781, 0.9891, 0.5052, 0.9173, 0.932,\n        0.8365, 0.5822, 0.9981, 0.9977,\n    ];\n\n    // Use enumerate to get the index\n    let mut iter = samples.iter().enumerate();\n    // we get the first entry\n    let init = iter.next().ok_or(\"Need at least one input\")?;\n    // we process the rest\n    let result = iter.try_fold(init, |acc, x| {\n        // return None if x is NaN\n        let cmp = x.1.partial_cmp(acc.1)?;\n        // if x is greater the acc\n        let max = if let std::cmp::Ordering::Greater = cmp {\n            x\n        } else {\n            acc\n        };\n        Some(max)\n    });\n    println!(\"{:?}\", result);\n\n    Ok(())\n}\n</code></pre>\n\n<p>This could be implemented by adding a trait on Iterator with for example the function <code>try_max_by</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 3866, "user_id": 3364618, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9fbbb284e1a7ec696af1a7ddea4a4290?s=128&d=identicon&r=PG", "display_name": "Juxhin", "link": "https://stackoverflow.com/users/3364618/juxhin"}, "edited": false, "score": 0, "creation_date": 1545570139, "post_id": 53903797, "comment_id": 94652310, "body": "Thanks Peter, I was under that impression. Infact that&#39;s why I stated the assumption in the first line. However being as this is a port from a &lt;100-line Python script, I wanted to stick to std lib. Now everything is finally working. :-)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 3866, "user_id": 3364618, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9fbbb284e1a7ec696af1a7ddea4a4290?s=128&d=identicon&r=PG", "display_name": "Juxhin", "link": "https://stackoverflow.com/users/3364618/juxhin"}, "edited": false, "score": 2, "creation_date": 1545570617, "post_id": 53903797, "comment_id": 94652407, "body": "@Juxhin Please bear in mind that one of the design philosophies of the Rust standard library is to adopt new APIs slowly and to instead encourage functionality to emerge in the community. As such, you&#39;ll be hard pressed to find a Rust project that doesn&#39;t have external dependencies, and getting to know the popular crates is really a big part of being productive in Rust."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545577032, "post_id": 53903797, "comment_id": 94653780, "body": "without create a collection:     <code>let result = nets         .iter()         .cloned()         .map(NotNan::new)         .enumerate()         .filter_map(|(i, nan)| { let nan = nan.ok()?; Some((i, nan))})         .max_by(|a, b| a.1.cmp(&amp;b.1));</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545669420, "post_id": 53903797, "comment_id": 94674571, "body": "<code>.map(NotNan::new).filter_map(Result::ok)</code> -&gt; <code>.flat_map(NotNan::new)</code>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1545577064, "last_edit_date": 1545577064, "creation_date": 1545569922, "answer_id": 53903797, "question_id": 53903318, "link": "https://stackoverflow.com/questions/53903318/what-is-the-idiomatic-way-to-get-the-index-of-a-maximum-or-minimum-floating-poin/53903797#53903797", "title": "What is the idiomatic way to get the index of a maximum or minimum floating point value in a slice or Vec in Rust?", "body": "<p>The reason why this is tricky is because <code>f32</code> does not implement <code>Ord</code>. That is because <code>NaN</code> values prevent floating point numbers from forming a total order, which violates the contract of <code>Ord</code>.</p>\n\n<p>There are 3rd party crates that work around this by defining a numeric type wrapper which is not allowed to contain a <code>NaN</code>. One example is <a href=\"https://crates.io/crates/ordered-float\" rel=\"nofollow noreferrer\">ordered-float</a>. If you use this crate to first prepare the collection to contain <code>NotNan</code> values, then you can write code very close to your original idea:</p>\n\n<pre><code>use ordered_float::NotNan;\n\nlet non_nan_floats: Vec&lt;_&gt; = nets.iter()\n    .cloned()\n    .map(NotNan::new)       // Attempt to convert each f32 to a NotNan\n    .filter_map(Result::ok) // Unwrap the `NotNan`s and filter out the `NaN` values \n    .collect();\n\nlet max = non_nan_floats.iter().max().unwrap();\nlet index = non_nan_floats.iter().position(|element| element == max).unwrap();\n</code></pre>\n\n<p>Add this to <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nordered-float = \"1.0.1\"\n</code></pre>\n\n<hr>\n\n<p><strong>Bonus material</strong>: The type conversion can be made truly zero-cost (assuming you are <strong><em>really</em></strong> sure that there are no <code>NaN</code> values!), by taking advantage of the fact that <code>NotNan</code> has a transparent representation:</p>\n\n<pre><code>let non_nan_floats: Vec&lt;NotNan&lt;f32&gt;&gt; = unsafe { mem::transmute(nets) };\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545663821, "post_id": 53908709, "comment_id": 94673091, "body": "<a href=\"https://stackoverflow.com/a/50308360/155423\"><i>You should not use <code>partial_cmp(b).unwrap_or(Ordering::Equal)</code> because it provides unstable results when NaNs are present</i></a>. This OP specifically guarantees that there&#39;s no NaN, but answers are expected to warn people that don&#39;t pay attention."}, {"owner": {"reputation": 623, "user_id": 812374, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d9c05307a0428ff123ad971a39eba4b?s=128&d=identicon&r=PG", "display_name": "Emily", "link": "https://stackoverflow.com/users/812374/emily"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545663883, "post_id": 53908709, "comment_id": 94673111, "body": "But it was stated that NaNs weren&#39;t in the data set."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1545680819, "post_id": 53908709, "comment_id": 94677224, "body": "I would just <code>expect(&quot;You promised no NaNs!&quot;)</code> instead of <code>unwrap_or</code> to fit the OPs guarantee. Also, take a slice as the argument instead of a Vec."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1545790209, "post_id": 53908709, "comment_id": 94695159, "body": "I agree with @SebastianRedl, it&#39;s better to <code>expect</code> or even just <code>unwrap</code>. Even though the question was stated as assuming no <code>NaN</code>s, <i>if a <code>NaN</code> did occur</i> then this solution could give an incorrect answer (the position of a <code>NaN</code> value)."}], "tags": [], "owner": {"reputation": 623, "user_id": 812374, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d9c05307a0428ff123ad971a39eba4b?s=128&d=identicon&r=PG", "display_name": "Emily", "link": "https://stackoverflow.com/users/812374/emily"}, "is_accepted": false, "score": 12, "last_activity_date": 1545663769, "last_edit_date": 1545663769, "creation_date": 1545619545, "answer_id": 53908709, "question_id": 53903318, "link": "https://stackoverflow.com/questions/53903318/what-is-the-idiomatic-way-to-get-the-index-of-a-maximum-or-minimum-floating-poin/53908709#53908709", "title": "What is the idiomatic way to get the index of a maximum or minimum floating point value in a slice or Vec in Rust?", "body": "<p>Is there a reason why this wouldn't work? </p>\n\n<pre><code>use std::cmp::Ordering;\n\nfn example(nets: &amp;Vec&lt;f32&gt;) {\n    let index_of_max: Option&lt;usize&gt; = nets\n        .iter()\n        .enumerate()\n        .max_by(|(_, a), (_, b)| a.partial_cmp(b).unwrap_or(Ordering::Equal))\n        .map(|(index, _)| index);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3866, "user_id": 3364618, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9fbbb284e1a7ec696af1a7ddea4a4290?s=128&d=identicon&r=PG", "display_name": "Juxhin", "link": "https://stackoverflow.com/users/3364618/juxhin"}, "edited": false, "score": 0, "creation_date": 1607980269, "post_id": 65276164, "comment_id": 115437467, "body": "Welcome to the community. :-)"}], "tags": [], "owner": {"reputation": 31, "user_id": 14817967, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44ac4bbe088119fab70b375a6d29dec3?s=128&d=identicon&r=PG&f=1", "display_name": "litchipi", "link": "https://stackoverflow.com/users/14817967/litchipi"}, "is_accepted": false, "score": 3, "last_activity_date": 1607866055, "creation_date": 1607866055, "answer_id": 65276164, "question_id": 53903318, "link": "https://stackoverflow.com/questions/53903318/what-is-the-idiomatic-way-to-get-the-index-of-a-maximum-or-minimum-floating-poin/65276164#65276164", "title": "What is the idiomatic way to get the index of a maximum or minimum floating point value in a slice or Vec in Rust?", "body": "<p>I took the answer from @Akiner Alkan and tweaked it a bit, here's a simple one-liner without any unwrap, doing the job:</p>\n<pre><code>let maxi = my_vec.iter().enumerate().fold((0, 0.0), |max, (ind, &amp;val)| if val &gt; max.1 {(ind, val)} else {max});\n</code></pre>\n<p>(PS: new to rust and first post in StackOverflow, don't judge me if I do it wrong :D)</p>\n"}], "owner": {"reputation": 3866, "user_id": 3364618, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9fbbb284e1a7ec696af1a7ddea4a4290?s=128&d=identicon&r=PG", "display_name": "Juxhin", "link": "https://stackoverflow.com/users/3364618/juxhin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7500, "favorite_count": 0, "accepted_answer_id": 53903623, "answer_count": 5, "score": 7, "last_activity_date": 1607866055, "creation_date": 1545565368, "last_edit_date": 1545664080, "question_id": 53903318, "link": "https://stackoverflow.com/questions/53903318/what-is-the-idiomatic-way-to-get-the-index-of-a-maximum-or-minimum-floating-poin", "title": "What is the idiomatic way to get the index of a maximum or minimum floating point value in a slice or Vec in Rust?", "body": "<p><strong>Assumption</strong> -- The <code>Vec&lt;f32&gt;</code> does <strong>not</strong> have any <code>NaN</code> values or exhibit any <code>NaN</code> behavior.</p>\n\n<p>Take the following sample set:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0.28  \n0.3102\n0.9856\n0.3679\n0.3697\n0.46  \n0.4311\n0.9781\n0.9891\n0.5052\n0.9173\n0.932 \n0.8365\n0.5822\n0.9981\n0.9977\n</code></pre>\n\n<p>What is the neatest and most stable way to get the <strong>index</strong> of the highest value in the above list (values can be negative)? </p>\n\n<p>My initial attempts were along the following lines:</p>\n\n<pre><code>let _tmp = *nets.iter().max_by(|i, j| i.partial_cmp(j).unwrap()).unwrap();    \nlet _i = nets.iter().position(|&amp;element| element == _tmp).unwrap();\n</code></pre>\n\n<p>Where <code>nets</code> is a <code>&amp;Vec&lt;f32&gt;</code>. Which to me seems blatantly incorrect.</p>\n\n<p>The Python equivalent of this that works (taking into consideration the above assumption):</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>_i = nets.index(max(nets))\n</code></pre>\n"}, {"tags": ["syntax", "rust", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 5, "last_activity_date": 1545554564, "creation_date": 1545554564, "answer_id": 53902304, "question_id": 53901550, "link": "https://stackoverflow.com/questions/53901550/what-does-some-do-on-the-left-hand-side-of-a-variable-assignment/53902304#53902304", "title": "What does Some() do on the left hand side of a variable assignment?", "body": "<p>From the <a href=\"https://doc.rust-lang.org/beta/reference/expressions/if-expr.html#if-let-expressions\" rel=\"noreferrer\">reference</a> :</p>\n\n<blockquote>\n  <p>An if let expression is semantically similar to an if expression but\n  in place of a condition expression it expects the keyword let followed\n  by a refutable pattern, an = and an expression. If the value of the\n  expression on the right hand side of the = matches the pattern, the\n  corresponding block will execute, otherwise flow proceeds to the\n  following else block if it exists. Like if expressions, if let\n  expressions have a value determined by the block that is evaluated.</p>\n</blockquote>\n\n<p>In here the important part is <strong>refutability</strong>. What it means refutable pattern in here it can be in different forms. For example :</p>\n\n<pre><code>enum Test {\n    First(String, i32, usize),\n    Second(i32, usize),\n    Third(i32),\n}\n</code></pre>\n\n<p>You can check the x's value for a value for 3 different pattern like :</p>\n\n<pre><code>fn main() {\n    let x = Test::Second(14, 55);\n    if let Test::First(a, b, c) = x {}\n    if let Test::Second(a, b) = x {} //This block will be executed\n    if let Test::Third(a) = x {}\n}\n</code></pre>\n\n<p>This is called <strong>refutability</strong>. But consider your code like this:</p>\n\n<pre><code>enum Test {\n    Second(i32, usize),\n}\n\nfn main() {\n    let x = Test::Second(14, 55);\n    if let Test::Second(a, b) = x {}\n}\n</code></pre>\n\n<p>This code will not compile because x's pattern is obvious, it has single pattern. \nYou can get more information from the <a href=\"https://doc.rust-lang.org/book/ch18-02-refutability.html#refutability-whether-a-pattern-might-fail-to-match\" rel=\"noreferrer\">reference of refutability</a>.</p>\n\n<p>Also you are not right thinking for this:  </p>\n\n<pre><code>if let path = Some(env::args().nth(1)) {\n</code></pre>\n\n<p>Compiler will throw error like <strong>irrefutable if-let pattern</strong> because as the reference says: \"keyword let followed by a refutable pattern\". In here there is no refutable pattern after \"let\". Actually this code tries to create a variable named path which is an Option and this make no sense because there is no \"<strong>If</strong>\" needed, </p>\n\n<p>Instead Rust expects from you to write like this: </p>\n\n<pre><code>let path = Some(env::args().nth(1)); // This will be seem like Some(Some(value))\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1545660354, "last_edit_date": 1545660354, "creation_date": 1545600453, "answer_id": 53907290, "question_id": 53901550, "link": "https://stackoverflow.com/questions/53901550/what-does-some-do-on-the-left-hand-side-of-a-variable-assignment/53907290#53907290", "title": "What does Some() do on the left hand side of a variable assignment?", "body": "<p>The other answers go into a lot of detail, which might be more than you need to know.</p>\n\n<p>Essentially, this:</p>\n\n<pre><code>if let Some(path) = env::args().nth(1) {\n    // Do something with path\n} else {\n    // otherwise do something else\n}\n</code></pre>\n\n<p>is <em>identical</em> to this:</p>\n\n<pre><code>match env::args().nth(1) {\n    Some(path) =&gt; { /* Do something with path */ }\n    _          =&gt; { /* otherwise do something else */ }\n}\n</code></pre>\n"}], "owner": {"reputation": 3502, "user_id": 2558108, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/DUiG3.jpg?s=128&g=1", "display_name": "Qwertie", "link": "https://stackoverflow.com/users/2558108/qwertie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 1, "accepted_answer_id": 53902304, "answer_count": 2, "score": 0, "last_activity_date": 1545671802, "creation_date": 1545544649, "last_edit_date": 1545577338, "question_id": 53901550, "link": "https://stackoverflow.com/questions/53901550/what-does-some-do-on-the-left-hand-side-of-a-variable-assignment", "title": "What does Some() do on the left hand side of a variable assignment?", "body": "<p>I was reading some Rust code and I came across this line</p>\n\n<pre><code>if let Some(path) = env::args().nth(1) {\n</code></pre>\n\n<p>Inside of this function</p>\n\n<pre><code>fn main() {\n    if let Some(path) = env::args().nth(1) {\n        // Try reading the file provided by the path.\n        let mut file = File::open(path).expect(\"Failed reading file.\");\n        let mut content = String::new();\n        file.read_to_string(&amp;mut content);\n\n        perform_conversion(content.as_str()).expect(\"Conversion failed.\");\n    } else {\n        println!(\n            \"provide a path to a .cue file to be converted into a MusicBrainz compatible tracklist.\"\n        )\n    }\n}\n</code></pre>\n\n<p>The line seems to be assigning the <code>env</code> argument to the variable path but I can't work out what the <code>Some()</code> around it is doing.</p>\n\n<p>I took a look at the documentation for <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"nofollow noreferrer\"><code>Option</code></a> and I understand how it works when used on the right hand side of <code>=</code> but on the left hand side I am a little confused.</p>\n\n<p>Am I right in thinking this line is equivalent to</p>\n\n<pre><code>if let path = Some(env::args().nth(1)) {\n</code></pre>\n"}, {"tags": ["web-services", "rust"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 3, "last_activity_date": 1545577382, "last_edit_date": 1545577382, "creation_date": 1545532619, "answer_id": 53900809, "question_id": 53900614, "link": "https://stackoverflow.com/questions/53900614/why-can-i-not-access-this-rust-simple-server-from-the-internet/53900809#53900809", "title": "Why can I not access this Rust simple server from the Internet?", "body": "<p>By using <code>\"127.0.0.1\"</code> for the <code>host</code> variable you denied any connection that doesn't come from this address. Use <code>\"0.0.0.0\"</code>, the unspecified address, for example.</p>\n"}], "owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 0, "accepted_answer_id": 53900809, "answer_count": 1, "score": 0, "last_activity_date": 1545577382, "creation_date": 1545529815, "last_edit_date": 1545560798, "question_id": 53900614, "link": "https://stackoverflow.com/questions/53900614/why-can-i-not-access-this-rust-simple-server-from-the-internet", "title": "Why can I not access this Rust simple server from the Internet?", "body": "<p>I have the following server:</p>\n\n<pre><code>extern crate simple_server;\nuse crate::simple_server::*;\n\nfn main() {\n    let host = \"127.0.0.1\";\n    let port = \"7878\";\n\n    let server = Server::new(|request, mut response| {\n        println!(\"Request received. {} {}\", request.method(), request.uri());\n        println!(\"=============BODY=================\");\n        let mut v: Vec&lt;u8&gt; = Vec::new();\n        for b in request.body().iter() {\n            v.push(*b);\n        }\n        let body_as_str = String::from_utf8(v);\n\n        match body_as_str {\n            Ok(strr) =&gt; println!(\"{}\", strr),\n            Err(e) =&gt; println!(\"{}\", e),\n        }\n\n        //ROUTING\n        match (request.method(), request.uri().path()) {\n            (&amp;Method::GET, \"/\") =&gt; {\n                Ok(response.body(\"&lt;h1&gt;Hi!&lt;/h1&gt;&lt;p&gt;Hello hacker!&lt;/p&gt;\".as_bytes().to_vec())?)\n            }\n            (&amp;Method::POST, \"/\") =&gt; {\n                Ok(response.body(\"&lt;h1&gt;Hi!&lt;/h1&gt;&lt;p&gt;Hello hacker!&lt;/p&gt;\".as_bytes().to_vec())?)\n            }\n            (_, _) =&gt; {\n                response.status(StatusCode::NOT_FOUND);\n                Ok(response.body(\"&lt;h1&gt;404&lt;/h1&gt;&lt;p&gt;Not found!&lt;p&gt;\".as_bytes().to_vec())?)\n            }\n        }\n    });\n    println!(\"Listening on: {} port {}\", host, port);\n    server.listen(host, port);\n}\n</code></pre>\n\n<p>I'm not able to access the page going to <a href=\"http://my_server_ip:7878/\" rel=\"nofollow noreferrer\">http://my_server_ip:7878/</a> from the Internet.</p>\n\n<p>I have my server's firewall setup to allow all on <code>7878</code> and also, other simple servers work just fine when configured to listen on that port, which makes me think this is a code problem with my specific Rust application. An example of a server which works fine is static-server on npm.</p>\n\n<p>However, when I test this application on my build machine by going to <code>\"127.0.0.1:7878\"</code>, it works fine.</p>\n"}, {"tags": ["rust", "serde-json"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546266216, "post_id": 53900612, "comment_id": 94814277, "body": "Duplicate of <a href=\"https://stackoverflow.com/q/46993079/155423\">How do I change Serde&#39;s default implementation to return an empty object instead of null?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1546266493, "post_id": 53900612, "comment_id": 94814377, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/46993079/how-do-i-change-serdes-default-implementation-to-return-an-empty-object-instead\">How do I change Serde&#39;s default implementation to return an empty object instead of null?</a>"}, {"owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "edited": false, "score": 0, "creation_date": 1546332929, "post_id": 53900612, "comment_id": 94825886, "body": "it can resolve <code>Option</code> problem, but for 0 there is none solution."}], "answers": [{"tags": [], "owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "is_accepted": true, "score": 8, "last_activity_date": 1546226924, "last_edit_date": 1546226924, "creation_date": 1545530890, "answer_id": 53900684, "question_id": 53900612, "link": "https://stackoverflow.com/questions/53900612/how-do-i-avoid-generating-json-when-serializing-a-value-that-is-null-or-a-defaul/53900684#53900684", "title": "How do I avoid generating JSON when serializing a value that is null or a default value?", "body": "<p>The link <a href=\"https://serde.rs/attr-skip-serializing.html\" rel=\"noreferrer\">Skip serializing field</a> give me the answer.</p>\n\n<p>And the fixed code:</p>\n\n<pre><code>#[derive(Debug, Clone, Serialize, Deserialize, Default, PartialEq, Ord, PartialOrd, Eq)]\npub struct WeightWithOptionGroup {\n    #[serde(skip_serializing_if = \"Option::is_none\")]\n    #[serde(default)]\n    pub group: Option&lt;String&gt;,\n    #[serde(skip_serializing_if = \"is_zero\")]\n    #[serde(default)]\n    pub proportion: u32,\n}\n\n/// This is only used for serialize\n#[allow(clippy::trivially_copy_pass_by_ref)]\nfn is_zero(num: &amp;u32) -&gt; bool {\n    *num == 0\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1539, "user_id": 320546, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df48760ae51273ce62b3b72e188796d8?s=128&d=identicon&r=PG", "display_name": "Tom Parker-Shemilt", "link": "https://stackoverflow.com/users/320546/tom-parker-shemilt"}, "is_accepted": false, "score": 2, "last_activity_date": 1545942529, "creation_date": 1545942529, "answer_id": 53950528, "question_id": 53900612, "link": "https://stackoverflow.com/questions/53900612/how-do-i-avoid-generating-json-when-serializing-a-value-that-is-null-or-a-defaul/53950528#53950528", "title": "How do I avoid generating JSON when serializing a value that is null or a default value?", "body": "<p>There's a couple of ways you could do this:</p>\n\n<ul>\n<li>Mark each of the fields with a <a href=\"https://serde.rs/attr-skip-serializing.html\" rel=\"nofollow noreferrer\"><code>skip_serialising_if</code></a> attribute to say when to skip them. This is much easier, but you'll have to remember to do it for every field.</li>\n<li><a href=\"https://serde.rs/impl-serializer.html\" rel=\"nofollow noreferrer\">Write your own Serde serialiser</a> that does this custom JSON form. This is more work, but shouldn't be too bad, especially given you can still use the stock JSON deserialiser.</li>\n</ul>\n"}], "owner": {"reputation": 423, "user_id": 9354288, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/2dGbd.jpg?s=128&g=1", "display_name": "llxxbb", "link": "https://stackoverflow.com/users/9354288/llxxbb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3036, "favorite_count": 0, "accepted_answer_id": 53900684, "answer_count": 2, "score": 4, "last_activity_date": 1546332838, "creation_date": 1545529776, "last_edit_date": 1546332838, "question_id": 53900612, "link": "https://stackoverflow.com/questions/53900612/how-do-i-avoid-generating-json-when-serializing-a-value-that-is-null-or-a-defaul", "title": "How do I avoid generating JSON when serializing a value that is null or a default value?", "body": "<p>The <code>serde_json::to_string()</code> function will generate a string which may include <code>null</code> for an <code>Option&lt;T&gt;</code>, or <code>0</code> for a <code>u32</code>. This makes the output larger, so I want to ignore these sorts of values.</p>\n\n<p>I want to simplify the JSON string output of the following structure:</p>\n\n<pre><code>use serde_derive::Serialize; // 1.0.82\n\n#[derive(Serialize)]\npub struct WeightWithOptionGroup {\n    pub group: Option&lt;String&gt;,\n    pub proportion: u32,\n}\n</code></pre>\n\n<p>When <code>group</code> is <code>None</code> and <code>proportion</code> is 0, the JSON string should be <code>\"{}\"</code></p>\n\n<p>Thanks for the answer<a href=\"https://stackoverflow.com/questions/46993079/how-do-i-change-serdes-default-implementation-to-return-an-empty-object-instead\">How do I change Serde's default implementation to return an empty object instead of null?</a>, it can resolve <code>Option</code>problem, but for <code>0</code> there is none solution.</p>\n"}, {"tags": ["string", "rust", "matching"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1545514477, "post_id": 53899349, "comment_id": 94644381, "body": "The left hand side of a match arm is a pattern. It can&#39;t include things like function calls (such as <code>String::from</code>). The literal <code>&quot;foo&quot;</code> is a pattern."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1545514658, "post_id": 53899349, "comment_id": 94644421, "body": "The reason why the last attempt works is because <code>String</code> dereferences to <code>str</code>. That is, <code>String</code>  implements the <code>Deref</code> trait with <code>str</code> as its output type."}], "answers": [{"tags": [], "owner": {"reputation": 8073, "user_id": 2852624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/682806d261e4f00f77aa8633689a9558?s=128&d=identicon&r=PG&f=1", "display_name": "Matthias247", "link": "https://stackoverflow.com/users/2852624/matthias247"}, "is_accepted": true, "score": 6, "last_activity_date": 1545525802, "last_edit_date": 1545525802, "creation_date": 1545525417, "answer_id": 53900344, "question_id": 53899349, "link": "https://stackoverflow.com/questions/53899349/matching-string-in-rust/53900344#53900344", "title": "Matching string in Rust", "body": "<p>The first example doesn't work, because <code>s</code> is of type <code>String</code>, which is a string variant that owns the data in it. It is matched against a string literal (which can be be used as type <code>&amp;str</code>). match doesn't understand how to compare those two different types, so it errors.</p>\n\n<p>However <code>String</code> dereferences to <code>&amp;str</code>, by implementing <code>Deref&lt;Target=str&gt;</code>, which means references to <code>String</code> can be used where a <code>&amp;str</code> is required, e.g. for comparing it to one. That's what happens in the third example. By creating the reference <code>&amp;s</code>, the implicit deref can happen, and the two types get comparable.</p>\n\n<p>You can achieve the same thing with a little less magic by using the explicit method which creates a <code>&amp;str</code> from <code>String</code>:</p>\n\n<pre><code>fn main() {\n    let s = String::from(\"foo\");\n\n    match s.as_str() {\n        \"foo\" =&gt; {\n            println!(\"Yes\");\n         },\n         _ =&gt; {\n             println!(\"No\");\n         }\n    }\n}\n</code></pre>\n\n<p>The second example tries to make things comparable making <code>String</code> the common type instead of <code>&amp;str</code>. It doesn't work, because match expects a pattern on the left side, and not a function call which creates a new struct (and which also allocates behind the scene). Even if it would work (e.g. by moving the <code>String</code> creation outside of the match), the approach would be less desirable, because the new <code>String</code> would require a memory allocation.</p>\n"}], "owner": {"reputation": 826, "user_id": 6439899, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e45a9f68afc6bb98a364ba19e49c7d12?s=128&d=identicon&r=PG&f=1", "display_name": "Nathan", "link": "https://stackoverflow.com/users/6439899/nathan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3593, "favorite_count": 1, "closed_date": 1545525538, "accepted_answer_id": 53900344, "answer_count": 1, "score": 7, "last_activity_date": 1545525802, "creation_date": 1545513285, "question_id": 53899349, "link": "https://stackoverflow.com/questions/53899349/matching-string-in-rust", "closed_reason": "Duplicate", "title": "Matching string in Rust", "body": "<p>I'm new to Rust (1.31) and I would like to understand a simple piece of code that does not compile:</p>\n\n<pre><code>fn main() {\n    s = String::from(\"foo\");\n    match s {\n        \"foo\" =&gt; {\n            println!(\"Yes\");\n        }\n        _ =&gt; {\n            println!(\"No\");\n        }\n    }\n}\n</code></pre>\n\n<p>The error associated is : </p>\n\n<pre><code>10 |         \"foo\" =&gt; {                                                                                 \n   |         ^^^^^ expected struct `std::string::String`, found reference\n</code></pre>\n\n<p>After this error, I decided to change the code to :</p>\n\n<pre><code>fn main() {\n    let s = String::from(\"foo\");\n\n    match s {\n        String::from(\"foo\") =&gt; {\n            println!(\"Yes\");\n        }\n        _ =&gt; {\n            println!(\"No\");\n        }\n    }\n}\n</code></pre>\n\n<p>By doing so, I was hoping to have the correct type, but it is not the case :</p>\n\n<pre><code>10 |         String::from(\"foo\") =&gt; {                                                                   \n   |         ^^^^^^^^^^^^^^^^^^^ not a tuple variant or struct\n</code></pre>\n\n<p>I am quite puzzled with this message from the compiler, at the end I managed to make it work by implementing :</p>\n\n<pre><code>fn main() {\n    let s = String::from(\"foo\");\n\n    match &amp;s as &amp;str {\n        \"foo\" =&gt; {\n            println!(\"Yes\");\n        }\n        _ =&gt; {\n            println!(\"No\");\n        }\n    }\n}\n</code></pre>\n\n<p>However, I do not understand the underlying mechanisms that make this solution the right one and why my second example does not work.</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1545498166, "post_id": 53897618, "comment_id": 94640811, "body": "Please make a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. There are syntax error and other pieces missing in that code, which make us unable to reproduce the problem. In particular, you mention a type <code>MyError</code>, and using <code>MyClient</code> in a <code>main</code> function that you did not provide. Consider making something that runs and shows the same issue in the <a href=\"//play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>. There are also Rust specific tips in the <a href=\"https://stackoverflow.com/tags/rust/info\">rust tag info</a>."}, {"owner": {"reputation": 1493, "user_id": 1542949, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/NcKOT.jpg?s=128&g=1", "display_name": "J.B", "link": "https://stackoverflow.com/users/1542949/j-b"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1545498711, "post_id": 53897618, "comment_id": 94640960, "body": "Updated with code to reproduce the error and a playground link"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545577507, "post_id": 53897618, "comment_id": 94653882, "body": "All of the words in <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> are important. <b>Minimal</b> is the first one."}], "answers": [{"comments": [{"owner": {"reputation": 1493, "user_id": 1542949, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/NcKOT.jpg?s=128&g=1", "display_name": "J.B", "link": "https://stackoverflow.com/users/1542949/j-b"}, "edited": false, "score": 0, "creation_date": 1545567851, "post_id": 53899549, "comment_id": 94651822, "body": "Thank you very much! <code>map_err</code> seems to be the detail I was missing. With that done, is my implementation &quot;correct&quot; from a &quot;good Rust style&quot; point of view, with regard to my error implementation etc.? If not, what should I be doing?"}, {"owner": {"reputation": 1493, "user_id": 1542949, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/NcKOT.jpg?s=128&g=1", "display_name": "J.B", "link": "https://stackoverflow.com/users/1542949/j-b"}, "edited": false, "score": 0, "creation_date": 1545568344, "post_id": 53899549, "comment_id": 94651930, "body": "For example, if I change the web request line to <code>let json = client.post(&quot;&quot;).form(&amp;params).send().map_err(MyError::WebReq&zwnj;&#8203;uestError)?.text()?;</code>&zwnj;&#8203;, is that better practice at all?"}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 7, "last_activity_date": 1573043142, "last_edit_date": 1573043142, "creation_date": 1545515581, "answer_id": 53899549, "question_id": 53897618, "link": "https://stackoverflow.com/questions/53897618/stop-rust-from-enforcing-the-serdedeserialize-trait-on-an-error-type/53899549#53899549", "title": "Stop Rust from enforcing the serde::Deserialize trait on an error type", "body": "<p>Your first problem is that your <code>fn get_new_access() -&gt; Result&lt;Access, MyError&gt;</code> expects a <code>Result</code>. But in here:</p>\n\n<pre><code>    //...\n    serde_json::from_str(&amp;json)?\n}\n</code></pre>\n\n<p>because of using <code>?</code>(<em>try macro</em>), you are trying to return <code>Result</code>'s unwrapped value which is a subtype of  <code>serde::Deserialize&lt;'_&gt;</code>. The compiler warns you about this <strong><code>Deserialize</code> is not a <code>Result</code></strong>. What you should do is just return the result without unwrapping it: </p>\n\n<pre><code>    //...\n    serde_json::from_str(&amp;json)\n}\n</code></pre>\n\n<p><strong>Or</strong> </p>\n\n<pre><code>    //...\n    let access = serde_json::from_str(&amp;json)?; // gets access or propagates error \n    Ok(access) //if no error return access in a Result\n}\n</code></pre>\n\n<p>Then you will have a second problem because your function expects <code>MyError</code> in the <code>Result</code> while you are returning <code>serde_json::Error</code> with this call <code>serde_json::from_str(&amp;json)</code>. Luckily <code>Result</code> has the function <code>map_err</code> which maps the actual error type to your custom error type. </p>\n\n<p>This code will solve your problem:</p>\n\n<pre><code>    //...\n    serde_json::from_str(&amp;json).map_err(MyError::ParseError)\n}\n</code></pre>\n\n<hr>\n\n<p>For the request in the <a href=\"https://stackoverflow.com/questions/53897618/stop-rust-from-enforcing-the-serdedeserialize-trait-on-an-error-type/53899549#comment94651930_53899549\">comment</a> : </p>\n\n<blockquote>\n  <p>For example, if I change the web request line to <code>let json = client.post(\"\").form(&amp;params).send().map_err(MyError::WebRequestError)?.text()?;</code>,\n  is that better practice at all?</p>\n</blockquote>\n\n<p>Yes but since <code>text()</code> returns a <code>Result</code> you need to map it's error as <code>MyError</code> too. Since both <code>send</code> and <code>text</code> has same error type(<code>reqwest::Error</code>) you can combine the results with <code>and_then</code> : </p>\n\n<pre><code>let json = client\n    .post(&amp;[\"\"].concat())\n    .form(&amp;params)\n    .send()\n    .and_then(Response::text) //use reqwest::Response; \n    .map_err(MyError::WebRequestError)?;\n</code></pre>\n"}], "owner": {"reputation": 1493, "user_id": 1542949, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/NcKOT.jpg?s=128&g=1", "display_name": "J.B", "link": "https://stackoverflow.com/users/1542949/j-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 736, "favorite_count": 1, "accepted_answer_id": 53899549, "answer_count": 1, "score": 4, "last_activity_date": 1573043142, "creation_date": 1545497846, "last_edit_date": 1545577485, "question_id": 53897618, "link": "https://stackoverflow.com/questions/53897618/stop-rust-from-enforcing-the-serdedeserialize-trait-on-an-error-type", "title": "Stop Rust from enforcing the serde::Deserialize trait on an error type", "body": "<p>The code below is the beginnings of a small library I'm writing to talk to a web API. Users of the library will instantiate a client <code>MyClient</code> and access the web API through it. Here, I'm trying to get an access token from the API before making requests to it.</p>\n\n<p>In <code>get_new_access()</code> I'm able to make the request and receive the JSON response. I then try to use serde to turn the response into an <code>Access</code> struct, and this is where the problems start.</p>\n\n<p>I've created a library specific error enum <code>MyError</code> which can represent the JSON deserializing and reqwest errors that could occur within <code>get_new_access()</code>. However, when I go to compile I get <code>the trait serde::Deserialize&lt;'_&gt; is not implemented for MyError</code>. My understanding is that this is happening because in the case that I get one of the aforementioned errors, serde does not know how to deserialize it into an <code>Access</code> struct. Of course, I don't want it to do that at all, so my question is what should I do?</p>\n\n<p>I've looked at various serde deserialize examples, but all of them seem to assume that they are running in a main function that can only return a serde error. If I put <code>#[derive(Deserialize)]</code> above <code>MyError</code>'s declaration, then I get the same error, but it shifts to <code>reqwest::Error</code> and <code>serde_json::Error</code> instead. </p>\n\n<pre><code>use std::error;\nuse std::fmt;\n\nextern crate chrono;\nextern crate reqwest;\n\n#[macro_use]\nextern crate serde_derive;\n\nextern crate serde;\nextern crate serde_json;\n\nuse chrono::prelude::*;\nuse reqwest::Client;\n\npub struct MyClient {\n    access: Access,\n    token_expires: DateTime&lt;Utc&gt;,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Access {\n    access_token: String,\n    expires_in: i64,\n    token_type: String,\n}\n\nfn main() {\n    let sc: MyClient = MyClient::new();\n\n    println!(\"{:?}\", &amp;sc.access);\n}\n\nimpl MyClient {\n    pub fn new() -&gt; MyClient {\n        let a: Access = MyClient::get_new_access().expect(\"Couldn't get Access\");\n        let e: DateTime&lt;Utc&gt; = chrono::Utc::now(); //TODO\n        MyClient {\n            access: a,\n            token_expires: e,\n        }\n    }\n\n    fn get_new_access() -&gt; Result&lt;Access, MyError&gt; {\n        let params = [\"test\"];\n        let client = Client::new();\n        let json = client\n            .post(&amp;[\"\"].concat())\n            .form(&amp;params)\n            .send()?\n            .text()\n            .expect(\"Couldn't get JSON Response\");\n\n        println!(\"{}\", &amp;json);\n\n        serde_json::from_str(&amp;json)?\n\n        //let a = Access {access_token: \"Test\".to_string(), expires_in: 3600, token_type: \"Test\".to_string() };\n\n        //serde_json::from_str(&amp;json)?\n    }\n}\n\n#[derive(Debug)]\npub enum MyError {\n    WebRequestError(reqwest::Error),\n    ParseError(serde_json::Error),\n}\n\nimpl fmt::Display for MyError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"eRROR\")\n    }\n}\n\nimpl error::Error for MyError {\n    fn description(&amp;self) -&gt; &amp;str {\n        \"API internal error\"\n    }\n\n    fn cause(&amp;self) -&gt; Option&lt;&amp;error::Error&gt; {\n        // Generic error, underlying cause isn't tracked.\n        None\n    }\n}\n\nimpl From&lt;serde_json::Error&gt; for MyError {\n    fn from(e: serde_json::Error) -&gt; Self {\n        MyError::ParseError(e)\n    }\n}\n\nimpl From&lt;reqwest::Error&gt; for MyError {\n    fn from(e: reqwest::Error) -&gt; Self {\n        MyError::WebRequestError(e)\n    }\n}\n</code></pre>\n\n<p>Playground link <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0d83c56ac41314354cec9ab21f49f852\" rel=\"noreferrer\">here</a>.</p>\n"}, {"tags": ["rust", "polymorphism", "traits", "dispatch", "trait-objects"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1545500397, "last_edit_date": 1545500397, "creation_date": 1545499709, "answer_id": 53897872, "question_id": 53897315, "link": "https://stackoverflow.com/questions/53897315/rust-polymorphic-calls-for-structs-in-a-vector/53897872#53897872", "title": "Rust: polymorphic calls for structs in a vector", "body": "<blockquote>\n  <p>Is there any better / less verbose way?</p>\n</blockquote>\n\n<p>There isn't really a way to make this less verbose. Since you are using trait objects, you need to tell the compiler that the vectors's items are <code>dyn Function</code> and not the concrete type. The compiler can't just infer that you meant <code>dyn Function</code> trait objects because there could have been other traits that <code>Add</code> and <code>Multiply</code> both implement.</p>\n\n<p>You can't abstract out the calls to <code>Box::new</code> either. For that to work, you would have to somehow map over a heterogeneous collection, which isn't possible in Rust. However, if you are writing this a lot, you might consider adding helper constructor functions for each concrete <code>impl</code>:</p>\n\n<pre><code>impl Add {\n    fn new() -&gt; Add {\n        Add {}\n    }\n\n    fn new_boxed() -&gt; Box&lt;Add&gt; {\n        Box::new(Add::new())\n    }\n}\n</code></pre>\n\n<p>It's idiomatic to include a <code>new</code> constructor wherever possible, but it's also common to include alternative convenience constructors.</p>\n\n<p>This makes the construction of the vector a bit less noisy:</p>\n\n<pre><code>let funcs: Vec&lt;Box&lt;dyn Function&gt;&gt; = vec!(Add::new_boxed(), Multiply::new_boxed()));\n</code></pre>\n\n<blockquote>\n  <p>What is the takeaway with trait objects in this case?</p>\n</blockquote>\n\n<p>There is always a small performance hit with using dynamic dispatch. If all of your objects are the same type, they can be densely packed in memory, which can be much faster for iteration. In general, I wouldn't worry too much about this unless you are creating a library crate, or if you really want to squeeze out the last nanosecond of performance.</p>\n"}], "owner": {"reputation": 409, "user_id": 6292227, "user_type": "registered", "accept_rate": 83, "profile_image": "https://graph.facebook.com/10208054450141667/picture?type=large", "display_name": "Gabriele", "link": "https://stackoverflow.com/users/6292227/gabriele"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 575, "favorite_count": 1, "accepted_answer_id": 53897872, "answer_count": 1, "score": 3, "last_activity_date": 1545500397, "creation_date": 1545495471, "last_edit_date": 1545499832, "question_id": 53897315, "link": "https://stackoverflow.com/questions/53897315/rust-polymorphic-calls-for-structs-in-a-vector", "title": "Rust: polymorphic calls for structs in a vector", "body": "<p>I'm a complete newbie in Rust and I'm trying to get some understanding of the basics of the language.</p>\n\n<p>Consider the following trait</p>\n\n<pre><code>trait Function {\n    fn value(&amp;self, arg: &amp;[f64]) -&gt; f64;\n}\n</code></pre>\n\n<p>and two structs implementing it:</p>\n\n<pre><code>struct Add {}\n\nstruct Multiply {}\n\nimpl Function for Add {\n    fn value(&amp;self, arg: &amp;[f64]) -&gt; f64 {\n        arg[0] + arg[1]\n    }\n}\n\nimpl Function for Multiply {\n    fn value(&amp;self, arg: &amp;[f64]) -&gt; f64 {\n        arg[0] * arg[1]\n    }\n}\n</code></pre>\n\n<p>In my <code>main()</code> function I want to group two instances of <code>Add</code>\u00a0and <code>Multiply</code> in a vector, and then call the <code>value</code> method. The following works:</p>\n\n<pre><code>fn main() {\n    let x = vec![1.0, 2.0];\n    let funcs: Vec&lt;&amp;dyn Function&gt; = vec![&amp;Add {}, &amp;Multiply {}];\n\n    for f in funcs {\n        println!(\"{}\", f.value(&amp;x));\n    }\n}\n</code></pre>\n\n<p>And so does:</p>\n\n<pre><code>fn main() {\n    let x = vec![1.0, 2.0];\n    let funcs: Vec&lt;Box&lt;dyn Function&gt;&gt; = vec![Box::new(Add {}), Box::new(Multiply {})];\n\n    for f in funcs {\n        println!(\"{}\", f.value(&amp;x));\n    }\n}\n</code></pre>\n\n<p>Is there any better / less verbose way? Can I work around wrapping the instances in a <code>Box</code>? What is the takeaway with trait objects in this case?</p>\n"}, {"tags": ["syntax", "rust"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 5, "last_activity_date": 1545484259, "last_edit_date": 1545484259, "creation_date": 1545480932, "answer_id": 53895565, "question_id": 53895520, "link": "https://stackoverflow.com/questions/53895520/why-is-a-trait-bound-present-in-the-where-clause-but-not-in-the-function-signatu/53895565#53895565", "title": "Why is a trait bound present in the where clause but not in the function signature?", "body": "<p><code>K</code> is a type parameter of <code>HashMap&lt;K, V, S&gt;</code> and it's introduced <a href=\"https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#673\" rel=\"nofollow noreferrer\">at the beginning of the applicable <code>impl</code> block</a>:</p>\n\n<pre><code>impl&lt;K, V, S&gt; HashMap&lt;K, V, S&gt;\n    where K: Eq + Hash,\n          S: BuildHasher\n</code></pre>\n\n<p>It is applicable for the whole block, including <a href=\"https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#1252\" rel=\"nofollow noreferrer\"><code>get</code></a>, which adds an additional constraint, <code>K: Borrow&lt;Q&gt;</code>.</p>\n\n<p>This way of specifying the type of <code>get</code>'s <code>k</code> might  be a bit awkward, but it enables us to e.g. do the following:</p>\n\n<pre><code>let mut map: HashMap&lt;String, usize&gt; = HashMap::new();\n\nmap.insert(\"herp\".to_string(), 1);\nmap.insert(\"derp\".to_string(), 2);\n\nassert_eq!(map.get(\"herp\"), Some(&amp;1)); // we can search by &amp;'static str (not only by a String)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1289, "user_id": 1330706, "user_type": "registered", "profile_image": "https://graph.facebook.com/859896960751961/picture?type=large", "display_name": "mug896", "link": "https://stackoverflow.com/users/1330706/mug896"}, "is_accepted": false, "score": 0, "last_activity_date": 1545708223, "last_edit_date": 1545708223, "creation_date": 1545700090, "answer_id": 53918657, "question_id": 53895520, "link": "https://stackoverflow.com/questions/53895520/why-is-a-trait-bound-present-in-the-where-clause-but-not-in-the-function-signatu/53918657#53918657", "title": "Why is a trait bound present in the where clause but not in the function signature?", "body": "<p>I think the <code>search</code> method in <code>get</code> method body use <code>K: Borrow&lt;Q&gt;</code> trait bounds so the <code>get</code> method needs the same trait bounds.<br>\nAnd about using <code>&amp;str</code> or <code>&amp;String</code> for key values in get method parameters,<br>\nIt's enough to use only <code>&amp;Q</code> type</p>\n"}], "owner": {"reputation": 1289, "user_id": 1330706, "user_type": "registered", "profile_image": "https://graph.facebook.com/859896960751961/picture?type=large", "display_name": "mug896", "link": "https://stackoverflow.com/users/1330706/mug896"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 53895565, "answer_count": 2, "score": 4, "last_activity_date": 1545708223, "creation_date": 1545480535, "last_edit_date": 1545576088, "question_id": 53895520, "link": "https://stackoverflow.com/questions/53895520/why-is-a-trait-bound-present-in-the-where-clause-but-not-in-the-function-signatu", "title": "Why is a trait bound present in the where clause but not in the function signature?", "body": "<p>I'm reading <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get\" rel=\"nofollow noreferrer\"><code>HashMap</code>'s <code>get</code> function</a>, but I can't find the type parameter <code>K</code> in the source code.</p>\n\n<p>Why does the <code>K</code> trait bound exist in the <code>where</code> clause, but not in the function signature?</p>\n\n<pre><code>pub fn get&lt;Q: ?Sized&gt;(&amp;self, k: &amp;Q) -&gt; Option&lt;&amp;V&gt;\n    where K: Borrow&lt;Q&gt;,\n          Q: Hash + Eq\n{\n    self.search(k).map(|bucket| bucket.into_refs().1)\n}\n</code></pre>\n"}, {"tags": ["rust", "thread-safety", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 2, "last_activity_date": 1545575849, "last_edit_date": 1545575849, "creation_date": 1545469094, "answer_id": 53894298, "question_id": 53892938, "link": "https://stackoverflow.com/questions/53892938/rust-lifetime-issue-with-threads/53894298#53894298", "title": "Rust Lifetime Issue with Threads", "body": "<p>Question 1:</p>\n\n<p>It is not thread safe to share variables into new threads. In Rust you can not compile this code. You can make the code work via using <code>Arc&lt;Mutex&lt;Map&gt;&gt;</code></p>\n\n<p>Question 2: </p>\n\n<p>You need to change method signature as follows:</p>\n\n<pre><code> handle_n_times(count: i32, arc_map: Arc&lt;Mutex&lt;Map&gt;&gt;)\n</code></pre>\n\n<p>In case you are moving ownership in your <code>thread::spawn</code>, you need to clone <code>Arc</code> value just before sending it to other thread with </p>\n\n<pre><code> let clone_arc = arc_map.clone();\n</code></pre>\n\n<p>When you want to insert an item to the map you need to get reference from the <code>Arc&lt;Mutex&gt;</code> via <code>lock</code> and <code>unwrap</code>:</p>\n\n<pre><code>let map = clone_arc.lock().unwrap();\n</code></pre>\n\n<p>After that you can call <code>map.insert</code> with no explicit lifetime requirements.</p>\n\n<p>Here is the full working code as an <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9fe0f7efcfc3a8d30103e56902499b86\" rel=\"nofollow noreferrer\">example</a></p>\n"}], "owner": {"reputation": 2559, "user_id": 665869, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b73cd84b791b01148061a5dab96eebc6?s=128&d=identicon&r=PG", "display_name": "mitnk", "link": "https://stackoverflow.com/users/665869/mitnk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 877, "favorite_count": 0, "closed_date": 1545575945, "accepted_answer_id": 53894298, "answer_count": 1, "score": 1, "last_activity_date": 1545576012, "creation_date": 1545451124, "last_edit_date": 1545575898, "question_id": 53892938, "link": "https://stackoverflow.com/questions/53892938/rust-lifetime-issue-with-threads", "closed_reason": "Duplicate", "title": "Rust Lifetime Issue with Threads", "body": "<p>Here is the code:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::thread;\n\ntype MAP = HashMap&lt;String, String&gt;;\n\nfn handle_n_times(count: i32, map: &amp;mut MAP) {\n    for i in 0..count {\n        thread::spawn(move || {\n            map.insert(format!(\"key-{}\", i), format!(\"value-{}\", i));\n        });\n    }\n}\n\nfn main() {\n    let mut map: MAP = MAP::new();\n    handle_n_times(5, &amp;mut map);\n}\n</code></pre>\n\n<p>I cannot compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0621]: explicit lifetime required in the type of `map`\n --&gt; src/main.rs:8:9\n  |\n6 | fn handle_n_times(count: i32, map: &amp;mut MAP) {\n  |                                    -------- help: add explicit lifetime `'static` to the type of `map`: `&amp;'static mut std::collections::HashMap&lt;std::string::String, std::string::String&gt;`\n7 |     for i in 0..count {\n8 |         thread::spawn(move || {\n  |         ^^^^^^^^^^^^^ lifetime `'static` required\n</code></pre>\n\n<p>The hint it provides (add a <code>&amp;'static</code>) is not helpful.</p>\n\n<p><strong>Question 1</strong>: How to make this code work?</p>\n\n<p><strong>Question 2</strong>: After 1 solved, I want to use <code>std::sync::Arc</code> to make <code>map</code> thread-safe, what's the Rust way to do it?</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"comments": [{"owner": {"reputation": 18146, "user_id": 646619, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/bd61a0f309ebc135d2661710c2faf379?s=128&d=identicon&r=PG", "display_name": "Colonel Thirty Two", "link": "https://stackoverflow.com/users/646619/colonel-thirty-two"}, "edited": false, "score": 0, "creation_date": 1545432446, "post_id": 53890969, "comment_id": 94630050, "body": "Oh cool, didn&#39;t know about the attribute form for docs. That would explain the &quot;no rule to match <code>#</code>&quot; error I got."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 3, "last_activity_date": 1545427723, "creation_date": 1545427723, "answer_id": 53890969, "question_id": 53890817, "link": "https://stackoverflow.com/questions/53890817/macro-rule-for-matching-a-doc-comment/53890969#53890969", "title": "Macro rule for matching a doc comment", "body": "<p>Doc comments are translated to attributes of the form</p>\n\n<pre><code>#[doc = \"documentation text\"]\n</code></pre>\n\n<p>and can be matched in their translated form:</p>\n\n<pre><code>macro_rules! print_doc {\n    (#[doc = $doc:expr]) =&gt; {\n        pub fn foo() {\n            println!($doc);\n        }\n    }\n}\n\nprint_doc!(\n    /// gloink\n);\n\nfn main() {\n    foo();\n}\n</code></pre>\n\n<p>If you want to emit the doc comment in modified form, you need to use the attribute syntax inside your macro, as explained in this answer:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/a/33999625/279627\">Generating documentation in macros</a></li>\n</ul>\n\n<p>To concatenate the original doc comment with your annotation, you can use the macro <code>concat!()</code> from the standard library. However, macro calls are not allowed inside attributes, so you need a helper macro, e.g.</p>\n\n<pre><code>macro_rules! annotated_func {\n    ($doc:expr) =&gt; {\n        #[doc = $doc]\n        pub fn foo() {\n            println!($doc);\n        }\n    }\n}\n\nmacro_rules! print_doc {\n    (#[doc = $doc:expr]) =&gt; {\n        annotated_func!(concat!($doc, \"\\nannotation\"));\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 18146, "user_id": 646619, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/bd61a0f309ebc135d2661710c2faf379?s=128&d=identicon&r=PG", "display_name": "Colonel Thirty Two", "link": "https://stackoverflow.com/users/646619/colonel-thirty-two"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 278, "favorite_count": 0, "closed_date": 1545448340, "answer_count": 1, "score": 1, "last_activity_date": 1545427723, "creation_date": 1545426609, "question_id": 53890817, "link": "https://stackoverflow.com/questions/53890817/macro-rule-for-matching-a-doc-comment", "closed_reason": "Duplicate", "title": "Macro rule for matching a doc comment", "body": "<p>Is there a way to match doccomments in Rust's <code>macro_rules</code>?</p>\n\n<p>I have a macro that generates an enum for a bunch of C constants that <code>bindgen</code> creates:</p>\n\n<pre><code>macro_rules! id_enum {\n    ( enum $name:ident: $typ:ty { $( $enum_name:ident =&gt; $value:expr ),* , } ) =&gt; { ... }\n}\n</code></pre>\n\n<p>I'd like to annotate each with a doc comment (a <code>///</code> comment), but that requires that my macro match the doc comments. Is that possible?</p>\n"}, {"tags": ["rust", "rust-cargo", "clippy"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545355377, "post_id": 53878090, "comment_id": 94603478, "body": "&quot;What am I doing wrong here?&quot;, you probably didn&#39;t change the good file or didn&#39;t save it properly."}, {"owner": {"reputation": 573, "user_id": 6551168, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2dc01ebcf4928f369dcc46d52479c49e?s=128&d=identicon&r=PG&f=1", "display_name": "Jounathaen", "link": "https://stackoverflow.com/users/6551168/jounathaen"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1545356356, "post_id": 53878090, "comment_id": 94603667, "body": "@Stargateur Well, it was my first guess too, but saving the file causes a recompile by <code>cargo run</code> or <code>cargo build</code>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1545376304, "post_id": 53878090, "comment_id": 94607930, "body": "Btw: You don&#39;t need clippy-preview. Please remove that component, clippy is the new, stable component to add."}], "owner": {"reputation": 573, "user_id": 6551168, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2dc01ebcf4928f369dcc46d52479c49e?s=128&d=identicon&r=PG&f=1", "display_name": "Jounathaen", "link": "https://stackoverflow.com/users/6551168/jounathaen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 270, "favorite_count": 0, "closed_date": 1545360459, "answer_count": 0, "score": 3, "last_activity_date": 1545370596, "creation_date": 1545355310, "last_edit_date": 1545370596, "question_id": 53878090, "link": "https://stackoverflow.com/questions/53878090/cargo-clippy-only-produces-output-on-the-first-run", "closed_reason": "Duplicate", "title": "`cargo clippy` only produces output on the first run", "body": "<p>I wanted to use Clippy to lint my code using Rust 1.31.1. I added a obvious mistake for the linker (and surely there is more to lint):</p>\n\n<pre><code>if (nr_children == 0) == true {...\n</code></pre>\n\n<p>I installed Clippy via rustup: <code>rustup component add clippy</code> (and <em>clippy-preview</em> as well).</p>\n\n<p>When I run <code>cargo clippy</code>, I get no output, only <code>Finished dev [unoptimized + debuginfo] target(s) in 0.00s</code> .</p>\n\n<p>When I clean the build with <code>cargo clean</code> before calling Clippy, I get the lint warnings, but when I then re-run <code>cargo clippy</code>, nothing happens.\nEven if I modify the code and save it before running <code>cargo clippy</code>, no output.\nHowever, simply <code>touch</code>-ing the file, triggers Clippy to produce the linting.</p>\n\n<p>What am I doing wrong here? </p>\n"}, {"tags": ["rust", "lifetime", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545405348, "post_id": 53873375, "comment_id": 94620749, "body": "Please do not <a href=\"https://meta.stackoverflow.com/questions/253762/link-for-poor-or-ever-growing-questions-to-better-explain-why-people-stop-answer\">update your already-answered question to ask new questions</a>. Instead, take the time to create an improved <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, ask a new question, explain how the two questions differ, and potentially link between them."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1545398106, "last_edit_date": 1545398106, "creation_date": 1545327956, "answer_id": 53873693, "question_id": 53873375, "link": "https://stackoverflow.com/questions/53873375/spawning-tasks-with-non-static-lifetimes-with-tokio-0-1-x/53873693#53873693", "title": "Spawning tasks with non-static lifetimes with tokio 0.1.x", "body": "<p>In a single-threaded program, you don't need to use <code>Arc</code>; <code>Rc</code> is sufficient:</p>\n\n<pre><code>use std::{rc::Rc, cell::Cell};\n\nstruct Client {\n    handle: Handle,\n    data: Rc&lt;Cell&lt;usize&gt;&gt;,\n}\n\nimpl Client {\n    fn update_data(&amp;mut self) {\n        let data = Rc::clone(&amp;self.data);\n        self.handle.spawn(future::ok(()).and_then(move |_x| {\n            data.set(data.get() + 1);\n            future::ok(())\n        }));\n    }\n}\n</code></pre>\n\n<p>The point is that you no longer have to worry about the lifetime because each clone of the <code>Rc</code> acts as if it owns the data, rather than accessing it via a reference to <code>self</code>. The inner <code>Cell</code> (or <code>RefCell</code> for non-<code>Copy</code> types) is needed because the <code>Rc</code> can't be dereferenced mutably, since it has been cloned.</p>\n\n<hr>\n\n<p>The <code>spawn</code> method of <code>tokio::runtime::current_thread::Handle</code> requires that the future is <code>Send</code>, which is what is causing the problem in the update to your question. There is an explanation (of sorts) for why this is the case in <a href=\"https://github.com/tokio-rs/tokio/issues/744\" rel=\"nofollow noreferrer\">this Tokio Github issue</a>.</p>\n\n<p>You can use <code>tokio::runtime::current_thread::spawn</code> instead of the method of <code>Handle</code>, which will always run the future in the current thread, and does <em>not</em> require that the future is <code>Send</code>. You can replace <code>self.handle.spawn</code> in the code above and it will work just fine.</p>\n\n<p>If you need to use the method on <code>Handle</code> then you will also need to resort to <code>Arc</code> and <code>Mutex</code> (or <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\"><code>RwLock</code></a>) in order to satisfy the <code>Send</code> requirement:</p>\n\n<pre><code>use std::sync::{Mutex, Arc};\n\nstruct Client {\n    handle: Handle,\n    data: Arc&lt;Mutex&lt;usize&gt;&gt;,\n}\n\nimpl Client {\n    fn update_data(&amp;mut self) {\n        let data = Arc::clone(&amp;self.data);\n        self.handle.spawn(future::ok(()).and_then(move |_x| {\n            *data.lock().unwrap() += 1;\n            future::ok(())\n        }));\n    }\n}\n</code></pre>\n\n<p>If your data is really a <code>usize</code>, you could also use <code>AtomicUsize</code> instead of <code>Mutex&lt;usize&gt;</code>, but I personally find it just as unwieldy to work with.</p>\n"}], "owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2213, "favorite_count": 0, "accepted_answer_id": 53873693, "answer_count": 1, "score": 6, "last_activity_date": 1608147641, "creation_date": 1545326529, "last_edit_date": 1608147641, "question_id": 53873375, "link": "https://stackoverflow.com/questions/53873375/spawning-tasks-with-non-static-lifetimes-with-tokio-0-1-x", "title": "Spawning tasks with non-static lifetimes with tokio 0.1.x", "body": "<p>I have a tokio core whose main task is running a websocket (client). When I receive some messages from the server, I want to execute a new task that will update some data. Below is a minimal failing example:</p>\n\n<pre><code>use tokio_core::reactor::{Core, Handle};\nuse futures::future::Future;\nuse futures::future;\n\nstruct Client {\n    handle: Handle,\n    data: usize,\n}\n\nimpl Client {\n    fn update_data(&amp;mut self) {\n        // spawn a new task that updates the data\n        self.handle.spawn(future::ok(()).and_then(|x| {\n            self.data += 1; // error here\n            future::ok(())\n        }));\n    }\n}\n\nfn main() {\n    let mut runtime = Core::new().unwrap();\n\n    let mut client = Client {\n        handle: runtime.handle(),\n        data: 0,\n    };\n\n    let task = future::ok::&lt;(), ()&gt;(()).and_then(|_| {\n        // under some conditions (omitted), we update the data\n        client.update_data();\n        future::ok::&lt;(), ()&gt;(())\n    });\n    runtime.run(task).unwrap();\n}\n</code></pre>\n\n<p>Which produces this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0477]: the type `futures::future::and_then::AndThen&lt;futures::future::result_::FutureResult&lt;(), ()&gt;, futures::future::result_::FutureResult&lt;(), ()&gt;, [closure@src/main.rs:13:51: 16:10 self:&amp;mut &amp;mut Client]&gt;` does not fulfill the required lifetime\n  --&gt; src/main.rs:13:21                                                                                                                                                                \n   |                                                                                                                                                                                   \n13 |         self.handle.spawn(future::ok(()).and_then(|x| {                                                                                                                           \n   |                     ^^^^^                                                                                                                                                         \n   |                                                                                                                                                                                   \n   = note: type must satisfy the static lifetime      \n</code></pre>\n\n<p>The problem is that new tasks that are spawned through a handle need to be static. The same issue is described <a href=\"https://users.rust-lang.org/t/ownership-issues-with-tokio-and-multiple-types-of-futures/10718\" rel=\"noreferrer\">here</a>. Sadly it is unclear to me how I can fix the issue. Even some attempts with and <code>Arc</code> and a <code>Mutex</code> (which really shouldn't be needed for a single-threaded application), I was unsuccessful.</p>\n\n<p>Since developments occur rather quickly in the tokio landscape, I am wondering what the current best solution is. Do you have any suggestions?</p>\n\n<h2><strong>edit</strong></h2>\n\n<p>The solution by <a href=\"https://stackoverflow.com/users/493729/peter-hall\">Peter Hall</a> works for the example above. Sadly when I built the failing example I changed tokio reactor, thinking they would be similar. Using <code>tokio::runtime::current_thread</code></p>\n\n<pre><code>use futures::future;\nuse futures::future::Future;\nuse futures::stream::Stream;\nuse std::cell::Cell;\nuse std::rc::Rc;\nuse tokio::runtime::current_thread::{Builder, Handle};\n\nstruct Client {\n    handle: Handle,\n    data: Rc&lt;Cell&lt;usize&gt;&gt;,\n}\n\nimpl Client {\n    fn update_data(&amp;mut self) {\n        // spawn a new task that updates the data\n        let mut data = Rc::clone(&amp;self.data);\n        self.handle.spawn(future::ok(()).and_then(move |_x| {\n            data.set(data.get() + 1);\n            future::ok(())\n        }));\n    }\n}\n\nfn main() {\n    // let mut runtime = Core::new().unwrap();\n\n    let mut runtime = Builder::new().build().unwrap();\n\n    let mut client = Client {\n        handle: runtime.handle(),\n        data: Rc::new(Cell::new(1)),\n    };\n\n    let task = future::ok::&lt;(), ()&gt;(()).and_then(|_| {\n        // under some conditions (omitted), we update the data\n        client.update_data();\n        future::ok::&lt;(), ()&gt;(())\n    });\n    runtime.block_on(task).unwrap();\n}\n</code></pre>\n\n<p>I obtain:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `std::rc::Rc&lt;std::cell::Cell&lt;usize&gt;&gt;` cannot be sent between threads safely\n--&gt; src/main.rs:17:21                                                         \n|                                                                            \n17 |         self.handle.spawn(future::ok(()).and_then(move |_x| {              \n|                     ^^^^^ `std::rc::Rc&lt;std::cell::Cell&lt;usize&gt;&gt;` cannot be sent between threads safely\n|                                                                            \n= help: within `futures::future::and_then::AndThen&lt;futures::future::result_::FutureResult&lt;(), ()&gt;, futures::future::result_::FutureResult&lt;(), ()&gt;, [closure@src/main.rs:17:51: 20:10 data:std::rc::Rc&lt;std::cell::Cell&lt;usize&gt;&gt;]&gt;`, the trait `std::marker::Send` is not implemented for `std::rc::Rc&lt;std::cell::Cell&lt;usize&gt;&gt;`\n= note: required because it appears within the type `[closure@src/main.rs:17:51: 20:10 data:std::rc::Rc&lt;std::cell::Cell&lt;usize&gt;&gt;]`\n= note: required because it appears within the type `futures::future::chain::Chain&lt;futures::future::result_::FutureResult&lt;(), ()&gt;, futures::future::result_::FutureResult&lt;(), ()&gt;, [closure@src/main.rs:17:51: 20:10 data:std::rc::Rc&lt;std::cell::Cell&lt;usize&gt;&gt;]&gt;`\n= note: required because it appears within the type `futures::future::and_then::AndThen&lt;futures::future::result_::FutureResult&lt;(), ()&gt;, futures::future::result_::FutureResult&lt;(), ()&gt;, [closure@src/main.rs:17:51: 20:10 data:std::rc::Rc&lt;std::cell::Cell&lt;usize&gt;&gt;]&gt;`\n</code></pre>\n\n<p>So it does seem like in this case I need an <code>Arc</code> and a <code>Mutex</code> even though the entire code is single-threaded?</p>\n"}, {"tags": ["docker", "debugging", "rust", "clion", "gdbserver"], "comments": [{"owner": {"reputation": 821, "user_id": 2475951, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/94af32507b7d4a944908b6e6929008ee?s=128&d=identicon&r=PG", "display_name": "Apollo", "link": "https://stackoverflow.com/users/2475951/apollo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1545329490, "post_id": 53871765, "comment_id": 94595180, "body": "If I run gdb inside the container, can I use my IDE <i>outside</i> the container to step through it? I&#39;ve been searching for &quot;existing solutions&quot; and have come up with a couple articles, but none have worked."}], "answers": [{"comments": [{"owner": {"reputation": 11593, "user_id": 2494803, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/58b4b1d0d8887426a51330a990936ac1?s=128&d=identicon&r=PG", "display_name": "bennofs", "link": "https://stackoverflow.com/users/2494803/bennofs"}, "edited": false, "score": 5, "creation_date": 1545781308, "post_id": 53874697, "comment_id": 94694170, "body": "Instead of <code>--privileged</code>, <code>--cap-add SYS_PTRACE</code> should work as well and give less privileges to the container."}], "tags": [], "owner": {"reputation": 821, "user_id": 2475951, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/94af32507b7d4a944908b6e6929008ee?s=128&d=identicon&r=PG", "display_name": "Apollo", "link": "https://stackoverflow.com/users/2475951/apollo"}, "is_accepted": true, "score": 2, "last_activity_date": 1545351221, "last_edit_date": 1545351221, "creation_date": 1545333187, "answer_id": 53874697, "question_id": 53871765, "link": "https://stackoverflow.com/questions/53871765/gdbserver-not-starting-or-listening-on-port-when-run-inside-of-docker/53874697#53874697", "title": "GDBServer not starting or listening on port when run inside of Docker", "body": "<p>I figured out how to run my Docker container as <code>--privileged</code> which allows <code>gdbserver</code> to run correctly. I also updated some of my CLion configs and got it working.</p>\n\n<p>The useful links:</p>\n\n<ul>\n<li><a href=\"https://visualgdb.com/tutorials/linux/docker/\" rel=\"nofollow noreferrer\">https://visualgdb.com/tutorials/linux/docker/</a></li>\n<li><a href=\"https://stackoverflow.com/questions/50773691/run-gdb-inside-docker-container-running-systemd\">Run gdb inside docker container running systemd</a></li>\n<li><a href=\"https://stackoverflow.com/questions/34856092/gdb-does-not-hit-any-breakpoints-when-i-run-it-from-inside-docker-container\">gdb does not hit any breakpoints when I run it from inside Docker container</a></li>\n<li><a href=\"https://github.com/mdklatt/clion-remote\" rel=\"nofollow noreferrer\">https://github.com/mdklatt/clion-remote</a></li>\n</ul>\n\n<p>My updated docker command <code>docker run --rm -it -v $(pwd):/source -p 7777:7777 -e container=docker --privileged schickling/rust</code></p>\n\n<p>And my Run configuration:</p>\n\n<ul>\n<li>GDB: Bundled</li>\n<li>'target remote' args: tcp:localhost:7777</li>\n<li>Symbolfile: The local copy of my compiled binary (copied from Docker thanks to volumes)</li>\n<li>Sysroot: (blank)</li>\n<li>Pathmappings: The absolute path to my project directory in Docker, and the absolute path to the same project directory on my local machine (the same volume)</li>\n</ul>\n\n<p>Works like a charm.</p>\n"}], "owner": {"reputation": 821, "user_id": 2475951, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/94af32507b7d4a944908b6e6929008ee?s=128&d=identicon&r=PG", "display_name": "Apollo", "link": "https://stackoverflow.com/users/2475951/apollo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1883, "favorite_count": 5, "accepted_answer_id": 53874697, "answer_count": 1, "score": 3, "last_activity_date": 1545351221, "creation_date": 1545320464, "last_edit_date": 1545322611, "question_id": 53871765, "link": "https://stackoverflow.com/questions/53871765/gdbserver-not-starting-or-listening-on-port-when-run-inside-of-docker", "title": "GDBServer not starting or listening on port when run inside of Docker", "body": "<p>I am trying to compile a \"hello world\" Rust program inside a Docker container and then remotely debug it using GDBServer and CLion, but I don't think <code>gdbserver</code> is starting correctly. When I start it, I don't get the \"process started\" and \"listening on port...\" messages I expect; I get nothing.</p>\n\n<p>I have successfully done this with a Raspberry Pi on my home network, but can't get it to work when using Docker.</p>\n\n<p>My ultimate goal is to deploy this Docker container on a Digital Ocean droplet and debug remotely from my local machine. For now, I've got Docker running on the local machine.</p>\n\n<p>I am working on a Mac (Mojave), running Docker (v18.09), and spinning up a Docker container that is <a href=\"https://github.com/schickling/dockerfiles/tree/master/rust\" rel=\"nofollow noreferrer\">an image built from Debian with Rust and <code>gdbserver</code> installed</a>. GDBServer and Rust are installed by:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code># install curl (needed to install rust)\napt-get update &amp;&amp; apt-get install -y curl gdb g++-multilib lib32stdc++6 libssl-dev libncurses5-dev\n\n# install rust + cargo nightly\ncurl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly\n</code></pre>\n\n<p>I start the container with <code>docker run --rm -it -v $(pwd):/source -p 7777:7777 schickling/rust</code> which starts up <code>bash</code> by default.</p>\n\n<p>Once in the container, I compile the Rust program using <code>rustc -g -o ./program ./src/main.rs</code> which outputs a single file: <code>program</code>. I can run the program fine (it only outputs <code>Hello World</code>).</p>\n\n<p>When I run <code>gdbserver localhost:7777 ./program</code> inside Docker, the terminal just hangs. I've let it sit for 20 minutes. I can't connect to it from CLion, and even <code>ping</code> doesn't work from my Mac. I've tried adding the <code>--debug</code> flag which outputs <code>my_waitpid (11, 0x0)</code> and then hangs. I've also tried <code>:7777</code>, <code>127.0.0.1:7777</code>, and <code>host:7777</code>. I've tried several different ports.</p>\n\n<p>I'm not sure where my problem is. It may be that GDBServer <em>is</em> running and the issue is in my CLion setup, but I doubt it. I have path mappings setup and <code>target remote args</code> is <code>tcp:127.0.0.1:7777</code>. I just get <code>Connection closed</code>. Symbol File and Sys Root are empty, but that has worked in the past with my Raspberry Pi.</p>\n"}, {"tags": ["loops", "rust", "borrow-checker", "mutability"], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 7, "last_activity_date": 1545321186, "creation_date": 1545321186, "answer_id": 53871984, "question_id": 53871579, "link": "https://stackoverflow.com/questions/53871579/passing-an-immutable-reference-when-a-mutable-reference-exists/53871984#53871984", "title": "Passing an immutable reference when a mutable reference exists", "body": "<p>A solution to avoid borrow the array for the iteration would be to use indexes:</p>\n\n<pre><code>fn calculate_neighbors(grid: &amp;mut [Point]) {\n    for i in 0..grid.len() {\n        grid[i].x = nonsense_calc(grid);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 907, "user_id": 2515526, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/cc2475efe2a90c898afa1efc62c57467?s=128&d=identicon&r=PG", "display_name": "tverghis", "link": "https://stackoverflow.com/users/2515526/tverghis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 374, "favorite_count": 0, "accepted_answer_id": 53871984, "answer_count": 1, "score": 9, "last_activity_date": 1545333474, "creation_date": 1545319744, "last_edit_date": 1545333474, "question_id": 53871579, "link": "https://stackoverflow.com/questions/53871579/passing-an-immutable-reference-when-a-mutable-reference-exists", "title": "Passing an immutable reference when a mutable reference exists", "body": "<p>I have a <code>for</code> loop that iterates over a slice of <code>Point</code> structs. The <code>Point</code>s will have some fields modified in the loop, so the function containing the loop requires a mutable reference to the slice.</p>\n\n<p>The problem arises when I need to pass a (immutable) reference pointing to the slice to a function within the for loop that iterates over the mutable reference:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let mut grid = vec![];\n\n    grid.push(Point { x: 10, y: 10 });\n    grid.push(Point { x: -1, y: 7 });\n\n    calculate_neighbors(&amp;mut grid);\n}\n\nfn calculate_neighbors(grid: &amp;mut [Point]) {\n    for pt in grid.iter_mut() {\n        pt.x = nonsense_calc(grid);\n    }\n}\n\n#[allow(unused_variables)]\nfn nonsense_calc(grid: &amp;[Point]) -&gt; i32 {\n    unimplemented!();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=405e1b6998dd61365ca487584206b6b7\" rel=\"noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*grid` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:18:30\n   |\n17 |     for pt in grid.iter_mut() {\n   |               ---------------\n   |               |\n   |               mutable borrow occurs here\n   |               mutable borrow used here, in later iteration of loop\n18 |         pt.x = nonsense_calc(grid);\n   |                              ^^^^ immutable borrow occurs here\n</code></pre>\n\n<p>The compiler complains that <code>grid</code> cannot be borrowed as immutable, because a mutable borrow already exists. This is correct, and I can see the problem it is trying to prevent, but how do I achieve what I need to do? Ideally, I do not have to create a copy of the <code>grid</code>, as this can be expensive.</p>\n"}, {"tags": ["rust", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545308496, "post_id": 53868530, "comment_id": 94584143, "body": "Please provide a <a href=\"https://stackoverflow.com/help/mcve\">minimal, complete, verifable example</a> of the problem you have. Remove every dependecy that is not absolutly needed from the code (e.g. structs or enums). Please also read the <a href=\"https://stackoverflow.com/tags/rust/info\">mcve related advices for rust</a>."}, {"owner": {"reputation": 3448, "user_id": 2154839, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/79c9780d30d201ab911ae86c74f71cf5?s=128&d=identicon&r=PG", "display_name": "Georgi-it", "link": "https://stackoverflow.com/users/2154839/georgi-it"}, "edited": false, "score": 0, "creation_date": 1545309976, "post_id": 53868530, "comment_id": 94584923, "body": "There is too much code missing, but I think the problem might be here ``` let ci_comparer = UniCase::new(column.name.as_str());                 match parsed_line.kvps.get(&amp;ci_comparer) { ```  Your UniCase contains a reference from the column, so the then tells you that you cannot return a dangling reference. But that&#39;s just a guess.  Provide full code example please."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1545317172, "post_id": 53868530, "comment_id": 94588877, "body": "Both <code>Cow&lt;&#39;t, str&gt;</code> and <code>UniCase&lt;&amp;&#39;t str&gt;</code> prevent you from writing this function, because you can&#39;t get a <code>&amp;&#39;t str</code> from either of them. The <code>Cow</code> problem is inherent to <code>Cow</code>, but I feel that Unicase&#39;s API is more awkward than it needs to be in this case and that you could work around it if you were sufficiently determined."}], "answers": [{"comments": [{"owner": {"reputation": 875, "user_id": 1313057, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5f3e5fe7d6a4062ad188336e06f1cb78?s=128&d=identicon&r=PG", "display_name": "Philip Daniels", "link": "https://stackoverflow.com/users/1313057/philip-daniels"}, "edited": false, "score": 1, "creation_date": 1545316534, "post_id": 53870332, "comment_id": 94588505, "body": "Thank you! That fixed it. Your explanation also helped me with thinking about lifetimes in a more comprehending way than I am at the moment."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 4, "last_activity_date": 1545315139, "creation_date": 1545315139, "answer_id": 53870332, "question_id": 53868530, "link": "https://stackoverflow.com/questions/53868530/lifetime-problem-when-working-code-is-extracted-into-a-separate-function/53870332#53870332", "title": "Lifetime problem when working code is extracted into a separate function", "body": "<p>The call for <code>make_output_record</code> from <code>process_line</code> will infer the lifetime parameter of <code>make_output_record</code>. </p>\n\n<pre><code>pub fn make_output_record&lt;'p&gt;(parsed_line: &amp;'p ParsedLine, columns: &amp;'p [Column]) -&gt; Vec&lt;&amp;'p str&gt; {\n</code></pre>\n\n<p>This means <code>'p</code> is a lifetime which the owner will be alive in <code>process_line</code>'s scope(because of the inference). According to your code <code>parsed_line</code> and <code>columns</code>lives in <code>'p</code>. The <code>'p</code> is the common lifetime for your return value and the arguments. That's why your code was not working because 'p, 't ,'c is not common for arguments and your return value.</p>\n\n<p>I simplified your code in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e6a04588b27444936add2986ab24f08a\" rel=\"nofollow noreferrer\">here</a>, this is the working version, you can have your error back if you add other life time parameters back to <code>make_output_record</code>.</p>\n"}], "owner": {"reputation": 875, "user_id": 1313057, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5f3e5fe7d6a4062ad188336e06f1cb78?s=128&d=identicon&r=PG", "display_name": "Philip Daniels", "link": "https://stackoverflow.com/users/1313057/philip-daniels"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 53870332, "answer_count": 1, "score": 0, "last_activity_date": 1545330098, "creation_date": 1545308173, "last_edit_date": 1545330098, "question_id": 53868530, "link": "https://stackoverflow.com/questions/53868530/lifetime-problem-when-working-code-is-extracted-into-a-separate-function", "title": "Lifetime problem when working code is extracted into a separate function", "body": "<p>I'm writing a program to extract information from log files (which are in text format). The overall flow is</p>\n\n<ol>\n<li>Read the file line-by-line into a <code>String</code></li>\n<li>Create a <code>ParsedLine</code> structure which borrows several string slices from that line (some using <code>Cow</code>)</li>\n<li>Use the <code>ParsedLine</code> to write a CSV record.</li>\n</ol>\n\n<p>This has been going very well so far, but I have run into a problem I do not understand, I think it is with lifetimes or data-flow analysis. The problem is with a small refactor I am trying to make.</p>\n\n<p><strong>I have this function which works:</strong></p>\n\n<pre><code>fn process_line(columns: &amp;[Column], line: String,  writer: &amp;mut Writer&lt;File&gt;) {\n    let parsed_line = ParsedLine::new(&amp;line);\n\n    if parsed_line.is_err() {\n        let data = vec![\"\"];\n        writer.write_record(&amp;data).expect(\"Writing a CSV record should always succeed.\");\n        return;\n    }\n\n    let parsed_line = parsed_line.unwrap();\n    // let data = output::make_output_record(&amp;parsed_line, columns);\n\n    // The below code works. But if I try to pull it out into a separate function\n    // Rust will not compile it.\n    let mut data = Vec::new();\n\n    for column in columns {\n        match column.name.as_str() {\n            config::LOG_DATE =&gt; data.push(parsed_line.log_date),\n            config::LOG_LEVEL =&gt; data.push(parsed_line.log_level),\n            config::MESSAGE =&gt; data.push(&amp;parsed_line.message),\n\n            _ =&gt; {\n                let ci_comparer = UniCase::new(column.name.as_str());\n                match parsed_line.kvps.get(&amp;ci_comparer) {\n                    Some(val) =&gt; {\n                        let x = val.as_ref();\n                        data.push(x);\n                    },\n                    None =&gt; data.push(\"\"),\n                }\n            },\n        }\n    }\n\n    writer.write_record(&amp;data).expect(\"Writing a CSV record should always succeed.\");\n}\n</code></pre>\n\n<p><strong>But I want to pull out the bit of code that constructs <code>data</code> into a separate function so that I can test it more easily.</strong> Here's the function:</p>\n\n<pre><code>pub fn make_output_record&lt;'p, 't, 'c&gt;(parsed_line: &amp;'p ParsedLine&lt;'t&gt;, columns: &amp;'c [Column]) -&gt; Vec&lt;&amp;'t str&gt; {\n    let mut data = Vec::new();\n\n    for column in columns {\n        match column.name.as_str() {\n            config::LOG_DATE =&gt; data.push(parsed_line.log_date),\n            config::LOG_LEVEL =&gt; data.push(parsed_line.log_level),\n            config::MESSAGE =&gt; data.push(&amp;parsed_line.message),\n\n            _ =&gt; {\n                let ci_comparer = UniCase::new(column.name.as_str());\n                match parsed_line.kvps.get(&amp;ci_comparer) {\n                    // This is the problem here. To make it explicit:\n                    //     val is a \"&amp;'t Cow&lt;'t, str&gt;\" and x is \"&amp;'t str\"\n                    Some(val) =&gt; {\n                        let x = val.as_ref();\n                        data.push(x);\n                    },\n                    None =&gt; data.push(\"\"),\n                }\n            },\n        }\n    }\n\n    data\n}\n</code></pre>\n\n<p><strong>And the error I get and do not understand is:</strong></p>\n\n<pre><code>error[E0623]: lifetime mismatch                                                                                                                                                                                      \n--&gt; src/main.rs:201:5                                                                                                                                                                                             \n    |                                                                                                                                                                                                                \n177 | pub fn make_output_record&lt;'p, 't, 'c&gt;(parsed_line: &amp;'p ParsedLine&lt;'t&gt;, columns: &amp;'c [Column]) -&gt; Vec&lt;&amp;'t str&gt; {                                                                                                \n    |                                                                                 ------------     ------------                                                                                                  \n    |                                                                                 |                                                                                                                              \n    |                                                                                 this parameter and the return type are declared with different lifetimes...                                                    \n...                                                                                                                                                                                                                  \n201 |     data                                                                                                                                                                                                       \n    |     ^^^^ ...but data from `columns` is returned here                                                                                                                                                           \n</code></pre>\n\n<p>The compiler thinks that the returned vector contains information from <code>Columns</code>, but <code>Columns</code> is actually only used to get the name of the column, which is then used to lookup a value in the <code>kvps</code> HashMap (<code>UniCase</code> is used to make the lookup case-insensitive). If a value is found, we add the <code>&amp;str</code> to <code>data</code>.</p>\n\n<p>So I don't understand why the compiler thinks that something from <code>Columns</code> ends up in <code>data</code>, because to my mind <code>Columns</code> is just a bit of metadata used to drive the final contents of <code>data</code>, but does not in and of itself appear in <code>data</code>. Once the <code>kvps</code> lookup is done and we have the value <code>Columns</code> might as well not exist.</p>\n\n<p>I've tried various ways of fixing this (including adding explicit lifetimes to everything, removing some lifetimes, and adding various outlives lifetime specifications) but no combination appears to be able to tell the compiler that <code>Columns</code> is not used in <code>data</code>.</p>\n\n<p>For reference, here is the definition of <code>ParsedLine</code>:</p>\n\n<pre><code>#[derive(Debug, Default, PartialEq, Eq)]\npub struct ParsedLine&lt;'t&gt; {\n    pub line: &amp;'t str,\n    pub log_date: &amp;'t str,\n    pub log_level: &amp;'t str,\n    pub message: Cow&lt;'t, str&gt;,\n    pub kvps: HashMap&lt;UniCase&lt;&amp;'t str&gt;, Cow&lt;'t, str&gt;&gt;\n}\n</code></pre>\n\n<p>Note that I am resisting getting rid of the <code>Cows</code>: I assume this would fix the problem, but the number of String allocations would probably rise by a factor of 20 and I'd like to avoid that. The current program is impressively fast!</p>\n\n<p>I suspect the problem is actually with that <code>UniCase&lt;&amp;'t str&gt;</code> and I need to give the key it's own lifetime. Not sure how though.</p>\n\n<p><strong>So my question is</strong></p>\n\n<ul>\n<li>Why can't I easily move this code into a new function?</li>\n<li>How do I fix it?</li>\n</ul>\n\n<p>I appreciate this is a rather long question. It may be easier to fiddle with the code locally. It is on Github and the error should be reproducable with:</p>\n\n<pre><code>git clone https://github.com/PhilipDaniels/log-file-processor\ngit checkout 80158b3\ncargo build\n</code></pre>\n"}, {"tags": ["struct", "rust", "public", "rust-macros"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1545300726, "post_id": 53866508, "comment_id": 94580366, "body": "Let&#39;s be clear: you want a struct declaration without the first column precising what&#39;s public ? A macro can probably insert those modifiers but other readers of your code will have to learn your own special syntax to understand the whole is public..."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1545300755, "post_id": 53866508, "comment_id": 94580386, "body": "So <code>pub Foo { pub a: u32, pub b: u32 }</code> is not what you are looking for?"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1545301271, "post_id": 53866508, "comment_id": 94580628, "body": "Imo, specifying pub modifiers are good for the understandability of the code and should not be considered as boilerplate code. But what you want can be achieved via writing your own custom <code>#[derive(make_struct_pub)]</code> keyword."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 8, "creation_date": 1545301962, "post_id": 53866508, "comment_id": 94580966, "body": "You are solving the wrong problem. Just write <code>pub</code> in front of each field and be done with it. Repetition of code is bad because later changes to the code are error-prone \u2013 you may miss one of the repetitions. This is not an issue for writing <code>pub</code> in front of each field name. Even if you decide to change this later, there is little risk of getting it wrong."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1545303676, "post_id": 53866508, "comment_id": 94581843, "body": "Most of the comments so far are...unhelpful. @SvenMarnach macros exist to extend the language and keep code DRY. @Denys Seguret sorry, but I won&#39;t have you read my code - wouldn&#39;t wish it on my enemies. If you can help me write that macro, I would appreciate that. @Akiner, can you help me write a derive like that? A <code>pub_struct!</code> macro would be cool too."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 2, "creation_date": 1545307219, "post_id": 53866508, "comment_id": 94583513, "body": "@PetrusTheron, writing such a derive can be a crate sized work. To make an inspiration about the generation of such methods you can take a look at <a href=\"https://github.com/Hoverbear/getset\" rel=\"nofollow noreferrer\">getset crate</a> which is able to generate public getters and setters for you."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1545307427, "post_id": 53866508, "comment_id": 94583602, "body": "@AkinerAlkan You don&#39;t need procedural macros for this \u2013 macro by example will do just fine, and it&#39;s not difficult to implement. I just think it&#39;s <i>wrong</i> to do so, so I won&#39;t spend my time on it."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1545309963, "post_id": 53866508, "comment_id": 94584918, "body": "I have RSI and it hurts when I type. I&#39;m asking to save my wrists on big public structs. @SvenMarnach if you believe your view is correct and helpful, consider posting it as an answer. I say that the comments so far are unhelpful because they assume my intent (&quot;solving the wrong problem&quot;) or question my competence (abusing or overusing macros). Rust isn&#39;t the first language to have macros, y&#39;know? I believe the Rust community can benefit from posting empathetic answers rather than downvoting beginner questions just because they disagree with the premise."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 4, "creation_date": 1545311838, "post_id": 53866508, "comment_id": 94585790, "body": "@PetrusTheron You can use multiple cursors or keyboard macros in your editor to easily add <code>pub</code> in front of each line, which I consider the right solution. Using macros here makes the code harder to read for people who are new to the codebase, which I believe is the reason why people are downvoting. If you are determined to use macros anyway, you can start with a rule like <code>(struct $name:ident { $($field:ident : $type:ty,)* }) =&gt; { pub struct $name { $(pub $field: $type,)* } }</code> and refine it as needed to support generic parameters and field attributes."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1545312754, "post_id": 53866508, "comment_id": 94586340, "body": "Thanks, @SvenMarnach :) I got it working. See answer I posted. Wish I knew how to move the derive calls out of there, unfortunately <code>derive may only be applied to structs, enums and unions</code>"}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 4, "creation_date": 1545314350, "post_id": 53869723, "comment_id": 94587233, "body": "<a href=\"https://rust-lang-nursery.github.io/api-guidelines/macros.html#input-syntax-is-evocative-of-the-output-c-evocative\" rel=\"nofollow noreferrer\">Rust&#39;s API guidelines recommend including the <code>struct</code> keyword in the macro syntax</a>. This would also allow for <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=61504b1b45811535371c28e8b55b7aae\" rel=\"nofollow noreferrer\">cleaner handling of the derive macros</a>."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1545314383, "post_id": 53869723, "comment_id": 94587255, "body": "@SvenMarnach so maybe something like <code>pub! struct {a: i32, ...}</code>?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1545314786, "post_id": 53869723, "comment_id": 94587463, "body": "I don&#39;t think that&#39;s possible \u2013 there must be some kind of opening delimiter after the macro name."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1545322293, "post_id": 53869723, "comment_id": 94591747, "body": "@SvenMarnach you can remove the hardcoding of <code>derive</code>. See <a href=\"https://stackoverflow.com/q/33999341/155423\">Generating documentation in macros</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545322393, "post_id": 53869723, "comment_id": 94591790, "body": "@Shepmaster Please see the playground link in my comment above."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1545322656, "post_id": 53869723, "comment_id": 94591941, "body": "@SvenMarnach right... that&#39;s what I read and it hardcodes the word <code>derive</code>. I&#39;m pointing out you don&#39;t need to do that. In addition, you expand the macro to support <i>any</i> attribute."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1545337238, "post_id": 53869723, "comment_id": 94598224, "body": "@Shepmaster Got it \u2013 I thought you meant the hard-coded derive in the answer. Sure, the solution could be made far more generic \u2013 it could support generic type parameters, field attributes and a visibility specifier for the struct itself, but I tried to keep it simple."}], "tags": [], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "is_accepted": true, "score": 10, "last_activity_date": 1545322236, "last_edit_date": 1545322236, "creation_date": 1545312656, "answer_id": 53869723, "question_id": 53866508, "link": "https://stackoverflow.com/questions/53866508/how-to-make-a-public-struct-where-all-fields-are-public-without-repeating-pub/53869723#53869723", "title": "How to make a public struct where all fields are public without repeating `pub` for every field?", "body": "<pre><code>macro_rules! pub_struct {\n    ($name:ident {$($field:ident: $t:ty,)*}) =&gt; {\n        #[derive(Debug, Clone, PartialEq)] // ewww\n        pub struct $name {\n            $(pub $field: $t),*\n        }\n    }\n}\n</code></pre>\n\n<p>Unfortunately, <code>derive</code> may only be applied to structs, enums and unions, so I don't know how to hoist those to the caller.</p>\n\n<h3>Usage:</h3>\n\n<pre><code>pub_struct!(Foo {\n    a: i32,\n    b: f64,\n});\n</code></pre>\n\n<p>It would be nice if I didn't need the parentheses and semicolon, i.e. if Rust supported reader macros.</p>\n"}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4455, "favorite_count": 0, "accepted_answer_id": 53869723, "answer_count": 1, "score": 9, "last_activity_date": 1545330129, "creation_date": 1545300673, "last_edit_date": 1545330129, "question_id": 53866508, "link": "https://stackoverflow.com/questions/53866508/how-to-make-a-public-struct-where-all-fields-are-public-without-repeating-pub", "title": "How to make a public struct where all fields are public without repeating `pub` for every field?", "body": "<p>How can I define a public struct in Rust where all the fields are public without having to repeat <code>pub</code> modifier in front of every field?</p>\n\n<p>A <code>pub_struct</code> macro would be ideal:</p>\n\n<pre><code>pub_struct! Foo {\n    a: i32,\n    b: f64,\n    // ...\n}\n</code></pre>\n\n<p>which would be equivalent to:</p>\n\n<pre><code>pub struct Foo {\n    pub a: i32,\n    pub b: f64,\n    //...\n}\n</code></pre>\n"}, {"tags": ["rust", "nom"], "comments": [{"owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "edited": false, "score": 0, "creation_date": 1545296329, "post_id": 53865127, "comment_id": 94577932, "body": "Upgrade to nom4 if you didn&#39;t already, and use CompleteStr. <a href=\"https://github.com/Geal/nom/blob/master/doc/upgrading_to_nom_4.md#dealing-with-incomplete-usage\" rel=\"nofollow noreferrer\">github.com/Geal/nom/blob/master/doc/&hellip;</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1545334603, "post_id": 53865127, "comment_id": 94597260, "body": "I had a similar issue which I solved by just adding a <code>&quot;\\n&quot;</code> at the end of the input. I had some difficulty getting it to compile with <code>CompleteStr</code> or <code>CompleteByteSlice</code> and that was sufficient for my needs."}, {"owner": {"reputation": 1171, "user_id": 2430915, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fa2d09b09a5eaf435ffdf18206a3a6b4?s=128&d=identicon&r=PG", "display_name": "BBS", "link": "https://stackoverflow.com/users/2430915/bbs"}, "edited": false, "score": 0, "creation_date": 1545355186, "post_id": 53865127, "comment_id": 94603430, "body": "Similarly to Peter Hall I&#39;m having no success with CompleteStr or CompleteByteSlice, but adding a newline character at the end of the input is enough to do the trick."}, {"owner": {"reputation": 1171, "user_id": 2430915, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fa2d09b09a5eaf435ffdf18206a3a6b4?s=128&d=identicon&r=PG", "display_name": "BBS", "link": "https://stackoverflow.com/users/2430915/bbs"}, "edited": false, "score": 0, "creation_date": 1545370043, "post_id": 53865127, "comment_id": 94606106, "body": "Alright, I got to the point where I did need to use nom properly with ComleteByteSlice. I had some trouble realizing that child parsers also needed to use CompleteByteSlice, which seems obvious now, but in the moment never occurred to me."}], "owner": {"reputation": 1171, "user_id": 2430915, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fa2d09b09a5eaf435ffdf18206a3a6b4?s=128&d=identicon&r=PG", "display_name": "BBS", "link": "https://stackoverflow.com/users/2430915/bbs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1545295466, "creation_date": 1545295466, "question_id": 53865127, "link": "https://stackoverflow.com/questions/53865127/combining-macros-with-the-nom-library", "title": "Combining macros with the nom library", "body": "<p>I am attempting to use the nom library to parse a <a href=\"https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation\" rel=\"nofollow noreferrer\">FEN String</a>. I have used an <code>alt!</code> macro to combine three smaller combinators that operate on a single character. Now I would like to use use that same combinator to parse a string of characters into a vector.</p>\n\n<p>I am trying to use the <code>many1!</code> combinator to extract 1 or more fen_char. This is what I assumed would work, and I have tried some other variations non of which seemed to work. </p>\n\n<pre><code>named!(fen_chars&lt;Vec&lt;FENChar&gt;&gt;, many1!(fen_char));\nlet (_, x) = fen_chars(b\"RNBQKBNR\").unwrap();\n\nassert_eq!(x.len(), 8);\nassert_eq!(x[0], FENChar::Piece(Piece::Rook, Color::White));\n</code></pre>\n\n<p>When I run this I receive a failed option with value <code>Incomplete(Size(1))</code>. I'm not certain what to make of that. </p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1545298577, "post_id": 53863573, "comment_id": 94579151, "body": "You might also be interested in <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#method.split_whitespace\" rel=\"nofollow noreferrer\"><code>str::split_whitespace</code></a>. This doesn&#39;t do the same as your code, but depending on what you want to achieve, it might be sufficient."}], "answers": [{"comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1546526034, "post_id": 53863991, "comment_id": 94884884, "body": "@joydeep bhattacharjee , if this is answer is exactly what you were asking for, could you please approve it as an answer to help the community"}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 5, "last_activity_date": 1545292057, "last_edit_date": 1545292057, "creation_date": 1545290126, "answer_id": 53863991, "question_id": 53863573, "link": "https://stackoverflow.com/questions/53863573/unable-to-use-a-regex-to-extract-words-no-method-to-string-for-match/53863991#53863991", "title": "Unable to use a regex to extract words: no method to_string for Match", "body": "<p>To get <code>&amp;str</code> from the <code>Match</code> you can use this:</p>\n\n<pre><code>let my_str = cap.as_str(); // returns &amp;str\n</code></pre>\n\n<p>If you really want to get a <code>String</code>, you can call <code>to_string()</code> on it:</p>\n\n<pre><code>let my_string = my_str.to_string(); // returns String\n</code></pre>\n\n<p>Also, you can take a look at the <a href=\"https://docs.rs/regex/1.1.0/regex/struct.Match.html#method.as_str\" rel=\"nofollow noreferrer\"><code>Match</code> documentation</a>.</p>\n"}], "owner": {"reputation": 1069, "user_id": 5417164, "user_type": "registered", "accept_rate": 22, "profile_image": "https://www.gravatar.com/avatar/9cb24e9b54605c9f72cf40cf425fc814?s=128&d=identicon&r=PG&f=1", "display_name": "joydeep bhattacharjee", "link": "https://stackoverflow.com/users/5417164/joydeep-bhattacharjee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 353, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1545321707, "creation_date": 1545287869, "last_edit_date": 1545321707, "question_id": 53863573, "link": "https://stackoverflow.com/questions/53863573/unable-to-use-a-regex-to-extract-words-no-method-to-string-for-match", "title": "Unable to use a regex to extract words: no method to_string for Match", "body": "<p>I am trying to loop over a sentence and get the words using a regex:</p>\n\n<pre><code>use regex::Regex; // 1.0.6\n\nfn example() {\n    let re = Regex::new(r\"\\w+\").unwrap();\n    let sample_text = \"This is me me.\";\n    for caps in re.captures_iter(&amp;sample_text) {\n        if let Some(cap) = caps.get(0) {\n            let word = cap.to_string();\n        }\n    }\n}\n</code></pre>\n\n<p>I am getting the below error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `to_string` found for type `regex::re_unicode::Match&lt;'_&gt;` in the current scope\n --&gt; src/lib.rs:8:28\n  |\n8 |             let word = cap.to_string();\n  |                            ^^^^^^^^^\n  |\n  = note: the method `to_string` exists but the following trait bounds were not satisfied:\n          `regex::re_unicode::Match&lt;'_&gt; : std::string::ToString`\n</code></pre>\n\n<p>What am I missing?</p>\n"}, {"tags": ["design-patterns", "rust", "composition"], "comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1545290461, "post_id": 53862974, "comment_id": 94575553, "body": "@hellow Please do not vote to close with a custom reason that &quot;it belongs on Code Review&quot;. Nothing in the Stack Overflow rules justifies such a custom reason, and sloppy reasoning perpetuates inappropriate referrals. Not all questions about analyzing code are off-topic on Stack Overflow, and not all code review requests are on-topic on Code Review. Instead, vote to close as too broad or primarily opinion-based."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1545290939, "post_id": 53862974, "comment_id": 94575729, "body": "@Zeta there are options for &quot;it belongs to another stackexchange webpage&quot;, but codereview is none of them, so I thought I just use a custom reason for flagging it as such."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1545291259, "post_id": 53862974, "comment_id": 94575846, "body": "@hellow Yeah, that&#39;s <a href=\"https://meta.stackexchange.com/questions/251568/ui-suggests-that-better-fit-elsewhere-is-a-valid-reason-for-closure\">a known problem</a>. That being said: while the code could be on-topic on CR, the question as-is is currently off-topic on CR, as the required context is missing. <a href=\"https://codereview.meta.stackexchange.com/questions/5777/a-guide-to-code-review-for-stack-overflow-users\">Code Review has a full guide</a> for those cases, in case you&#39;re interested in some explanations."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1545324157, "post_id": 53862974, "comment_id": 94592691, "body": "This question has been cross-posted <a href=\"https://users.rust-lang.org/t/best-way-to-refactor-this-code/23403/1\" rel=\"nofollow noreferrer\">to users.rust-lang.org</a>, which is a better place for this kind of open-ended problem."}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 1, "last_activity_date": 1545322906, "last_edit_date": 1545322906, "creation_date": 1545285461, "answer_id": 53863136, "question_id": 53862974, "link": "https://stackoverflow.com/questions/53862974/whats-the-best-way-to-refactor-my-code-to-implement-composition-in-rust/53863136#53863136", "title": "What&#39;s the best way to refactor my code to implement composition in Rust?", "body": "<p>There is no way to extend a struct, but you can put common properties into another struct and your struct can consist from these common structs. Common behaviors can be triggered via these common structs like <code>Point</code>.</p>\n\n<pre><code>#[derive(Default)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nstruct Shape {\n    point: Point,\n}\n\nstruct Circle {\n    point: Point,\n    radious: i32,\n}\n\nstruct Square {\n    point: Point,\n    width: i32,\n    height: i32,\n}\n\ntrait Advance {\n    fn advance(&amp;mut self);\n}\n\nimpl Advance for Point {\n    fn advance(&amp;mut self) {\n        self.x += 1;\n    }\n}\n\nfn main() {\n    let mut shape = Shape {\n        point: Point::default(),\n    };\n    let mut square = Square {\n        point: Point::default(),\n        width: 10,\n        height: 10,\n    };\n    let mut circle = Circle {\n        point: Point::default(),\n        radious: 5,\n    };\n\n    while shape.point.x &lt; 10 {\n        shape.point.advance();\n        circle.point.advance();\n        square.point.advance();\n        println!(\"shape {}\", shape.point.x);\n        println!(\"circle {}\", circle.point.x);\n        println!(\"square {}\", square.point.x);\n        println!(\"---------------------\");\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dbd1a2a5a091ce80a191be4351cdd490\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 427, "user_id": 3520890, "user_type": "registered", "accept_rate": 0, "profile_image": "https://graph.facebook.com/1167498460/picture?type=large", "display_name": "Werem", "link": "https://stackoverflow.com/users/3520890/werem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "closed_date": 1545359533, "answer_count": 1, "score": 4, "last_activity_date": 1545322906, "creation_date": 1545284401, "last_edit_date": 1545322843, "question_id": 53862974, "link": "https://stackoverflow.com/questions/53862974/whats-the-best-way-to-refactor-my-code-to-implement-composition-in-rust", "closed_reason": "Opinion-based", "title": "What&#39;s the best way to refactor my code to implement composition in Rust?", "body": "<p>The following has a lot of duplicated code. What's the best way to refactor it?</p>\n\n<p>I'm coming from JavaScript where I use composition to achieve the same result, but in Rust it seems to me that I have to reimplement a lot of code. </p>\n\n<p>I know there is a way using macros, but if the logic is more complex I'll end up with a large executable file since macros are inlined.</p>\n\n<pre><code>struct Shape {\n    x: i32,\n    y: i32,\n}\n\nstruct Circle {\n    x: i32,\n    y: i32,\n    radious: i32,\n}\n\nstruct Square {\n    x: i32,\n    y: i32,\n    width: i32,\n    height: i32,\n}\n\ntrait Advance {\n    fn advance(&amp;mut self);\n}\n\nimpl Advance for Shape {\n    fn advance(&amp;mut self) {\n        self.x += 1;\n    }\n}\n\nimpl Advance for Square {\n    fn advance(&amp;mut self) {\n        self.x += 1;\n    }\n}\n\nimpl Advance for Circle {\n    fn advance(&amp;mut self) {\n        self.x += 1;\n    }\n}\n\nfn main() {\n    println!(\"Hello World!!\");\n\n    let mut shape = Shape { x: 0, y: 0 };\n    let mut square = Square {\n        x: 0,\n        y: 0,\n        width: 10,\n        height: 10,\n    };\n    let mut circle = Circle {\n        x: 0,\n        y: 0,\n        radious: 5,\n    };\n\n    while shape.x &lt; 10 {\n        shape.advance();\n        circle.advance();\n        square.advance();\n        println!(\"shape {}\", shape.x);\n        println!(\"circle {}\", circle.x);\n        println!(\"square {}\", square.x);\n        println!(\"---------------------\");\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0a03dd49ae06ce83b5dd27c4343fb9f5\" rel=\"nofollow noreferrer\">playground</a> </p>\n"}]