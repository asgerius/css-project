[{"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563398144, "post_id": 57082842, "comment_id": 100691406, "body": "I think learn the basic, how tu return something from a function should be put in priority before trying to do ffi."}, {"owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563398495, "post_id": 57082842, "comment_id": 100691522, "body": "@Stargateur yes, indeed! Please have a look at my own answer to this post. I found the post you mentioned and it helped me! Thanks anyway!"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1563398773, "post_id": 57082842, "comment_id": 100691620, "body": "I found it because you found it, as you said yourself this solve your problem so it&#39;s very likely to be a good duplicate candidate. It&#39;s just to &quot;mark&quot; this question as close because a more general answer exist that future reader can directly read if they read your question."}, {"owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563398928, "post_id": 57082842, "comment_id": 100691676, "body": "Alright! Don&#39;t know if it&#39;s really a duplicate because the buzz-word here is void-Pointer. I&#39;m probably not the only person that searches for this instead of &quot;raw address&quot; - what do you think?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1563399259, "post_id": 57082842, "comment_id": 100691788, "body": "your question will not be removed, your answer will not be removed. Just we prevent future people to write an answer here instead we encourage people to write an answer on the duplicate (if needed). &quot;Duplicate questions are not necessarily bad; different descriptions of the same problem help future visitors to find the answers they&#39;re looking for.&quot; see <a href=\"https://meta.stackexchange.com/questions/10841/how-should-duplicate-questions-be-handled\" title=\"how should duplicate questions be handled\">meta.stackexchange.com/questions/10841/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "is_accepted": false, "score": 1, "last_activity_date": 1563396115, "creation_date": 1563396115, "answer_id": 57083797, "question_id": 57082842, "link": "https://stackoverflow.com/questions/57082842/invoke-libcc-void-pointer-as-function-in-rust-with-parameters/57083797#57083797", "title": "Invoke libc::c_void-Pointer as function in Rust with parameters", "body": "<p>I figured it out! Perhaps there is a better way but it works.</p>\n\n<p>The trick is to \"cast\" the void-Pointer to c-function-Type with <code>std::mem::transmute</code> since it won't work with <code>as</code></p>\n\n<pre><code>type LibCMallocT = fn(usize) -&gt; *mut libc::c_void;\n\n// C-Style string for symbol-name\nlet c_string = \"malloc\\0\".as_ptr() as *mut i8; // char array for libc\n// Void-Pointer to address of symbol\nlet real_malloc_addr: *mut libc::c_void = unsafe {libc::dlsym(libc::RTLD_NEXT, c_string)};\n// transmute: \"Reinterprets the bits of a value of one type as another type\"\n// Transform void-pointer-type to callable C-Function\nlet real_malloc: LibCMallocT = unsafe { std::mem::transmute(real_malloc_addr) }\n</code></pre>\n\n<p>When the shared object is build, one can verify that it works like this:\n<code>LD_PRELOAD=./target/debug/libmalloc_log_lib.so some-binary</code></p>\n\n<hr>\n\n<p><strong>My full code:</strong></p>\n\n<pre><code>extern crate libc;\n\nuse std::io::Write;\n\nconst MSG: &amp;str = \"HELLO WORLD\\n\";\n\ntype LibCMallocT = fn(usize) -&gt; *mut libc::c_void;\n\n#[no_mangle] // then \"malloc\" is the symbol name so that ELF-Files can find it (if this lib is preloaded)\npub extern fn malloc(bytes: usize) -&gt; *mut libc::c_void {\n    /// Disable logging aka return immediately the pointer from the real malloc (libc malloc)\n    static mut RETURN_IMMEDIATELY: bool = false;\n\n    // C-Style string for symbol-name\n    let c_string = \"malloc\\0\".as_ptr() as *mut i8; // char array for libc\n    // Void-Pointer to address of symbol\n    let real_malloc_addr: *mut libc::c_void = unsafe {libc::dlsym(libc::RTLD_NEXT, c_string)};\n    // transmute: \"Reinterprets the bits of a value of one type as another type\"\n    // Transform void-pointer-type to callable C-Function\n    let real_malloc: LibCMallocT = unsafe { std::mem::transmute(real_malloc_addr) };\n\n    unsafe {\n        if !RETURN_IMMEDIATELY {\n            // let's do logging and other stuff that potentially\n            // needs malloc() itself\n\n            // This Variable prevent infinite loops because 'std::io::stdout().write_all'\n            // also uses malloc itself\n\n            // TODO: Do proper synchronisazion\n            //  (lock whole method? thread_local variable?)\n            RETURN_IMMEDIATELY = true;\n            match std::io::stdout().write_all(MSG.as_bytes()) {\n                _ =&gt; ()\n            };\n            RETURN_IMMEDIATELY = false\n        }\n    }\n\n    (real_malloc)(bytes)\n}\n</code></pre>\n\n<hr>\n\n<p>PS: Thanks to <a href=\"https://stackoverflow.com/a/46134764/2891595\">https://stackoverflow.com/a/46134764/2891595</a> (After I googled a lot more I found the trick with transmute!)</p>\n"}], "owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 478, "favorite_count": 0, "closed_date": 1563399690, "answer_count": 1, "score": 1, "last_activity_date": 1563396115, "creation_date": 1563391334, "question_id": 57082842, "link": "https://stackoverflow.com/questions/57082842/invoke-libcc-void-pointer-as-function-in-rust-with-parameters", "closed_reason": "Duplicate", "title": "Invoke libc::c_void-Pointer as function in Rust with parameters", "body": "<p>Hello people of the internet,</p>\n\n<p>I'm struggeling to invoke a function that is stored in a <code>libc::c_void</code>-Pointer. I can't tell Rust that the pointer is invokable and I can't figure out how to.</p>\n\n<p>I want to translate this C++ Code</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>void * malloc(size_t size) {\n    static void *(*real_malloc)(size_t) = nullptr;\n    if (real_malloc == nullptr) {\n        real_malloc = reinterpret_cast&lt;void *(*)(size_t)&gt; (dlsym(RTLD_NEXT, \"malloc\"));\n    }\n    // do some logging stuff\n    void * ptr = real_malloc(size);\n    return ptr;\n}\n</code></pre>\n\n<p>to Rust.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern fn malloc(bytes: usize) {\n    let c_string = \"malloc\\0\".as_mut_ptr() as *mut i8; // char array for libc\n    let real_malloc: *mut libc::c_void = libc::dlsym(libc::RTLD_NEXT, c_string);\n    return real_malloc(bytes);\n}\n</code></pre>\n\n<p>That's my progress so far after 1h of searching on the internet and trying. I'm new to Rust and not yet familiar with Rust/FFI / Rust with libc. I tried a lot with unsafe{}, casts with <code>as</code> but I always stuck at the following problem:</p>\n\n<pre><code>return real_malloc(bytes);\n       ^^^^^^^^^^^^^^^^^^ expected (), found *-ptr\n</code></pre>\n\n<p><strong>Q1:</strong> How can I call the function behind the void-Pointer stored in <code>real_malloc</code>?</p>\n\n<p><strong>Q2:</strong> Is my Rust-String to C-String conversion feasible this way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1563394815, "post_id": 57082823, "comment_id": 100690141, "body": "&quot;Speaking practicaly, what I am trying to achieve is to implement trait like this&quot; please complete the real case you want, currently it&#39;s far away from <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1563395211, "post_id": 57082823, "comment_id": 100690307, "body": "<code>impl MyTrait for MyWrapper{};</code> is not syntactically correct: remove the semi-colon and you&#39;ll still obtain the error message that you claim."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1563396038, "post_id": 57082823, "comment_id": 100690650, "body": "<code>trait MyTrait where Self: ...</code> should usually be written as <code>trait MyTrait: ...</code>."}, {"owner": {"reputation": 75, "user_id": 11563579, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7f8bc6e72238f85fdc6d03c6c1e7f2a?s=128&d=identicon&r=PG&f=1", "display_name": "Max", "link": "https://stackoverflow.com/users/11563579/max"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1563401983, "post_id": 57082823, "comment_id": 100692468, "body": "@SvenMarnach It&#39;s interesting.  I agree, but when compiler gives a hint it suggests a <code>where</code> construction here."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 5, "last_activity_date": 1564251918, "last_edit_date": 1564251918, "creation_date": 1563395349, "answer_id": 57083665, "question_id": 57082823, "link": "https://stackoverflow.com/questions/57082823/does-type-constructor-implement-fn/57083665#57083665", "title": "Does type constructor implement Fn?", "body": "<p>The constructor of a tuple-like struct or enum variant is actually treated as a <em>function name</em> when used in a context where a value rather than a type is expected, and it is treated as the <em>type</em> it names in a context where a type is expected.</p>\n\n<p>When calling <code>my_func(MyWrapper, 3)</code>, the name <code>MyWrapper</code> denotes a function with a function item type that coerces to the function pointer type <code>fn(u64) -&gt; MyWrapper</code>. In particular, the item type implements the trait <code>Fn(u64) -&gt; MyWrapper</code>.</p>\n\n<p>In the code <code>impl MyTrait for MyWrapper {}</code>, however, <code>MyWrapper</code> denotes the struct type it declares. That type is completely different from the type of <code>MyWrapper</code> when used in a value context, and it does not implement the <code>Fn(u64) -&gt; MyWrapper</code> trait.</p>\n\n<p>In your actual use case, I believe the easiest solution is to require a <code>new()</code> method with the desired prototype on the type:</p>\n\n<pre><code>trait Payment {\n   const status: Status;\n   fn new(x: u64) -&gt; Self;\n   fn get(id: u64) -&gt; Result&lt;Self, Error&gt; {\n       get_by_status(Self::status, id).map(Self::new)\n   }\n}\n</code></pre>\n\n<p>Implementors of <code>Payment</code> will only need to provide <code>new()</code> method with the desired prototype, but will inherit the default implementation of <code>get()</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 2, "last_activity_date": 1563397452, "last_edit_date": 1563397452, "creation_date": 1563396054, "answer_id": 57083788, "question_id": 57082823, "link": "https://stackoverflow.com/questions/57082823/does-type-constructor-implement-fn/57083788#57083788", "title": "Does type constructor implement Fn?", "body": "<blockquote>\n  <p>It compiles and works so it looks like <code>MyWrapper</code> implements trait <code>Fn</code>.</p>\n</blockquote>\n\n<p>A quick and dirty way to know the type of something in Rust is to do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct MyWrapper(u64);\n\nfn main() {\n    let mut foo = MyWrapper;\n    foo = ();\n}\n</code></pre>\n\n<p>This produces an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:5:11\n  |\n5 |     foo = ();\n  |           ^^ expected fn item, found ()\n  |\n  = note: expected type `fn(u64) -&gt; MyWrapper {MyWrapper}`\n             found type `()`\n</code></pre>\n\n<p>As you can see <code>foo</code> is <strong>not</strong> a <code>MyWrapper</code> structure so <code>MyWrapper</code> does not implement <code>Fn</code> like you thought it would.</p>\n\n<p>I agree this can be confusing, see <a href=\"https://doc.rust-lang.org/reference/expressions/struct-expr.html#tuple-struct-expression\" rel=\"nofollow noreferrer\"><code>tuple struct case</code></a>:</p>\n\n<blockquote>\n  <p>A struct expression with fields enclosed in parentheses constructs a tuple struct. Though it is listed here as a specific expression for completeness, it is equivalent to a <a href=\"https://doc.rust-lang.org/reference/expressions/call-expr.html\" rel=\"nofollow noreferrer\">call expression</a> to the tuple struct's constructor. For example:</p>\n</blockquote>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Position(i32, i32, i32);\nPosition(0, 0, 0);  // Typical way of creating a tuple struct.\nlet c = Position;  // `c` is a function that takes 3 arguments.\nlet pos = c(8, 6, 7);  // Creates a `Position` value.\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>Speaking practically, what I am trying to achieve is to implement trait like this</p>\n</blockquote>\n\n<p>Your example is not complete so my answer is not final but I don't think it's possible to do what you want.</p>\n"}], "owner": {"reputation": 75, "user_id": 11563579, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7f8bc6e72238f85fdc6d03c6c1e7f2a?s=128&d=identicon&r=PG&f=1", "display_name": "Max", "link": "https://stackoverflow.com/users/11563579/max"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 1, "accepted_answer_id": 57083665, "answer_count": 2, "score": 5, "last_activity_date": 1564251918, "creation_date": 1563391210, "last_edit_date": 1563451907, "question_id": 57082823, "link": "https://stackoverflow.com/questions/57082823/does-type-constructor-implement-fn", "title": "Does type constructor implement Fn?", "body": "<p>I am not sure that the title of my question is correct since I am not sure where exactly placed. \nLet say I have a code which looks like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nstruct MyWrapper(u64);\n\nfn my_func&lt;F&gt;(f: F, n: u64) -&gt; MyWrapper\nwhere\n    F: Fn(u64) -&gt; MyWrapper,\n{\n    f(n)\n}\n\nfn main() {\n    my_func(MyWrapper, 3);\n}\n\n</code></pre>\n\n<p>It compiles and works so it looks like <code>MyWrapper</code> implements trait <code>Fn</code>. </p>\n\n<p>However, should I try to use it in a trait.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct MyWrapper(u64);\n\ntrait MyTrait\nwhere\n    Self: Fn(u64) -&gt; MyWrapper,\n{\n}\n\nimpl MyTrait for MyWrapper{}\n\n</code></pre>\n\n<p>I get an error </p>\n\n<pre><code>16 | impl MyTrait for MyWrapper{};\n   |      ^^^^^^^ expected an `Fn&lt;(u64,)&gt;` closure, found `MyWrapper`\n   |\n   = help: the trait `std::ops::Fn&lt;(u64,)&gt;` is not implemented for `MyWrapper`\n</code></pre>\n\n<p>It was a more theoretical question. </p>\n\n<p>Speaking practicaly, what I am trying to achieve is to implement trait like this</p>\n\n<p>Edit: \nI have rightfully pointed out that my example is not full, so there is a fixed version.</p>\n\n<pre><code>pub enum Status {\n    New,\n    Cancelled,\n}\n\nstruct NewTransaction(u64);\n\nstruct CancelledTransaction(u64);\n\nfn get_by_status(id: &amp;str, status: Status) -&gt; Result&lt;u64, ()&gt; {\n    Ok(3)\n}\n\npub trait Transaction\nwhere\n    Self: std::marker::Sized,\n{\n    const status: Status;\n    fn get(id: &amp;str) -&gt; Result&lt;Self, ()&gt;;\n}\n\nimpl Transaction for NewTransaction {\n    const status: Status = Status::New;\n    fn get(id: &amp;str) -&gt; Result&lt;Self, ()&gt; {\n        get_by_status(id, Self::status).map(Self)\n    }\n}\n\nimpl Transaction for CancelledTransaction {\n    const status: Status = Status::Cancelled;\n    fn get(id: &amp;str) -&gt; Result&lt;Self, ()&gt; {\n        get_by_status(id, Self::status).map(Self)\n    }\n}\n\n</code></pre>\n\n<p>This code compiles, but as you can see - all implementations of Transaction for every type are <em>exactly</em> the same, so it seems totally reasonable to move this implementation as a default. Like this </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Transaction\nwhere\n    Self: std::marker::Sized,\n{\n    const status: Status;\n    fn get(id: &amp;str) -&gt; Result&lt;Self, ()&gt; {\n        get_by_status(id, Self::status).map(Self)\n    }\n}\n\nimpl Transaction for NewTransaction {\n    const status: Status = Status::New;\n}\n\nimpl Transaction for CancelledTransaction {\n    const status: Status = Status::Cancelled;\n}\n\n</code></pre>\n\n<p>And here I got a complain that Self cannot be used as a Value. \nI've tried to fix it by introducing a condition <code>where Self: Fn(u32) -&gt; Self</code> on trait but it didn't work either.</p>\n\n<p>Edit: \nIn the end, I implemented the idea suggested by Sven Marnach - added a method <code>new</code> and required all struct to implement this method.  It still looks quite strange, since the implementation is exactly the same for all structures, but it works.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\npub trait Transaction\nwhere\n    Self: std::marker::Sized,\n{\n    const status: Status;\n    fn new(n: u64) -&gt; Self;\n    fn get(id: &amp;str) -&gt; Result&lt;Self, ()&gt; {\n        get_by_status(id, Self::status).map(Self::new)\n    }\n}\n\nimpl Transaction for NewTransaction {\n    const status: Status = Status::New;\n    fn new(n: u64) -&gt; Self {\n        Self(n)\n    }\n}\n</code></pre>\n\n<p>Thanks everyone for answers!</p>\n"}, {"tags": ["rust", "traits", "sortedlist", "binary-heap"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563384753, "post_id": 57081218, "comment_id": 100685640, "body": "just bound <code>Ord</code> <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fd3ea88465fc955301e4579ecfa48902\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a> I really doubt you are asking the good question here. Your question is unclear for me"}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563384951, "post_id": 57081218, "comment_id": 100685734, "body": "@Stargateur If I leave it up to whoever writes <code>T</code> to implement <code>Ord</code> then (a) they have to write a lot of boiler plate code, and (b) I have no idea if they are actually going to implement it the way I need it to be implemented."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563394264, "post_id": 57081218, "comment_id": 100689892, "body": "I didn&#39;t understand a thing"}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1563390991, "post_id": 57082588, "comment_id": 100688433, "body": "Given the example code in the question, I believe the implementation using the <code>TaskWrapper</code> newtype is what the OP wants, and it also demonstrates the general pattern how to pass a custom order to <code>BinaryHeap</code>."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1563450637, "post_id": 57082588, "comment_id": 100709003, "body": "The issue about <code>time()</code> changing can be solved by snapshotting it at <code>TaskWrapper</code> creation time."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 3, "last_activity_date": 1563390087, "creation_date": 1563390087, "answer_id": 57082588, "question_id": 57081218, "link": "https://stackoverflow.com/questions/57081218/how-to-use-a-binaryheap-when-i-cant-implement-ord/57082588#57082588", "title": "How to use a BinaryHeap when I can&#39;t implement Ord?", "body": "<p>If you want to have multiple types of <code>Task</code>s in the same <code>BinaryHeap</code> (at the same time), you're going to need to use a boxed trait object, or some other kind of (smart) pointer. So you should implement <code>Ord</code> on the type <code>Box&lt;dyn Task&gt;</code>. See below if you really are just using one type of task at a time.</p>\n\n<pre><code>use std::cmp::Ordering;\nuse std::collections::BinaryHeap;\n\ntrait Task {\n    fn time(&amp;self) -&gt; std::time::Duration;\n    fn run(self);\n}\n\n\nimpl PartialEq for Box&lt;dyn Task&gt; {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        self.time() == other.time()\n    }\n}\n\nimpl Eq for Box&lt;dyn Task&gt; {}\n\nimpl PartialOrd for Box&lt;dyn Task&gt; {\n    fn partial_cmp(&amp;self, other: &amp;Self) -&gt; Option&lt;Ordering&gt; {\n        Some(self.cmp(&amp;other)) // Delegate to the implementation in `Ord`.\n    }\n}\n\nimpl Ord for Box&lt;dyn Task&gt; {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        self.time().cmp(&amp;other.time())\n    }\n}\n</code></pre>\n\n<p>Then when you insert a <code>Task</code> into the <code>BinaryHeap</code>, you'll need to box it with <code>Box::new</code> or something equivalent. Since this <code>Box&lt;dyn Task&gt;</code> may outlive any references in <code>T</code>, you'll have to ensure that <code>T</code> contains at most <code>'static</code> references by adding <code>'static</code> to the bounds on <code>T</code>.</p>\n\n<pre><code>fn foo&lt;T: Task + 'static&gt;(task: T) {\n    let mut heap = BinaryHeap::new();\n\n    let boxed_task: Box&lt;dyn Task&gt; = Box::new(task);\n    heap.push(boxed_task);\n}\n</code></pre>\n\n<p>Just a side note: you could also implement <code>Ord</code> (and the rest) on <code>dyn Task</code>. Then  you would get an implementation of <code>Ord</code> for <code>Box&lt;dyn Task&gt;</code> for free since <code>Box&lt;T&gt;</code> implements <code>Ord</code> if <code>T</code> does. This could be useful if you're using multiple pointer types other than <code>Box&lt;T&gt;</code> with <code>Task</code>s, like <code>Rc&lt;dyn Task&gt;</code> or <code>&amp;dyn Task</code>.</p>\n\n<hr>\n\n<p>If you really are just using one type at a time, then you could use a wrapper type that implements <code>Ord</code>. This looks like what you're doing right now since you only create the <code>BinaryHeap</code> once you have a specific task in hand. I don't think this is what you want, but here it is anyway.</p>\n\n<pre><code>use std::cmp::Ordering;\nuse std::collections::BinaryHeap;\n\ntrait Task {\n    fn time(&amp;self) -&gt; std::time::Duration;\n    fn run(self);\n}\n\nstruct TaskWrapper&lt;T: Task&gt;(T);\n\nimpl&lt;T: Task&gt; PartialEq for TaskWrapper&lt;T&gt; {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        self.0.time() == other.0.time()\n    }\n}\n\nimpl&lt;T: Task&gt; Eq for TaskWrapper&lt;T&gt; {}\n\nimpl&lt;T: Task&gt; Ord for TaskWrapper&lt;T&gt; {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        self.0.time().cmp(&amp;other.0.time())\n    }\n}\n\nimpl&lt;T: Task&gt; PartialOrd for TaskWrapper&lt;T&gt; {\n    fn partial_cmp(&amp;self, other: &amp;Self) -&gt; Option&lt;Ordering&gt; {\n        Some(self.cmp(&amp;other))\n    }\n}\n</code></pre>\n\n<p>With this approach, if <code>task: T</code> and <code>T</code> implements <code>Task</code>, you can insert <code>task</code> into the <code>BinaryHeap</code> by wrapping it like <code>TaskWrapper(task)</code>.</p>\n\n<pre><code>fn foo&lt;T: Task&gt;(task: T) {\n    let mut heap = BinaryHeap::new();\n    heap.push(TaskWrapper(task));\n}\n</code></pre>\n\n<hr>\n\n<p>Just one more thing. It's a logic error for the relative ordering of members of a <code>BinaryHeap</code> to change. Since our ordering here is based entirely off of the method <code>time</code>, the ordering might change every time <code>time</code> is called. So even in this situation, we have to depend on the correctness external implementation of <code>time</code>. You wanted to avoid using the trait bound <code>T: Ord</code> for exactly this reason, so bear this in mind.</p>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 213, "favorite_count": 0, "accepted_answer_id": 57082588, "answer_count": 1, "score": 0, "last_activity_date": 1563390087, "creation_date": 1563384046, "question_id": 57081218, "link": "https://stackoverflow.com/questions/57081218/how-to-use-a-binaryheap-when-i-cant-implement-ord", "title": "How to use a BinaryHeap when I can&#39;t implement Ord?", "body": "<p>I have a the following Rust trait:</p>\n\n<pre><code>trait Task {\n    fn time(&amp;self) -&gt; std::time::Duration;\n    fn run(self);\n}\n</code></pre>\n\n<p>I need to keep instances of <code>T: Task</code> in some kind of sorted list where I can pop the one with the lowest value for <code>time()</code>. My plan was to use a <code>BinaryHeap</code>:</p>\n\n<pre><code>fn foo&lt;T: Task&gt;(task: T) {\n    let heap = std::collections::BinaryHeap::new();\n    heap.push(task);\n}\n</code></pre>\n\n<p>However, I run into trouble here. To put something in a <code>BinaryHeap</code>, it has to implement <code>Ord</code>:</p>\n\n<pre><code>error[E0277]: the trait bound `T: std::cmp::Ord` is not satisfied\n --&gt; src/lib.rs:7:16\n  |\n7 |     let heap = std::collections::BinaryHeap::new();\n  |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::cmp::Ord` is not implemented for `T`\n  |\n  = help: consider adding a `where T: std::cmp::Ord` bound\n  = note: required by `std::collections::BinaryHeap::&lt;T&gt;::new`\n</code></pre>\n\n<p>I can't implement <code>Ord</code> for <code>Task</code> since <code>Ord</code> is not from my crate. And I wouldn't want to either, since implementors of <code>Task</code> might want to have some other implementation for <code>Ord</code>.</p>\n\n<p>So waht do I do? Is there some other kind of sorted list I can use? Or can I trick <code>BinaryHeap</code> into using other sorting rules?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563381419, "post_id": 57080349, "comment_id": 100684161, "body": "and <a href=\"https://stackoverflow.com/questions/40325690/what-is-lifetime-elision-in-very-simple-terms\" title=\"what is lifetime elision in very simple terms\">stackoverflow.com/questions/40325690/&hellip;</a> and <a href=\"https://stackoverflow.com/questions/31609137/why-are-explicit-lifetimes-needed-in-rust\" title=\"why are explicit lifetimes needed in rust\">stackoverflow.com/questions/31609137/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 1, "last_activity_date": 1563381080, "last_edit_date": 1563381080, "creation_date": 1563380598, "answer_id": 57080415, "question_id": 57080349, "link": "https://stackoverflow.com/questions/57080349/error-in-function-returning-string-literal-after-borrowing-string/57080415#57080415", "title": "Error in function returning string literal after borrowing String", "body": "<p>You don't precise the lifetime of the output of your <code>function</code> function. So it's assumed by the borrow checker to be the same as the argument (see <a href=\"https://doc.rust-lang.org/nomicon/lifetime-elision.html\" rel=\"nofollow noreferrer\">lifetime elision rules</a>).</p>\n\n<p>You have to tell the borrow checker that those lifetimes aren't the same (meaning in this case that the output slice isn't dependent of the input one). More precisely in your case it's <code>static</code>.</p>\n\n<p>Change your function declaration to</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn function(a :&amp;String) -&gt; &amp;'static str{\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 11797229, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40866f31b98822b1d0ff8a64234dc79a?s=128&d=identicon&r=PG&f=1", "display_name": "Marcus Rios", "link": "https://stackoverflow.com/users/11797229/marcus-rios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "closed_date": 1563382657, "answer_count": 1, "score": 1, "last_activity_date": 1563381080, "creation_date": 1563380360, "question_id": 57080349, "link": "https://stackoverflow.com/questions/57080349/error-in-function-returning-string-literal-after-borrowing-string", "closed_reason": "Duplicate", "title": "Error in function returning string literal after borrowing String", "body": "<p>I'm trying to understand how borrowing works in rust. So after read some topics of the rust book. I got stuck, trying to understand why this code doesn't compile.</p>\n\nCode\n\n<pre><code>fn main() {\n    let mut a = String::from(\"yes\");\n    let b = function(&amp;a);\n    a.clear();\n    println!(\"Hello {}\", b);\n}\n\nfn function(a :&amp;String) -&gt; &amp;str{\n    if a == \"yes\" {\n        \"OK\"\n    }\n    else{\n        \"NO\"\n    }\n}\n</code></pre>\n\nThe compiler gives this error:\n\n<pre><code>   Compiling playground v0.0.1 (/playground)\nerror[E0502]: cannot borrow `a` as mutable because it is also borrowed as immutable\n --&gt; src/main.rs:4:5\n  |\n3 |     let b = function(&amp;a);\n  |                      -- immutable borrow occurs here\n4 |     a.clear();\n  |     ^^^^^^^^^ mutable borrow occurs here\n5 |     println!(\"Hello {}\", b);\n  |                          - immutable borrow later used here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0502`.\nerror: Could not compile `playground`.\n\nTo learn more, run the command again with --verbose.\n\n</code></pre>\n\n<p>But I don't understand why the scope of &amp;a doesn't ends with the function scope.</p>\n"}, {"tags": ["rust", "connection-pooling", "rust-tokio", "hyper"], "comments": [{"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1563370471, "post_id": 57076970, "comment_id": 100677495, "body": "You are trying to use <code>pool</code> variable inside the <code>service</code> closure which violates its lifetime. Probably you should move it for <code>service</code> too."}, {"owner": {"reputation": 355, "user_id": 4911008, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-JLdxew6DQ8o/AAAAAAAAAAI/AAAAAAAAANg/cbtQcMgBQyw/photo.jpg?sz=128", "display_name": "sivakov512", "link": "https://stackoverflow.com/users/4911008/sivakov512"}, "reply_to_user": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1563371142, "post_id": 57076970, "comment_id": 100677948, "body": "@Zefick, can you show me example, please?"}], "answers": [{"comments": [{"owner": {"reputation": 355, "user_id": 4911008, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-JLdxew6DQ8o/AAAAAAAAAAI/AAAAAAAAANg/cbtQcMgBQyw/photo.jpg?sz=128", "display_name": "sivakov512", "link": "https://stackoverflow.com/users/4911008/sivakov512"}, "edited": false, "score": 0, "creation_date": 1563512717, "post_id": 57103530, "comment_id": 100731807, "body": "It would be cool if you show code examples for every solution. With my low Rust experience it&#39;s easier to understand the solutions by reading code."}, {"owner": {"reputation": 2173, "user_id": 1804656, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/47ea159b5819a724a31a95f8dd1fc037?s=128&d=identicon&r=PG", "display_name": "kyle", "link": "https://stackoverflow.com/users/1804656/kyle"}, "reply_to_user": {"reputation": 355, "user_id": 4911008, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-JLdxew6DQ8o/AAAAAAAAAAI/AAAAAAAAANg/cbtQcMgBQyw/photo.jpg?sz=128", "display_name": "sivakov512", "link": "https://stackoverflow.com/users/4911008/sivakov512"}, "edited": false, "score": 0, "creation_date": 1563751038, "post_id": 57103530, "comment_id": 100790913, "body": "I could provide some more code in a playground example -- but it doesn&#39;t have r2d2 so I would have the mock it out. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=af120bda3f2354498f08f1d44d0a5925\" rel=\"nofollow noreferrer\">Here is some extra code</a> but the server and pool aren&#39;t actually hyper and r2d2."}], "tags": [], "owner": {"reputation": 2173, "user_id": 1804656, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/47ea159b5819a724a31a95f8dd1fc037?s=128&d=identicon&r=PG", "display_name": "kyle", "link": "https://stackoverflow.com/users/1804656/kyle"}, "is_accepted": false, "score": 2, "last_activity_date": 1563490720, "last_edit_date": 1563490720, "creation_date": 1563490088, "answer_id": 57103530, "question_id": 57076970, "link": "https://stackoverflow.com/questions/57076970/example-usage-of-hyper-with-bb8-and-postgres/57103530#57103530", "title": "Example usage of hyper with bb8 and postgres", "body": "<p>The solution is pretty simple but to understand the problem I want to provide some additional info...</p>\n\n<ol>\n<li><p>When you call <code>and_then</code> on a future to get the result, it passes the value of the variable to the closure passed to <code>and_then</code> which gives you ownership of that data.</p></li>\n<li><p>The method <code>serve</code> on hypers builder (returned by <code>Server::bind</code>), expects for the closure to have a static lifetime.</p></li>\n</ol>\n\n<p>Now to address the problem:</p>\n\n<ul>\n<li>Good: pass the value of the closure into serve, this moves it, transferring the ownership.</li>\n<li>Good: <code>service_fn</code> is defined outside of the <code>and_then</code> closure so that function lives long enough</li>\n<li>Bad: The closure uses the local variable pool to pass it to the <code>service_fn</code>.</li>\n</ul>\n\n<p>To resolve the problem, just <code>move</code> the local data into your closure like so:</p>\n\n<p><code>let service = move || service_fn(|req| router(req, pool));</code></p>\n"}, {"tags": [], "owner": {"reputation": 355, "user_id": 4911008, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-JLdxew6DQ8o/AAAAAAAAAAI/AAAAAAAAANg/cbtQcMgBQyw/photo.jpg?sz=128", "display_name": "sivakov512", "link": "https://stackoverflow.com/users/4911008/sivakov512"}, "is_accepted": true, "score": 1, "last_activity_date": 1563776110, "creation_date": 1563776110, "answer_id": 57140089, "question_id": 57076970, "link": "https://stackoverflow.com/questions/57076970/example-usage-of-hyper-with-bb8-and-postgres/57140089#57140089", "title": "Example usage of hyper with bb8 and postgres", "body": "<p>Solution found <a href=\"https://github.com/khuey/bb8/issues/24\" rel=\"nofollow noreferrer\">here</a></p>\n\n<p>The simplest solution looks like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\n\n    let pg_mgr =\n        PostgresConnectionManager::new(\"postgresql://auth:auth@localhost:5433/auth\", NoTls);\n\n    rt::run(future::lazy(move || {\n        Pool::builder()\n            .build(pg_mgr)\n            .map_err(|_| eprintln!(\"kek\"))\n            .and_then(move |pool| {\n                let service = move || {\n                    let pool = pool.clone();\n                    service_fn(move |req| router(req, &amp;pool))\n                };\n\n                let server = Server::bind(&amp;addr)\n                    .serve(service)\n                    .map_err(|e| eprintln!(\"Server error: {}\", e));\n\n                println!(\"Listening on http://{}\", addr);\n                server\n            })\n    }))\n}\n\nfn router(\n    _req: Request&lt;Body&gt;,\n    _pool: &amp;Pool&lt;PostgresConnectionManager&lt;NoTls&gt;&gt;,\n) -&gt; impl Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt; {\n    // some staff\n}\n</code></pre>\n\n<p>It is also possible to construct <code>service</code> outside of <code>rt::run</code> with <code>Arc</code> and <code>Mutex</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\n\n    let pg_mgr =\n        PostgresConnectionManager::new(\"postgresql://auth:auth@localhost:5433/auth\", NoTls);\n    let pool: Arc&lt;Mutex&lt;Option&lt;Pool&lt;PostgresConnectionManager&lt;NoTls&gt;&gt;&gt;&gt;&gt; =\n        Arc::new(Mutex::new(None));\n    let pool2 = pool.clone();\n\n    let service = move || {\n        let pool = pool.clone();\n        service_fn(move |req| {\n            let locked = pool.lock().unwrap();\n            let pool = locked\n                .as_ref()\n                .expect(\"bb8 should be initialized before hyper\");\n            router(req, pool)\n        })\n    };\n\n    rt::run(future::lazy(move || {\n        Pool::builder()\n            .build(pg_mgr)\n            .map_err(|_| eprintln!(\"kek\"))\n            .and_then(move |pool| {\n                *pool2.lock().unwrap() = Some(pool);\n\n                let server = Server::bind(&amp;addr)\n                    .serve(service)\n                    .map_err(|e| eprintln!(\"Server error: {}\", e));\n\n                println!(\"Listening on http://{}\", addr);\n                server\n            })\n    }))\n}\n\nfn router(\n    _req: Request&lt;Body&gt;,\n    _pool: &amp;Pool&lt;PostgresConnectionManager&lt;NoTls&gt;&gt;,\n) -&gt; impl Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt; {\n    // some staff\n}\n</code></pre>\n"}], "owner": {"reputation": 355, "user_id": 4911008, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-JLdxew6DQ8o/AAAAAAAAAAI/AAAAAAAAANg/cbtQcMgBQyw/photo.jpg?sz=128", "display_name": "sivakov512", "link": "https://stackoverflow.com/users/4911008/sivakov512"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 831, "favorite_count": 1, "accepted_answer_id": 57140089, "answer_count": 2, "score": 3, "last_activity_date": 1563776110, "creation_date": 1563369904, "last_edit_date": 1563464302, "question_id": 57076970, "link": "https://stackoverflow.com/questions/57076970/example-usage-of-hyper-with-bb8-and-postgres", "title": "Example usage of hyper with bb8 and postgres", "body": "<p>I want to use <a href=\"https://crates.io/crates/hyper\" rel=\"nofollow noreferrer\">hyper</a> with <a href=\"https://crates.io/crates/bb8\" rel=\"nofollow noreferrer\">bb8</a> and <a href=\"https://crates.io/crates/tokio-postgres\" rel=\"nofollow noreferrer\">tokio-postgres</a>. In every request I want to acquire a new connection from the pool. Can anybody provide me some example for this scenario?\nCurrently I do it like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let addr = \"127.0.0.1:3000\".parse().unwrap();\n\n    let pg_mgr =\n        PostgresConnectionManager::new(\"postgresql://auth:auth@localhost:5433/auth\", NoTls);\n\n    rt::run(future::lazy(move || {\n        Pool::builder()\n            .build(pg_mgr)\n            .map_err(|e| eprintln!(\"Database error: {}\", e))\n            .and_then(move |pool| {\n                let service = || service_fn(|req| router(req, pool.clone()));\n\n                let server = Server::bind(&amp;addr)\n                    .serve(service)\n                    .map_err(|e| eprintln!(\"Server error: {}\", e));\n\n                println!(\"Listening on http://{}\", addr);\n                server\n            })\n    }))\n}\n\nfn router(\n    _req: Request&lt;Body&gt;,\n    _pool: Pool&lt;PostgresConnectionManager&lt;NoTls&gt;&gt;,\n) -&gt; Result&lt;Response&lt;Body&gt;, hyper::Error&gt; {\n    // do some staff with pool\n}\n</code></pre>\n\n<p>But it won't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `pool` does not live long enough\n  --&gt; src/main.rs:22:63\n   |\n22 |                 let service = || service_fn(|req| router(req, pool.clone()));\n   |                               -- -----------------------------^^^^----------\n   |                               |  |                            |\n   |                               |  |                            borrowed value does not live long enough\n   |                               |  returning this value requires that `pool` is borrowed for `'static`\n   |                               value captured here\n...\n30 |             })\n   |             - `pool` dropped here while still borrowed\n</code></pre>\n\n<p>What am I doing wrong? How to make my case work correctly?</p>\n"}, {"tags": ["rust", "rust-cargo", "webassembly", "substrate", "parity-io"], "answers": [{"comments": [{"owner": {"reputation": 989, "user_id": 4184410, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cyvsh.jpg?s=128&g=1", "display_name": "JoshOrndorff", "link": "https://stackoverflow.com/users/4184410/joshorndorff"}, "edited": false, "score": 1, "creation_date": 1574200785, "post_id": 57076408, "comment_id": 104145449, "body": "Update October 2019: As of this PR <a href=\"https://github.com/paritytech/substrate/pull/3854\" rel=\"nofollow noreferrer\">github.com/paritytech/substrate/pull/3854</a> There is no longer a need to manually install <code>wasm-gc</code>. It is brought in as a dev- dependency through <code>Cargo.toml</code>."}], "tags": [], "owner": {"reputation": 8871, "user_id": 1260906, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/aPM5A.png?s=128&g=1", "display_name": "Afr", "link": "https://stackoverflow.com/users/1260906/afr"}, "is_accepted": false, "score": 2, "last_activity_date": 1563368267, "creation_date": 1563368267, "answer_id": 57076408, "question_id": 57076407, "link": "https://stackoverflow.com/questions/57076407/i-cannot-build-parity-substrate-runtimes-because-the-wasm-gc-command-isnt-found/57076408#57076408", "title": "I cannot build parity substrate runtimes because the wasm-gc command isn&#39;t found", "body": "<p>There are two potential reasons why you would run into that issue.</p>\n\n<h3>1 make sure wasm-gc is installed</h3>\n\n<p>To do so, simply use cargo:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>cargo install --git https://github.com/alexcrichton/wasm-gc\n</code></pre>\n\n<p>This will install wasm-gc binary in your <code>$CARGO_HOME</code>.</p>\n\n<h3>2 make sure cargo binaries are in your <code>$PATH</code></h3>\n\n<p>If you are certain the wasm-gc binary is installed correctly, make sure you have the cargo binaries in your <code>$PATH</code>, e.g., by setting:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>export PATH=$PATH:$HOME/.cargo/bin\n</code></pre>\n\n<p>It's recommended to append this line to your <code>.bashrc</code> or <code>.zshrc</code> if you plan on using this more regularly.</p>\n"}], "owner": {"reputation": 8871, "user_id": 1260906, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/aPM5A.png?s=128&g=1", "display_name": "Afr", "link": "https://stackoverflow.com/users/1260906/afr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1563368267, "creation_date": 1563368267, "question_id": 57076407, "link": "https://stackoverflow.com/questions/57076407/i-cannot-build-parity-substrate-runtimes-because-the-wasm-gc-command-isnt-found", "title": "I cannot build parity substrate runtimes because the wasm-gc command isn&#39;t found", "body": "<p>After following the <a href=\"https://github.com/paritytech/substrate#611-linux-and-mac\" rel=\"nofollow noreferrer\">compilation instructions</a> for my Parity Substrate based node, I repeatedly run into the following issue:</p>\n\n<pre><code>./build.sh: line 12: wasm-gc: command not found\n</code></pre>\n\n<p>I cannot build parity substrate runtimes because the wasm-gc command isn't found; what can I do?</p>\n"}, {"tags": ["rust", "atomic"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563365687, "post_id": 57075531, "comment_id": 100674313, "body": "<code>AtomicBool</code> doesn&#39;t have the same functions than <code>AtomicU32</code>. Do you think about some <code>AtomicInteger&lt;T&gt;</code> ?"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1563367863, "post_id": 57075792, "comment_id": 100675689, "body": "It may be interesting to note the difference with C++ as it actually went with the <code>std::atomic&lt;T&gt;</code> way. It therefore presents a unified interface, however there is actually no guarantee that <code>std::atomic&lt;T&gt;</code> is always implemented with actual atomic instructions. Depending on the platform, it may use either an atomic instruction or require some fancier trickery like a mutex: this is exposed by an <code>always_lockfree</code> associated constant."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1563368052, "post_id": 57075792, "comment_id": 100675825, "body": "But that&#39;s possible because C++ does support specialization, whereas Rust doesn&#39;t."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1563368607, "post_id": 57075792, "comment_id": 100676232, "body": "Yes and no, but that&#39;s besides the point I was trying to make. C++11 introduced <code>std::atomic&lt;T&gt;</code>, 5 years before the <code>Atomic</code> RFC. I expect that the experience of working with <code>std::atomic&lt;T&gt;</code>, and the footgun of the generated code using atomic instructions on some platforms but not others, partly informed the feedback on the &quot;fallback&quot; of the <code>Atomic</code> RFC."}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1563373095, "post_id": 57075792, "comment_id": 100679298, "body": "@MatthieuM: I don&#39;t get it. There&#39;s nothing preventing Rust from having <code>Atomic&lt;T&gt;</code> only valid for <code>T</code> types that are guaranteed to be atomic, with compile-time checks for users. The current atomic interface provided by Rust seems unnecessarily non-generic."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "edited": false, "score": 0, "creation_date": 1563373679, "post_id": 57075792, "comment_id": 100679703, "body": "@VittorioRomeo can you provide a small example on how to enforce, that <code>T</code> is one of the forms? Also, how you do generate the needed assembly then?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1563376550, "post_id": 57075792, "comment_id": 100681427, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8e9ccb32b2f7f8df3b9d538ec561cb79\" rel=\"nofollow noreferrer\">Here&#39;s one way you could do it on top of the existing types</a>. It could presumably be cleaner if the atomic types had originally been designed with this in mind; I don&#39;t know why they weren&#39;t, but it also doesn&#39;t bother me too much."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "edited": false, "score": 0, "creation_date": 1563380446, "post_id": 57075792, "comment_id": 100683711, "body": "@VittorioRomeo: Indeed. What hellow points out, though, is that you cannot have an <code>Atomic&lt;T&gt;</code> that is sometimes really atomic and sometimes not, depending on the type, without using specialization."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563381835, "post_id": 57075792, "comment_id": 100684359, "body": "also atomic is not here to be used a lot, it has very specific use case, if you start to want generic atomic because you need a lot of them, you have a bigger design problem."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1563551108, "post_id": 57075792, "comment_id": 100750189, "body": "I had something like the code by trentcl in mind: a trait that ensures that <code>T</code> can be used atomically on the current platform (i.e. the <code>cfg</code> attributes on the <code>impl</code> blocks). Then one could use <code>Atomic&lt;T&gt;</code>. I agree that the C++ solution ala &quot;atomic if it&#39;s supported, otherwise fallback&quot; is bad. But I think one could do better in Rust."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1563551526, "post_id": 57075792, "comment_id": 100750369, "body": "There is the <a href=\"https://crates.io/crates/atomic\" rel=\"nofollow noreferrer\"><code>atomic</code> crate</a> which offers <code>Atomic&lt;T&gt; where T: Copy</code> and does it like C++: real atomic if supported, otherwise lock-based fallback."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1563976534, "post_id": 57075792, "comment_id": 100879723, "body": "FYI: I just release <a href=\"https://github.com/LukasKalbertodt/atomig\" rel=\"nofollow noreferrer\">the crate <code>atomig</code></a> which offers a generic wrapper <code>Atomic&lt;T&gt;</code> for types that can actually be used in atomic fashion on the target platform."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 11, "last_activity_date": 1563366277, "creation_date": 1563366277, "answer_id": 57075792, "question_id": 57075531, "link": "https://stackoverflow.com/questions/57075531/why-is-there-one-atomic-type-for-many-primitive-type-instead-of-a-generic-at/57075792#57075792", "title": "Why is there one `Atomic*` type for many primitive type instead of a generic `Atomic&lt;T&gt;`?", "body": "<p>The purpose of having an <code>AtomicU8</code> (for example) is using the underlying hardware to perform <a href=\"https://en.wikipedia.org/wiki/Compare-and-swap\" rel=\"noreferrer\">atomic instructions</a>, e.g. on x86 the <a href=\"https://www.felixcloutier.com/x86/cmpxchg\" rel=\"noreferrer\"><code>CMPXCHG</code> instruction</a>.</p>\n\n<p>The original <a href=\"https://github.com/rust-lang/rfcs/pull/1505\" rel=\"noreferrer\">RFC #1505</a> suggested a <code>Atomic&lt;T&gt;</code> type. <a href=\"https://github.com/rust-lang/rfcs/pull/1505#issuecomment-187441331\" rel=\"noreferrer\">One of the main concern was</a>, that people would use <code>T</code> in an unintended way, e.g. using <code>Atomic&lt;[u8; 32]&gt;</code> which would not be possible to support, because of the lack of hardware that support those.<br>\nA fallback/workaround by using a <code>Mutex</code> was proposed, but it felt like cheating, because the compiler would behave differently for different <code>T</code>s.</p>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/pull/1505#issuecomment-210207997\" rel=\"noreferrer\">It was finally closed</a> in favor of <a href=\"https://github.com/rust-lang/rfcs/pull/1543\" rel=\"noreferrer\">RFC #1543</a> which introduced the Atomic{I,U}{8,16,32,64} types we know today.</p>\n\n<p>It was then implemented in <a href=\"https://github.com/rust-lang/rust/pull/33048\" rel=\"noreferrer\">PR #33048</a> and stabilized in <a href=\"https://github.com/rust-lang/rust/issues/56753\" rel=\"noreferrer\">PR #56753</a> which is Rust 1.34.0.</p>\n\n<p>To ensure, that the underlying hardware really supports the atomic operations the types are having a cfg attribute, e.g. for <code>AtomicI8</code> it is <a href=\"https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1892\" rel=\"noreferrer\"><code>#[cfg(target_has_atomic = \"8\")]</code></a>, for <code>AtomicI16</code> it is <a href=\"https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1924\" rel=\"noreferrer\"><code>#[cfg(target_has_atomic = \"16\")]</code></a> etcetera.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 2, "accepted_answer_id": 57075792, "answer_count": 1, "score": 11, "last_activity_date": 1563366277, "creation_date": 1563365505, "question_id": 57075531, "link": "https://stackoverflow.com/questions/57075531/why-is-there-one-atomic-type-for-many-primitive-type-instead-of-a-generic-at", "title": "Why is there one `Atomic*` type for many primitive type instead of a generic `Atomic&lt;T&gt;`?", "body": "<p>Looking at <a href=\"https://doc.rust-lang.org/stable/std/sync/atomic/index.html\" rel=\"noreferrer\">the <code>std::sync::atomic</code> module</a>, one can see a bunch of different <code>Atomic*</code> types, like <code>AtomicU32</code>, <code>AtomicI16</code> and more. Why is that?</p>\n\n<p>Rust has generics and \u2013 as I see it \u2013 it would be possible to add a generic <code>Atomic&lt;T&gt;</code> where <code>T</code> is bounded by some trait defined in the module (in Java-ish naming: <code>Atomicable</code>). That trait would be implemented by the types that could be handled in an atomic fashion and users could just use <code>Atomic&lt;u32&gt;</code> instead of <code>AtomicU32</code>.</p>\n\n<p><strong>Why isn't there a generic <code>Atomic&lt;T&gt;</code>? Why have a bunch of different types instead?</strong></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563362724, "post_id": 57074508, "comment_id": 100672788, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/57017747/simple-refactoring-triggers-borrow-checker-error\">Simple refactoring triggers borrow checker error</a>"}], "answers": [{"comments": [{"owner": {"reputation": 83, "user_id": 11386119, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TBXJb.jpg?s=128&g=1", "display_name": "codearm", "link": "https://stackoverflow.com/users/11386119/codearm"}, "edited": false, "score": 0, "creation_date": 1563371519, "post_id": 57074753, "comment_id": 100678216, "body": "Many thanks Joe! Is it possible somehow to still declare buffer outside the loop but still let the compiler know to release it on every iteration in an idiomatic way?"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 83, "user_id": 11386119, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TBXJb.jpg?s=128&g=1", "display_name": "codearm", "link": "https://stackoverflow.com/users/11386119/codearm"}, "edited": false, "score": 0, "creation_date": 1563374998, "post_id": 57074753, "comment_id": 100680498, "body": "You would need to restructure your code somewhat - either by making <code>do_something</code> accept <code>&amp;mut [IoSliceMut; 2]</code> or <code>&amp;[IoSliceMut; 2]</code> as the parameter, or by using a <code>RefCell</code> or a <code>Mutex</code> to move the checks to runtime instead of compile time. Fundementally, you cannot create an immutable reference to something while you&#39;re still holding on to a mutable reference - that&#39;s one of the core guarentees of Rust."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 83, "user_id": 11386119, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TBXJb.jpg?s=128&g=1", "display_name": "codearm", "link": "https://stackoverflow.com/users/11386119/codearm"}, "edited": false, "score": 0, "creation_date": 1563375175, "post_id": 57074753, "comment_id": 100680602, "body": "I&#39;d also give some thought to whether you actually <i>need</i> to pull <code>buffer</code> out of the loop - is there significant overhead to creating a new <code>IoSliceMut</code> in each iteration, or is it a lightweight wrapper? If you find yourself jumping through borrow checker hoops to re-use them, I&#39;d maybe take a step back and benchmark :)"}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 1, "last_activity_date": 1563370371, "last_edit_date": 1563370371, "creation_date": 1563362749, "answer_id": 57074753, "question_id": 57074508, "link": "https://stackoverflow.com/questions/57074508/why-does-this-immutability-error-only-happens-if-declaration-is-outside-the-loop/57074753#57074753", "title": "Why does this immutability error only happens if declaration is outside the loop?", "body": "<p>In the first example, each instance of <code>buffer</code> lasts only for one iteration of the loop. Due to non-lexical lifetimes, the compiler can work out that you don't reuse those instances of <code>IoSliceMut</code> after your call to <code>read_vectored</code>, so the mutable borrows that they hold are released, and the code compiles.</p>\n\n<p>In your second example, you're explicitly saying that those two instances of <code>IoSliceMut</code> should be kept for the entire loop, and they should be used for <em>every</em> call to <code>read_vectored</code> - therefore their mutable borrows cannot not possibly be released until the very last iteration.</p>\n"}], "owner": {"reputation": 83, "user_id": 11386119, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TBXJb.jpg?s=128&g=1", "display_name": "codearm", "link": "https://stackoverflow.com/users/11386119/codearm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 1, "accepted_answer_id": 57074753, "answer_count": 1, "score": 0, "last_activity_date": 1563370371, "creation_date": 1563361820, "question_id": 57074508, "link": "https://stackoverflow.com/questions/57074508/why-does-this-immutability-error-only-happens-if-declaration-is-outside-the-loop", "title": "Why does this immutability error only happens if declaration is outside the loop?", "body": "<p>I am trying to fill a buffer with some data I get from a file, and then read from that buffer to do stuff with that data. All of that iteratively, inside a loop.</p>\n\n<p>If I do this, it compiles perfectly:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{BufReader, IoSliceMut, Read};\n\nfn do_something(buffer_0: &amp;[u8; 8], buffer_1: &amp;[u8; 2]) {\n    // Do something\n}\n\nfn main() {\n    let file = File::open(\"/path/to/file\").expect(\"Error opening file\");\n\n    let mut reader = BufReader::new(file);\n    let buffer_0 = &amp;mut [0; 8];\n    let buffer_1 = &amp;mut [0; 2];\n\n    loop {\n        let buffer = &amp;mut [IoSliceMut::new(buffer_0), IoSliceMut::new(buffer_1)];\n        reader\n            .read_vectored(buffer)\n            .expect(\"Error reading from file\");\n        do_something(buffer_0, buffer_1);\n    }\n}\n</code></pre>\n\n<p>Now, if I declare <code>buffer</code> outside of the loop, like this:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{BufReader, IoSliceMut, Read};\n\nfn do_something(buffer_0: &amp;[u8; 8], buffer_1: &amp;[u8; 2]) {\n    // Do something\n}\n\nfn main() {\n    let file = File::open(\"/path/to/file\").expect(\"Error opening file\");\n\n    let mut reader = BufReader::new(file);\n    let buffer_0 = &amp;mut [0; 8];\n    let buffer_1 = &amp;mut [0; 2];\n\n    let buffer = &amp;mut [IoSliceMut::new(buffer_0), IoSliceMut::new(buffer_1)];\n\n    loop {\n        reader\n            .read_vectored(buffer)\n            .expect(\"Error reading from file\");\n        do_something(buffer_0, buffer_1);\n    }\n}\n</code></pre>\n\n<p>The following compilation error appears:</p>\n\n<pre><code>error[E0502]: cannot borrow `*buffer_0` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:21:22\n   |\n15 |     let buffer = &amp;mut [IoSliceMut::new(buffer_0), IoSliceMut::new(buffer_1)];\n   |                                        -------- mutable borrow occurs here\n...\n19 |             .read_vectored(buffer)\n   |                            ------ mutable borrow later used here\n20 |             .expect(\"Error reading from file\");\n21 |         do_something(buffer_0, buffer_1);\n   |                      ^^^^^^^^ immutable borrow occurs here\n</code></pre>\n\n<p>Same of course for <code>buffer_1</code>.</p>\n\n<p>I don't understand why this code is considered unsafe inside the loop. Also, is it possible to make it safe without moving the <code>buffer</code> declaration?</p>\n\n<p>Rust gurus wisdom is much appreciated :)</p>\n"}, {"tags": ["rust", "rust-actix", "actix-web"], "comments": [{"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "edited": false, "score": 0, "creation_date": 1577659328, "post_id": 57074119, "comment_id": 105218857, "body": "Is <i>the suggested way</i> from the examples? <a href=\"https://github.com/actix/examples/blob/master/multipart/src/main.rs\" rel=\"nofollow noreferrer\">github.com/actix/examples/blob/master/multipart/src/main.rs</a>"}, {"owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "reply_to_user": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "edited": false, "score": 0, "creation_date": 1577693307, "post_id": 57074119, "comment_id": 105225370, "body": "@arve0 I have already solved this probleme."}], "owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 454, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1563360495, "creation_date": 1563360495, "question_id": 57074119, "link": "https://stackoverflow.com/questions/57074119/how-to-process-files-from-actix-multipart-data-without-saving-it-to-the-disk", "title": "How to process files from actix-multipart data without saving it to the disk", "body": "<p>The suggested way by <code>actix-web</code> to treat files from <code>multipart/form-data</code> is to save them to fs, but I'd like to make some preparations like guessing format, making thumbnail, calc a hash etc.</p>\n\n<p>Is there a way not to rewrite all the chain of functions called by <code>handle_multipart</code> from <code>actix-multipart</code> in order to make several minor changes?</p>\n"}, {"tags": ["image-processing", "rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563359714, "post_id": 57073697, "comment_id": 100671229, "body": "Don&#39;t you want to <code>dither</code> to a BiLevel map ?"}, {"owner": {"reputation": 706, "user_id": 9931829, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-7Ad7YeZRvyk/AAAAAAAAAAI/AAAAAAAAF7A/Y8MY18vEsEE/photo.jpg?sz=128", "display_name": "beep", "link": "https://stackoverflow.com/users/9931829/beep"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563360456, "post_id": 57073697, "comment_id": 100671587, "body": "Yes, this is what I was looking for...however official doc does not say so much about dithering...can you elaborate an answer?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1563361141, "post_id": 57073697, "comment_id": 100671959, "body": "yes I guess I can show you"}], "answers": [{"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1563362903, "post_id": 57074669, "comment_id": 100672870, "body": "Somebody should probably improve the crate&#39;s doc with more examples like this one. It&#39;s not obvious without reading the source."}, {"owner": {"reputation": 706, "user_id": 9931829, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-7Ad7YeZRvyk/AAAAAAAAAAI/AAAAAAAAF7A/Y8MY18vEsEE/photo.jpg?sz=128", "display_name": "beep", "link": "https://stackoverflow.com/users/9931829/beep"}, "edited": false, "score": 0, "creation_date": 1563372325, "post_id": 57074669, "comment_id": 100678759, "body": "Thanks for your help...however i don&#39;t fully understand how <code>BiLevel</code>(so a <code>ColorMap</code>) should be implemented."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 706, "user_id": 9931829, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-7Ad7YeZRvyk/AAAAAAAAAAI/AAAAAAAAF7A/Y8MY18vEsEE/photo.jpg?sz=128", "display_name": "beep", "link": "https://stackoverflow.com/users/9931829/beep"}, "edited": false, "score": 0, "creation_date": 1563372709, "post_id": 57074669, "comment_id": 100679015, "body": "What do you mean implemented ? You don&#39;t have to implement it. Do you mean you want another dithering algorithm ? Here&#39;s <a href=\"https://docs.rs/image/0.21.2/src/image/imageops/colorops.rs.html#192\" rel=\"nofollow noreferrer\">the implementation of BiLevel</a>"}, {"owner": {"reputation": 706, "user_id": 9931829, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-7Ad7YeZRvyk/AAAAAAAAAAI/AAAAAAAAF7A/Y8MY18vEsEE/photo.jpg?sz=128", "display_name": "beep", "link": "https://stackoverflow.com/users/9931829/beep"}, "edited": false, "score": 0, "creation_date": 1563373179, "post_id": 57074669, "comment_id": 100679349, "body": "Never mind, i haven&#39;t imported BiLevel from <code>image::imageops::colorps</code> module, so the compiler gave me an error...now everything works!"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 706, "user_id": 9931829, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-7Ad7YeZRvyk/AAAAAAAAAAI/AAAAAAAAF7A/Y8MY18vEsEE/photo.jpg?sz=128", "display_name": "beep", "link": "https://stackoverflow.com/users/9931829/beep"}, "edited": false, "score": 0, "creation_date": 1563373294, "post_id": 57074669, "comment_id": 100679415, "body": "@bzoark Sorry for that, I&#39;ll add the use statements to my answer (don&#39;t directly import from colorops: it&#39;s reexported in imageops)"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 4, "last_activity_date": 1563373327, "last_edit_date": 1563373327, "creation_date": 1563362458, "answer_id": 57074669, "question_id": 57073697, "link": "https://stackoverflow.com/questions/57073697/how-to-convert-a-picture-in-pure-black-and-white-in-rust/57074669#57074669", "title": "How to convert a picture in pure black and white in Rust", "body": "<p>Here's how you can first build a grayscale image then dither it to a Black and White one:</p>\n\n<pre><code>use image::{self, imageops::*};\n\nlet img = image::open(\"cat.jpeg\").unwrap();\nlet mut img = img.grayscale();\nlet mut img = img.as_mut_luma8().unwrap();\ndither(&amp;mut img, &amp;BiLevel);\nimg.save(\"cat.png\").unwrap(); // this step is optional but convenient for testing\n</code></pre>\n\n<p>You should of course properly handle errors instead of just doing <code>unwrap</code>.</p>\n"}], "owner": {"reputation": 706, "user_id": 9931829, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-7Ad7YeZRvyk/AAAAAAAAAAI/AAAAAAAAF7A/Y8MY18vEsEE/photo.jpg?sz=128", "display_name": "beep", "link": "https://stackoverflow.com/users/9931829/beep"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 519, "favorite_count": 0, "accepted_answer_id": 57074669, "answer_count": 1, "score": 0, "last_activity_date": 1563373327, "creation_date": 1563359006, "question_id": 57073697, "link": "https://stackoverflow.com/questions/57073697/how-to-convert-a-picture-in-pure-black-and-white-in-rust", "title": "How to convert a picture in pure black and white in Rust", "body": "<p>I want to convert a picture in pure black and white(e.g. no grayscale) using <code>Image</code> crate, the result should be a picture with 0 and 255 RGB values.</p>\n\n<p>Following the <a href=\"https://crates.io/crates/image\" rel=\"nofollow noreferrer\">docs</a> i've wrote the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let img = image::open(\"photo.jpg\").unwrap(); // Load picture\nlet gray_img = img.grayscale(); // Convert it\n\n// Access a random pixel value\nlet px = gray_img.get_pixel(0,0);\nprintln!(\"{:?}\", pixel.data); // Print RGB array\n</code></pre>\n\n<p>The problem here is that, whatever pixel i print, it gives me grayscale value.\nSo, is there a function to convert an image in pure black and white? Something like <a href=\"https://pillow.readthedocs.io/en/3.1.x/index.html\" rel=\"nofollow noreferrer\">Pillow</a>'s convert function for Python?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1563356185, "post_id": 57072743, "comment_id": 100669362, "body": "<i>&quot;usually I would use a static variable and assign value in an unsafe block.&quot;</i> You shouldn&#39;t usually use unsafe"}, {"owner": {"reputation": 206, "user_id": 11158948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373a326dd4eaf79cab8300ddb0da49d8?s=128&d=identicon&r=PG&f=1", "display_name": "strangethingspy", "link": "https://stackoverflow.com/users/11158948/strangethingspy"}, "edited": false, "score": 0, "creation_date": 1563356460, "post_id": 57072743, "comment_id": 100669502, "body": "Should have added that I&#39;m doing rust for 2 days, so it&#39;s not been a long time using it :D"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563356555, "post_id": 57072743, "comment_id": 100669564, "body": "That&#39;s fine. Just listen to the compiler, he will tell you what&#39;s wrong. E.g. using of uninitialized variables, redundant parentheses, not assigned variables etc."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563357058, "post_id": 57072743, "comment_id": 100669815, "body": "And don&#39;t use a static variable. The simplest solution is to pass around what you need in a variable."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563359794, "post_id": 57072743, "comment_id": 100671265, "body": "Make sure to use <code>rustfmt</code> next time. In fact you should use it all the time, when you write code, because it will format your code properly and you won&#39;t loose track on your code."}], "answers": [{"comments": [{"owner": {"reputation": 206, "user_id": 11158948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373a326dd4eaf79cab8300ddb0da49d8?s=128&d=identicon&r=PG&f=1", "display_name": "strangethingspy", "link": "https://stackoverflow.com/users/11158948/strangethingspy"}, "edited": false, "score": 0, "creation_date": 1563369847, "post_id": 57076422, "comment_id": 100677113, "body": "Thank you very much! I will follow your suggestions and return the value from the function instead of messing with references."}], "tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": true, "score": 2, "last_activity_date": 1563368296, "creation_date": 1563368296, "answer_id": 57076422, "question_id": 57072743, "link": "https://stackoverflow.com/questions/57072743/i-need-help-using-mutable-reference-in-different-functions/57076422#57076422", "title": "I need help using mutable reference in different functions", "body": "<p>This is mostly correct; they only real issue preventing it from building is here:</p>\n\n<pre><code>fn expense_sum(expense_list: &amp;Vec&lt;u64&gt;, expenses: &amp;mut u64) {\n    expenses = &amp;mut (expense_list.iter().sum());\n}\n</code></pre>\n\n<p>This syntax tries to assign the reference, instead of modifying the actual value referred. You need to dereference and then simply assign:</p>\n\n<pre><code>*expenses = expense_list.iter().sum();\n</code></pre>\n\n<p>That being said, this is bad practice. It's much better to simply return the value using... the return value of the function:</p>\n\n<pre><code>fn expense_sum(expense_list: &amp;Vec&lt;u64&gt;) -&gt; u64 {\n    expense_list.iter().sum()\n}\n</code></pre>\n\n<p>That way the code is shorter and much readable, and you avoid all the unnecessary reference handling. You'll need to modify your <code>prompt_expense</code> function in a similar manner.</p>\n"}], "owner": {"reputation": 206, "user_id": 11158948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373a326dd4eaf79cab8300ddb0da49d8?s=128&d=identicon&r=PG&f=1", "display_name": "strangethingspy", "link": "https://stackoverflow.com/users/11158948/strangethingspy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 57076422, "answer_count": 1, "score": 0, "last_activity_date": 1563368296, "creation_date": 1563355964, "last_edit_date": 1563359751, "question_id": 57072743, "link": "https://stackoverflow.com/questions/57072743/i-need-help-using-mutable-reference-in-different-functions", "title": "I need help using mutable reference in different functions", "body": "<p>I am learning rust so some things might seem obvious and easy but I can't understand some things.</p>\n\n<p>I need to have <code>income</code> and <code>expenses</code> variables to change their value, usually I would use a <code>static</code> variable and assign value in an <code>unsafe</code> block.</p>\n\n<p>Here is the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn expense_sum(expense_list: &amp;Vec&lt;u64&gt;, expenses: &amp;mut u64) {\n    expenses = &amp;mut (expense_list.iter().sum());\n}\n\nfn prompt_expense(expense_list: &amp;mut Vec&lt;u64&gt;, expense_name: &amp;mut Vec&lt;String&gt;, expenses: &amp;mut u64) {\n    let expense_input: u64 = 1;\n    expense_list.push(expense_input);\n\n    let expense_name1: String = \"test1\".to_string();\n\n    expense_name.push(expense_name1);\n\n    expense_sum(&amp;expense_list, expenses);\n    println!(\"Total user expenses: {}\", expenses);\n}\n\nfn main() {\n    let mut expense_list: Vec&lt;u64&gt; = Vec::new();\n    let mut expense_name: Vec&lt;String&gt; = Vec::new();\n    let mut expenses: u64;\n\n    loop {\n        prompt_expense(&amp;mut expense_list, &amp;mut expense_name, &amp;mut expenses);\n        // USe income and expenses here for analysis\n    }\n}\n</code></pre>\n\n<p>I've tested in many ways, but I could not get to pass succesfully the variables to <code>expense_sum</code> and <code>income_sum</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563347370, "post_id": 57069932, "comment_id": 100664500, "body": "Please use <code>rustfmt</code> to format your code according to the community guidelines. You can find it in the upper right corner of <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">the playground</a>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563347388, "post_id": 57069932, "comment_id": 100664513, "body": "Please read: <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-or\" title=\"why is it discouraged to accept a reference to a string string vec vec or\">stackoverflow.com/questions/40006219/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563347486, "post_id": 57070113, "comment_id": 100664561, "body": "Instead of <code>println!(&quot;{:#?}&quot;, result);</code> you could use <code>dbg!(result)</code> which roughly does the same ;)"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563347531, "post_id": 57070113, "comment_id": 100664603, "body": "<code>dbg!</code> doesn&#39;t do the same: it does more (and is more useful for debugging)"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 2, "last_activity_date": 1563347410, "last_edit_date": 1563347410, "creation_date": 1563346408, "answer_id": 57070113, "question_id": 57069932, "link": "https://stackoverflow.com/questions/57069932/how-does-ownership-and-borrowing-work-when-making-slices/57070113#57070113", "title": "How does ownership and borrowing work when making slices?", "body": "<p>Let's decompose:</p>\n\n<pre><code>// Let's build a string, which basically is a growable array of chars\nlet mut s = String::from(\"Hello world\");\n\n// now make result a slice over that string, that is a reference\n// to a part of the underlying chars\nlet result = first_word(&amp;s);\n\n// now let's remove the content of the string (which of course removes\n// what the slice was referring to)\ns.clear();\n\n// and let's... print it ?\nprintln!(\"{:#?}\", result);\n</code></pre>\n\n<p>Hopefully the borrow checker prevents you from doing this with this exact error:</p>\n\n<blockquote>\n  <p>cannot borrow <code>s</code> as mutable because it is also borrowed as immutable</p>\n</blockquote>\n\n<p>And if you've understood this, the solution should be obvious: don't make <code>result</code> a window over another string but a string by itself, having its own content: change the second line to</p>\n\n<pre><code>let result = first_word(&amp;s).to_string();\n</code></pre>\n\n<p>Now you can clear the source string and keep the first word. Of course <code>to_string()</code> isn't a costless operation so you might want to try keep the source string around in real applications.</p>\n"}, {"tags": [], "owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "is_accepted": false, "score": 1, "last_activity_date": 1563354979, "last_edit_date": 1563354979, "creation_date": 1563354102, "answer_id": 57072206, "question_id": 57069932, "link": "https://stackoverflow.com/questions/57069932/how-does-ownership-and-borrowing-work-when-making-slices/57072206#57072206", "title": "How does ownership and borrowing work when making slices?", "body": "<p>The key thing here is lifetimes. By default lifetimes argument for functions with one input reference and output reference are the same (<a href=\"https://doc.rust-lang.org/1.9.0/book/lifetimes.html#lifetime-elision\" rel=\"nofollow noreferrer\">liftime elision</a>). So compiler implicitly changes the code following way:</p>\n\n<pre><code>fn first_word&lt;'a&gt;(s: &amp;'a String) -&gt; &amp;'a str {  // note 'a here\n    let bytes = s.as_bytes();\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        if item == b' ' {\n            return &amp;s[0..i];\n        }\n    }\n    &amp;s[..]\n}\n</code></pre>\n\n<p>That means that the result borrows the input argument. You can explicitly make lifetimes different and eliminate error in the <code>main</code> but in this case <code>first_word</code> will not compile:</p>\n\n<pre><code>fn first_word1&lt;'a, 'b&gt;(s: &amp;'a String) -&gt; &amp;'b str {\n    let bytes = s.as_bytes();\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        if item == b' ' {\n            return &amp;s[0..i];\n        }\n    }\n    &amp;s[..]\n}\n\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n --&gt; src/main.rs:7:21\n  |\n7 |             return &amp;s[0..i];\n  |                     ^^^^^^^\n  |\nnote: first, the lifetime cannot outlive the lifetime 'a as defined on the function body\n</code></pre>\n"}], "owner": {"reputation": 327, "user_id": 11180444, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PwV4h.jpg?s=128&g=1", "display_name": "Muhammad Areeb Siddiqui", "link": "https://stackoverflow.com/users/11180444/muhammad-areeb-siddiqui"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 57070113, "answer_count": 2, "score": 2, "last_activity_date": 1563354979, "creation_date": 1563345718, "last_edit_date": 1563350837, "question_id": 57069932, "link": "https://stackoverflow.com/questions/57069932/how-does-ownership-and-borrowing-work-when-making-slices", "title": "How does ownership and borrowing work when making slices?", "body": "<p>Here are two code snippets, but they show a different behavior and I couldn't understand what's going on in there. Their main function is identical. If the borrowing and ownership concept applies to one code (i.e to code 2) why not to another code i.e (code 1)?</p>\n\n<p>code 1:</p>\n\n<p>This code compiles with no errors and prompt the result.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut s = String::from(\"Hello world\");\n    let result = first_word(&amp;s);\n    s.clear();\n    println!(\"result:{:#?}\", result);\n}\n\nfn first_word(s: &amp;String) -&gt; usize {\n    let s = s.as_bytes();\n    //println!(\"{:?}\",s);\n    for (i, &amp;item) in s.iter().enumerate() {\n        if item == 32 {\n            return i;\n        }\n    }\n    s.len()\n}\n</code></pre>\n\n<p>Code 1 Output :</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Finished dev [unoptimized + debuginfo] target(s) in 0.28s\n Running `target/debug/rust_Slices`\n result:5\n</code></pre>\n\n<p>Code 2: \nThis code won't compile and gives an error.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut s = String::from(\"Hello world\");\n    let result = first_word(&amp;s);\n    s.clear();\n    println!(\"{:#?}\", result);\n}\n\nfn first_word(s: &amp;String) -&gt; &amp;str {\n    let bytes = s.as_bytes();\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        if item == b' ' {\n            return &amp;s[0..i];\n        }\n    }\n    &amp;s[..]\n}\n</code></pre>\n\n<p>Code 2 Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cannot borrow `s` as mutable because it is also borrowed as immutable\n --&gt; src/main.rs:4:4\n  |\n3 |    let result = first_word(&amp;s);\n  |                            -- immutable borrow occurs here\n4 |    s.clear();\n  |    ^^^^^^^^^ mutable borrow occurs here\n5 |     println!(\"{:#?}\",result);\n  |                      ------ immutable borrow later used here\n</code></pre>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1563344088, "post_id": 57069269, "comment_id": 100663032, "body": "Look at the <a href=\"https://rust-lang-nursery.github.io/failure/\" rel=\"nofollow noreferrer\">failure</a> crate, which intends to eventually supersede the std error management mechanism."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1589380433, "post_id": 57069269, "comment_id": 109271731, "body": "@Jmb failure is deprecated and should not be recommended for new projects."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1589380543, "post_id": 57069269, "comment_id": 109271803, "body": "<i>a way to implement <code>std::convert::From&lt;std::error::Error&gt;</code></i> \u2014 this isn&#39;t a well-formed type (at least not the way you mean it). See <a href=\"https://stackoverflow.com/q/50650070/155423\">What does \u201cdyn\u201d mean in a type?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1589380824, "post_id": 57069269, "comment_id": 109271976, "body": "TL;DR the duplicates \u2014 no, there&#39;s not. You&#39;d have to do <code>impl&lt;T: std::error::Error&gt; std::convert::From&lt;T&gt; for ParseError</code> but that will conflict as soon as you have a second <code>From</code> impl"}], "owner": {"reputation": 11, "user_id": 7196827, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-p1mql56Lk_w/AAAAAAAAAAI/AAAAAAAAAcY/MByigFdGbyM/photo.jpg?sz=128", "display_name": "&#205;talo Cunha", "link": "https://stackoverflow.com/users/7196827/%c3%8dtalo-cunha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 179, "favorite_count": 0, "closed_date": 1589380441, "answer_count": 0, "score": 1, "last_activity_date": 1589380473, "creation_date": 1563342624, "last_edit_date": 1589380146, "question_id": 57069269, "link": "https://stackoverflow.com/questions/57069269/how-to-implement-stdconvertfromstderrorerror-for-a-custom-error", "closed_reason": "Duplicate", "title": "How to implement std::convert::From&lt;std::error::Error&gt; for a custom error?", "body": "<p>I have implemented a custom error class in a module that reads from a CSV file. As different errors can occur while reading the file, I have implemented the <code>std::convert::From</code> for all types of errors that can occur in the code. However, given I do not need any information about the errors themselves, I wish I could just implement <code>From&lt;Error&gt;</code> (or use a more streamlined approach).</p>\n\n<p>This is the code implementing the custom error:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\npub struct ParseError {\n    kind: ParseErrorKind,\n    message: String,\n}\n#[derive(Eq, PartialEq, Hash, Debug)]\npub enum ParseErrorKind {\n    Untracked,\n    TrackedError1,\n    TrackedError2,\n    TrackedErrorN,\n}\nimpl std::convert::From&lt;std::num::ParseIntError&gt; for ParseError {\n    fn from(error: std::num::ParseIntError) -&gt; Self {\n        ParseError {\n            kind: ParseErrorKind::Untracked,\n            message: error.to_string(),\n        }\n    }\n}\nimpl std::convert::From&lt;std::num::ParseFloatError&gt; for ParseError {\n    fn from(error: std::num::ParseFloatError) -&gt; Self {\n        ParseError {\n            kind: ParseErrorKind::Untracked,\n            message: error.to_string(),\n        }\n    }\n}\n</code></pre>\n\n<p>It is generated in functions that parse CSV records:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    fn from_record(rec: &amp;HashMap&lt;String, String&gt;) -&gt; Result&lt;Info, ParseError&gt; {\n        Ok(Info {\n            field: rec[\"column\"].parse::&lt;u32&gt;()?,\n        })\n    }\n</code></pre>\n\n<p>And I use the error in the the loader function to count tracked errors:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>            // let error_counts: HashMap&lt;ParseErrorKind, u64&gt;;\n            let info = match Info::from_record(&amp;record) {\n                Ok(i) =&gt; i,\n                Err(e) =&gt; {\n                    *error_counts.entry(e.kind).or_insert(0) += 1;\n                    continue;\n                }\n            };\n</code></pre>\n\n<p>Is there a way to implement <code>std::convert::From&lt;std::error::Error&gt;</code>, or are there other streamlined approaches?</p>\n"}, {"tags": ["rust", "macros"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1563341358, "post_id": 57067811, "comment_id": 100662064, "body": "To get the variable name (i.e. <code>the_foo</code>) is easy. To get the type would probably be best achieved by declaring a trait, similar to  <code>Debug</code> and implementing it. Are you after something like the <code>dbg!</code> macro ?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1563345097, "post_id": 57067811, "comment_id": 100663402, "body": "A macro parameter of type <code>expr</code> can take arbitrary expressions. What is the declared name in <code>print_entity!(some_var + 100 * another_var)</code>?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1563347588, "post_id": 57067811, "comment_id": 100664638, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/21747136/how-do-i-print-the-type-of-a-variable-in-rust\">How do I print the type of a variable in Rust?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1563344920, "creation_date": 1563344920, "answer_id": 57069738, "question_id": 57067811, "link": "https://stackoverflow.com/questions/57067811/how-to-get-a-declared-variable-name-and-variable-type-via-macros/57069738#57069738", "title": "How to get a declared variable name and variable type via macros", "body": "<p>If you only need that for debugging, you can get the compiler to print an error message with the type like this:</p>\n\n<pre><code>let foo: () = 1i32;\n</code></pre>\n\n<p>which gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:24:15\n   |\n24 | let foo: () = 1i32;\n   |               ^^^^ expected (), found i32\n   |\n   = note: expected type `()`\n              found type `i32`\n</code></pre>\n\n<p>Or, building on @Denys S\u00e9guret's comment, you need to define a trait and implement it for every type you may want to print (this can be made easier with a macro too):</p>\n\n<pre><code>trait TypeToStr {\n    fn get_type_str (&amp;self) -&gt; &amp;'static str;\n}\n\nmacro_rules! impl_type_to_str {\n    ($($T: ty),+) =&gt; {\n        $(\n        impl TypeToStr for $T {\n            fn get_type_str (&amp;self) -&gt; &amp;'static str { stringify!($T) }\n        }\n        )*\n    }\n}\n\nimpl_type_to_str!(i32, f64);\n\nmacro_rules! print_type {\n    ($e: expr) =&gt; {\n        println!(\"{} has type {}\", stringify!($e), $e.get_type_str());\n    }\n}\n\nfn main() {\n    print_type!(1i32);\n    print_type!(3.14f64);\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=968b23d545972edbcd22c6f5665957d4\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 227, "favorite_count": 0, "accepted_answer_id": 57069738, "answer_count": 1, "score": 0, "last_activity_date": 1563344920, "creation_date": 1563331044, "question_id": 57067811, "link": "https://stackoverflow.com/questions/57067811/how-to-get-a-declared-variable-name-and-variable-type-via-macros", "title": "How to get a declared variable name and variable type via macros", "body": "<pre><code>macro_rules! print_entity {\n    ($x: expr) =&gt; {\n        {\n            println!(\"Object type: {}\\nDeclared name: {}\\n\")\n        }\n    }\n}\n</code></pre>\n\n<p>For reference of definition, consider:</p>\n\n<pre><code>let the_foo: MyBar = MyBar::new();\n</code></pre>\n\n<p>In the case of the macro above, the \"Declared name\" value should equal the_foo. The struct type should equal TheBar. How can this be done?</p>\n\n<pre><code>print_entity!(the_foo);\n</code></pre>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563324661, "post_id": 57066471, "comment_id": 100658958, "body": "note that you probably just want to derive <a href=\"https://doc.rust-lang.org/std/fmt/trait.Debug.html#examples\" rel=\"nofollow noreferrer\"><code>Debug</code></a> trait"}, {"owner": {"reputation": 1546, "user_id": 2989337, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/JoDFi.png?s=128&g=1", "display_name": "JawguyChooser", "link": "https://stackoverflow.com/users/2989337/jawguychooser"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1563375348, "post_id": 57066471, "comment_id": 100680700, "body": "@Stargateur: if this was all I really had to do, sure! But this is a representative simplification of the actual traits I need to implement."}], "answers": [{"comments": [{"owner": {"reputation": 1546, "user_id": 2989337, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/JoDFi.png?s=128&g=1", "display_name": "JawguyChooser", "link": "https://stackoverflow.com/users/2989337/jawguychooser"}, "edited": false, "score": 2, "creation_date": 1563375540, "post_id": 57066700, "comment_id": 100680826, "body": "Thanks!  I almost found this match solution but didn&#39;t have a few details right.  Perfect answer!"}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 9, "last_activity_date": 1563347974, "last_edit_date": 1563347974, "creation_date": 1563320063, "answer_id": 57066700, "question_id": 57066471, "link": "https://stackoverflow.com/questions/57066471/how-do-i-implement-a-trait-for-an-enum-and-its-respective-variants/57066700#57066700", "title": "How do I implement a trait for an enum and its respective variants?", "body": "<p>One possible solution could be to implement your trait for the variants as well as for the <code>enum</code>, which as you can see here only calls the specific implementations of the variants:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt;\n\nstruct NData {\n    numeric: u32,\n}\n\nimpl fmt::Display for NData {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{}\", self.numeric)\n    }\n}\n\nstruct SData {\n    strings: Vec&lt;String&gt;,\n}\n\nimpl fmt::Display for SData {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{:?}\", self.strings)\n    }\n}\n\nenum Data {\n    N(NData),\n    S(SData),\n}\n\nimpl fmt::Display for Data {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        match self {\n            Data::N(n_data) =&gt; n_data.fmt(f),\n            Data::S(s_data) =&gt; s_data.fmt(f),\n        }\n    }\n}\n\nfn main() {\n    let n = NData { numeric: 0xff };\n    let s = SData { strings: vec![\"hello\".to_string(), \"world\".to_string()] };\n\n    println!(\"{}\", n);\n    println!(\"{}\", s);\n\n    let d_n = Data::N(n);\n    let d_s = Data::S(s);\n\n    println!(\"{}\", d_n);\n    println!(\"{}\", d_s);\n}\n</code></pre>\n\n<p>Which will produce the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>255\n[\"hello\", \"world\"]\n255\n[\"hello\", \"world\"]\n</code></pre>\n"}], "owner": {"reputation": 1546, "user_id": 2989337, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/JoDFi.png?s=128&g=1", "display_name": "JawguyChooser", "link": "https://stackoverflow.com/users/2989337/jawguychooser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1182, "favorite_count": 3, "accepted_answer_id": 57066700, "answer_count": 1, "score": 4, "last_activity_date": 1563350983, "creation_date": 1563317955, "last_edit_date": 1563350983, "question_id": 57066471, "link": "https://stackoverflow.com/questions/57066471/how-do-i-implement-a-trait-for-an-enum-and-its-respective-variants", "title": "How do I implement a trait for an enum and its respective variants?", "body": "<p>I'm trying to use enum variants to capture data which is heterogeneous in nature (has different collections of fields) but which is of the same \"type\" from a protocol perspective.  However, I'm not sure how to implement subtype-specific methods and traits.  Here is a minimal example of how I can create an enumeration of Data and I can use enum variant constructors to specify the types, but if I implement a trait on the variant, calling that function is not something I've figured out how to do.</p>\n\n<pre><code>use std::fmt;\n\nenum Data {\n    N(NData),\n    S(SData),\n}\n\nstruct NData {\n    numeric: u32,\n}\n\nimpl fmt::Display for NData {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{}\", self.numeric)\n    }\n}\n\nstruct SData {\n    stringy: Vec&lt;String&gt;,\n}\n\nfn main() {\n    let d_n: Data = Data::N(NData { numeric: 0x0 });\n    let n = NData { numeric: 0xff };\n\n    // Fails, fmt::Display not implemented for Data\n    println!(\"{}\", d_n);\n\n    // Just fine!\n    println!(\"{}\", n);\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-actix", "rust-diesel", "actix-web"], "answers": [{"comments": [{"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1563646571, "post_id": 57122463, "comment_id": 100771521, "body": "Thanks, but the right way is to use it like this: <code>get_infos(pool: web::Data&lt;Pool&lt;ConnectionManager&lt;MysqlConnection&gt;&gt;&gt;) -&gt; Vec&lt;Book&gt;</code> and then from the router passing data: <code>.data(pool.clone())</code>"}, {"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1563646647, "post_id": 57122463, "comment_id": 100771533, "body": "Adding <code>web::Data</code> and <code>web::block</code> if the DB is synchronous."}, {"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1563646996, "post_id": 57122463, "comment_id": 100771613, "body": "And finally of course getting the connection from the pool inside the function: <code>let conn = db.get().unwrap();</code> just like you did, I will mark it as solved, thank you."}], "tags": [], "owner": {"reputation": 3244, "user_id": 687438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5cabf9d1f557d1ebb90dbe683981aca6?s=128&d=identicon&r=PG", "display_name": "Martin Gallagher", "link": "https://stackoverflow.com/users/687438/martin-gallagher"}, "is_accepted": true, "score": 3, "last_activity_date": 1563605463, "creation_date": 1563605463, "answer_id": 57122463, "question_id": 57066292, "link": "https://stackoverflow.com/questions/57066292/how-to-use-pooling-of-database-inside-function-using-actix/57122463#57122463", "title": "How to use pooling of database inside function using actix?", "body": "<p>For your handlers; just add the pool as a parameter, then you can pass a pinned connection to downstream functions:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Data = actix_web::web::Data\npub fn get_all_books(pool: Data&lt;Pool&gt;) -&gt; HttpResponse {\n    let connection = pool.get().expect(\"Failed to get connection\");\n    let books = get_infos(&amp;connection);\n\n    HttpResponse::Ok().json(books)\n}\n\npub fn get_infos(connection: &amp;MysqlConnection) -&gt; Vec&lt;Book&gt; {\n    all_books\n        .order(books::id.desc())\n        .load::&lt;Book&gt;(conn)\n        .expect(\"error loading the books\")\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 327, "user_id": 9617771, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MTAUf.jpg?s=128&g=1", "display_name": "benyamin", "link": "https://stackoverflow.com/users/9617771/benyamin"}, "is_accepted": false, "score": 0, "last_activity_date": 1595031370, "creation_date": 1595031370, "answer_id": 62963306, "question_id": 57066292, "link": "https://stackoverflow.com/questions/57066292/how-to-use-pooling-of-database-inside-function-using-actix/62963306#62963306", "title": "How to use pooling of database inside function using actix?", "body": "<p>the right answer with passing the pool through the controller :</p>\n<pre><code>let database_url = env::var(&quot;DATABASE_URL&quot;).expect(&quot;DATABASE_URL must be set&quot;);\nlet manager = ConnectionManager::&lt;MysqlConnection&gt;::new(database_url);\nlet pool = r2d2::Pool::builder()\n.build(manager)\n.expect(&quot;Failed to create pool.&quot;);\nHttpServer::new(move || {\n    App::new()\n        .data(pool.clone())\n        .route(&quot;/&quot;, web::get().to(index))\n        .configure(todoController::init)\n})\n</code></pre>\n<p>this is working.</p>\n"}], "owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 531, "favorite_count": 2, "accepted_answer_id": 57122463, "answer_count": 2, "score": 4, "last_activity_date": 1595031370, "creation_date": 1563316428, "question_id": 57066292, "link": "https://stackoverflow.com/questions/57066292/how-to-use-pooling-of-database-inside-function-using-actix", "title": "How to use pooling of database inside function using actix?", "body": "<p>I created a pool for MySQL database like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let database_url = env::var(\"DATABASE_URL\").expect(\"set DATABASE_URL\");\n\nlet manager = ConnectionManager::&lt;MysqlConnection&gt;::new(database_url);\nlet pool = r2d2::Pool::builder()\n    .build(manager)\n    .expect(\"Failed to create pool.\");\n</code></pre>\n\n<p>Included inside actix like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>HttpServer::new(move || App::new()\n    .data(pool.clone()) // &lt;-- HERE\n    .service(\n        web::resource(\"/infos\")\n          .route(web::post().to(get_infos))\n    ))\n\n    .bind(\"127.0.0.1:8080\")?\n    .start();\n\nprintln!(\"Starting http server: 127.0.0.1:8080\");\n</code></pre>\n\n<p>Here come the problem, how it's possible to use it inside this info function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn get_infos(conn: &amp;MysqlConnection) -&gt; Vec&lt;Book&gt; {\n    all_books\n        .order(books::id.desc())\n        .load::&lt;Book&gt;(conn)\n        .expect(\"error loading the books\")\n}\n</code></pre>\n\n<p>Passing directly one instance of MySQL connection to get_infos working well, but using pool I have no idea on how to process it ?! Any help please ?</p>\n\n<p>For more clarification, my goal is to use POOLING instead of using one instance only like it's the case in this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let database_url = env::var(\"DATABASE_URL\").expect(\"set DATABASE_URL\");\nlet conn = MysqlConnection::establish(&amp;database_url).unwrap();\n// And then passing as argument \"conn\" to get_infos function.\n</code></pre>\n\n<p>I initiated the POOL to actix in the previous code:\n<code>\n.data(pool.clone()) // &lt;-- HERE</code></p>\n\n<p>But how to pass it as parameter to <code>get_infos</code> function.</p>\n\n<p>Thanks again in advance for your help.</p>\n"}, {"tags": ["rust", "rust-actix", "actix-web"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1563305850, "post_id": 57064126, "comment_id": 100653779, "body": "I think FormData deserialization is only possible with Post/x-www-form-urlencoded requests right now. See <a href=\"https://actix.rs/docs/extractors/\" rel=\"nofollow noreferrer\">actix.rs/docs/extractors</a>"}, {"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563306297, "post_id": 57064126, "comment_id": 100653976, "body": "@DenysS&#233;guret Thank you ! I got it solved using POST method + enctype (x-www-form-urlencoded). You can make a comment so I can accept your answer ;)"}], "answers": [{"comments": [{"owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "edited": false, "score": 0, "creation_date": 1563306923, "post_id": 57064474, "comment_id": 100654232, "body": "Thank you, I choose the first solution that feet my need."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 3, "last_activity_date": 1563306514, "creation_date": 1563306514, "answer_id": 57064474, "question_id": 57064126, "link": "https://stackoverflow.com/questions/57064126/catch-get-post-requests-from-html-page-using-actix-web/57064474#57064474", "title": "Catch GET &amp; POST requests from HTML page using actix-web", "body": "<p>As is <a href=\"https://actix.rs/docs/extractors/\" rel=\"nofollow noreferrer\">mentioned in code comments in the documentation</a>, FormData deserialization is only possible with Post/x-www-form-urlencoded requests (for the moment):</p>\n\n<pre><code>/// extract form data using serde\n/// this handler gets called only if the content type is *x-www-form-urlencoded*\n/// and the content of the request could be deserialized to a `FormData` struct\nfn index(form: web::Form&lt;FormData&gt;) -&gt; Result&lt;String&gt; {\n    Ok(format!(\"Welcome {}!\", form.username))\n}\n</code></pre>\n\n<p>So you have two solutions:</p>\n\n<p>1) change your form to a post/x-www-form-urlencoded one. This is easy in your example but it's not always possible in real applications</p>\n\n<p>2) use another form of data extraction (there are several other extractors)</p>\n"}, {"tags": [], "owner": {"reputation": 44271, "user_id": 78336, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/896cfc242a7762467c2a0b2af86598e5?s=128&d=identicon&r=PG", "display_name": "neoneye", "link": "https://stackoverflow.com/users/78336/neoneye"}, "is_accepted": false, "score": 0, "last_activity_date": 1598173634, "creation_date": 1598173634, "answer_id": 63545214, "question_id": 57064126, "link": "https://stackoverflow.com/questions/57064126/catch-get-post-requests-from-html-page-using-actix-web/63545214#63545214", "title": "Catch GET &amp; POST requests from HTML page using actix-web", "body": "<p>I had this problem too, and solved it by changing from <code>web::Form</code> to <code>web::Query</code>.</p>\n<ul>\n<li>For <code>POST</code> requests, then use <a href=\"https://docs.rs/actix-web/2.0.0/actix_web/web/struct.Form.html\" rel=\"nofollow noreferrer\">web::Form</a>.</li>\n<li>For <code>GET</code> requests, then use <a href=\"https://docs.rs/actix-web/2.0.0/actix_web/web/struct.Query.html\" rel=\"nofollow noreferrer\">web::Query</a>.</li>\n</ul>\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Deserialize)]\nstruct FormData {\n    username: String,\n}\n\nfn get_user_detail_as_plaintext(form: web::Query&lt;FormData&gt;) -&gt; Result&lt;String&gt; {\n    Ok(format!(&quot;User: {}!&quot;, form.username))\n}\n</code></pre>\n"}], "owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 625, "favorite_count": 0, "accepted_answer_id": 57064474, "answer_count": 2, "score": 4, "last_activity_date": 1598173634, "creation_date": 1563304883, "last_edit_date": 1563305330, "question_id": 57064126, "link": "https://stackoverflow.com/questions/57064126/catch-get-post-requests-from-html-page-using-actix-web", "title": "Catch GET &amp; POST requests from HTML page using actix-web", "body": "<p>I am getting an error message when submitting HTML form in order to catch the requested details inside FORM (I am using actix-web).</p>\n\n<p>When I submit the FORM, I am getting this error:</p>\n\n<p><code>Content type error</code></p>\n\n<p>The code used:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Deserialize)]\nstruct FormData {\n    paire: String,\n}\n\n\nfn showit(form: web::Form&lt;FormData&gt;) -&gt; String {\n    println!(\"Value to show: {}\", form.paire);\n    form.paire.clone()\n}\n\n....\n\n.service(\n  web::resource(\"/\")\n    .route(web::get().to(showit))\n    .route(web::head().to(|| HttpResponse::MethodNotAllowed()))\n))\n\n</code></pre>\n\n<p>HTML form used:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form action=\"http://127.0.0.1:8080/\" method=\"get\"&gt;\n&lt;input type=\"text\" name=\"paire\" value=\"Example of value to show\"&gt;\n&lt;input type=\"submit\"&gt;\n</code></pre>\n\n<p>The expected result will be:</p>\n\n<blockquote>\n  <p>Example of value to show</p>\n</blockquote>\n"}, {"tags": ["regex", "rust", "whitespace", "removing-whitespace"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user557597"}, "edited": false, "score": 0, "creation_date": 1563303620, "post_id": 57063777, "comment_id": 100652831, "body": "Use <code>\\s+</code> replace with nothing. <code>inclusion of the &#39;regex&#39; crate, ...</code>"}, {"owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "edited": false, "score": 3, "creation_date": 1563306935, "post_id": 57063777, "comment_id": 100654237, "body": "I think this is a good question. This isn&#39;t a duplicate (closest is <a href=\"https://stackoverflow.com/q/37792471/1896169\">stackoverflow.com/q/37792471/1896169</a> , which you could argue this is a duplicate of, but it&#39;s clearly hard to find this one if you search for terms in this question), and at the least, it is a clear, concrete problem. Also, this is definitely not &quot;too broad.&quot; It&#39;s a very clear defined problem, and a single problem."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "edited": false, "score": 0, "creation_date": 1563310802, "post_id": 57063777, "comment_id": 100655828, "body": "@Justin Still look like code request, this is a trivial question, any basic search would have answer this, I think we could even close as duplicate <a href=\"https://stackoverflow.com/questions/37792471/removing-elements-from-a-vec-based-on-some-condition\" title=\"removing elements from a vec based on some condition\">stackoverflow.com/questions/37792471/&hellip;</a>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "edited": false, "score": 1, "creation_date": 1563311850, "post_id": 57063777, "comment_id": 100656191, "body": "@Justin We usually expect a greater amount of research before asking. For one, searching the standard library alone for <a href=\"https://doc.rust-lang.org/std/?search=replace\" rel=\"nofollow noreferrer\"><code>replace</code></a> returns <code>std::str::replace</code> as the third entry, which would have also done the job well. This is the kind of question that may well become useful, but will just have to prove its own usefulness with time."}, {"owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1563312641, "post_id": 57063777, "comment_id": 100656443, "body": "@Stargateur I very much disagree. Basic searches for removing whitespace from a string, erasing whitespace from a string, etc, don&#39;t turn up anything useful for Rust. You get other highly upvoted things for other languages, but not for Rust."}, {"owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1563312828, "post_id": 57063777, "comment_id": 100656497, "body": "@E_net4isoutofcommentflags I have to disagree. How would you know to search for &quot;replace&quot;? This operation isn&#39;t obviously a replace; it&#39;s an erase/removal. When I did the basic research for this question, I found this <a href=\"https://stackoverflow.com/q/6219454/1896169\">highly upvoted C# question</a> which is practically the same thing. The only way I was able to turn up useful results for Rust was by having the knowledge on what terms to remove from the search and what similar things to search for---at that level, a new Stack Overflow question is entirely appropriate."}, {"owner": {"reputation": 3457, "user_id": 3753446, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4Pipl.png?s=128&g=1", "display_name": "Magix", "link": "https://stackoverflow.com/users/3753446/magix"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1563312888, "post_id": 57063777, "comment_id": 100656516, "body": "@Stargateur I searched before asking, and I asked specifically because there was no good, well-defined answer for Rust. Also, I believe over time this question could become a comparison between the different methods if many good answers exist"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "edited": false, "score": 1, "creation_date": 1563314228, "post_id": 57063777, "comment_id": 100656926, "body": "@Justin note that stackoverflow has changed a lot between now and 2011 also as e_net4 said this question will probably get upvote in the future, we agree this question is not useless just it&#39;s still trivial and easy to answer. This kind of question is more suitable to be self answered. Asking such thing that just a look to string documentation answer is just low research effort. Even if Magix said s/he search, that still a fail to find basic answer. Also I downvote on the first version of the question that you almost all rewrite."}, {"owner": {"reputation": 3457, "user_id": 3753446, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4Pipl.png?s=128&g=1", "display_name": "Magix", "link": "https://stackoverflow.com/users/3753446/magix"}, "edited": false, "score": 0, "creation_date": 1563324664, "post_id": 57063777, "comment_id": 100658960, "body": "@sln Your comment would make a good answer if accompanied by a code example and a small explanation imo"}], "answers": [{"tags": [], "owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "is_accepted": true, "score": 27, "last_activity_date": 1599443482, "last_edit_date": 1599443482, "creation_date": 1563304083, "answer_id": 57063944, "question_id": 57063777, "link": "https://stackoverflow.com/questions/57063777/remove-all-whitespace-from-string/57063944#57063944", "title": "Remove all whitespace from string", "body": "<p>If you want to modify the <code>String</code>, use <code>retain</code>. This is likely the fastest way when available.</p>\n<pre><code>fn remove_whitespace(s: &amp;mut String) {\n    s.retain(|c| !c.is_whitespace());\n}\n</code></pre>\n<p>If you cannot modify it because you still need it or only have a <code>&amp;str</code>, then you can use filter and create a new <code>String</code>. This will, of course, have to allocate to make the <code>String</code>.</p>\n<pre><code>fn remove_whitespace(s: &amp;str) -&gt; String {\n    s.chars().filter(|c| !c.is_whitespace()).collect()\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1563351136, "post_id": 57067262, "comment_id": 100666527, "body": "@Magix <code>split_whitespace</code> does not consume the string, so making the function receive a string slice is the right thing to do. <code>collect</code> will create a <code>String</code> from the iterator of characters, but this will be the only allocation either way."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563353012, "post_id": 57067262, "comment_id": 100667481, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6b86c8a9cb6138c0d554110c3e1c3822\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 3457, "user_id": 3753446, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4Pipl.png?s=128&g=1", "display_name": "Magix", "link": "https://stackoverflow.com/users/3753446/magix"}, "is_accepted": false, "score": 10, "last_activity_date": 1563381941, "last_edit_date": 1563381941, "creation_date": 1563326003, "answer_id": 57067262, "question_id": 57063777, "link": "https://stackoverflow.com/questions/57063777/remove-all-whitespace-from-string/57067262#57067262", "title": "Remove all whitespace from string", "body": "<p>A good option is to use <code>split_whitespace</code> and then collect to a string :</p>\n\n<pre><code>fn remove_whitespace(s: &amp;str) -&gt; String {\n    s.split_whitespace().collect()\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3457, "user_id": 3753446, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4Pipl.png?s=128&g=1", "display_name": "Magix", "link": "https://stackoverflow.com/users/3753446/magix"}, "edited": false, "score": 0, "creation_date": 1609865029, "post_id": 65526468, "comment_id": 115952735, "body": "Nice ! This only works with normal space characters, though. In practice, there is a number of whitespace characters that one would want to remove, which are found using <code>is_whitespace()</code>"}], "tags": [], "owner": {"reputation": 1150, "user_id": 4777273, "user_type": "registered", "accept_rate": 67, "profile_image": "https://graph.facebook.com/803047056409985/picture?type=large", "display_name": "Jurij Jazdanov", "link": "https://stackoverflow.com/users/4777273/jurij-jazdanov"}, "is_accepted": false, "score": 0, "last_activity_date": 1609460102, "creation_date": 1609460102, "answer_id": 65526468, "question_id": 57063777, "link": "https://stackoverflow.com/questions/57063777/remove-all-whitespace-from-string/65526468#65526468", "title": "Remove all whitespace from string", "body": "<p>Actually I found a shorter approach</p>\n<pre><code>fn no_space(x : String) -&gt; String{\n  x.replace(&quot; &quot;, &quot;&quot;)\n}\n</code></pre>\n"}], "owner": {"reputation": 3457, "user_id": 3753446, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4Pipl.png?s=128&g=1", "display_name": "Magix", "link": "https://stackoverflow.com/users/3753446/magix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8791, "favorite_count": 2, "accepted_answer_id": 57063944, "answer_count": 3, "score": 17, "last_activity_date": 1609460102, "creation_date": 1563303332, "last_edit_date": 1563306608, "question_id": 57063777, "link": "https://stackoverflow.com/questions/57063777/remove-all-whitespace-from-string", "title": "Remove all whitespace from string", "body": "<p>How do I remove all whitespace from a string? I can think of some obvious methods such as looping over the string and removing each whitespace character, or using regular expressions, but these solutions are not that expressive or efficient. What is a simple and efficient way to remove all whitespace from a string?</p>\n"}, {"tags": ["pointers", "rust", "unsafe"], "comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1563293857, "post_id": 57061421, "comment_id": 100648547, "body": "Why can&#39;t you just turn the string representation back to an unsigned integer first?"}, {"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "reply_to_user": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1563294379, "post_id": 57061421, "comment_id": 100648777, "body": "Ah, would this be done via transmute or something under std::mem or std::ptr?"}, {"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "reply_to_user": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1563294436, "post_id": 57061421, "comment_id": 100648811, "body": "Also, please correct me if I&#39;m wrong as I learn low-level coding, but aren&#39;t all pointers the same size in memory unto themselves? (needed to know how many bits to use for unsigned)"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 2, "creation_date": 1563294844, "post_id": 57061421, "comment_id": 100649031, "body": "The essentials here are answered in <a href=\"https://stackoverflow.com/questions/32381414/converting-a-hexadecimal-string-to-a-decimal-integer\">here</a>, using <code>from_str_radix()</code> to convert e.g. &quot;0xdeadbeef&quot; to an integer; from there you cast to a ptr* and hope nobody is looking"}], "answers": [{"comments": [{"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "edited": false, "score": 1, "creation_date": 1563296299, "post_id": 57061881, "comment_id": 100649690, "body": "Thank you! I&#39;m glad we have this answered on SO now. Although it&#39;s not unexpected when rust is using magnum over a baloon for protection."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "edited": false, "score": 1, "creation_date": 1563297027, "post_id": 57061881, "comment_id": 100649967, "body": "No worries, really, but be careful whatever you are going to use it for!  (I warned you ;))  Also, I rejected your edit, because that is not helping the understanding IMO.  I would suggest you to post it as a separate answer if you like."}, {"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "edited": false, "score": 0, "creation_date": 1563297174, "post_id": 57061881, "comment_id": 100650022, "body": "With mutexes, and some graphs, I&#39;m sure I&#39;ll be able to pull out before anything unwanted happens ;). Thank you, and no probs with the edit."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1563297201, "post_id": 57061881, "comment_id": 100650031, "body": "Worth mentioning that there are multiple problems in this solution: 1. it only works for 64-bit pointer width targets, one should use <code>usize</code> instead of <code>u64</code>; 2. one doesn&#39;t need <code>transmute</code>, you can cast the <code>usize</code> value to a raw pointer with <code>as</code> and dereference it instead; 3. this creates a reference with n unbounded lifetime, so it can live longer than the original value. See <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=6bee25c3e9243d30f93e5f2c9a4b3e57\" rel=\"nofollow noreferrer\">playground example</a> with suggested changes + UB."}, {"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "edited": false, "score": 0, "creation_date": 1563298890, "post_id": 57061881, "comment_id": 100650768, "body": "Very interesting addition Enet. Thanks!"}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 1, "last_activity_date": 1563298380, "last_edit_date": 1563298380, "creation_date": 1563295062, "answer_id": 57061881, "question_id": 57061421, "link": "https://stackoverflow.com/questions/57061421/getting-pointer-by-str/57061881#57061881", "title": "Getting pointer by &amp;str", "body": "<p>So essentially what you want to do is parse the string back to an integer (<code>usize</code>) and then interpret that value as a pointer/reference<sup>&dagger;</sup>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main()\n{\n    let i = 12i32;\n    let r = format!(\"{:p}\", &amp;i);\n\n\n    let x = unsafe\n    {\n        let r = r.trim_start_matches(\"0x\");\n        &amp;*(usize::from_str_radix(&amp;r, 16).unwrap() as *const i32)\n    };\n\n    println!(\"{}\", x);\n}\n</code></pre>\n\n<p>You can try this yourself in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=66ff20c75866a7af8477474e701a5b39\" rel=\"nofollow noreferrer\">playground</a>.</p>\n\n<p><sup>&dagger;</sup>As you can see, you don't even need to cast your reference into a raw pointer, the <code>{:p}</code> formatter takes care of representing it as a memory location (index).</p>\n\n<hr>\n\n<p><strong>Update</strong>: As E_net4 mentioned this in the comment section, it is better to use <code>usize</code> here, which is architecture defined unlike the machine sized one.  The <code>transmute</code> was not necessary, so I removed it.  The third point about undefined behaviour however seems obvious to whomever tries to do something like the above.  This answer provides a way to achieve what the OP asked for which doesn't mean this should be used for anything else than academic/experimental purposes :)</p>\n"}], "owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 57061881, "answer_count": 1, "score": 0, "last_activity_date": 1563298380, "creation_date": 1563293177, "question_id": 57061421, "link": "https://stackoverflow.com/questions/57061421/getting-pointer-by-str", "title": "Getting pointer by &amp;str", "body": "<p>Consider this pseudocode:</p>\n\n<pre><code>    let k = 10;\n    let ptr = &amp;k as *const k;\n    println!(\"{:p}\", ptr); // prints address of pointer\n    let addr = format!(\"{:p}\", ptr);\n\n    super-unsafe {\n    // this would obviously be super unsafe. It may even cause a STATUS_ACCESS_VIOLATION if you try getting memory from a page that the OS didn't allocate to the program!\n\n    let ptr_gen = PointerFactory::from_str(addr.as_str()); \n\n    assert_eq!(k, *ptr_gen);\n    }\n</code></pre>\n\n<p>The pseudocode gets the idea across: I want to be able to get a pointer to a certain memory address by its &amp;str representation. Is this... possible?</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1563290998, "post_id": 57060393, "comment_id": 100647010, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/45580658/how-do-i-explicitly-call-a-method-on-a-slice-without-using-a-typedef\">How do I explicitly call a method on a slice without using a typedef?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": true, "score": 4, "last_activity_date": 1563290807, "creation_date": 1563290807, "answer_id": 57060716, "question_id": 57060393, "link": "https://stackoverflow.com/questions/57060393/how-to-use-serdes-skip-serializing-if-with-empty-slices/57060716#57060716", "title": "How to use serde&#39;s skip_serializing_if with empty slices?", "body": "<p>The slice type <code>[T]</code> has an <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.is_empty\" rel=\"nofollow noreferrer\"><code>is_empty</code></a> method too. Here is how you would call it:</p>\n\n<pre><code>use serde::Serialize;\n\n#[derive(Serialize)]\nstruct S&lt;'a&gt; {\n    #[serde(skip_serializing_if = \"&lt;[_]&gt;::is_empty\")]\n    slice: &amp;'a [String]\n}\n\nfn main() {\n    let s = S { slice: &amp;[] };\n    println!(\"{}\", serde_json::to_string(&amp;s).unwrap());\n}\n</code></pre>\n"}], "owner": {"reputation": 2505, "user_id": 749521, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/302a64f5f51a7f8dc83c0881f4520eb5?s=128&d=identicon&r=PG", "display_name": "Steven Roose", "link": "https://stackoverflow.com/users/749521/steven-roose"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "accepted_answer_id": 57060716, "answer_count": 1, "score": 3, "last_activity_date": 1563290807, "creation_date": 1563289754, "question_id": 57060393, "link": "https://stackoverflow.com/questions/57060393/how-to-use-serdes-skip-serializing-if-with-empty-slices", "title": "How to use serde&#39;s skip_serializing_if with empty slices?", "body": "<p>One can do <code>#[serde(skip_serializing_if = \"Vec::is_empty\")]</code> for <code>Vec</code>s, but what is the equivalent for slices?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563288375, "post_id": 57059910, "comment_id": 100645441, "body": "You can collect into any type that implements <code>FromIterator</code>. So not precising the type is ambiguous."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1563288737, "post_id": 57059910, "comment_id": 100645663, "body": "Relevant: <a href=\"https://stackoverflow.com/q/30972047/1233251\">stackoverflow.com/q/30972047/1233251</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563288775, "post_id": 57059910, "comment_id": 100645689, "body": "Both times that you use <code>collect</code>, you then call <code>join()</code>. Rust doesn&#39;t know which implementation of <code>join</code> you mean until it knows the type returned by <code>collect</code>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1563288927, "post_id": 57059910, "comment_id": 100645790, "body": "Note that in the general case, if you want to display your matrix, you&#39;d better define a struct implementing Display and wrapping your buffer rather than use intermediate strings. You can do the whole without any String."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1563289573, "post_id": 57059910, "comment_id": 100646194, "body": "Also relevant: <a href=\"https://stackoverflow.com/questions/36941851/whats-an-idiomatic-way-to-print-an-iterator-separated-by-spaces-in-rust\">What&#39;s an idiomatic way to print an iterator separated by spaces in Rust?</a>"}, {"owner": {"reputation": 1251, "user_id": 2603925, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/92e0bd82c3fbfeeef3996f83b7ed76f4?s=128&d=identicon&r=PG", "display_name": "Luke Skywalker", "link": "https://stackoverflow.com/users/2603925/luke-skywalker"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563290379, "post_id": 57059910, "comment_id": 100646651, "body": "@DenysS&#233;guret could you please create an answer and illustrate your proposal?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563291832, "post_id": 57059910, "comment_id": 100647510, "body": "@LukeSkywalker I can&#39;t as the question is closed"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563291982, "post_id": 57059910, "comment_id": 100647600, "body": "@LukeSkywalker Here&#39;s the kind of solution I had in mind: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=309ec420b04925f9f84bd03a9e25661f\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "owner": {"reputation": 1251, "user_id": 2603925, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/92e0bd82c3fbfeeef3996f83b7ed76f4?s=128&d=identicon&r=PG", "display_name": "Luke Skywalker", "link": "https://stackoverflow.com/users/2603925/luke-skywalker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 40, "favorite_count": 0, "closed_date": 1563288806, "answer_count": 0, "score": 0, "last_activity_date": 1563288647, "creation_date": 1563288207, "last_edit_date": 1563288647, "question_id": 57059910, "link": "https://stackoverflow.com/questions/57059910/rust-chunks-and-joins", "closed_reason": "Duplicate", "title": "Rust chunks and joins", "body": "<p>Is there a more elegant way of chunking an array and then joining it?</p>\n\n<pre><code>fn main() {\n    let size = 4;\n    let buffer = vec![0; size * size];\n\n    let pbm = format!(\n        \"P4\\n{} {}\\n{}\",\n        size,\n        size,\n        buffer\n            .chunks(size)\n            .map(|chunk| chunk\n                .into_iter()\n                .map(|x| x.to_string())\n                .collect::&lt;Vec&lt;String&gt;&gt;()\n                .join(\" \"))\n            .collect::&lt;Vec&lt;String&gt;&gt;()\n            .join(\"\\n\")\n    );\n\n    println!(\"{:?}\", pbm);\n}\n</code></pre>\n\n<p>Why do I have to precise type to <code>collect</code>? Shouldn't it find it out by at what <code>map</code> returns?</p>\n"}, {"tags": ["rust", "gstreamer"], "answers": [{"comments": [{"owner": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "edited": false, "score": 0, "creation_date": 1563304674, "post_id": 57060967, "comment_id": 100653264, "body": "When I removed the gst-plugin crate and set glib to 0.8 I was unable to find the definition of the <code>plugin_define!</code> or <code>gst_plugin_define!</code> macro.  Switching from published crates to the git repos did allow me to start compiling and developing code.  I anticipate as the plugin API stabilizes it will be possible again to create plugins that use published crates."}, {"owner": {"reputation": 1771, "user_id": 3040948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e165e48a46079440f8ae438b0a3ed88?s=128&d=identicon&r=PG", "display_name": "Sebastian Dr&#246;ge", "link": "https://stackoverflow.com/users/3040948/sebastian-dr%c3%b6ge"}, "reply_to_user": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "edited": false, "score": 1, "creation_date": 1563307579, "post_id": 57060967, "comment_id": 100654496, "body": "It&#39;s possible to use the released versions on crates.io just fine. What problem were you running into? E.g. the <a href=\"https://gitlab.freedesktop.org/gstreamer/gst-plugins-rs/tree/0.5\" rel=\"nofollow noreferrer\">0.5 branch</a> of the <code>gst-plugins-rs</code> repository is using released versions of everything. Check that for the tutorials code that works with releases."}], "tags": [], "owner": {"reputation": 1771, "user_id": 3040948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e165e48a46079440f8ae438b0a3ed88?s=128&d=identicon&r=PG", "display_name": "Sebastian Dr&#246;ge", "link": "https://stackoverflow.com/users/3040948/sebastian-dr%c3%b6ge"}, "is_accepted": true, "score": 2, "last_activity_date": 1563291631, "creation_date": 1563291631, "answer_id": 57060967, "question_id": 57059793, "link": "https://stackoverflow.com/questions/57059793/what-dependencies-are-needed-to-write-rust-gstreamer-plugins-for-gstreamer-crate/57060967#57060967", "title": "What dependencies are needed to write rust/gstreamer plugins for gstreamer crate 0.14?", "body": "<p>You can find new versions of the tutorials <a href=\"https://gitlab.freedesktop.org/gstreamer/gst-plugins-rs/tree/master/gst-plugin-tutorial\" rel=\"nofollow noreferrer\">here</a> and the latest version of the code <a href=\"https://gitlab.freedesktop.org/gstreamer/gst-plugins-rs/tree/master/gst-plugin-tutorial\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Your problem is that you're still using the <code>gst-plugin</code> crate, but that's obsolete nowadays and everything's part of the <code>glib</code> / <code>gstreamer</code> / <code>gstreamer-base</code> / etc crates now if you enable the <code>subclass</code> feature of them. See the links above for the details.</p>\n\n<p>Depending on the old version of the <code>gst-plugin</code> crate will pull in an older version of the <code>glib-sys</code> (and others) crate, and you can't have two different versions of a <code>-sys</code> crate in the same project.</p>\n\n<p>You'll have the same problem again if you uncomment the <code>glib</code> dependency. Once you update that to the <code>0.8</code> version of <code>glib</code>, that error would also go away.</p>\n"}, {"tags": [], "owner": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "is_accepted": false, "score": 0, "last_activity_date": 1563305420, "creation_date": 1563305420, "answer_id": 57064241, "question_id": 57059793, "link": "https://stackoverflow.com/questions/57059793/what-dependencies-are-needed-to-write-rust-gstreamer-plugins-for-gstreamer-crate/57064241#57064241", "title": "What dependencies are needed to write rust/gstreamer plugins for gstreamer crate 0.14?", "body": "<p>As a variation on Sebastian's answer, I experimented with a Cargo.toml that doesn't point at git and uses released crates.</p>\n\n<pre><code>glib = \"0.8\"\ngstreamer = \"0.14\"\ngstreamer-base = \"0.14\"\ngstreamer-video = \"0.14\"\n#gst-plugin = \"0.3.2\"\n</code></pre>\n\n<p>That failed to provide a definition for <code>gst_plugin_define!</code> .  It seems that is part of the subclassing feature.  Switching to the following dependencies:</p>\n\n<pre><code>glib = { version = \"0.8\", features = [ \"subclassing\"] }\ngstreamer = { version = \"0.14\", features = [ \"subclassing\"] }\ngstreamer-base = { version = \"0.14\", features = [ \"subclassing\"] }\ngstreamer-video = \"0.14\"\n</code></pre>\n\n<p>activated the code defining the <code>gst_plugin_define!</code> macro.</p>\n"}], "owner": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 439, "favorite_count": 0, "accepted_answer_id": 57060967, "answer_count": 2, "score": 1, "last_activity_date": 1563305420, "creation_date": 1563287825, "question_id": 57059793, "link": "https://stackoverflow.com/questions/57059793/what-dependencies-are-needed-to-write-rust-gstreamer-plugins-for-gstreamer-crate", "title": "What dependencies are needed to write rust/gstreamer plugins for gstreamer crate 0.14?", "body": "<p>I am trying to follow the tutorial at <a href=\"https://coaxion.net/blog/2018/01/how-to-write-gstreamer-elements-in-rust-part-1-a-video-filter-for-converting-rgb-to-grayscale/\" rel=\"nofollow noreferrer\">https://coaxion.net/blog/2018/01/how-to-write-gstreamer-elements-in-rust-part-1-a-video-filter-for-converting-rgb-to-grayscale/</a> about writing gstreamer plugins using rust.</p>\n\n<p>If you follow the tutorial to the first point where I have compilable code  Cargo.toml is </p>\n\n<pre><code>[package]\nname = \"gst-plugin-tutorial\"\nversion = \"0.1.0\"\nauthors = [\"Sebastian Dr\u00c3\u00b6ge &lt;sebastian@centricular.com&gt;\"]\nrepository = \"https://github.com/sdroege/gst-plugin-rs\"\nlicense = \"MIT/Apache-2.0\"\n\n[dependencies]\nglib = \"0.4\"\ngstreamer = \"0.10\"\ngstreamer-base = \"0.10\"\ngstreamer-video = \"0.10\"\ngst-plugin = \"0.1\"\n\n[lib]\nname = \"gstrstutorial\"\ncrate-type = [\"cdylib\"]\npath = \"src/lib.rs\"\n</code></pre>\n\n<p>and src/lib.rs is </p>\n\n<pre><code>extern crate glib;\n#[macro_use]\nextern crate gstreamer as gst;\nextern crate gstreamer_base as gst_base;\nextern crate gstreamer_video as gst_video;\n#[macro_use]\nextern crate gst_plugin;\n\nplugin_define!(\n    b\"rstutorial\\0\",\n    b\"Rust Tutorial Plugin\\0\",\n    plugin_init,\n    b\"1.0\\0\",\n    b\"MIT/X11\\0\",\n    b\"rstutorial\\0\",\n    b\"rstutorial\\0\",\n    b\"https://github.com/sdroege/gst-plugin-rs\\0\",\n    b\"2017-12-30\\0\"\n);\n\nfn plugin_init(plugin: &amp;gst::Plugin) -&gt; bool {\n    true\n}\n</code></pre>\n\n<p>This compiles, but the project for which I need to write a plugin uses gstreamer 1.16, so it needs rust crate gstreamer 0.14.</p>\n\n<p>When I alter the Cargo.toml to reference recent versions of the gstreamer crate:</p>\n\n<pre><code>[dependencies]\n#glib = \"0.4\"\ngstreamer = \"0.14\"\ngstreamer-base = \"0.14\"\ngstreamer-video = \"0.14\"\ngst-plugin = \"0.3.2\"\n</code></pre>\n\n<p>I get errors at build time:</p>\n\n<pre><code>    Updating crates.io index\nerror: failed to select a version for `glib-sys`.\n    ... required by package `gstreamer-base v0.14.0`\n    ... which is depended on by `gst-plugin-tutorial v0.1.0 (/home/thoth/src/rust-gst-plugin-exp/coaxion-plugin)`\nversions that meet the requirements `^0.9` are: 0.9.0\n\nthe package `glib-sys` links to the native library `glib`, but it conflicts with a previous package which links to `glib` as well:\npackage `glib-sys v0.7.0`\n    ... which is depended on by `gst-plugin v0.3.2`\n    ... which is depended on by `gst-plugin-tutorial v0.1.0 (/home/thoth/src/rust-gst-plugin-exp/coaxion-plugin)`\n\nfailed to select a version for `glib-sys` which could resolve this conflict\n</code></pre>\n\n<p>What is the proper mix of crate versions to write gstreamer plugins in rust for use with gstreamer 1.16 ? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1563284403, "post_id": 57058469, "comment_id": 100642801, "body": "The borrow checker does not see through functions. In many languages, &quot;extracting a function&quot; is considered an idempotent refactoring. This is not generally true in Rust."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1563284585, "post_id": 57058469, "comment_id": 100642933, "body": "Consider what the signature of <code>get_b()</code> says with explicit lifetimes: <code>fn get_b(&amp;&#39;a mut self, a2: &amp;&#39;b A2) -&gt; &amp;&#39;a mut B2</code>. The lifetime of <code>&amp;mut B2</code> is the tied to that of <code>&amp;mut self</code> which means you can&#39;t use <code>self</code> while the <code>&amp;mut B2</code> reference exists."}], "owner": {"reputation": 3724, "user_id": 103636, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BS3Z5.png?s=128&g=1", "display_name": "Laurent Gr&#233;goire", "link": "https://stackoverflow.com/users/103636/laurent-gr%c3%a9goire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 29, "favorite_count": 0, "closed_date": 1563285823, "answer_count": 0, "score": 0, "last_activity_date": 1563285752, "creation_date": 1563283931, "last_edit_date": 1563285752, "question_id": 57058469, "link": "https://stackoverflow.com/questions/57058469/on-the-influence-of-inlining-a-function-on-rust-borrow-checker", "closed_reason": "Duplicate", "title": "On the influence of inlining a function on rust borrow checker", "body": "<p>Why the following code compiles:</p>\n\n<pre><code>struct U2 { index: usize }\nstruct U { ulist: Vec&lt;U2&gt; }\nstruct V2 { value: u8 }\nstruct V { vlist: Vec&lt;V2&gt; }\nstruct UV { u: U, v: V }\n\nimpl V2 {\n    fn bar(&amp;mut self) {\n        self.value = 42;\n    }\n}\nimpl UV {\n    fn foo(&amp;mut self) {\n        for u2 in &amp;self.u.ulist {\n            let v2 = &amp;mut self.v.vlist[u2.index];\n            v2.bar();\n        }\n    }\n}\n</code></pre>\n\n<p>Whereas the following one, exactly the same as the previous code except for the line <code>self.v.vlist[u2.index]</code> which has been extracted to a function, does not:</p>\n\n<pre><code>struct A2 { index: usize }\nstruct A { alist: Vec&lt;A2&gt; }\nstruct B2 { value: u8 }\nstruct B { blist: Vec&lt;B2&gt; }\nstruct AB { a: A, b: B }\n\nimpl B2 {\n    fn bar(&amp;mut self) {\n        self.value = 42;\n    }\n}\nimpl AB {\n    // New function\n    fn get_b(&amp;mut self, a2: &amp;A2) -&gt; &amp;mut B2 {\n        &amp;mut self.b.blist[a2.index]\n    }\n    fn foo(&amp;mut self) {\n        for a2 in &amp;self.a.alist {\n            let b2 = self.get_b(a2);\n            // error[E0502]: cannot borrow `*self` as mutable\n            // because it is also borrowed as immutable\n            b2.bar();\n        }\n    }\n}\n</code></pre>\n\n<p>I'm new to Rust, so excuse me in advance for my bliss ignorance, but this difference makes me mad, and I cannot see how to code this cleanly.</p>\n\n<hr>\n\n<p><strong>Edit</strong></p>\n\n<p>I've solved my issue on borrowing only part of self (<code>self.b</code>), by using the following function:</p>\n\n<pre><code>// ... (snip) ...\nimpl AB {\n    fn get_b&lt;'a, 'b&gt;(b: &amp;'b mut B, a2: &amp;'a A2) -&gt; &amp;'b mut B2 {\n        &amp;mut b.blist[a2.index]\n    }\n    fn foo(&amp;mut self) {\n        for a2 in &amp;self.a.alist {\n            let b2 = AB::get_b(&amp;mut self.b, a2);\n            b2.bar();\n        }\n    }\n}\n</code></pre>\n\n<p>Is this proper rust?</p>\n"}, {"tags": ["rust", "arm", "cross-compiling", "portaudio", "jack"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563280152, "post_id": 57057281, "comment_id": 100640186, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/26246849/how-to-i-tell-rust-where-to-look-for-a-static-library\">How to I tell Rust where to look for a static library?</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563280164, "post_id": 57057281, "comment_id": 100640190, "body": "<i>&quot;warning: libjack.so.0, needed by /usr/lib/arm-linux-gnueabihf/libportaudio.so, not found (try using -rpath or -rpath-link)&quot;</i>"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563281112, "post_id": 57057281, "comment_id": 100640746, "body": "If you believe my question can be answered by editing <code>.cargo&#47;config</code> to instruct rustc-link-lib where to link, kindly post that as an answer. If the answer is a duplicate of any other answer on SO, I will gladly close and mark it as a dupe."}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 101, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1563280120, "creation_date": 1563280010, "last_edit_date": 1563280120, "question_id": 57057281, "link": "https://stackoverflow.com/questions/57057281/jack-linking-when-cross-compiling-rust-program-for-arm", "title": "JACK linking when cross-compiling Rust program for ARM", "body": "<p>I'm trying to cross-compile a Rust program for ARM that uses <code>portaudio</code>, but it's complaining about missing JACK references even though <code>libjack</code> and <code>libjack-dev</code> packages are installed, with <code>libjack.so</code> and <code>libjack.so.0</code> present.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `arm-linux-gnueabihf-gcc-with-link-search` failed: exit code: 1\n  | &lt;omitted...&gt;\n \"/root/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/arm-unknown-linux-gnueabihf/lib/libcompiler_builtins-97e19be7db966560.rlib\" \"-Wl,-Bdynamic\" \"-lportaudio\" \"-lasound\" \"-lm\" \"-lpthread\" \"-lutil\" \"-lutil\" \"-ldl\" \"-lrt\" \"-lpthread\" \"-lgcc_s\" \"-lc\" \"-lm\" \"-lrt\" \"-lpthread\" \"-lutil\" \"-lutil\"\n  = note: /opt/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/../lib/gcc/arm-linux-gnueabihf/4.8.3/../../../../arm-linux-gnueabihf/bin/ld: warning: libjack.so.0, needed by /usr/lib/arm-linux-gnueabihf/libportaudio.so, not found (try using -rpath or -rpath-link)\n          /usr/lib/arm-linux-gnueabihf/libportaudio.so: undefined reference to `jack_on_shutdown'\n          /usr/lib/arm-linux-gnueabihf/libportaudio.so: undefined reference to `jack_port_name'\n          /usr/lib/arm-linux-gnueabihf/libportaudio.so: undefined reference to `jack_connect'\n          /usr/lib/arm-linux-gnueabihf/libportaudio.so: undefined reference to `jack_frame_time'\n          /usr/lib/arm-linux-gnueabihf/libportaudio.so: undefined reference to `jack_port_by_name'\n\netc.\n</code></pre>\n\n<p>What library or compiler flag am I missing to get a simple Rust Portaudio application to link for ARM?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563276852, "post_id": 57055461, "comment_id": 100638380, "body": "Voting to reopen as the real answer isn&#39;t NLL but anonymous references (I checked that OP&#39;s code works with compilers dating from before NLL). There might be another dupe target, though."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1563295686, "post_id": 57055461, "comment_id": 100649411, "body": "@Denys I don&#39;t agree: the fact the references are anonymous is made irrelevant by the fact that even if they <i>weren&#39;t</i>, the code in the question is fundamentally correct and allowed. That older versions of the compiler <i>used</i> to reject similar code but treated temporaries differently, doesn&#39;t mean anything particularly useful about the language today."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1563295853, "post_id": 57055461, "comment_id": 100649502, "body": "<a href=\"https://stackoverflow.com/q/53954053/3650362\">Another relevant question</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1563304350, "post_id": 57055461, "comment_id": 100653130, "body": "@trentcl You don&#39;t get it. The older compiler accepted the exact code of OP just like the new ones. It&#39;s just not a matter of NLL. NLL solved different cases and it&#39;s 100% wrong to say NLL makes this work. The real answer is in a part of the specification which didn&#39;t change."}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1563275666, "post_id": 57055548, "comment_id": 100637710, "body": "<b>Not</b> being lexical doesn&#39;t tell you much about how it actually works. It&#39;s better to say that lifetimes <i>used</i> to be based purely on lexical scopes, but now they are more flexible so that more valid programs are accepted. Future improvements to lifetime flexibility will also be non-lexical."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 1, "last_activity_date": 1563304825, "last_edit_date": 1563304825, "creation_date": 1563274098, "answer_id": 57055548, "question_id": 57055461, "link": "https://stackoverflow.com/questions/57055461/why-can-we-have-multiple-mutable-references-to-the-same-data-in-the-same-scope/57055548#57055548", "title": "Why can we have multiple mutable references to the same data in the same scope?", "body": "<p>In this cases, the references are anonymous. The lifetime of the <code>&amp;mut name</code> reference in your call to <code>fun1</code> <a href=\"https://doc.rust-lang.org/reference/expressions.html?highlight=lifetime,argument#temporary-lifetimes\" rel=\"nofollow noreferrer\">is the enclosing statement</a>, that is <code>fun1(&amp;mut name);</code>.</p>\n\n<p>So <strong>the lifetime of the first mutable reference ends before the start of the second one</strong>.</p>\n\n<p>If you had explicitly declared the references, the order would have determined whether there's a conflict (thanks to <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">NLL</a>).</p>\n\n<p>This isn't valid:</p>\n\n<pre><code>let r1 = &amp;mut name;\nlet r2 = &amp;mut name;\nfun1(r1);\nfun2(r2);\n</code></pre>\n\n<p>This is valid (with a recent enough version of rustc):</p>\n\n<pre><code>let r1 = &amp;mut name;\nfun1(r1);\nlet r2 = &amp;mut name;\nfun2(r2);\n</code></pre>\n\n<p>because the borrow checker can determine that r1 isn't used anymore when r2 is declared.</p>\n\n<p>And as you might discover if you try to put a new thread behind fun1: no, you can't pass the mutable borrow to another thread from inside fun1. As soon as fun1 ends, the mutable borrow is released, it's syntactically guaranteed.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user5818995"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "closed_date": 1563274290, "accepted_answer_id": 57055548, "answer_count": 1, "score": 1, "last_activity_date": 1593041872, "creation_date": 1563273834, "last_edit_date": 1593041872, "question_id": 57055461, "link": "https://stackoverflow.com/questions/57055461/why-can-we-have-multiple-mutable-references-to-the-same-data-in-the-same-scope", "closed_reason": "Duplicate", "title": "Why can we have multiple mutable references to the same data in the same scope?", "body": "<p>From Rust documentations:</p>\n\n<blockquote>\n  <p>mutable references have one big restriction: you can have only one mutable reference to a particular piece of data in a particular scope.</p>\n</blockquote>\n\n<p>The example in the docs does support this statement:</p>\n\n<pre><code>let mut s = String::from(\"hello\");\nlet r1 = &amp;mut s;\nlet r2 = &amp;mut s;\nprintln!(\"{}, {}\", r1, r2);\n</code></pre>\n\n<p>But this is a bit misleading to me. When print statement in the last line is removed the program compiles and runs fine (although with a couple of warnings). Later in the docs they say this is how rust deals with data races. I haven't reached the point where they explain threads and parallel programming but I guess it's still worthwhile to ask how are we preventing the data race in the following case:</p>\n\n<pre><code>fn main() {\n    let mut name: String = String::from(\"Devashish\");\n\n    // assume that fun1 was called from a new thread\n    fun1(&amp;mut name);\n\n    // fun1 and fun2 are being executed in parallel at this point\n    fun2(&amp;mut name);\n}\n\nfn fun1(re: &amp;mut String) {\n    println!(\"From fun1: {}\", re);\n}\n\nfn fun2(re: &amp;mut String) {\n    println!(\"From fun2: {}\", re);\n}\n</code></pre>\n\n<p>How are we preventing data race in the case above?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563269859, "post_id": 57054180, "comment_id": 100634674, "body": "Global variables are nothing one should use. Why don&#39;t you use a local variable instead?"}, {"owner": {"reputation": 206, "user_id": 11158948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373a326dd4eaf79cab8300ddb0da49d8?s=128&d=identicon&r=PG&f=1", "display_name": "strangethingspy", "link": "https://stackoverflow.com/users/11158948/strangethingspy"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563270033, "post_id": 57054180, "comment_id": 100634758, "body": "@hellow Do you think, it&#39;s better to declare local variables in the main function and then use it there ?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1563270124, "post_id": 57054180, "comment_id": 100634812, "body": "Yes! (!!!!!!!!!!). Borrow them (mutably) to the functions who need them. Global variables suffer from a lot of things, e.g. safe access from multi threaded programs."}, {"owner": {"reputation": 206, "user_id": 11158948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373a326dd4eaf79cab8300ddb0da49d8?s=128&d=identicon&r=PG&f=1", "display_name": "strangethingspy", "link": "https://stackoverflow.com/users/11158948/strangethingspy"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563270267, "post_id": 57054180, "comment_id": 100634883, "body": "Oh ok, will do then, thanks!  I&#39;ve always used global variables so it makes sense to not use them."}], "answers": [{"comments": [{"owner": {"reputation": 206, "user_id": 11158948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373a326dd4eaf79cab8300ddb0da49d8?s=128&d=identicon&r=PG&f=1", "display_name": "strangethingspy", "link": "https://stackoverflow.com/users/11158948/strangethingspy"}, "edited": false, "score": 0, "creation_date": 1563271284, "post_id": 57054315, "comment_id": 100635388, "body": "My bad :) , I come from a different programming language where global varibales are over-used.  It makes sense to do what @hellows said"}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 2, "last_activity_date": 1563269946, "creation_date": 1563269946, "answer_id": 57054315, "question_id": 57054180, "link": "https://stackoverflow.com/questions/57054180/cannot-borrow-data-in-a-reference-as-mutable-in-vector-push/57054315#57054315", "title": "cannot borrow data in a `&amp;` reference as mutable in vector push", "body": "<p>Your global variables are not mutable.</p>\n\n<p>If you want mutable access to those <code>Vec</code>s, you have to wrap them in something that allows that, like <code>Mutex</code> or <code>RwLock</code>.</p>\n\n<p>But you should follow @hellow's advice and rethink whether you really need these to be global variables. Sounds like you're trying to put your program's state into globals, when there's really no need to do so.</p>\n"}], "owner": {"reputation": 206, "user_id": 11158948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373a326dd4eaf79cab8300ddb0da49d8?s=128&d=identicon&r=PG&f=1", "display_name": "strangethingspy", "link": "https://stackoverflow.com/users/11158948/strangethingspy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 934, "favorite_count": 0, "closed_date": 1563278753, "accepted_answer_id": 57054315, "answer_count": 1, "score": 1, "last_activity_date": 1563269946, "creation_date": 1563269476, "last_edit_date": 1563269651, "question_id": 57054180, "link": "https://stackoverflow.com/questions/57054180/cannot-borrow-data-in-a-reference-as-mutable-in-vector-push", "closed_reason": "Duplicate", "title": "cannot borrow data in a `&amp;` reference as mutable in vector push", "body": "<p>I am learning rust but I keep getting this error and I don't know how to solve it after spending time trying to solve it.</p>\n\n<pre><code>    error[E0596]: cannot borrow data in a `&amp;` reference as mutable\n  --&gt; src/main.rs:72:13\n   |\n72 |             income_list.push( 1);\n   |             ^^^^^^^^^^^ cannot borrow as mutable\n</code></pre>\n\n<p>I've used lazy_static in order to create a global varibale with type <code>u64</code>:</p>\n\n<pre><code>lazy_static! {\n    static ref expense_list: Vec&lt;i64&gt; = Vec::new();\n    static ref income_list: Vec&lt;u64&gt; = Vec::new();\n}\n</code></pre>\n\n<p>And I am trying to push value in it using the <code>push()</code> function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut income_input = String::new();\nio::stdin().read_line(&amp;mut income_input);\nlet mut income_input: u64 = match income_input.trim().parse() {\n    Ok(num) =&gt; num,\n    Err(_) =&gt; break,\n};\nincome_list.push(1); // it was income_list.push(income_input)\n</code></pre>\n\n<p>I can't push any value in the vector as it will keep throwing me that error, as per my understanding a vector should be a kind of array without a fixed-size.</p>\n\n<p>Where am I wrong ?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1563266069, "post_id": 57053099, "comment_id": 100632585, "body": "Please describe your actual problem. What does not work? Do you get an error? If so, please <a href=\"https://stackoverflow.com/posts/57053099/edit\">edit</a> your question and post it."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1563266140, "post_id": 57053099, "comment_id": 100632629, "body": "To &quot;answer&quot; your tangent question: <a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html\" rel=\"nofollow noreferrer\"><code>BufReader</code></a> is a struct (that&#39;s how we call it in Rust, not class). <code>new</code> is just a function associated with the struct so you can call <code>BufReader::new</code>. Rust doesn&#39;t have the <code>new</code> operator like Javascript, e.g. <b>no</b> <code>new BufReader</code>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1563268150, "post_id": 57053099, "comment_id": 100633800, "body": "&quot;Where can I find the methods for BufReader&quot; =&gt; <a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/io/struct.BufReader.html</a>"}, {"owner": {"reputation": 269, "user_id": 3649339, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ntoDQ.png?s=128&g=1", "display_name": "doctor_n_", "link": "https://stackoverflow.com/users/3649339/doctor-n"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563310932, "post_id": 57053099, "comment_id": 100655877, "body": "@hellow I think it&#39;s a little disingenuous to suggest <code>struct</code> is &#39;how we call&#39; a class (c.f. <a href=\"https://doc.rust-lang.org/book/ch05-00-structs.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch05-00-structs.html</a>)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 269, "user_id": 3649339, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ntoDQ.png?s=128&g=1", "display_name": "doctor_n_", "link": "https://stackoverflow.com/users/3649339/doctor-n"}, "edited": false, "score": 1, "creation_date": 1563347201, "post_id": 57053099, "comment_id": 100664401, "body": "@doctor_n_ I don&#39;t get what you want to tell me? In Rust there is no such keyword class nor such a concept. It uses structs."}, {"owner": {"reputation": 269, "user_id": 3649339, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ntoDQ.png?s=128&g=1", "display_name": "doctor_n_", "link": "https://stackoverflow.com/users/3649339/doctor-n"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563372283, "post_id": 57053099, "comment_id": 100678725, "body": "@hellow yeah exactly, saying &#39;how we call&#39; implies they&#39;re the same thing with different names. As you&#39;ve just said, they&#39;re not the same thing."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 269, "user_id": 3649339, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ntoDQ.png?s=128&g=1", "display_name": "doctor_n_", "link": "https://stackoverflow.com/users/3649339/doctor-n"}, "edited": false, "score": 0, "creation_date": 1563373632, "post_id": 57053099, "comment_id": 100679660, "body": "@doctor_n_ <code>class</code> and <code>struct</code> fulfill the same purpose, namely to group variables into one and having associated functions. That&#39;s why I said: &quot;what you call class, is what &quot;we&quot; call struct&quot;. It&#39;s nothing more than saying, in Java you have Classes, in Rust we have structs. It is (almost) the same thing. If you disaggree, please show me a counter example."}, {"owner": {"reputation": 269, "user_id": 3649339, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ntoDQ.png?s=128&g=1", "display_name": "doctor_n_", "link": "https://stackoverflow.com/users/3649339/doctor-n"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563454654, "post_id": 57053099, "comment_id": 100711365, "body": "@hellow a <code>class</code> introduces the notion of inheritance and (in most object-oriented languages) dynamic method dispatch. Neither of these are supported by <code>struct</code>s (without careful use of <code>trait</code>s and explicit composition), so I think it&#39;s wrong to conflate the notion of a <code>struct</code> and a <code>class</code>."}], "owner": {"reputation": 1421, "user_id": 4367242, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/JDbl7.jpg?s=128&g=1", "display_name": "intercoder", "link": "https://stackoverflow.com/users/4367242/intercoder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 158, "favorite_count": 0, "closed_date": 1563347678, "answer_count": 0, "score": 1, "last_activity_date": 1563266961, "creation_date": 1563265747, "last_edit_date": 1563266961, "question_id": 57053099, "link": "https://stackoverflow.com/questions/57053099/how-to-i-read-the-inputs-of-file-using-bufreader-instead-of-read-to-string-in-ru", "closed_reason": "Duplicate", "title": "How to I read the inputs of file using BufReader instead of read_to_string in Rust", "body": "<p>I'm going through the <a href=\"https://rust-lang-nursery.github.io/cli-wg/tutorial/impl-draft.html\" rel=\"nofollow noreferrer\">command line applications in rust</a> book and trying to do some of the exercises that are there. </p>\n\n<p><strong>Problem:</strong>  I would like to read the content of a file in memory using  <code>BufReader</code> instead of <code>read_to_string()</code>, but I'm getting confused on how to use it. </p>\n\n<p><strong>Error message:</strong> <code>no method named read_lines found for type std::io::BufReader&lt;&amp;std::path::PathBuf&gt; in the current scope</code>, which makes sense. Where can I find the methods for <code>BufReader</code></p>\n\n<p>Tangent question: is <code>BufReader</code> a class or just an object that was constructed with the <code>new</code> keyword like in <code>javascript</code>?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::env;\nuse std::io::BufReader;\nuse structopt::StructOpt;\n\n#[derive(StructOpt)]\nstruct Cli {\n    /// the pattern to look for\n    pattern: String,\n    /// the path to the file to read\n    #[structopt(parse(from_os_str))]\n    path: std::path::PathBuf,\n}\n\nfn help() {\n    println!(\n        \"usage:\n    this is just a dummy help\n    message to see how functions work in rust\"\n    );\n}\n\nfn main() {\n    let args = Cli::from_args();\n\n    // [NOTE]: This works\n\n    // [ ] Ex:2 Use BufReader instead of read_to_string()\n    let content = std::fs::read_to_string(&amp;args.path).expect(\"Could not read file\");\n\n    for line in content.lines() {\n        if line.contains(&amp;args.pattern) {\n            println!(\"{:#?}\", line);\n        }\n    }\n\n    // [NOTE]: What I am trying to do:\n\n    let mut reader = BufReader::new(&amp;args.path);\n    // .expect(\"could not read file\");\n    for line in reader.read_lines() {\n        if line.contains(&amp;args.pattern) {\n            println!(\"{:#?}\", line);\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["string", "multithreading", "rust", "channel"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563258789, "post_id": 57049326, "comment_id": 100629082, "body": "String does implement <code>Clone</code> btw. Please add code a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> next time and make sure to copy&amp;paste the error message, because it is now not formatted and all the crucial error information are gone."}], "answers": [{"tags": [], "owner": {"reputation": 1587, "user_id": 956856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64eec6ff41ec4774fa9db39daf8c386b?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner-Hall", "link": "https://stackoverflow.com/users/956856/daniel-wagner-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1563246430, "creation_date": 1563246430, "answer_id": 57049501, "question_id": 57049326, "link": "https://stackoverflow.com/questions/57049326/how-can-i-share-string-messages-with-multiple-producers-and-a-single-receiver-in/57049501#57049501", "title": "How can I share String messages with multiple producers and a single receiver in Rust (crossbeam)?", "body": "<p>You're using <code>move</code> closures, which try to move any captured variables in, and you're doing it twice on the same variable (<code>tx_ws</code>) into different closures.</p>\n\n<p>If <code>Sender</code> were <code>Copy</code>, this would be fine and it would get automatically copied, but because it's only <code>Clone</code>, you need to explicitly clone it. You're trying to call <code>clone()</code>, but inside the closure (so <em>after</em> the move happens), which is too late.</p>\n\n<p>After line 61, add a line like:\n<code>let tx_ws_clone = tx_ws.clone();</code>\nand change one of the closures to use <code>tx_ws_clone</code> rather than <code>tx_ws</code>, and things should start working. Inside the closures you don't need to clone <code>tx_ws</code>; you only need to clone it <em>before</em> it gets moved :)</p>\n"}], "owner": {"reputation": 139, "user_id": 11326116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/957e6efd129a4373cf07387ddc11c56a?s=128&d=identicon&r=PG", "display_name": "Samson G.", "link": "https://stackoverflow.com/users/11326116/samson-g"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "accepted_answer_id": 57049501, "answer_count": 1, "score": -1, "last_activity_date": 1563246430, "creation_date": 1563244221, "question_id": 57049326, "link": "https://stackoverflow.com/questions/57049326/how-can-i-share-string-messages-with-multiple-producers-and-a-single-receiver-in", "title": "How can I share String messages with multiple producers and a single receiver in Rust (crossbeam)?", "body": "<p>I have a project where multiple threads will transmit readings in String format, and I want them to be consumed by one handler thread.</p>\n\n<p>Unfortunately, Strings don't implement Copy/Clone so I can't pass references of my crossbeam channel so a second thread without getting the error</p>\n\n<pre><code>--&gt; src/main.rs:71:30\n|\n61 |     let (tx_ws, rx_ws) = unbounded();\n|          --------- move occurs because `tx_ws` has type `crossbeam::Sender&lt;node::WebsocketResponse&gt;`, which does not implement the `Copy` trait\n...\n70 |     let node0_thread = thread::spawn(move || node0::run(Some(&amp;n0_settings), tx_ws.clone()));\n|                             ------- value moved into closure here                   --------- variable moved due to use in closure\n71 |     let node1_thread = thread::spawn(move || node1::run(Some(&amp;n1_settings), tx_ws.clone()));\n|                              ^^^^^^^ value used here after move                  --------- use occurs due to use in closure\n\n</code></pre>\n\n<p>What tricks do you guys have to get around this? I understand String is a non-boxed type, but not sure how to get around it.</p>\n\n<p>Is there another way to send String like messages over a crossbeam-channel?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 1, "last_activity_date": 1563300913, "last_edit_date": 1563300913, "creation_date": 1563279290, "answer_id": 57057033, "question_id": 57048384, "link": "https://stackoverflow.com/questions/57048384/rust-how-to-return-reference-to-something-in-a-struct-that-lasts-as-long-as-the/57057033#57057033", "title": "Rust, how to return reference to something in a struct that lasts as long as the struct?", "body": "<p>Here's the signature you want:</p>\n\n<pre><code>pub fn lookup(&amp;self, symbol: &amp;str) -&gt; Option&lt;&amp;'a Entity&lt;'a&gt;&gt;\n</code></pre>\n\n<p>Here's why it can't work: it returns a reference that borrows an <code>Entity</code> for longer than <code>lookup</code> initially borrowed the <code>Scope</code>. This <em>isn't illegal</em>, but it means that the reference <code>lookup</code> returns can't be derived from the <code>self</code> reference. Why? Because given the above signature, this is valid code:</p>\n\n<pre><code>let sc = Scope { ... };\nlet foo = sc.lookup(\"foo\");\ndrop(sc);\ndo_something_with(foo);\n</code></pre>\n\n<p>This code <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6fcf3a165a96bd277d564fa33a97706f\" rel=\"nofollow noreferrer\">compiles</a> because it has to: there is no lifetime constraint that the compiler could use to prove it wrong, because the lifetime of <code>foo</code> isn't coupled to the borrow of <code>sc</code>. But clearly, if <code>lookup</code> were implemented the way you first tried, <code>foo</code> would contain a dangling pointer after <code>drop(sc)</code>, which is why the compiler rejected it.</p>\n\n<p>You must redesign your data structures to make the given signature for <code>lookup</code> work. It's not clear how best to do this given the code in the question, but here are some ideas:</p>\n\n<ul>\n<li><p>Decouple the lifetimes in <code>Scope</code> so that the <code>parent</code> is borrowed for a different lifetime than the <code>symbols</code>. Then have <code>lookup</code> take <code>&amp;'parent self</code>. <strong>This probably will not work by itself</strong>, depending on what you need to do with the <code>Entity</code>s, but you may need to do it anyway if you need to distinguish between the lifetimes of different data.</p>\n\n<pre><code>pub struct Scope&lt;'parent, 'sym&gt; {\n    symbols: HashMap&lt;String, Entity&lt;'sym&gt;&gt;,\n    parent: Option&lt;&amp;'parent Scope&lt;'parent, 'sym&gt;&gt;,\n}\n\nimpl&lt;'parent, 'sym&gt; Scope&lt;'parent, 'sym&gt; {\n    pub fn lookup(&amp;'parent self, symbol: &amp;str) -&gt; Option&lt;&amp;'parent Entity&lt;'sym&gt;&gt; {\n        /* ... */\n    }\n}\n</code></pre></li>\n<li><p>Store your <code>Scope</code>s and/or your <code>Entity</code>s in an arena. An arena can give out references that outlive the <code>self</code>-borrow, as long as they don't outlive the arena data structure itself. The tradeoff is that <em>nothing</em> in the arena will be deallocated until the whole arena is destroyed. It's not a substitute for garbage collection.</p></li>\n<li><p>Use <code>Rc</code> or <code>Arc</code> to store your <code>Scope</code>s and/or your <code>Entity</code>s and/or whatever data <code>Entity</code> stores that contains references. This is one way to get rid of the lifetime parameter completely, but it comes with a small runtime cost.</p></li>\n</ul>\n"}], "owner": {"reputation": 117, "user_id": 10667638, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/49b02e0efb410cb4ec706e4ebf23bcee?s=128&d=identicon&r=PG&f=1", "display_name": "CompileYourCake", "link": "https://stackoverflow.com/users/10667638/compileyourcake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1256, "favorite_count": 1, "accepted_answer_id": 57057033, "answer_count": 1, "score": 1, "last_activity_date": 1563300913, "creation_date": 1563234385, "last_edit_date": 1563250611, "question_id": 57048384, "link": "https://stackoverflow.com/questions/57048384/rust-how-to-return-reference-to-something-in-a-struct-that-lasts-as-long-as-the", "title": "Rust, how to return reference to something in a struct that lasts as long as the struct?", "body": "<p>I am porting a compiler I wrote to Rust. In it, I have an enum <code>Entity</code> which represents things like functions and variables:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub enum Entity&lt;'a&gt; {\n  Variable(VariableEntity),\n  Function(FunctionEntity&lt;'a&gt;)\n  // Room for more later.\n}\n</code></pre>\n\n<p>I then have a struct <code>Scope</code> which is responsible for holding on to these entities in a hash map, where the key is the name given by the programmer to the entity. (For example, declaring a function named <code>sin</code> would put an <code>Entity</code> into the hash map at the key <code>sin</code>.)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Scope&lt;'a&gt; {\n    symbols: HashMap&lt;String, Entity&lt;'a&gt;&gt;,\n    parent: Option&lt;&amp;'a Scope&lt;'a&gt;&gt;\n}\n</code></pre>\n\n<p>I would like to be able to get read-only references to the objects in the HashMap so that I can refer to it from other data structures. For example, when I parse a function call, I want to be able to store a reference to the function that is being called instead of just storing the name of the function and having to look up the reference every time I need the actual <code>Entity</code> object corresponding to the name. To do so, I have made this method:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a&gt; Scope&lt;'a&gt; {\n  pub fn lookup(&amp;self, symbol: &amp;str) -&gt; Option&lt;&amp;'a Entity&lt;'a&gt;&gt; {\n    let result = self.symbols.get(symbol);\n    match result {\n      Option::None =&gt; match self.parent {\n        Option::None =&gt; Option::None,\n        Option::Some(parent) =&gt; parent.lookup(symbol),\n      },\n      Option::Some(_value) =&gt; result\n    }\n  }\n}\n</code></pre>\n\n<p>However, this results in a compilation error:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/vague/scope.rs:29:31\n   |\n29 |     let result = self.symbols.get(symbol);\n   |                               ^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 28:3...\n  --&gt; src/vague/scope.rs:28:3\n   |\n28 | /   pub fn lookup(&amp;self, symbol: &amp;str) -&gt; Option&lt;&amp;'a Entity&lt;'a&gt;&gt; {\n29 | |     let result = self.symbols.get(symbol);\n30 | |     match result {\n31 | |       Option::None =&gt; match self.parent {\n...  |\n36 | |     }\n37 | |   }\n   | |___^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/vague/scope.rs:29:18\n   |\n29 |     let result = self.symbols.get(symbol);\n   |                  ^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 9:6...\n  --&gt; src/vague/scope.rs:9:6\n   |\n9  | impl&lt;'a&gt; Scope&lt;'a&gt; {\n   |      ^^\n   = note: ...so that the expression is assignable:\n           expected std::option::Option&lt;&amp;'a vague::entity::Entity&lt;'a&gt;&gt;\n              found std::option::Option&lt;&amp;vague::entity::Entity&lt;'_&gt;&gt;\n</code></pre>\n\n<h2>Things I Tried</h2>\n\n<p>There are several ways to make the compilation error go away, but none of them give the behavior I want. First, I can do this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>  pub fn lookup(&amp;self, symbol: &amp;str) -&gt; Option&lt;&amp;Entity&lt;'a&gt;&gt; {\n</code></pre>\n\n<p>But this means the reference will not live long enough, so I can't put it into a struct or any other kind of storage that will outlive the scope that <code>lookup</code> is called from. Another solution was this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>  pub fn lookup(&amp;self, symbol: &amp;str) -&gt; Option&lt;&amp;'a Entity&gt; {\n</code></pre>\n\n<p>Which I do not understand why it could compile. As part of the struct definition, things inside <code>Entity</code> objects in the hash map must live at least as long as the scope, so how can the compiler allow the return type to be missing that? Additionally, why would the addition of <code>&lt;'a&gt;</code> result in the previous compiler error, since the only place the function is getting <code>Entity</code>s from is from the hash map, which is defined as having a value type of <code>Entity&lt;'a&gt;</code>. Another bad fix I found was:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>  pub fn lookup(&amp;'a self, symbol: &amp;str) -&gt; Option&lt;&amp;'a Entity&lt;'a&gt;&gt; {\n</code></pre>\n\n<p><s>Which would mean that <code>lookup</code> can only be called once, which is obviously a problem.</s> My previous understanding was incorrect, but the problem still remains that requiring the reference to <code>self</code> to have the same lifetime as the whole object severely restricts the code in that I can't call this method from a reference with any shorter lifetime, e.g. one passed in as a function argument or one created in a loop.</p>\n\n<h3><strong>How can I go about fixing this? Is there some way I can fix the function as I have it now, or do I need to implement the behavior I'm looking for in an entirely different way?</strong></h3>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1563231416, "post_id": 57047915, "comment_id": 100623320, "body": "I wonder what are the OS and Rust version?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1563231701, "post_id": 57047915, "comment_id": 100623368, "body": "@ArtemGr I didn&#39;t find any notable change on <a href=\"https://github.com/rust-lang/rust/commits/master/src/libstd/process.rs\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/commits/master/src/libstd/process.&zwnj;&#8203;rs</a>."}, {"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1563238889, "post_id": 57047915, "comment_id": 100624660, "body": "Sorry - that info SHOULD be in there. adding it in now.... Mac OS Catalina Beta 1, rustc 1.36.0"}], "answers": [{"comments": [{"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1563239082, "post_id": 57048014, "comment_id": 100624700, "body": "I already had, and my fail logs used to print &quot;Process terminated by signal&quot;, but that doesn&#39;t help me understand why it&#39;s happening, and if a signal where that signal is coming from and why it&#39;s being sent."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1563255379, "post_id": 57048014, "comment_id": 100627874, "body": "@AndrewMackenzie How should I know, first try to see what signal have been receive <a href=\"https://doc.rust-lang.org/nightly/std/os/unix/process/trait.ExitStatusExt.html#tymethod.signal\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nightly/std/os/unix/process/&hellip;</a>."}, {"owner": {"reputation": 91978, "user_id": 387076, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/cFyP6.jpg?s=128&g=1", "display_name": "Gilles &#39;SO- stop being evil&#39;", "link": "https://stackoverflow.com/users/387076/gilles-so-stop-being-evil"}, "reply_to_user": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1563260025, "post_id": 57048014, "comment_id": 100629599, "body": "@AndrewMackenzie What&#39;s sending the signal is something on your system, (very likely) not your own program. Finding this out would be a completely different question and the relevant information would not be your code, but how you&#39;re running the program and which signal you&#39;re getting. And it would be more of a <a href=\"https://unix.stackexchange.com\">Unix & Linux</a> question than an <a href=\"https://stackoverflow.com\">Stack Overflow</a> question."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 5, "last_activity_date": 1563258517, "last_edit_date": 1563258517, "creation_date": 1563230710, "answer_id": 57048014, "question_id": 57047915, "link": "https://stackoverflow.com/questions/57047915/why-does-command-output-execution-sometimes-return-none-for-status-code/57048014#57048014", "title": "Why does Command.output() execution sometimes return None for status.code()", "body": "<p>Read the <a href=\"https://doc.rust-lang.org/nightly/std/process/struct.ExitStatus.html#method.code\" rel=\"nofollow noreferrer\">manual</a>:</p>\n\n<blockquote>\n  <p>On Unix, this will return <code>None</code> if the process was terminated by a signal; <code>std::os::unix</code> provides an extension trait for extracting the signal and other details from the <code>ExitStatus</code>.</p>\n</blockquote>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::os::unix::process::ExitStatusExt;\nuse std::process::Command;\n\nfn main() {\n    let mut child = Command::new(\"sleep\")\n        .args(&amp;[\"10\"])\n        .spawn()\n        .expect(\"failed to spawn child\");\n    child.kill().expect(\"failed to kill on child\");\n    let status = child.wait().expect(\"failed to wait on child\");\n    match status.code() {\n        None =&gt; {\n            println!(\"{:?}\", status.signal());\n            ()\n        }\n        _ =&gt; (),\n    }\n}\n</code></pre>\n\n<p>You could use <a href=\"https://docs.rs/nix/0.14.1/nix/sys/signal/enum.Signal.html#method.from_c_int\" rel=\"nofollow noreferrer\"><code>from_c_int()</code></a> to have a pretty print of the signal type.</p>\n"}], "owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1563258517, "creation_date": 1563229784, "last_edit_date": 1563239030, "question_id": 57047915, "link": "https://stackoverflow.com/questions/57047915/why-does-command-output-execution-sometimes-return-none-for-status-code", "title": "Why does Command.output() execution sometimes return None for status.code()", "body": "<p>My rust project uses <code>Command</code> to execute a process.</p>\n\n<p>Sometimes (low frequency) when I run this code the call to <code>status.code()</code> returns None. I am usually using Mac OS Catalina Beta 1, rustc 1.36.0 - but it happens in Travis too (will have to go and find logs of OS/rustc there).</p>\n\n<p>I was treating this as an error but \"randomly\" it would cause local and travis builds to fail, so now I'm ignoring it - but it would be nice to understand what's causing it.</p>\n\n<p>In failure cases, re-running immediately will cause it to succeed.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let output = Command::new(&amp;command)\n    .args(command_args)\n    .stdin(Stdio::inherit())\n    .stdout(Stdio::inherit())\n    .stderr(Stdio::piped())\n    .output()\n    .chain_err(|| \"Error while attempting to spawn command to compile and run flow\")?;\nmatch output.status.code() {\n    Some(0) =&gt; Ok(\"Flow ran to completion\".to_string()),\n    Some(code) =&gt; {\n        error!(\n            \"Process STDERR:\\n{}\",\n            String::from_utf8_lossy(&amp;output.stderr)\n        );\n        bail!(\"Exited with status code: {}\", code)\n    }\n    None =&gt; Ok(\"No return code - ignoring\".to_string()),\n}\n</code></pre>\n\n<p>My question is not why this <em>could</em> happen (I know that the docs say \"terminated by signal\") but why it <em>is</em> happening, as no-one AFAIK is sending a signal to it, I seriously doubt any OOM or other such issues.</p>\n"}, {"tags": ["pointers", "memory", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1563229204, "post_id": 57047517, "comment_id": 100622893, "body": "You are taking the stack for your pointer, it&#39;s UB to use it after the end function <code>new()</code>, <code>ret</code> go out of scope."}, {"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563229391, "post_id": 57047517, "comment_id": 100622938, "body": "That is what I began to fear. Would boxing the pointer solve the problem?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563229529, "post_id": 57047517, "comment_id": 100622964, "body": "maybe <a href=\"https://doc.rust-lang.org/nightly/std/pin/index.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nightly/std/pin/index.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "is_accepted": false, "score": 0, "last_activity_date": 1563236530, "last_edit_date": 1563236530, "creation_date": 1563235956, "answer_id": 57048548, "question_id": 57047517, "link": "https://stackoverflow.com/questions/57047517/raw-pointers-not-producing-desired-effects/57048548#57048548", "title": "Raw Pointers not producing desired effects", "body": "<p>As Stargateur recommended, in order to solve this problem we need to Pin the object which needs to be self-referential. I ended up using:</p>\n\n<pre><code>pin-api = \"0.2.1\"\n</code></pre>\n\n<p>In cargo.toml instead of <code>std::pin::pin</code>. Next, I set this up the struct and its implementation:</p>\n\n<pre><code>#![feature(ptr_internals, pin_into_inner, optin_builtin_traits)]\n// not available on rust-playground\nextern crate pin_api;\n\nuse pin_api::{boxed::PinBox, marker::Unpin, mem::Pin};\n\n///test\npub struct PtrWrapper&lt;T&gt;\nwhere\n    T: std::fmt::Debug,\n{\n    ///tmp\n    pub obj: T,\n    /// pinned object\n    pub self_reference: *mut Self,\n}\n\nimpl&lt;T&gt; !Unpin for PtrWrapper&lt;T&gt; where T: std::fmt::Debug {}\n\nimpl&lt;T&gt; PtrWrapper&lt;T&gt;\nwhere\n    T: std::fmt::Debug,\n{\n    ///test\n    pub fn new(obj: T) -&gt; Self {\n        Self {\n            obj,\n            self_reference: std::ptr::null_mut(),\n        }\n    }\n\n    ///test\n    pub fn init(mut self: Pin&lt;PtrWrapper&lt;T&gt;&gt;) {\n        let mut this: &amp;mut PtrWrapper&lt;T&gt; = unsafe { Pin::get_mut(&amp;mut self) };\n        this.self_reference = this as *mut Self;\n    }\n\n    /// Debug print\n    pub fn print_obj(&amp;self) {\n        println!(\"Obj value: {:#?}\", self.obj);\n    }\n}\n</code></pre>\n\n<p>Finally, the test function:</p>\n\n<pre><code>fn main2() {\n    unsafe {\n        println!(\"START\");\n\n        let mut wrapper = PinBox::new(PtrWrapper::new(10));\n        wrapper.as_pin().init();\n\n        let m = wrapper.as_pin().self_reference;\n\n        (*m).obj += 30;\n        println!(\"The next print is 40\");\n        debug_print(m);\n\n        let tmp = wrapper.as_pin().self_reference;\n        (*tmp).obj += 500;\n\n        println!(\"The next print is 540?\");\n        debug_print(tmp);\n\n        debug_print(wrapper.self_reference);\n\n        let cpy = PinBox::get_mut(&amp;mut wrapper);\n        debug_print_move(cpy);\n\n        std::mem::drop(wrapper);\n        println!(\"Works!\");\n        assert_eq!(unsafe { (*m).obj }, 540);\n    }\n}\n\nfn debug_print_move&lt;T&gt;(mut wrapper: &amp;mut PtrWrapper&lt;T&gt;)\nwhere\n    T: std::fmt::Debug,\n{\n    debug_print(&amp;mut *wrapper as *mut PtrWrapper&lt;T&gt;);\n}\n\nfn debug_print&lt;T&gt;(ptr: *mut PtrWrapper&lt;T&gt;)\nwhere\n    T: std::fmt::Debug,\n{\n    println!(\"Address: {:p}\", ptr);\n    unsafe { (*ptr).print_obj() };\n}\n</code></pre>\n\n<p>On a side note, pin-api does not exist on rust playground. You could still use <code>std::pin::Pin</code>, however it would require further customization.</p>\n"}], "owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 82, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1563236530, "creation_date": 1563226808, "last_edit_date": 1563227832, "question_id": 57047517, "link": "https://stackoverflow.com/questions/57047517/raw-pointers-not-producing-desired-effects", "title": "Raw Pointers not producing desired effects", "body": "<pre><code>#![feature(ptr_internals)]\n\nuse core::ptr::Unique;\n\nstruct PtrWrapper {\n    id: usize,\n    self_reference: Unique&lt;Self&gt;\n}\n\nimpl PtrWrapper {\n    fn new() -&gt; Self {\n        let dummy = unsafe {Unique::new_unchecked(std::ptr::null_mut::&lt;PtrWrapper&gt;())};\n        let mut ret = Self {id:0, self_reference: dummy };\n        let new_ptr = &amp;mut ret as *mut Self;\n        debug_print(new_ptr);\n        ret.self_reference = Unique::new(new_ptr).unwrap();\n        debug_print(ret.self_reference.as_ptr());\n        ret\n    }\n\n    fn get_id(&amp;self) -&gt; usize {\n        self.id.clone()\n    }\n}\n\nfn main() {\n    println!(\"START\");\n    let mut wrapper = PtrWrapper::new();\n    wrapper.id = 10;\n\n    let ptr = wrapper.self_reference.as_ptr();\n    unsafe {\n        (*ptr).id += 30;\n        println!(\"The next print isn't 40? Garbage bytes\");\n        debug_print(ptr);\n\n        let tmp = &amp;mut wrapper as *mut PtrWrapper;\n        (*tmp).id += 500;\n\n        println!(\"The next print isn't 540?\");\n        debug_print(tmp);\n    }\n\n    println!(\"Below debug_print is proof of undefined behavior! Garbage bytes\\n\");\n    debug_print(wrapper.self_reference.as_ptr());\n\n\n    debug_print(&amp;mut wrapper as *mut PtrWrapper);\n\n    debug_print_move(wrapper);\n\n    println!(\"Why is the assertion below false?\");\n    assert_eq!(unsafe{(*ptr).id}, 540);\n}\n\nfn debug_print_move(mut wrapper: PtrWrapper) {\n    debug_print(&amp;mut wrapper as *mut PtrWrapper);\n}\n\nfn debug_print(ptr: *mut PtrWrapper) {\n    println!(\"Address: {:p}\", ptr);\n    println!(\"ID: {}\\n\", unsafe {(*ptr).get_id()});\n}\n</code></pre>\n\n<p>The above code should compile fine in rust playground with a nightly selected version. Pay attention to the console outputs.</p>\n\n<p>My question is: Why are the intermittent results not equal to the value I expect them to equal? In the case below, there is no multiple access simultaneously (single threaded), so there aren't any data races. There are, however, implicitly multiple mutable version of the object existing on the stack. </p>\n\n<p>As expected, the memory location of the pointer changes with the <code>tmp</code> variable as well as when the entire object is moved into <code>debug_print_move</code>. It appears that using the <code>tmp</code> pointer works as expected (i.e., adds 500), however, the pointers which are obtained from the <code>Unique&lt;PtrWrapper&gt;</code> object seems to point to irrelevant locations in memory.</p>\n"}, {"tags": ["multithreading", "rust", "sleep", "sigint"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1563215691, "creation_date": 1563215691, "answer_id": 57045411, "question_id": 57045030, "link": "https://stackoverflow.com/questions/57045030/waking-up-a-sleeping-thread-on-sigint-in-rust/57045411#57045411", "title": "Waking up a sleeping thread on sigint in Rust?", "body": "<p>As the <a href=\"https://doc.rust-lang.org/std/thread/fn.sleep.html#platform-specific-behavior\" rel=\"nofollow noreferrer\">doc</a> says:</p>\n\n<blockquote>\n  <p>On Unix platforms, the underlying syscall may be interrupted by a spurious wakeup or signal handler. To ensure the sleep occurs for at least the specified duration, this function may invoke that system call multiple times. Platforms which do not support nanosecond precision for sleeping will have <code>dur</code> rounded up to the nearest granularity of time they can sleep for.</p>\n</blockquote>\n\n<p>So, I propose you to use a more low level <a href=\"https://docs.rs/libc/0.2.60/libc/fn.clock_nanosleep.html\" rel=\"nofollow noreferrer\">function</a> directly, there is one crates that encapsule it <a href=\"https://docs.rs/shuteye/0.3.3/shuteye/fn.sleep.html\" rel=\"nofollow noreferrer\"><code>shuteye</code></a>, but I don't know if it's a good one.</p>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 248, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1563215691, "creation_date": 1563213908, "question_id": 57045030, "link": "https://stackoverflow.com/questions/57045030/waking-up-a-sleeping-thread-on-sigint-in-rust", "title": "Waking up a sleeping thread on sigint in Rust?", "body": "<p>Consider the following simple Rust program:</p>\n\n<pre><code>use std::time::Duration;\nuse std::sync::atomic::{AtomicBool, Ordering};\nuse std::thread;\nuse ctrlc;\n\nstatic running: AtomicBool = AtomicBool::new(true);\n\nfn main() {\n\n    // Set up a thread that registers the sigint signal.\n    ctrlc::set_handler(|| {\n        running.store(false, Ordering::SeqCst);\n    });\n\n    // Loop as long as the signal has not been registered.\n    while running.load(Ordering::SeqCst) {\n        println!(\"Hello!\");\n        thread::sleep(Duration::from_secs(10));\n    }\n    println!(\"Goodbye!\");\n\n}\n</code></pre>\n\n<p>It prints \"Hello!\" every ten seconds until someone press Ctrl+C, upon which it prints \"Goodbye!\" and exit. The problem is if Ctrl+C is pressed right after the thread goes to sleep. The user then has to wait for almost ten seconds until the program exits.</p>\n\n<p>Is there any way to get around this, and somehow wake up the thread when the sigint signal is recieved? I'm prepared to change the <a href=\"https://docs.rs/ctrlc/3.1.3/ctrlc/\" rel=\"nofollow noreferrer\">ctrlc</a> dependency for something else if it helps.</p>\n\n<p>The only solution I have been able to come up with is to sleep during ten one second intervals instead, checking sigint before going back to sleep again at every wakeup. Is there a simpler and prettier way to do it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1563187638, "post_id": 57038117, "comment_id": 100604152, "body": "Related: <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-or\" title=\"why is it discouraged to accept a reference to a string string vec vec or\">stackoverflow.com/questions/40006219/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1563187711, "post_id": 57038117, "comment_id": 100604188, "body": "Btw: It is bad pratice to write <code>-&gt; ()</code>, because returning the unit type is the default and you don&#39;t need to expliclty write it. See <a href=\"https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit\" rel=\"nofollow noreferrer\">rust-lang.github.io/rust-clippy/master/index.html#unused_uni&zwnj;&#8203;t</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1563195244, "post_id": 57038117, "comment_id": 100608104, "body": "There&#39;s a twist here not covered in the duplicate -- the resolution of the<code>into_iter()</code> method. There&#39;s a separate implementation of <code>IntoIterator</code> for <code>&amp;Vec&lt;T&gt;</code>, which calls<code>iter()</code> on the vector, so the item type is <code>&amp;T</code>."}], "answers": [{"tags": [], "owner": {"reputation": 6100, "user_id": 5984, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0d75735ed1574bba97c5f58dfc0aae52?s=128&d=identicon&r=PG", "display_name": "idursun", "link": "https://stackoverflow.com/users/5984/idursun"}, "is_accepted": false, "score": 0, "last_activity_date": 1563198076, "creation_date": 1563198076, "answer_id": 57041055, "question_id": 57038117, "link": "https://stackoverflow.com/questions/57038117/reference-to-reference-in-rust/57041055#57041055", "title": "Reference to reference in rust", "body": "<p><a href=\"https://doc.rust-lang.org/src/alloc/vec.rs.html#1777-1784\" rel=\"nofollow noreferrer\">IntoIterator implementation for &amp;'a Vec</a> is returning items of <code>&amp;T</code>.</p>\n\n<p><a href=\"https://doc.rust-lang.org/src/core/iter/adapters/mod.rs.html#681-735\" rel=\"nofollow noreferrer\"><code>filter</code>'s predicate</a> is defined as <code>where P: FnMut(&amp;I::Item) -&gt; bool</code>. It's taking a reference to the iterator's item, hence the double reference.</p>\n"}], "owner": {"reputation": 45, "user_id": 11061655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca604800cac8c4f4dc986c93244ea3ea?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11061655/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 244, "favorite_count": 0, "closed_date": 1563204120, "answer_count": 1, "score": 0, "last_activity_date": 1563198076, "creation_date": 1563187587, "question_id": 57038117, "link": "https://stackoverflow.com/questions/57038117/reference-to-reference-in-rust", "closed_reason": "Duplicate", "title": "Reference to reference in rust", "body": "<pre><code>fn count_occur(v: &amp;Vec&lt;i32&gt;, val: i32) -&gt; usize {\n    v.into_iter().filter(|&amp;&amp;x| x == val).count()\n}\n\nfn main() -&gt; () {\n    let v1 : Vec&lt;i32&gt; = vec![1,2,3, 4,5,6];\n    for &amp;item in &amp;v1 {\n        count_occur(&amp;v1, item);\n    }  \n}\n</code></pre>\n\n<p>Can someone explain me why does <code>lambda</code> need to take <code>&amp;&amp;x</code> (I mean why double reference is necessary - I cannot see why an element passed to the lambda is a reference to a reference)</p>\n"}, {"tags": ["docker", "rust", "arm", "raspbian", "alsa"], "answers": [{"comments": [{"owner": {"reputation": 786, "user_id": 1737472, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61d2c7b3cb39d5385be0817d8f6b1ffd?s=128&d=identicon&r=PG", "display_name": "Antoine van Gelder", "link": "https://stackoverflow.com/users/1737472/antoine-van-gelder"}, "edited": false, "score": 0, "creation_date": 1572446414, "post_id": 57038532, "comment_id": 103563076, "body": "Thank you for sharing the solution!"}], "tags": [], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "is_accepted": true, "score": 2, "last_activity_date": 1572437947, "last_edit_date": 1572437947, "creation_date": 1563189132, "answer_id": 57038532, "question_id": 57037550, "link": "https://stackoverflow.com/questions/57037550/alsa-linking-when-cross-compiling-rust-program-for-arm/57038532#57038532", "title": "ALSA linking when cross-compiling Rust program for ARM", "body": "<h2>Solution:</h2>\n\n<ol>\n<li>Install the armhf version of libasound-dev to your Raspbian docker image:</li>\n</ol>\n\n<pre><code>apt-get install libasound-dev -y\napt-get install libasound-dev:armhf -y\n</code></pre>\n\n<p>(If you only install <code>libasound-dev:armhf</code>, it will complain about <code>alsa-sys</code> linker errors.)</p>\n\n<ol start=\"2\">\n<li>Add <code>alsa</code> dependency to Cargo.toml:</li>\n</ol>\n\n<pre><code>[dependencies]\nalsa = { version = \"0.2.1\", optional = true }\nwavy = { path = \"./wavy\" }\n</code></pre>\n\n<ol start=\"3\">\n<li>Set <code>alsa-backend</code> flag in Cargo.toml:</li>\n</ol>\n\n<pre><code>[features]\nalsa-backend = [\"alsa\"]\n</code></pre>\n\n<ol start=\"4\">\n<li><p>Pass <code>--features \"alsa-backend\"</code> to <code>cargo build --target arm-unknown-linux-gnueabihf</code> (target should be applied)</p></li>\n<li><p>Tell rustc to use the armhf version in <code>.cargo/config</code>:</p></li>\n</ol>\n\n<pre><code>[build]\n\n[target.arm-unknown-linux-gnueabihf.libasound]\nlinker = \"arm-linux-gnueabihf-gcc\"\nrustc-link-lib = [\"libasound\"]\nrustc-link-search = [\"/usr/lib/arm-linux-gnueabihf\"]\n</code></pre>\n\n<p>(Depending on the order it links, it may try to use the x86 version instead of the armhf version.)</p>\n"}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 438, "favorite_count": 0, "accepted_answer_id": 57038532, "answer_count": 1, "score": 2, "last_activity_date": 1572437947, "creation_date": 1563185326, "last_edit_date": 1563186396, "question_id": 57037550, "link": "https://stackoverflow.com/questions/57037550/alsa-linking-when-cross-compiling-rust-program-for-arm", "title": "ALSA linking when cross-compiling Rust program for ARM", "body": "<p>I'm trying to cross-compile a simple Rust program to record sound with ALSA drivers on a Raspberry Pi Zero using the <a href=\"https://crates.io/crates/wavy\" rel=\"nofollow noreferrer\">wavy crate</a> inside a Docker container that has the <code>libasound-dev</code> library installed. However, the linker complains about:</p>\n\n<pre><code> note: /opt/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/../lib/gcc/arm-linux-gnueabihf/4.8.3/../../../../arm-linux-gnueabihf/bin/ld: cannot find -lasound\n          collect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>It seems that Cargo is asking rustc to link against the asound lib dynamically with the argument <code>-Bdynamic\" \"-lasound\"</code>. How do I tell Cargo where to look for these ALSA libraries?</p>\n\n<p><strong>Update:</strong> I added the following to my Cargo.toml file and added <code>--features \"alsa-backend\"</code> to my <code>cargo build</code> command which seems to have progressed the build:</p>\n\n<pre><code>[features]\nalsa-backend = [\"alsa\"]\n\n[dependencies]\nalsa            = { version = \"0.2.1\", optional = true }\n</code></pre>\n\n<p>It now throws:</p>\n\n<pre><code>note: /usr/lib/x86_64-linux-gnu/libasound.so: file not recognized: File format not recognized\n          collect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>OK, so it's linking against the x86_64 version of libasound.so. I typed <code>dpkg -L libasound-dev</code> in my Docker container and indeed, it lists <code>/usr/lib/x86_64-linux-gnu/libasound.so</code> instead of an ARM version.</p>\n\n<p>How do I tell the Raspbian Docker container to link against the ARM version of <code>libasound.so</code>?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 165, "user_id": 5244044, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/05efab801a28719e0c3ea2fa4f16ecfe?s=128&d=identicon&r=PG&f=1", "display_name": "\u674e\u9e3f\u7ae0", "link": "https://stackoverflow.com/users/5244044/%e6%9d%8e%e9%b8%bf%e7%ab%a0"}, "edited": false, "score": 0, "creation_date": 1563190715, "post_id": 57036923, "comment_id": 100605632, "body": "I see, save my day!"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 3, "last_activity_date": 1563184480, "last_edit_date": 1563184480, "creation_date": 1563183133, "answer_id": 57036923, "question_id": 57036513, "link": "https://stackoverflow.com/questions/57036513/rust-errore0495-cannot-infer-an-appropriate-lifetime-for-autoref-due-to-conf/57036923#57036923", "title": "Rust: error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements", "body": "<p>We can rewrite your code as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Node&lt;T&gt; {\n    item: T,\n    next: Link&lt;T&gt;,\n}\n\ntype Link&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\npub struct IterMut&lt;'a, T&gt;(&amp;'a mut Link&lt;T&gt;);\n\nimpl&lt;'a, T&gt; Iterator for IterMut&lt;'a, T&gt; {\n    type Item = &amp;'a mut T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if let Some(boxed_node) = self.0 {\n            self.0 = &amp;mut boxed_node.next;\n            Some(&amp;mut boxed_node.item)\n        }\n        else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>You can see that <code>boxed_node</code> life end at the end of the function so you can't return a reference link to it.</p>\n\n<p>The solution is to take a reference of the box and not a reference to the option:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Node&lt;T&gt; {\n    item: T,\n    next: Link&lt;T&gt;,\n}\n\ntype Link&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\npub struct IterMut&lt;'a, T&gt;(Option&lt;&amp;'a mut Box&lt;Node&lt;T&gt;&gt;&gt;);\n\nimpl&lt;'a, T&gt; Iterator for IterMut&lt;'a, T&gt; {\n    type Item = &amp;'a mut T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if let Some(boxed_node) = self.0.take() {\n            self.0 = boxed_node.next.as_mut();\n            Some(&amp;mut boxed_node.item)\n        }\n        else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>You can also remove the <code>Box</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Node&lt;T&gt; {\n    item: T,\n    next: Link&lt;T&gt;,\n}\n\ntype Link&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\npub struct IterMut&lt;'a, T&gt;(Option&lt;&amp;'a mut Node&lt;T&gt;&gt;);\n\nimpl&lt;'a, T&gt; Iterator for IterMut&lt;'a, T&gt; {\n    type Item = &amp;'a mut T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if let Some(boxed_node) = self.0.take() {\n            self.0 = boxed_node.next.as_mut().map(AsMut::as_mut);\n            Some(&amp;mut boxed_node.item)\n        }\n        else {\n            None\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 165, "user_id": 5244044, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/05efab801a28719e0c3ea2fa4f16ecfe?s=128&d=identicon&r=PG&f=1", "display_name": "\u674e\u9e3f\u7ae0", "link": "https://stackoverflow.com/users/5244044/%e6%9d%8e%e9%b8%bf%e7%ab%a0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 386, "favorite_count": 0, "accepted_answer_id": 57036923, "answer_count": 1, "score": 1, "last_activity_date": 1563184480, "creation_date": 1563181737, "last_edit_date": 1563182049, "question_id": 57036513, "link": "https://stackoverflow.com/questions/57036513/rust-errore0495-cannot-infer-an-appropriate-lifetime-for-autoref-due-to-conf", "title": "Rust: error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements", "body": "<p>This is the minimal code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Node&lt;T&gt; {\n    item: T,\n    next: Link&lt;T&gt;,\n}\n\ntype Link&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\npub struct IterMut&lt;'a, T&gt;(&amp;'a mut Link&lt;T&gt;);\n\nimpl&lt;'a, T&gt; Iterator for IterMut&lt;'a, T&gt; {\n    type Item = &amp;'a mut T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.0.as_mut().map(|boxed_node| {\n            self.0 = &amp;mut boxed_node.next;\n            &amp;mut boxed_node.item\n        })\n    }\n}\n</code></pre>\n\n<p>As far as I understand, there should be no problem. I have done a lot of searching, but no way.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/lib.rs:13:16\n   |\n13 |         self.0.as_mut().map(|boxed_node| {\n   |                ^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 12:5...\n  --&gt; src/lib.rs:12:5\n   |\n12 | /     fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n13 | |         self.0.as_mut().map(|boxed_node| {\n14 | |             self.0 = &amp;mut boxed_node.next;\n15 | |             &amp;mut boxed_node.item\n16 | |         })\n17 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:13:9\n   |\n13 |         self.0.as_mut().map(|boxed_node| {\n   |         ^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 10:6...\n  --&gt; src/lib.rs:10:6\n   |\n10 | impl&lt;'a, T&gt; Iterator for IterMut&lt;'a, T&gt; {\n   |      ^^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:14:22\n   |\n14 |             self.0 = &amp;mut boxed_node.next;\n   |                      ^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 5, "creation_date": 1563180634, "post_id": 57036208, "comment_id": 100600697, "body": "Something like <code>let Engine { events, system_event_listeners } = self.current_engine();</code> may or may not work."}, {"owner": {"reputation": 11, "user_id": 11784740, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f4b3568f2a4705a628db67943dcd534?s=128&d=identicon&r=PG&f=1", "display_name": "rshadown", "link": "https://stackoverflow.com/users/11784740/rshadown"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1563253812, "post_id": 57036208, "comment_id": 100627471, "body": "@Ry- This did work, after modifying the loop appropriately! What is the rational behind this, is it like borrowing all these variables at once?   However, it does not completely solve my problem, because I want to pass the engine struct to my listener functions (for example: events can generate new events). And that still gives a compilation error."}], "owner": {"reputation": 11, "user_id": 11784740, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f4b3568f2a4705a628db67943dcd534?s=128&d=identicon&r=PG&f=1", "display_name": "rshadown", "link": "https://stackoverflow.com/users/11784740/rshadown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 111, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1563180486, "creation_date": 1563180486, "question_id": 57036208, "link": "https://stackoverflow.com/questions/57036208/rust-inner-loop-causes-double-mutable-borrow", "title": "Rust inner loop causes double mutable borrow", "body": "<p>I am experimenting with building a small game prototype in ggez. I have created a struct called Engine, which I have added to the MainState. This struct contains some data, among which a vector of event listeners and a vector of events.</p>\n\n<p>This Engine struct is incidentally passed to many functions, so that events (and other things) can be added.</p>\n\n<p>I then have a double loop, going through each event and then going through each event-listener, to process them. But this very simple loop causes compilation issues. </p>\n\n<pre><code>  fn update(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult { \n\n        ...\n\n        for event in &amp;mut self.current_engine().events {\n            for listener in &amp;mut self.current_engine().system_event_listeners {\n                // Would love to do some stuff here\n            }\n        }\n</code></pre>\n\n<p>The result is</p>\n\n<pre><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src\\main.rs:81:34\n   |\n80 | for event in &amp;mut self.current_engine().events {\n   | ---------------------------------\n   | | |\n   | | first mutable borrow occurs here\n   | first borrow later used here\n81 | for listener in &amp;mut self.current_engine().system_event_listeners {\n   | ^^^^ second mutable borrow occurs here\n</code></pre>\n\n<p>I was able solve this problem by moving (popping) out all items of whichever vector I want to loop into a new vector. And then pushing them back in (because I want to re-use this list of listeners for every game-loop). But this is extremely convoluted, and I cannot imagine this is the proper way to do something as fundamental (and simple) was this.</p>\n\n<p>I hope someone can tell me what I am doing wrong, or show this should be done instead.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 6, "creation_date": 1563171678, "post_id": 57033842, "comment_id": 100596777, "body": "Because it implements the <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\">Copy</a> trait. It is copied on the fly."}], "owner": {"reputation": 45, "user_id": 11061655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca604800cac8c4f4dc986c93244ea3ea?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11061655/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 41, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1563171637, "creation_date": 1563169798, "last_edit_date": 1563171637, "question_id": 57033842, "link": "https://stackoverflow.com/questions/57033842/passing-borrowing-reference-as-not-borrowing", "title": "Passing borrowing reference as not borrowing", "body": "<pre class=\"lang-rust prettyprint-override\"><code>fn count_occur(v: &amp;Vec&lt;i32&gt;, val: i32) -&gt; usize {\n    0\n}\n\nfn main() -&gt; () {\n    let v1 = vec![1, 2, 3, 4, 5, 6];\n    for &amp;item in &amp;v1 {\n        let v2 = count_occur(&amp;v1, item);\n        println!(\"{}\", v2);\n    }\n}\n</code></pre>\n\n<p><code>item</code> is a not mutable borrowing reference. Why does the compiler accept that code? After all, <code>count_occur</code> accepts <strong>not</strong> borrowing reference to <code>i32</code>?</p>\n"}, {"tags": ["rust", "idioms"], "comments": [{"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 4, "creation_date": 1563147645, "post_id": 57031503, "comment_id": 100592665, "body": "This sounds very similar to an &quot;arena&quot;, which certainly has it&#39;s use cases."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1563162032, "post_id": 57031503, "comment_id": 100594634, "body": "You may also be interested in <a href=\"https://docs.rs/slotmap/0.3.0/slotmap/\" rel=\"nofollow noreferrer\"><code>slotmap</code></a>."}], "owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 110, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1563329585, "creation_date": 1563142108, "last_edit_date": 1563329585, "question_id": 57031503, "link": "https://stackoverflow.com/questions/57031503/using-hashmap-in-place-of-pointers-in-rust", "title": "Using HashMap in place of pointers in Rust", "body": "<p>It's occurred to me in my adventures with Rust, that indexing into a <code>HashMap&lt;usize,_&gt;</code> has many of the same advantages as doing direct heap allocations, but without the difficulties that surround doing the latter in Rust. Treating indexes as pointers, you get:</p>\n\n<ul>\n<li>Constant-time lookup</li>\n<li>Entities can easily share mutable \"references\" to a heap value</li>\n<li>None of the clunky <code>Box</code>ing business</li>\n<li>You still have Rust's memory safety</li>\n</ul>\n\n<p>I can immediately think of a few disadvantages:</p>\n\n<ul>\n<li>You're back to having to \"manually deallocate\" memory until the HashMap itself goes out of scope</li>\n<li>Allocation cost becomes less predictable because of internal resizing</li>\n</ul>\n\n<p>Is this considered an anti-pattern, or is it idiomatic when used for the right use-cases?</p>\n"}, {"tags": ["types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1563152999, "post_id": 57032029, "comment_id": 100593440, "body": "Thanks. It&#39;s unfortunate. I&#39;ve opted for a macro instead."}], "tags": [], "owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "is_accepted": true, "score": 3, "last_activity_date": 1563149299, "creation_date": 1563149299, "answer_id": 57032029, "question_id": 57031354, "link": "https://stackoverflow.com/questions/57031354/how-to-unify-functions-taking-f64-and-complexf64/57032029#57032029", "title": "How to unify functions taking f64 and Complex&lt;f64&gt;?", "body": "<p>Since there's no trait for <code>sqrt</code> in std, and <code>Complex</code> doesn't implement <code>num_traits::Float</code>, you would have to make your own trait for it.</p>\n\n<pre><code>trait Sqrt {\n    fn sqrt(self) -&gt; Self;\n}\n\nimpl Sqrt for f64 {\n    fn sqrt(self) -&gt; Self {\n        f64::sqrt(self)\n    }\n}\n\nimpl Sqrt for Z64 {\n    fn sqrt(self) -&gt; Self {\n        Z64::sqrt(&amp;self)\n    }\n}\n</code></pre>\n\n<p>Then, you can simply require the needed traits.</p>\n\n<pre><code>use std::ops::{Add, Mul, Sub};\n\nfn calc&lt;T&gt;(k1: T, k2: T, k3: T) -&gt; (T, T)\nwhere\n    T: Add&lt;Output = T&gt; + Mul&lt;Output = T&gt; + Sub&lt;Output = T&gt; + Sqrt + Copy\n{\n    let a = k1 + k2;\n    let b = k2 * k3.sqrt();\n    (a + b, a - b)\n}\n</code></pre>\n\n<p>If you use these same bounds in many places, <a href=\"https://stackoverflow.com/questions/26983355/is-there-a-way-to-combine-multiple-traits-in-order-to-define-a-new-trait\">consider making a trait that requires all of them and a universal bound</a>.</p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54, "favorite_count": 0, "accepted_answer_id": 57032029, "answer_count": 1, "score": 1, "last_activity_date": 1563149299, "creation_date": 1563140437, "last_edit_date": 1563146474, "question_id": 57031354, "link": "https://stackoverflow.com/questions/57031354/how-to-unify-functions-taking-f64-and-complexf64", "title": "How to unify functions taking f64 and Complex&lt;f64&gt;?", "body": "<p>I have two functions:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn f1(k1: f64, k2: f64, k3: f64) -&gt; (f64, f64) {\n    let a = k1 + k2;\n    let b = k2 * k3.sqrt();\n    (a + b, a - b)\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Z64 = num::complex::Complex&lt;f64&gt;;\n\nfn f2(k1: Z64, k2: Z64, k3: Z64) -&gt; (Z64, Z64) {\n    let a = k1 + k2;\n    let b = k2 * k3.sqrt();\n    (a + b, a - b)\n}\n</code></pre>\n\n<p>The code is identical, only the types are different. One is <code>f64</code>. The other is <code>Complex&lt;f64&gt;</code>. Is it possible to have a single function polymorphic on both types?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563131182, "post_id": 57030176, "comment_id": 100589598, "body": "The lifetime <code>&#39;_</code> just means you elided it and it was inferred."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563131513, "post_id": 57030176, "comment_id": 100589673, "body": "If you send a struct with a reference across an <code>mpsc</code> channel, what&#39;s to stop the receiver holding on to it for longer than the lifetime of the referenced value?"}], "owner": {"reputation": 79, "user_id": 10335637, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pnstP.jpg?s=128&g=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/10335637/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 201, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1563168782, "creation_date": 1563129669, "last_edit_date": 1563168782, "question_id": 57030176, "link": "https://stackoverflow.com/questions/57030176/please-explan-cannot-infer-an-appropriate-lifetime-for-borrow-expression-due-t", "title": "Please, explan &quot;cannot infer an appropriate lifetime for borrow expression due to conflicting requirements&quot; error", "body": "<p>I have a little example of code, that I do not understand on this moment: </p>\n\n<pre><code>use std::sync::mpsc::Sender;\nuse tokio::prelude::{Async, Future};\n\npub enum Progress&lt;'a&gt; {\n    File(&amp;'a str),\n}\n\npub struct ReadAndHash&lt;'a&gt; {\n    message: String,\n    tx: Sender&lt;Progress&lt;'a&gt;&gt;,\n}\n\npub struct FileInfo {}\n\nimpl&lt;'a&gt; Future for ReadAndHash&lt;'a&gt; {\n    type Item = FileInfo;\n    type Error = ();\n\n    fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Self::Item&gt;, Self::Error&gt; {\n        self.tx.send(Progress::File(&amp;self.message)).unwrap();\n\n        Ok(Async::Ready(FileInfo {}))\n    }\n}\n</code></pre>\n\n<p>And the rust compilation results:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:20:37\n   |\n20 |         self.tx.send(Progress::File(&amp;self.message)).unwrap();\n   |                                     ^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 19:5...\n  --&gt; src/main.rs:19:5\n   |\n19 | /     fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Self::Item&gt;, Self::Error&gt; {\n20 | |         self.tx.send(Progress::File(&amp;self.message)).unwrap();\n21 | |\n22 | |         Ok(Async::Ready(FileInfo {}))\n23 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:20:37\n   |\n20 |         self.tx.send(Progress::File(&amp;self.message)).unwrap();\n   |                                     ^^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 15:6...\n  --&gt; src/main.rs:15:6\n   |\n15 | impl&lt;'a&gt; Future for ReadAndHash&lt;'a&gt; {\n   |      ^^\n   = note: ...so that the expression is assignable:\n           expected Progress&lt;'a&gt;\n              found Progress&lt;'_&gt;\n</code></pre>\n\n<p>I don't know what is the lifetime \"'_\". Can you please help me to understand, whats happenning? </p>\n\n<p>My idea is to pass referenses to TX istead of values.</p>\n"}, {"tags": ["rust", "glob"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1563137114, "post_id": 57030052, "comment_id": 100590901, "body": "It seems easy enough to do an experiment and see it for yourself, just replace your comments with file creation code and see what happens."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1563137401, "post_id": 57030052, "comment_id": 100590969, "body": "Anyway, I think it is implementation dependent, as this crate simply calls the <code>std</code> functions and those probably call the OS directly. <a href=\"https://stackoverflow.com/a/1676607/865874\">Related</a>."}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1563147287, "post_id": 57030052, "comment_id": 100592617, "body": "@rodrigo An experiment is only useful if the behaviour is defined or at least not random."}], "answers": [{"comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1563180527, "post_id": 57034727, "comment_id": 100600651, "body": "&quot;<i>Behaviour may change if the code is modified.</i>&quot; I will quote you on this ;-)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1563193137, "post_id": 57034727, "comment_id": 100606921, "body": "<i>It reads the whole directory at once the first time it is needed</i> =&gt; this read may not be atomic, especially for large directories, so there seems to be an inherent race-condition opportunity if a file is added while listing the directory."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1563174261, "creation_date": 1563174261, "answer_id": 57034727, "question_id": 57030052, "link": "https://stackoverflow.com/questions/57030052/what-point-in-time-does-the-rust-glob-function-represent/57034727#57034727", "title": "What point in time does the Rust glob function represent?", "body": "<p>Looking at <a href=\"https://docs.rs/glob/0.3.0/src/glob/lib.rs.html\" rel=\"nofollow noreferrer\">the source code for glob</a>, you can see that:</p>\n\n<ul>\n<li>It doesn't really do anything until the first time you call <code>next</code>, so in your example it would see the cat.</li>\n<li>It reads the whole directory at once the first time it is needed, so in your example it would not see the dog.</li>\n<li>When your pattern matches several directories, it reads them one by one, so any files that are added to a directory before it starts processing that specific directory will be visible. Once processing of the directory has started, the list is frozen and new files will not be seen.</li>\n</ul>\n\n<p>In your example, it would therefore return the giraffe, zebra and cat in no particular order.</p>\n\n<p>Note however that this is looking at the code as it currently stands, behaviour may change if the code is modified.</p>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 57034727, "answer_count": 1, "score": 4, "last_activity_date": 1563174261, "creation_date": 1563128717, "question_id": 57030052, "link": "https://stackoverflow.com/questions/57030052/what-point-in-time-does-the-rust-glob-function-represent", "title": "What point in time does the Rust glob function represent?", "body": "<p>The Rust <a href=\"https://docs.rs/glob/0.3.0/glob/\" rel=\"nofollow noreferrer\">glob</a> crate is fairly straight forward, as long as no files are added during execution. But what happends if the state of the filesystem changes?</p>\n\n<p>Consider the following situation:</p>\n\n<pre><code>// The folder contains a cute giraffe and a cute zebra.\nlet mut animals = glob(\"images/cute_*.jpg\");\n// A cute cat is added to the folder.\nlet first = animals.next();\n// A cute dog is added to the folder.\nlet second = animals.next();\n</code></pre>\n\n<p>What will first and second be? A giraffe and a zebra? A cat and a dog?</p>\n\n<p>To rephrase the question in more technical terms: Does <code>glob</code> represent a snapshot of the filesystem as it was when it is called? Or perhaps when iteration begins? Or is \"live\" finding recently added files?</p>\n"}, {"tags": ["string", "rust", "chunks"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1563161866, "post_id": 57029974, "comment_id": 100594618, "body": "I don&#39;t know what you&#39;re referring to as the &quot;size&quot; of a string. Into how many chunks can you split <code>&#233;</code> (one codepoint, two bytes)? What about <code>e\u030a</code> (two codepoints, three bytes)? What about <code>\ud83c\uddfa\ud83c\uddf8</code> (two codepoints, eight bytes)?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563168732, "post_id": 57029974, "comment_id": 100595926, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51257304/creating-a-sliding-window-iterator-of-slices-of-chars-from-a-string\">Creating a sliding window iterator of slices of chars from a String</a>"}, {"owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1563321485, "post_id": 57029974, "comment_id": 100658414, "body": "@trentcl that&#39;s fair, I guess I should specify in that this case I&#39;m only worried about char&#39;s - characters that can be represented by those 128 bytes. Which is more limited, but simple enough for my purposes."}, {"owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563322174, "post_id": 57029974, "comment_id": 100658529, "body": "@hellow this is indeed very close to creating a sliding window over a string, but I think this case varies because I&#39;m trying to create chunks instead and then collect these chunks into strings. I&#39;m encountering issues on both sides: the chunking is indeed possible once the String has been converted into a Vec&lt;char&gt;, but the collecting is still troublesome."}], "answers": [{"comments": [{"owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "edited": false, "score": 0, "creation_date": 1563321764, "post_id": 57032118, "comment_id": 100658445, "body": "I had tried the first suggestion prior to posting (although I felt uneasy about the making unnecessary Vec&#39;s) but I had encountered a compiler error on the <code>collect::&lt;Vec&lt;String&gt;&gt;()</code> call. Something stating that a <code>Vec&lt;String&gt;</code> couldn&#39;t be built from a <code>Iterator&lt;&amp;[char]&gt;</code> which kind of struck me as odd.  EDIT: running it now, it states that the trait <code>FromIterator&lt;&amp;[char]&gt;</code> is not implemented for <code>Vec&lt;String&gt;</code> so I would think that maybe I can implement that trait?"}, {"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "reply_to_user": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "edited": false, "score": 0, "creation_date": 1563322687, "post_id": 57032118, "comment_id": 100658622, "body": "Fixed it. I wouldn&#39;t recommend using that code though, it has to allocate way too much. BTW, you wouldn&#39;t be able to implement that trait because the trait and types involved are both not &quot;yours&quot;."}, {"owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "edited": false, "score": 0, "creation_date": 1563326927, "post_id": 57032118, "comment_id": 100659313, "body": "Oh I see. I thought there would be a way to implicitly convert the Chunks of chars into strings, but a map would do that for you.   Also, the flat_map concept is a little foreign to me but I&#39;m going to attempt to deconstruct it: - the flat_map normally flattens nested structures, but in this case it&#39;s used to return an iterator - if you&#39;re on the nth character, insert an iterator that wraps a space, and chain it into the current iterator so that it comes before it. Else, None will be turned into an iterator which will produce nothing. - collect the iterators into a string"}], "tags": [], "owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "is_accepted": true, "score": 12, "last_activity_date": 1563322426, "last_edit_date": 1563322426, "creation_date": 1563150426, "answer_id": 57032118, "question_id": 57029974, "link": "https://stackoverflow.com/questions/57029974/how-to-split-string-into-chunks-in-rust-to-insert-spaces/57032118#57032118", "title": "How to split string into chunks in Rust to insert spaces", "body": "<p>The problem here is that <code>chars()</code> and <code>bytes()</code> return <code>Iterator</code>s, not slices. You could use <code>as_bytes()</code>, which will give you a <code>&amp;[u8]</code>. However, you cannot directly get a <code>&amp;[char]</code> from a <code>&amp;str</code>, because there only exists the bytes themselves, and the <code>char</code>s must be created by looking through and seeing how many bytes makes up each one. You'd have to do something like this:</p>\n\n<pre><code>text.chars()\n    .collect::&lt;Vec&lt;char&gt;&gt;()\n    .chunks(n)\n    .map(|c| c.iter().collect::&lt;String&gt;())\n    .collect::&lt;Vec&lt;String&gt;&gt;()\n    .join(\" \");\n</code></pre>\n\n<p>However, I would NOT recommend this as it has to allocate a lot of temporary storage for <code>Vec</code>s and <code>String</code>s along the way. Instead, you could do something like this, which only has to allocate to create the final <code>String</code>.</p>\n\n<pre><code>text.chars()\n    .enumerate()\n    .flat_map(|(i, c)| {\n        if i != 0 &amp;&amp; i % n == 0 {\n            Some(' ')\n        } else {\n            None\n        }\n        .into_iter()\n        .chain(std::iter::once(c))\n    })\n    .collect::&lt;String&gt;()\n</code></pre>\n\n<p>This stays as iterators until the last collect, by flat_mapping with an iterator that is either just the character or a space and then the character.</p>\n"}, {"comments": [{"owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "edited": false, "score": 1, "creation_date": 1564934471, "post_id": 57316588, "comment_id": 101183861, "body": "Oh interesting, I like this solution as well and appreciate the time you took to respond.  This very much a clear and understandable solution that I should&#39;ve thought about. Thank you!  I&#39;m curious if there&#39;s string allocation overhead compared to the flat_map solution JayDepp posted."}, {"owner": {"reputation": 71, "user_id": 3535834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a435f75e793177e34c035198fde3f203?s=128&d=identicon&r=PG&f=1", "display_name": "sterfield", "link": "https://stackoverflow.com/users/3535834/sterfield"}, "reply_to_user": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "edited": false, "score": 0, "creation_date": 1565029207, "post_id": 57316588, "comment_id": 101214453, "body": "So, unfortunately, there is. <code>format!</code> is creating a <code>String</code> and returning it. So for each character, a new <code>String</code> is created, containing the previous one with the current character and an optional space if needed. In the end, you&#39;ll ended up with the same <code>String</code> but there is quite some overhead because of the multiple intermediate <code>String</code>.  The above method is better, because you&#39;ll have a <code>Iterator&lt;Iterator&lt;Char&gt;&gt;</code> and the <code>flat_map</code> will create an <code>Iterator&lt;Char&gt;</code> that is ready to be <code>collect</code>ed at the very end. So you&#39;ll have only one final <code>String</code> created."}], "tags": [], "owner": {"reputation": 71, "user_id": 3535834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a435f75e793177e34c035198fde3f203?s=128&d=identicon&r=PG&f=1", "display_name": "sterfield", "link": "https://stackoverflow.com/users/3535834/sterfield"}, "is_accepted": false, "score": 3, "last_activity_date": 1564691912, "last_edit_date": 1564691912, "creation_date": 1564691428, "answer_id": 57316588, "question_id": 57029974, "link": "https://stackoverflow.com/questions/57029974/how-to-split-string-into-chunks-in-rust-to-insert-spaces/57316588#57316588", "title": "How to split string into chunks in Rust to insert spaces", "body": "<p>So if you want to work from a list of chars to create a String, you can use <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.fold\" rel=\"nofollow noreferrer\">fold</a> for that.</p>\n\n<p>Something like this :</p>\n\n<pre><code>text.chars\n    .enumerate()\n    .fold(String::new(), |acc, (i, c)| {\n        if i != 0 &amp;&amp; i == n {\n            format!(\"{} {}\", acc, c)\n        } else {\n            format!(\"{}{}\", acc, c)\n        }\n    })\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1428, "user_id": 9888500, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/A0V6D.jpg?s=128&g=1", "display_name": "Esteban Borai", "link": "https://stackoverflow.com/users/9888500/esteban-borai"}, "is_accepted": false, "score": 2, "last_activity_date": 1602912572, "creation_date": 1602912572, "answer_id": 64399300, "question_id": 57029974, "link": "https://stackoverflow.com/questions/57029974/how-to-split-string-into-chunks-in-rust-to-insert-spaces/64399300#64399300", "title": "How to split string into chunks in Rust to insert spaces", "body": "<p>If the size of the data you want to split in is fixed then:</p>\n<pre><code>use std::str;\n\nfn main() {\n    let subs = &quot;&amp;#8204;&amp;#8203;&amp;#8204;&amp;#8203;&amp;#8204;&amp;#8203;&amp;#8203;&amp;#8204;&amp;#8203;&amp;#8204;&quot;.as_bytes()\n        .chunks(7)\n        .map(str::from_utf8)\n        .collect::&lt;Result&lt;Vec&lt;&amp;str&gt;, _&gt;&gt;()\n        .unwrap();\n        \n    println!(&quot;{:?}&quot;, subs);\n}\n\n// &gt;&gt; [&quot;&amp;#8204;&quot;, &quot;&amp;#8203;&quot;, &quot;&amp;#8204;&quot;, &quot;&amp;#8203;&quot;, &quot;&amp;#8204;&quot;, &quot;&amp;#8203;&quot;, &quot;&amp;#8203;&quot;, &quot;&amp;#8204;&quot;, &quot;&amp;#8203;&quot;, &quot;&amp;#8204;&quot;]\n</code></pre>\n"}], "owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4377, "favorite_count": 2, "accepted_answer_id": 57032118, "answer_count": 3, "score": 8, "last_activity_date": 1602912572, "creation_date": 1563128062, "question_id": 57029974, "link": "https://stackoverflow.com/questions/57029974/how-to-split-string-into-chunks-in-rust-to-insert-spaces", "title": "How to split string into chunks in Rust to insert spaces", "body": "<p>I'm attempting to learn Rust. And a recent problem I've encountered is the following:\ngiven a <code>String</code>, that is exactly some multiple of n, I want to split the string into chunks of size n, and insert a space in between these chunks, then collect back into a single string.</p>\n\n<p>The issue I was running into, is that the <code>chars()</code> method returns the <code>Chars</code> struct, which for some reason doesn't implement the <code>SliceConcatExt</code> trait, so <code>chunks()</code> can't be called on it.</p>\n\n<p>Furthermore, once I've successfully created a Chunks struct (by calling <code>.bytes()</code> instead) I'm unsure how to call a <code>.join(' ')</code> since the elements are now <code>Chunks</code> of byte slices...</p>\n\n<p>There has to be an elegant way to do this I'm missing.</p>\n\n<p>For example here is an input / output that illustrates the situation:</p>\n\n<pre><code>given: whatupmyname, 4\noutput: what upmy name\n</code></pre>\n\n<p>This is my poorly written attempt:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let n = 4;\nlet text = \"whatupmyname\".into_string();\ntext.chars()\n    // compiler error on chunks() call\n    .chunks(n)\n    .collect::&lt;Vec&lt;String&gt;&gt;()\n    .join(' ')\n</code></pre>\n\n<p>Thank you for any help!</p>\n"}, {"tags": ["file", "asynchronous", "rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 5, "last_activity_date": 1582617042, "last_edit_date": 1582617042, "creation_date": 1563122896, "answer_id": 57029345, "question_id": 57028769, "link": "https://stackoverflow.com/questions/57028769/how-to-copy-file-with-tokiofs/57029345#57029345", "title": "How to copy file with tokio::fs", "body": "<p>Now <code>tokio::fs</code> has it's own <code>copy</code> implementation in version <strong>Tokio 0.2.11</strong>.  (<a href=\"https://docs.rs/tokio/0.2.11/tokio/fs/fn.copy.html\" rel=\"nofollow noreferrer\">reference</a>)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//tokio = {version = \"0.2.11\", features = [\"full\"] }\n#[tokio::main]\nasync fn main()-&gt; Result&lt;(), ::std::io::Error&gt;{\n    tokio::fs::copy(\"source.txt\",\"target.txt\").await?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>Implementation is basically <strong>async-await</strong> version of the code below, please see the <a href=\"https://docs.rs/tokio/0.2.11/src/tokio/fs/copy.rs.html\" rel=\"nofollow noreferrer\">source code</a></p>\n\n<h2>Without async await ( Tokio 0.1.x )</h2>\n\n<p>You can use <code>Copy</code> future from <code>tokio::io</code>, which copies all bytes from input stream to output stream.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//tokio-0.1.22\ntokio::fs::File::open(\"src.txt\")\n    .and_then(|mut file_in| {\n        tokio::fs::File::create(\"dest.txt\")\n            .and_then(move |file_out| tokio::io::copy(file_in, file_out))\n    })\n    .map_err(Error::from)\n    .map(drop);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=28c005dc43b87272f34d6febc8d43877\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>Your code is not working because <code>read_buf</code> returns <code>Poll</code> not the <code>Future</code> so it won't combine with the inner one. It will do the same work for the <strong>small sized file</strong> if you  spawn <code>Future</code> which is created by <code>tokio::fs::File::create</code> (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e241496456f07fb41bd0dd8aea51b4f4\" rel=\"nofollow noreferrer\">full code</a>). </p>\n\n<p>But be careful <a href=\"https://docs.rs/tokio-io/0.1.12/tokio_io/trait.AsyncRead.html#method.read_buf\" rel=\"nofollow noreferrer\">from the reference of read_buf</a> :</p>\n\n<blockquote>\n  <p>Pull some bytes from this source into the specified BufMut</p>\n</blockquote>\n\n<p>It doesn't read until the end of file with a single call. I don't know why <a href=\"https://docs.rs/tokio/0.1.22/tokio/fs/struct.File.html#examples\" rel=\"nofollow noreferrer\">this read example</a> has no warning, it just says <em>Read the contents of a file into a buffer</em>, it looks like a misleading example.</p>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 503, "favorite_count": 0, "accepted_answer_id": 57029345, "answer_count": 1, "score": 3, "last_activity_date": 1582617042, "creation_date": 1563118305, "last_edit_date": 1563276283, "question_id": 57028769, "link": "https://stackoverflow.com/questions/57028769/how-to-copy-file-with-tokiofs", "title": "How to copy file with tokio::fs", "body": "<p>I am trying to copy a file using tokio for async operations. I saw that tokio doesn't expose any method like <code>tokio::fs::copy</code> which would do the job for me (like the equivalent <code>std::fs::copy</code> for sync operations).</p>\n\n<p>While trying to implement such a method, i can't actually create a file using <code>tokio::fs::File::create</code>, that is the following code doesn't create any file:</p>\n\n<pre><code>tokio::fs::File::open(\"src.txt\")\n    .and_then(|mut file| {\n        let mut content = Vec::new();\n        file.read_buf(&amp;mut content)\n            .map(move |_| tokio::fs::File::create(\"dest.txt\"))\n    })\n    .map_err(Error::from)\n    .map(drop);\n</code></pre>\n\n<p>How can I copy <code>src.txt</code> into <code>dest.txt</code> using tokio and async <code>fs</code> methods?</p>\n\n<p>Here is a link to <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7ec84f67e299c6e96dd5e2b11693dce5\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["module", "rust", "rust-crates"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563097415, "post_id": 57026172, "comment_id": 100581986, "body": "Does this help? <a href=\"https://stackoverflow.com/questions/26388861/how-to-include-module-from-another-file-from-the-same-project\" title=\"how to include module from another file from the same project\">stackoverflow.com/questions/26388861/&hellip;</a>"}, {"owner": {"reputation": 892, "user_id": 3331931, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/667d26246734ae54783faeebf84ced20?s=128&d=identicon&r=PG", "display_name": "fcracker79", "link": "https://stackoverflow.com/users/3331931/fcracker79"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563097724, "post_id": 57026172, "comment_id": 100582042, "body": "Thanks for the answer @PeterHall. Well, that partially answers my question, as it does not include non-crate roots modules referring each other (see src/file2.rs)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563097766, "post_id": 57026172, "comment_id": 100582051, "body": "Place the <code>mod</code> statements in the parent module. This is how to tell Rust that the sub-modules exist at all."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1563097942, "post_id": 57026172, "comment_id": 100582095, "body": "All paths are addressable as fully-qualified paths from the root. You can think of it as writing relative paths inside files on a file system, where the <code>crate</code> keyword is like <code>&#47;</code>, start at the root."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1563098072, "post_id": 57026172, "comment_id": 100582123, "body": "You never actually <i>need</i> to use <code>use</code> statements. They are for convenience to not have to type the full paths everywhere. And they are relative to where you are in the module hierarchy."}, {"owner": {"reputation": 892, "user_id": 3331931, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/667d26246734ae54783faeebf84ced20?s=128&d=identicon&r=PG", "display_name": "fcracker79", "link": "https://stackoverflow.com/users/3331931/fcracker79"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563098595, "post_id": 57026172, "comment_id": 100582239, "body": "Thanks again @PeterHall. That is pretty clearer. My last doubt is: why am I using different ways of referring for <code>main.rs</code> and <code>file2.rs</code>? It must be related with the fact that one of them is the crate root but I cant&#39;t see a substantial difference."}, {"owner": {"reputation": 892, "user_id": 3331931, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/667d26246734ae54783faeebf84ced20?s=128&d=identicon&r=PG", "display_name": "fcracker79", "link": "https://stackoverflow.com/users/3331931/fcracker79"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563099107, "post_id": 57026172, "comment_id": 100582349, "body": "@PeterHall I am adding <code>pub mod f1</code> in <code>file1</code> and <code>pub mod f2</code> in <code>file2</code> but now I do not know how to refer them in the crate root. <code>use</code> is not accepted, neither <code>mod f1</code> does."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1563099382, "post_id": 57026172, "comment_id": 100582410, "body": "You could write <code>use crate::file1;</code> inside main.rs too. But it would mean there would be two copies of <code>file1</code> in scope. The difference is that the modules are already in scope in main because main is the immediate parent."}, {"owner": {"reputation": 892, "user_id": 3331931, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/667d26246734ae54783faeebf84ced20?s=128&d=identicon&r=PG", "display_name": "fcracker79", "link": "https://stackoverflow.com/users/3331931/fcracker79"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563099945, "post_id": 57026172, "comment_id": 100582539, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/196439/discussion-between-fcracker79-and-peter-hall\">continue this discussion in chat</a>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1563171933, "post_id": 57026172, "comment_id": 100596854, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/26388861/how-to-include-module-from-another-file-from-the-same-project\">How to include module from another file from the same project?</a>"}], "owner": {"reputation": 892, "user_id": 3331931, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/667d26246734ae54783faeebf84ced20?s=128&d=identicon&r=PG", "display_name": "fcracker79", "link": "https://stackoverflow.com/users/3331931/fcracker79"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1563222535, "creation_date": 1563096944, "last_edit_date": 1563222535, "question_id": 57026172, "link": "https://stackoverflow.com/questions/57026172/split-main-rs-into-files-that-refer-each-other", "title": "Split main.rs into files that refer each other", "body": "<p>I have the following structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>|-- Cargo.toml\n|-- src\n|   |-- file1.rs\n|   |-- file2.rs\n|   `-- main.rs\n</code></pre>\n\n<p>src/file1.rs</p>\n\n<pre><code>pub fn function1() {}\n</code></pre>\n\n<p>src/file2.rs</p>\n\n<pre><code>// ERROR (1): error[E0583]: file not found for module `file1`\n// mod file1;\n\nuse crate::file1;\npub fn function2() {\n    file1::function1();\n}\n</code></pre>\n\n<p>src/main.rs</p>\n\n<pre><code>// ERROR (2): no `file1` in the root\n// use crate::file1;\nmod file1;\nmod file2;\n\nfn main() {\n    file1::function1();\n    file2::function2();\n}\n</code></pre>\n\n<p>Basically, I have a different way to import <code>function1</code>, depending on the fact that I am in the crate root or in an arbitrary Rust file (please see <code>ERROR (1)</code> and <code>ERROR (2)</code>).\nI am a bit lost on how Rust manages arbirary files: they behave differently from the root crate, where a simple <code>mod</code> keyword does the trick.\nSo, the mentioned answer for which this is a duplicate only partially only answers how to refer a file from the crate root, not <em>why</em> referring the same file from another one should be different (<code>use crate::&lt;filename&gt;</code>).</p>\n"}, {"tags": ["compiler-errors", "rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 8, "last_activity_date": 1563097133, "creation_date": 1563097133, "answer_id": 57026188, "question_id": 57025894, "link": "https://stackoverflow.com/questions/57025894/issuing-a-warning-at-compile-time/57026188#57026188", "title": "Issuing a warning at compile time?", "body": "<p>This currently isn't possible in stable Rust. However, there is an unstable feature, <a href=\"https://github.com/rust-lang/rust/issues/54140\" rel=\"noreferrer\">procedural macro diagnostics</a>, which provides this functionality for procedural macros, via the <a href=\"https://doc.rust-lang.org/proc_macro/struct.Diagnostic.html#method.warning\" rel=\"noreferrer\"><code>Diagnostic</code></a> API.</p>\n\n<p>To emit a compiler warning from inside a procedural macro, you would use it like this:</p>\n\n<pre><code>#![feature(proc_macro_diagnostic)]\n\nuse proc_macro::Diagnostic;\n\nDiagnostic::new()\n    .warning(\"This method is deprecated\")\n    .emit();\n</code></pre>\n\n<p>To associate the warning with a specific token span, you'd use <code>spanned_warning</code> instead. This makes the warning output show the relevant source tokens underlined along with the message.</p>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 427, "favorite_count": 1, "accepted_answer_id": 57026188, "answer_count": 1, "score": 8, "last_activity_date": 1564960246, "creation_date": 1563094393, "last_edit_date": 1564960246, "question_id": 57025894, "link": "https://stackoverflow.com/questions/57025894/issuing-a-warning-at-compile-time", "title": "Issuing a warning at compile time?", "body": "<p>I want to issue a warning at compile time, perhaps from a macro. It should not be silenceable by <code>cap_lints</code>. My current use case is feature deprecation, but there's other possible uses for this.</p>\n"}, {"tags": ["postgresql", "rust", "rust-diesel"], "owner": {"reputation": 2173, "user_id": 1804656, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/47ea159b5819a724a31a95f8dd1fc037?s=128&d=identicon&r=PG", "display_name": "kyle", "link": "https://stackoverflow.com/users/1804656/kyle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 237, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1563048011, "creation_date": 1563048011, "question_id": 57022429, "link": "https://stackoverflow.com/questions/57022429/deleting-from-an-associated-table-with-a-subquery-using-diesel-from-a-postgres-d", "title": "Deleting from an associated table with a subquery using Diesel from a postgres database", "body": "<p>I have a query that I am trying to translate from SQL into rust/diesel but am running into issues with creating a subquery using diesel.</p>\n\n<p>I am using diesel = \"1.4.2\" along with the postgres feature.</p>\n\n<p>I have the following schema and models...</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate diesel;\n\nmod schema {\n    table! {\n        jobs (id) {\n            id -&gt; Int4,\n        }\n\n        appointments (id) {\n            id -&gt; Int4,\n        }\n\n        categories (id) {\n            id -&gt; Int4\n        }\n\n        appointments_categories(appointment_id, category_id) {\n            appointment_id -&gt; Int4,\n            category_id -&gt; Int4\n        }\n    }\n}\n\nmod models {\n    #[derive(Debug, Identifiable)]\n    pub struct Job {\n        pub id: i32,\n    }\n\n    #[derive(Debug, Identifiable)]\n    pub struct Appointment {\n        pub id: i32,\n    }\n\n    #[derive(Debug, Identifiable)]\n    pub struct Category {\n        pub id: i32,\n    }\n\n    #[derive(Debug, Identifiable)]\n    #[primary_key(appointment_id, appointment_type_id)]\n    pub struct AppointmentCategory {\n        pub id: i32,\n    }\n}\n\nfn main() {}\n\n</code></pre>\n\n<p>And then I have this SQL query:</p>\n\n<pre class=\"lang-sql prettyprint-override\"><code>DELETE FROM appointments_categories\nWHERE ROW (\"appointment_id\", \"category_id\")\n    IN (\n        SELECT\n            appointment.id AS appointment_id, appointments_categories. \"category_id\" FROM appointment\n        INNER JOIN appointments_categories ON appointments_categories. \"appointment_id\" = appointment.id\n            WHERE appointment.\"job_id\" = 125\n            LIMIT 10000);\n\n</code></pre>\n\n<p>So far I have tried to use the following approach but unable to figure out how to bind the subquery/expression.</p>\n\n<pre><code>let sub_query = appointment_dsl::appointment\n    .inner_join(appt_cat_dsl::appointments_categories)\n    .filter(appointment_dsl::job_id.eq(job_id))\n    .select((appointment_dsl::id, appt_cat_dsl::category_id));\n\nlet rows_deleted = delete(appt_cat_dsl::appointments_categories\n    .filter(sql(format!(\"ROW(appointmentId, appointmentTypeId) IN {}\", subquery))))?;\n</code></pre>\n\n<hr>\n\n<p>I understand that there are other ways to write the delete query but I need to be able to limit the number of rows that it deletes. The associated/junction table is massive with 3 million rows per job and the job runs every 15min. Deleting it all at once locks the DB up so it isn't an option.</p>\n\n<p>Sorry I can't make a reproducible sample on the rust playground since it doesn't have diesel.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1563021728, "post_id": 57019112, "comment_id": 100569146, "body": "also <a href=\"https://stackoverflow.com/questions/56973284/how-do-i-convert-a-vecu8-to-vecu64\" title=\"how do i convert a vecu8 to vecu64\">stackoverflow.com/questions/56973284/&hellip;</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1563021930, "post_id": 57019112, "comment_id": 100569210, "body": "As that post says, you <i>almost certainly</i> want a <code>&amp;[u8]</code> and not a <code>Vec&lt;u8&gt;</code>."}], "owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "delete_vote_count": 1, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 82, "favorite_count": 0, "closed_date": 1563021792, "answer_count": 0, "score": 0, "last_activity_date": 1563020471, "creation_date": 1563020471, "question_id": 57019112, "link": "https://stackoverflow.com/questions/57019112/how-to-view-vecu64-as-vecu8-without-copying-in-rust", "closed_reason": "Duplicate", "title": "How to view Vec&lt;u64&gt; as Vec&lt;u8&gt; without copying in Rust?", "body": "<p>As the title says. Is there a noncopy way to view <code>Vec&lt;u64&gt;</code> or <code>[u64;4]</code> as <code>Vec&lt;u8&gt;</code> or <code>[u8;256]</code> ?</p>\n\n<p>After all I guess it could be made via unsafe block, ptr ... but how?</p>\n\n<p>And maybe there is another 'safe' way?</p>\n"}, {"tags": ["rust", "floating-point", "traits", "equality"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1563011457, "post_id": 57018002, "comment_id": 100566997, "body": "Hi there! Can you please post the full code by <a href=\"https://stackoverflow.com/posts/57018002/edit\">edit</a>ing your question? I.e. how you call <code>eq()</code> on a <code>Complex&lt;f32&gt;</code>? Thanks!"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 4, "creation_date": 1563011593, "post_id": 57018002, "comment_id": 100567021, "body": "<code>eq()</code> is from <code>PartialEq</code>, not <code>Eq</code>."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1563030762, "creation_date": 1563030762, "answer_id": 57020370, "question_id": 57018002, "link": "https://stackoverflow.com/questions/57018002/if-f32-is-not-eq-why-does-this-compile/57020370#57020370", "title": "If f32 is not Eq, why does this compile?", "body": "<p>The <code>eq</code> method (which is called when you use the <code>==</code> operator) is part of the <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\"><code>PartialEq</code></a> trait, not <a href=\"https://doc.rust-lang.org/std/cmp/trait.Eq.html\" rel=\"nofollow noreferrer\"><code>Eq</code></a>.</p>\n\n<p>The <code>Eq</code> trait inherits all of its methods from <code>PartialEq</code>, adding none of its own, and its sole purpose is as a marker to assert that the <code>==</code> operator forms an <a href=\"https://en.wikipedia.org/wiki/Equivalence_relation\" rel=\"nofollow noreferrer\">equivalence relation</a> on the implementing type.</p>\n\n<p>Types like <code>HashMap</code> rely on <code>Eq</code> rather than <code>PartialEq</code>, so they can make logical guarantees - for example:</p>\n\n<ul>\n<li>it must be possible to retrieve a value with the same key as it was inserted with</li>\n<li>if there is a hash collision, the implementation can still distinguish distinct keys using <code>==</code>, so one doesn't replace the other.</li>\n</ul>\n\n<p>It is always safe to derive an implementation of <code>Eq</code> because it will only be valid if all child fields are also <code>Eq</code>. However, if you implement <code>Eq</code> yourself, you need to make sure that the equivalence relation invariants are upheld.</p>\n"}], "owner": {"reputation": 20901, "user_id": 9476, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/f01cbd2238e2a78e4c43fa596f51d6a1?s=128&d=identicon&r=PG", "display_name": "Dmitri Nesteruk", "link": "https://stackoverflow.com/users/9476/dmitri-nesteruk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 415, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1563030796, "creation_date": 1563011157, "last_edit_date": 1563030796, "question_id": 57018002, "link": "https://stackoverflow.com/questions/57018002/if-f32-is-not-eq-why-does-this-compile", "title": "If f32 is not Eq, why does this compile?", "body": "<p>I have a generic type such as </p>\n\n<pre><code>impl&lt;T: Eq&gt; Eq for Complex&lt;T&gt; where T: Eq {}\n</code></pre>\n\n<p>For some reason, I'm able to make a <code>Complex&lt;f32&gt;</code> and have it compile and call <code>eq()</code> even though <code>f32</code> does not (cannot) support full comparison (because nan!=nan).</p>\n\n<p>How is this possible?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563010001, "post_id": 57017747, "comment_id": 100566687, "body": "Thank you. However, I do have to borrow it, and borrow as mutable, since the real code modifies UserHandler state in message handlers."}, {"owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563010327, "post_id": 57017747, "comment_id": 100566746, "body": "Edited the question to reflect that."}], "answers": [{"comments": [{"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 0, "creation_date": 1563011592, "post_id": 57018038, "comment_id": 100567020, "body": "Or basically have a method <code>fn handle_user_date(user: &amp;mut User, data: &amp;str, counter: &amp;mut i32)</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 1, "creation_date": 1563011682, "post_id": 57018038, "comment_id": 100567036, "body": "@GurwinderSingh Yes but I tried to explain the general method because if there are 42 fields to borrow it&#39;s gonna be painful"}, {"owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "edited": false, "score": 0, "creation_date": 1563013279, "post_id": 57018038, "comment_id": 100567320, "body": "Thanks, your explanation of the error reason is enlightening. Basically borrow checker prevents a whole class of bugs like inserting into <code>self.users</code> in one of the handler methods, which invalidates the <code>User</code> reference!"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 11, "last_activity_date": 1581695162, "last_edit_date": 1581695162, "creation_date": 1563011413, "answer_id": 57018038, "question_id": 57017747, "link": "https://stackoverflow.com/questions/57017747/why-does-refactoring-by-extracting-a-method-trigger-a-borrow-checker-error/57018038#57018038", "title": "Why does refactoring by extracting a method trigger a borrow checker error?", "body": "<p>The compiler is right to prevent you from borrowing the <code>HashMap</code> twice. Suppose in <code>handle_user_data()</code> you also tried to borrow <code>self.users</code>. You would break the rules of borrowing in Rust because you already have a mutable borrow on it and you can only have one.</p>\n\n<p>Since you can't borrow <code>self</code> twice for your <code>handle_user_data()</code>, I will propose a solution. I don't know if it's the best, but it works without unsafe and without overhead (I think).</p>\n\n<p>The idea is to use an intermediate struct that will borrow the other fields of <code>self</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl UserHandler {\n    fn handle_data(&amp;mut self, user_id: i32, data: &amp;str) {\n        if let Some(user) = self.users.get_mut(&amp;user_id) {\n            Middle::new(&amp;mut self.counter).handle_user_data(user, data);\n        }\n    }\n}\n\nstruct Middle&lt;'a&gt; {\n    counter: &amp;'a mut i32,\n}\n\nimpl&lt;'a&gt; Middle&lt;'a&gt; {\n    fn new(counter: &amp;'a mut i32) -&gt; Self {\n        Self {\n            counter\n        }\n    }\n\n    fn handle_user_data(&amp;mut self, user: &amp;mut User, data: &amp;str) {\n        user.send(\"Message received!\");\n        *self.counter += 1;\n    }\n}\n</code></pre>\n\n<p>This way, the compiler knows we can't borrow <code>users</code> twice. </p>\n\n<p>If you have only one or two things to borrow, a quick solution is to have an associated function that takes them as parameters:</p>\n\n<pre><code>impl UserHandler {\n    fn handle_user_data(user: &amp;mut User, data: &amp;str, counter: &amp;mut i32) {\n        // ...\n    }\n}\n</code></pre>\n\n<p>We can improve this design:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct UserHandler {\n    users: HashMap&lt;i32, User&gt;, // Maps user id to User objects.\n    middle: Middle,              // Represents internal state\n}\n\nimpl UserHandler {\n    fn handle_data(&amp;mut self, user_id: i32, data: &amp;str) {\n        if let Some(user) = self.users.get_mut(&amp;user_id) {\n            self.middle.handle_user_data(user, data);\n        }\n    }\n}\n\nstruct Middle {\n    counter: i32,\n}\n\nimpl Middle {\n    fn new(counter: i32) -&gt; Self {\n        Self {\n            counter\n        }\n    }\n\n    fn handle_user_data(&amp;mut self, user: &amp;mut User, data: &amp;str) {\n        user.send(\"Message received!\");\n        self.counter += 1;\n    }\n}\n</code></pre>\n\n<p>Now we are sure we don't have overhead and the syntax is much cleaner.</p>\n\n<p>Further information can be found in Niko Matsakis' blog post <a href=\"http://smallcultfollowing.com/babysteps/blog/2018/11/01/after-nll-interprocedural-conflicts/\" rel=\"nofollow noreferrer\">After NLL: Interprocedural conflicts</a>. Mapping this answer to the blog post:</p>\n\n<ul>\n<li>solution #1 -> \"View structs as a general, but extreme solution\" section</li>\n<li>solution #2 -> \"Free variables as a general, but extreme solution\" section (here expressed as an associated function)</li>\n<li>solution #3 -> \"Factoring as a possible fix\" section</li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "edited": false, "score": 0, "creation_date": 1610711385, "post_id": 57018128, "comment_id": 116224530, "body": "Like this idea."}], "tags": [], "owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "is_accepted": false, "score": 3, "last_activity_date": 1563012248, "creation_date": 1563012248, "answer_id": 57018128, "question_id": 57017747, "link": "https://stackoverflow.com/questions/57017747/why-does-refactoring-by-extracting-a-method-trigger-a-borrow-checker-error/57018128#57018128", "title": "Why does refactoring by extracting a method trigger a borrow checker error?", "body": "<p>When calling <code>self.handle_user_data</code>, you're taking the whole <code>self</code> mutably while still having a mutable borrowed <code>user</code> object, which Borrow Checker doesn't like. You can't have two mutable borrows as the same time.</p>\n\n<p>One method to circumvent this is not take whole <code>self</code> mutably but take the <code>counter</code> mutably:</p>\n\n<pre><code>impl UserHandler {\n    fn handle_data(&amp;mut self, user_id: i32, data: &amp;str) {\n        if let Some(user) = self.users.get_mut(&amp;user_id) {\n            handle_user_data(user, data, &amp;mut self.counter);\n        }\n    }\n}\n\nfn handle_user_data(user: &amp;mut User, data: &amp;str, counter: &amp;mut i32) {\n    user.send(data);\n    *counter += 1;\n}\n</code></pre>\n"}], "owner": {"reputation": 1585, "user_id": 3193180, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZJHYL.jpg?s=128&g=1", "display_name": "kreo", "link": "https://stackoverflow.com/users/3193180/kreo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 409, "favorite_count": 1, "accepted_answer_id": 57018038, "answer_count": 2, "score": 8, "last_activity_date": 1581695162, "creation_date": 1563009174, "last_edit_date": 1565619191, "question_id": 57017747, "link": "https://stackoverflow.com/questions/57017747/why-does-refactoring-by-extracting-a-method-trigger-a-borrow-checker-error", "title": "Why does refactoring by extracting a method trigger a borrow checker error?", "body": "<p>The architecture of my networking application can be stripped down to the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\n/// Represents remote user. Usually has fields,\n/// but we omit them for the sake of example.\nstruct User;\n\nimpl User {\n    /// Send data to remote user.\n    fn send(&amp;mut self, data: &amp;str) {\n        println!(\"Sending data to user: \\\"{}\\\"\", data);\n    }\n}\n\n/// A service that handles user data.\n/// Usually has non-trivial internal state, but we omit it here.\nstruct UserHandler {\n    users: HashMap&lt;i32, User&gt;,  // Maps user id to User objects.\n    counter: i32  // Represents internal state\n}\n\nimpl UserHandler {\n    fn handle_data(&amp;mut self, user_id: i32, data: &amp;str) {\n        if let Some(user) = self.users.get_mut(&amp;user_id) {\n            user.send(\"Message received!\");\n            self.counter += 1;\n        }\n    }\n}\n\nfn main() {\n    // Initialize UserHandler:\n    let mut users = HashMap::new();\n    users.insert(1, User{});\n    let mut handler = UserHandler{users, counter: 0};\n\n    // Pretend we got message from network:\n    let user_id = 1;\n    let user_message = \"Hello, world!\";\n    handler.handle_data(user_id, &amp;user_message);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b59dc2d6639ddf66c1ac2fe42eef3c54\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>This works OK. I would like to make a separate method in <code>UserHandler</code> that handles user input when we have already established that user with given id exists. So it becomes:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl UserHandler {\n    fn handle_data(&amp;mut self, user_id: i32, data: &amp;str) {\n        if let Some(user) = self.users.get_mut(&amp;user_id) {\n            self.handle_user_data(user, data);\n        }\n    }\n\n    fn handle_user_data(&amp;mut self, user: &amp;mut User, data: &amp;str) {\n        user.send(\"Message received!\");\n        self.counter += 1;\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e540791979a7130cd0af7b93ca063c5f\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>All of a sudden, it doesn't compile!</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/main.rs:24:13\n   |\n23 |         if let Some(user) = self.users.get_mut(&amp;user_id) {\n   |                             ---------- first mutable borrow occurs here\n24 |             self.handle_user_data(user, data);\n   |             ^^^^                  ---- first borrow later used here\n   |             |\n   |             second mutable borrow occurs here\n</code></pre>\n\n<p>At first glance, the error is pretty obvious: you can not have a mutable reference to <code>self</code> and to an attribute of <code>self</code> - it is like having two mutable references to <code>self</code>. But then, what the heck, I <strong>do</strong> have two mutable references like this in the original code!</p>\n\n<ol>\n<li>Why does this simple refactoring trigger borrow checker error?</li>\n<li>How do I work around it and decompose <code>UserHandler::handle_data</code> method like this?</li>\n</ol>\n\n<p>If you wonder why I want such refactoring, consider a case when there are multiple types of messages that user could send, all need to be handled differently, but there is a common part: having to know which <code>User</code> object sent this message.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1563003621, "post_id": 57017066, "comment_id": 100565492, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51621642/how-to-specify-an-environment-variable-using-the-rustc-env-flag\">How to specify an environment variable using the rustc-env flag?</a>"}, {"owner": {"reputation": 198, "user_id": 11778940, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09b5ff610cd3dfea7a50a0951d1649e5?s=128&d=identicon&r=PG&f=1", "display_name": "mandeep", "link": "https://stackoverflow.com/users/11778940/mandeep"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 5, "creation_date": 1563004458, "post_id": 57017066, "comment_id": 100565628, "body": "It is correct English.  It&#39;s not a duplicate. I&#39;m trying to set a compile time environment variable. The link speaks of a runtime environment variable."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1563005256, "post_id": 57017066, "comment_id": 100565762, "body": "I&#39;m not sure it&#39;s possible, see <a href=\"https://github.com/rust-lang/cargo/issues/4121\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/4121</a>."}, {"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 1, "creation_date": 1563035732, "post_id": 57017066, "comment_id": 100572346, "body": "What is the dependency in question? How does it use the environment variable?"}, {"owner": {"reputation": 1626, "user_id": 2495789, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fad162588013dd74ab2ce20126301cd6?s=128&d=identicon&r=PG", "display_name": "sagie", "link": "https://stackoverflow.com/users/2495789/sagie"}, "edited": false, "score": 0, "creation_date": 1563039631, "post_id": 57017066, "comment_id": 100573215, "body": "try to look at task runners like <a href=\"https://github.com/sagiegurari/cargo-make\" rel=\"nofollow noreferrer\">github.com/sagiegurari/cargo-make</a> which enable you to define the env as part of your flow. so when you compile that env will be set first."}, {"owner": {"reputation": 198, "user_id": 11778940, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09b5ff610cd3dfea7a50a0951d1649e5?s=128&d=identicon&r=PG&f=1", "display_name": "mandeep", "link": "https://stackoverflow.com/users/11778940/mandeep"}, "edited": false, "score": 0, "creation_date": 1563134444, "post_id": 57017066, "comment_id": 100590341, "body": "The crate is oidn-rs and it seems to need OIDN_DIR and LD_LIBRARY_PATH set. I&#39;ve reached out on the issue tracker to see if this is something that can be resolved at the crate level.  I saw cargo-make, but would prefer not to have to use another crate just for this task.  So far it looks like issue 4121 on the Cargo issue tracker is what needs to be implemented."}, {"owner": {"reputation": 1158, "user_id": 4956078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44600007f35ab98b7badbf1110df0687?s=128&d=identicon&r=PG&f=1", "display_name": "JMAA", "link": "https://stackoverflow.com/users/4956078/jmaa"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1570789447, "post_id": 57017066, "comment_id": 103033988, "body": "@Stargateur it is correct English (source: a lifetime of being English). &quot;but&quot; here not meaning &quot;except&quot;, but rather acting as a conjunction for the rest of the following clause."}], "answers": [{"comments": [{"owner": {"reputation": 3711, "user_id": 203476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/838b591b09fc19aae77b84c63ddbe633?s=128&d=identicon&r=PG", "display_name": "Rasmus Kaj", "link": "https://stackoverflow.com/users/203476/rasmus-kaj"}, "edited": false, "score": 0, "creation_date": 1606476526, "post_id": 63887783, "comment_id": 114978720, "body": "This &quot;works&quot;, but does not do what&#39;s requested.  The question is about a setting a variable <i>while building a dependency</i> and the build.rs of a projects can only set a compile-time variable for the project itself."}], "tags": [], "owner": {"reputation": 31, "user_id": 7585780, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/--v9pShphuII/AAAAAAAAAAI/AAAAAAAAAFk/FEZZuvAhU6c/photo.jpg?sz=128", "display_name": "Jacques", "link": "https://stackoverflow.com/users/7585780/jacques"}, "is_accepted": false, "score": -2, "last_activity_date": 1600098813, "creation_date": 1600098813, "answer_id": 63887783, "question_id": 57017066, "link": "https://stackoverflow.com/questions/57017066/how-do-i-set-environment-variables-with-cargo/63887783#63887783", "title": "How do I set environment variables with Cargo?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>// build.rs\nfn main() {\n    println!(&quot;cargo:rustc-env=FOO=bar&quot;);\n}\n</code></pre>\n<p>And:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>// src/main.rs\nfn main() {\n    println!(&quot;{}&quot;, env!(&quot;FOO&quot;));\n}\n</code></pre>\n<p>Works as expected and prints bar. Are you using the compile time macro <code>env!</code> and not the run time api <code>std::env</code> ?</p>\n"}, {"tags": [], "owner": {"reputation": 3711, "user_id": 203476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/838b591b09fc19aae77b84c63ddbe633?s=128&d=identicon&r=PG", "display_name": "Rasmus Kaj", "link": "https://stackoverflow.com/users/203476/rasmus-kaj"}, "is_accepted": false, "score": -2, "last_activity_date": 1606476988, "creation_date": 1606476988, "answer_id": 65036700, "question_id": 57017066, "link": "https://stackoverflow.com/questions/57017066/how-do-i-set-environment-variables-with-cargo/65036700#65036700", "title": "How do I set environment variables with Cargo?", "body": "<p>Many crates that needs to find and use an installed native library uses <a href=\"https://crates.io/crates/pkg-config\" rel=\"nofollow noreferrer\">pkg-config</a> to get that information at build-time.  Maybe you could suggest that to this dependency?</p>\n"}, {"comments": [{"owner": {"reputation": 45996, "user_id": 164171, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/dec2e1cd575b184c3695fe6d18a24638?s=128&d=identicon&r=PG", "display_name": "static_rtti", "link": "https://stackoverflow.com/users/164171/static-rtti"}, "edited": false, "score": 0, "creation_date": 1615068120, "post_id": 66509742, "comment_id": 117578979, "body": "Awesome! Anything that can be used in the meantime?"}, {"owner": {"reputation": 452, "user_id": 5000800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/36a28ae6a418d08229171f856698e281?s=128&d=identicon&r=PG&f=1", "display_name": "P&#226;ris Douady", "link": "https://stackoverflow.com/users/5000800/p%c3%a2ris-douady"}, "reply_to_user": {"reputation": 45996, "user_id": 164171, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/dec2e1cd575b184c3695fe6d18a24638?s=128&d=identicon&r=PG", "display_name": "static_rtti", "link": "https://stackoverflow.com/users/164171/static-rtti"}, "edited": false, "score": 1, "creation_date": 1615133150, "post_id": 66509742, "comment_id": 117591441, "body": "I don&#39;t think so, the issue on cargo&#39;s repo asking for this feature was closed by the PR implementing this and I haven&#39;t seen any alternative. I guess you could use a bash script in the meantime."}, {"owner": {"reputation": 45996, "user_id": 164171, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/dec2e1cd575b184c3695fe6d18a24638?s=128&d=identicon&r=PG", "display_name": "static_rtti", "link": "https://stackoverflow.com/users/164171/static-rtti"}, "edited": false, "score": 0, "creation_date": 1615144744, "post_id": 66509742, "comment_id": 117594965, "body": "Could you just link to the github issue for completeness? Thanks!"}, {"owner": {"reputation": 452, "user_id": 5000800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/36a28ae6a418d08229171f856698e281?s=128&d=identicon&r=PG&f=1", "display_name": "P&#226;ris Douady", "link": "https://stackoverflow.com/users/5000800/p%c3%a2ris-douady"}, "reply_to_user": {"reputation": 45996, "user_id": 164171, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/dec2e1cd575b184c3695fe6d18a24638?s=128&d=identicon&r=PG", "display_name": "static_rtti", "link": "https://stackoverflow.com/users/164171/static-rtti"}, "edited": false, "score": 1, "creation_date": 1615194473, "post_id": 66509742, "comment_id": 117606094, "body": "Added a link at the end"}], "tags": [], "owner": {"reputation": 452, "user_id": 5000800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/36a28ae6a418d08229171f856698e281?s=128&d=identicon&r=PG&f=1", "display_name": "P&#226;ris Douady", "link": "https://stackoverflow.com/users/5000800/p%c3%a2ris-douady"}, "is_accepted": false, "score": 8, "last_activity_date": 1615194449, "last_edit_date": 1615194449, "creation_date": 1615058427, "answer_id": 66509742, "question_id": 57017066, "link": "https://stackoverflow.com/questions/57017066/how-do-i-set-environment-variables-with-cargo/66509742#66509742", "title": "How do I set environment variables with Cargo?", "body": "<p>Using Cargo 1.52 (coming out May 6th 2021) or nightly, you can use the <code>[env]</code> section in <a href=\"https://doc.rust-lang.org/cargo/reference/config.html\" rel=\"nofollow noreferrer\"><code>config.toml</code></a> (not the same file as <code>Cargo.toml</code>! But it can still be set per project.):</p>\n<pre><code>[env]\nFOO = &quot;bar&quot;\nPATH_TO_SOME_TOOL = { value = &quot;bin/tool&quot;, relative = true }\nUSERNAME = { value = &quot;test_user&quot;, force = true }\n</code></pre>\n<p>Environment variables set in this section will be applied to the environment of any processes executed by cargo.</p>\n<p><code>relative</code> means the variable represents a path relative to the location of the directory that contains the <code>.cargo/</code> directory that contains the <code>config.toml</code> file.</p>\n<p><code>force</code> means the variable can override an existing environment variable.</p>\n<p><em>For more information about the history of this feature, see the <a href=\"https://github.com/rust-lang/cargo/issues/4121\" rel=\"nofollow noreferrer\">related github issue</a>.</em></p>\n"}], "owner": {"reputation": 198, "user_id": 11778940, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09b5ff610cd3dfea7a50a0951d1649e5?s=128&d=identicon&r=PG&f=1", "display_name": "mandeep", "link": "https://stackoverflow.com/users/11778940/mandeep"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6443, "favorite_count": 2, "answer_count": 3, "score": 19, "last_activity_date": 1615194449, "creation_date": 1563002831, "last_edit_date": 1600101397, "question_id": 57017066, "link": "https://stackoverflow.com/questions/57017066/how-do-i-set-environment-variables-with-cargo", "title": "How do I set environment variables with Cargo?", "body": "<p>I have a dependency listed in Cargo.toml that needs a specific environment variable set. I can run <code>export FOO=bar</code> in bash and all works well, but for the life of me I can't figure out how to export this environment variable at compile time with Cargo. I've tried setting the environment variable in <code>build.rs</code> via <code>std::env</code>, <code>Command</code>, and <code>println!</code>, all to no effect:</p>\n<pre><code>// build.rs\nfn main() {\n    Command::new(&quot;ls&quot;)\n        .env(&quot;FOO&quot;, &quot;bar&quot;)\n        .spawn()\n        .expect(&quot;ls command failed to start&quot;);\n}\n</code></pre>\n<pre><code>// build.rs\nfn main() {\n    std::env::set_var(&quot;FOO&quot;, &quot;bar&quot;);\n}\n</code></pre>\n<pre><code>// build.rs\nfn main() {\n    println!(&quot;cargo:rustc-env=FOO=bar&quot;);\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1562994172, "post_id": 57016027, "comment_id": 100564031, "body": "Note that this code could compile in the future."}], "answers": [{"tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": true, "score": 4, "last_activity_date": 1562995216, "last_edit_date": 1562995216, "creation_date": 1562991639, "answer_id": 57016105, "question_id": 57016027, "link": "https://stackoverflow.com/questions/57016027/rust-does-not-recognize-a-slice/57016105#57016105", "title": "Rust does not recognize a slice", "body": "<p><code>&amp;buf</code> is a <code>&amp;[u8; 128]</code> that gets implicitly coerced (by <a href=\"https://doc.rust-lang.org/nomicon/coercions.html\" rel=\"nofollow noreferrer\">unsizing</a>) to <code>&amp;[u8]</code> a lot of the time. If you\u2019re explicit about wanting the slice, <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=5aaf81522bf8edb5590d37a1194aec5f\" rel=\"nofollow noreferrer\">it\u2019ll work</a>:</p>\n\n<pre><code>println!(\"{:?}\", &amp;a as &amp;[u8]);\n</code></pre>\n\n<p>but also just ask for a slice in the first place:</p>\n\n<pre><code>println!(\"{:?}\", &amp;a[..]);\n</code></pre>\n"}], "owner": {"reputation": 317, "user_id": 8072803, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e8b236ca5200f4946bef2b03a218a55?s=128&d=identicon&r=PG&f=1", "display_name": "riley lyman", "link": "https://stackoverflow.com/users/8072803/riley-lyman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "closed_date": 1563113619, "accepted_answer_id": 57016105, "answer_count": 1, "score": 0, "last_activity_date": 1562995216, "creation_date": 1562990615, "question_id": 57016027, "link": "https://stackoverflow.com/questions/57016027/rust-does-not-recognize-a-slice", "closed_reason": "Duplicate", "title": "Rust does not recognize a slice", "body": "<p>I have a <code>[u8; 128]</code> that I would like to print. To do so, I am passing in a borrow of that buffer to <code>println!</code> using debug formatting. However, I am receiving a compiler error.</p>\n\n<p>The compiler says that <code>[u8;128]</code> does not implement <code>std::fmt::Debug</code>. However, I am passing in a borrow to <code>println!</code>, which leads me to question why Rust does not recognize this is a slice. I was able to fix the problem by attaching <code>[#derive(Debug)]</code> to a struct with one member, <code>buf: &amp;[u8]</code>. Passing my buffer in through this struct to <code>println!</code> solves the problem, which tells me that <code>&amp;[u8]</code> does indeed implement <code>std::fmt::Debug</code>. </p>\n\n<pre><code>use std::io::prelude::*;\nuse std::net::TcpStream;\n\n#[derive(Debug)]\nstruct Fah&lt;'a&gt; {\n    buf: &amp;'a[u8],\n}\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let mut stream = TcpStream::connect(\"216.58.194.206:80\")?;\n\n    stream.write(&amp;[1])?;\n    let mut buf = [0; 128];\n    stream.read(&amp;mut buf)?;\n    println!(\"buf: {:?}\", &amp;buf); // This line does not compile\n    println!(\"fah: {:?}\", Fah { buf: &amp;buf}); // This line works fine\n    Ok(())\n}\n\n\n</code></pre>\n\n<p>Playground link: <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b95ad4762f23ca35e890d0cbd2c072ce\" rel=\"nofollow noreferrer\">https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b95ad4762f23ca35e890d0cbd2c072ce</a></p>\n\n<p>I expect this to compile just fine. However, the compiler complains that <code>the trait std::fmt::Debug is not implemented for [u8; 128]</code>, as I said before.</p>\n"}, {"tags": ["rust", "kuchiki"], "answers": [{"tags": [], "owner": {"reputation": 3961, "user_id": 203487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e0d750a49edb4b16e8ec83816ea356e?s=128&d=identicon&r=PG", "display_name": "Szabolcs Berecz", "link": "https://stackoverflow.com/users/203487/szabolcs-berecz"}, "is_accepted": true, "score": 2, "last_activity_date": 1562972443, "creation_date": 1562972443, "answer_id": 57014857, "question_id": 57013825, "link": "https://stackoverflow.com/questions/57013825/expected-slice-found-u8-error-when-parsing-bytes-with-kuchiki/57014857#57014857", "title": "&#39;expected slice, found u8&#39; error when parsing bytes with Kuchiki", "body": "<p>Use <code>read_from()</code> instead of <code>from_iter()</code>, like this:</p>\n\n<pre><code>use kuchiki::parse_html;\nuse kuchiki::traits::*;\n\nfn main() {\n    let data = r#\"&lt;!DOCTYPE html&gt;\n                  &lt;html&gt;\n                      &lt;body&gt;\n                          test\n                      &lt;/body&gt;\n                  &lt;/html&gt;\"#;\n    let dom = parse_html()\n        .from_utf8()\n        .read_from(&amp;mut data.as_bytes());\n}\n</code></pre>\n\n<p>You got the compile error because <code>from_iter()</code> needs an iterator with item type <code>Tendril</code>. A Tendril is a kind of string, so the type of <code>data</code> would need to be something like <code>Vec&lt;&amp;[u8]&gt;</code>, but you have <code>&amp;[u8]</code>.</p>\n\n<p>You can also make it work using <code>from_iter()</code>, but it's a bit less clear/efficient:</p>\n\n<pre><code>use kuchiki::parse_html;\nuse kuchiki::traits::*;\n\nfn main() {\n    let data = r#\"&lt;!DOCTYPE html&gt;\n                  &lt;html&gt;\n                      &lt;body&gt;\n                          test\n                      &lt;/body&gt;\n                  &lt;/html&gt;\"#;\n    let dom = parse_html()\n        .from_utf8()\n        .from_iter(vec![data.as_bytes()]);\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 11777641, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97239bac3345523e253fb7f7e7d1c909?s=128&d=identicon&r=PG&f=1", "display_name": "ocliwt", "link": "https://stackoverflow.com/users/11777641/ocliwt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 414, "favorite_count": 0, "accepted_answer_id": 57014857, "answer_count": 1, "score": 2, "last_activity_date": 1593042191, "creation_date": 1562964233, "last_edit_date": 1593042191, "question_id": 57013825, "link": "https://stackoverflow.com/questions/57013825/expected-slice-found-u8-error-when-parsing-bytes-with-kuchiki", "title": "&#39;expected slice, found u8&#39; error when parsing bytes with Kuchiki", "body": "<p>I'm running into a type error when trying to do the following:</p>\n<pre><code>use kuchiki::parse_html;\nuse kuchiki::traits::*;\n\nfn main() {\n    let data = r#&quot;&lt;!DOCTYPE html&gt;\n                  &lt;html&gt;\n                      &lt;body&gt;\n                          test\n                      &lt;/body&gt;\n                  &lt;/html&gt;&quot;#;\n    let dom = parse_html()\n        .from_utf8()\n        .from_iter(data.as_bytes());\n}\n</code></pre>\n<p>The error is:</p>\n<pre><code>error[E0271]: type mismatch resolving `&lt;tendril::fmt::Bytes as tendril::fmt::SliceFormat&gt;::Slice == u8`\n  --&gt; src/main.rs:13:10\n   |\n13 |         .from_iter(data.as_bytes());\n   |          ^^^^^^^^^ expected slice, found u8\n   |\n   = note: expected type `[u8]`\n              found type `u8`\n   = note: required because of the requirements on the impl of `std::convert::Into&lt;tendril::tendril::Tendril&lt;tendril::fmt::Bytes&gt;&gt;` for `&amp;u8`\n</code></pre>\n<p><code>data.as_bytes()</code> returns a reference to a slice of bytes (<code>&amp;[u8]</code>), so I'm confused as to where the <code>found u8</code> is coming from.  How do I rectify this error?</p>\n<p>The docs for the method in question <a href=\"https://docs.rs/kuchiki/0.7.3/kuchiki/traits/trait.TendrilSink.html#method.from_iter\" rel=\"nofollow noreferrer\">are here</a>.</p>\n"}, {"tags": ["windows", "io", "rust", "hard-drive"], "comments": [{"owner": {"reputation": 49065, "user_id": 13422, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/94b309d78a1253a334e9b82643a8dc97?s=128&d=identicon&r=PG", "display_name": "Zan Lynx", "link": "https://stackoverflow.com/users/13422/zan-lynx"}, "edited": false, "score": 0, "creation_date": 1562959154, "post_id": 57012729, "comment_id": 100558097, "body": "May be something useful in here: <a href=\"https://superuser.com/questions/136021/how-to-change-i-o-priority-of-a-process-or-thread-in-win7\" title=\"how to change i o priority of a process or thread in win7\">superuser.com/questions/136021/&hellip;</a>"}, {"owner": {"reputation": 11, "user_id": 11777196, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EU09s.png?s=128&g=1", "display_name": "sandouli", "link": "https://stackoverflow.com/users/11777196/sandouli"}, "reply_to_user": {"reputation": 49065, "user_id": 13422, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/94b309d78a1253a334e9b82643a8dc97?s=128&d=identicon&r=PG", "display_name": "Zan Lynx", "link": "https://stackoverflow.com/users/13422/zan-lynx"}, "edited": false, "score": 0, "creation_date": 1562976452, "post_id": 57012729, "comment_id": 100562106, "body": "Quite interesting, if I understood correctly it&#39;s pretty much like a configuration that&#39;s set by calling an API with the correct parameters (here is a rust link for those that wonder : <a href=\"https://docs.rs/ntapi/0.3.1/x86_64-pc-windows-msvc/ntapi/ntpsapi/type.NtSetInformationProcess.html\" rel=\"nofollow noreferrer\">docs.rs/ntapi/0.3.1/x86_64-pc-windows-msvc/ntapi/ntpsapi/&hellip;</a>). Prioritizing my I/O calls to the HDD seems feasible that way but I still can&#39;t understand how to pick a specific speed at which I can read/write from the disk without bothering too much the other processes that are running at the same time."}], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 11777196, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EU09s.png?s=128&g=1", "display_name": "sandouli", "link": "https://stackoverflow.com/users/11777196/sandouli"}, "is_accepted": true, "score": 0, "last_activity_date": 1563139937, "creation_date": 1563139937, "answer_id": 57031305, "question_id": 57012729, "link": "https://stackoverflow.com/questions/57012729/how-to-limit-hard-drive-disk-i-o-when-reading-writing-a-file-on-disk/57031305#57031305", "title": "How to limit Hard Drive Disk I/O when reading/writing a file on disk?", "body": "<p>After reading a bit more on the subject, apart from trying to read/write a lot of data and calculate from its performance, it seems like you can't find out HDD max I/O rate during the execution of the program and can only guess a constant at which HDD I/O rate can't go higher. (see <a href=\"https://superuser.com/questions/795483/how-to-limit-hdd-write-speed-for-chosen-programs/795488#795488\">https://superuser.com/questions/795483/how-to-limit-hdd-write-speed-for-chosen-programs/795488#795488</a>)</p>\n\n<p>But, you can still monitor disk activity, and with the number guessed earlier, you can use <code>wait()</code> more accurately than always limiting yourself at a constant speed. (here is a crate for Rust : <a href=\"https://github.com/myfreeweb/systemstat\" rel=\"nofollow noreferrer\">https://github.com/myfreeweb/systemstat</a>).</p>\n\n<p>Prioritizing the process with the OS might be overkill since I'm trying to slip between other processes and share whatever resources are available at that time.</p>\n"}], "owner": {"reputation": 11, "user_id": 11777196, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EU09s.png?s=128&g=1", "display_name": "sandouli", "link": "https://stackoverflow.com/users/11777196/sandouli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1290, "favorite_count": 1, "accepted_answer_id": 57031305, "answer_count": 1, "score": 1, "last_activity_date": 1563139937, "creation_date": 1562958243, "last_edit_date": 1562977569, "question_id": 57012729, "link": "https://stackoverflow.com/questions/57012729/how-to-limit-hard-drive-disk-i-o-when-reading-writing-a-file-on-disk", "title": "How to limit Hard Drive Disk I/O when reading/writing a file on disk?", "body": "<p>I have a few Rust programs that read data from a file, do some operations, and write data on another file. \nSimple enough, but I've been having a big issue in that my programs saturate the HDD max I/O  and can only be executed when no other process is in use.</p>\n\n<p>To be more precise, I'm currently using BufReader and BufWriter with a buffer size of 64 KB which is fantastic in and of itself to read/write a file as quickly as possible. But reading at 250MB/s and writing at the same time at 250MB/s has a tendency to overflow what the HDD can manage. Suffice to say that I'm all for speed and whatnot, but I realized that those Rust programs are asking for too much resources from the HDD and seems to be stalled by the Operating System (Windows) to let other processes work in peace. The files I'm reading/writing are generally a few Gigabytes</p>\n\n<p>Now I know I could just add some form of wait() between each read/write operation on the disk but, I don't know how to find out at which speed I'm currently reading/writing and am looking for a more optimal solution. Plus even after reading the docs, I still can't find an option on BufReader/BufWriter that could limit HDD I/O operations to some arbitrary value (let's say 100MB/s for example).</p>\n\n<p>I looked through the sysinfo crate but it does not seem to help in finding out current and maximum I/O for the HDD.</p>\n\n<p>Am I out of luck and should I delve deeper in systems programming to find a solution ? Or is there already something that might teach how to prioritize my calls to the HDD or to simply limit my calls to some arbitrary value calculated from the currently available I/O rate of the HDD ?</p>\n"}, {"tags": ["rust", "compiler-optimization"], "comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1562999252, "post_id": 57011967, "comment_id": 100564811, "body": "Note that optimizations done by the compiler is highly undefined. They might even change upon structure complexity, size, compilation backend, etc. Wasting time studying these subject-to-change behaviour might not give you any guarantee when scenarios change, and is usually only useful after you have profiled the program and confirmed it to be the major source of performance issues. For example, if the compiler decides to inline your code (which depends on a bunch of factors), it might optimize more (or less) than not inlining."}], "answers": [{"comments": [{"owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "edited": false, "score": 0, "creation_date": 1562956683, "post_id": 57012331, "comment_id": 100557287, "body": "So does moving ownership necessarily mean either (1) the <code>self</code> struct is never copied in memory, or (2) the <code>self</code> struct is always copied in memory?"}, {"owner": {"reputation": 3374, "user_id": 1063250, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/50ce9a9e3c79bf98919e99a96de7b05c?s=128&d=identicon&r=PG", "display_name": "Abhijit-K", "link": "https://stackoverflow.com/users/1063250/abhijit-k"}, "reply_to_user": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "edited": false, "score": 0, "creation_date": 1562957108, "post_id": 57012331, "comment_id": 100557431, "body": "If Copy trait is implemented, by copy semantics, it will be a copy and you can continue using original copied var. Although compiler might do optimization considering the operation thereafter; the visible affect to the user should be of copy in this case."}, {"owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "edited": false, "score": 0, "creation_date": 1562957300, "post_id": 57012331, "comment_id": 100557509, "body": "Thank you for explaining the part about the <code>Copy</code> trait. But I&#39;m unclear if when an ownership movement takes place whether <code>self</code> is necessarily duplicated in (stack) memory or whether <code>self</code> necessarily stays in the same location in (stack) memory or whether there is necessarily no guarantee. That&#39;s what my OP is about"}, {"owner": {"reputation": 3374, "user_id": 1063250, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/50ce9a9e3c79bf98919e99a96de7b05c?s=128&d=identicon&r=PG", "display_name": "Abhijit-K", "link": "https://stackoverflow.com/users/1063250/abhijit-k"}, "reply_to_user": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "edited": false, "score": 0, "creation_date": 1562957810, "post_id": 57012331, "comment_id": 100557695, "body": "With move semantics there is no reason for it to copy it should stay there. The reason existing var is not usable is that, one resource should not be pointed by two pointers (or vars). I think the specs will not talk about that specific detail because compiler keeps optimizing such things over the period."}, {"owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "edited": false, "score": 0, "creation_date": 1562958671, "post_id": 57012331, "comment_id": 100557945, "body": "<code>With move semantics there is no reason for it to copy it should stay there</code> &lt;- this is my intuition as well, but I don&#39;t see anything that <i>necessarily</i> makes this the case. For example, the compiler would be quite free to <code>memcopy</code> stuff on the stack during an ownership move without anyone being the wiser--it&#39;s just a struct, and during an ownership move you know that one piece of code is no longer going to reference it and the next piece of code that will begin to reference it hasn&#39;t begun executing yet, so what&#39;s to keep the compiler from rearranging things and inserting <code>memmove</code> calls"}, {"owner": {"reputation": 3374, "user_id": 1063250, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/50ce9a9e3c79bf98919e99a96de7b05c?s=128&d=identicon&r=PG", "display_name": "Abhijit-K", "link": "https://stackoverflow.com/users/1063250/abhijit-k"}, "reply_to_user": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "edited": false, "score": 0, "creation_date": 1562958698, "post_id": 57012331, "comment_id": 100557955, "body": "I have added a snippet above for move semantics. If the struct instance first owned by <code>cons</code> in line 1 is now owned by <code>cons2</code> in line 2 there is no copy made. If a copy had been created there is no reason to prevent access of struct instance via <code>cons</code> in line 3. Because it will not be safe for both cons and cons2 to point to same memory location rust compiler restricts cons. In rust this is at compiler level. In C++ move semantics are not at compile time and you need to implement move constructor and assignment operator to move the resources."}], "tags": [], "owner": {"reputation": 3374, "user_id": 1063250, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/50ce9a9e3c79bf98919e99a96de7b05c?s=128&d=identicon&r=PG", "display_name": "Abhijit-K", "link": "https://stackoverflow.com/users/1063250/abhijit-k"}, "is_accepted": false, "score": 0, "last_activity_date": 1562958231, "last_edit_date": 1562958231, "creation_date": 1562956064, "answer_id": 57012331, "question_id": 57011967, "link": "https://stackoverflow.com/questions/57011967/does-moving-ownership-copy-the-self-struct-when-calling-a-function/57012331#57012331", "title": "Does moving ownership copy the `self` struct when calling a function?", "body": "<p>The ownership of cons in #a type Cons will be transferred in push(). Again the ownership will be transferred to <code>Cons&lt;Cons,i32&gt;(Cons&lt;T,U&gt;)</code> type which is shadowed variable cons in #b. </p>\n\n<p>If struct Cons implement Copy, Clone traits it will be copy. Otherwise no copy and you cannot use the original vars after they are moved (or owned) by someone else.</p>\n\n<p>Move semantics:</p>\n\n<pre><code>let cons = Cons(1, 2); //Cons(1,2) as resource in memory being pointed by cons\nlet cons2 = cons; // Cons(1,2)  now pointed by cons2. Problem! as cons also point it. Lets prevent access from cons\nprintln!(\"{:?}\", cons); //error because cons is moved\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "edited": false, "score": 0, "creation_date": 1563284462, "post_id": 57013256, "comment_id": 100642846, "body": "I wonder if it would be possible for them to optimize away this difference in the future. Assuming the <code>Cons</code> struct is laid out in memory like C, the <code>cons</code> argument in both of your functions ends up in the beginning of the return value and the other argument ends up at the end (same with my example in OP). So it seems possible for the compiler to recognize that it can just allocate one <code>Cons&lt;Cons&lt;Cons&lt;i32, i32&gt;, i32&gt;, i32&gt;</code> on the stack and use that memory for both of your function calls."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "edited": false, "score": 1, "creation_date": 1563307843, "post_id": 57013256, "comment_id": 100654589, "body": "@MattThomas You have a point there. The compiler has not much optimization potential in my two functions because it does not know where and how they will be called. If you do something like <code>cons.push(x).push(y).push(...</code> it only adds one instruction per push. The compiler is pretty smart already (for example, <code>Cons(1, 2)</code> compiles to a bitcast of an integer constant). If all relevant functions are inlined I think the compiler will know where to put the result without unnecessary moves. No guarantees, of course :)"}], "tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 2, "last_activity_date": 1563309133, "last_edit_date": 1563309133, "creation_date": 1562960861, "answer_id": 57013256, "question_id": 57011967, "link": "https://stackoverflow.com/questions/57011967/does-moving-ownership-copy-the-self-struct-when-calling-a-function/57013256#57013256", "title": "Does moving ownership copy the `self` struct when calling a function?", "body": "<p>In general, trust in the compiler! Rust + LLVM is a very powerful combination that often produces surprisingly efficient code. And it will improve even more in time.</p>\n\n<blockquote>\n  <p>In other words, does a call to Cons.push(self, ...) always create a copy of self as ownership is being moved? Or does the self struct always stay in place on the stack?</p>\n</blockquote>\n\n<p><code>self</code> cannot stay in place because the new value returned by the <code>push</code> method has type <code>Cons&lt;Self, V&gt;</code>, which is essentially a tuple of <code>Self</code> and <code>V</code>. Although <a href=\"https://doc.rust-lang.org/reference/type-layout.html#tuple-layout\" rel=\"nofollow noreferrer\">tuples don't have any memory layout guarantees</a>, I strongly believe they can't have their elements scattered arbitrarily in memory. Thus, <code>self</code> and <code>value</code> must both be moved into the new structure.</p>\n\n<p>Above paragraph assumed that <code>self</code> was placed firmly on the stack before calling <code>push</code>. The compiler actually has enough information to know it should reserve enough space for the final structure. Especially with function inlining this becomes a very likely optimization.</p>\n\n<blockquote>\n  <p>The implication in my example above is whether or not the push(...) function grows more expensive to call each time we add a line like #b at the rate of O(n^2) (if self is copied each time) or at the rate of O(n) (if self stays in place).</p>\n</blockquote>\n\n<p>Consider two functions (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=76d81b8c0fa7b92f95884b032d8b559e\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>pub fn push_int(cons: Cons&lt;i32, i32&gt;, x: i32) -&gt; Cons&lt;Cons&lt;i32, i32&gt;, i32&gt; {\n    cons.push(x)\n}\n\npub fn push_int_again(\n    cons: Cons&lt;Cons&lt;i32, i32&gt;, i32&gt;,\n    x: i32,\n) -&gt; Cons&lt;Cons&lt;Cons&lt;i32, i32&gt;, i32&gt;, i32&gt; {\n    cons.push(x)\n}\n</code></pre>\n\n<p><code>push_int</code> adds a third element to a <code>Cons</code> and <code>push_int_again</code> adds a fourth element.</p>\n\n<p><code>push_int</code> compiles to the following assembly in Release mode:</p>\n\n<pre><code>movq    %rdi, %rax\nmovl    %esi, (%rdi)\nmovl    %edx, 4(%rdi)\nmovl    %ecx, 8(%rdi)\nretq\n</code></pre>\n\n<p>And <code>push_int_again</code> compiles to:</p>\n\n<pre><code>movq    %rdi, %rax\nmovl    8(%rsi), %ecx\nmovl    %ecx, 8(%rdi)\nmovq    (%rsi), %rcx\nmovq    %rcx, (%rdi)\nmovl    %edx, 12(%rdi)\nretq\n</code></pre>\n\n<p>You don't need to understand assembly to see that pushing the fourth element requires more instructions than pushing the third element.</p>\n\n<p>Note that this observation was made for these functions in isolation. Calls like <code>cons.push(x).push(y).push(...)</code> are inlined and the assembly grows linearly with one instruction per push.</p>\n"}], "owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 57013256, "answer_count": 2, "score": 1, "last_activity_date": 1563309133, "creation_date": 1562954334, "question_id": 57011967, "link": "https://stackoverflow.com/questions/57011967/does-moving-ownership-copy-the-self-struct-when-calling-a-function", "title": "Does moving ownership copy the `self` struct when calling a function?", "body": "<p>In my example below does <code>cons.push(...)</code> ever copy the <code>self</code> parameter?</p>\n\n<p>Or is <code>rustc</code> intelligent enough to realize that the values coming from lines <code>#a</code> and <code>#b</code> can always use the same stack space and no copying needs to occur (except for the obvious <code>i32</code> copies)?</p>\n\n<p>In other words, does a call to <code>Cons.push(self, ...)</code> always create a copy of <code>self</code> as ownership is being moved? Or does the <code>self</code> struct always stay in place on the stack?</p>\n\n<p>References to documentation would be appreciated.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Cons&lt;T, U&gt;(T, U);\n\nimpl&lt;T, U&gt; Cons&lt;T, U&gt; {\n    fn push&lt;V&gt;(self, value: V) -&gt; Cons&lt;Self, V&gt; {\n        Cons(self, value)\n    }\n}\n\nfn main() {\n    let cons = Cons(1, 2); // #a\n    let cons = cons.push(3); // #b\n    println!(\"{:?}\", cons); // #c\n}\n\n</code></pre>\n\n<p>The implication in my example above is whether or not the <code>push(...)</code> function grows more expensive to call each time we add a line like <code>#b</code> at the rate of <code>O(n^2)</code> (if <code>self</code> is copied each time) or at the rate of <code>O(n)</code> (if <code>self</code> stays in place).</p>\n\n<p>I tried implementing the <code>Drop</code> trait and noticed that both <code>#a</code> and <code>#b</code> were dropped <em>after</em> <code>#c</code>. To me this seems to indicate that <code>self</code> stays in place in this example, but I'm not 100%.</p>\n"}, {"tags": ["mysql", "rust", "rust-cargo", "rust-diesel"], "answers": [{"tags": [], "owner": {"reputation": 53, "user_id": 9312850, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f5c67eba6d033b71f1059010b073613?s=128&d=identicon&r=PG&f=1", "display_name": "Stiv", "link": "https://stackoverflow.com/users/9312850/stiv"}, "is_accepted": false, "score": 1, "last_activity_date": 1571586423, "creation_date": 1571586423, "answer_id": 58474648, "question_id": 57011888, "link": "https://stackoverflow.com/questions/57011888/cant-load-result-from-mysql-database-using-diesel-crate/58474648#58474648", "title": "Can&#39;t load result from mysql database using diesel crate", "body": "<p>It looks like you need the Queryable trait for your Charts struct.</p>\n\n<p>You can add it using a derive attribute like so:</p>\n\n<pre><code>#[derive(Queryable)]\npub struct Chart {\n    pub id: i32,\n    pub types: i32,\n    pub prices: Decimal,\n    pub time: String,\n    pub date: String,\n}\n</code></pre>\n\n<p>The important part of your error message is the second line:</p>\n\n<pre><code>the trait `diesel::Queryable&lt;...(details of your struct)...&gt; is not implemented for `chart_models::Chart`\n</code></pre>\n"}], "owner": {"reputation": 135, "user_id": 11622790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9007481d8f7d3987a28419638ed749f2?s=128&d=identicon&r=PG&f=1", "display_name": "Cliff Anger", "link": "https://stackoverflow.com/users/11622790/cliff-anger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 282, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1571586423, "creation_date": 1562954009, "question_id": 57011888, "link": "https://stackoverflow.com/questions/57011888/cant-load-result-from-mysql-database-using-diesel-crate", "title": "Can&#39;t load result from mysql database using diesel crate", "body": "<p>Load return errors using diesel crate in order to interact with MySQL database:</p>\n\n<pre><code>the trait bound `chart_models::Chart: diesel::Queryable&lt;(diesel::sql_types::Integer, diesel::sql_types::Integer, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Integer, diesel::sql_types::Nullable&lt;diesel::sql_types::Text&gt;, diesel::sql_types::Text), _&gt;` is not satisfied\n\nthe trait `diesel::Queryable&lt;(diesel::sql_types::Integer, diesel::sql_types::Integer, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Integer, diesel::sql_types::Nullable&lt;diesel::sql_types::Text&gt;, diesel::sql_types::Text), _&gt;` is not implemented for `chart_models::Chart`\n\nnote: required because of the requirements on the impl of `diesel::query_dsl::LoadQuery&lt;_, chart_models::Chart&gt;` for `diesel::query_builder::SelectStatement&lt;schema::chart::table, diesel::query_builder::select_clause::DefaultSelectClause, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::WhereClause&lt;diesel::expression::operators::Eq&lt;schema::chart::columns::id, diesel::expression::bound::Bound&lt;diesel::sql_types::Integer, i32&gt;&gt;&gt;&gt;`rustc(E0277)\nchart_models.rs(33, 14): the trait `diesel::Queryable&lt;(diesel::sql_types::Integer, diesel::sql_types::Integer, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Numeric, diesel::sql_types::Integer, diesel::sql_types::Nullable&lt;diesel::sql_types::Text&gt;, diesel::sql_types::Text), _&gt;` is not implemented for `chart_models::Chart`\n</code></pre>\n\n<p>The table schema:</p>\n\n<pre><code>table! {\n    chart (id) {\n        id -&gt; Integer,\n        types -&gt; Integer,\n        prices -&gt; Decimal,\n        time -&gt; Nullable&lt;Varchar&gt;,\n        date -&gt; Varchar,\n    }\n}\n</code></pre>\n\n<p>chart_models.rs file:</p>\n\n<pre><code>use diesel;\nuse diesel::prelude::*;\nuse diesel::mysql::MysqlConnection;\n\nuse schema::chart;\nuse schema::chart::dsl::chart as all_chart;\nuse rust_decimal::Decimal;\n\npub struct Chart {\n    pub id: i32,\n    pub types: i32,\n    pub prices: Decimal,\n    pub time: String,\n    pub date: String,\n}\n\nimpl Chart {\n    pub fn show(id: i32, conn: &amp;MysqlConnection) -&gt; Vec&lt;Chart&gt; {\n        all_chart\n            .find(id)\n            .load::&lt;Chart&gt;(conn)\n            .expect(\"Error loading chart infos\")\n    }\n\n}\n</code></pre>\n\n<p>Can someone help to detect the problem please ?</p>\n"}, {"tags": ["json", "rust", "serde-json"], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 9110411, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rZsck.png?s=128&g=1", "display_name": "Tomdrc1", "link": "https://stackoverflow.com/users/9110411/tomdrc1"}, "edited": false, "score": 0, "creation_date": 1562964984, "post_id": 57012957, "comment_id": 100559917, "body": "Thanks! I&#39;ll just have to fix the client, I&#39;m just worried in case someone will mess with the JS or something along those lines. I will stop using unwrap."}], "tags": [], "owner": {"reputation": 116, "user_id": 320290, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0639b3d5f57b29dd93d32ac6fde5bbd7?s=128&d=identicon&r=PG", "display_name": "joonas", "link": "https://stackoverflow.com/users/320290/joonas"}, "is_accepted": false, "score": 1, "last_activity_date": 1562959306, "creation_date": 1562959306, "answer_id": 57012957, "question_id": 57009424, "link": "https://stackoverflow.com/questions/57009424/json-escape-quotes-on-value-before-deserializing/57012957#57012957", "title": "JSON escape quotes on value before deserializing", "body": "<p>If I understand your question right, the issue is that you are receiving strings which should be JSON but are in fact malformed (perhaps generated by concatenating strings).</p>\n\n<p>If you are unable to fix the source of those non-JSON strings the only solution I can think of involves a lot of heavy lifting with caveat:</p>\n\n<ol>\n<li>Writing a custom \"malformed-JSON\" parser</li>\n<li>Careful inspection/testing/analysis of how the broken client is broken</li>\n<li>Using the brokenness information to fix the \"malformed-JSON\"</li>\n<li>Using the fixed JSON to do normal request processing</li>\n</ol>\n\n<p>I would recommend not to do that except for maybe a training excercise. Fixing the client will be done in minutes but implementing this perfectly on the server will take days or weeks. The next time this one problematic client has been changed you'll have to redo all the hard work.</p>\n\n<p>The real answer:</p>\n\n<ul>\n<li>Return \"400 Bad Request\" with some additional \"malformed json\" hint</li>\n<li>Fix the client if you have access to it</li>\n</ul>\n\n<p>Additional notes:</p>\n\n<ul>\n<li>Avoid <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap\" rel=\"nofollow noreferrer\">unwrapping</a> in a server</li>\n<li>Look for ways to propagate the <code>Result::Err</code> to caller and use it to trigger a \"400 Bad Request\" response</li>\n<li>Check out <a href=\"https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html\" rel=\"nofollow noreferrer\">error handling chapter</a> in the Rust book for more</li>\n</ul>\n"}], "owner": {"reputation": 55, "user_id": 9110411, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rZsck.png?s=128&g=1", "display_name": "Tomdrc1", "link": "https://stackoverflow.com/users/9110411/tomdrc1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1035, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1563039526, "creation_date": 1562943091, "last_edit_date": 1563039526, "question_id": 57009424, "link": "https://stackoverflow.com/questions/57009424/json-escape-quotes-on-value-before-deserializing", "title": "JSON escape quotes on value before deserializing", "body": "<p>I have a server written in Rust, this server gets a request in JSON, the JSON the server is getting is a string and sometimes users write quotes inside the value. For example when making a new forum thread.</p>\n\n<p>The only thing I really need to do is to escape the quotes inside the value.</p>\n\n<p>So this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\"{\"name\":\"\"test\"\", \"username\":\"tomdrc1\", \"date_created\":\"07/12/2019\", \"category\":\"Developer\", \"content\":\"awdawdasdwd\"}\"\n</code></pre>\n\n<p>Needs to be turned into this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\"{\"name\":\"\\\"test\\\"\", \"username\":\"tomdrc1\", \"date_created\":\"07/12/2019\", \"category\":\"Developer\", \"content\":\"awdawdasdwd\"}\"\n</code></pre>\n\n<p>I tried to replace:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let data = let data = \"{\"name\":\"\"test\"\", \"username\":\"tomdrc1\", \"date_created\":\"07/12/2019\", \"category\":\"Developer\", \"content\":\"awdawdasdwd\"}\".to_string().replace(\"\\\"\", \"\\\\\\\"\");\nlet res: serde_json::Value = serde_json::from_str(&amp;data).unwrap();\n</code></pre>\n\n<p>But it results in the following error:\nthread '' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: Error(\"key must be a string\", line: 1, column: 2)</p>\n\n<p>I suspect because it transforms the string to the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let data = \"{\\\"name\\\":\\\"\\\"test\\\"\\\", \\\"username\\\":\\\"tomdrc1\\\", \\\"date_created\\\":\\\"07/12/2019\\\", \\\"category\\\":\\\"Developer\\\", \\\"content\\\":\\\"awdawdasdwd\\\"}\"\n</code></pre>\n"}, {"tags": ["rust", "nickel"], "comments": [{"owner": {"reputation": 21, "user_id": 11776072, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96e632d97a6838541f6fe16b4ee8aea2?s=128&d=identicon&r=PG&f=1", "display_name": "Dragury", "link": "https://stackoverflow.com/users/11776072/dragury"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562944322, "post_id": 57009292, "comment_id": 100552208, "body": "it looks like <a href=\"https://stackoverflow.com/questions/27791532/how-do-i-create-a-global-mutable-singleton\">this</a> is more like what I think I&#39;m looking for, but I found it through your link, so thanks for your response!"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562944360, "post_id": 57009292, "comment_id": 100552231, "body": "TL;DR: use an <code>AtomicU64</code> and increment with <a href=\"https://doc.rust-lang.org/std/sync/atomic/struct.AtomicU64.html#method.fetch_add\" rel=\"nofollow noreferrer\"><code>fetch_add(1, ...)</code></a>"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562944482, "post_id": 57009764, "comment_id": 100552296, "body": "Please, don&#39;t answer if this is a duplicate. You must rather mark your question as a duplicate of this one"}], "tags": [], "owner": {"reputation": 21, "user_id": 11776072, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96e632d97a6838541f6fe16b4ee8aea2?s=128&d=identicon&r=PG&f=1", "display_name": "Dragury", "link": "https://stackoverflow.com/users/11776072/dragury"}, "is_accepted": false, "score": 1, "last_activity_date": 1562944449, "creation_date": 1562944449, "answer_id": 57009764, "question_id": 57009292, "link": "https://stackoverflow.com/questions/57009292/how-to-implement-application-state-with-rust/57009764#57009764", "title": "How to implement application state with Rust?", "body": "<p>It looks like <a href=\"https://stackoverflow.com/a/27826181/11776072\">this</a> is what I'm looking for as a safe way of accessing some kind of application state.</p>\n"}], "owner": {"reputation": 21, "user_id": 11776072, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96e632d97a6838541f6fe16b4ee8aea2?s=128&d=identicon&r=PG&f=1", "display_name": "Dragury", "link": "https://stackoverflow.com/users/11776072/dragury"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 375, "favorite_count": 0, "closed_date": 1562944623, "answer_count": 1, "score": 1, "last_activity_date": 1562944449, "creation_date": 1562942587, "last_edit_date": 1562942871, "question_id": 57009292, "link": "https://stackoverflow.com/questions/57009292/how-to-implement-application-state-with-rust", "closed_reason": "Duplicate", "title": "How to implement application state with Rust?", "body": "<p>I'm exploring using nickel-rs for a web app, and as such I'm currently writing some basic programs that replicate behaviour that I've been able to implement with python and flask. For this specific case I wanted to track the number of requests that have come in for a specific route. In python this is easy with a global variable, and I assume the Global Interpreter Lock provides some guarantee that the variable will only be accessed by one thing at a time(not that this is a huge issue for this specific scenario). In Rust however, to do the same thing I've had to use <code>unsafe</code> whenever I access my counter, which seems to suggest that there could be a safe way of implementing application state?</p>\n\n<p>I've tried using <code>Nickel::with_data(config)</code> where config is a struct with a single u64 in it, and by using the server_data() method of the Request implementation I can get the value of my counter, but any changes I manage to write to the struct by borrowing the server_data() struct result as mutable, but the new value didn't persist between method calls.</p>\n\n<p>I tried to adapt to what is happening <a href=\"http://%20https://github.com/nickel-org/nickel.rs/blob/master/examples/no_macro_custom_data.rs\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>So far the only method that I've managed to get working is the code included with this post. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate nickel;\n\nuse nickel::{Nickel, HttpRouter};\n\nstatic mut REQUEST_COUNT: u64 = 0;\n\nfn main() {\n    let mut nickel_app = Nickel::new();\n    nickel_app.get(\"/\", middleware! {\n        unsafe {\n            println!(\"REQUEST_COUNT: {} -&gt; {}\", REQUEST_COUNT, REQUEST_COUNT + 1u64);\n            REQUEST_COUNT += 1u64;\n        }\n        \"index\"\n    });\n    nickel_app.get(\"/req\", middleware! {\n        unsafe {\n            format!(\"REQUEST_COUNT is {}\", REQUEST_COUNT)\n        }\n    });\n\n    match nickel_app.listen(\"127.0.0.1:8080\") {\n        Ok(_) =&gt; {}\n        Err(_) =&gt; {\n            panic!(\"Couldn't bind to 127.0.0.1:8080\")\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562942353, "post_id": 57009121, "comment_id": 100551088, "body": "But if I do <code>let x = AtomicPtr::new(ptr);*(x.load(Ordering::Relaxed))</code> then it seems that atomic access is to the pointer itself, not to the <code>i64</code> content? Dereferencing the content is not atomic."}, {"owner": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562942529, "post_id": 57009121, "comment_id": 100551197, "body": "I mean the second dereferencing using <code>*</code> from <code>*mut i64</code> that I get from <code>load</code> is not atomic. The use case is that pointer remains stable, but I do <code>compare_and_swap</code> on the <code>i64</code> value."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562942582, "post_id": 57009121, "comment_id": 100551228, "body": "@V.B. I may be wrong, but I think that you will not have any issue dereferencing the pointer because it is not shared. Note that it is not clone. In unsafe code, it&#39;s up to you to not break this rule."}, {"owner": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562942683, "post_id": 57009121, "comment_id": 100551298, "body": "I&#39;m in unsafe land and doing lock-free sync via shared memory from different processes, not even threads. So there is concurrent access to the <code>i64</code> content of the pointer."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562942757, "post_id": 57009121, "comment_id": 100551340, "body": "@V.B. That&#39;s another question. I&#39;m not even sure that this is feasible in Rust..."}, {"owner": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562942897, "post_id": 57009121, "comment_id": 100551426, "body": "It should be possible from unsafe Rust, but maybe not implemented. CAS over shared memory is pretty common though since some OSes do not even have cross-process named mutexes."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562942922, "post_id": 57009121, "comment_id": 100551441, "body": "I would use an <code>*mut AtomicI64</code> inside an <code>AtomicPtr</code>, but that wouldn&#39;t be lock free, and I don&#39;t even know if it is safe"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562942951, "post_id": 57009121, "comment_id": 100551452, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/196376/discussion-between-french-boiethios-and-v-b\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 0, "last_activity_date": 1562943484, "last_edit_date": 1562943484, "creation_date": 1562942014, "answer_id": 57009121, "question_id": 57009043, "link": "https://stackoverflow.com/questions/57009043/how-to-create-atomic-from-unsafe-memory-in-rust/57009121#57009121", "title": "How to create atomic from unsafe memory in Rust", "body": "<p><a href=\"https://doc.rust-lang.org/std/sync/atomic/struct.AtomicPtr.html\" rel=\"nofollow noreferrer\"><code>AtomicPtr</code></a> will do the job. You can only construct it from a mutable pointer because it must own the data pointed to.</p>\n\n<p>If you have a shared/sharable raw pointer (a const one), it cannot be atomic by design. If you want to share a pointer, it must be an <code>AtomicPtr</code> behind an <code>Arc</code>.</p>\n\n<p>Just as a reminder, mutable reference/pointer equals unique, and const reference/pointer equals shared. If you break this rule, your program is undefined behavior.</p>\n"}, {"comments": [{"owner": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562965238, "post_id": 57013795, "comment_id": 100559992, "body": "Thanks! You answered 30 min after my Update 2 edit (so I assume you&#39;ve seen it) where I did basically the same thing with the same reasoning about layout, but even without transmute and using <code>as *const i64 as *const AtomicI64</code>. So you confirm that this is not UB? Or transmute with lifetime is better/correct vs <code>as</code> cast?"}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "reply_to_user": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 1, "creation_date": 1562965608, "post_id": 57013795, "comment_id": 100560100, "body": "@V.B. I didn&#39;t see your update before after I answered, but yes, seems like you came to the same conclusion. Yes, as far as I can tell it shouldn&#39;t be: <code>AtomicI64</code> always has the same memory representation as <code>i64</code>, as do pointers and references (<a href=\"https://doc.rust-lang.org/reference/type-layout.html\" rel=\"nofollow noreferrer\">source</a>). As long as the data is only accessed atomically, I don&#39;t see any reason why it should be undefined behavior."}, {"owner": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1562965670, "post_id": 57013795, "comment_id": 100560116, "body": "Thanks! Is there a way to attach lifetime to <code>as</code> pointer cast?"}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "reply_to_user": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 1, "creation_date": 1562965796, "post_id": 57013795, "comment_id": 100560159, "body": "@V.B. You can&#39;t do it with the <code>as</code> cast, but you can do it when dereferencing: <code>let x: &amp;&#39;a AtomicI64 = &amp;*x;</code>"}, {"owner": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "edited": false, "score": 0, "creation_date": 1563004410, "post_id": 57013795, "comment_id": 100565622, "body": "I missed some deleted comment by @trentcl. Why pointer cast via <code>as</code> is preferred over transmute?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1563038070, "post_id": 57013795, "comment_id": 100572870, "body": "Regarding <code>make_atomic_pointer</code>, you might as well remove <code>&#39;a</code> and have the function return a <code>&#39;static</code> pointer. Since the lifetime is unconstrained anyway..."}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1563044543, "post_id": 57013795, "comment_id": 100574415, "body": "@MatthieuM. Using <code>&#39;static</code> in cases like this should be done with care, as you risk having the returned reference outlive the data and not being able to catch it compile-time, as you otherwise would have. And setting a lifetime like this when casting from a pointer seems to be to be convention, e.g. with <a href=\"https://doc.rust-lang.org/std/slice/fn.from_raw_parts.html\" rel=\"nofollow noreferrer\"><code>std::slice::from_raw_parts</code></a> doing the same."}], "tags": [], "owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "is_accepted": true, "score": 3, "last_activity_date": 1562975305, "last_edit_date": 1562975305, "creation_date": 1562964051, "answer_id": 57013795, "question_id": 57009043, "link": "https://stackoverflow.com/questions/57009043/how-to-create-atomic-from-unsafe-memory-in-rust/57013795#57013795", "title": "How to create atomic from unsafe memory in Rust", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/sync/atomic/struct.AtomicI64.html\" rel=\"nofollow noreferrer\">documentation for <code>AtomicI64</code></a> says this:</p>\n\n<blockquote>\n  <p>This type has the same in-memory representation as the underlying integer type, i64.</p>\n</blockquote>\n\n<p>However, you're trying to transmute a <em>pointer</em> to an <code>i64</code> to an <code>AtomicI64</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>unsafe {\n  let a = std::mem::transmute::&lt;*mut i64, AtomicI64&gt;(ptr);\n  //               is a pointer ^^^^^^^^\n  //                                      ^^^^^^^^^ is not a pointer\n}\n</code></pre>\n\n<p>Instead, you'd need to transmute <code>*mut i64</code> into a pointer or reference to <code>AtomicI64</code>.</p>\n\n<p>This can be implemented like this (safe and unsafe variants):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// if we have a mut reference, it must have unqiue ownership over the\n// referenced data, so we can safely cast that into an immutable reference\n// to AtomicI64\nfn make_atomic_i64&lt;'a&gt;(src: &amp;'a mut i64) -&gt; &amp;'a AtomicI64 {\n  unsafe {\n    &amp;*(src as *mut i64 as *const AtomicI64)\n  }\n}\n\n// if we have a mut pointer, we have no guarantee of ownership or lifetime, and\n// therefore it's unsafe to cast into an immutable reference to AtomicI64\nunsafe fn make_ptr_atomic_i64&lt;'a&gt;(src: *mut i64) -&gt; &amp;'a AtomicI64 {\n  &amp;*(src as *const AtomicI64)\n}\n</code></pre>\n\n<hr>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6a81e661cd16c3a499c01f03ecd1c901\" rel=\"nofollow noreferrer\">Example</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::atomic::{AtomicI64, Ordering};\n\nfn main() -&gt; () {\n    // declare underlying buffer\n    let mut v = vec![1i64, 2i64];\n\n    {\n        // get atomic safely\n        let atomic = make_atomic_i64(&amp;mut v[0]);\n\n        // try to access atomic\n        println!(\"{}\", atomic.swap(10, Ordering::Relaxed)); // = 1\n    }\n\n    unsafe {\n        // get atomic unsafely\n        let atomic = make_ptr_atomic_i64(&amp;mut v[0] as *mut i64);\n\n        // try to access atomic\n        println!(\"{}\", atomic.swap(100, Ordering::Relaxed)); // = 10\n    }\n\n    // print final state of variable\n    println!(\"{}\", v[0]); // = 100\n}\n</code></pre>\n"}], "owner": {"reputation": 5884, "user_id": 801189, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gW9NS.jpg?s=128&g=1", "display_name": "V.B.", "link": "https://stackoverflow.com/users/801189/v-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 504, "favorite_count": 0, "accepted_answer_id": 57013795, "answer_count": 2, "score": 1, "last_activity_date": 1562975305, "creation_date": 1562941725, "last_edit_date": 1562961530, "question_id": 57009043, "link": "https://stackoverflow.com/questions/57009043/how-to-create-atomic-from-unsafe-memory-in-rust", "title": "How to create atomic from unsafe memory in Rust", "body": "<p>I am learning unsafe Rust and trying to create an atomic backed by a pointer to some unsafe memory (e.g. a buffer from C or memory mapped file).</p>\n\n<p>I tried this:</p>\n\n<pre><code>use std::sync::atomic::{AtomicI64, Ordering};\n\nfn main() -&gt; () {\n    let mut v = vec![1i64, 2i64];\n    let ptr = &amp;mut v[0] as *mut i64;\n    unsafe {\n        let a = std::mem::transmute::&lt;*mut i64, AtomicI64&gt;(ptr);\n        println!(\"{}\", a.load(Ordering::Relaxed));\n    }\n}\n</code></pre>\n\n<p>But it prints the address of the pointer (e.g. <code>2119547391296</code>) instead of <code>1</code>.</p>\n\n<p>What is the correct way to create an atomic located in some external buffer?</p>\n\n<p>I want the same functionality such as e.g. C# <code>Interlocked.CompareExchange(ref *(long*)ptr, ...)</code>, so maybe there are other ways to get lock-free sync primitives in Rust?</p>\n\n<p><strong>Update:</strong></p>\n\n<p>It looks like I need <code>std::intrinsics::{*}</code>, but they are not available in stable Rust.</p>\n\n<p><strong>Update 2:</strong></p>\n\n<p>This compiles and prints <code>1 2 2</code> (i.e. <code>v[0]</code> is updated as expected via <code>AtomicI64</code> created via pointer cast and then dereferencing <code>AtomicI64</code> via <code>&amp; *ptr</code>). But is this correct?</p>\n\n<pre><code>use std::sync::atomic::{AtomicI64, Ordering};\n\nfn main() -&gt; () {\n    let v = vec![1i64, 2i64];\n    let ptr = &amp;v[0] as *const i64 as *const AtomicI64;\n\n    unsafe {\n        let a = &amp; *ptr;\n        println!(\"{}\", a.load(Ordering::SeqCst));\n        a.fetch_add(1i64, Ordering::SeqCst);\n        println!(\"{}\", a.load(Ordering::SeqCst));\n        println!(\"{}\", v[0]);\n    }\n}\n\n</code></pre>\n"}, {"tags": ["parallel-processing", "rust", "iterator", "rayon"], "comments": [{"owner": {"reputation": 2503, "user_id": 7442673, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iTfit.jpg?s=128&g=1", "display_name": "m.raynal", "link": "https://stackoverflow.com/users/7442673/m-raynal"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562938407, "post_id": 57007937, "comment_id": 100548729, "body": "@FrenchBoiethios Thanks for the remark, it&#39;s edited, it looks more &#39;rusthonic&#39; now."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562939505, "post_id": 57007937, "comment_id": 100549356, "body": "I think that it works well: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=53958a37fb57365a9609c210aede3706\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> Rayon is slower, which is an expected result"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1562939722, "post_id": 57007937, "comment_id": 100549479, "body": "I think that the CPU that runs at 100% is the rayon runtime. Since the calculation is faster than a context switch, the other threads have a low charge."}, {"owner": {"reputation": 2503, "user_id": 7442673, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iTfit.jpg?s=128&g=1", "display_name": "m.raynal", "link": "https://stackoverflow.com/users/7442673/m-raynal"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562939804, "post_id": 57007937, "comment_id": 100549531, "body": "Ok .... it would be a good sign, since the objects I work with in my project are much bigger, and the expression <code>|x| x*(x+3)&#47;77+44741</code> is actually a big search function which takes several dozens milliseconds. I&#39;ll try on my project then, thanks for the insight :)"}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1562940653, "last_edit_date": 1562940653, "creation_date": 1562940100, "answer_id": 57008567, "question_id": 57007937, "link": "https://stackoverflow.com/questions/57007937/program-still-runs-on-one-thread-using-par-iter-and-par-extend/57008567#57008567", "title": "Program still runs on one thread using par_iter and par_extend", "body": "<p>Your simulation is not right because your calculation is actually fast, so fast that it is faster by several orders of magnitude than a thread context switch. Your core at 100% is likely the rayon runtime, while the other cores are waiting for it.</p>\n\n<p>If you actually replace your computation by a sleep, the results are as you expect:</p>\n\n<pre><code>use std::collections::HashSet;\nuse rayon::prelude::*; // 1.1.0\nuse std::time::Duration;\n\nfn main() {\n    fn slow(i: &amp;i64) -&gt; i64 {\n        std::thread::sleep(Duration::from_millis(5));\n\n        *i\n    }\n\n    let my_vec: Vec&lt;i64&gt; = (0..100).collect();\n\n    let mut my_set: HashSet&lt;i64&gt; = HashSet::new();\n\n    let st = std::time::Instant::now();\n    my_set.extend(\n        my_vec.iter().map(slow)  // this is supposed to take a while to compute\n    );\n    let dur = st.elapsed();\n    println!(\"Regular: {:?}\", dur);\n\n    let st = std::time::Instant::now();\n    my_set.par_extend(\n        my_vec.par_iter().map(slow) // this is supposed to take a while to compute\n    );\n    let dur = st.elapsed();\n    println!(\"Rayon: {:?}\", dur);\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Regular: 685.670791ms\nRayon: 316.733253ms\n</code></pre>\n\n<p>When you try to optimize your code, you must carefully benchmark it because sometimes, when you parallelize your code, that can make it slower.</p>\n"}], "owner": {"reputation": 2503, "user_id": 7442673, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iTfit.jpg?s=128&g=1", "display_name": "m.raynal", "link": "https://stackoverflow.com/users/7442673/m-raynal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 402, "favorite_count": 0, "accepted_answer_id": 57008567, "answer_count": 1, "score": 2, "last_activity_date": 1562940653, "creation_date": 1562937986, "last_edit_date": 1562940354, "question_id": 57007937, "link": "https://stackoverflow.com/questions/57007937/program-still-runs-on-one-thread-using-par-iter-and-par-extend", "title": "Program still runs on one thread using par_iter and par_extend", "body": "<p>I'm trying to parallelize a portion of my code, and despite it using <code>rayon</code> and the parallel iterators <code>par_iter()</code> and <code>par_extend()</code>, it still looks like it runs on a single thread.  </p>\n\n<p>I simply create a vector of <code>i32</code>, fill it up with a lot of values, and then move these values into a <code>collections::HashSet</code> of integers.</p>\n\n<p>My single threaded code: </p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let my_vec: Vec&lt;i64&gt; = (0..100_000_000).collect();\n\n    let mut my_set: HashSet&lt;i64&gt; = HashSet::new();\n    let st = std::time::Instant::now();\n    my_set.extend(\n        my_vec.iter().map(|x| x*(x+3)/77+44741)  // this is supposed to take a while to compute\n    );\n    let dur = st.elapsed();\n    println!(\"{:?}\", dur);\n\n}\n</code></pre>\n\n<p>Running time is around <code>8.86 s</code> in average.\nHere is the code using parallel iterators:</p>\n\n<pre><code>extern crate rayon;\nuse rayon::prelude::*;\nuse std::collections::HashSet;\n\nfn main() {\n    let my_vec: Vec&lt;i64&gt; = (0..100_000_000).collect();\n\n    let mut my_set: HashSet&lt;i64&gt; = HashSet::new();\n    let st = std::time::Instant::now();\n    my_set.par_extend(\n        my_vec.par_iter().map(|x| x*(x+3)/77+44741) // this is supposed to take a while to compute\n    );\n    let dur = st.elapsed();\n    println!(\"{:?}\", dur);\n}\n</code></pre>\n\n<p>The average running time for the 'parallel' version is almost the same (<code>8.62 s</code>), and the cpu monitor clearly shows that a single cpu is working at 100% while the others just wait.  </p>\n\n<p>Do you know what I did wrong, or did not understand? </p>\n"}, {"tags": ["server", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1562974006, "post_id": 57006537, "comment_id": 100561735, "body": "I unsure the problem come from a limitation of socket but more you OS can&#39;t follow infinite loop of 10000 thread that write all together on the same server on the same OS. Try to not write anything to the server just make connect and put to sleep the client, and see how many connection the server can have open at the same time."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562987259, "post_id": 57006537, "comment_id": 100563274, "body": "Your title asks about what a server can handle, but the body of your question demonstrates a problem with starting clients. What is your actual question?"}, {"owner": {"reputation": 1, "user_id": 9813235, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c1818e233c08a78177d8c5aa5272c49?s=128&d=identicon&r=PG&f=1", "display_name": "nj7", "link": "https://stackoverflow.com/users/9813235/nj7"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562997784, "post_id": 57006537, "comment_id": 100564597, "body": "@Stargateur If I disable data sending to the server and just connect the clients, around 1017 clients are being connected. But if I send data not more than 700 clients are connecting. I have tested a multi-threaded server in my system, it was able to handle 1020 clients along with sending data. Since the event-driven approach is better than multi-threading, the number of clients should go beyond 1020 or at least 1020."}, {"owner": {"reputation": 1, "user_id": 9813235, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c1818e233c08a78177d8c5aa5272c49?s=128&d=identicon&r=PG&f=1", "display_name": "nj7", "link": "https://stackoverflow.com/users/9813235/nj7"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562998256, "post_id": 57006537, "comment_id": 100564666, "body": "@trentcl Actually what I found out the error occurring on the client side &quot;Connection reset by peer&quot; happens when the socket by the connecting party is abruptly closed. So, I am not sure the problem is in my server code or client code. I tested my multi-threaded server with same client code, it was successfully able to handle 1020 clients.  I guess the problem is with my event-driven server but I am not able to figure it out. So, I also wanted to check the maximum limit of clients it can handle. Is it around 700 only or more ?"}], "owner": {"reputation": 1, "user_id": 9813235, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c1818e233c08a78177d8c5aa5272c49?s=128&d=identicon&r=PG&f=1", "display_name": "nj7", "link": "https://stackoverflow.com/users/9813235/nj7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 194, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1562952111, "creation_date": 1562932682, "last_edit_date": 1562952111, "question_id": 57006537, "link": "https://stackoverflow.com/questions/57006537/maximum-no-of-clients-that-rust-event-driven-server-can-handle", "title": "Maximum no of clients that rust event driven server can handle?", "body": "<p>I am working on an event-driven server in Rust and want it able to connect it to maximum no of clients possible.</p>\n\n<p>But only up to 700 clients I am able to connect and send data at the same time. If I try to increase the clients, client connections from client side start breaking. I am using threads to create multiple clients, it starts giving the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread '&lt;unnamed&gt;' panicked at 'called `Result::unwrap()` on an `Err` value:\nOs { code: 104, kind: ConnectionReset, message: \"Connection reset by peer\" }',\nsrc/libcore/result.rs\n</code></pre>\n\n<p>If data sending is disabled it is able to connect 1017 clients and can be increased by allowing a process to open more files than 1024.</p>\n\n<p>I checked the max. no of threads that can be created in my os is 62096. Memory usage of the server program is also around 15KB.</p>\n\n<p>I tried to increase the event loop capacity to 20,480 still it is not supporting 800 clients.</p>\n\n<p>Server.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate mio;\nuse mio::net::{TcpListener, TcpStream};\nuse mio::*;\nuse mio::{Poll, PollOpt, Ready, Token};\nuse std::collections::HashMap;\nuse std::env;\nuse std::io::{Error, Read, Write};\n\nfn process_events(\n    e: Event,\n    listener: &amp;TcpListener,\n    poll: &amp;Poll,\n    clients: &amp;mut HashMap&lt;Token, TcpStream&gt;,\n    mut count: usize,\n) {\n    if e.token() == Token(0) {\n        match listener.accept() {\n            Ok((mut stream, addr)) =&gt; {\n                let new_token = Token(count);\n                println!(\"new token {:?}\", new_token);\n\n                poll.register(\n                    &amp;stream,\n                    new_token,\n                    Ready::readable(),\n                    PollOpt::edge() | PollOpt::oneshot(),\n                )\n                .unwrap();\n\n                println!(\"Got a client: {:?}\", stream.peer_addr().unwrap());\n\n                clients.insert(new_token, stream);\n            }\n            Err(e) =&gt; panic!(\"Error during connection{}\", e),\n        }\n    }\n\n    if e.token() != Token(0) &amp;&amp; e.readiness().is_readable() {\n        let mut buf = [0; 512];\n        let mut t = e.token();\n        let reader = clients.get_mut(&amp;e.token()).unwrap().read(&amp;mut buf);\n\n        match reader {\n            Ok(_) =&gt; {\n                let bytes_no = reader.unwrap();\n                println!(\"No of bytes read : {:?}, {:?}\", bytes_no, e.token());\n            }\n            Err(e) =&gt; {\n                println!(\"could not read: {}\", e);\n            }\n        }\n\n        poll.reregister(\n            &amp;clients[&amp;e.token()],\n            e.token(),\n            Ready::readable(),\n            PollOpt::edge() | PollOpt::oneshot(),\n        )\n        .unwrap();\n    }\n}\n\nfn main() {\n    const server: Token = Token(0);\n    let args: Vec&lt;String&gt; = env::args().collect();\n    if args.len() != 2 {\n        eprintln!(\"Provide the argument\");\n        std::process::exit(1);\n    }\n    let listen = &amp;args[1];\n    let addr = listen.parse().unwrap();\n    let mut listener = TcpListener::bind(&amp;addr).expect(\"Could not bind\");\n\n    println!(\"Server listening on : {}\", addr);\n\n    let mut clients = HashMap::new();\n\n    let mut eve = Events::with_capacity(20480);\n    let poll = Poll::new().unwrap();\n\n    let mut count = 1;\n\n    poll.register(\n        &amp;listener,\n        server,\n        Ready::readable(),\n        PollOpt::edge() | PollOpt::oneshot(),\n    )\n    .unwrap();\n\n    loop {\n        poll.poll(&amp;mut eve, None);\n\n        for e in &amp;eve {\n            process_events(e, &amp;listener, &amp;poll, &amp;mut clients, count);\n            if e.token() == Token(0) {\n                count += 1;\n            }\n        }\n        poll.reregister(\n            &amp;listener,\n            server,\n            Ready::readable(),\n            PollOpt::edge() | PollOpt::oneshot(),\n        )\n        .unwrap();\n    }\n}\n</code></pre>\n\n<p>Client.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io;\nuse std::io::Write;\nuse std::net::TcpStream;\nuse std::thread;\n\nfn handle_client() {\n    let server_addr = String::from(\"localhost:3000\");\n    if let Ok(mut stream) = TcpStream::connect(server_addr) {\n        println!(\"Connected to server {} \", c);\n        let msg = [0u8; 512];\n        loop {\n            stream.write(&amp;msg).unwrap();\n        }\n    } else {\n        println!(\"could not connect\");\n    }\n}\nfn main() {\n    for _i in 0..10000 {\n        thread::spawn(move || handle_client());\n    }\n}\n</code></pre>\n\n<p>As the event-driven approach is better than the multi-threaded server, expected clients should more than 1020.</p>\n"}, {"tags": ["rust", "iterator", "borrowing"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1562924502, "post_id": 57004173, "comment_id": 100541558, "body": "<i>&quot;Rust seems to think that by getting a mutable iterator for <code>self.children</code>, I&#39;m mutating <code>self</code>&quot;</i> Not really, but <code>self.get_last()</code> does borrow <code>self</code> entirely, which is incompatible with holding a mutable iterator to <code>self.children</code>."}, {"owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1563154185, "post_id": 57004173, "comment_id": 100593612, "body": "@E_net4isoutofcommentflags So, if I understand you correctly, Rust is complaining because I&#39;m mutably borrowing <code>self.children</code>and trying to immutably borrow <code>self</code> which involves immutably borrowing <code>self.children</code>. Or is it that by getting a mutable reference to <code>self.children</code>, I&#39;m mutably borrowing <code>self</code>?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1563180130, "post_id": 57004173, "comment_id": 100600463, "body": "Both statements are inaccurate. Any method call with <code>&amp;self</code> as the receiver will borrow <code>self</code> entirely, regardless of how the method was implemented or which parts of the struct are used underneath. However, if you can retrieve a part of the struct&#39;s value without borrowing the full struct, then those other parts are not being borrowed. The way to fix your example depends on what you really want to do. Is the <code>println!(</code> line really important in practice? Also worth reading: <a href=\"https://stackoverflow.com/q/45517170/1233251\">stackoverflow.com/q/45517170/1233251</a>"}, {"owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1563242765, "post_id": 57004173, "comment_id": 100625368, "body": "@E_net4isoutofcommentflags I used the <code>println!</code> call in place of another function call which references several fields on <code>self</code> so I think I&#39;ll just have to split up the loops into a mutable one and an immutable one. If you have any other suggestions for how I might avoid doing that, however, I&#39;d be happy to hear there"}], "owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 193, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1562925103, "creation_date": 1562923811, "last_edit_date": 1562924098, "question_id": 57004173, "link": "https://stackoverflow.com/questions/57004173/how-to-manage-ownership-with-mutable-iterators-in-rust", "title": "How to manage ownership with mutable iterators in Rust", "body": "<p>In Rust I'm trying to do this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Index;\n\n#[derive(Debug)]\nstruct TestChild&lt;'a&gt; {\n    name: &amp;'a str,\n}\n\nimpl&lt;'a&gt; TestChild&lt;'a&gt; {\n    fn new(name: &amp;'a str) -&gt; Self {\n        Self { name }\n    }\n\n    fn add(&amp;mut self) {\n        // Some code here\n    }\n}\n\n#[derive(Debug)]\nstruct Parent&lt;'a&gt; {\n    children: Vec&lt;TestChild&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Parent&lt;'a&gt; {\n    fn new() -&gt; Self {\n        let init = TestChild::new(\"Init child\");\n        Self {\n            children: vec![init],\n        }\n    }\n\n    fn get_last(&amp;self) -&gt; &amp;TestChild&lt;'a&gt; {\n        self.children.index(self.children.len() - 1)\n    }\n\n    fn test(&amp;mut self, name: &amp;str) {\n        for child in self.children.iter_mut() {\n            child.add();\n\n            println!(\"{:?}\", self.get_last());\n        }\n    }\n}\n\nfn main() {\n    let mut p = Parent::new();\n    p.test(\"Foo\");\n    p.test(\"Bar\");\n}\n</code></pre>\n\n<p>However, I'm getting an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:39:30\n   |\n36 |         for child in self.children.iter_mut() {\n   |                      ------------------------\n   |                      |\n   |                      mutable borrow occurs here\n   |                      mutable borrow later used here\n...\n39 |             println!(\"{:?}\", self.get_last());\n   |                              ^^^^ immutable borrow occurs here\n</code></pre>\n\n<p>I find this error confusing because I'm not borrowing <code>self</code> as immutable inside the loop. Rather, I'm borrowing each of the <code>TestChild&lt;'a&gt;</code> in <code>self.children</code> as mutable. But Rust seems to think that by getting a mutable iterator for <code>self.children</code>, I'm mutating <code>self</code>. I suppose I can see the reasoning of this: <code>self.children</code> is a field on <code>self</code> after all. However, the inner immutable borrow is of a <code>TestChild&lt;'a&gt;</code>, and the immutable borrow is on <code>self</code> so this shouldn't cause any issues IMO. I can fix this by transforming it into two loops but that doesn't seem like a very good solution to this problem. So, how should I go about fixing it?</p>\n"}, {"tags": ["c", "assembly", "rust", "simd", "auto-vectorization"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562921514, "post_id": 57003363, "comment_id": 100539878, "body": "I&#39;m pretty sure that this code can be written much more easily"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1562921516, "post_id": 57003363, "comment_id": 100539883, "body": "What is your actual question. You&#39;re comparing different languages (with different compiler btw (gcc vs LLVM/clang)). Please clarify your question, so it can be answered."}, {"owner": {"reputation": 410, "user_id": 2968044, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1e154edcb237830401dc1ea3f3ff1bc3?s=128&d=identicon&r=PG", "display_name": "comphilip", "link": "https://stackoverflow.com/users/2968044/comphilip"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562921856, "post_id": 57003363, "comment_id": 100540062, "body": "@hellow I was rewrite C version linpack benchmark to Rust. The benchmark mainly measure double-precision calculation in big array. Rust version got about 50% performance of C version. I double check compile optimization options. Remove Slice index boundary check  with unsafe code. Performance gap is still big. So I want to know the difference in assembly view."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1562922028, "post_id": 57003363, "comment_id": 100540163, "body": "You cannot expect different compilers to yield the same code. Moreover, that Rust code is extremely dangerous and unidiomatic. Rewriting in Rust should mean to avoid the safety problems of C. <a href=\"https://godbolt.org/z/QDLF4W\" rel=\"nofollow noreferrer\">This version</a> would be a bit better."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1562922155, "post_id": 57003363, "comment_id": 100540252, "body": "This Rust code is much more idiomatic and does the same thing: <a href=\"https://godbolt.org/z/L32qQ8\" rel=\"nofollow noreferrer\">godbolt.org/z/L32qQ8</a>  <code>a</code> doesn&#39;t have to be mutable, BTW"}], "answers": [{"tags": [], "owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "is_accepted": false, "score": 6, "last_activity_date": 1562926019, "last_edit_date": 1562926019, "creation_date": 1562922071, "answer_id": 57003633, "question_id": 57003363, "link": "https://stackoverflow.com/questions/57003363/why-one-add-calcuation-in-c-rust-has-3-double-precision-floating-point-add-instr/57003633#57003633", "title": "Why one add calcuation in C/RUST has 3 double-precision floating-point add instruments in result ASM?", "body": "<p>In your GCC output from C++, the first 2 are from auto-vectorization with <code>addpd</code> (Packed Double) + scalar cleanup with <code>addsd</code> (Scalar Double).  If you wanted to compile it as C, use <code>-xc</code> in the compiler options.</p>\n\n<p>The extra <code>addsd</code> at the bottom is in a separate pure-scalar loop for the case where the input arrays overlap.</p>\n\n<hr>\n\n<p>The two scalar <code>addsd</code> instructions are necessary because you haven't promised the compiler that the input arrays don't overlap (with <code>double *restrict a</code>), and you haven't promised that the size is an even number of <code>double</code>s.</p>\n\n<p>So to auto-vectorize with SIMD, we need to check for overlap.  And we need cleanup in case the length isn't a whole number of SIMD vectors.</p>\n\n<p>This is also why there are so many integer instructions in the function, instead of just 2 simple nested loops.</p>\n\n<p>Your Rust/LLVM output is the same, but with loop-unrolling (which LLVM does by default) for the main SIMD loop.  So the scalar cleanup loop may need to run more than 1 iteration, because 1 SIMD loop iteration does more than just 2 elements.</p>\n\n<hr>\n\n<p>Unfortunately GCC/clang don't optimize your function to sum up <code>a[0..n-1]</code> and then loop over <code>b</code> once, adding the total to each element.  That would be legal with <code>-ffast-math</code> (otherwise not because FP math isn't strictly associative), but unfortunately compilers don't do it anyway.  You'd have to do it yourself in the source.</p>\n\n<p>That's a major missed optimization, going from <code>O(n^2)</code> to <code>O(n)</code> complexity.  But it's one that compilers won't do for you, even with <code>-ffast-math</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 3, "creation_date": 1562922826, "post_id": 57003643, "comment_id": 100540601, "body": "GCC doesn&#39;t do loop unrolling by default at <code>-O3</code>. <code>-funroll-loops</code> is enabled as part of <code>-fprofile-use</code>, or can be enabled manually.  Clang/LLVM does loop unrolling. The normal Rust compiler is based on LLVM which <i>does</i> unroll tiny/small loops by a factor of 4 or 2, or more depending on tune options, so that&#39;s what the OP is seeing with Rust, but it&#39;s <i>not</i> happening in the code you&#39;re talking about. (GCC will still <i>fully</i> unroll some loops when the trip count is a small constant number of iterations.  Especially if constant-propagation across iterations can greatly simplify the loop body)"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1562924924, "post_id": 57003643, "comment_id": 100541781, "body": "A much better suggestion than <code>-O0</code> for simple asm here would be <code>gcc -O2</code>, or <code>-O3 -fno-tree-vectorize</code>.  (Note that clang enables auto-vectorization even at <code>-O2</code>, but gcc doesn&#39;t.)  With clang you can also use <code>-fno-unroll-loops</code>.  <code>-O0</code> is a horrible mess that&#39;s hard to read because it doesn&#39;t keep anything in registers between statements.  Anyway, using <code>-fno-tree-vectorize</code> shows that the extra instructions are coming from vectorization, not other optimizations."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 6, "last_activity_date": 1562923647, "last_edit_date": 1562923647, "creation_date": 1562922107, "answer_id": 57003643, "question_id": 57003363, "link": "https://stackoverflow.com/questions/57003363/why-one-add-calcuation-in-c-rust-has-3-double-precision-floating-point-add-instr/57003643#57003643", "title": "Why one add calcuation in C/RUST has 3 double-precision floating-point add instruments in result ASM?", "body": "<p>Try <a href=\"https://godbolt.org/z/IYXPXz\" rel=\"noreferrer\">compiling without optimizations</a> and you will get only one <code>addsd</code> instruction. The two extra additions in the C code are due to auto-vectorization. In particular if you look at lines 34 and 37 of the disassembly, you will see vector memory accesses. The <code>addpd</code> is the main addition for the vectorized code and the two <code>addsd</code>s are there to handle boundary conditions.</p>\n\n<p>The extra instructions in the Rust code are due to loop unrolling.</p>\n\n<p>As pointed out by @Peter Cordes, gcc doesn't do loop unrolling by default at <code>-O3</code> optimization, whereas LLVM (on which the Rust compiler is based) does. Hence the difference between the C code and the Rust code.</p>\n"}], "owner": {"reputation": 410, "user_id": 2968044, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1e154edcb237830401dc1ea3f3ff1bc3?s=128&d=identicon&r=PG", "display_name": "comphilip", "link": "https://stackoverflow.com/users/2968044/comphilip"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 57003643, "answer_count": 2, "score": -1, "last_activity_date": 1562926070, "creation_date": 1562921198, "last_edit_date": 1562926070, "question_id": 57003363, "link": "https://stackoverflow.com/questions/57003363/why-one-add-calcuation-in-c-rust-has-3-double-precision-floating-point-add-instr", "title": "Why one add calcuation in C/RUST has 3 double-precision floating-point add instruments in result ASM?", "body": "<p>Simple C code, only one double-precision adding.</p>\n\n<pre><code>void test(double *a, double *b, long n) {\n    for (long j = 0; j &lt; n; j++)\n    for (long i = 0; i &lt; n; i++) {\n        b[i] = b[i] + a[j];\n    }\n}\n</code></pre>\n\n<p>Get ASM result in compiler explorer: <a href=\"https://godbolt.org/z/tJ-d39\" rel=\"nofollow noreferrer\">https://godbolt.org/z/tJ-d39</a></p>\n\n<p>There are one <code>addpd</code> and two <code>addsd</code>. Both are double-precision related. </p>\n\n<p>Another similar rust code, got even more double-precision adding instruments: <a href=\"https://godbolt.org/z/c49Wuh\" rel=\"nofollow noreferrer\">https://godbolt.org/z/c49Wuh</a></p>\n\n<pre><code>pub unsafe fn test(a: &amp;mut [f64], b: &amp;mut [f64], n: usize) {\n    for j in 0..n {\n        for i in 0..n {\n            *b.get_unchecked_mut(i) = *b.get_unchecked_mut(i) + *a.get_unchecked_mut(j);\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "owner": {"reputation": 21, "user_id": 11773569, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826556f561fbdeb46c9407839bd1246f?s=128&d=identicon&r=PG&f=1", "display_name": "PressAnyKey", "link": "https://stackoverflow.com/users/11773569/pressanykey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 248, "favorite_count": 0, "closed_date": 1562945517, "answer_count": 0, "score": 2, "last_activity_date": 1562915722, "creation_date": 1562915309, "last_edit_date": 1562915722, "question_id": 57001816, "link": "https://stackoverflow.com/questions/57001816/how-to-use-slice-from-mutable-vec-as-key-in-the-hashmap", "closed_reason": "Duplicate", "title": "How to use slice from mutable Vec as key in the HashMap", "body": "<p>I am trying to implement a simple program that stores a short sequence (<code>let sample: Vec&lt;u32&gt;</code>) in the main vector (<code>let mut samplesTable: Vec&lt;Vec&lt;u32&gt;&gt;</code>)\nand has search index that maps that sequences to their corresponding index in the main vector. </p>\n\n<p>A sequences represent statistic samples for some experiment. I need to be able to find the ID (the index in the <code>samplesTable</code>) of a sample by its content. </p>\n\n<p>Memory requirements will be high so the architecture of program better avoid redundancy.\nSo the search index is just a <code>HashMap&lt;&amp;[u32], u32&gt;</code>, where the first parameter is the full slice of sample from <code>samplesTable</code>, and the second is the corresponding index of that sample.</p>\n\n<p>The multithreaded version will be the next step.</p>\n\n<p>This pattern is very important to me so I must to find a way to implement it in Rust.</p>\n\n<hr>\n\n<p>What I've tried so far:</p>\n\n<ol>\n<li>Wrap all call sites of <code>addSample</code> in \"{}\" to create another scope.</li>\n<li>Switched to nightly and forced <code>#![feature(nll)]</code></li>\n</ol>\n\n<p>I'm using Windows 7 with Rust versions 1.35 and 1.36.</p>\n\n<p>I'm using no external crates, it's a plain \"cargo new --bin\".</p>\n\n<pre><code>use std::collections::HashMap;\n\n// Adds new sample to the table with the given index and updates index map.\n// If there is an old sample, we insert the new sample with the 'id' from the old one.\n// In this case 'id; parameter is should be zero and ignored in the function.\nfn addSample&lt;'a, 'b: 'a&gt;(\n    oldSample: Option&lt;Vec&lt;u32&gt;&gt;,\n    newSample: Vec&lt;u32&gt;,\n    id: u32,\n    samplesTable: &amp;'b mut Vec&lt;Vec&lt;u32&gt;&gt;,\n    indexMap: &amp;'a mut HashMap&lt;&amp;'a [u32], u32&gt;,\n) {\n    // We have the oldSample, then replace it with the new one\n    if let Some(oldSampleTmp) = oldSample {\n        let oldID = indexMap.remove(oldSampleTmp.as_slice());\n\n        if let Some(oldId) = oldID {\n            samplesTable[oldId as usize] = newSample;\n\n            let slice: &amp;[u32] = samplesTable[oldId as usize].as_slice();\n            indexMap.insert(slice, oldId);\n        } else {\n            panic!(\n                \"addSample: oldSampleTmp was not found!\\n  oldSampleTmp={:?}\",\n                oldSampleTmp\n            )\n        };\n    }\n    // We don't have the oldSample, so just insert newSample with provided 'id'\n    else {\n        samplesTable[id as usize] = newSample;\n\n        let slice: &amp;[u32] = samplesTable[id as usize].as_slice();\n        indexMap.insert(slice, id);\n    }\n} // end of the \"addSample\" function\n\nfn main() {\n    // init our tables\n    let mut indexMap: HashMap&lt;&amp;[u32], u32&gt; = HashMap::new();\n\n    let mut samplesTable: Vec&lt;Vec&lt;u32&gt;&gt; = Vec::with_capacity(3);\n\n    // prepare the sample data\n    let sampleA: Vec&lt;u32&gt; = vec![1, 2, 3];\n    let sampleB: Vec&lt;u32&gt; = vec![4, 5, 6];\n    let sampleC: Vec&lt;u32&gt; = vec![7, 8, 9];\n\n    // trying to fill the tables\n    addSample(None, sampleA, 1, &amp;mut samplesTable, &amp;mut indexMap);\n    addSample(None, sampleB, 2, &amp;mut samplesTable, &amp;mut indexMap);\n    addSample(None, sampleC, 3, &amp;mut samplesTable, &amp;mut indexMap);\n\n    // debug print\n    println!(\"indexMap is {:?}\", &amp;indexMap);\n    println!(\"index is {:?}\", indexMap.get(vec![1, 2, 3].as_slice()));\n}\n\n</code></pre>\n\n<p>The problem is that Rust generates this error: </p>\n\n<blockquote>\n  <p>error[E0499]: cannot borrow <code>samplesTable</code> as mutable more than once at a time</p>\n</blockquote>\n\n<p>As far as I understand all modifications are contained in the body of \"addSample\".\nSo after first call there should be no problem with the others in the same scope.</p>\n"}, {"tags": ["linked-list", "rust"], "comments": [{"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 1, "creation_date": 1562904839, "post_id": 56999204, "comment_id": 100533377, "body": "To clarify, you either need to place an upper limit on the size of the list and reserve that much stack space in advance, or use the heap. Those are your only options. If you can&#39;t see why, I recommend reading up on what the stack and heap are, and why they exist."}, {"owner": {"reputation": 73287, "user_id": 3874623, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6df0aa136ee42f4ea24ef08b7c348e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/3874623/mark"}, "edited": false, "score": 1, "creation_date": 1562909204, "post_id": 56999204, "comment_id": 100534464, "body": "You could make the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=89b78d65f8c1fd7d9915c7fec2d6a61e\" rel=\"nofollow noreferrer\">push compile</a>, but lifetimes are not going to work very conveniently. Nodes are holding references in next rather than owning the next node. This allows you to avoid the sizing issue, but you can&#39;t allocate a node inside <code>push</code> with a lifetime long enough to be useful when you add the reference to the next node. To do this, you would need to create the Nodes somewhere they will live long enough \u2014 like in <code>main()</code> and pass references to <code>push()</code>. And that kind of sucks."}, {"owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "reply_to_user": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 0, "creation_date": 1562945689, "post_id": 56999204, "comment_id": 100552931, "body": "@JayDepp <a href=\"https://stackoverflow.com/a/57010042/3063273\">I found a way</a> to let the compiler figure out what size it needs"}], "answers": [{"comments": [{"owner": {"reputation": 814, "user_id": 2430485, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vZThf.png?s=128&g=1", "display_name": "Markus Klein", "link": "https://stackoverflow.com/users/2430485/markus-klein"}, "edited": false, "score": 0, "creation_date": 1563010583, "post_id": 57010042, "comment_id": 100566818, "body": "This has the same drawback as using the heapless crate, as the compiler needs to know the size of the list beforehand to generate the types."}, {"owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "reply_to_user": {"reputation": 814, "user_id": 2430485, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vZThf.png?s=128&g=1", "display_name": "Markus Klein", "link": "https://stackoverflow.com/users/2430485/markus-klein"}, "edited": false, "score": 0, "creation_date": 1563037466, "post_id": 57010042, "comment_id": 100572747, "body": "@MarkusKlein Yeah, the more I think about this the less I like it. It actually has <i>more</i> disadvantages. And it&#39;s really not hard to write (in the case of the <code>heapless</code> crate) <code>Vec&lt;i32, U7&gt;</code> and then just change it to <code>Vec&lt;i32, U8&gt;</code> when you need to add an eighth element"}], "tags": [], "owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "is_accepted": false, "score": 0, "last_activity_date": 1563059730, "last_edit_date": 1563059730, "creation_date": 1562945645, "answer_id": 57010042, "question_id": 56999204, "link": "https://stackoverflow.com/questions/56999204/heapless-linked-list-in-no-std-without-malloc/57010042#57010042", "title": "Heapless linked list in no_std without malloc", "body": "<p>Here's a heapless stack that accomplishes the goals stated in the OP:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fb26b12270bd0a523a693276ec36014f\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fb26b12270bd0a523a693276ec36014f</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct Cons&lt;T, U&gt;(T, U);\n\n#[derive(Debug)]\nstruct MyOption&lt;T&gt;(Option&lt;T&gt;);\n\ntrait Push&lt;T&gt;: Sized {\n    fn push(self, value: T) -&gt; Cons&lt;Self, T&gt;;\n}\n\nimpl&lt;T, U&gt; Push&lt;U&gt; for Cons&lt;T, U&gt; {\n    fn push(self, value: U) -&gt; Cons&lt;Self, U&gt; {\n        Cons(self, value)\n    }\n}\n\nimpl&lt;T&gt; Push&lt;T&gt; for T {\n    fn push(self, value: T) -&gt; Cons&lt;Self, Self&gt; {\n        Cons(self, value)\n    }\n}\n\nimpl&lt;T: Iterator&lt;Item = U&gt;, U&gt; Cons&lt;T, MyOption&lt;U&gt;&gt; {\n    fn next(&amp;mut self) -&gt; Option&lt;U&gt; {\n        match (self.1).0.take() {\n            Some(u) =&gt; Some(u),\n            None =&gt; self.0.next()\n        }\n    }\n}\n\nimpl&lt;T&gt; Iterator for Cons&lt;MyOption&lt;T&gt;, MyOption&lt;T&gt;&gt; {\n    type Item = T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match (self.1).0.take() {\n            Some(t) =&gt; Some(t),\n            None =&gt; (self.0).0.take()\n        }\n    }\n}\n\nimpl&lt;T: Iterator&lt;Item = U&gt;, U&gt; Iterator for Cons&lt;Cons&lt;T, MyOption&lt;U&gt;&gt;, MyOption&lt;U&gt;&gt; {\n    type Item = U;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match (self.1).0.take() {\n            Some(u) =&gt; Some(u),\n            None =&gt; self.0.next()\n        }\n    }\n}\n\nimpl&lt;T&gt; Iterator for MyOption&lt;T&gt; {\n    type Item = T;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.0.take()\n    }\n}\n\nfn create_stack() -&gt; impl Iterator&lt;Item = i32&gt; + core::fmt::Debug {\n          MyOption(Some(0))\n    .push(MyOption(Some(1)))\n    .push(MyOption(Some(2)))\n    .push(MyOption(Some(3)))\n    .push(MyOption(Some(4)))\n}\n\nfn main() {\n    let stack = create_stack();\n    println!(\"Here's the stack:\");\n    println!(\"{:?}\", stack);\n\n    println!(\"Here are the items in reverse order\");\n    for item in stack {\n        println!(\"{}\", item);\n    }\n}\n\n</code></pre>\n\n<p>Output:</p>\n\n<pre>\nHere's the stack:\nCons(Cons(Cons(Cons(MyOption(Some(0)), MyOption(Some(1))), MyOption(Some(2))), MyOption(Some(3))), MyOption(Some(4)))\nHere are the items in reverse order\n4\n3\n2\n1\n0\n</pre>\n\n<h2>Caveats</h2>\n\n<ul>\n<li>You can't do <code>stack = stack.push(...)</code> in a loop (because <code>stack.push(...)</code> returns a different type)</li>\n<li>I didn't think at all about <code>Drop</code> behavior. I guess it would be recursive and blow up for large stacks</li>\n<li>This can create <em>huge</em> structs. Try not to move them around too much</li>\n<li>Is there a way to create an <code>Iterator</code> that doesn't require the <code>Cons</code> structs to hold <code>Option</code> types? And a way that can be iterated more than once? Maybe</li>\n<li>I suspect that every one of those impl functions is duplicated for every element in the resulting stack (since each element is of a different type and all the functions are generic)</li>\n<li>Every call to <code>.push()</code> can potentially copy <code>self</code> (not as in the <code>Copy</code> trait, but as in Rust could do a <code>memcpy</code> behind the scenes as part of the ownership move to keep things tidy on the stack)</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 814, "user_id": 2430485, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vZThf.png?s=128&g=1", "display_name": "Markus Klein", "link": "https://stackoverflow.com/users/2430485/markus-klein"}, "is_accepted": false, "score": 1, "last_activity_date": 1563015359, "creation_date": 1563015359, "answer_id": 57018482, "question_id": 56999204, "link": "https://stackoverflow.com/questions/56999204/heapless-linked-list-in-no-std-without-malloc/57018482#57018482", "title": "Heapless linked list in no_std without malloc", "body": "<p>Allocating things on the stack without knowing their size (or at the very least an upper bound of their size) is squaring the circle and will not work. You can let the compiler figure out the size for you, but that is pretty much it. The reason for this is simple: Stack allocations may not fail and the compiler has to make sure everything fits in.</p>\n\n<p>If you want to go ahead and stick with the <code>push(T)</code> signature, just taking a value Matt Thomas' answer is the way to go.</p>\n\n<p>Here is my take on the issue, which avoids building nested types:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Node&lt;'a, T&gt; {\n    value: T,\n    next: Option&lt;&amp;'a Node&lt;'a, T&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; Node&lt;'a, T&gt; {\n    pub fn new(value: T, next: Option&lt;&amp;'a Self&gt;) -&gt; Self {\n        Node { value, next }\n    }\n\n    pub fn iter(&amp;'a self) -&gt; Iter&lt;'a, T&gt; {\n        Iter {\n            current: Some(self),\n        }\n    }\n}\n\nstruct Iter&lt;'a, T&gt; {\n    current: Option&lt;&amp;'a Node&lt;'a, T&gt;&gt;,\n}\n\nimpl&lt;'a, T&gt; Iterator for Iter&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a T&gt; {\n        match self.current {\n            Some(Node { value, next }) =&gt; {\n                self.current = *next;\n                Some(value)\n            }\n            None =&gt; None,\n        }\n    }\n}\n\nfn main() {\n    // Allocation of the Nodes directly on the stack,\n    // not inside a push method. &lt;= Solves lifetime issues\n    // Reversed order solves mutability issues.\n    let three = Node::new(3, None);\n    let two = Node::new(2, Some(&amp;three));\n    let one = Node::new(1, Some(&amp;two));\n\n    for item in one.iter() {\n        println!(\"{}\", item)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 314, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1563059730, "creation_date": 1562895632, "question_id": 56999204, "link": "https://stackoverflow.com/questions/56999204/heapless-linked-list-in-no-std-without-malloc", "title": "Heapless linked list in no_std without malloc", "body": "<p>What's missing from my attempt at a heapless linked list?</p>\n\n<p>My goal is to get the below code to generate the sequence [1, 2, 3] on the stack and then print those values out on separate lines <em>without using <code>Box</code> or anything else requiring the heap or <code>std</code> or <code>malloc</code></em>.</p>\n\n<p>I've skimmed through <a href=\"https://rust-unofficial.github.io/too-many-lists\" rel=\"nofollow noreferrer\">https://rust-unofficial.github.io/too-many-lists</a> but all the \"good\" lists seem to depend on <code>Rc</code>, <code>Box</code>, etc.</p>\n\n<p>The <a href=\"https://japaric.github.io/heapless/heapless/index.html\" rel=\"nofollow noreferrer\"><code>heapless</code> crate</a> is neat but requires knowing the size of a list beforehand.</p>\n\n<p>My Google-fu isn't strong enough to find much help. Any pointers would be much appreciated. But here's what I'm thinking:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Node&lt;'a, T&gt; {\n    value: T,\n    next: Option&lt;&amp;'a Node&lt;'a, T&gt;&gt;\n}\n\nstruct List&lt;'a, T&gt; {\n    head: Option&lt;&amp;'a Node&lt;'a, T&gt;&gt;,\n    tail: Option&lt;&amp;'a Node&lt;'a, T&gt;&gt;\n}\n\nimpl&lt;'a, T&gt; List&lt;'a, T&gt; {\n    fn new() -&gt; Self {\n        Self {\n            head: None,\n            tail: None\n        }\n    }\n\n    fn push(self, value: T) -&gt;Self {\n        unimplemented!(); // What's missing here?\n    }\n}\n\nstruct Iter&lt;'a, T&gt; {\n    next: Option&lt;&amp;'a Node&lt;'a, T&gt;&gt;\n}\n\nimpl&lt;'a, T&gt; Iterator for Iter&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a T&gt; {\n        match self.next.take() {\n            Some(next) =&gt; {\n                self.next = next.next;\n                Some(&amp;next.value)\n            },\n            None =&gt; None\n        }\n    }\n}\n\nimpl&lt;'a, T&gt; IntoIterator for List&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n    type IntoIter = Iter&lt;'a, T&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        Iter {\n            next: self.head\n        }\n    }\n}\n\nfn main() {\n    let list = List::new();\n    let list = list.push(1);\n    let list = list.push(2);\n    let list = list.push(3);\n    for item in list {\n        println!(\"{}\", item);\n    }\n}\n</code></pre>\n\n<p>As you can see I'm stuck trying to implement <code>List.push</code>.</p>\n"}, {"tags": ["rust", "initialization"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1562924710, "post_id": 56997322, "comment_id": 100541666, "body": "If you use something like <code>MaybeUninit::&lt;[bool; 16]&gt;::uninit()</code> you should be careful to use indexing, since it will create an implicit reference to an uninitialised <code>bool</code>, which is undefined behaviour. But when all items of the array are theselves <code>MaybeUninit</code>, this should not be an issue, so I believe indexing would be safe. Have you tried <a href=\"https://www.ralfj.de/blog/2019/03/26/miri-as-rustup-component.html\" rel=\"nofollow noreferrer\">running a test case in Miri</a>?"}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1562962089, "post_id": 56997322, "comment_id": 100559034, "body": "Yes I have, see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=355167601791d5833271332369d50604\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> \u2013 and this gives me <i>some</i> confidence. But my use case has a generic type and I cannot check for all possible actual types. Also I use <code>MaybeUninit::&lt;[MaybeUninit&lt;T&gt;; N]&gt;::uninit().assume_init(), not </code>MaybeUninit&lt;[T; N]&gt;`."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1562966798, "post_id": 56997322, "comment_id": 100560431, "body": "I know what type you are using. I was trying to <i>contrast</i> your code with the situation of using <code>MaybeUninit::&lt;[bool; 16]&gt;</code>, which wouldn&#39;t allow to use indexing. This similar case may be the reason why the documentation is written in this way."}], "answers": [{"comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 4, "creation_date": 1562911161, "post_id": 56999932, "comment_id": 100535063, "body": "I disagree that MaybeUninit &#39;is not really here to be used inside Rust&#39;. When writing custom data structures, it can be very useful. And you did not actually answer my question: Is this defined behavior?"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 1, "last_activity_date": 1562972766, "last_edit_date": 1562972766, "creation_date": 1562903003, "answer_id": 56999932, "question_id": 56997322, "link": "https://stackoverflow.com/questions/56997322/why-use-ptrwrite-with-arrays-of-maybeuninits/56999932#56999932", "title": "Why use `ptr::write` with arrays of `MaybeUninit`s?", "body": "<p><code>let arr: [MaybeUninit&lt;T&gt;; N] = MaybeUninit::uninit().assume_init();</code> is just a shortcut.</p>\n\n<p><code>arr[i] = MaybeUninit::new(value)</code>, in your example <code>arr[i]</code> is a <code>MaybeUninit</code> so your question is just about what style to use to mutate a vector. You could also do <code>arr[i].write(value)</code> that doesn't really change in practice but it's require nightly that why the doc don't use it. But you are right <code>arr[i] = MaybeUninit::new(value)</code> allow to override the value too without unsafe keyword and <strong>it's a perfectly defined behavior</strong>.</p>\n\n<p>The thing you forget is that <code>MaybeUninit</code> is not really here to be used <strong>only</strong> inside Rust except very few case, Rust don't need it. We mostly use it when we dealing with ffi, so the exemple is not really a real word use case. So it can look strange. Here the author probably want to emulate a real word case where the array would be init outside Rust by using a raw pointer.</p>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 414, "favorite_count": 3, "accepted_answer_id": 56999932, "answer_count": 1, "score": 11, "last_activity_date": 1562972766, "creation_date": 1562879312, "last_edit_date": 1562904573, "question_id": 56997322, "link": "https://stackoverflow.com/questions/56997322/why-use-ptrwrite-with-arrays-of-maybeuninits", "title": "Why use `ptr::write` with arrays of `MaybeUninit`s?", "body": "<p>In the standard library, the <a href=\"https://doc.rust-lang.org/stable/std/mem/union.MaybeUninit.html#initializing-an-array-element-by-element\" rel=\"noreferrer\">documentation</a> shows how to instantiate arrays of\n<code>MaybeUninit</code>s:</p>\n\n<pre><code>let arr: [MaybeUninit&lt;T&gt;; N] =\n    MaybeUninit::uninit().assume_init();\n</code></pre>\n\n<p>We know this is safe because the contract of <code>MaybeUninit</code> allows for uninitialized values. Next we are asked to use <code>ptr::write(value)</code> to initialize each element. But this requires <code>unsafe</code> code once again. We also know that overwriting a <code>MaybeUninit</code> is safe, because it doesn't <code>drop</code> anything. So why not just overwrite it like <code>arr[i] = MaybeUninit::new(value)</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562869675, "post_id": 56995304, "comment_id": 100524785, "body": "<a href=\"https://doc.rust-lang.org/std/?search=regex\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/?search=regex</a>, I like link to the crates you are using, I also like <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>"}, {"owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "edited": false, "score": 1, "creation_date": 1562869799, "post_id": 56995304, "comment_id": 100524829, "body": "I think you can do <code>struct PyMatch&lt;&#39;t&gt; {m: Match&lt;&#39;t&gt; }</code>"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1562869916, "post_id": 56995304, "comment_id": 100524879, "body": "By storing such a <code>Match</code>, you risk running into problems where the thing it matched goes out of scope. The compiler is preventing you from making a potential mistake here."}, {"owner": {"reputation": 389, "user_id": 847598, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e7692a5956513bcf0038801961650c5?s=128&d=identicon&r=PG", "display_name": "Windel", "link": "https://stackoverflow.com/users/847598/windel"}, "edited": false, "score": 0, "creation_date": 1562870169, "post_id": 56995304, "comment_id": 100524986, "body": "I edited the question to reflect this fact about the matched text going out of scope. Its fine to store this too."}], "answers": [{"tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": true, "score": 1, "last_activity_date": 1562876177, "creation_date": 1562876177, "answer_id": 56996698, "question_id": 56995304, "link": "https://stackoverflow.com/questions/56995304/how-can-i-store-a-regexmatch-object-in-a-struct-without-lifetime-parameter/56996698#56996698", "title": "How can I store a `regex::Match` object in a struct without lifetime parameter?", "body": "<p>You can't remove the lifetime of the <code>Match</code> object, because it is defined like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Match&lt;'t&gt; {\n    text: &amp;'t str,\n    start: usize,\n    end: usize,\n}\n</code></pre>\n\n<p>In other words, the <code>Match</code> object contains a reference to the text that was searched.</p>\n\n<p>You didn't provide a lot of context on what exactly you're trying to do, but the straight-forward way to remove the lifetime is to define your <code>PyMatch</code> type like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct PyMatch {\n    text: String,\n    start: usize,\n    end: usize,\n}\n</code></pre>\n\n<p>And then create it by copying either the entire haystack, or by copying only the part of the haystack that matched, which is likely small.</p>\n\n<p>Depending on your context, if the haystack you give to the regex match function is reference counted, then you could instead define your <code>PyMatch</code> type like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct PyMatch {\n    // Generated from the original haystack.\n    text: Rc&lt;String&gt;,\n    start: usize,\n    end: usize,\n}\n</code></pre>\n\n<p>... and then that would avoid any copying in favor of just incrementing the reference count.</p>\n"}], "owner": {"reputation": 389, "user_id": 847598, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e7692a5956513bcf0038801961650c5?s=128&d=identicon&r=PG", "display_name": "Windel", "link": "https://stackoverflow.com/users/847598/windel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 56996698, "answer_count": 1, "score": 0, "last_activity_date": 1562876177, "creation_date": 1562869596, "last_edit_date": 1562870130, "question_id": 56995304, "link": "https://stackoverflow.com/questions/56995304/how-can-i-store-a-regexmatch-object-in-a-struct-without-lifetime-parameter", "title": "How can I store a `regex::Match` object in a struct without lifetime parameter?", "body": "<p>I'm developing on the re module in rustpython using the <code>regex</code> crate. I want to store the <code>Match</code> object in a struct without lifetimes. Is there a way to do this?</p>\n\n<p>So far, I simply copied the <code>start</code> and <code>end</code> values of the match object into seperate fields, but this feels odd and wrong. There should be a way to store the <code>Match</code> object itself. (Corresponding code lives here: <a href=\"https://github.com/RustPython/RustPython/blob/master/vm/src/stdlib/re.rs#L78\" rel=\"nofollow noreferrer\">https://github.com/RustPython/RustPython/blob/master/vm/src/stdlib/re.rs#L78</a>)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct PyMatch {\n    start: usize,\n    end: usize,\n}\n</code></pre>\n\n<p>What I would like to do is this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct PyMatch {\n    text: &amp;'t str,  // the original string\n    m: Match&lt;'t&gt;,   // the match on the string\n}\n</code></pre>\n\n<p>But this requires me to add the lifetime parameter <code>'t</code> to the struct <code>PyMatch</code>, which I do not want, or know how to do. Would the BoxRef crate help me here? Do I need a RefCell?</p>\n"}, {"tags": ["rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 1, "last_activity_date": 1562883375, "last_edit_date": 1562883375, "creation_date": 1562871003, "answer_id": 56995623, "question_id": 56994758, "link": "https://stackoverflow.com/questions/56994758/use-dynamically-typed-object-implementing-tokioioasyncwrite/56995623#56995623", "title": "Use dynamically typed object implementing `tokio::io::AsyncWrite`", "body": "<p><strong>TL;DR</strong> <code>tokio::run</code> <code>expects</code> Future that implements <code>Send</code> and also in <code>'static</code> life time. </p>\n\n<p>If you add required restrictions to your parameter it will work same as <code>Stdout</code> : </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn say_hello(w: Box&lt;dyn tokio::io::AsyncWrite + Send + 'static&gt;) {\n    let fut = tokio::io::write_all(w, \"Hello, world!\").then(|_| Ok(()));\n\n    tokio::run(fut);\n}\n</code></pre>\n\n<p><strong>Note :</strong> \n<code>Stdout</code> works because <a href=\"https://docs.rs/tokio/0.1.22/tokio/io/struct.Stdout.html#implementations\" rel=\"nofollow noreferrer\">Stdout implementations</a>  already contain <code>Send</code>, and it is an owned data for the enclosing scope.</p>\n\n<hr>\n\n<p><strong>But how Rust is able to know the <code>Future</code> that created by <code>write_all</code> is <code>Send</code> or not ?</strong></p>\n\n<p>Calling <code>write_all</code> with an implementation of <code>AsyncWrite</code> is fine, since <a href=\"https://docs.rs/tokio-io/0.1.12/tokio_io/io/fn.write_all.html\" rel=\"nofollow noreferrer\">tokio::io::write_all</a> expects implementation of <code>AsyncWrite</code>. But <a href=\"https://docs.rs/tokio/0.1.22/tokio/runtime/fn.run.html\" rel=\"nofollow noreferrer\">tokio::run</a> expects an <strong>owned</strong> or <code>'static</code> <code>Future</code> which implements <code>Send</code> </p>\n\n<p>You are trying to run the <code>WriteAll</code> future, but please check this <code>Send</code> <a href=\"https://docs.rs/tokio-io/0.1.12/tokio_io/io/struct.WriteAll.html#synthetic-implementations\" rel=\"nofollow noreferrer\">implementation</a> on <code>WriteAll</code>, it only implements <code>Send</code> when <code>T</code> and <code>A</code> implements <code>Send</code>. In your case <code>T</code> is your buf's type which is <code>&amp;'static str</code>, it <a href=\"https://doc.rust-lang.org/std/primitive.str.html#synthetic-implementations\" rel=\"nofollow noreferrer\">implements</a> Send and <code>A</code> is the implementation of <code>AsyncWrite</code>. </p>\n\n<p>In this definition there is no proclamation that states <code>w</code> is a <code>Send</code> (or it has a <code>'static</code>/<strong>owned</strong> lifetime) :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn say_hello(w: Box&lt;dyn tokio::io::AsyncWrite&gt;) \n</code></pre>\n\n<p>that's why tokio run is not accepting <code>WriteAll</code> Future. </p>\n"}], "owner": {"reputation": 9545, "user_id": 242814, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/fabed09b67201710f4cc958b4e668cb1?s=128&d=identicon&r=PG", "display_name": "Brennan Vincent", "link": "https://stackoverflow.com/users/242814/brennan-vincent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1562883375, "creation_date": 1562867098, "last_edit_date": 1562882985, "question_id": 56994758, "link": "https://stackoverflow.com/questions/56994758/use-dynamically-typed-object-implementing-tokioioasyncwrite", "title": "Use dynamically typed object implementing `tokio::io::AsyncWrite`", "body": "<p>I am pretty new to Rust so maybe I'm missing something obvious.</p>\n\n<p>This code works fine:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn say_hello() {\n    let fut = tokio::io::write_all(tokio::io::stdout, \"Hello, world!\").then(|_| {});\n    tokio::run(fut);\n}\n</code></pre>\n\n<p>Whereas the following code fails to compile:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn say_hello(w: Box&lt;dyn tokio::io::AsyncWrite&gt;) {\n    let fut = tokio::io::write_all(w, \"Hello, world!\").then(|_| {});\n    tokio::run(fut);\n}\n</code></pre>\n\n<p>The compiler error is: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `dyn tokio_io::async_write::AsyncWrite` cannot be sent between threads safely\n</code></pre>\n\n<p>Is there any way to accomplish what I want (actually dispatching dynamically, not just making the function generic).</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562858962, "post_id": 56992624, "comment_id": 100519799, "body": "Because <code>ABC::A</code> is a function that constructs the variant <code>A</code> of the enum. Example: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=163ecf26974858df09439cbb1c2e54fa\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562859974, "post_id": 56992624, "comment_id": 100520353, "body": "Thanks. I had difficulty find the right words. I&#39;ll read the question and get back here."}], "owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "closed_date": 1562862511, "answer_count": 0, "score": 1, "last_activity_date": 1562858760, "creation_date": 1562858760, "question_id": 56992624, "link": "https://stackoverflow.com/questions/56992624/what-is-the-type-of-a-rust-union-enum", "closed_reason": "Duplicate", "title": "What is the type of a Rust union Enum?", "body": "<p>I'm trying to understand the Rust Enum type. Specifically the Union Enum.</p>\n\n<p>Let's start with the following code: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d46d65fc688c1cff48a50077c6d7ddf2\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d46d65fc688c1cff48a50077c6d7ddf2</a></p>\n\n<pre><code>fn main() {\n    enum ABC {\n        A(u64),\n        B,\n        C,\n    };\n\n    let ins = ABC::A(5);\n\n    match ins {\n        ABC::A(_) =&gt; println!(\"A\"),\n        ABC::B =&gt; println!(\"B\"),\n        ABC::C =&gt; println!(\"C\"),\n    };\n}\n</code></pre>\n\n<p>This code runs fine. Now let's try to define the type ins as ABC::A but without specifying the union. Logically, it should not work; and it does not.</p>\n\n<pre><code>fn main() {\n    enum ABC {\n        A(u64),\n        B,\n        C,\n    };\n\n    let ins = ABC::A;\n\n    match ins {\n        ABC::A(_) =&gt; println!(\"A\"),\n        ABC::B =&gt; println!(\"B\"),\n        ABC::C =&gt; println!(\"C\"),\n    };\n}\n</code></pre>\n\n<p>However, the error message is a little bit confusing:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:11:9\n   |\n11 |         ABC::A(_) =&gt; println!(\"A\"),\n   |         ^^^^^^^^^ expected fn item, found enum `main::ABC`\n   |\n   = note: expected type `fn(u64) -&gt; main::ABC {main::ABC::A}`\n              found type `main::ABC`\n</code></pre>\n\n<p>It does seem that Rust is not complaining about declaring an enum variable without its union but about something else which I don't understand.</p>\n\n<p>Let's try this code:</p>\n\n<pre><code>fn main() {\n    enum ABC {\n        A(u64),\n        B,\n        C,\n    };\n\n    let ins = ABC::A;\n}\n</code></pre>\n\n<p>This code compiles. Interesting because I didn't expect it to. Logically, Rust should complain that we didn't specify a u64?</p>\n\n<p>Let's try to find out the type of this enum union:</p>\n\n<pre><code>fn main() {\n    enum ABC {\n        A(u64),\n        B,\n        C,\n    };\n\n    let ins = ABC::A;\n\n    let integer: u32 = ins;\n}\n</code></pre>\n\n<p>We get the following error which should reveal the type of <code>ins</code></p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:10:24\n   |\n10 |     let integer: u32 = ins;\n   |                        ^^^ expected u32, found fn item\n   |\n   = note: expected type `u32`\n              found type `fn(u64) -&gt; main::ABC {main::ABC::A}`\n</code></pre>\n\n<p>So is <code>ins</code> some kind of a function? Or am I missing something else?</p>\n"}, {"tags": ["rust", "lifetime", "actix-web"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562851861, "post_id": 56986561, "comment_id": 100515456, "body": "Does it work if you type <code>fn handle_request&lt;&#39;a&gt;(req: &amp;&#39;a HttpRequest&lt;()&gt;) -&gt; AsyncCResponse&lt;&#39;a&gt;</code>?"}, {"owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562854012, "post_id": 56986561, "comment_id": 100516767, "body": "@FrenchBoiethios No. Actually the (lifetime) elided version is strictly identical to what you suggested (a single ref parameter)."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1562854661, "post_id": 56986561, "comment_id": 100517154, "body": "I think that you cannot do what you want. The <code>Responder</code> returned by your func must be bound to a static lifetime while your <code>AsyncCResponse</code> is not. I&#39;m not sure why there is such a restriction in Actix, tho."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1562854890, "post_id": 56986561, "comment_id": 100517311, "body": "Without changing the definition of  <code>AsyncCResponse&lt;&#39;a&gt;</code> , <code>&#39;a</code>  must be equal to <code>&#39;static</code>, since <code>R</code> is restricted with <code>Responder + &#39;static</code>, this doesn&#39;t look possible because of <code>req: &amp;HttpRequest&lt;()&gt;</code> parameter(Compiler infers a different lifetime than <code>&#39;static</code>).You may want to try using different lifetime parameters for input and output, instead of eliding."}, {"owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1562915732, "post_id": 56986561, "comment_id": 100536938, "body": "@&#214;merErden  I could not find a suitable solution and have reengineered the whole thing. Interestingly enough, actix-web 1.0 now passes values rather than references in their handlers"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1562918531, "post_id": 56986561, "comment_id": 100538385, "body": "<code>fn handle_request(req: &amp;HttpRequest&lt;()&gt;) -&gt; AsyncCResponse&lt;&#39;static&gt;</code> why this doesn&#39;t help to you ? ( i was pointing this on my previous comment )"}, {"owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1562941508, "post_id": 56986561, "comment_id": 100550614, "body": "@&#214;merErden long story;;; may best explained <a href=\"https://stackoverflow.com/questions/56975388/calling-itself-in-a-future\">here</a>. In short, <code>handle_request</code> generates a future where a struct reference extracted from the <code>HttpRequest</code> calls itself n the future. The resulting (future) <code>AsyncResponse</code> cannot then outlive the <code>HttpRequest</code>"}], "owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 276, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1593042326, "creation_date": 1562839039, "last_edit_date": 1593042326, "question_id": 56986561, "link": "https://stackoverflow.com/questions/56986561/handling-asynchronous-future-responses-with-bound-lifetime", "title": "Handling asynchronous / future responses with bound lifetime?", "body": "<p>Using this minimal asynchronous actix-web server</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_web::{http, server, App, HttpRequest, HttpResponse,  Error}; // v. 0.7.19\nuse futures::Future; // v. 0.1.28\n\n/// An Asynchronous response which will either &quot;fail fast&quot; on the outer `Result` or\n/// return a future which may itself succeed or fail\n/// The lifetime parameter is required to indicate that the future cannot outlive\n/// the parameter  - the `req: &amp;HttpRequest` - of the handler (`handle_request`)\ntype AsyncCResponse&lt;'a&gt; =\nResult&lt;Box&lt;Future&lt;Item = HttpResponse, Error = Error&gt; + 'a&gt;, Error&gt;;\n\n/// lifetimes have been elided but here the future in the `AsyncCResponse`\n/// will have the same lifetime as the `req` HttpRequest\nfn handle_request(req: &amp;HttpRequest&lt;()&gt;) -&gt; AsyncCResponse {\n    // handle the request\n    Ok(Box::new(futures::future::ok(HttpResponse::Ok().body(&quot;Hello World&quot;))))\n}\n\nfn main() {\n    // instantiation of an actix-web server\n    server::new(move || {\n        App::new()\n            .resource(&quot;/&quot;, |r| {\n                r.method(http::Method::GET).f(|r: &amp;HttpRequest&lt;()&gt;| handle_request(r))\n            })\n    });\n}\n\n</code></pre>\n<p>Compilation fails with</p>\n<pre class=\"lang-rust prettyprint-override\"><code>\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n  --&gt; src/main.rs:23:69\n   |\n23 |                 r.method(http::Method::GET).f(|r: &amp;HttpRequest&lt;()&gt;| handle_request(r))\n   |                                                                     ^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the body at 23:47...\n  --&gt; src/main.rs:23:47\n   |\n23 |                 r.method(http::Method::GET).f(|r: &amp;HttpRequest&lt;()&gt;| handle_request(r))\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:23:84\n   |\n23 |                 r.method(http::Method::GET).f(|r: &amp;HttpRequest&lt;()&gt;| handle_request(r))\n   |                                                                                    ^\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the types are compatible:\n           expected actix_web::handler::Responder\n              found actix_web::handler::Responder\n</code></pre>\n<p>The definition of <code>f</code> in actix-web is</p>\n<pre class=\"lang-rust prettyprint-override\"><code>/// Set handler function. Usually call to this method is last call\n/// during route configuration, so it does not return reference to self.\npub fn f&lt;F, R&gt;(&amp;mut self, handler: F)\nwhere\n    F: Fn(&amp;HttpRequest&lt;S&gt;) -&gt; R + 'static,\n    R: Responder + 'static,\n{\n    self.handler = InnerHandler::new(handler);\n}\n</code></pre>\n<p>Do I understand correctly that compilation fails because</p>\n<ul>\n<li>the definition of <code>f</code>requires that the handler <code>F</code> returns a response with a <code>'static</code> lifetime</li>\n<li>when the response returned by the given handler <code>handle_request</code> has a lifetime bound to that of the <code>HttpRequest</code> parameter?</li>\n</ul>\n<p>Is there anything I can do to fix this <strong>without</strong> changing the definition of <code>AsyncCResponse</code> ?</p>\n"}, {"tags": ["for-loop", "rust", "iterator", "range"], "answers": [{"comments": [{"owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "edited": false, "score": 0, "creation_date": 1562840691, "post_id": 56986698, "comment_id": 100508575, "body": "I probably can achieve what I wish as you describe, thanks for the suggestion and explanation. On the more general point of &quot;could the compiler be more helpful in these kinds of situations&quot; - I guess this is something that more experienced Rustaceans are aware of."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1562840330, "last_edit_date": 1562840330, "creation_date": 1562839514, "answer_id": 56986698, "question_id": 56986468, "link": "https://stackoverflow.com/questions/56986468/why-am-i-getting-an-error-about-a-missing-unstable-trait-stditerstep-whic/56986698#56986698", "title": "Why am I getting an error about a missing unstable trait (std::iter::Step - which the compiler will not let me implement) when compiling stable code?", "body": "<blockquote>\n<pre><code>= note: required because of the requirements on the impl of `std::iter::Iterator` for `std::ops::RangeInclusive&lt;MyThing&gt;`\n</code></pre>\n</blockquote>\n\n<p>The <code>Step</code> trait is not yet stabilised. However, as this error note suggests, it is still used internally; the <code>Iterator</code> implementation of <code>Range*</code> types relies on the <code>Step</code> being implemented.</p>\n\n<p>The result of this is that you cannot (yet) implement <code>Iterator</code> for ranges over custom types, until <code>Step</code> (or some replacement API) is stabilised.</p>\n\n<hr>\n\n<p>Note that \"unstable\" in Rust does not mean it is buggy or could break in any way. It just means that there is still a possibility that the API could change in the future and break backwards-compatibility. The Rust compiler can make use of such APIs for syntax desugaring, because it can just change the desugaring later in the same release as the API changing.</p>\n\n<hr>\n\n<p>To address the problem, I would suggest iterating over something else, that can be trivially converted into your type. Your code is perhaps a little too simplified to offer something realistic for your actual use case, but something along these lines:</p>\n\n<pre><code>impl From&lt;usize&gt; for Thing {\n    fn from(index: usize) -&gt; Thing {\n        Thing()\n    }\n}\n\nfor i in 0..=10 {\n    let thing = Thing::from(i);\n    dbg!(thing);\n}\n</code></pre>\n\n<p>This should not result in any performance overhead.</p>\n"}, {"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 4, "last_activity_date": 1562839716, "creation_date": 1562839716, "answer_id": 56986769, "question_id": 56986468, "link": "https://stackoverflow.com/questions/56986468/why-am-i-getting-an-error-about-a-missing-unstable-trait-stditerstep-whic/56986769#56986769", "title": "Why am I getting an error about a missing unstable trait (std::iter::Step - which the compiler will not let me implement) when compiling stable code?", "body": "<p>It's not possible for you to implement that trait on a stable compiler (as of 1.36.0) at the moment.</p>\n\n<p>This \"pattern\" isn't uncommon in the Rust world, e.g. see the <a href=\"https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html\" rel=\"nofollow noreferrer\"><code>Pattern</code></a> trait, which is used in <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.find\" rel=\"nofollow noreferrer\"><code>str::find</code></a> method, so you can use either Strings, chars or a closure to search for something.</p>\n\n<p>Unstable means in this context that the actual signature of the trait may change and therefore it is not stabilized. If you use the unstable (aka nightly) compiler you opt-in that your code may break because the signature of a trait, function changes. </p>\n"}], "owner": {"reputation": 61, "user_id": 2245517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b97f99747b77f3ac9bce0a80fe204e14?s=128&d=identicon&r=PG", "display_name": "garypen", "link": "https://stackoverflow.com/users/2245517/garypen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 56986698, "answer_count": 2, "score": 0, "last_activity_date": 1564960312, "creation_date": 1562838753, "last_edit_date": 1564960312, "question_id": 56986468, "link": "https://stackoverflow.com/questions/56986468/why-am-i-getting-an-error-about-a-missing-unstable-trait-stditerstep-whic", "title": "Why am I getting an error about a missing unstable trait (std::iter::Step - which the compiler will not let me implement) when compiling stable code?", "body": "<p>I would like to define a function which should allow me to return an iterator over a range of struct instances.</p>\n\n<p>I've tried the same functionality for standard types such as usize (see simplified code sample) and this works (although it is a little awkward). I can't use a standard type in the scenario that I have in mind, so that's not helpful to a solution, but it's helped me understand there is some kind of problem here.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct MyThing();\n\nfn main() {\n    let good  = 0usize..=10usize;\n    // ALSO WORKS for thing in *good.start()..=*good.end() {\n    for thing in 0usize..=10usize {\n        dbg!(thing);\n    }\n    dbg!(good);\n\n    let bad  = MyThing()..=MyThing();\n    for thing in *bad.start()..=*bad.end() {\n        dbg!(thing);\n    }\n    dbg!(bad);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo --version\ncargo 1.35.0 (6f3e9c367 2019-04-04)\n\n$ cargo build\n   Compiling huh v0.1.0 (huh)\nerror[E0277]: the trait bound `MyThing: std::iter::Step` is not satisfied\n  --&gt; src/main.rs:13:18\n   |\n13 |     for thing in *bad.start()..=*bad.end() {\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::iter::Step` is not implemented for `MyThing`\n   |\n   = note: required because of the requirements on the impl of `std::iter::Iterator` for `std::ops::RangeInclusive&lt;MyThing&gt;`\n</code></pre>\n\n<p>I don't expect the stable compiler to tell me that I have a missing unstable trait. I might have some other kind of issue here, which I don't understand, but the stable compiler is telling me that my problem is that I haven't implemented an unstable trait. I definitely can't fix my code like that (without switching to unstable).</p>\n\n<p>I guess what I'm trying to understand is whether or not it's possible to define a range based on a user defined type which can then be iterated over.</p>\n\n<p>Can anyone explain what is going on and suggest ways I can address my problem?</p>\n"}, {"tags": ["unit-testing", "rust", "serde"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1562860384, "post_id": 56985101, "comment_id": 100520570, "body": "I don&#39;t know enough about idiomatic Serde to properly answer this, but you can instantiate a <code>Deserializer</code> implementation via a crate like <a href=\"https://docs.serde.rs/serde_json/struct.Deserializer.html\" rel=\"nofollow noreferrer\"><code>serde-json</code></a>, which would then give you something you could pass in to the function. If using a JSON crate in your tests feels weird, you could use something like <a href=\"http://arcnmx.github.io/serde-value/serde_value/struct.ValueDeserializer.html\" rel=\"nofollow noreferrer\"><code>serde-value</code></a>."}, {"owner": {"reputation": 2493, "user_id": 240448, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/7f5eb8b92235249863df32ba699aaec5?s=128&d=identicon&r=PG", "display_name": "zbrox", "link": "https://stackoverflow.com/users/240448/zbrox"}, "edited": false, "score": 0, "creation_date": 1570916253, "post_id": 56985101, "comment_id": 103070030, "body": "Did you find a more direct solution?"}], "answers": [{"tags": [], "owner": {"reputation": 291, "user_id": 3735355, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9712cc38a6a18bbb7aaee2b510514b6d?s=128&d=identicon&r=PG", "display_name": "pixunil", "link": "https://stackoverflow.com/users/3735355/pixunil"}, "is_accepted": false, "score": 0, "last_activity_date": 1570998243, "creation_date": 1570998243, "answer_id": 58367514, "question_id": 56985101, "link": "https://stackoverflow.com/questions/56985101/how-to-unit-test-a-deserialization-function-used-in-serdedeserialize-with/58367514#58367514", "title": "How to unit-test a deserialization function used in serde(deserialize_with)?", "body": "<p>My current solution uses only structures already provided by <code>serde</code>.\nIn my use case, I only wanted to test that a given string will deserialize successfully into a bool or has a certain error. The <a href=\"https://docs.serde.rs/serde/de/value/index.html\" rel=\"nofollow noreferrer\"><code>serde::de::value</code></a> provides simple deserializers for fundamental data types, for example <a href=\"https://docs.serde.rs/serde/de/value/struct.U64Deserializer.html\" rel=\"nofollow noreferrer\"><code>U64Deserializer</code></a> which holds a <code>u64</code>. It also has an <a href=\"https://docs.serde.rs/serde/de/value/struct.Error.html\" rel=\"nofollow noreferrer\"><code>Error</code> <strong>struct</strong></a> which provides a minimal representation for the Error traits \u2013 ready to be used for mocking errors.</p>\n\n<p>My tests <a href=\"https://github.com/pixunil/gtfs-sim/blob/28ac73d34ee05a9ec766def7ed004bb9658df79b/import/src/utils/deserialize.rs#L125-L148\" rel=\"nofollow noreferrer\">look currently like that</a>: I mock the input with a deserializer and pass it to my function under test. I like that I don't need an indirection there and that I have no additional dependencies. It is not as nice as the <code>assert_tokens*</code> provided <code>serde_test</code>, as it needs the error struct and feels less polished. But for my case, where only a single value is deserialized, it fulfills my needs.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::de::IntoDeserializer;\nuse serde::de::value::{U64Deserializer, StrDeserializer, Error as ValueError};\n\n#[test]\nfn test_numeric_true() {\n    let deserializer: U64Deserializer&lt;ValueError&gt; = 1u64.into_deserializer();\n    assert_eq!(numeric_bool(deserializer), Ok(true));\n}\n\n#[test]\nfn test_numeric_false() {\n    let deserializer: U64Deserializer&lt;ValueError&gt; = 0u64.into_deserializer();\n    assert_eq!(numeric_bool(deserializer), Ok(false));\n}\n\n#[test]\nfn test_numeric_invalid_number() {\n    let deserializer: U64Deserializer&lt;ValueError&gt; = 2u64.into_deserializer();\n    let error = numeric_bool(deserializer).unwrap_err();\n    assert_eq!(error.description(), \"invalid bool: 2\");\n}\n\n#[test]\nfn test_numeric_empty() {\n    let deserializer: StrDeserializer&lt;ValueError&gt; = \"\".into_deserializer();\n    let error = numeric_bool(deserializer).unwrap_err();\n    assert_eq!(error.description(), \"invalid type: string \\\"\\\", expected either 0 or 1\");\n}\n</code></pre>\n\n<p>I hope that it helps other folks too or inspire other people to find a more polished version.</p>\n"}], "owner": {"reputation": 291, "user_id": 3735355, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9712cc38a6a18bbb7aaee2b510514b6d?s=128&d=identicon&r=PG", "display_name": "pixunil", "link": "https://stackoverflow.com/users/3735355/pixunil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 570, "favorite_count": 0, "answer_count": 1, "score": 9, "last_activity_date": 1570998243, "creation_date": 1562834693, "question_id": 56985101, "link": "https://stackoverflow.com/questions/56985101/how-to-unit-test-a-deserialization-function-used-in-serdedeserialize-with", "title": "How to unit-test a deserialization function used in serde(deserialize_with)?", "body": "<p>I have a struct which implements <code>Deserialize</code> and uses the <code>serde(deserialize_with)</code> on a field:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Deserialize)]\nstruct Record {\n    name: String,\n    #[serde(deserialize_with = \"deserialize_numeric_bool\")]\n    is_active: bool,\n}\n</code></pre>\n\n<p>The implementation of <code>deserialize_numeric_bool</code> deserializes a string \"0\" or \"1\" to the corresponding boolean value:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn deserialize_numeric_bool&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;bool, D::Error&gt;\n    where D: Deserializer&lt;'de&gt;\n{\n    struct NumericBoolVisitor;\n\n    impl&lt;'de&gt; Visitor&lt;'de&gt; for NumericBoolVisitor {\n        type Value = bool;\n\n        fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n            formatter.write_str(\"either 0 or 1\")\n        }\n\n        fn visit_u64&lt;E&gt;(self, value: u64) -&gt; Result&lt;bool, E&gt;\n            where E: DeserializeError\n        {\n            match value {\n                0 =&gt; Ok(false),\n                1 =&gt; Ok(true),\n                _ =&gt; Err(E::custom(format!(\"invalid bool: {}\", value))),\n            }\n        }\n    }\n\n    deserializer.deserialize_u64(NumericBoolVisitor)\n}\n</code></pre>\n\n<p>(I appreciate comments about code improvements)</p>\n\n<p>I'd like to write unit tests for deserialization functions like <code>deserialize_numeric_bool</code>. Of course, my friendly search box revealed the <code>serde_test</code> crate and a <a href=\"https://serde.rs/unit-testing.html\" rel=\"noreferrer\">documentation page about unit-testing</a>.\nBut these resources couldn't help me in my case, as the crate tests a structure directly implementing <code>Deserialize</code>.</p>\n\n<p>One idea I had was to create a newtype which only contains the output of my deserialize functions and test it with it. But this looks like a unnecessary indirection to me.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Deserialize)]\nNumericBool {\n    #[serde(deserialize_with = \"deserialize_numeric_bool\")]\n    value: bool\n};\n</code></pre>\n\n<p>How do I write idiomatic tests for it?</p>\n"}, {"tags": ["null", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1562824044, "post_id": 56982221, "comment_id": 100500005, "body": "Why are you taking a <code>&amp;mut String</code> in your <code>find_parent</code> function? A <code>&amp;str</code> would be a better solution here. I recommend you to read <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\">the book</a> which helps you to learn the rust language, because it seems, that you haven&#39;t read it yet."}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 1, "creation_date": 1562824251, "post_id": 56982221, "comment_id": 100500098, "body": "By the way, the method <code>find_parent</code> is logically incorrect and is not doing what is expected."}], "answers": [{"comments": [{"owner": {"reputation": 308, "user_id": 9423933, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-54M4uAWlJ5I/AAAAAAAAAAI/AAAAAAAAAfI/Hxf9Ac4CubY/photo.jpg?sz=128", "display_name": "John Doe", "link": "https://stackoverflow.com/users/9423933/john-doe"}, "edited": false, "score": 0, "creation_date": 1617372204, "post_id": 56982242, "comment_id": 118291745, "body": "Just in case anyone is wondering. I was using JNI and needed to return a null to Java. You can use <code>std::ptr::null_mut()</code> or <code>std::ptr::null()</code> (as required) in those particular instances for FFI."}], "tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": true, "score": 10, "last_activity_date": 1562824146, "last_edit_date": 1562824146, "creation_date": 1562823507, "answer_id": 56982242, "question_id": 56982221, "link": "https://stackoverflow.com/questions/56982221/returning-null-in-rust-function/56982242#56982242", "title": "Returning Null in Rust function", "body": "<p>You cannot return <code>null</code> in Rust, because there is no such concept in the language. Instead you should use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"noreferrer\"><code>Option&lt;T&gt;</code></a>:</p>\n\n<pre><code>fn find_parent(&amp;self, id: &amp;mut String) -&gt; Option&lt;&amp;NodeValue&gt; {\n    if self.id == *id {\n        println!(\"{},{}\", self.id, id);\n        return Some(self);\n    }\n\n    //This loop is pointless, I've kept it because it's in your original code\n    for child in &amp;self.children {\n        println!(\"{:?}\", child);\n        return child.find_parent(id);\n    }\n\n    None\n}\n</code></pre>\n"}], "owner": {"reputation": 292, "user_id": 5292333, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-BqzIV4MhU34/AAAAAAAAAAI/AAAAAAAAAEQ/EWnnmUda2oY/photo.jpg?sz=128", "display_name": "Hossein Akbarzadeh", "link": "https://stackoverflow.com/users/5292333/hossein-akbarzadeh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2929, "favorite_count": 3, "closed_date": 1562829147, "accepted_answer_id": 56982242, "answer_count": 1, "score": 4, "last_activity_date": 1562824146, "creation_date": 1562823395, "last_edit_date": 1562823693, "question_id": 56982221, "link": "https://stackoverflow.com/questions/56982221/returning-null-in-rust-function", "closed_reason": "Duplicate", "title": "Returning Null in Rust function", "body": "<p>how can i return Null in Rust function?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Clone)]\nstruct NodeValue {\n    id: String,\n    parent: String,\n    children: Vec&lt;NodeValue&gt;,\n}\n\nimpl NodeValue {\n    fn find_parent(&amp;self, id: &amp;mut String) -&gt; &amp;NodeValue {\n        if self.id == *id {\n            println!(\"{},{}\", self.id, id);\n            return self;\n        }\n        for child in &amp;self.children {\n            println!(\"{:?}\", child);\n            let res = child.find_parent(id);\n            return res;\n        }\n\n        return null; //return null\n    }\n}\n\nfn main() {\n    let root = NodeValue {\n        id: \"#\".to_string(),\n        parent: String::from(\"root\"),\n        children: vec![],\n    };\n\n    let id = \"1\";\n    let mut parent = \"#\";\n    let mut parent_node = root.find_parent(&amp;mut parent);\n    let node1 = NodeValue {\n        id: \"2\".to_string(),\n        parent: \"1\".to_string(),\n        children: vec![],\n    };\n    parent_node.children.push(node1);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d6c0ba85cf62e7ab0b68d2e0cf1ce10e\" rel=\"nofollow noreferrer\">my code in playground</a></p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1562821196, "post_id": 56981360, "comment_id": 100499129, "body": "I don&#39;t think there is, you could make some sort of guard on the return type but it&#39;s not very practical at some point it&#39;s the responsibility of the implementation to be correct. Have unit test etc."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1562824421, "post_id": 56981360, "comment_id": 100500157, "body": "You could use <a href=\"https://doc.rust-lang.org/std/macro.assert_eq.html\" rel=\"nofollow noreferrer\"><code>assert_eq!</code></a>, or return a <code>Option</code>/<code>Result</code> if the distance is not valid."}], "answers": [{"tags": [], "owner": {"reputation": 14722, "user_id": 401137, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/j25bf.png?s=128&g=1", "display_name": "Some Guy", "link": "https://stackoverflow.com/users/401137/some-guy"}, "is_accepted": true, "score": 1, "last_activity_date": 1562835723, "creation_date": 1562835723, "answer_id": 56985437, "question_id": 56981360, "link": "https://stackoverflow.com/questions/56981360/ensure-that-a-trait-implementation-in-rust-satisfy-properties/56985437#56985437", "title": "Ensure that a trait implementation in rust satisfy properties", "body": "<p>You can use the <a href=\"https://crates.io/crates/trait_tests\" rel=\"nofollow noreferrer\"><code>trait_tests</code> crate</a>, though I do believe the crate is merely an experiment, so there may be rough edges.\nSpecifically, I couldn't figure out how to actually test all implementations of <code>Metric&lt;T&gt;</code>, rather only for a concrete type, <code>Metric&lt;i32&gt;</code>.</p>\n\n<p>For your example:</p>\n\n<pre><code>use trait_tests::*;\n\npub trait Metric&lt;T&gt; {\n    fn distance(o1: &amp;T, o2: &amp;T) -&gt; f64;\n}\n\n#[trait_tests]\npub trait MetricTests: Metric&lt;i32&gt; {\n    fn test_distance() {\n        // These could possibly be extended using quickcheck or proptest\n        assert!(Self::distance(&amp;42, &amp;42) == 0.0);\n    }\n}\n\nstruct CartesianPlane {}\n\n#[test_impl]\nimpl Metric&lt;i32&gt; for CartesianPlane {\n    fn distance(o1: &amp;i32, o2: &amp;i32) -&gt; f64 {\n        (*o2 - *o1) as f64\n    }\n}\n</code></pre>\n\n<p>Then <code>cargo test</code> should include the auto-generated test for the implementors of the trait that are annotated with <code>#[test_impl]</code>.</p>\n"}], "owner": {"reputation": 303, "user_id": 4816099, "user_type": "registered", "accept_rate": 29, "profile_image": "https://lh6.googleusercontent.com/-WpM2D5hcJ0Y/AAAAAAAAAAI/AAAAAAAAJdU/mSaIgSfv0jU/photo.jpg?sz=128", "display_name": "gilcu2", "link": "https://stackoverflow.com/users/4816099/gilcu2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 56985437, "answer_count": 1, "score": 0, "last_activity_date": 1562835723, "creation_date": 1562816585, "last_edit_date": 1562821112, "question_id": 56981360, "link": "https://stackoverflow.com/questions/56981360/ensure-that-a-trait-implementation-in-rust-satisfy-properties", "title": "Ensure that a trait implementation in rust satisfy properties", "body": "<p>I am making a trait to define a distance in a metric space like:</p>\n\n<pre><code>trait Metric&lt;T&gt; {\n    fn distance(o1: &amp;T, o2: &amp;T) -&gt; f64;\n}\n</code></pre>\n\n<p>and I want that any implementation satisfy some properties, for example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>distance(o, o) = 0.0\n</code></pre>\n\n<p>Exist a way in rust to enforce that?</p>\n"}, {"tags": ["rust", "udp"], "comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1562819641, "post_id": 56981152, "comment_id": 100498767, "body": "This is pretty basic stuff, I really suggest reading <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">the book</a> and especially the chapter about <a href=\"https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html\" rel=\"nofollow noreferrer\">error handling</a>"}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 1, "creation_date": 1562819828, "post_id": 56981152, "comment_id": 100498807, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/30505639/how-to-do-error-handling-in-rust-and-what-are-the-common-pitfalls\">How to do error handling in Rust and what are the common pitfalls?</a>"}, {"owner": {"reputation": 307, "user_id": 3274010, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100000728860691/picture?type=large", "display_name": "Reginald Marr", "link": "https://stackoverflow.com/users/3274010/reginald-marr"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1562851259, "post_id": 56981152, "comment_id": 100515068, "body": "I have been going through the book however I&#39;m still new to the concepts (like handling returns with error portion) so I overlooked it here."}], "answers": [{"tags": [], "owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "is_accepted": true, "score": 1, "last_activity_date": 1562827176, "creation_date": 1562827176, "answer_id": 56983028, "question_id": 56981152, "link": "https://stackoverflow.com/questions/56981152/rust-stdnetudpsocket-no-method-named-recv-from/56983028#56983028", "title": "Rust std::net::UdpSocket no method named recv_from", "body": "<pre><code>let socket = UdpSocket::bind(connection);\n</code></pre>\n\n<p>This call returns <code>Result</code> which could represent success value or error value. <code>unwrap()</code> forces it to yield success value (content of <code>Ok</code>). It also panics in case there is error (value is <code>Err</code>).</p>\n\n<pre><code>let socket = UdpSocket::bind(connection).unwrap();\n</code></pre>\n\n<p>OR you can use expect as well which will print the message before panicking.</p>\n\n<pre><code>let socket = UdpSocket::bind(connection).expect(\"failed to bind host socket\");\n</code></pre>\n"}], "owner": {"reputation": 307, "user_id": 3274010, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/100000728860691/picture?type=large", "display_name": "Reginald Marr", "link": "https://stackoverflow.com/users/3274010/reginald-marr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 399, "favorite_count": 0, "accepted_answer_id": 56983028, "answer_count": 1, "score": 1, "last_activity_date": 1562851536, "creation_date": 1562814955, "last_edit_date": 1562851536, "question_id": 56981152, "link": "https://stackoverflow.com/questions/56981152/rust-stdnetudpsocket-no-method-named-recv-from", "title": "Rust std::net::UdpSocket no method named recv_from", "body": "<p>I am working off a <a href=\"https://hanckmann.com/2016/07/05/rust-and-udp.html\" rel=\"nofollow noreferrer\">simple example</a> for creating a rust udp client/server application. But when trying to use either the send_to or recv_from methods I get the following error:</p>\n\n<p>[E0599] no method named <code>send_to</code> found for type <code>std::result::Result&lt;std::net::UdpSocket, std::io::Error&gt;</code> in the current scope.</p>\n\n<p>I havent altered the cargo.toml file in any way however I did not expect I would have to as I am using the standard library with rust version 1.35.0.</p>\n\n<p>Both the client and server were created using cargo new [filename] --bin and the code is in main.rs</p>\n\n<p>Client</p>\n\n<pre><code>use std::net::{Ipv4Addr, SocketAddrV4, UdpSocket};\nuse std::io;\n\nfn snd()  -&gt; Result&lt;(), io::Error&gt; {\n    // Define the local connection (to send the data from)\n    let ip = Ipv4Addr::new(127, 0, 0, 1);\n    let connection = SocketAddrV4::new(ip, 9992);\n\n    // Bind the socket\n    // let socket = try!(UdpSocket::bind(connection));\n    let socket = UdpSocket::bind(connection);\n\n    // Define the remote connection (to send the data to)\n    let connection2 = SocketAddrV4::new(ip, 9991);\n\n    // Send data via the socket\n    let buf = &amp;[0x01, 0x02, 0x03];\n    socket.send_to(buf, &amp;connection2);\n    println!(\"{:?}\", buf);\n\n    Ok(())\n}\n\nfn main() {\n    match snd() {\n        Ok(()) =&gt; println!(\"All snd-ing went well\"),\n        Err(err) =&gt; println!(\"Error: {:?}\", err),\n    }\n}\n\n</code></pre>\n\n<p>Server </p>\n\n<pre><code>use std::net::{Ipv4Addr, SocketAddrV4, UdpSocket};\nuse std::io;\n\nfn recv()  -&gt; Result&lt;(), io::Error&gt; {\n    // Define the local connection information\n    let ip = Ipv4Addr::new(127, 0, 0, 1);\n    let connection = SocketAddrV4::new(ip, 9991);\n\n    // Bind the socket\n    // let socket = try!(UdpSocket::bind(connection));\n    let socket = UdpSocket::bind(connection);\n\n    // Read from the socket\n    let mut buf = [0; 10];\n    // let (amt, src) = try!(socket.recv_from(&amp;mut buf));\n    let (amt, src) = socket.recv_from(&amp;mut buf).expect(\"Didn't recieve data\");\n\n    // Print only the valid data (slice)\n    println!(\"{:?}\", &amp;buf[0 .. amt]);\n\n    Ok(())\n}\n\nfn main() {\n    match recv() {\n        Ok(()) =&gt; println!(\"All recv-ing went well\"),\n        Err(err) =&gt; println!(\"Error: {:?}\", err),\n    }\n}\n\n\n</code></pre>\n\n<p>I also get the following error on the sever side when using cargo build.</p>\n\n<p>[E0599] no method named <code>recv_from</code> found for type <code>std::result::Result&lt;std::net::UdpSocket, std::io::Error&gt;</code> in the current scope.</p>\n\n<p>Edit:\nIt seems this was a result of forgetting to handle the error handling in the return from UdpSocket::bind. This is talked about in more detail in the post\n<a href=\"https://stackoverflow.com/questions/30505639/how-to-do-error-handling-in-rust-and-what-are-the-common-pitfalls\">How to do error handling in Rust and what are the common pitfalls?</a> as mentioned below.</p>\n\n<p>Leaving this question mostly intact as I have not seen many questions or examples explicitly dealing with net::UdpSocket</p>\n"}]