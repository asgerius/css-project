[{"tags": ["rust"], "comments": [{"owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "edited": false, "score": 7, "creation_date": 1566419040, "post_id": 57598663, "comment_id": 101654645, "body": "These don&#39;t do the same thing. The first returns the most significant byte of <code>num</code>. The second returns the least significant byte of <code>num</code>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566420432, "post_id": 57598663, "comment_id": 101655174, "body": "&quot;So I was wondering which form was the more performant?&quot; For such a common and trivial thing, if there was a significantly better way to do it, LLVM would optimize to that."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1566420512, "post_id": 57598663, "comment_id": 101655205, "body": "Also, in that first example, the mask is completely unnecessary, <code>(num &gt;&gt; 24) &amp; 0xFF</code> == <code>num &gt;&gt; 24</code> for any 32 bits integer."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566421226, "post_id": 57598663, "comment_id": 101655456, "body": "If the first example is amended to <code>num &amp; 0xFF</code>, the question makes sense because they do the same thing. But &quot;strong byte&quot; is not a common term; I would say &quot;least significant byte&quot;."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566424026, "post_id": 57598663, "comment_id": 101656301, "body": "<a href=\"https://rust.godbolt.org/z/Hc_LgZ\" rel=\"nofollow noreferrer\">rust.godbolt.org/z/Hc_LgZ</a> answers the question with regard to <code>num &amp; 0xFF</code> vs <code>num &lt;&lt; 24 &gt;&gt; 24</code>: at <code>-C opt-level=0</code> <code>lsb_shift</code> is much slower. At <code>-C opt-level=1</code> they are the same, and at higher optimization levels they&#39;re merged into a single function."}, {"owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566425804, "post_id": 57598663, "comment_id": 101656808, "body": "@trentcl Interesting with no optimizations. I wonder why the compiler feels the need to write each intermediate result to the stack and read it back immediately for the shift version, but it doesn&#39;t deem this necessary for the bitwise and."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "edited": false, "score": 0, "creation_date": 1566454547, "post_id": 57598663, "comment_id": 101662459, "body": "@Justin because there are no intermediate results for the bitwise and, it is a single operation."}], "answers": [{"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 1, "last_activity_date": 1566478887, "creation_date": 1566478887, "answer_id": 57609965, "question_id": 57598663, "link": "https://stackoverflow.com/questions/57598663/why-do-we-use-mask-for-cutting-bytes/57609965#57609965", "title": "Why do we use mask for cutting bytes?", "body": "<blockquote>\n  <p>Credits goes to others as well, see comments below the question.</p>\n</blockquote>\n\n<h1>Terminology</h1>\n\n<p>What is a <em>strong byte</em>? You should use <a href=\"https://en.wikipedia.org/wiki/Bit_numbering#Least_significant_byte\" rel=\"nofollow noreferrer\">Least significant byte</a> (LSB) or <a href=\"https://en.wikipedia.org/wiki/Bit_numbering#Most_significant_byte\" rel=\"nofollow noreferrer\">Most significant byte</a> (MSB).</p>\n\n<h1>Your functions</h1>\n\n<p>I added <code>_1</code> and <code>_2</code> suffixes to the names, just to distinguish between them.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn strong_byte_1(num: u32) -&gt; u8 {\n  ((num &gt;&gt; 24) &amp; 0xFF) as u8\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn strong_byte_2(num: u32) -&gt; u8 {\n  (num &lt;&lt; 24 &gt;&gt; 24) as u8\n}\n</code></pre>\n\n<p>These two functions do different things. Guess what the output of ...</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    println!(\"{}\", strong_byte_1(255));\n    println!(\"{}\", strong_byte_2(255));\n}\n</code></pre>\n\n<p>... is. <code>_1</code> returns <code>0</code> and <code>_2</code> returns <code>255</code>. The <code>_1</code> returns MSB and the <code>_2</code> returns LSB. You have to fix them if you'd like to compare them.</p>\n\n<p>Also <code>strong_byte_1</code> implementation contains unnecessary bit mask. <code>((num &gt;&gt; 24) &amp; 0xFF) as u8</code> equals to <code>(num &gt;&gt; 24) as u8</code>. Check the Shepmaster's <a href=\"https://stackoverflow.com/a/51571371/581190\">answer</a> here. The <code>&gt;&gt;</code> operation contains footnote:</p>\n\n<blockquote>\n  <p>Arithmetic right shift on signed integer types, logical right shift on unsigned integer types.</p>\n</blockquote>\n\n<p><code>u32</code> is unsigned -> logical right shift (see <a href=\"https://en.wikipedia.org/wiki/Logical_shift\" rel=\"nofollow noreferrer\">Logical shift</a>), which means:</p>\n\n<pre><code>0b11111111000000000000000000000000 &gt;&gt; 1 == 0b01111111100000000000000000000000\n0b01111111100000000000000000000000 &gt;&gt; 1 == 0b00111111110000000000000000000000\n0b00111111110000000000000000000000 &gt;&gt; 1 == 0b00011111111000000000000000000000\n...\n0b00000000000000000000000111111110 &gt;&gt; 1 == 0b00000000000000000000000011111111\n</code></pre>\n\n<h1>LSB</h1>\n\n<p>Let's rewrite them, so both do return LSB.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn lsb_1(num: u32) -&gt; u8 {\n  (num &amp; 0xFF) as u8\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn lsb_2(num: u32) -&gt; u8 {\n  (num &lt;&lt; 24 &gt;&gt; 24) as u8\n}\n</code></pre>\n\n<p>What's more performant?</p>\n\n<h2>rust 1.36 &amp; opt-level=0</h2>\n\n<pre><code>example::lsb_1:\n        and     edi, 255\n        mov     al, dil\n        ret\n\nexample::lsb_2:\n        push    rax\n        shl     edi, 24\n        mov     dword ptr [rsp + 4], edi\n        mov     eax, dword ptr [rsp + 4]\n        shr     eax, 24\n        mov     dword ptr [rsp], eax\n        mov     eax, dword ptr [rsp]\n        mov     cl, al\n        mov     al, cl\n        pop     rcx\n        ret\n</code></pre>\n\n<h2>rust 1.36.0 &amp; opt-level=1</h2>\n\n<pre><code>example::lsb_1:\n        mov     eax, edi\n        ret\n\nexample::lsb_2:\n        mov     eax, edi\n        ret\n</code></pre>\n\n<h1>MSB</h1>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn msb(num: u32) -&gt; u8 {\n  (num &gt;&gt; 24) as u8\n}\n</code></pre>\n\n<h2>rust 1.36.0 &amp; opt-level=0</h2>\n\n<pre><code>example::msb:\n        sub     rsp, 4\n        shr     edi, 24\n        mov     dword ptr [rsp], edi\n        mov     eax, dword ptr [rsp]\n        mov     cl, al\n        mov     al, cl\n        add     rsp, 4\n        ret\n</code></pre>\n\n<h2>rust 1.36.0 &amp; opt-level=1</h2>\n\n<pre><code>example::msb:\n        mov     eax, edi\n        shr     eax, 24\n        ret\n</code></pre>\n\n<h1>Conclusion</h1>\n\n<p>What's more performant? Look at the compiler output (assembly), consult target architecture documentation, etc. What compiler are you using? Which version? What is your target architecture? In other words - your question is too broad.</p>\n\n<p>The mentioned <a href=\"https://rust.godbolt.org\" rel=\"nofollow noreferrer\">Compiler Explorer</a> is a nice tool for checking what the compiler output is.</p>\n\n<p>Generally speaking, you should finish your program, make it working and then optimise. Your program will be doing lot of other things and it will contain way more bottlenecks. Measure, optimise, rollback, optimise, measure, commit, ... But do it with the final product, no just simple routines. You can spend non trivial amount of time on premature (thus useless) optimisations. And then you can find that you optimised one routine, but your program is waiting for something else (network, ...), has issues elsewhere, ...</p>\n"}], "owner": {"reputation": 993, "user_id": 4016380, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/f2Nqk.png?s=128&g=1", "display_name": "ClementNerma", "link": "https://stackoverflow.com/users/4016380/clementnerma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "closed_date": 1566480382, "accepted_answer_id": 57609965, "answer_count": 1, "score": 0, "last_activity_date": 1566478887, "creation_date": 1566418607, "question_id": 57598663, "link": "https://stackoverflow.com/questions/57598663/why-do-we-use-mask-for-cutting-bytes", "closed_reason": "Needs details or clarity", "title": "Why do we use mask for cutting bytes?", "body": "<p>So I guess this one is pretty stupid but I can't figure the answer by myself.</p>\n\n<p>A few days ago I had to create a function that returns the strong byte of an unsigned integer. After a few researches on the web, I came up with this one:</p>\n\n<pre><code>fn strong_byte(num: u32) -&gt; u8 {\n  ((num &gt;&gt; 24) &amp; 0xFF) as u8\n}\n</code></pre>\n\n<p>But after searching again for a while I also found this one:</p>\n\n<pre><code>fn strong_byte(num: u32) -&gt; u8 {\n  (num &lt;&lt; 24 &gt;&gt; 24) as u8\n}\n</code></pre>\n\n<p>So I was wondering which form was the more performant? I tried to find benchmarks showing left shift vs bitmask performance, but didn't find anything...</p>\n\n<p>I know the first syntax is by far the most used, but I can't understand why the second is not... </p>\n"}, {"tags": ["javascript", "rust", "firefox-addon", "firefox-addon-webextensions", "webassembly"], "answers": [{"tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": false, "score": 2, "last_activity_date": 1566832730, "creation_date": 1566832730, "answer_id": 57660708, "question_id": 57598482, "link": "https://stackoverflow.com/questions/57598482/how-do-i-use-wasm-in-the-content-script-of-a-firefox-web-extension/57660708#57660708", "title": "How do I use Wasm in the content script of a Firefox web extension?", "body": "<p>I'm not sure how <code>import(\"../crate/pkg\")</code> works at all for you, as <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1536094\" rel=\"nofollow noreferrer\">dynamic module imports are not supported in content scripts in Firefox</a> and \"../crate/pkg\" doesn't look like a path that can work. Perhaps you're doing some preprocessing?</p>\n\n<p>Loading bare WASM (I took add.wasm from <a href=\"https://www.hellorust.com/demos/add/index.html\" rel=\"nofollow noreferrer\">this sample</a>) works fine if you have <code>\"web_accessible_resources\": [\"add.wasm\"]</code> in your manifest.json:</p>\n\n<pre><code>WebAssembly.instantiateStreaming(fetch(browser.runtime.getURL(\"add.wasm\")), {})\n.then(results =&gt; {\n  console.log(\"wasm returned\", results.instance.exports.add_one(41));\n}).catch((err) =&gt; {\n  console.error(\"Unable to instantiateStreaming\", err)\n});\n</code></pre>\n\n<p>Getting a generated JS wrapper to work in content script is a different question, which depends on the tooling and the specific mode you run in.</p>\n\n<p>If you are able to run WASM in a background script, you can <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#Communicating_with_background_scripts\" rel=\"nofollow noreferrer\">communicate between the content script and the background script via sendMessage</a> to get the job done.</p>\n"}], "owner": {"reputation": 1943, "user_id": 5258172, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WFgeq.jpg?s=128&g=1", "display_name": "kunicmarko20", "link": "https://stackoverflow.com/users/5258172/kunicmarko20"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 894, "favorite_count": 3, "answer_count": 1, "score": 6, "last_activity_date": 1566833039, "creation_date": 1566417651, "last_edit_date": 1566833039, "question_id": 57598482, "link": "https://stackoverflow.com/questions/57598482/how-do-i-use-wasm-in-the-content-script-of-a-firefox-web-extension", "title": "How do I use Wasm in the content script of a Firefox web extension?", "body": "<p>I am building a Firefox addon using Rust. I am trying to insert HTML and do stuff on specific pages. Apparently, a content script is the thing I want to use. My content script is:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>import(\"../crate/pkg\").then(({ Addon }) =&gt; {\n    const addon = Addon.new();\n\n    console.log(addon.where_am_i());\n}).catch(e =&gt; console.error(\"Error importing:\", e));\n</code></pre>\n\n<p>The error I am getting is: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>TypeError: \"0125c9960050e7483877.module.wasm is not a valid URL.\"\n</code></pre>\n\n<p>I tried to add to <code>manifest.json</code>:</p>\n\n<pre><code>\"web_accessible_resources\": [\n  \"0125c9960050e7483877.module.wasm\"\n]\n</code></pre>\n\n<p>I accessed it as <code>moz-extension://&lt;extension-UUID&gt;/0125c9960050e7483877.module.wasm\"</code> but then I got: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error importing: Error: \"Loading chunk 0 failed.\n</code></pre>\n\n<p>I also tried a background script, but that is loaded in extension context so it doesn't allow me to alter page content.</p>\n"}, {"tags": ["macos", "python-2.7", "rust", "cpython", "toml"], "comments": [{"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "edited": false, "score": 0, "creation_date": 1566478447, "post_id": 57596985, "comment_id": 101674898, "body": "Are you sure you put the file in <code>PROJECT_DIR&#47;.cargo&#47;config</code>? You can check if the arguments get passed properly by running <code>cargo build -vvv</code>"}, {"owner": {"reputation": 195, "user_id": 9077586, "user_type": "registered", "profile_image": "https://graph.facebook.com/10210175242088068/picture?type=large", "display_name": "Alesi Rowland", "link": "https://stackoverflow.com/users/9077586/alesi-rowland"}, "reply_to_user": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "edited": false, "score": 0, "creation_date": 1566483616, "post_id": 57596985, "comment_id": 101678166, "body": "So compiling the code with cargo rustc --release -- -C link-arg=-undefined -C link-arg=dynamic_lookup builds with no problem, leading me to assume it is that the build can&#39;t see the config file. the dir structure is project/src/lib.rs and I&#39;ve tried placing .cargo/config.toml in either project/ or project/src and neither work. I also tried in ~/.cargo/config.toml and in all these places not within a .cargo hidden dir."}, {"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "edited": false, "score": 1, "creation_date": 1566492376, "post_id": 57596985, "comment_id": 101682738, "body": "It&#39;s <b>not</b> <code>config.toml</code>, just <code>config</code>."}], "answers": [{"tags": [], "owner": {"reputation": 195, "user_id": 9077586, "user_type": "registered", "profile_image": "https://graph.facebook.com/10210175242088068/picture?type=large", "display_name": "Alesi Rowland", "link": "https://stackoverflow.com/users/9077586/alesi-rowland"}, "is_accepted": false, "score": 1, "last_activity_date": 1566487912, "creation_date": 1566487912, "answer_id": 57612787, "question_id": 57596985, "link": "https://stackoverflow.com/questions/57596985/writing-cargo-config-toml-to-allow-rust-code-to-be-imported-by-python/57612787#57612787", "title": "Writing .cargo/config.toml to allow rust code to be imported by python", "body": "<p>Solution found: Thought I'd post it as this gave me grief. </p>\n\n<p>Everything with this setup is fine except the config file can't have the extension .toml despite being written in a toml format</p>\n"}], "owner": {"reputation": 195, "user_id": 9077586, "user_type": "registered", "profile_image": "https://graph.facebook.com/10210175242088068/picture?type=large", "display_name": "Alesi Rowland", "link": "https://stackoverflow.com/users/9077586/alesi-rowland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 714, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566487912, "creation_date": 1566410422, "last_edit_date": 1566487202, "question_id": 57596985, "link": "https://stackoverflow.com/questions/57596985/writing-cargo-config-toml-to-allow-rust-code-to-be-imported-by-python", "title": "Writing .cargo/config.toml to allow rust code to be imported by python", "body": "<p><a href=\"https://i.stack.imgur.com/mgD2M.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/mgD2M.png\" alt=\"enter image description here\"></a>I'm using rust-cpython to make a python module in rust. I've run my code on a linux os and it runs just fine but I get the familiar \"linking with cc failed:exit code 1 error\". I've gathered from this that I need to add the .cargo/config file to my project as suggested at the bottom of this: </p>\n\n<p><a href=\"https://github.com/dgrunwald/rust-cpython\" rel=\"nofollow noreferrer\">https://github.com/dgrunwald/rust-cpython</a></p>\n\n<p>I've copied and pasted their code into a file, config.toml, and place there in a directory, .cargo. I've tried nesting this in my src directory and my project directory with no success, what am I missing?</p>\n"}, {"tags": ["rust", "rust-rocket"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566402940, "post_id": 57595299, "comment_id": 101648004, "body": "Welcome to Stack Overflow! It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/55384204/155423\">How can I pass a variable initialized in main to a Rocket route handler?</a>. You may also be interested in <a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57595299/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566405005, "post_id": 57595299, "comment_id": 101648966, "body": "There&#39;s a lot of things that you don&#39;t <i>want</i> to do. You are going to have a hard time solving programming problems if you continue to discard solutions without reasonable technical reasons for why those solutions are not applicable."}, {"owner": {"reputation": 43, "user_id": 11957887, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCS8siQXEhWUeOh_aef9t04Rw3r_DXm-KSjvImO=k-s128", "display_name": "lenna_kun", "link": "https://stackoverflow.com/users/11957887/lenna-kun"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566405374, "post_id": 57595299, "comment_id": 101649131, "body": "Do you mean about the solution that use global variable?"}, {"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "edited": false, "score": 0, "creation_date": 1566408190, "post_id": 57595299, "comment_id": 101650184, "body": "Your question asks to change the response based on a sequence of requests.  However, your code modifies the response based on a thread::sleep() call.  In other words, it is likely that the first person who makes a request will not see the first message.  Wouldn&#39;t it be better to modify the message to be sent in the request processing, rather than in a timed thread?"}, {"owner": {"reputation": 43, "user_id": 11957887, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCS8siQXEhWUeOh_aef9t04Rw3r_DXm-KSjvImO=k-s128", "display_name": "lenna_kun", "link": "https://stackoverflow.com/users/11957887/lenna-kun"}, "edited": false, "score": 0, "creation_date": 1566431396, "post_id": 57595299, "comment_id": 101658045, "body": "Thanks your comment. Sorry, the word choice was inappropriate. I don&#39;t want to change the response based on a sequence of requests. I want to change it based on a state of server."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1566454904, "post_id": 57595299, "comment_id": 101662599, "body": "I don&#39;t know rocket, so I may be wrong, but I suspect that <code>launch</code> blocks while the server is running and that your code never enters the loop\u2026"}, {"owner": {"reputation": 43, "user_id": 11957887, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCS8siQXEhWUeOh_aef9t04Rw3r_DXm-KSjvImO=k-s128", "display_name": "lenna_kun", "link": "https://stackoverflow.com/users/11957887/lenna-kun"}, "edited": false, "score": 0, "creation_date": 1566457816, "post_id": 57595299, "comment_id": 101663849, "body": "Sounds about right..."}, {"owner": {"reputation": 43, "user_id": 11957887, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCS8siQXEhWUeOh_aef9t04Rw3r_DXm-KSjvImO=k-s128", "display_name": "lenna_kun", "link": "https://stackoverflow.com/users/11957887/lenna-kun"}, "edited": false, "score": 0, "creation_date": 1566465081, "post_id": 57595299, "comment_id": 101667449, "body": "umm, in reality, I want to solve this with Rocket::State. (not with lazy_state or the other way that use global variable)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566831099, "post_id": 57595299, "comment_id": 101769813, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=97ba0a338356b7c89f0ea073bd611e02\" rel=\"nofollow noreferrer\">The duplicates applied to your case</a>"}], "answers": [{"tags": [], "owner": {"reputation": 43, "user_id": 11957887, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCS8siQXEhWUeOh_aef9t04Rw3r_DXm-KSjvImO=k-s128", "display_name": "lenna_kun", "link": "https://stackoverflow.com/users/11957887/lenna-kun"}, "is_accepted": false, "score": 1, "last_activity_date": 1566464561, "creation_date": 1566464561, "answer_id": 57605686, "question_id": 57595299, "link": "https://stackoverflow.com/questions/57595299/how-to-respond-with-a-different-value-depending-on-the-state-of-the-rocket-serve/57605686#57605686", "title": "How to respond with a different value depending on the state of the Rocket server?", "body": "<p>Through trial and error, I solved it by myself.\nThis is the code.\nIf you have other better solutions, I would like you to teach me.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(proc_macro_hygiene)]\n#![feature(decl_macro)]\n\n#[macro_use]\nextern crate rocket;\n\n#[macro_use]\nextern crate lazy_static;\n\nuse std::sync::{Arc, Mutex};\n\nuse std::thread;\nuse std::time::Duration;\n\nlazy_static! {\n    static ref RESPONSE: Arc&lt;Mutex&lt;String&gt;&gt; = Arc::new(Mutex::new(String::from(\"Hello, World!\")));\n}\n\n#[get(\"/\")]\nfn get_response() -&gt; String {\n    let response = RESPONSE.lock().unwrap();\n    let ret: String = String::from(response.as_str());\n    ret\n}\n\nfn main_code() {\n    let mut server_state = 0;\n    loop {\n        thread::sleep(Duration::from_secs(5));\n        let mut response = RESPONSE.lock().unwrap();\n        match server_state {\n            0 =&gt; *response = String::from(\"Hello, Rust!\"),\n            1 =&gt; *response = String::from(\"Hello, Rocket!\"),\n            2 =&gt; *response = String::from(\"Hello, State!\"),\n            _ =&gt; panic!(),\n        }\n        server_state += 1;\n        if server_state &gt;= 3 {\n            server_state = 0;\n        }\n    }\n}\n\nfn main() {\n    let handle = thread::spawn(|| {\n        main_code();\n    });\n    rocket::ignite()\n        .mount(\"/\", routes![get_response])\n        .launch();\n}\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 11957887, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mCS8siQXEhWUeOh_aef9t04Rw3r_DXm-KSjvImO=k-s128", "display_name": "lenna_kun", "link": "https://stackoverflow.com/users/11957887/lenna-kun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "closed_date": 1566465123, "answer_count": 1, "score": 1, "last_activity_date": 1566830617, "creation_date": 1566402627, "last_edit_date": 1566455198, "question_id": 57595299, "link": "https://stackoverflow.com/questions/57595299/how-to-respond-with-a-different-value-depending-on-the-state-of-the-rocket-serve", "closed_reason": "Duplicate", "title": "How to respond with a different value depending on the state of the Rocket server?", "body": "<p>I want to respond with a different value to \"the same request\" depending on the state of server.</p>\n\n<p>My expectation is that these responses will happen in a loop:</p>\n\n<ul>\n<li>Someone sends a <code>GET /</code> request, it responds with \"Hello, World!\".</li>\n<li>Then they send a <code>GET /</code> request, it responds with \"Hello, Rust!\".</li>\n<li>Then they send a <code>GET /</code> request, it responds with \"Hello, Rocket!\".</li>\n<li>Then they send a <code>GET /</code> request, it responds with \"Hello, State!\".</li>\n</ul>\n\n<p>I don't want to use a variable that was initialized in main (in the Rocket route handler). I want to use a variable whose value can be changed in main (in the Rocket route handler).</p>\n\n<p>This code compiles without error but the actual behavior is that it always responds \"Hello, World!\".</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(proc_macro_hygiene)]\n#![feature(decl_macro)]\n\n#[macro_use]\nextern crate rocket;\n\n#[macro_use]\nextern crate lazy_static;\n\nuse std::sync::{Arc, Mutex};\nuse rocket::State;\n\nuse std::thread;\nuse std::time::Duration;\n\nlazy_static! {\n    static ref RESPONSE: Arc&lt;Mutex&lt;String&gt;&gt;\n         = Arc::new(Mutex::new(String::from(\"Hello, World!\")));\n}\n\n#[get(\"/\")]\nfn get_response(state: State&lt;Arc&lt;Mutex&lt;String&gt;&gt;&gt;) -&gt; String {\n    let response = state.lock().unwrap();\n    let ret: String = String::from(response.as_str());\n    ret\n}\n\nfn main() {\n    let managed_response: Arc&lt;Mutex&lt;String&gt;&gt; = RESPONSE.clone();\n    rocket::ignite()\n        .manage(managed_response)\n        .mount(\"/\", routes![get_response])\n        .launch();\n\n    let mut server_state = 0;\n    loop {\n        // Pseudo transition of the state of server\n        thread::sleep(Duration::from_secs(5));\n        let mut response = RESPONSE.lock().unwrap();\n        match server_state {\n            0 =&gt; *response = String::from(\"Hello, Rust!\"), // state 0\n            1 =&gt; *response = String::from(\"Hello, Rocket!\"), // state 1\n            2 =&gt; *response = String::from(\"Hello, State!\"), // state 2\n            _ =&gt; panic!(),\n        }\n        server_state += 1;\n        if server_state &gt;= 3 {\n            server_state = 0;\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "serde", "serde-json"], "answers": [{"comments": [{"owner": {"reputation": 14946, "user_id": 8188846, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/85a7614508b329eb4a495c59ccf64ac7?s=128&d=identicon&r=PG", "display_name": "Maximilian Burszley", "link": "https://stackoverflow.com/users/8188846/maximilian-burszley"}, "edited": false, "score": 1, "creation_date": 1566406679, "post_id": 57594914, "comment_id": 101649658, "body": "Could one-line it to remove the temp variable: <code>json!(std::env::vars().collect::&lt;HashMap&lt;String, String&gt;&gt;())</code>"}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": false, "score": 2, "last_activity_date": 1566401212, "creation_date": 1566401212, "answer_id": 57594914, "question_id": 57594555, "link": "https://stackoverflow.com/questions/57594555/how-to-serialize-stdenvvars-with-serde-json/57594914#57594914", "title": "How to serialize std::env:vars() with serde_json?", "body": "<p>An iterator that returns two-element tuples can be <code>collect</code>ed into a new <code>HashMap</code>. <code>std::env::vars</code> returns such an iterator (called <a href=\"https://doc.rust-lang.org/std/env/struct.Vars.html\" rel=\"nofollow noreferrer\"><code>Vars</code></a>), so that will work here:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let vars: HashMap&lt;String, String&gt; = std::env::vars().collect();\njson!(vars)\n</code></pre>\n\n<p>Beyond that, you can't really simplify things any further without <code>Serialize</code> being directly implemented for <code>Vars</code>. Since <code>Vars</code> is a standard library type, and the <code>Serialize</code> trait comes from an external crate, you can't do this.</p>\n"}], "owner": {"reputation": 11, "user_id": 11957860, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/646ef42645bed77acfeb6e140e70904c?s=128&d=identicon&r=PG&f=1", "display_name": "ryah", "link": "https://stackoverflow.com/users/11957860/ryah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566401212, "creation_date": 1566400076, "question_id": 57594555, "link": "https://stackoverflow.com/questions/57594555/how-to-serialize-stdenvvars-with-serde-json", "title": "How to serialize std::env:vars() with serde_json?", "body": "<p>How can I use serde_json to serialize std::env::vars()</p>\n\n<p>The following works but I feel like it could be done better:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut vars = std::collections::HashMap::new();\nfor (key, value) in std::env::vars() {\n    vars.insert(key, value);\n}\njson!(vars)\n</code></pre>\n"}, {"tags": ["reference", "rust", "iterator"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 9, "last_activity_date": 1566523412, "last_edit_date": 1566523412, "creation_date": 1566397398, "answer_id": 57593857, "question_id": 57593717, "link": "https://stackoverflow.com/questions/57593717/what-is-an-idiomatic-way-to-collect-an-iterator-of-t-into-a-collection-of-ts/57593857#57593857", "title": "What is an idiomatic way to collect an iterator of &amp;T into a collection of Ts?", "body": "<p>If <code>T</code> implements <code>Copy</code> then you can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.copied\" rel=\"nofollow noreferrer\"><code>Iterator::copied</code></a>. Otherwise, if it implements <code>Clone</code> then you can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned\" rel=\"nofollow noreferrer\"><code>Iterator::cloned</code></a>. Like any immutable reference, <code>&amp;str</code> implements both <code>Clone</code> and  <code>Copy</code>, so you can use <code>copied</code>:</p>\n\n<pre><code>let hashset: HashSet&lt;&amp;str&gt; = words.iter().copied().collect();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 10, "last_activity_date": 1566401905, "last_edit_date": 1566401905, "creation_date": 1566397433, "answer_id": 57593872, "question_id": 57593717, "link": "https://stackoverflow.com/questions/57593717/what-is-an-idiomatic-way-to-collect-an-iterator-of-t-into-a-collection-of-ts/57593872#57593872", "title": "What is an idiomatic way to collect an iterator of &amp;T into a collection of Ts?", "body": "<p>Is a bicycle an idiomatic way to get from one city to another? Like most things in software (and life), it <strong>depends</strong>.</p>\n\n<h1>If your type implements <code>Copy</code></h1>\n\n<p>I'd prefer these in this order:</p>\n\n<ol>\n<li><code>some_iter.copied()</code></li>\n<li><code>some_iter.cloned()</code></li>\n<li><code>some_iter.map(|&amp;v| v)</code></li>\n<li><code>some_iter.map(|v| *v)</code></li>\n<li><code>some_iter.map(Clone::clone)</code></li>\n<li><code>some_iter.map(|v| v.clone())</code></li>\n</ol>\n\n<h1>If your type implements <code>Clone</code></h1>\n\n<p>I'd prefer these in this order:</p>\n\n<ol>\n<li><code>some_iter.cloned()</code></li>\n<li><code>some_iter.map(Clone::clone)</code></li>\n<li><code>some_iter.map(|v| v.clone())</code></li>\n</ol>\n\n<h1>If your type doesn't implement <code>Copy</code> or <code>Clone</code></h1>\n\n<p>Then you cannot trivially create an owned value. The type may implement <a href=\"https://doc.rust-lang.org/std/borrow/trait.ToOwned.html\" rel=\"noreferrer\"><code>ToOwned</code></a> or there may be a bespoke function or method that you can call inside of <code>map</code>, or you may simply not be able to do anything.</p>\n\n<hr>\n\n<p>In your case, I'd use <code>words.iter().copied().collect::&lt;HashSet&lt;_&gt;&gt;()</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40613725/155423\">Iterating over a slice&#39;s values instead of references in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/25684227/155423\">What&#39;s the idiomatic way to copy from a primitive type reference by value?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43828013/155423\">Why is &quot;&amp;&amp;&quot; being used in closure arguments?</a></li>\n<li><a href=\"https://stackoverflow.com/q/33971087/155423\">Why does the argument for the find closure need two ampersands?</a></li>\n</ul>\n"}], "owner": {"reputation": 136, "user_id": 10909834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5e22ccf601541e7fb33aa5140cb48918?s=128&d=identicon&r=PG&f=1", "display_name": "Louis Cloete", "link": "https://stackoverflow.com/users/10909834/louis-cloete"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 429, "favorite_count": 1, "accepted_answer_id": 57593857, "answer_count": 2, "score": 5, "last_activity_date": 1566523412, "creation_date": 1566396923, "last_edit_date": 1566404110, "question_id": 57593717, "link": "https://stackoverflow.com/questions/57593717/what-is-an-idiomatic-way-to-collect-an-iterator-of-t-into-a-collection-of-ts", "title": "What is an idiomatic way to collect an iterator of &amp;T into a collection of Ts?", "body": "<p>I need to collect an iterator over a slice of <code>&amp;str</code>s into a collection of <code>&amp;str</code>s. The problem is that the iterator yields <code>&amp;&amp;str</code>s.</p>\n\n<p>I tried to map from <code>&amp;word</code> to <code>word</code>, and while it works, I don't know if it is considered good or if there are better options available.</p>\n\n<p>The problem:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let words = &amp;[\"hello\", \"world\", \"I'm\", \"a\", \"Rustacean!\"];\n    let hashset = words.iter().collect::&lt;HashSet&lt;&amp;str&gt;&gt;();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=98bc4232ec9129ab13654330c4a0be37\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: a collection of type `std::collections::HashSet&lt;&amp;str&gt;` cannot be built from an iterator over elements of type `&amp;&amp;str`\n --&gt; src/main.rs:5:32\n  |\n5 |     let hashset = words.iter().collect::&lt;HashSet&lt;&amp;str&gt;&gt;();\n  |                                ^^^^^^^ a collection of type `std::collections::HashSet&lt;&amp;str&gt;` cannot be built from `std::iter::Iterator&lt;Item=&amp;&amp;str&gt;`\n  |\n  = help: the trait `std::iter::FromIterator&lt;&amp;&amp;str&gt;` is not implemented for `std::collections::HashSet&lt;&amp;str&gt;`\n</code></pre>\n\n<p>My solution:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let words = &amp;[\"hello\", \"world\", \"I'm\", \"a\", \"Rustacean!\"];\n    let hashset = words.iter().map(|&amp;w| w).collect::&lt;HashSet&lt;&amp;str&gt;&gt;();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ca8e920da6b06e48e4c9e7b280b90056\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust", "rust-pin"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566396340, "post_id": 57593372, "comment_id": 101644479, "body": "See also <a href=\"https://stackoverflow.com/q/56058494/155423\">When is it safe to move a member value out of a pinned future?</a>"}, {"owner": {"reputation": 751, "user_id": 152962, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4d0b951cd698a6648180851f0d0beaf1?s=128&d=identicon&r=PG", "display_name": "WillW", "link": "https://stackoverflow.com/users/152962/willw"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566402117, "post_id": 57593372, "comment_id": 101647598, "body": "I have edited to add a MRE, and also to clarify why the other question (that I hadn&#39;t found - thanks) doesn&#39;t quite answer what I&#39;m looking for. The latter is a judgement call though and I would understand if you wanted to close this question as &#39;already answered&#39;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566402499, "post_id": 57593372, "comment_id": 101647809, "body": "Your question(s) seem to be straying off in different directions. The linked question shows how to do it for <code>Unpin</code> types, and links further to the docs to explain how it works. This ostensibly answers your #2. You are also asking if there&#39;s a &quot;cleaner&quot; way, but haven&#39;t described what &quot;cleaner&quot; means. You could create function or extension trait that writes some of that code for you (like the <code>poll_unpin</code> method in the other question). Then you&#39;ve updated your question to ask about &quot;under the hood&quot;, which is drastically different and broader from anything else in the question."}], "owner": {"reputation": 751, "user_id": 152962, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4d0b951cd698a6648180851f0d0beaf1?s=128&d=identicon&r=PG", "display_name": "WillW", "link": "https://stackoverflow.com/users/152962/willw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 148, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1586636864, "creation_date": 1566395805, "last_edit_date": 1586636864, "question_id": 57593372, "link": "https://stackoverflow.com/questions/57593372/how-do-i-call-a-method-that-requires-a-pinned-self-from-another-method-that-has", "title": "How do I call a method that requires a pinned self from another method that has a pinned self?", "body": "<p>I am implementing Tokio's <code>AsyncRead</code> for a struct, but the implementation is just a pass through to a contained struct. The implementation that I finally got to compile is:</p>\n\n<pre><code>use std::pin::Pin;\n\n// A simplified version of Tokio's AsyncRead\ntrait Async {\n    fn poll_read(self: Pin&lt;&amp;mut Self&gt;);\n}\n\nstruct Inner {}\n\nimpl Async for Inner {\n    fn poll_read(self: Pin&lt;&amp;mut Self&gt;) {\n        // Actual implementation would be here\n    }\n}\n\nstruct Outer {\n    inner: Inner,\n}\n\nimpl Async for Outer {\n    fn poll_read(self: Pin&lt;&amp;mut Self&gt;) {\n        // This is a wrapper implementation, just deferring to inner\n        Pin::new(&amp;mut self.get_mut().inner).poll_read()\n    }\n}\n\nfn main() {\n    let mut outer = Outer { inner: Inner {} };\n    Pin::new(&amp;mut outer).poll_read()\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=94c79fba0014a9c5024f8af225b51e7e\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>There are libraries that hide some details of these pin handling issues (e.g. see the answer in <a href=\"https://stackoverflow.com/questions/57369123/no-method-named-poll-found-for-a-type-that-implements-future\">No method named `poll` found for a type that implements `Future`</a>), but I am trying to understand what is actually going on 'under the hood'. I have two related questions:</p>\n\n<ol>\n<li><p>Is there a cleaner way of doing <code>Pin::new(&amp;mut self.get_mut().io).</code>? That seems a particularly convoluted way of showing the compiler that the struct inside a pinned struct is also <code>Pin</code>.</p></li>\n<li><p>This implementation is only possible because my struct is <code>Unpin</code> (otherwise I couldn't call <code>get_mut()</code>). How would I achieve this otherwise?</p></li>\n</ol>\n"}, {"tags": ["import", "module", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1566394658, "post_id": 57592848, "comment_id": 101643312, "body": "<code>mod prog;</code> in test.rs declares a module, <code>test::prog</code>, that is distinct from <code>prog</code>. main.rs and lib.rs are special in this respect. If you want to use a module that is defined elsewhere, you use <code>use</code> rather than <code>mod</code>."}, {"owner": {"reputation": 99, "user_id": 11957368, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/337aa89761ed3a515ffe17f0da02c119?s=128&d=identicon&r=PG&f=1", "display_name": "mr_broccoli", "link": "https://stackoverflow.com/users/11957368/mr-broccoli"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566394972, "post_id": 57592848, "comment_id": 101643523, "body": "@trentcl That worked, thank you so much"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1566395015, "post_id": 57592848, "comment_id": 101643559, "body": "Be sure to re-read <a href=\"https://doc.rust-lang.org/book/ch07-00-managing-growing-projects-with-packages-crates-and-modules.html\" rel=\"nofollow noreferrer\">the book chapter on this</a>."}], "owner": {"reputation": 99, "user_id": 11957368, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/337aa89761ed3a515ffe17f0da02c119?s=128&d=identicon&r=PG&f=1", "display_name": "mr_broccoli", "link": "https://stackoverflow.com/users/11957368/mr-broccoli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 4227, "favorite_count": 0, "closed_date": 1566394871, "answer_count": 0, "score": 5, "last_activity_date": 1566394927, "creation_date": 1566394238, "question_id": 57592848, "link": "https://stackoverflow.com/questions/57592848/rust-file-not-found-for-module-error-for-file-in-same-directory", "closed_reason": "Duplicate", "title": "Rust file not found for module error for file in same directory", "body": "<p>Rust cannot find local file through declaration. I have the following file structure in src:</p>\n\n<pre><code>| main.rs\n| lib.rs\n| test.rs\n| prog.rs\n| file.rs\n</code></pre>\n\n<p>In main.rs I have</p>\n\n<pre><code>extern crate cratename;\nmod prog;\n\nuse cratename::file1::File1;\n...\nprog::function() // This works\n...\n#[cfg(test)]\nmod test;\n</code></pre>\n\n<p>In lib.rs I have</p>\n\n<pre><code>pub mod file1;\n</code></pre>\n\n<p>In test.rs I have</p>\n\n<pre><code>extern crate cratename\nuse cratename::file1::File1;\nmod prog;\n#[test]\n...\nprog::function() // This does not work\n...\n</code></pre>\n\n<p>I keep getting the error</p>\n\n<pre><code>error[E0583]: file not found for module `prog`\n</code></pre>\n\n<p>I tried putting the declaration in lib.rs but that didn't work. I've tried numerous other permutations involving this declaration along with main.rs but none of it worked. If it helps, prog.rs doesn't contain a struct and it doesn't use the mod keyword, it only contains public functions. This has stumped me for a while. Thank you for your help.</p>\n"}, {"tags": ["windows", "rust", "libc"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1566393903, "post_id": 57592290, "comment_id": 101642786, "body": "As best I can tell, your code is <b>completely broken</b>. You are writing your formatted data into a zero-length string, overwriting arbitrary data. Try running your code under a tool like Valgrind."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1566394070, "post_id": 57592290, "comment_id": 101642900, "body": "Independently of your compilation problem, <code>sprintf</code> assumes its first argument is a large enough buffer (which is not your case!). It&#39;s a broken function that you cannot use safely."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 1, "creation_date": 1566394873, "post_id": 57592290, "comment_id": 101643456, "body": "It appears not to be bound. Check <a href=\"https://github.com/rust-lang/libc/issues\" rel=\"nofollow noreferrer\">libc issues</a> and possibly file one. That said, the point of rust is avoiding memory unsafety and <code>sprintf</code> is probably the biggest offender in C, nearly impossible to use correctly. Can&#39;t you use a more modern formatting function instead?"}, {"owner": {"reputation": 14946, "user_id": 8188846, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/85a7614508b329eb4a495c59ccf64ac7?s=128&d=identicon&r=PG", "display_name": "Maximilian Burszley", "link": "https://stackoverflow.com/users/8188846/maximilian-burszley"}, "edited": false, "score": 0, "creation_date": 1566395109, "post_id": 57592290, "comment_id": 101643622, "body": "It looks like you just want to write C in Rust.. so why not just write C?"}, {"owner": {"reputation": 21, "user_id": 8132419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7248e0d9e17d449a4cfbb674b4f12a9e?s=128&d=identicon&r=PG&f=1", "display_name": "Mr. Carter", "link": "https://stackoverflow.com/users/8132419/mr-carter"}, "edited": false, "score": 1, "creation_date": 1566456186, "post_id": 57592290, "comment_id": 101663132, "body": "The business logic of the project contains some C formatting specifiers that cannot be applied to Rust format!. I&#39;ve written my own logic that applies to that but I&#39;m thinking that I cannot cover all the edge cases: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6518824cce93899429056abb8657be19\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> . One edge case that crossed my mind is for an input let&#39;s say 3242.32 formatted with %6d. Compare the results from C and Rust: <a href=\"https://code.sololearn.com/cHerGNWry1nb\" rel=\"nofollow noreferrer\">code.sololearn.com/cHerGNWry1nb</a>"}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 8132419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7248e0d9e17d449a4cfbb674b4f12a9e?s=128&d=identicon&r=PG&f=1", "display_name": "Mr. Carter", "link": "https://stackoverflow.com/users/8132419/mr-carter"}, "edited": false, "score": 0, "creation_date": 1566455775, "post_id": 57592630, "comment_id": 101662945, "body": "If you read libc platform specific documentation, you will notice that sprintf is not present in the exported functions: <a href=\"https://rust-lang.github.io/libc/x86_64-pc-windows-gnu/libc/index.html\" rel=\"nofollow noreferrer\">rust-lang.github.io/libc/x86_64-pc-windows-gnu/libc/index.ht&zwnj;&#8203;ml</a>"}, {"owner": {"reputation": 749, "user_id": 10663732, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wNDF3.jpg?s=128&g=1", "display_name": "tomer zeitune", "link": "https://stackoverflow.com/users/10663732/tomer-zeitune"}, "reply_to_user": {"reputation": 21, "user_id": 8132419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7248e0d9e17d449a4cfbb674b4f12a9e?s=128&d=identicon&r=PG&f=1", "display_name": "Mr. Carter", "link": "https://stackoverflow.com/users/8132419/mr-carter"}, "edited": false, "score": 0, "creation_date": 1566456870, "post_id": 57592630, "comment_id": 101663424, "body": "@Mr. Carter that\u2019s the platform specific docs for windows on the gnu toolchain. I can\u2019t find documentation for x86_64 windows using the MSVC toolchain. But I can find sprintf in the libc docs, Here it is  <a href=\"https://docs.rs/libc/0.2.63/libc/fn.sprintf.html\" rel=\"nofollow noreferrer\">docs.rs/libc/0.2.63/libc/fn.sprintf.html</a>. Seems like it\u2019s platform specific. Changing to x86_64 windows using the MSVC toolchain from x86_64 windows using the GNU toolchain could solve the issue as suggested in the answer above."}], "tags": [], "owner": {"reputation": 749, "user_id": 10663732, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wNDF3.jpg?s=128&g=1", "display_name": "tomer zeitune", "link": "https://stackoverflow.com/users/10663732/tomer-zeitune"}, "is_accepted": false, "score": -3, "last_activity_date": 1566393524, "last_edit_date": 1592644375, "creation_date": 1566393524, "answer_id": 57592630, "question_id": 57592290, "link": "https://stackoverflow.com/questions/57592290/libc-crate-doesnt-provide-sprintf-on-windows/57592630#57592630", "title": "libc crate doesn&#39;t provide sprintf on Windows", "body": "<p>This is probably a toolchain thing.</p>\n<p>You are probably using the GNU toolchain on macOS and Linux (*Nix)</p>\n<p>Make sure you got the latest and greatest MSVC toolchain installed and used</p>\n<p>Read <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/platform-and-target-support/msvc-toolchain-support.html\" rel=\"nofollow noreferrer\">this article</a> for more information</p>\n<blockquote>\n<p>The difference between the two matters for interacting with C. If\nyou're using a library built with one toolchain or another, you need\nto match that with the appropriate Rust toolchain. If you're not sure,\ngo with MSVC; it's the default for good reason.</p>\n</blockquote>\n<p>Use MSVC on windows.</p>\n"}], "owner": {"reputation": 21, "user_id": 8132419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7248e0d9e17d449a4cfbb674b4f12a9e?s=128&d=identicon&r=PG&f=1", "display_name": "Mr. Carter", "link": "https://stackoverflow.com/users/8132419/mr-carter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 395, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1566393716, "creation_date": 1566392523, "last_edit_date": 1566393716, "question_id": 57592290, "link": "https://stackoverflow.com/questions/57592290/libc-crate-doesnt-provide-sprintf-on-windows", "title": "libc crate doesn&#39;t provide sprintf on Windows", "body": "<p>I wrote a library in Rust that uses C formatting using the <code>sprintf</code> function provided by the libc crate. Everything works on macOS and Linux but it does not compile on Windows because the <code>sprintf</code> function does not exist.</p>\n\n<pre><code>extern crate libc;\nuse libc::{c_char, c_double, sprintf};\n</code></pre>\n\n<pre><code>let c_resfmt: CString =\n    CString::new(c_resfmt).expect(\"Couldn't convert to c_resfmt to CString \");\nlet result_buffer: *mut c_char = CString::new(\"\").expect(\"\").into_raw();\nunsafe {\n    sprintf(result_buffer, c_resfmt.as_ptr(), scaled_result as c_double);\n    let formatted_result = CString::from_raw(result_buffer).into_string().unwrap();\n    ptr_result.with_result_value(formatted_result);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `libc::sprintf`\n  --&gt; src\\stdf_helper\\reader\\mod.rs:12:13\n   |\n12 | use libc::{ sprintf, c_char, c_double };\n   |             ^^^^^^^\n   |             |\n   |             no `sprintf` in the root\n   |             help: a similar name exists in the module: `isprint`\n</code></pre>\n\n<p>Is there a substitute or alternative name for this?</p>\n"}, {"tags": ["python-2.7", "rust", "cpython", "toml"], "answers": [{"comments": [{"owner": {"reputation": 195, "user_id": 9077586, "user_type": "registered", "profile_image": "https://graph.facebook.com/10210175242088068/picture?type=large", "display_name": "Alesi Rowland", "link": "https://stackoverflow.com/users/9077586/alesi-rowland"}, "edited": false, "score": 0, "creation_date": 1566396615, "post_id": 57593202, "comment_id": 101644655, "body": "I&#39;ve changed it from a dylib file to a .so file as am on Mac.  I&#39;ve changed dylib to cdylib and changed features to <code>features = [&quot;python27-sys&quot;, &quot;extension-module-2-7&quot;]</code> - now it will compile but I still can&#39;t access py_module_initialiser!"}, {"owner": {"reputation": 195, "user_id": 9077586, "user_type": "registered", "profile_image": "https://graph.facebook.com/10210175242088068/picture?type=large", "display_name": "Alesi Rowland", "link": "https://stackoverflow.com/users/9077586/alesi-rowland"}, "edited": false, "score": 0, "creation_date": 1566397149, "post_id": 57593202, "comment_id": 101645020, "body": "Edit: Realised I have access to the macro now but my IDE was ignoring it. Cheers for the solution!"}], "tags": [], "owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "is_accepted": false, "score": 2, "last_activity_date": 1566395329, "creation_date": 1566395329, "answer_id": 57593202, "question_id": 57592083, "link": "https://stackoverflow.com/questions/57592083/cant-find-py-module-initializer-when-building-python-module-in-rust/57593202#57593202", "title": "Can&#39;t find py_module_initializer! when building python module in rust", "body": "<blockquote>\n  <p>When compiling the code, changing the extension to <code>.so</code> and putting the file in with my python scripts</p>\n</blockquote>\n\n<p>What are you renaming it from? The <a href=\"https://github.com/dgrunwald/rust-cpython\" rel=\"nofollow noreferrer\">rust-cpython</a> documentation says</p>\n\n<blockquote>\n  <p>On Mac OS, you will need to rename the output from <code>*.dylib</code> to <code>*.so</code>. On Windows, you will need to rename the output from <code>*.dll</code> to <code>*.pyd</code>.</p>\n</blockquote>\n\n<p>and on Linux you shouldn't be renaming anything.</p>\n\n<p>The problem is probably that you are not actually building a shared object. You have</p>\n\n<blockquote>\n<pre><code>[lib]\ncrate-type = [\"dylib\"]\n</code></pre>\n</blockquote>\n\n<p>but the <a href=\"https://github.com/dgrunwald/rust-cpython\" rel=\"nofollow noreferrer\">rust-cpython</a> readme says</p>\n\n<pre><code>[lib]\ncrate-type = [\"cdylib\"]\n</code></pre>\n\n<p>Mind the <code>c</code>! <code>cdylib</code> and <code>dylib</code> are different things in rust.</p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1566395627, "creation_date": 1566395627, "answer_id": 57593314, "question_id": 57592083, "link": "https://stackoverflow.com/questions/57592083/cant-find-py-module-initializer-when-building-python-module-in-rust/57593314#57593314", "title": "Can&#39;t find py_module_initializer! when building python module in rust", "body": "<p>According to the <a href=\"https://github.com/dgrunwald/rust-cpython#example-library-with-python-bindings\" rel=\"nofollow noreferrer\"><code>cpython</code> homepage</a>, you need to enable the <code>extension-module</code> module feature, so try with:</p>\n\n<pre><code>[dependencies.cpython]\nversion = '0.3.0'\ndefault-features = false\nfeatures = [\"python27-sys\", \"extension-module-2-7\"]\n</code></pre>\n"}], "owner": {"reputation": 195, "user_id": 9077586, "user_type": "registered", "profile_image": "https://graph.facebook.com/10210175242088068/picture?type=large", "display_name": "Alesi Rowland", "link": "https://stackoverflow.com/users/9077586/alesi-rowland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1566397062, "creation_date": 1566391931, "last_edit_date": 1566397062, "question_id": 57592083, "link": "https://stackoverflow.com/questions/57592083/cant-find-py-module-initializer-when-building-python-module-in-rust", "title": "Can&#39;t find py_module_initializer! when building python module in rust", "body": "<p>Very new to Rust. </p>\n\n<p>I'm trying to build a python module in Rust using rust-cypthon. Currently, I can access cpython types but can't call py_module_initializer! which I believe is required to make the module run in python. </p>\n\n<p>When compiling the code, changing the extension to .so and putting the file in with my python scripts and importing, I get this error: </p>\n\n<pre><code>ImportError: dynamic module does not define init function (initpyext_rust_onboard)\n</code></pre>\n\n<p>Cargo.toml</p>\n\n<pre><code>[lib]\ncrate-type = [\"cdylib\"]\n\n[dependencies]\ncsv = \"1.1.1\"\nserde = \"1.0.99\"\nserde_derive=\"1.0\"\nserde_json= \"1.0\"\nserde_yaml = \"0.7.1\"\n\n[dependencies.cpython]\nversion = '0.3.0'\ndefault-features = false\nfeatures = [\"python27-sys\", \"extension-module-2-7\"]\n\n</code></pre>\n\n<p>Dependencies imported to lib.rs</p>\n\n<pre><code>#[macro_use]\nextern crate serde;\nextern crate serde_derive;\n\n#[macro_use]extern crate cpython;\n\n\nuse std::fs::File;\nuse std::collections::HashMap;\nuse std::borrow::Cow;\nuse std::error::Error;\nuse cpython::{Python, PyObject, PyResult, PyString, PyFloat};\nuse csv::DeserializeRecordsIter;\n</code></pre>\n"}, {"tags": ["rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 2, "last_activity_date": 1566389197, "creation_date": 1566389197, "answer_id": 57591250, "question_id": 57590175, "link": "https://stackoverflow.com/questions/57590175/blocking-annotated-i-o-must-be-called-from-the-context-of-the-tokio-runtime-wh/57591250#57591250", "title": "&quot;blocking annotated I/O must be called from the context of the Tokio runtime&quot; when reading stdin in async task", "body": "<p>Tokio <code>stdin</code> blocks enclosing thread from the pool of executor because it is annotated with <code>blocking</code> from tokio-executor. <a href=\"https://docs.rs/crate/tokio-threadpool/0.2.0-alpha.1/source/src/blocking.rs\" rel=\"nofollow noreferrer\">From the reference</a> :</p>\n\n<blockquote>\n  <p>When the <code>blocking</code> function enters, it hands off the responsibility\n  of processing the current work queue to another thread.</p>\n</blockquote>\n\n<p>Your code is not working because the executor that you have used is multiplexing tasks in a single thread(<code>tokio::runtime::current_thread::Runtime::new()</code>). Thus there will remain no other thread to execute other tasks for executor.</p>\n\n<p>If you properly configure your runtime(thread pool with multiple threads)  your code will work fine : </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let rt = tokio::runtime::Runtime::new().unwrap();\n    let mut executor = rt.executor();\n\n    executor.spawn(async {\n        match server_task().await {\n            Ok(()) =&gt; {}\n            Err(err) =&gt; {\n                println!(\"Error: {:?}\", err);\n            }\n        }\n    });\n\n    rt.shutdown_on_idle();\n}\n</code></pre>\n\n<p><strong>See also:</strong> <a href=\"https://stackoverflow.com/questions/56555513/how-can-i-stop-reading-from-a-tokioiolines-stream/56562541\">How can I stop reading from a tokio::io::lines stream?</a></p>\n"}], "owner": {"reputation": 6262, "user_id": 691032, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=128&d=identicon&r=PG", "display_name": "sinan", "link": "https://stackoverflow.com/users/691032/sinan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1652, "favorite_count": 0, "accepted_answer_id": 57591250, "answer_count": 1, "score": 1, "last_activity_date": 1566389197, "creation_date": 1566385363, "question_id": 57590175, "link": "https://stackoverflow.com/questions/57590175/blocking-annotated-i-o-must-be-called-from-the-context-of-the-tokio-runtime-wh", "title": "&quot;blocking annotated I/O must be called from the context of the Tokio runtime&quot; when reading stdin in async task", "body": "<p>I'm trying to read from stdin in an async task, spawned with <code>tokio::spawn</code>. The\nexecutor is crated as</p>\n\n<pre><code>let mut executor = tokio::runtime::current_thread::Runtime::new().unwrap();\n</code></pre>\n\n<p>the main task is then run with <code>executor.task(...)</code>, which spawns other tasks\nwith <code>tokio::spawn()</code>.</p>\n\n<p><code>fn main</code> then calls <code>executor.run().unwrap();</code> to wait for all tasks to finish.</p>\n\n<p>The problem is when I do</p>\n\n<pre><code>let mut stdin = tokio::io::stdin();\nlet mut read_buf: [u8; 1024] = [0; 1024];\n...\nstdin.read(&amp;mut read_buf).await\n</code></pre>\n\n<p>I get \"blocking annotated I/O must be called from the context of the Tokio runtime\" error.</p>\n\n<p>Dependencies:</p>\n\n<pre><code>futures-preview = { version = \"0.3.0-alpha.18\",  features = [\"async-await\", \"nightly\"] }\ntokio = \"0.2.0-alpha.2\"\ntokio-net = \"0.2.0-alpha.2\"\ntokio-sync = \"0.2.0-alpha.2\"\n</code></pre>\n\n<p>Full code:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio;\nextern crate tokio_net;\nextern crate tokio_sync;\n\nuse std::io::Write;\nuse std::net::SocketAddr;\nuse tokio::io::AsyncReadExt;\nuse tokio::net::tcp::split::{TcpStreamReadHalf, TcpStreamWriteHalf};\nuse tokio::net::TcpListener;\nuse tokio_sync::oneshot;\n\nuse futures::select;\n\nuse futures::future::FutureExt;\n\n#[derive(Debug)]\nenum AppErr {\n    CantBindAddr(std::io::Error),\n    CantAccept(std::io::Error),\n}\n\nfn main() {\n    let mut executor = tokio::runtime::current_thread::Runtime::new().unwrap();\n\n    executor.spawn(async {\n        match server_task().await {\n            Ok(()) =&gt; {}\n            Err(err) =&gt; {\n                println!(\"Error: {:?}\", err);\n            }\n        }\n    });\n\n    executor.run().unwrap(); // ignores RunError\n}\n\nasync fn server_task() -&gt; Result&lt;(), AppErr&gt; {\n    let addr: SocketAddr = \"127.0.0.1:8080\".parse().unwrap();\n    let mut listener = TcpListener::bind(&amp;addr).map_err(AppErr::CantBindAddr)?;\n\n    loop {\n        print!(\"Waiting for incoming connection...\");\n        let _ = std::io::stdout().flush();\n        let (socket, _) = listener.accept().await.map_err(AppErr::CantAccept)?;\n        println!(\"{:?} connected.\", socket);\n        let (read, write) = socket.split();\n\n        let (abort_in_task_snd, abort_in_task_rcv) = oneshot::channel();\n        let (abort_out_task_snd, abort_out_task_rcv) = oneshot::channel();\n\n        tokio::spawn(handle_incoming(read, abort_in_task_rcv, abort_out_task_snd));\n        tokio::spawn(handle_outgoing(\n            write,\n            abort_out_task_rcv,\n            abort_in_task_snd,\n        ));\n    }\n}\n\nasync fn handle_incoming(\n    mut conn: TcpStreamReadHalf,\n    abort_in: oneshot::Receiver&lt;()&gt;,\n    abort_out: oneshot::Sender&lt;()&gt;,\n) {\n    println!(\"handle_incoming\");\n\n    let mut read_buf: [u8; 1024] = [0; 1024];\n    let mut abort_in_fused = abort_in.fuse();\n\n    loop {\n        select! {\n            abort_ret = abort_in_fused =&gt; {\n                // TODO match abort_ret {..}\n                println!(\"abort signalled, handle_incoming returning\");\n                return;\n            },\n            bytes = conn.read(&amp;mut read_buf).fuse() =&gt; {\n                match bytes {\n                    Err(io_err) =&gt; {\n                        println!(\"io error when reading input stream: {:?}\", io_err);\n                        return;\n                    }\n                    Ok(bytes) =&gt; {\n                        println!(\"read {} bytes: {:?}\", bytes, &amp;read_buf[0..bytes]);\n                    }\n                }\n            }\n        }\n    }\n}\n\nasync fn handle_outgoing(\n    conn: TcpStreamWriteHalf,\n    abort_in: oneshot::Receiver&lt;()&gt;,\n    abort_out: oneshot::Sender&lt;()&gt;,\n) {\n    println!(\"handle_outgoing\");\n\n    let mut stdin = tokio::io::stdin();\n    let mut read_buf: [u8; 1024] = [0; 1024];\n    let mut abort_in_fused = abort_in.fuse();\n\n    loop {\n        select! {\n            abort_ret = abort_in_fused =&gt; {\n                println!(\"abort signalled, handle_outgoing returning\");\n                return;\n            }\n            input = stdin.read(&amp;mut read_buf).fuse() =&gt; {\n                match input {\n                    Err(io_err) =&gt; {\n                        println!(\"io error when reading stdin: {:?}\", io_err);\n                        return;\n                    }\n                    Ok(bytes) =&gt; {\n                        println!(\"handle_outgoing read {} bytes\", bytes);\n                        // TODO\n                    }\n                }\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>Questions:</p>\n\n<ul>\n<li>Am I doing task spawning right? Can I safely do <code>tokio::spawn</code> in the main\ntask passed to <code>executor.spawn()</code>?</li>\n<li>What's wrong with the way I read stdin in this program?</li>\n</ul>\n\n<p>Thanks</p>\n"}, {"tags": ["rust", "rust-tokio", "hyper"], "answers": [{"tags": [], "owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "is_accepted": true, "score": 1, "last_activity_date": 1566481510, "last_edit_date": 1566481510, "creation_date": 1566479263, "answer_id": 57610101, "question_id": 57589869, "link": "https://stackoverflow.com/questions/57589869/why-does-using-a-cloned-hyper-client-with-tokio-futures-in-a-loop-block-even-aft/57610101#57610101", "title": "Why does using a cloned hyper client with Tokio futures in a loop block even after the future resolves?", "body": "<p><code>tokio::run</code> creates a completely new event loop and thread pool (reactor + executor) every time you call it. This is really not what you want to do.</p>\n\n<p>The hyper client will bind it's state to the previous event loop and can't make progress if polled on the new one, since the old event loop will be destroyed after <code>run</code> finishes. That's why a new client works, but you can't reuse the old one.</p>\n\n<p>There are two solutions here:</p>\n\n<ul>\n<li><p>If the rest of your application is not using tokio, I would just use the synchronous <a href=\"https://docs.rs/reqwest/0.9.20/reqwest/struct.Client.html\" rel=\"nofollow noreferrer\">reqwest::Client</a>. If you don't need a lot of concurrency, a synchronous solution is much easier here.</p></li>\n<li><p>if you are using tokio, use <a href=\"https://docs.rs/tokio/0.2.0-alpha.2/tokio/fn.spawn.html\" rel=\"nofollow noreferrer\">tokio::spawn</a> inside another Future together with <a href=\"https://docs.rs/tokio-timer/0.3.0-alpha.2/tokio_timer/struct.Timeout.html\" rel=\"nofollow noreferrer\">tokio_timer::Timeout</a> to run the checks and then wait for the specified amount of time on the event loop.</p></li>\n</ul>\n\n<h2>async/await Example</h2>\n\n<p>The new async/await support makes code like this much easier to write.</p>\n\n<p>This example currently only works on the <code>nightly</code>  compiler with <code>tokio-0.3.0-alpha.2</code> and the current <code>hyper</code> master branch:</p>\n\n<pre><code>[dependencies]\ntokio = \"0.3.0-alpha.2\"\ntokio-timer = \"0.3.0-alpha.2\"\nhyper = { git = \"https://github.com/hyperium/hyper.git\" }\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use tokio::timer::Interval;\nuse hyper::{Client, Uri};\n\nuse std::time::Duration;\n\n#[tokio::main]\nasync fn main() {\n    let client = Client::new();\n    let second_interval = 120;\n    let mut interval = Interval::new_interval(Duration::from_secs(second_interval));\n    let uri = Uri::from_static(\"http://httpbin.org/ip\");\n\n    loop {\n        let res = Client.get(uri.clone()).await.unwrap();\n        // Do what you need to with the response...\n        interval.next().await;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 61, "user_id": 7860352, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9c1141e91d7f321af2c63571ccd95e8c?s=128&d=identicon&r=PG&f=1", "display_name": "Jarvis42", "link": "https://stackoverflow.com/users/7860352/jarvis42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 254, "favorite_count": 0, "accepted_answer_id": 57610101, "answer_count": 1, "score": 1, "last_activity_date": 1566481510, "creation_date": 1566384205, "last_edit_date": 1566393177, "question_id": 57589869, "link": "https://stackoverflow.com/questions/57589869/why-does-using-a-cloned-hyper-client-with-tokio-futures-in-a-loop-block-even-aft", "title": "Why does using a cloned hyper client with Tokio futures in a loop block even after the future resolves?", "body": "<p>I have a service which updates cache data on a fixed interval. Every N seconds it will trigger a future using a loop (<code>tokio::run(future_update(http_client.clone()))</code>), but it is not returned to the parent function where the future resolved. The loop blocks and I get only one iteration.</p>\n\n<p>When I create a new hyper HTTP client instead of passing a cloned one then everything works correctly. It's does not working <code>Arc&lt;Client&gt;</code> either.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn trigger_cache_reload(http_client: Arc&lt;Client&lt;HttpConnector, Body&gt;&gt;) {\n    let load_interval_sec = get_load_interval_sec(conf.load_interval_seconds.clone());\n\n    std::thread::spawn(move || loop {\n        let http_client = http_client.clone();\n\n        info!(\"Woke up\");\n        tokio::run(pipeline(http_client));\n        info!(\n            \"Pipeline run complete. Huuhh Now I need sleep of {} secs. Sleeping\",\n            load_interval_sec\n        );\n        std::thread::sleep(std::time::Duration::from_secs(load_interval_sec));\n    });\n}\n\nfn pipeline(\n    client: Arc&lt;Client&lt;HttpConnector, Body&gt;&gt;,\n) -&gt; Box&lt;dyn Future&lt;Item = (), Error = ()&gt; + Send&gt; {\n    let res = fetch_message_payload() //return type of this call is Box&lt;dyn Future&lt;Item = (), Error = Error&gt; + Send&gt;\n        .map_err(Error::from)\n        .and_then(|_| {\n            //let client = hyper::Client::builder().max_idle_per_host(1).build_http();\n            //if i create new client here every time and use it then all working is fine.\n            refresh_cache(client) //return type of this call is Box&lt;dyn Future&lt;Item = (), Error = Error&gt; + Send&gt;\n                .map_err(Error::from)\n                .and_then(|arg| {\n                    debug!(\"refresh_cache completed\");\n                    Ok(arg)\n                })\n        });\n\n    let res = res.or_else(|e| {\n        error!(\"error {:?}\", e);\n        Ok(())\n    });\n    Box::new(res)\n}\n</code></pre>\n\n<p>After calling of <code>trigger_cache_reload</code> once, I get the <code>\"woke up\"</code> log message. I also get <code>\"refresh_cache completed\"</code> log message after some time on successful completion of future. I do not get the <code>\"sleeping\"</code> log message with or without <code>Arc</code>.</p>\n\n<p>If I create a new client inside the future every time, I am able to get <code>\"sleeping\"</code> log messages.</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 1376, "user_id": 5190508, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/9a505583a1564c89608a5dc393580654?s=128&d=identicon&r=PG&f=1", "display_name": "S.R", "link": "https://stackoverflow.com/users/5190508/s-r"}, "edited": false, "score": 1, "creation_date": 1566373356, "post_id": 57586624, "comment_id": 101631171, "body": "and what is the problem? You can put you code on <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">play.rust-lang.org</a> to show minimal error example"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1566375053, "post_id": 57586624, "comment_id": 101631936, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=91356f1b65c4e918d04bc9c0f8c7a418\" rel=\"nofollow noreferrer\">Here is a runnable reproduction of the problem</a> - please try to include these yourself in future, as it makes it much easier to solve the problem!"}], "answers": [{"comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1566384365, "post_id": 57588642, "comment_id": 101637133, "body": "They were specifically asking for help with serialization/deserialization, so I don&#39;t think this answers their question."}, {"owner": {"reputation": 472, "user_id": 11847611, "user_type": "registered", "profile_image": "https://graph.facebook.com/2399816810113390/picture?type=large", "display_name": "Faheem Uz Zaman", "link": "https://stackoverflow.com/users/11847611/faheem-uz-zaman"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1566390536, "post_id": 57588642, "comment_id": 101640530, "body": "You may check the working of serialized or binary. I prefer the binary because it was fast and reliable for communication via the TCP channel."}], "tags": [], "owner": {"reputation": 472, "user_id": 11847611, "user_type": "registered", "profile_image": "https://graph.facebook.com/2399816810113390/picture?type=large", "display_name": "Faheem Uz Zaman", "link": "https://stackoverflow.com/users/11847611/faheem-uz-zaman"}, "is_accepted": false, "score": -1, "last_activity_date": 1566380083, "creation_date": 1566380083, "answer_id": 57588642, "question_id": 57586624, "link": "https://stackoverflow.com/questions/57586624/de-serializing-request-and-response-with-rust-serde/57588642#57588642", "title": "De-serializing request and response with rust serde", "body": "<p>Here is the complete example in which you can send the data in binary format rather than the serialized library.</p>\n\n<p>This is the main.rs file from the server. </p>\n\n<pre><code>use std::io::{ErrorKind, Read, Write};\nuse std::net::TcpListener;\nuse std::sync::mpsc;\nuse std::thread;\nuse std::thread::sleep;\nuse std::time::Duration; \n\nconst LOCAL: &amp;str = \"&lt;type your server ip&gt;:6000\";\nconst MSG_SIZE: usize = 100;\n\nfn main() {\n    let server = TcpListener::bind(LOCAL).expect(\"Listener failed to bind\");\n    server.set_nonblocking(true).expect(\"failed to initialize non-blocking\");\n\n    let mut clients = vec![];\n    let (tx, rx) = mpsc::channel::&lt;String&gt;();\n    loop {\n\n        if let Ok((mut socket, addr)) = server.accept() {\n            println!(\"Client {} connected\", addr);\n\n            let tx = tx.clone();\n            clients.push(socket.try_clone().expect(\"failed to clone client\"));\n\n            thread::spawn(move || loop {\n                let mut buff = vec![0; MSG_SIZE];\n\n                match socket.read_exact(&amp;mut buff) {\n                    Ok(_) =&gt; {\n                        let msg = buff.into_iter().take_while(|&amp;x| x != 0).collect::&lt;Vec&lt;_&gt;&gt;();\n                        let msg = String::from_utf8(msg).expect(\"Invalid utf8 message\");\n\n\n                        println!(\"{}: {:?}\", addr, msg);\n                        tx.send(msg).expect(\"failed to send msg to rx\");\n                    }, \n                    Err(ref err) if err.kind() == ErrorKind::WouldBlock =&gt; (),\n                    Err(_) =&gt; {\n                        println!(\"closing connection with: {}\", addr);\n                        break;\n                    }\n                }\n\n            });\n        }\n\n        if let Ok(msg) = rx.try_recv() {\n            clients = clients.into_iter().filter_map(|mut client| {\n                let mut buff = msg.clone().into_bytes();\n                buff.resize(MSG_SIZE, 0);\n\n                client.write_all(&amp;buff).map(|_| client).ok()\n            }).collect::&lt;Vec&lt;_&gt;&gt;();\n        }\n\n    }\n\n}\n</code></pre>\n\n<p>In the server project, you can also add the dependencies in <em>Cargo.toml</em> file.</p>\n\n<pre><code>[dependencies]\ntime = \"0.1.42\"\n</code></pre>\n\n<p>In last, this is the main.rs of the client project.</p>\n\n<pre><code>use std::io::{self, ErrorKind, Read, Write};\nuse std::net::TcpStream;\nuse std::sync::mpsc::{self, TryRecvError};\nuse std::thread;\nuse std::time::Duration;\n\n\nconst LOCAL: &amp;str = \"&lt;type your server ip&gt;:6000\";\nconst MSG_SIZE: usize = 100;\nfn main() {\n    let mut client = TcpStream::connect(LOCAL).expect(\"Stream failed to connect\");\n    client.set_nonblocking(true).expect(\"failed to initiate non-blocking\");\n    let (tx, rx) = mpsc::channel::&lt;String&gt;();\n    thread::spawn(move || loop {\n        let mut buff = vec![0; MSG_SIZE];\n        match client.read_exact(&amp;mut buff) {\n            Ok(_) =&gt; {\n                let msg = buff.into_iter().take_while(|&amp;x| x != 0).collect::&lt;Vec&lt;_&gt;&gt;();\n                println!(\"message recv {:?}\", msg);\n            },\n            Err(ref err) if err.kind() == ErrorKind::WouldBlock =&gt; (),\n            Err(_) =&gt; {\n                println!(\"connection with server was severed\");\n                break;\n            }\n        }\n\n        match rx.try_recv() {\n            Ok(msg) =&gt; {\n                let mut buff = msg.clone().into_bytes();\n                buff.resize(MSG_SIZE, 0);\n                client.write_all(&amp;buff).expect(\"writing to socket failed\");\n            }, \n            Err(TryRecvError::Empty) =&gt; (),\n            Err(TryRecvError::Disconnected) =&gt; break\n        }\n\n        thread::sleep(Duration::from_millis(100));\n    });\n\n    println!(\"Write a Message:\");\n    loop {\n        let mut buff = String::new();\n        io::stdin().read_line(&amp;mut buff).expect(\"reading from stdin failed\");\n        let msg = buff.trim().to_string();\n        if msg == \":quit\" || tx.send(msg).is_err() {break}\n    }\n    println!(\"bye bye!\");\n}\n</code></pre>\n"}], "owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 289, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566380083, "creation_date": 1566372848, "last_edit_date": 1566378615, "question_id": 57586624, "link": "https://stackoverflow.com/questions/57586624/de-serializing-request-and-response-with-rust-serde", "title": "De-serializing request and response with rust serde", "body": "<p>I am trying to de/serialize request and response on server/client side. Below is my what I have tried :-</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::fmt;\nuse std::io::prelude::*;\nuse std::net::TcpStream;\n\nuse serde_derive::{Deserialize, Serialize};\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Address {\n    street: String,\n    city: String,\n    country: String,\n}\n\n#[derive(Serialize, Deserialize)]\nenum Gender {\n    Male,\n    Female,\n}\n\n// #[derive(Debug)] does this internally.\nimpl fmt::Debug for Gender {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        match self {\n            Gender::Male =&gt; write!(f, \"M\"),\n            Gender::Female =&gt; write!(f, \"F\"),\n            _ =&gt; write!(f, \"U\"),\n        }\n    }\n}\n\n#[derive(Serialize, Deserialize, PartialEq, Eq, Hash)]\nenum Level {\n    SSC,\n    HSC,\n    Graduation,\n}\n\nimpl fmt::Debug for Level {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        match self {\n            Level::SSC =&gt; write!(f, \"SSC\"),\n            Level::HSC =&gt; write!(f, \"HSC\"),\n            Level::Graduation =&gt; write!(f, \"Graduation\"),\n            _ =&gt; write!(f, \"Unknown\"),\n        }\n    }\n}\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Person {\n    ssn: String,\n    age: u16,\n    name: String,\n    gender: Gender,\n    contacts: Vec&lt;String&gt;,\n    address: Address,\n    education: HashMap&lt;Level, i32&gt;,\n}\n\n#[derive(Serialize, Deserialize, Debug)]\nenum Message {\n    Request { ssn: String },\n    Response(Person),\n    Invalid,\n}\n\nfn handle_client(mut stream: TcpStream) {\n    // read data into buffer.\n    let mut buffer = Vec::new();\n    match stream.read_to_end(&amp;mut buffer) {\n        Ok(n) =&gt; {\n            if n == 0 {\n                println!(\"connection closed!!!\");\n                return;\n            }\n            let req = match serde_json::from_slice::&lt;Message::Request&gt;(&amp;buffer) {\n                Ok(req) =&gt; {\n                    println!(\"Received a valid request: {:?}\", req);\n                    req\n                }\n                Err(err) =&gt; {\n                    let message = String::from_utf8_lossy(&amp;buffer).to_string();\n                    println!(\"Received an invalid message : {} ({})\", message, err);\n                    Message::Invalid\n                }\n            };\n        }\n        Err(err) =&gt; println!(\"error\"),\n    }\n}\n</code></pre>\n\n<p>This is where I am stuck (being a beginner in rust). Can anyone please help me with finding standard way for de/serializing request/response.</p>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 2, "creation_date": 1566370076, "post_id": 57585052, "comment_id": 101629676, "body": "If they have no interest in state management, why not just <code>.render(|_, image| {...})</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 3, "creation_date": 1566393559, "post_id": 57585052, "comment_id": 101642559, "body": "@zrzka I&#39;m guessing that the state is a user-specified generic type, so they have to provide <i>something</i>. I also think the question is more about how to remove that &quot;unneeded&quot; parameter at all."}], "answers": [{"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 1, "last_activity_date": 1566484397, "creation_date": 1566484397, "answer_id": 57611739, "question_id": 57585052, "link": "https://stackoverflow.com/questions/57585052/is-there-a-way-to-accept-multiple-arities-of-callback-in-rust/57611739#57611739", "title": "Is there a way to accept multiple arities of callback in Rust?", "body": "<p>I think that the only way is to use <a href=\"https://doc.rust-lang.org/unstable-book/language-features/optin-builtin-traits.html\" rel=\"nofollow noreferrer\">auto traits</a> with opt out if you want stick with this design. But it requires nightly. An example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(optin_builtin_traits)]\n\n// Implement DummyState for everything ...\nauto trait DummyState {}\n// ... but opt-out for ()\nimpl !DummyState for () {}\n\ntrait RenderCallback&lt;State&gt; {\n    fn render(&amp;mut self, state: &amp;mut State, num: u8);\n}\n\n// Implement render callback for any type that implements DummyState\nimpl&lt;F, State&gt; RenderCallback&lt;State&gt; for F\nwhere\n    F: FnMut(&amp;mut State, u8),\n    State: DummyState, // DummyState means any type except opted out ()\n{\n    fn render(&amp;mut self, state: &amp;mut State, num: u8) {\n        self(state, num)\n    }\n}\n\n// Implement render callback for (), which doesn't implement DummyState,\n// so there's no overlap\nimpl&lt;F&gt; RenderCallback&lt;()&gt; for F\nwhere\n    F: FnMut(u8),\n{\n    fn render(&amp;mut self, _state: &amp;mut (), num: u8) {\n        self(num)\n    }\n}\n\nfn with_state() {\n    struct MyState {\n        x: u8,\n    };\n\n    println!(\"with_state...\");\n    let mut state = MyState { x: 0 };\n    let mut callback = |state: &amp;mut MyState, num: u8| {\n        state.x += num;\n        println!(\"{}\", state.x);\n    };\n    callback.render(&amp;mut state, 1);\n    callback.render(&amp;mut state, 2);\n    callback.render(&amp;mut state, 3);\n}\n\nfn without_state() {\n    println!(\"without state...\");\n    let mut callback = |num: u8| {\n        println!(\"{}\", num);\n    };\n    callback.render(&amp;mut (), 1);\n    callback.render(&amp;mut (), 2);\n    callback.render(&amp;mut (), 3);\n}\n\nfn main() {\n    with_state();\n    without_state();\n}\n</code></pre>\n"}], "owner": {"reputation": 1218, "user_id": 3507731, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yXMo2.png?s=128&g=1", "display_name": "porglezomp", "link": "https://stackoverflow.com/users/3507731/porglezomp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 1, "accepted_answer_id": 57611739, "answer_count": 1, "score": 2, "last_activity_date": 1566484397, "creation_date": 1566365793, "last_edit_date": 1566393534, "question_id": 57585052, "link": "https://stackoverflow.com/questions/57585052/is-there-a-way-to-accept-multiple-arities-of-callback-in-rust", "title": "Is there a way to accept multiple arities of callback in Rust?", "body": "<p>I'm trying to implement syntax sugar for my library so that someone can write <code>.render(|image| { \u2026 })</code> instead of <code>.render(|(), image| { \u2026 })</code> if they have no interesting state management going on. I thought I would be able to do this by implementing a trait for all <code>FnMut(&amp;State, &amp;Image)</code>, and having a unit implementation for <code>FnMut(&amp;Image)</code>. Unfortunately, I get \"conflicting implementation\" errors when I try to implement this, because there's no reason something can't implement both of those <code>FnMut</code> traits.</p>\n\n<p>My current attempt looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait RenderCallback&lt;State&gt; {\n    fn render(&amp;mut self, state: &amp;mut State, image: &amp;mut Image);\n}\n\nimpl&lt;F, State&gt; RenderCallback&lt;State&gt; for F\nwhere\n    F: FnMut(&amp;mut State, &amp;mut Image),\n{\n    fn render(&amp;mut self, state: &amp;mut State, image: &amp;mut Image) {\n        self(state, image)\n    }\n}\n\nimpl&lt;F&gt; RenderCallback&lt;()&gt; for F\nwhere\n    F: FnMut(&amp;mut Image),\n{\n    fn render(&amp;mut self, state: &amp;mut State, image: &amp;mut Image) {\n        self(&amp;mut (), image)\n    }\n}\n</code></pre>\n\n<p>Is there some way to achieve this effect?</p>\n"}, {"tags": ["rust", "clion"], "comments": [{"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 0, "creation_date": 1566360125, "post_id": 57584111, "comment_id": 101626921, "body": "It is not clear what exactly you are actually asking.  Please edit your question to state explicitly the question you would like to have answered."}], "answers": [{"comments": [{"owner": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "edited": false, "score": 4, "creation_date": 1566384723, "post_id": 57585193, "comment_id": 101637329, "body": "On attempting to debug I now get: <code>com.jetbrains.cidr.execution.debugger.backend.gdb.GDBDriver$&zwnj;&#8203;GDBCommandException: &quot;C:&#47;Users&#47;Jonathan&#47;CLionProjects&#47;rust_proj&#47;target&#47;debug&#47;rust&zwnj;&#8203;_proj-587b28fba9c3bb&zwnj;&#8203;8c.exe&quot;: not in executable format: File format not recognized</code>. Any help?"}, {"owner": {"reputation": 51, "user_id": 6032076, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gvEEF.png?s=128&g=1", "display_name": "DavidTriphon", "link": "https://stackoverflow.com/users/6032076/davidtriphon"}, "edited": false, "score": 1, "creation_date": 1611907181, "post_id": 57585193, "comment_id": 116605597, "body": "re: the <code>not in executable format: File format not recognized</code> error, I am now getting it one year later after your post. I have yet to figure it out, but it appears that psotos on GitHub <a href=\"https://github.com/intellij-rust/intellij-rust/issues/5160\" rel=\"nofollow noreferrer\">here</a> solved his issue by making sure his rust library and debugger were of the same bitness (in his case, x64). I corrected the setting for myself but am still experiencing the same error."}, {"owner": {"reputation": 51, "user_id": 6032076, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/gvEEF.png?s=128&g=1", "display_name": "DavidTriphon", "link": "https://stackoverflow.com/users/6032076/davidtriphon"}, "edited": false, "score": 0, "creation_date": 1611948887, "post_id": 57585193, "comment_id": 116623573, "body": "I discovered my mistake. Though I set the rustup toolchain correctly, I set up my mingw environment wrong. When you configure your mingw, make sure not only to select the correct environment folder but to also select the correct debugger from the dropdown list at the bottom. If you simply clone your mingw and only select the right folder at the top, the debugger won&#39;t have changed bitness... As a result I had the weird symptom that 32 bit rustup worked for both mingw 32 and 64 and couldn&#39;t figure out why 64 didn&#39;t work for either, despite that compilation was x64."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 25, "last_activity_date": 1611920330, "last_edit_date": 1611920330, "creation_date": 1566366624, "answer_id": 57585193, "question_id": 57584111, "link": "https://stackoverflow.com/questions/57584111/msvc-toolchain-is-not-supported-please-use-gnu-toolchain/57585193#57585193", "title": "MSVC toolchain is not supported. Please use GNU toolchain", "body": "<p>Error message is related about Rust toolchain, if you haven't you need to install GNU based toolchain for Rust (<em>before installing please make sure that you are choosing the valid gnu based toolchain for your environment, if you are not sure please read the <strong>Note</strong> section</em>).</p>\n<pre><code>&gt; rustup toolchain install stable-x86_64-pc-windows-gnu\n</code></pre>\n<p>Then after easiest way to solve this problem set it as default toolchain</p>\n<pre><code>&gt; rustup default stable-x86_64-pc-windows-gnu\n</code></pre>\n<p><strong>Note :</strong>  Toolchain <strong>stable-x86_64-pc-windows</strong> is selected as an example; it is a solution for <strong>64-bit</strong> Windows via stable channel, another toolchain needs to be used for different architecture(<em>Details: please follow the official jetbrains guide from</em> <a href=\"https://stackoverflow.com/a/60805629/1601571\"><em>other answer</em></a>), also  you are free to use nightly or beta.</p>\n"}, {"tags": [], "owner": {"reputation": 585, "user_id": 3797758, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/EjWrX.png?s=128&g=1", "display_name": "user3797758", "link": "https://stackoverflow.com/users/3797758/user3797758"}, "is_accepted": false, "score": 5, "last_activity_date": 1588679669, "last_edit_date": 1588679669, "creation_date": 1584915662, "answer_id": 60805629, "question_id": 57584111, "link": "https://stackoverflow.com/questions/57584111/msvc-toolchain-is-not-supported-please-use-gnu-toolchain/60805629#60805629", "title": "MSVC toolchain is not supported. Please use GNU toolchain", "body": "<p>As well as <a href=\"https://stackoverflow.com/a/57585193/3797758\">\u00d6mer Erden's answer</a> it is worth pointing out that Jetbarins now has an article about how to configure Clion for Rust complete with some tips on what settings are applicable to Rust development.</p>\n\n<p><a href=\"https://blog.jetbrains.com/clion/2019/10/debugging-rust-code-in-clion/\" rel=\"nofollow noreferrer\">Debugging Rust Code in CLion</a></p>\n\n<p>Particularly this paragraph is relevant to the question:</p>\n\n<blockquote>\n  <p>On Windows, go to Settings | Build, Execution, Deployment | Toolchain\n  and set either <a href=\"https://www.jetbrains.com/help/clion/quick-tutorial-on-configuring-clion-on-windows.html\" rel=\"nofollow noreferrer\">Cygwin or MinGW</a> as your working environment. Then, run\n  <code>rustup toolchain list</code> and check the first line: it should be one of\n  the gnu versions matching the bitness of the debugger. For example, if\n  you\u2019re working on MinGW (32-bit), the default toolchain should be\n  <strong>i686-pc-windows-gnu</strong>. If you\u2019re on MinGW64, it should be\n  <strong>x86_64-pc-windows-gnu</strong>. You can set the appropriate toolchain by\n  running <code>rustup default &lt;toolchain_name&gt;</code>.</p>\n</blockquote>\n"}], "owner": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2711, "favorite_count": 5, "accepted_answer_id": 57585193, "answer_count": 2, "score": 17, "last_activity_date": 1611920330, "creation_date": 1566358392, "last_edit_date": 1566360662, "question_id": 57584111, "link": "https://stackoverflow.com/questions/57584111/msvc-toolchain-is-not-supported-please-use-gnu-toolchain", "title": "MSVC toolchain is not supported. Please use GNU toolchain", "body": "<p>I was trying to debug Rust in <a href=\"https://www.jetbrains.com/clion/\" rel=\"noreferrer\">CLion</a> when I was greeted with the aforementioned</p>\n\n<p><a href=\"https://i.stack.imgur.com/T73Ce.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/T73Ce.png\" alt=\"enter image description here\"></a></p>\n\n<p>I updated my toolchain setting to use the suggested default as such:</p>\n\n<p><a href=\"https://i.stack.imgur.com/dhbjE.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/dhbjE.png\" alt=\"enter image description here\"></a></p>\n\n<p>How can I fix this issue and get CLion to be able to debug Rust code?</p>\n\n<p>I did some searching but haven't found a simple answer (at at least one I can understand easily).</p>\n\n<p>Any help would be greatly appreciated.</p>\n"}, {"tags": ["rust", "windows-services", "rust-actix", "actix-web"], "answers": [{"tags": [], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "is_accepted": false, "score": 2, "last_activity_date": 1566406875, "creation_date": 1566406875, "answer_id": 57596228, "question_id": 57583262, "link": "https://stackoverflow.com/questions/57583262/problem-running-actix-web-as-windows-service/57596228#57596228", "title": "Problem running actix-web as Windows service", "body": "<p>Answering my own question. I think this is the best way to handle it, though I would be happy to see other solutions! </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn run_service() -&gt; Result&lt;()&gt; {\n\n    use futures::Future;\n\n    fn hi() -&gt; impl actix_web::Responder {\n        \"Hello!\\r\\n\"\n    }\n\n    let sys = actix_rt::System::new(\"test\");\n\n    actix_web::HttpServer::new(move || {\n        actix_web::App::new()\n            .route(\"/\", actix_web::web::get().to(hi))\n    })\n    .bind(\"0.0.0.0:3000\").unwrap()\n    .start();\n\n    let (mut send_stop, recv_stop) = {\n        let (p, c) = futures::sync::oneshot::channel::&lt;()&gt;();\n        (Some(p), c)\n    };\n\n    let event_handler = move |control_event| -&gt; ServiceControlHandlerResult {\n        match control_event {\n            ServiceControl::Interrogate =&gt; ServiceControlHandlerResult::NoError,\n            ServiceControl::Stop =&gt; {\n                send_stop.take().unwrap().send(()).unwrap();\n                ServiceControlHandlerResult::NoError\n            }\n            _ =&gt; ServiceControlHandlerResult::NotImplemented,\n        }\n    };\n\n    let status_handle = service_control_handler::register(SERVICE_NAME, event_handler)?;\n\n    status_handle.set_service_status(ServiceStatus {\n        service_type: SERVICE_TYPE,\n        current_state: ServiceState::Running,\n        controls_accepted: ServiceControlAccept::STOP,\n        exit_code: ServiceExitCode::Win32(0),\n        checkpoint: 0,\n        wait_hint: Duration::default(),\n    })?;\n\n    actix_rt::spawn(recv_stop.map(move |_| {\n        status_handle.set_service_status(ServiceStatus {\n            service_type: SERVICE_TYPE,\n            current_state: ServiceState::Stopped,\n            controls_accepted: ServiceControlAccept::empty(),\n            exit_code: ServiceExitCode::Win32(0),\n            checkpoint: 0,\n            wait_hint: Duration::default(),\n        }).unwrap();\n\n        actix_rt::System::current().stop()\n    }).map_err(|_| ()));\n\n    sys.run().unwrap();\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 495, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566406875, "creation_date": 1566350119, "last_edit_date": 1566400257, "question_id": 57583262, "link": "https://stackoverflow.com/questions/57583262/problem-running-actix-web-as-windows-service", "title": "Problem running actix-web as Windows service", "body": "<p>I'm trying to use <a href=\"https://github.com/mullvad/windows-service-rs\" rel=\"nofollow noreferrer\">windows-service</a> to run an actix web app. It provides a nice API and mostly works. I can start my service just fine. However, when I try to stop my service, I get the following error: <code>Error 109: The pipe has been ended</code> (it does stop the service however).</p>\n\n<p>I'm mostly just using the example provided for <code>windows-service</code>, but here is the relevant code (for context and all the wrapper functions, check out <a href=\"https://github.com/mullvad/windows-service-rs/blob/master/examples/ping_service.rs\" rel=\"nofollow noreferrer\">https://github.com/mullvad/windows-service-rs/blob/master/examples/ping_service.rs</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn run_service() -&gt; Result&lt;()&gt; {\n\n    fn hi() -&gt; impl actix_web::Responder {\n        \"Hello!\\r\\n\"\n    }\n\n    let sys = actix_rt::System::new(\"test\");\n\n    actix_web::HttpServer::new(move || {\n        actix_web::App::new()\n            .route(\"/\", actix_web::web::get().to(hi))\n    })\n    .bind(\"0.0.0.0:3000\").unwrap()\n    .start();\n\n    let event_handler = move |control_event| -&gt; ServiceControlHandlerResult {\n        match control_event {\n            ServiceControl::Interrogate =&gt; ServiceControlHandlerResult::NoError,\n            ServiceControl::Stop =&gt; {\n                actix_rt::System::with_current(|s| s.stop());\n                ServiceControlHandlerResult::NoError\n            }\n            _ =&gt; ServiceControlHandlerResult::NotImplemented,\n        }\n    };\n\n    let status_handle = service_control_handler::register(SERVICE_NAME, event_handler)?;\n\n    status_handle.set_service_status(ServiceStatus {\n        service_type: SERVICE_TYPE,\n        current_state: ServiceState::Running,\n        controls_accepted: ServiceControlAccept::STOP,\n        exit_code: ServiceExitCode::Win32(0),\n        checkpoint: 0,\n        wait_hint: Duration::default(),\n    })?;\n\n    sys.run().unwrap();\n\n    status_handle.set_service_status(ServiceStatus {\n        service_type: SERVICE_TYPE,\n        current_state: ServiceState::Stopped,\n        controls_accepted: ServiceControlAccept::empty(),\n        exit_code: ServiceExitCode::Win32(0),\n        checkpoint: 0,\n        wait_hint: Duration::default(),\n    })?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>If I put the <code>System::stop</code> in a <code>thread::spawn</code>, I get a different error: <code>The service did not return an error. This could be an internal Windows error or an internal service error</code>. In this case it does not stop the service.</p>\n\n<p>I've put in some logging, and it doesn't look like the code ever gets past the <code>sys.run().unwrap()</code>, which is strange. </p>\n\n<p>Any thoughts? I've never used the Windows Service API before so I don't really know what I'm doing. </p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I figured out what the main issue is: I have to notify Windows the service has stopped before stopping the service. I put together a clunky way to make it work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>std::thread::spawn(move || {\n    loop {\n        if shutdown_signal.load(Ordering::Relaxed) {\n\n            status_handle.set_service_status(ServiceStatus {\n                service_type: SERVICE_TYPE,\n                current_state: ServiceState::Stopped,\n                controls_accepted: ServiceControlAccept::empty(),\n                exit_code: ServiceExitCode::Win32(0),\n                checkpoint: 0,\n                wait_hint: Duration::default(),\n            }).unwrap();\n\n            actix_rt::System::current().stop();\n            break;\n        }\n    }\n});\nsys.run().unwrap();\n// ...\n</code></pre>\n\n<p>where <code>shutdown_signal</code> is an <code>AtomicBool</code> I set to true in the event handler. I'm going to see if I can do this instead somehow through <code>actix_rt</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "edited": false, "score": 0, "creation_date": 1566348662, "post_id": 57582685, "comment_id": 101625175, "body": "I think this looks good, sometimes a temporary variable solves a problem."}, {"owner": {"reputation": 9, "user_id": 10294107, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c09fc42a5f4a03d9cdfedbbf6aa8d61d?s=128&d=identicon&r=PG&f=1", "display_name": "Cassin", "link": "https://stackoverflow.com/users/10294107/cassin"}, "reply_to_user": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "edited": false, "score": 0, "creation_date": 1566354739, "post_id": 57582685, "comment_id": 101626135, "body": "This warning was caused by two-phase borrows.  <a href=\"https://rust-lang.github.io/rustc-guide/borrow_check/two_phase_borrows.html\" rel=\"nofollow noreferrer\">Two-phase borrows</a>  Therefore this answer may be only solution to solve the warning."}, {"owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "edited": false, "score": 0, "creation_date": 1566355138, "post_id": 57582685, "comment_id": 101626201, "body": "Nice, elaborate on your findings in the answer post above and it will be useful for the next one poor soul who encounters the same issue."}], "tags": [], "owner": {"reputation": 9, "user_id": 10294107, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c09fc42a5f4a03d9cdfedbbf6aa8d61d?s=128&d=identicon&r=PG&f=1", "display_name": "Cassin", "link": "https://stackoverflow.com/users/10294107/cassin"}, "is_accepted": false, "score": 0, "last_activity_date": 1566372135, "last_edit_date": 1566372135, "creation_date": 1566343821, "answer_id": 57582685, "question_id": 57582551, "link": "https://stackoverflow.com/questions/57582551/warninge0502-cannot-borrow-c-as-immutable-because-it-is-also-borrowed-as-mu/57582685#57582685", "title": "warning[E0502]: cannot borrow `c` as immutable because it is also borrowed as mutable", "body": "<pre><code>- c[i+1][j] += c[i][j];\n- c[i+1][j+1] += c[i][j];\n\n+ let tmp = c[i][j];\n+ c[i+1][j] += tmp;\n+ c[i+1][j+1] += tmp;\n</code></pre>\n\n<p>This worked without a warning, but this way is not cool.</p>\n"}], "owner": {"reputation": 9, "user_id": 10294107, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c09fc42a5f4a03d9cdfedbbf6aa8d61d?s=128&d=identicon&r=PG&f=1", "display_name": "Cassin", "link": "https://stackoverflow.com/users/10294107/cassin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 92, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566372135, "creation_date": 1566342394, "last_edit_date": 1566343642, "question_id": 57582551, "link": "https://stackoverflow.com/questions/57582551/warninge0502-cannot-borrow-c-as-immutable-because-it-is-also-borrowed-as-mu", "title": "warning[E0502]: cannot borrow `c` as immutable because it is also borrowed as mutable", "body": "<p>This code compute combinations using mod by Pascal's triangle.</p>\n\n<p>MUsize is a struct that modulus automatically in operations.</p>\n\n<p>When I ran with the trait stores structs that implements operator overloading, I got errors.</p>\n\n<p>This warning is not occurred when I used usize instead of MUsize.</p>\n\n<p>Where should I modify?</p>\n\n<p>I think some traits that should be derived to MUsize are not derived compare with usize.</p>\n\n<pre><code>// pascal's triangle\n/*\nfrom AtCoder abc 132\nhttps://www.youtube.com/watch?v=mso8tE1yMl8\n*/\n/*\n    1\n   1 1\n  1 2 1\n 1 3 3 1\n\naCb -&gt; row: a, column: b\n*/\n\nstatic MOD: usize = 1_000_000_000 + 7;\nuse std::ops::{AddAssign, SubAssign, MulAssign};\nuse std::ops::{Add, Sub, Mul};\n#[derive(Copy, Clone, Debug)]\nstruct MUsize {x: usize}\nimpl MUsize {\n    fn new(x: usize) -&gt; MUsize {\n        MUsize{x: x%MOD}\n    }\n}\nimpl AddAssign for MUsize {\n    fn add_assign(&amp;mut self, other: MUsize) {\n        let tmp = self.x + other.x;\n        *self = MUsize {\n            x: if tmp &gt;= MOD {tmp - MOD} else {tmp}\n        };\n    }\n}\nimpl&lt;'a&gt; AddAssign&lt;&amp;'a MUsize&gt; for MUsize {\n    fn add_assign(&amp;mut self, other: &amp;MUsize) {\n        let tmp = self.x + other.x;\n        *self = MUsize {\n            x: if tmp &gt;= MOD {tmp - MOD} else {tmp}\n        };\n    }\n}\nimpl SubAssign for MUsize {\n    fn sub_assign(&amp;mut self, other: MUsize) {\n        let tmp = self.x + MOD - other.x;\n        *self = MUsize {\n            x: if tmp &gt;= MOD {tmp - MOD} else {tmp}\n        };\n    }\n}\nimpl MulAssign for MUsize {\n    fn mul_assign(&amp;mut self, other: MUsize) {\n        *self = MUsize {\n            x: self.x * other.x % MOD\n        };\n    }\n}\nimpl Add for MUsize {\n    type Output = MUsize;\n    fn add(self, other: MUsize) -&gt; MUsize {\n        let mut res = MUsize::new(self.x);\n        res += other.clone();\n        res\n    }\n}\nimpl Sub for MUsize {\n    type Output = MUsize;\n    fn sub(self, other: MUsize) -&gt; MUsize {\n        let mut res = MUsize::new(self.x);\n        res -= other;\n        res\n    }\n}\nimpl Mul for MUsize {\n    type Output = MUsize;\n    fn mul(self, other: MUsize) -&gt; MUsize {\n        let mut res = MUsize::new(self.x);\n        res *= other;\n        res\n    }\n}\n\nstruct C {\n    c: Vec&lt;Vec&lt;MUsize&gt;&gt;\n}\nimpl C {\n    fn new(max: usize) -&gt; C {\n        let mut c = vec![vec![MUsize::new(0); max+2]; max+2];\n        c[0][0] = MUsize::new(1);\n        for i in 0..max+1 {\n            for j in 0..i+1 {\n                c[i+1][j] += c[i][j];\n                c[i+1][j+1] += c[i][j];\n            }\n        }\n        C {c}\n    }\n    fn c(&amp;self, n: usize, k: usize) -&gt; usize {\n        self.c[n][k].x\n    }\n}\n\nfn main() {\n    let c = C::new(40);\n    println!(\"{}\", c.c(5, 2));\n}\n</code></pre>\n\n<pre class=\"lang-sh prettyprint-override\"><code>   warning[E0502]: cannot borrow `c` as immutable because it is also borrowed as mutable\n      --&gt; src/main.rs:83:30\n       |\n    83 |                 c[i+1][j] += c[i][j];\n       |                 -------------^------\n       |                 |            |\n       |                 |            immutable borrow occurs here\n       |                 mutable borrow occurs here\n       |                 mutable borrow later used here\n       |\n       = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n       = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n\n    warning[E0502]: cannot borrow `c` as immutable because it is also borrowed as mutable\n      --&gt; src/main.rs:84:32\n       |\n    84 |                 c[i+1][j+1] += c[i][j];\n       |                 ---------------^------\n       |                 |              |\n       |                 |              immutable borrow occurs here\n       |                 mutable borrow occurs here\n       |                 mutable borrow later used here\n       |\n       = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n       = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n\n        Finished dev [unoptimized + debuginfo] target(s) in 0.47s\n</code></pre>\n"}, {"tags": ["ubuntu", "rust", "vulkan", "amethyst"], "comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566371668, "post_id": 57579946, "comment_id": 101630405, "body": "Same question on Reddit <a href=\"https://www.reddit.com/r/rust_gamedev/comments/csrymk/ubuntuamethyst_failing_to_run_amethyststarter2d/\" rel=\"nofollow noreferrer\">reddit.com/r/rust_gamedev/comments/csrymk/&hellip;</a>"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 2, "creation_date": 1566371939, "post_id": 57579946, "comment_id": 101630527, "body": "I believe that this has nothing to do with Rust. Did you <a href=\"https://linuxconfig.org/install-and-test-vulkan-on-linux#h7-2-ubuntu\" rel=\"nofollow noreferrer\">install Vulkan</a> properly with all the required drivers? What does the <code>vulkaninfo</code> say? Do other Vulkan apps work properly on your system?"}], "owner": {"reputation": 21, "user_id": 11622566, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5939ffd63676ba8a831fcad8948fa15f?s=128&d=identicon&r=PG&f=1", "display_name": "usummon", "link": "https://stackoverflow.com/users/11622566/usummon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 632, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1566328041, "creation_date": 1566327171, "last_edit_date": 1566328041, "question_id": 57579946, "link": "https://stackoverflow.com/questions/57579946/unable-to-run-amethyst-starter-template-vkerrorerror-incompatible-driver", "title": "Unable to Run Amethyst Starter Template: &#39;VkError(ERROR_INCOMPATIBLE_DRIVER)&#39;", "body": "<p>I'm trying to run an Amethyst project, however I keep coming across an error that prevents me from getting a window to open.</p>\n\n<p>I have installed the dependencies mentioned in the official Amethyst GitHub page and am using the <a href=\"https://github.com/amethyst/amethyst-starter-2d/tree/fd8bff9ea6184c806064df3978fe358d3c5666da\" rel=\"nofollow noreferrer\">2D starter template</a>. I did not make any alterations to the code in the repository when running the program.</p>\n\n<p>The error report with BACKTRACE=1:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    Finished dev [unoptimized + debuginfo] target(s) in 10.75s\n     Running `target/debug/amethyst-starter-2d`\n[INFO][winit::platform::platform::x11::window] Guessed window DPI factor: 1\n[INFO][amethyst::app] Initializing Amethyst...\n[INFO][amethyst::app] Version: 0.12.0\n[INFO][amethyst::app] Platform: x86_64-unknown-linux-gnu\n[INFO][amethyst::app] Amethyst git commit: \n[INFO][amethyst::app] Rustc version: 1.39.0-nightly Nightly\n[INFO][amethyst::app] Rustc git commit: bdfd698f37184da42254a03ed466ab1f90e6fb6c\n[WARN][gfx_backend_vulkan] Unable to find extension: VK_KHR_surface\n[WARN][gfx_backend_vulkan] Unable to find extension: VK_KHR_xlib_surface\n[WARN][gfx_backend_vulkan] Unable to find extension: VK_KHR_xcb_surface\n[WARN][gfx_backend_vulkan] Unable to find extension: VK_KHR_wayland_surface\nthread 'main' panicked at 'Unable to create Vulkan instance: VkError(ERROR_INCOMPATIBLE_DRIVER)', src/libcore/result.rs:1084:5\nstack backtrace:\n   0: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.34/src/backtrace/libunwind.rs:88\n   1: backtrace::backtrace::trace_unsynchronized\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.34/src/backtrace/mod.rs:66\n   2: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:47\n   3: std::sys_common::backtrace::print\n             at src/libstd/sys_common/backtrace.rs:36\n   4: std::panicking::default_hook::{{closure}}\n             at src/libstd/panicking.rs:200\n   5: std::panicking::default_hook\n             at src/libstd/panicking.rs:214\n   6: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:477\n   7: std::panicking::continue_panic_fmt\n             at src/libstd/panicking.rs:384\n   8: rust_begin_unwind\n             at src/libstd/panicking.rs:311\n   9: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:85\n  10: core::result::unwrap_failed\n             at src/libcore/result.rs:1084\n  11: core::result::Result&lt;T,E&gt;::expect\n             at /rustc/bdfd698f37184da42254a03ed466ab1f90e6fb6c/src/libcore/result.rs:879\n  12: gfx_backend_vulkan::Instance::create\n             at /home/ganidhu/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-backend-vulkan-0.2.3/src/lib.rs:375\n  13: rendy_factory::factory::init\n             at /home/ganidhu/.cargo/registry/src/github.com-1ecc6299db9ec823/rendy-factory-0.3.1/src/factory.rs:1032\n  14: &lt;amethyst_rendy::system::RenderingSystem&lt;B,G&gt; as shred::system::RunNow&gt;::setup\n             at /home/ganidhu/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst_rendy-0.2.0/src/system.rs:150\n  15: shred::dispatch::dispatcher::Dispatcher::setup\n             at /home/ganidhu/.cargo/registry/src/github.com-1ecc6299db9ec823/shred-0.7.2/src/dispatch/dispatcher.rs:25\n  16: &lt;amethyst::game_data::GameDataBuilder as amethyst::game_data::DataInit&lt;amethyst::game_data::GameData&gt;&gt;::build\n             at /home/ganidhu/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.12.0/src/game_data.rs:300\n  17: amethyst::app::ApplicationBuilder&lt;S,T,E,X&gt;::build\n             at /home/ganidhu/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.12.0/src/app.rs:882\n  18: amethyst::app::CoreApplication&lt;T,E,R&gt;::new\n             at /home/ganidhu/.cargo/registry/src/github.com-1ecc6299db9ec823/amethyst-0.12.0/src/app.rs:196\n  19: amethyst_starter_2d::main\n             at src/main.rs:33\n  20: std::rt::lang_start::{{closure}}\n             at /rustc/bdfd698f37184da42254a03ed466ab1f90e6fb6c/src/libstd/rt.rs:64\n  21: std::rt::lang_start_internal::{{closure}}\n             at src/libstd/rt.rs:49\n  22: std::panicking::try::do_call\n             at src/libstd/panicking.rs:296\n  23: __rust_maybe_catch_panic\n             at src/libpanic_unwind/lib.rs:80\n  24: std::panicking::try\n             at src/libstd/panicking.rs:275\n  25: std::panic::catch_unwind\n             at src/libstd/panic.rs:394\n  26: std::rt::lang_start_internal\n             at src/libstd/rt.rs:48\n  27: std::rt::lang_start\n             at /rustc/bdfd698f37184da42254a03ed466ab1f90e6fb6c/src/libstd/rt.rs:64\n  28: main\n  29: __libc_start_main\n  30: _start\n</code></pre>\n"}, {"tags": ["rust", "channel"], "comments": [{"owner": {"reputation": 762, "user_id": 4949386, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a4f78608dae9e9cf14a732e366ea016a?s=128&d=identicon&r=PG&f=1", "display_name": "zino", "link": "https://stackoverflow.com/users/4949386/zino"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566323278, "post_id": 57578601, "comment_id": 101617975, "body": "Thanks, but Id like to clear the high queue first before taking from the low queue: <code>If multiple operations are ready at the same time, a random one among them is selected</code>. I did see that page briefly, but was also interested in other alternatives that I may not have considered as Im new to Rust. Would a binary heap work? <a href=\"https://doc.rust-lang.org/std/collections/binary_heap/\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/collections/binary_heap</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566323607, "post_id": 57578601, "comment_id": 101618121, "body": "Have you seen <a href=\"https://github.com/crossbeam-rs/crossbeam/issues/288\" rel=\"nofollow noreferrer\">crossbeam-channel: Select with priorities?</a>"}, {"owner": {"reputation": 762, "user_id": 4949386, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a4f78608dae9e9cf14a732e366ea016a?s=128&d=identicon&r=PG&f=1", "display_name": "zino", "link": "https://stackoverflow.com/users/4949386/zino"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566324693, "post_id": 57578601, "comment_id": 101618546, "body": "I see, does look useful. So I would use <code>high.try_recv</code> when when I get a message from the low queue, and make sure <code>high.len == 0</code> before then processing the low items? I think it could work, thanks."}], "owner": {"reputation": 762, "user_id": 4949386, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a4f78608dae9e9cf14a732e366ea016a?s=128&d=identicon&r=PG&f=1", "display_name": "zino", "link": "https://stackoverflow.com/users/4949386/zino"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 513, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1566323495, "creation_date": 1566321158, "last_edit_date": 1566323495, "question_id": 57578601, "link": "https://stackoverflow.com/questions/57578601/how-to-wait-on-multiple-mpsc-channels-with-different-priorities-to-create-an-ord", "title": "How to wait on multiple MPSC channels with different priorities to create an ordered queue?", "body": "<p>I have a single thread that waits on a channel:</p>\n\n<pre><code>for msg in rx {}\n</code></pre>\n\n<p>I would like to wait on two channels, one with high priority and one with low priority. The for loop should take items from the high queue before looking at the low queue.</p>\n\n<p>Issues I'm having:</p>\n\n<ul>\n<li><p>I can either block on one channel, or use <code>try_recv</code> on both in a loop which is inefficient.</p></li>\n<li><p><a href=\"https://doc.rust-lang.org/1.9.0/std/sync/mpsc/struct.Select.html\" rel=\"nofollow noreferrer\"><code>Select</code></a> for MPSC channels is <a href=\"https://github.com/rust-lang/rust/issues/27800\" rel=\"nofollow noreferrer\">\"dubious\"</a>.</p></li>\n<li><p>I cannot use <a href=\"https://crates.io/crates/crossbeam-channel\" rel=\"nofollow noreferrer\">crossbeam_channel</a> because I'd like to clear the high queue first before taking from the low queue, but <a href=\"https://docs.rs/crossbeam-channel/0.3.9/crossbeam_channel/macro.select.html\" rel=\"nofollow noreferrer\"><code>select!</code></a> states:</p>\n\n<blockquote>\n  <p>If multiple operations are ready at the same time, a random one among them is selected</p>\n</blockquote></li>\n</ul>\n\n<p>What is the best way to implement this?</p>\n"}, {"tags": ["rust", "parser-generator", "nom"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1566310234, "post_id": 57575523, "comment_id": 101611348, "body": "This isn&#39;t a nom-specific problem, it&#39;s just purely a conceptual parsing / grammar question. Moreover, it&#39;s a very common parsing problem; it doesn&#39;t appear that you&#39;ve done the appropriate amount of research before asking this question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566310322, "post_id": 57575523, "comment_id": 101611412, "body": "I&#39;m 99% sure that state isn&#39;t required to address this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1566310422, "post_id": 57575523, "comment_id": 101611474, "body": "See also <a href=\"https://stackoverflow.com/q/52996557\">How to parse an arithmetic string expression with negative numbers and minus signs?</a>; <a href=\"https://stackoverflow.com/q/33158960\">Evaluate code, differentiating between minus and negative?</a>; <a href=\"https://stackoverflow.com/q/26529711\">How to differentiate &#39;-&#39; operator from a negative number for a tokenizer</a>; <a href=\"https://stackoverflow.com/q/27478834\">How Compiler distinguishes minus and negative number during parser process</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566310458, "post_id": 57575523, "comment_id": 101611493, "body": "<a href=\"https://www.google.com/search?q=site%3Astackoverflow.com+parser+negative+minus\" rel=\"nofollow noreferrer\">And many more similar questions</a>"}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566310617, "post_id": 57575523, "comment_id": 101611569, "body": "@Shepmaster Thank you for posting answers which do not cover that question. They all solve a similar problem, when someone writes a parser from scratch, but not the actual problem using nom. The question here targets specifically the usage of nom for such a standard use-case."}, {"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "edited": false, "score": 3, "creation_date": 1566311802, "post_id": 57575523, "comment_id": 101612237, "body": "Please provide your best attempt at creating a parser in the form of a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, with a specific implementation question."}, {"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 4, "creation_date": 1566311917, "post_id": 57575523, "comment_id": 101612313, "body": "<code>nom</code> isn&#39;t a parser, or a parser generator. <code>nom</code> is a library for easily crafting parsers in a parser-combinator fashion. How you tokenize is entirely up to you, and the linked questions address exactly what you&#39;re asking about."}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "reply_to_user": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 0, "creation_date": 1566467510, "post_id": 57575523, "comment_id": 101668778, "body": "@Zarenor But <code>nom</code> provides some features helping you to solve problems like this without reinventing the wheel. As you can see in the answer below. Sure you could post-process things like that. But often this makes things unnecessary complicated. And non of the linked questions addresses what I was asking about."}, {"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 0, "creation_date": 1566505013, "post_id": 57575523, "comment_id": 101687942, "body": "@Matthias If your answer is satisfactory to you, very well, but you&#39;re using <code>nom_locate</code> (a crate which isn&#39;t <code>nom</code>, or made by the creator of <code>nom</code>) and making a stateful parser, which does things in an unorthodox manner. I wouldn&#39;t rate it a particularly idiomatic solution, or very extensible. If it&#39;s what you wanted, I&#39;m happy, but it isn&#39;t the orthodox way to do things, and it may have different performance characteristics, or be harder to refactor later if you need to extend the code to do more."}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "reply_to_user": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 0, "creation_date": 1566541990, "post_id": 57575523, "comment_id": 101695952, "body": "@Zarenor. <code>nom_locate</code> is a kind of a helper crate for <code>nom</code>. You could write the needed lines of code by yourself... But why to reinvent the wheel? What do you mean with <i>unorthodox manner</i>? All the linked questions are either using states or a look behind technique (or using <code>yacc</code>). Do you mean the look behind approach would be more orthodox in <code>nom</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "is_accepted": true, "score": 1, "last_activity_date": 1566318093, "last_edit_date": 1566318093, "creation_date": 1566317918, "answer_id": 57577799, "question_id": 57575523, "link": "https://stackoverflow.com/questions/57575523/how-to-distinguish-between-minus-sign-and-negative-number-in-nom/57577799#57577799", "title": "How to distinguish between minus sign and negative number in nom?", "body": "<p>The best solution I found for now is using <a href=\"https://crates.io/crates/nom_locate\" rel=\"nofollow noreferrer\">nom_locate</a> with a span defined as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use nom_locate::LocatedSpanEx;\n\n#[derive(Clone, PartialEq, Debug)]\nstruct LexState {\n    pub accept_literal: bool,\n}\n\ntype Span&lt;'a&gt; = LocatedSpanEx&lt;&amp;'a str, LexState&gt;;\n</code></pre>\n\n<p>Then you can modify the state via</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn set_accept_literal(\n    value: bool,\n    code: IResult&lt;Span, TokenPayload&gt;,\n) -&gt; IResult&lt;Span, TokenPayload&gt; {\n    match code {\n        Ok(mut span) =&gt; {\n            span.0.extra.accept_literal = value;\n            Ok(span)\n        }\n        _ =&gt; code,\n    }\n}\n</code></pre>\n\n<p>where <code>TokenPayload</code> is an enum representing my token content.</p>\n\n<p>Now you can write the operator parser:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn mathematical_operators(code: Span) -&gt; IResult&lt;Span, TokenPayload&gt; {\n    set_accept_literal(\n        true,\n        alt((\n            map(tag(\"*\"), |_| TokenPayload::Multiply),\n            map(tag(\"/\"), |_| TokenPayload::Divide),\n            map(tag(\"+\"), |_| TokenPayload::Add),\n            map(tag(\"-\"), |_| TokenPayload::Subtract),\n            map(tag(\"%\"), |_| TokenPayload::Remainder),\n        ))(code),\n    )\n}\n</code></pre>\n\n<p>And the integer parser as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn parse_integer(code: Span) -&gt; IResult&lt;Span, TokenPayload&gt; {\n    let chars = \"1234567890\";\n    // Sign ?\n    let (code, sign) = opt(tag(\"-\"))(code)?;\n    let sign = sign.is_some();\n    if sign &amp;&amp; !code.extra.accept_literal {\n        return Err(nom::Err::Error((code, ErrorKind::IsNot)));\n    }\n    let (code, slice) = take_while(move |c| chars.contains(c))(code)?;\n    match slice.fragment.parse::&lt;i32&gt;() {\n        Ok(value) =&gt; set_accept_literal(\n            false,\n            Ok((code, TokenPayload::Int32(if sign { -value } else { value }))),\n        ),\n        Err(_) =&gt; Err(nom::Err::Error((code, ErrorKind::Tag))),\n    }\n}\n</code></pre>\n\n<p>This might not win a beauty contest but it works. The remaining pieces should be trivial.</p>\n"}], "owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 263, "favorite_count": 1, "accepted_answer_id": 57577799, "answer_count": 1, "score": -4, "last_activity_date": 1566318093, "creation_date": 1566310070, "last_edit_date": 1566310289, "question_id": 57575523, "link": "https://stackoverflow.com/questions/57575523/how-to-distinguish-between-minus-sign-and-negative-number-in-nom", "title": "How to distinguish between minus sign and negative number in nom?", "body": "<p>Using the parser generator <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">nom</a>, how can I write a parser which extracts the difference of the minus sign in the terms <code>1-2</code> and <code>1*-2</code> ?</p>\n\n<p>In the first example, I expect the tokens <code>1</code>, <code>-</code> and <code>2</code>. In the second the \"minus\" sign specifies the number being negative. The expected tokens are <code>1</code>, <code>*</code> and <code>-2</code>. Not <code>1</code>, <code>*</code>, <code>-</code> and <code>2</code>.</p>\n\n<p>How can I make nom stateful, with user-defined states such as <code>expect_literal: bool</code>?</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "edited": false, "score": 0, "creation_date": 1566310037, "post_id": 57575289, "comment_id": 101611237, "body": "Well I think I got it. I create two new vars per iteration and one is representing the col of matrix 2 and one the row of matrix 1. I transfer the ownership to the thread. But even if I do it like this I can&#39;t make the whole thing work.."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1566310147, "post_id": 57575289, "comment_id": 101611295, "body": "Feel free to experiment, but my gut tells me that spawning one thread per cell is going to be terribly inefficient."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1566310363, "post_id": 57575289, "comment_id": 101611440, "body": "An alternative could be to use rayon that has a thread pool, but I&#39;m not even sure that it would be more efficient."}], "owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 124, "favorite_count": 0, "closed_date": 1566310020, "answer_count": 0, "score": 1, "last_activity_date": 1566310093, "creation_date": 1566309303, "question_id": 57575289, "link": "https://stackoverflow.com/questions/57575289/transforming-naive-matrix-multiplication-to-one-thread-per-cell-multiplication-i", "closed_reason": "Duplicate", "title": "Transforming naive matrix multiplication to one thread per cell multiplication in Rust", "body": "<p>I'm struggeling to get my multi-threaded matrix multiplication compiling. I want to transfer the naive algorithm in a way that one thread calculates one cell of the result matrix. </p>\n\n<p>My code looks like this:</p>\n\n<pre><code>pub fn multiply_fast(mat1: &amp;Matrix, mat2: &amp;Matrix) -&gt; Matrix {\n    let result_mat = Matrix::new(mat1.height, mat2.width);\n\n    let mut handles = Vec::new();\n\n    // for each row of Matrix A\n    for i in 0..result_mat.height {\n        // for each col of Matrix B\n        for j in 0..result_mat.width {\n\n            let handle = thread::spawn(|| {\n                let mut c = 0_f64;\n                // foreach row of A / col of B\n                for z in 0..mat1.width {\n                    c += mat1.data[i * mat1.width + z] * mat2.data[z * mat2.width + j]\n                }\n                result_mat.data[i * result_mat.width + j] = c;\n            });\n            handles.push(handle);\n        }\n    }\n\n    for x in handles {\n        x.join().unwrap();\n    }\n    result_mat\n}\n</code></pre>\n\n<p>Rust Compiler tells me that mat1 and mat2 should have static lifetime. I think I get around this if I create data slices with just the values that one thread needs. Then I move them into the closure.</p>\n\n<p>I have a good basic understanding of all the aspects of Rust I think. But I can't get this work even after trying a lot. Can someone please provide me some code?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 3, "creation_date": 1566308019, "post_id": 57574748, "comment_id": 101609975, "body": "<b>tl:dr :</b> enclosing function must return <code>Result</code> with same <code>Error</code> type."}], "owner": {"reputation": 195, "user_id": 9077586, "user_type": "registered", "profile_image": "https://graph.facebook.com/10210175242088068/picture?type=large", "display_name": "Alesi Rowland", "link": "https://stackoverflow.com/users/9077586/alesi-rowland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1566308228, "answer_count": 0, "score": 1, "last_activity_date": 1566307675, "creation_date": 1566307490, "last_edit_date": 1566307675, "question_id": 57574748, "link": "https://stackoverflow.com/questions/57574748/operator-in-rust-causing-error-on-result-type", "closed_reason": "Duplicate", "title": "? Operator in rust causing error on Result type", "body": "<p>New to Rust. I'm trying to convert a Result type using the <code>?</code> operator. Commented out code works however replacing it with the line which uses the operator produces this error: </p>\n\n<pre><code>^^ cannot use the `?` operator in a function that returns `()`\n</code></pre>\n\n<p>Why is this? I thought using the ? should always work when Dealing with Result types however most of the time I try it insists () is being returned even when a match statement demonstrates it returning a Result type. I've seen this type of syntax in documentation which says it should be fine. </p>\n\n<pre><code>pub fn new(csv_file: String, portfolio_key: String, volatility_divisor: f64, raw_threshold: f64) {\n    let file = File::open(&amp;csv_file[..]).expect(\"Bad file name\");\n    let mut reader = csv::Reader::from_reader(file);\n    for l in reader.records() {\n        //                let l = match l {\n        //                    Ok(file) =&gt; file,\n        //                    Err(error) =&gt; panic!(\"ERROR: {}\", error),\n        //                };\n        let l = l?;\n        println!(\"{:?}\", l);\n    }\n}\n</code></pre>\n"}, {"tags": ["recursion", "rust", "flatten"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1566310607, "post_id": 57573212, "comment_id": 101611561, "body": "With a generator, that would be easy, but I have no idea about how to do it elegantly..."}], "answers": [{"comments": [{"owner": {"reputation": 2654, "user_id": 1153645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/adb60cb2ea576eeb47fc2f3ff5a3081b?s=128&d=identicon&r=PG", "display_name": "Alexx Roche", "link": "https://stackoverflow.com/users/1153645/alexx-roche"}, "edited": false, "score": 0, "creation_date": 1599297808, "post_id": 57573812, "comment_id": 112735696, "body": "This is a nice example of flattening a struct, (and will probably be very useful to someone) but does not work with the struct provided in the question."}, {"owner": {"reputation": 2654, "user_id": 1153645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/adb60cb2ea576eeb47fc2f3ff5a3081b?s=128&d=identicon&r=PG", "display_name": "Alexx Roche", "link": "https://stackoverflow.com/users/1153645/alexx-roche"}, "edited": false, "score": 0, "creation_date": 1599297919, "post_id": 57573812, "comment_id": 112735717, "body": "Alternative playground link <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ddeaceb35eff4ffa049f4ce87d109f75\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1566311945, "last_edit_date": 1566311945, "creation_date": 1566304511, "answer_id": 57573812, "question_id": 57573212, "link": "https://stackoverflow.com/questions/57573212/how-do-i-flatten-a-recursive-structure-using-recursive-iterators/57573812#57573812", "title": "How do I flatten a recursive structure using recursive iterators?", "body": "<p>I'm not sure what exactly you want the result of \"traverse the <code>vb</code> vector and flatten it into <code>flat_c</code>\" to be, but here's a slightly simpler example of flattening a recursive structure, using <a href=\"https://doc.rust-lang.org/stable/std/iter/fn.once.html\" rel=\"nofollow noreferrer\"><code>once</code></a> for the value that corresponds to the current node, <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.chain\" rel=\"nofollow noreferrer\"><code>chain</code></a> to concatenate it with its children and <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>flat_map</code></a> to flatten everything:</p>\n\n<pre><code>use std::iter::once;\n\n#[derive(Debug)]\nstruct S {\n    name: String,\n    children: Vec&lt;S&gt;,\n}\n\nimpl S {\n    fn flat(self) -&gt; Vec&lt;String&gt; {\n        once(self.name)\n            .chain(self.children.into_iter().flat_map(|c| c.flat()))\n            .collect()\n    }\n}\n\nfn main() {\n    let s = S {\n        name: \"parent\".into(),\n        children: vec![\n            S {\n                name: \"child 1\".into(),\n                children: vec![],\n            },\n            S {\n                name: \"child 2\".into(),\n                children: vec![],\n            },\n        ],\n    };\n    println!(\"s: {:?}\", s);\n    println!(\"flat: {:?}\", s.flat());\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ddeaceb35eff4ffa049f4ce87d109f75\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 53, "user_id": 2346639, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aa4bcf7bbd3588afd885711c00f3ba43?s=128&d=identicon&r=PG", "display_name": "Kwelity", "link": "https://stackoverflow.com/users/2346639/kwelity"}, "edited": false, "score": 0, "creation_date": 1566313477, "post_id": 57576143, "comment_id": 101613268, "body": "Thank you, it looks like it&#39;s what I was looking for.  I&#39;ll validate your answer as soon as I played a little bit with your solution."}, {"owner": {"reputation": 53, "user_id": 2346639, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aa4bcf7bbd3588afd885711c00f3ba43?s=128&d=identicon&r=PG", "display_name": "Kwelity", "link": "https://stackoverflow.com/users/2346639/kwelity"}, "edited": false, "score": 0, "creation_date": 1566315264, "post_id": 57576143, "comment_id": 101614333, "body": "I finally went for Shepmaster&#39;s solution, as I find the Iterator impl more flexible, yours is valid non the less."}], "tags": [], "owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "is_accepted": false, "score": 2, "last_activity_date": 1566312506, "last_edit_date": 1566312506, "creation_date": 1566312163, "answer_id": 57576143, "question_id": 57573212, "link": "https://stackoverflow.com/questions/57573212/how-do-i-flatten-a-recursive-structure-using-recursive-iterators/57576143#57576143", "title": "How do I flatten a recursive structure using recursive iterators?", "body": "<p>There is my solution:</p>\n\n<pre><code>impl C {\n    fn flat(&amp;self) -&gt; Vec&lt;C&gt; {\n        let mut result = Vec::new();\n        result.push(C {\n            name: self.name.clone(),\n            vb: None,\n        });\n        if self.vb.is_some() {\n            result.extend(\n                (self.vb.as_ref().unwrap().iter())\n                    .flat_map(|b| b.c.as_ref().map(|c| c.flat()).unwrap_or(Vec::new())),\n            );\n        }\n        return result;\n    }\n}\n\nimpl A {\n    fn flat_c(self) -&gt; Self {\n        let fc = (self.vb.as_ref().unwrap().iter())\n            .flat_map(|b| b.c.as_ref().unwrap().flat())\n            .collect();\n\n        Self {\n            flat_c: Some(fc),\n            ..self\n        }\n    }\n}\n</code></pre>\n\n<p>It adds <code>flat</code> function for <code>C</code> because the <code>C</code> is the source of the recursion and only this struct may properly handle it.</p>\n\n<p>Because of those <code>Option</code>s it looks scary and there is hard to deal with cryptic error messages. This solution supposes that all <code>b.c</code>s of initial <code>a</code> is not a <code>None</code>. Otherwise, it will panic. My advice is to avoid using <code>Option&lt;Vec&gt;</code> and use just empty vector instead of <code>None</code>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=09ea11342cdd733b03172c0fc13c85fd\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=09ea11342cdd733b03172c0fc13c85fd</a></p>\n"}, {"comments": [{"owner": {"reputation": 53, "user_id": 2346639, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aa4bcf7bbd3588afd885711c00f3ba43?s=128&d=identicon&r=PG", "display_name": "Kwelity", "link": "https://stackoverflow.com/users/2346639/kwelity"}, "edited": false, "score": 1, "creation_date": 1566315031, "post_id": 57576610, "comment_id": 101614204, "body": "Thanks, I had the feeling I needed to implement some trait to make it more elegant.  And many thanks for the many resources."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1599297143, "last_edit_date": 1599297143, "creation_date": 1566313646, "answer_id": 57576610, "question_id": 57573212, "link": "https://stackoverflow.com/questions/57573212/how-do-i-flatten-a-recursive-structure-using-recursive-iterators/57576610#57576610", "title": "How do I flatten a recursive structure using recursive iterators?", "body": "<p>It's a good idea to be familiar with common data structures. You have a <a href=\"https://en.wikipedia.org/wiki/Tree_(data_structure)\" rel=\"nofollow noreferrer\">tree</a>, and there are several ways <a href=\"https://en.wikipedia.org/wiki/Tree_traversal\" rel=\"nofollow noreferrer\">to traverse a tree</a>. You haven't precisely specified which method to use, so I chose one arbitrarily that's easy to implement.</p>\n<p>The key here is to implement an iterator that keeps track of some state: all of the nodes yet to be visited. On each call to <code>Iterator::next</code>, we take the next value, save aside any new nodes to visit, and return the value.</p>\n<p>Once you have the iterator, you can <code>collect</code> it into a <code>Vec</code>.</p>\n<pre><code>use std::collections::VecDeque;\n\nimpl IntoIterator for A {\n    type IntoIter = IntoIter;\n    type Item = String;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        IntoIter {\n            remaining: self.vb.into_iter().flatten().collect(),\n        }\n    }\n}\n\nstruct IntoIter {\n    remaining: VecDeque&lt;B&gt;,\n}\n\nimpl Iterator for IntoIter {\n    type Item = String;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.remaining.pop_front().and_then(|b| {\n            b.c.map(|C { name, vb }| {\n                self.remaining.extend(vb.into_iter().flatten());\n\n                name\n            })\n        })\n    }\n}\n\nfn to_strings(a: A) -&gt; Vec&lt;String&gt; {\n    a.into_iter().collect()\n}\n\n#[derive(Debug, Clone)]\nstruct A {\n    vb: Option&lt;Vec&lt;B&gt;&gt;,\n}\n\n#[derive(Debug, Clone)]\nstruct B {\n    c: Option&lt;C&gt;,\n}\n\n#[derive(Debug, Clone)]\nstruct C {\n    name: String,\n    vb: Option&lt;Vec&lt;B&gt;&gt;,\n}\n\nfn main() {\n    let example: A = A {\n        vb: Some(vec![\n            B {\n                c: Some(C {\n                    name: &quot;Hello &quot;.to_string(),\n                    vb: None,\n                }),\n            },\n            B {\n                c: Some(C {\n                    name: &quot;World!&quot;.to_string(),\n                    vb: None,\n                }),\n            },\n        ]),\n    };\n    println!(&quot;The example struct: {:?}&quot;, example);\n    //clone a copy for a second example, because to_strings() takes ownership of the example A struct\n    let receipt: A = example.clone();\n    println!(&quot;Iterated: {:?}&quot;, to_strings(example));\n    // another example of using to_strings()\n    println!(\n        &quot;As a string: {:?}&quot;,\n        to_strings(receipt).into_iter().collect::&lt;String&gt;()\n    );\n}\n</code></pre>\n<p>From here, it should be straight-forward to create an iterator of <code>B</code> if that's what you need. Having all of the <code>None</code> values seemed silly, so I left them out and directly returned <code>String</code>s.</p>\n<p>I also made this a by-value iterator. You could follow the same pattern to create an iterator that returned references to the <code>B</code> / <code>String</code> and only clone them as needed.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30218886/155423\">How to implement Iterator and IntoIterator for a simple struct?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43833588/155423\">Implement IntoIterator for binary tree</a></li>\n<li><a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a></li>\n<li><a href=\"https://stackoverflow.com/q/40944473/155423\">Recursive inorder traversal of a binary search tree</a></li>\n</ul>\n"}], "owner": {"reputation": 53, "user_id": 2346639, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aa4bcf7bbd3588afd885711c00f3ba43?s=128&d=identicon&r=PG", "display_name": "Kwelity", "link": "https://stackoverflow.com/users/2346639/kwelity"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 749, "favorite_count": 0, "accepted_answer_id": 57576610, "answer_count": 3, "score": 4, "last_activity_date": 1599297143, "creation_date": 1566302497, "last_edit_date": 1566311751, "question_id": 57573212, "link": "https://stackoverflow.com/questions/57573212/how-do-i-flatten-a-recursive-structure-using-recursive-iterators", "title": "How do I flatten a recursive structure using recursive iterators?", "body": "<p>I'm trying to flatten a recursive structure but I'm having trouble with recursive iterators.</p>\n\n<p>Here's what the struct looks like:</p>\n\n<pre><code>#[derive(Debug, Clone)]\npub struct C {\n    name: String,\n    vb: Option&lt;Vec&lt;B&gt;&gt;,\n}\n\n#[derive(Debug, Clone)]\npub struct B {\n    c: Option&lt;C&gt;,\n}\n\n#[derive(Debug, Clone)]\npub struct A {\n    vb: Option&lt;Vec&lt;B&gt;&gt;,\n    flat_c: Option&lt;Vec&lt;C&gt;&gt;,\n}\n</code></pre>\n\n<p>My plan is to traverse the <code>vb</code> vector and flatten it into <code>flat_c</code>. I want it to look like this, or at least, be a <code>Vec&lt;String&gt;</code>:</p>\n\n<pre><code>Some([\n    C {\n        name: \"foo\",\n        vb: None,\n    },\n    C {\n        name: \"bar\",\n        vb: None,\n    },\n    C {\n        name: \"fizz\",\n        vb: None,\n    },\n    C {\n        name: \"buzz\",\n        vb: None,\n    },\n])\n</code></pre>\n\n<p>Here what I managed to do, somewhat flattening the struct, but only for the last element, as the recursion is not implemented.</p>\n\n<pre><code>impl A {\n    fn flat_c(self) -&gt; Self {\n        let fc: Vec&lt;C&gt; = self\n            .vb\n            .clone()\n            .unwrap()\n            .iter()\n            .flat_map(|x| x.c.as_ref().unwrap().vb.as_ref().unwrap().iter())\n            .cloned()\n            .map(|x| x.c.unwrap())\n            .collect();\n\n        Self {\n            flat_c: Some(fc),\n            ..self\n        }\n    }\n}\n\nfn main() {\n    let a = A {\n        vb: Some(vec![\n            B {\n                c: Some(C {\n                    name: \"foo\".to_string(),\n                    vb: Some(vec![B {\n                        c: Some(C {\n                            name: \"bar\".to_string(),\n                            vb: None,\n                        }),\n                    }]),\n                }),\n            },\n            B {\n                c: Some(C {\n                    name: \"fiz\".to_string(),\n                    vb: Some(vec![B {\n                        c: Some(C {\n                            name: \"buzz\".to_string(),\n                            vb: None,\n                        }),\n                    }]),\n                }),\n            },\n        ]),\n        flat_c: None,\n    };\n\n    let a = a.flat_c();\n    println!(\"a: {:#?}\", a);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d55f6bdedfddd639c5dcd29eb15ce040\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The output for <code>flat_c</code>:</p>\n\n<pre><code>Some([\n    C {\n        name: \"bar\",\n        vb: None,\n    },\n    C {\n        name: \"buzz\",\n        vb: None,\n    },\n])\n</code></pre>\n\n<p>I haven't dived into the <code>Iterator</code> trait implementation that might be required for this problem.</p>\n\n<p>How would I tackle this problem? Maybe using a <code>fold</code>? Perhaps a recursive approach is not even needed? I'm at loss.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566300758, "post_id": 57572457, "comment_id": 101605651, "body": "You can&#39;t return a borrowed <code>FooIndex&lt;&#39;a&gt;</code> unless <code>Foo</code> contains a <code>FooIndex&lt;&#39;a&gt;</code> to borrow. You can&#39;t create a <code>FooIndex</code> <i>inside</i> the <code>index</code> method and return it; that&#39;s a violation of the <code>Index</code> trait&#39;s interface. You&#39;ll be better served by just writing a <code>get</code> method."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1566300907, "post_id": 57572457, "comment_id": 101605744, "body": "Also: <a href=\"https://doc.rust-lang.org/error-index.html#E0207\" rel=\"nofollow noreferrer\">doc.rust-lang.org/error-index.html#E0207</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566301405, "post_id": 57572457, "comment_id": 101606011, "body": "Also read <a href=\"https://stackoverflow.com/questions/32682876/is-there-any-way-to-return-a-reference-to-a-variable-created-in-a-function\">Is there any way to return a reference to a variable created in a function?</a> to better understand the error message."}], "owner": {"reputation": 33, "user_id": 11951191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/195f69ea205c8840a4645f2ae48d445a?s=128&d=identicon&r=PG&f=1", "display_name": "cripplejayb", "link": "https://stackoverflow.com/users/11951191/cripplejayb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 43, "favorite_count": 0, "closed_date": 1566301061, "answer_count": 0, "score": 1, "last_activity_date": 1566299936, "creation_date": 1566299936, "question_id": 57572457, "link": "https://stackoverflow.com/questions/57572457/make-index-return-value-with-lifetime", "closed_reason": "Duplicate", "title": "Make index return value with lifetime", "body": "<p>I would like indexing of my type to return a structure bounded with lifetime. The structure needs to contain a reference to the original type to be able to run some methods on it, like <code>foo[index].bar()</code>. </p>\n\n<p>When I try a simple approach</p>\n\n<pre><code>impl&lt;'a&gt; Index&lt;usize&gt; for Foo {\n    type Output = FooIndex&lt;'a&gt;;\n\n    fn index(&amp;self, index: usize) -&gt; &amp;Self::Output {\n        FooIndex {\n            index,\n            foo: &amp;self,\n        }\n    }\n}\n</code></pre>\n\n<p>I get the following\n<code>error[E0207]: the lifetime parameter 'a is not constrained by the impl trait, self type, or predicates</code></p>\n\n<p>Is there any way how to do it?</p>\n"}, {"tags": ["rust", "locking", "deadlock"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1566311330, "post_id": 57571043, "comment_id": 101611964, "body": "You are using atomic orderings that aren&#39;t <code>SeqCst</code>. My rule of thumb is that using anything but <code>SeqCst</code> should be reserved for those people who really, honestly, truly, deeply understand what they are doing. I am not one of those people; are you? The usage of <code>foo.store(foo.load(...))</code> is not a good sign, based on my knowledge."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566313567, "post_id": 57571043, "comment_id": 101613320, "body": "You need the <code>Mutex</code> because <code>acquire</code>, <code>release</code> and <code>cancel</code> take <code>&amp;mut self</code>. You can&#39;t express <code>&amp;mut self</code> in Python or C++. It seems reasonable to make those take <code>&amp;self</code> so that you can use the lock by a shared reference, which is analogous to references in most other languages. (You will need to use interior mutability, e.g. <code>AtomicBool</code> for <code>bool</code>.)"}, {"owner": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566359143, "post_id": 57571043, "comment_id": 101626783, "body": "@Shepmaster I chose atomic not because I understand it well, just it&#39;s easy to share between thread for simulation of a distribute lock, I simply don&#39;t know other method."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566413983, "post_id": 57571043, "comment_id": 101652563, "body": "This was <a href=\"https://users.rust-lang.org/t/cancelling-a-distributed-lock-inside-a-mutex-from-another-thread-causes-a-deadlock/31624?u=shepmaster\" rel=\"nofollow noreferrer\">cross-posted to the user&#39;s forum</a>."}, {"owner": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566461062, "post_id": 57571043, "comment_id": 101665550, "body": "@trentcl  In my original implementation, the <code>flag</code> is not the only attribute need to be mutable. Do I have to change all those attribute into some <code>atomic</code> type, any suggestion?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566470082, "post_id": 57571043, "comment_id": 101670202, "body": "<code>&amp;mut</code> is a <i>unique</i> reference, meaning it can&#39;t be held while other references exist. If you need to mutate other members through a <i>shared</i> reference (<code>&amp;</code>), those members need to have interior mutability -- <code>Atomic</code>, or <code>Mutex</code>, or <code>UnsafeCell</code> if you know what you&#39;re doing. I&#39;m not sure I understand the data structure you&#39;re trying to implement so I can&#39;t be more specific than that. <a href=\"https://stackoverflow.com/a/51789056/3650362\">This answer</a> (I wrote) describes in more detail the difference between <code>&amp;</code> and <code>&amp;mut</code>."}, {"owner": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566472966, "post_id": 57571043, "comment_id": 101671832, "body": "@trentcl Thanks for the reply, having some new understanding. Can we say that all method of a struct take &amp;self is an indicator that the instance of the struct can be shared between thread?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566477701, "post_id": 57571043, "comment_id": 101674435, "body": "A method that takes <code>&amp;self</code> is a method that can be called by a shared reference, but <code>&amp;</code> is for all kinds of sharing, not only between threads. <a href=\"https://manishearth.github.io/blog/2015/05/17/the-problem-with-shared-mutability/\" rel=\"nofollow noreferrer\">Here&#39;s a blog post that illustrates some of the issues with shared mutability in single-threaded programs.</a> In order to be shared between threads, a type must also implement <code>Sync</code>."}], "owner": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 138, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1566447372, "creation_date": 1566294809, "last_edit_date": 1566447372, "question_id": 57571043, "link": "https://stackoverflow.com/questions/57571043/cancelling-a-distributed-lock-inside-a-mutex-from-another-thread-causes-a-deadlo", "title": "Cancelling a distributed lock inside a Mutex from another thread causes a deadlock", "body": "<p>I implemented a distributed lock based on ZooKeeper and I want to test cancellation of the distributed lock. This causes a dead lock.</p>\n\n<p>Here is code using <code>AtomicUsize</code> to simulate the ZooKeeper distributed lock (I chose <code>AtomicUsize</code> just because it's easy to share between thread, not sure if I using it in a preferred way).<br>\nCode updated: 2019-08-22<br>\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a72777e74cde68335d626ee02699d75c\" rel=\"nofollow noreferrer\">playground: <code>AtomicUsize</code> simulation</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n    sync::{\n        atomic::{self, Ordering},\n        Arc, Mutex,\n    },\n    thread,\n};\n\nfn main() {\n    // use AtomicUsize simulate zookeeper distrute lock;\n    // acting as a remote lock mechanism\n    let counter = Arc::new(atomic::AtomicUsize::new(1));\n\n    let lock1 = DistrLock::new(counter.clone());\n    let lock1_handle = Arc::new(Mutex::new(Box::new(lock1)));\n\n    let counter_thread = counter.clone();\n    let lock1_handle_thread = lock1_handle.clone();\n\n    // simulate another machine use distribute lock\n    let thandle = thread::spawn(move || {\n        let mut lock2 = DistrLock::new(counter_thread);\n\n        println!(\"lock 1\");\n        lock2.acquire().expect(\"debug thread1 1\"); // distribute lock acquired\n\n        thread::sleep_ms(10_000);\n\n        println!(\"lock2 release\");\n        lock2.release().expect(\"debug thread1 2\");\n    });\n\n    // second thread try cancelling lock1\n    let thandle = thread::spawn(move || {\n        thread::sleep_ms(2000); // lock1 mutex lock acquired in main thread wait for distribute lock\n\n        println!(\"lock 3\");\n        lock1_handle_thread\n            .lock() // wait for lock1 mutex release, dead lock because lock1 wait for distribute lock2 to release\n            .expect(\"debug thread2 1\")\n            .cancel() // test cancel for distribute lock\n            .expect(\"debug thread2 2\");\n\n        println!(\"lock 4\"); // can not reach until lock 2 release,  means can't cancel lock1 until lock1 get the distribute lock\n    });\n\n    thread::sleep_ms(1000);\n\n    println!(\"lock 2\");\n    lock1_handle\n        .lock() // mutex lock acquired\n        .expect(\"debug main 1\")\n        .acquire() // wait for distribute lock in_lock_2 to release\n        .expect(\"debug main 1.1\");\n\n    lock1_handle\n        .lock()\n        .expect(\"debug main 2\")\n        .release()\n        .expect(\"debug main 2.1\");\n\n    thandle.join().expect(\"debug main 3\");\n}\n\nstruct DistrLock {\n    counter: Arc&lt;atomic::AtomicUsize&gt;,\n    canceled: bool,\n}\n\nimpl DistrLock {\n    pub fn new(counter: Arc&lt;atomic::AtomicUsize&gt;) -&gt; DistrLock {\n        let lock = DistrLock {\n            counter: counter,\n            canceled: false,\n        };\n\n        lock\n    }\n\n    pub fn acquire(&amp;mut self) -&gt; Result&lt;bool, ()&gt; {\n        loop {\n            if self.canceled {\n                return Ok(false);\n            }\n\n            if self.counter.load(Ordering::SeqCst) &lt; 1 {\n                thread::sleep_ms(500);\n                continue;\n            } else {\n                // self.counter.store(self.counter.load(Ordering::Relaxed) - 1, Ordering::Relaxed);\n                self.counter\n                    .store(self.counter.load(Ordering::SeqCst) - 1, Ordering::SeqCst);\n                return Ok(true);\n            }\n        }\n    }\n\n    pub fn release(&amp;mut self) -&gt; Result&lt;(), ()&gt; {\n        // self.counter.store(self.counter.load(Ordering::Relaxed) + 1, Ordering::Relaxed);\n        self.counter\n            .store(self.counter.load(Ordering::SeqCst) + 1, Ordering::SeqCst);\n        Ok(())\n    }\n\n    pub fn cancel(&amp;mut self) -&gt; Result&lt;(), ()&gt; {\n        self.canceled = true;\n        Ok(())\n    }\n}\n\n</code></pre>\n\n<p>There would not be any problem implementing this in Python or C++ because I would not need a mutex to protect <code>ZkDistrLock</code>, I could just call <code>cancel</code> in a second thread.</p>\n\n<p>But in Rust, if I lose the <code>Mutex</code>, the compiler will complain that the use of <code>lock1</code> is not thread safe. </p>\n\n<p>Is there some way I can lose the <code>Mutex</code> or is there a different idiom that I can use?</p>\n\n<p>My <a href=\"https://github.com/ianzhang1988/TaskDispatch/blob/master/Utility/src/zoo_lock.rs\" rel=\"nofollow noreferrer\">original implementation</a> and in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ce4bbd3544718dcef9c0e4a6f5bf9920\" rel=\"nofollow noreferrer\">playground</a>. The playground includes the distributed lock implementation but not all code here, and can not compile.</p>\n"}, {"tags": ["c", "tcp", "rust", "tor"], "answers": [{"tags": [], "owner": {"reputation": 4662, "user_id": 13062813, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWdHF.png?s=128&g=1", "display_name": "Joshua", "link": "https://stackoverflow.com/users/13062813/joshua"}, "is_accepted": true, "score": 2, "last_activity_date": 1586009122, "last_edit_date": 1586009122, "creation_date": 1586007787, "answer_id": 61029003, "question_id": 57569681, "link": "https://stackoverflow.com/questions/57569681/is-it-possible-to-connect-to-tor-without-having-it-installed/61029003#61029003", "title": "Is it possible to connect to TOR without having it installed?", "body": "<p>Both of the Txtorcon and Stem libraries require a Tor binary already installed though. It is possible to use the Tor included with the Tor Browser Bundle, connecting on port 9150 (with control port of 9151).</p>\n\n<p>Better yet though, you can download the <a href=\"https://www.torproject.org/download/tor/\" rel=\"nofollow noreferrer\">\"Expert Bundle\"</a> to get the Tor binary without any browser.The expert bundle connects to the Tor network and allows you to make SOCKS5 connections and control port connections. You can control everything it does via the config file or in real time through a 'Tor controller' on the control port.<br>\nYou can download it from <a href=\"https://www.torproject.org/download/tor/\" rel=\"nofollow noreferrer\">Download</a> | <a href=\"https://www.softpedia.com/get/Security/Security-Related/Tor.shtml\" rel=\"nofollow noreferrer\">Mirror 1</a> </p>\n"}], "owner": {"reputation": 303, "user_id": 9750048, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f21cfd026d734661c84cbd0ab78bf0e0?s=128&d=identicon&r=PG&f=1", "display_name": "7hsk", "link": "https://stackoverflow.com/users/9750048/7hsk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 259, "favorite_count": 1, "accepted_answer_id": 61029003, "answer_count": 1, "score": 2, "last_activity_date": 1586020244, "creation_date": 1566290146, "last_edit_date": 1586020244, "question_id": 57569681, "link": "https://stackoverflow.com/questions/57569681/is-it-possible-to-connect-to-tor-without-having-it-installed", "title": "Is it possible to connect to TOR without having it installed?", "body": "<p>How do i connect to Tor via TCP in C or Rust, without having the Tor browser installed, in my windows pc?</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-crates"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1566289782, "post_id": 57569379, "comment_id": 101599772, "body": "<code>cargo install</code> is only for binaries, not for libraries, so it&#39;s useless here. What happens when you run <code>cargo build</code> in your project?"}, {"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1566290323, "post_id": 57569379, "comment_id": 101600059, "body": "If I include <code>extern crate clap; ... use clap::App; ... let matches = App::from_yaml(&quot;cli.yaml&quot;).get_matches();</code>, a <code>cargo build</code> command with <code>clap = &quot;2.33.0&quot;</code> in the <code>.toml</code> file results in <code>error[E0599]: no function or associated item named `from_yaml` found for type `clap::App&lt;&#39;_, &#39;_&gt;` in the current scope</code>."}, {"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1566290519, "post_id": 57569379, "comment_id": 101600150, "body": "@Jmb I understand that <code>cargo install</code> is only for binaries instead of libraries (after the fact, but before posting), but I would&#39;ve expected the initial entry into <code>Cargo.toml</code>, under <code>[dependencies]</code> to have worked &quot;out of the box&quot;."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1566290865, "post_id": 57569379, "comment_id": 101600341, "body": "If you want to use <code>App::from_yaml</code>, you have to <a href=\"https://docs.rs/clap/2.33.0/clap/#opt-in-features\" rel=\"nofollow noreferrer\">include the <code>yaml</code> feature</a>. Does the issue happen without that code in main.rs?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1566290890, "post_id": 57569379, "comment_id": 101600357, "body": "Clap does not support yaml by default. You need to put <code>clap = {version = &quot;~2.33.0&quot;, features = [&quot;yaml&quot;]}</code> in your <code>Cargo.toml</code> if you want yaml support: <a href=\"https://docs.rs/clap/2.33.0/clap/#optional-dependencies--features\" rel=\"nofollow noreferrer\">docs.rs/clap/2.33.0/clap/#optional-dependencies--features</a>"}, {"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1566293315, "post_id": 57569379, "comment_id": 101601684, "body": "@Jmb I updated my <code>Cargo.toml</code> file to use <code>clap = { version = &quot;2.33.0&quot;, features = [&quot;yaml&quot;] }</code> again. I was able to run <code>cargo build</code> successfully now (from the shell). I still have vscode complaining and underlining everything in red in the <code>Cargo.toml</code> file. Any suggestions to fix this completely? It seems close to a full resolution."}], "answers": [{"comments": [{"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1566293762, "post_id": 57570627, "comment_id": 101601927, "body": "It would seem like vscode is what led me astray. I <i>had</i> added <code>clap = { version = &quot;2.33.0&quot;, features = [&quot;yaml&quot;] }</code> into my <code>Cargo.toml</code> file at first, but the vscode + rls in this case mark everything in the <code>.toml</code> file as having errors. Any suggestions to fix this last detail?"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1566294012, "post_id": 57570627, "comment_id": 101602058, "body": "Did update my answer. I don&#39;t have these issues. I&#39;d guess that it can be caused by (not) installed extensions, etc. Restart VSCode and try to open your project folder again. Also I&#39;m not VSCode user, I&#39;ve got it only for checking / testing how the Rust support looks like there. Anyway, this kind of problem is out of scope for the SO."}, {"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1566294427, "post_id": 57570627, "comment_id": 101602324, "body": "Even after that, I still have the <code>.toml</code> file all underlined. In any case, I&#39;ve added a screenshot to the OP and accepted your answer. If you have more suggestions on that, I&#39;d like to hear them."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1566294791, "post_id": 57570627, "comment_id": 101602560, "body": "Hover your mouse cursor over these lines and VS Code will show a popup with an explanation what&#39;s wrong and which plugin thinks it&#39;s wrong. See <a href=\"https://www.dropbox.com/s/1hnvqm5lyru2li0/Screenshot%202019-08-20%20at%2011.51.17.png?dl=0\" rel=\"nofollow noreferrer\">this</a>."}, {"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1566296189, "post_id": 57570627, "comment_id": 101603297, "body": "Yes, I&#39;ve seen that and it only has the clap compilation error message I had included in the OP. Removing clap line from the file is what makes vscode happy. Wondering if it&#39;s a vscode issue specifically on Linux."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1566307187, "post_id": 57570627, "comment_id": 101609424, "body": "@code_dredd what&#39;s your Rust compiler version? I&#39;ve found couple of issues like <a href=\"https://github.com/clap-rs/clap/issues/1467\" rel=\"nofollow noreferrer\">this one</a> or <a href=\"https://github.com/rust-lang/rls/issues/1449\" rel=\"nofollow noreferrer\">this one</a>. <code>bitflags</code> crate 1.0.5 was yanked, but who knows, you can have it locally, you can have old Rust toolchain, RLS, ..."}, {"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1566351561, "post_id": 57570627, "comment_id": 101625612, "body": "Rust: <code>rustc 1.34.0 (91856ed52 2019-04-10)</code>; vscode <code>1.37.1</code>; RLS: <code>0.6.1</code>. I had read a bit about <code>bitflags</code>, but wasn&#39;t sure how to go about it or if that&#39;s just part of the installation and I don&#39;t need to take any action(s) on it."}, {"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1566360975, "post_id": 57570627, "comment_id": 101627062, "body": "Just FYI, the <code>Cargo.lock</code> file has the following version for <code>bitflags</code>: <code>version = &quot;1.1.0&quot;</code>."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 0, "creation_date": 1566368055, "post_id": 57570627, "comment_id": 101628856, "body": "@code_dredd thanks for the info, see my updated answer (Visual Studio Code section). I can reproduce this on macOS -&gt; not a Linux issue. You have to either a) update Rust to &gt;= 1.35.0, b) add <code>bitflags = &quot;=1.0.4&quot;</code> to the <code>Cargo.toml</code> file <code>dependencies</code> section. Both ways fixes the issue in the Visual Studio Code."}, {"owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "edited": false, "score": 1, "creation_date": 1566368687, "post_id": 57570627, "comment_id": 101629093, "body": "Confirmed. Updating rust with <code>rustup update</code> gets <code>rustc</code> to version <code>1.37.0</code> and <i>completely</i> fixes the problem. Thanks for the follow up and for reproducing the issue."}], "tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 3, "last_activity_date": 1566367926, "last_edit_date": 1566367926, "creation_date": 1566293436, "answer_id": 57570627, "question_id": 57569379, "link": "https://stackoverflow.com/questions/57569379/why-does-clap-fail-to-compile-when-added-to-cargo-toml/57570627#57570627", "title": "Why does clap fail to compile when added to Cargo.toml?", "body": "<h1>cargo install</h1>\n\n<p>There's misunderstanding about the <code>cargo install</code> command. You can learn more about it <a href=\"https://doc.rust-lang.org/cargo/commands/cargo-install.html\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<blockquote>\n  <p>This command manages Cargo\u2019s local set of installed binary crates. Only packages which have executable <code>[[bin]]</code> or <code>[[example]]</code> targets can be installed, and all executables are installed into the installation root\u2019s <code>bin</code> folder.</p>\n</blockquote>\n\n<p>It's not your case. The only thing you have to do is to list <code>clap</code> in the <code>dependencies</code> section (<code>Cargo.toml</code>). That's all. No need to use <code>cargo install</code> at all. <code>cargo build</code>, <code>cargo run</code>, ... commands will download &amp; compile &amp; statically link all dependencies.</p>\n\n<h1>An example</h1>\n\n<p>Folder structure:</p>\n\n<pre><code>.\n\u251c\u2500\u2500 Cargo.toml\n\u2514\u2500\u2500 src\n \u00a0\u00a0 \u251c\u2500\u2500 cli.yaml\n \u00a0\u00a0 \u2514\u2500\u2500 main.rs\n</code></pre>\n\n<p>Current directory:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ pwd\n/Users/robertvojta/Projects/stackoverflow/clap-yaml\n</code></pre>\n\n<p><code>Cargo.toml</code> content:</p>\n\n<pre><code>[package]\nname = \"clap-yaml\"\nversion = \"0.1.0\"\nauthors = [\"Zrzka\"]\nedition = \"2018\"\n\n[dependencies]\nclap = { version = \"2.33.0\", features = [\"yaml\"] }\n</code></pre>\n\n<p><code>src/cli.yaml</code> content:</p>\n\n<pre><code>name: clap-yaml\nversion: \"1.0\"\nauthor: Zrzka\nabout: Stackoverflow sample\nargs:\n  - lang:\n      short: l\n      long: lang\n      default_value: cz\n      takes_value: true\n      possible_values:\n        - cz\n        - en\n</code></pre>\n\n<p><code>src/main.rs</code> content:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use clap::{App, load_yaml};\n\nfn main() {\n    let yaml = load_yaml!(\"cli.yaml\");\n    let matches = App::from_yaml(yaml).get_matches();\n\n    match matches.value_of(\"lang\").unwrap() {\n        \"cz\" =&gt; println!(\"Ahoj\"),\n        \"en\" =&gt; println!(\"Hello\"),\n        _ =&gt; unreachable!(\"see possible_values in yaml, handled by clap\"),\n    };\n}\n</code></pre>\n\n<p>Run it with <code>cargo</code>:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ cargo -q run -- --lang en\nHello\n</code></pre>\n\n<p>Run it directly:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ cargo build\n    ...\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\n$ target/debug/clap-yaml --lang cz\nAhoj\n</code></pre>\n\n<h1>Visual Studio Code</h1>\n\n<blockquote>\n  <p>I still have vscode complaining and underlining everything in red in the <code>Cargo.toml</code> file. Any suggestions to fix this completely? It seems close to a full resolution.</p>\n</blockquote>\n\n<p>I can confirm that this problem do exist in Rust 1.34.0. I did install this version and I've got same symptoms:</p>\n\n<ul>\n<li>could not compile clap</li>\n<li>the whole <code>Cargo.toml</code> is underlined (error)</li>\n</ul>\n\n<p>There're two ways how to fix this.</p>\n\n<p>Update your <code>Cargo.toml</code> file <code>dependencies</code> section manually if you'd like to stick with Rust 1.34.0:</p>\n\n<pre><code>[dependencies]\nbitflags = \"=1.0.4\"\nclap = { version = \"2.33.0\", features = [\"yaml\"] }\n</code></pre>\n\n<p>Or update your Rust toolchain to >= 1.35.0.</p>\n\n<p>I just tested both ways and it works.</p>\n\n<p>Related issues:</p>\n\n<ul>\n<li><a href=\"https://github.com/clap-rs/clap/issues/1467\" rel=\"nofollow noreferrer\">Could not compile <code>clap</code>. process didn't exit successfully</a></li>\n<li><a href=\"https://github.com/rust-lang/rls/issues/1449\" rel=\"nofollow noreferrer\">Compiler panics on latest RLS when compiling crates that depend on <code>bitflags</code> 1.0.5</a></li>\n</ul>\n"}], "owner": {"reputation": 5338, "user_id": 4594973, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/USV9e.jpg?s=128&g=1", "display_name": "code_dredd", "link": "https://stackoverflow.com/users/4594973/code-dredd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 954, "favorite_count": 0, "accepted_answer_id": 57570627, "answer_count": 1, "score": 1, "last_activity_date": 1566367926, "creation_date": 1566288999, "last_edit_date": 1566294379, "question_id": 57569379, "link": "https://stackoverflow.com/questions/57569379/why-does-clap-fail-to-compile-when-added-to-cargo-toml", "title": "Why does clap fail to compile when added to Cargo.toml?", "body": "<h2>Summary</h2>\n\n<p>I'm fairly new to Rust and decided to use it to port an existing project into it. I intended to use <code>clap</code> to handle CLI options, but I keep getting errors.</p>\n\n<p><strong>What do I need to do for <code>clap</code> to install correctly so that it's usable in my project as a dependency (e.g. <code>extern crate clap; [...] use clap::App; [...]</code>?</strong></p>\n\n<p>I haven't had problems with other crates (so far), so I'm not sure what's so different here or if there's a problem with the crate itself.</p>\n\n<p>I've already seen a few questions (e.g. <a href=\"https://stackoverflow.com/q/37706999/1233251\">this one</a>), which simply suggests that the dependency be added into the <code>.toml</code> file or don't seem to provide a solution to what I'm seeing.</p>\n\n<p>I'm in Ubuntu Linux, if that makes a difference.</p>\n\n<h2>What I Tried</h2>\n\n<p>Adding <code>clap = \"2.33.0\"</code> to my <code>Cargo.toml</code> file (see <a href=\"https://crates.io/crates/clap\" rel=\"nofollow noreferrer\">https://crates.io/crates/clap</a>) causes VSCode (through RLS) to log the following:</p>\n\n<pre><code>{\n    \"resource\": \"[...]/Projects/takeout/Cargo.toml\",\n    \"owner\": \"rust\",\n    \"severity\": 8,\n    \"message\": \"Could not compile `clap`.\\nprocess didn't exit successfully: `[...]/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls --crate-name clap [...]/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.0/src/lib.rs --color never --crate-type lib --emit=dep-info,metadata -C debuginfo=2 --cfg 'feature=\\\"ansi_term\\\"' --cfg 'feature=\\\"atty\\\"' --cfg 'feature=\\\"color\\\"' --cfg 'feature=\\\"default\\\"' --cfg 'feature=\\\"strsim\\\"' --cfg 'feature=\\\"suggestions\\\"' --cfg 'feature=\\\"vec_map\\\"' -C metadata=630980a214d5fd10 -C extra-filename=-630980a214d5fd10 --out-dir [...]/Projects/takeout/target/rls/debug/deps -L dependency=[...]/Projects/takeout/target/rls/debug/deps --extern ansi_term=[...]/Projects/takeout/target/rls/debug/deps/libansi_term-1510a9addefc0253.rmeta --extern atty=[...]/Projects/takeout/target/rls/debug/deps/libatty-7c4847fd9fc1e3d9.rmeta --extern bitflags=[...]/Projects/takeout/target/rls/debug/deps/libbitflags-8369a9aec15a5abb.rmeta --extern strsim=[...]/Projects/takeout/target/rls/debug/deps/libstrsim-301d1cf239e9cd24.rmeta --extern textwrap=[...]/Projects/takeout/target/rls/debug/deps/libtextwrap-a799d71e2d028df4.rmeta --extern unicode_width=[...]/Projects/takeout/target/rls/debug/deps/libunicode_width-58e38dd9d658dcfb.rmeta --extern vec_map=[...]/Projects/takeout/target/rls/debug/deps/libvec_map-4f8e59c92e9953d8.rmeta --cap-lints allow --error-format=json --sysroot [...]/.rustup/toolchains/stable-x86_64-unknown-linux-gnu` (exit code: 101)\",\n    \"startLineNumber\": 1,\n    \"startColumn\": 1,\n    \"endLineNumber\": 10000,\n    \"endColumn\": 1\n}\n</code></pre>\n\n<p>According to the README in the <a href=\"https://github.com/clap-rs/clap\" rel=\"nofollow noreferrer\">clap repo</a> itself, just adding it <em>should</em> work:</p>\n\n<blockquote>\n  <p>For full usage, add clap as a dependency in your Cargo.toml to use from crates.io:</p>\n\n<pre><code>[dependencies]\nclap = \"~2.33\"\n</code></pre>\n</blockquote>\n\n<p>But it doesn't.</p>\n\n<p>I've tried it with and without the <code>~</code> prefix as well as <code>clap = {version = \"2.33\", features = [\"yaml\"]}</code>, which is also shown in the repo, but no luck. (Yes, I'm trying to load the CLI options from a <code>.yaml</code> file.)</p>\n\n<p>Trying <code>cargo install clap --version 2.33.0</code> from the shell simply returns an error message saying: <code>error: specified package has no binaries</code>.</p>\n\n<p>Aiming directly at the Git repo also produces the same error message:</p>\n\n<pre><code>cargo install --git https://github.com/clap-rs/clap.git --tag v2.31.2 --features yaml                                                  101 \u21b5\n    Updating git repository `https://github.com/clap-rs/clap.git`\n  Installing clap v2.31.2 (https://github.com/clap-rs/clap.git?tag=v2.31.2#07c15d28)\nerror: specified package has no binaries\n</code></pre>\n\n<p>Note that there's no <code>v2.33.0</code> tag in the Git repo (at the time of this writing).</p>\n\n<hr>\n\n<p>Bonus if you know how to get VSCode to stop marking everything as an error:</p>\n\n<p><a href=\"https://i.stack.imgur.com/pQU3U.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/pQU3U.png\" alt=\"VSCode marks everything as an error\"></a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566306936, "post_id": 57566309, "comment_id": 101609294, "body": "Few things about linked lists are &quot;simple&quot;, at least in Rust. Please read <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">Learn Rust with Entirely Too Many Linked Lists</a>."}], "answers": [{"tags": [], "owner": {"reputation": 1213, "user_id": 544707, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LVoaL.jpg?s=128&g=1", "display_name": "Anler", "link": "https://stackoverflow.com/users/544707/anler"}, "is_accepted": true, "score": 0, "last_activity_date": 1566285479, "creation_date": 1566285479, "answer_id": 57568477, "question_id": 57566309, "link": "https://stackoverflow.com/questions/57566309/cannot-assign-to-node-next-because-it-is-borrowed-when-reference-is-already-ou/57568477#57568477", "title": "Cannot assign to &#39;node.next&#39; because it is borrowed when reference is already out of scope", "body": "<p>It seems to be a compiler bug, there's an answered question related to this issue: <a href=\"https://stackoverflow.com/a/44108401/544707\">Rust lifetime issue in loop</a>, that explains better what might be the origin of the problem:</p>\n\n<blockquote>\n  <p>It can't assign a correct lifetime to the borrow if only one execution path terminates the loop.</p>\n</blockquote>\n\n<p>In your example, leaking the borrowed value <code>next</code> from inside the loop (by assigning it to <code>node</code>) will cause the issue because there's a conditional loop termination, so in order to workaround this problem do not leak that borrowed value and instead re-borrow when assigning to <code>node</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut node = head;\nloop {\n    let next = node.next.as_mut().unwrap();\n    if let None = next.next {\n        break;\n    } else {\n        node = node.next.as_mut().unwrap();\n    }\n}\nnode.next = None;\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": false, "score": 0, "last_activity_date": 1566300302, "creation_date": 1566300302, "answer_id": 57572560, "question_id": 57566309, "link": "https://stackoverflow.com/questions/57566309/cannot-assign-to-node-next-because-it-is-borrowed-when-reference-is-already-ou/57572560#57572560", "title": "Cannot assign to &#39;node.next&#39; because it is borrowed when reference is already out of scope", "body": "<p>@Anler is right. I'm writing another answer, because your code is going to panic if the <code>LinkedList</code> will be empty. This is the problematic line:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let head = self.head.as_mut().unwrap();\n</code></pre>\n\n<p>If <code>self.head</code> is <code>None</code> (empty list) -> <code>unwrap()</code> will panic. Here's a working example (<code>loop</code> -> <code>while</code>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn remove(&amp;mut self) {\n    let head = match self.head.as_mut() {\n        Some(head) =&gt; head,\n        None =&gt; return,\n    };\n\n    match head.next {\n        None =&gt; self.head = None,\n        Some(_) =&gt; {\n            let mut node = head;\n            while node.next.as_ref().unwrap().next.is_some() {\n                node = node.next.as_mut().unwrap();\n            }\n            node.next = None;\n        }\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 11949292, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-kh0BF-mDD-c/AAAAAAAAAAI/AAAAAAAAAQ0/4MzwLiswtMY/photo.jpg?sz=128", "display_name": "Bernard Brother", "link": "https://stackoverflow.com/users/11949292/bernard-brother"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 57568477, "answer_count": 2, "score": 1, "last_activity_date": 1566300302, "creation_date": 1566271308, "question_id": 57566309, "link": "https://stackoverflow.com/questions/57566309/cannot-assign-to-node-next-because-it-is-borrowed-when-reference-is-already-ou", "title": "Cannot assign to &#39;node.next&#39; because it is borrowed when reference is already out of scope", "body": "<p>I'm trying to write a simple linked list and I ran into this problem while trying to implement remove. I can't assign to a variable because it is borrowed even though the reference is out of scope.</p>\n\n<pre><code>struct Node&lt;T&gt; {\n    next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n    value: T,\n}\n</code></pre>\n\n<pre><code>struct LinkedList&lt;T&gt; {\n    head: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n</code></pre>\n\n<pre><code>fn remove(&amp;mut self) {\n    let head = self.head.as_mut().unwrap();\n    if let None = head.next {\n        self.head = None;\n    } else {\n        let mut node = head;\n        loop {\n            let next = node.next.as_mut().unwrap();\n            if let None = next.next {\n                break;\n            } else {\n                node = next;\n            }\n        }\n        node.next = None;\n    }\n}\n</code></pre>\n\n<pre><code>error[E0506]: cannot assign to `node.next` because it is borrowed\n  --&gt; linkedlist.rs:49:13\n   |\n42 |                 let next = node.next.as_mut().unwrap();\n   |                            --------- borrow of `node.next` occurs here\n...\n49 |             node.next = None;\n   |             ^^^^^^^^^\n   |             |\n   |             assignment to borrowed `node.next` occurs here\n   |             borrow later used here\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566272102, "post_id": 57565919, "comment_id": 101593894, "body": "tl;dr the duplicate: <code>Iterator</code> doesn&#39;t support streaming iterators; you&#39;ll have to do without it. But there is still plenty you can do with a streaming API; you just don&#39;t get the neat <code>for</code> loop syntax or standard iterator adapters (although there are &quot;streaming versions&quot; of most)."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1566285090, "post_id": 57565919, "comment_id": 101597483, "body": "<code>&#39;a</code> is not an appropriate lifetime for your string. That&#39;s the lifetime of a field of your struct that is not related. The issue, is that there is no way to express the lifetime of your struct."}], "owner": {"reputation": 701, "user_id": 10005095, "user_type": "registered", "profile_image": "https://graph.facebook.com/144174703037393/picture?type=large", "display_name": "Evian", "link": "https://stackoverflow.com/users/10005095/evian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 59, "favorite_count": 0, "closed_date": 1566287040, "answer_count": 0, "score": 3, "last_activity_date": 1566272276, "creation_date": 1566267439, "last_edit_date": 1566272276, "question_id": 57565919, "link": "https://stackoverflow.com/questions/57565919/lifetime-problem-when-implementing-iterator-with-item-type-str", "closed_reason": "Duplicate", "title": "Lifetime problem when implementing Iterator with item type &amp;str", "body": "<p>I have a struct <code>A</code> with a string field <code>string</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A&lt;'a&gt; {\n    string: String,\n    //some other field which needs the lifetime specifier\n}\n</code></pre>\n\n<p>and I want to implement <code>Iterator</code> to return a slice of <code>string</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a&gt; Iterator for A&lt;'a&gt; {\n    type Item = &amp;'a str;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        //do something to get the index `x` and `y`\n        return Some(&amp;self.string[x .. y]);\n    }\n}\n</code></pre>\n\n<p>The compiler says:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n  --&gt; src/main.rs:11:22\n   |\n11 |         return Some(&amp;self.string[x .. y]);\n   |                      ^^^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 8:5...\n  --&gt; src/main.rs:8:5\n   |\n8  | /     fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n9  | |         let x = 1;\n10 | |         let y = 2;\n11 | |         return Some(&amp;self.string[x .. y]);\n12 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:11:22\n   |\n11 |         return Some(&amp;self.string[x .. y]);\n   |                      ^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 6:6...\n  --&gt; src/main.rs:6:6\n   |\n6  | impl&lt;'a&gt; Iterator for A&lt;'a&gt; {\n   |      ^^\n   = note: ...so that the types are compatible:\n           expected std::iter::Iterator\n              found std::iter::Iterator\n</code></pre>\n\n<p>And I tried:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn next&lt;'b: 'a&gt;(&amp;'b mut self) -&gt; Option&lt;&amp;'b str&gt; {\n        //do something to get the index `x` and `y`\n        return Some(&amp;self.string[x .. y]);\n    }\n</code></pre>\n\n<p>The compiler says:</p>\n\n<pre><code>error[E0195]: lifetime parameters or bounds on method `next` do not match the trait declaration\n --&gt; src/main.rs:8:12\n  |\n8 |     fn next&lt;'b: 'a&gt;(&amp;'b mut self) -&gt; Option&lt;&amp;'b str&gt; {\n  |            ^^^^^^^^ lifetimes do not match method in trait\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 3, "creation_date": 1566349674, "post_id": 57568238, "comment_id": 101625303, "body": "The documentation on <code>std::io::Tale</code> suggests that it takes N <i>bytes</i> from the input stream. This means that if your input is not single byte UTF8 characters you wont actually get a string of MAX_LENGTH, but something shorter. You may also hit an error if take ends up splitting a multi-byte character?"}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 1, "last_activity_date": 1566284477, "creation_date": 1566284477, "answer_id": 57568238, "question_id": 57565125, "link": "https://stackoverflow.com/questions/57565125/how-to-read-a-line-from-stdin-with-max-input-length/57568238#57568238", "title": "How to read a line from stdin with max input length?", "body": "<p><code>read_line</code> is not a member of <code>std::io::Read</code> but of <code>std::io::BufRead</code>, and while <code>stdin</code> does implement the latter, the return of <code>stdin.take()</code> (of type <code>std::io::Take&lt;_&gt;</code>) does not.</p>\n\n<p>But you can convert any <code>Read</code> into a <code>BufRead</code> easily using <code>std::io::BufReader</code>:</p>\n\n<pre><code>const MAX_LENGTH: u64 = 256;\nlet mut stdin = std::io::stdin();\nlet mut input = String::new();\nlet mut bstdin = std::io::BufReader::new(stdin.take(MAX_LENGTH));\nbstdin.read_line(&amp;mut input).unwrap();\n</code></pre>\n"}], "owner": {"reputation": 701, "user_id": 10005095, "user_type": "registered", "profile_image": "https://graph.facebook.com/144174703037393/picture?type=large", "display_name": "Evian", "link": "https://stackoverflow.com/users/10005095/evian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 302, "favorite_count": 0, "accepted_answer_id": 57568238, "answer_count": 1, "score": 1, "last_activity_date": 1566331024, "creation_date": 1566258300, "last_edit_date": 1566331024, "question_id": 57565125, "link": "https://stackoverflow.com/questions/57565125/how-to-read-a-line-from-stdin-with-max-input-length", "title": "How to read a line from stdin with max input length?", "body": "<p>To read a line from <code>Stdin</code>, I could </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut stdin = std::io::stdin();\nlet mut input = String::new();\nstdin.read_line(&amp;mut input).unwrap();\n</code></pre>\n\n<p>To read from <code>Stdin</code> with a maximum length, I could do</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const MAX_LENGTH: u64 = 256;\nlet mut stdin = std::io::stdin();\nlet mut input = String::new();\nstdin.take(MAX_LENGTH).read(&amp;mut input).unwrap();\n</code></pre>\n\n<p>What I want is the combination of the above two requires. Read a line from stdin, and if the input is longer than <code>MAX_LENGTH</code>, the remaining is discarded.</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1566258342, "post_id": 57564953, "comment_id": 101591745, "body": "If you have a <code>Result</code> that is either an value or an error, how could the compiler know ahead of time which it would be? What would &quot;sufficient internal knowledge about the enum type&quot; be?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566262346, "post_id": 57564953, "comment_id": 101592388, "body": "Rust has unions, and they don&#39;t have a tag. Enums have a tag by definition; they are tagged unions."}, {"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1566262901, "post_id": 57564953, "comment_id": 101592456, "body": "@loganfsmyth through monomorphization -- the same way Rust handles trait-generics (which don&#39;t have a tag, right?)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1566263718, "post_id": 57564953, "comment_id": 101592579, "body": "If you <i>can</i> do it with traits and generics, feel free! But you can&#39;t monomorphize something whose value is unknown at compile time. That&#39;s what <code>enum</code> is for. Consider <code>if rand::random() { Some(10) } else { None }</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566263907, "post_id": 57564953, "comment_id": 101592606, "body": "I&#39;m undecided on what to do with this question. It seems to be asking something along the lines of &quot;what&#39;s the point of tagged unions&quot; which is broad but potentially answerable, but maybe it&#39;s also asking &quot;what&#39;s the difference between types and values&quot; which is the kind of thing you could spend a lot of books explaining. I&#39;m voting &quot;too broad&quot; -- perhaps it would help if you can give an example of code that uses an <code>enum</code> where you think it could be monomorphized?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566264082, "post_id": 57564953, "comment_id": 101592626, "body": "(And to be clear, there definitely are cases where <code>enum</code> tags may be optimized away -- if the <code>enum</code> is only used in a single function, it&#39;s loaded into registers, and the tag register happens to never be needed because the different variants are only used in mutually exclusive, non-converging code paths. But I get the feeling that kind of optimization isn&#39;t what you&#39;re asking about.)"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1566269985, "post_id": 57564953, "comment_id": 101593585, "body": "In the general case of some unspecified enum, the compiler will have no idea what variant a given variable holds, so some way to distinguish is necessary. Anything beyond that is the realm of compiler optimizations."}], "answers": [{"tags": [], "owner": {"reputation": 11225, "user_id": 471129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cec5a6cce700294c7c564becb11fa3c1?s=128&d=identicon&r=PG", "display_name": "Erik Eidt", "link": "https://stackoverflow.com/users/471129/erik-eidt"}, "is_accepted": false, "score": 1, "last_activity_date": 1566258308, "creation_date": 1566258308, "answer_id": 57565127, "question_id": 57564953, "link": "https://stackoverflow.com/questions/57564953/why-do-enums-require-store-a-tag/57565127#57565127", "title": "Why do Enums require (store) a tag?", "body": "<p>While the compiler has enough information to create any specific enum variants, you can then pass that variant as a parameter to someone who expects any possible variant of the enum.&nbsp; When the value is transferred, the knowledge of the original variant is lost, especially since that same function could be called with different variants.&nbsp; So, the approach is to use a tag.</p>\n\n<p>Some languages use a vtable or class pointer instead of a tag, but here Rust chooses the term \"tag\" &#8212; however it does not say that the tag is a byte, so it <em>could</em> be implemented as a pointer.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "closed_date": 1566264922, "answer_count": 1, "score": -1, "last_activity_date": 1566258308, "creation_date": 1566256661, "question_id": 57564953, "link": "https://stackoverflow.com/questions/57564953/why-do-enums-require-store-a-tag", "closed_reason": "Needs more focus", "title": "Why do Enums require (store) a tag?", "body": "<p>From the <a href=\"https://doc.rust-lang.org/1.1.0/book/enums.html\" rel=\"nofollow noreferrer\">Rust-Language book,</a></p>\n\n<blockquote>\n  <p>A value of an enum type contains information about which variant it is, in addition to any data associated with that variant. This is sometimes referred to as a \u2018tagged union\u2019, since the data includes a \u2018tag\u2019 indicating what type it is. The compiler uses this information to enforce that you\u2019re accessing the data in the enum safely. For instance, you can\u2019t simply try to destructure a value as if it were one of the possible variants:</p>\n</blockquote>\n\n<p>Why do Rust Unions <em>require</em> a tag? If the compiler has sufficient internal knowledge about the enum type and constructors used in compile time, why does it have to allocate a byte for every enum value to internally store the \"tag\"? Is this information ever used in runtime? Do other rust types store tags?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 48971, "user_id": 571563, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/ce5650bd7433e6f5bd0164a309b69608?s=128&d=identicon&r=PG", "display_name": "Chris Shain", "link": "https://stackoverflow.com/users/571563/chris-shain"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566251208, "post_id": 57563768, "comment_id": 101590180, "body": "@trentcl that does seem likely to be the answer. Thanks."}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 4, "last_activity_date": 1566251331, "creation_date": 1566251331, "answer_id": 57564328, "question_id": 57563768, "link": "https://stackoverflow.com/questions/57563768/difference-in-behavior-between-boxt-and-refcellt-constructors/57564328#57564328", "title": "Difference in behavior between Box&lt;T&gt; and RefCell&lt;T&gt; constructors", "body": "<p><code>Box&lt;T&gt;</code> implements <a href=\"https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html\" rel=\"nofollow noreferrer\">the trait <code>CoerceUnsized&lt;U&gt;</code></a> which allows a coercion from <code>Box&lt;T&gt;</code> to <code>Box&lt;U&gt;</code> whenever <code>T</code> implements <a href=\"https://doc.rust-lang.org/std/marker/trait.Unsize.html\" rel=\"nofollow noreferrer\">the trait <code>Unsize&lt;U&gt;</code></a>. Intuitively, <code>T</code> implements <code>Unsize&lt;U&gt;</code> if <code>U</code> is the \"unsized\" version of <code>T</code>. For example, <code>[T; N]</code> implements <code>Unsize&lt;[T]&gt;</code> and <code>T</code> implements <code>Unsize&lt;dyn Trait&gt;</code> when <code>T</code> implements <code>Trait</code>.</p>\n\n<pre><code>impl&lt;T, U&gt; CoerceUnsized&lt;Box&lt;U&gt;&gt; for Box&lt;T&gt; where\n    T: Unsize&lt;U&gt; + ?Sized,\n    U: ?Sized, \n</code></pre>\n\n<p><code>RefCell&lt;T&gt;</code> also implements <code>CoerceUnsized&lt;U&gt;</code>, but has a much more limited implementation. It can only perform a coercion from <code>RefCell&lt;T&gt;</code> to <code>RefCell&lt;U&gt;</code> if <code>T</code> can already be coerced to <code>U</code>, which doesn't include <code>T: Unsize&lt;U&gt;</code>.</p>\n\n<pre><code>impl&lt;T, U&gt; CoerceUnsized&lt;RefCell&lt;U&gt;&gt; for RefCell&lt;T&gt; where\n    T: CoerceUnsized&lt;U&gt;, \n</code></pre>\n\n<p>The reason here is that the coercion behind <code>CoerceUnsized&lt;U&gt;</code> should always be behind a pointer. This applies with <code>Box&lt;T&gt;</code>, but not with <code>RefCell&lt;T&gt;</code>. <code>RefCell&lt;T&gt;</code>, despite being called <strong>Ref</strong>Cell, actually holds its data directly. <code>RefCell&lt;T&gt;</code> has the field <code>value: UnsafeCell&lt;T&gt;</code> and <code>UnsafeCell&lt;T&gt;</code> just has a single field <code>value: T</code>. There's no indirection going on here.</p>\n\n<p>As it happens, the rules for <code>Unsize&lt;U&gt;</code> do allow <code>RefCell&lt;T&gt;: Unsize&lt;RefCell&lt;U&gt;&gt;</code> when <code>T: Unsize&lt;U&gt;</code>, so we can coerce between them if we hide behind a pointer.</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn main() {\n    let _: &amp;mut RefCell&lt;[u8]&gt; = &amp;mut RefCell::new([0; 30]);\n}\n</code></pre>\n\n<p>Other (smart) pointers would work here too. <code>Box&lt;T&gt;</code>, <code>Rc&lt;T&gt;</code>, etc. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=302ddfc09937754e5d0ce2bcd58b1102\" rel=\"nofollow noreferrer\">(playground link)</a></p>\n"}], "owner": {"reputation": 48971, "user_id": 571563, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/ce5650bd7433e6f5bd0164a309b69608?s=128&d=identicon&r=PG", "display_name": "Chris Shain", "link": "https://stackoverflow.com/users/571563/chris-shain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "closed_date": 1566254250, "accepted_answer_id": 57564328, "answer_count": 1, "score": 4, "last_activity_date": 1566251331, "creation_date": 1566247750, "question_id": 57563768, "link": "https://stackoverflow.com/questions/57563768/difference-in-behavior-between-boxt-and-refcellt-constructors", "closed_reason": "Duplicate", "title": "Difference in behavior between Box&lt;T&gt; and RefCell&lt;T&gt; constructors", "body": "<p>In Rust 1.36, the following compiles:</p>\n\n<pre><code>let arr = [0 as u8; 30];\nlet buf: Box&lt;[u8]&gt; = Box::new(arr);\n</code></pre>\n\n<p>but this one fails, with the error: <code>expected slice, found array of 30 elements</code> referring to the undermarked code:</p>\n\n<pre><code>let arr = [0 as u8; 30];\nlet buf: RefCell&lt;[u8]&gt; = RefCell::new(arr);\n                         ^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Can anyone explain why the behavior is different? Both <code>RefCell</code> and <code>Box</code> constrain T as <code>&lt;T: ?Sized&gt;</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566244294, "post_id": 57563057, "comment_id": 101587852, "body": "See also <a href=\"https://stackoverflow.com/q/30795600/155423\">Is it possible to share data with threads without any cloning?</a>. You could put your <code>Vec</code> in an <code>Arc</code>, which makes the clone very cheap."}], "owner": {"reputation": 264, "user_id": 10756455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/584555d27f8df3e5e8c4d4c7047498cf?s=128&d=identicon&r=PG&f=1", "display_name": "Toothless204", "link": "https://stackoverflow.com/users/10756455/toothless204"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 29, "favorite_count": 0, "closed_date": 1566244174, "answer_count": 0, "score": 1, "last_activity_date": 1566244047, "creation_date": 1566244047, "question_id": 57563057, "link": "https://stackoverflow.com/questions/57563057/how-to-borrow-value-in-a-thread-rather-than-move", "closed_reason": "Duplicate", "title": "How to borrow value in a thread rather than move", "body": "<p>I have two threads that both need immutable access to a Vec and at the moment I'm having to make clone of that vector so both threads can use the data, I want to try and get rid of this extra copy</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use clap::{App, Arg};\nuse std::fs;\nuse std::thread;\n\nmod part1;\nmod part2;\n\nfn main() {\n    let matches = App::new(\"day1\")\n        .about(\"AoC2018 day1\")\n        .arg(\n            Arg::with_name(\"INPUT\")\n                .help(\"The file to read input from\")\n                .required(true)\n                .index(1),\n        )\n        .get_matches();\n\n    let filename = matches.value_of(\"INPUT\").unwrap();\n    let file_content = fs::read_to_string(filename).expect(\"Could not read/open file\");\n\n    let numbers: Vec&lt;i64&gt; = file_content\n        .lines()\n        .map(|x| x.parse::&lt;i64&gt;().expect(\"Could not extract value\"))\n        .collect();\n    let numbers2 = numbers.clone();\n\n    let handle1 = thread::spawn(move || part1::part1(&amp;numbers));\n\n    let handle2 = thread::spawn(move || part2::part2(&amp;numbers2));\n\n    let result1 = handle1.join();\n    let result2 = handle2.join();\n\n    println!(\"Part 1: {}\", result1.unwrap());\n    println!(\"Part 2: {}\", result2.unwrap());\n}\n\n</code></pre>\n"}, {"tags": ["syntax", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1566242267, "post_id": 57562632, "comment_id": 101587109, "body": "<i>I understand traits are more generic types and not concrete types</i> \u2014 the trait&#39;s name is <b>both</b> a type and a trait. See <a href=\"https://stackoverflow.com/q/50650070/155423\">What does \u201cdyn\u201d mean in a type?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1566242384, "post_id": 57562632, "comment_id": 101587151, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/48545035/155423\">What does <code>impl</code> mean when used as the argument type or return type of a function?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57562632/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1566298130, "post_id": 57562632, "comment_id": 101604315, "body": "Are you just asking why it&#39;s <code>impl Foo</code> rather than <code>trait Foo</code>? The syntax <code>impl Foo</code> can be read as &quot;something that <i>implements</i> <code>Foo</code>&quot;, so the syntax makes perfect sense."}, {"owner": {"reputation": 1769, "user_id": 3151330, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/osBeZ.jpg?s=128&g=1", "display_name": "manikawnth", "link": "https://stackoverflow.com/users/3151330/manikawnth"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566312479, "post_id": 57562632, "comment_id": 101612668, "body": "Yes @mcarton . It&#39;s all about the syntax. In other languages like go and java, where interface is also a type, you name the type of the parameter as <code>interface</code> . I expected similar thing from rustc to have <code>f: trait Foo</code> rather than <code>f: impl Foo</code> or simply <code>f: Foo</code> as the duplicate types are not anyways allowed by compiler."}], "answers": [{"comments": [{"owner": {"reputation": 1769, "user_id": 3151330, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/osBeZ.jpg?s=128&g=1", "display_name": "manikawnth", "link": "https://stackoverflow.com/users/3151330/manikawnth"}, "edited": false, "score": 0, "creation_date": 1566333296, "post_id": 57576639, "comment_id": 101621828, "body": "Very clear explanation, particularly no-size nature of traits if mixed with sized concrete types could create confusion. I think this <code>type Foo = impl Bar;</code> would make definite sense. Thanks a lot"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1566315351, "last_edit_date": 1566315351, "creation_date": 1566313776, "answer_id": 57576639, "question_id": 57562632, "link": "https://stackoverflow.com/questions/57562632/why-is-impl-needed-when-passing-traits-as-function-parameters/57576639#57576639", "title": "Why is `impl` needed when passing traits as function parameters?", "body": "<p>Contrary to languages such as Go or Java, Rust allows for both static and dynamic dispatch, and some syntax was required to let programmers choose between the two.</p>\n\n<p>As dynamic dispatch must work on objects which might not be <code>Sized</code>, you need a reference to use it. That is, you would use <code>&amp;dyn Trait</code> or <code>Box&lt;dyn Trait&gt;</code> (note: for historical reasons, the <code>dyn</code> keyword is not required, but modern Rust uses it). In C++, dynamic dispatch also requires a reference or pointer.</p>\n\n<p>Static dispatch is not something Go or Java have. In C++, it works with templates and duck-typing. In Rust, it works with generics and traits, and its original syntax was:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn some_function&lt;T: Trait&gt;(foo: T) { \u2026 }\n</code></pre>\n\n<p>Later, the following syntax was added to the language:</p>\n\n<pre><code>fn some_function(foo: impl Trait) { \u2026 }\n</code></pre>\n\n<p>which is equivalent to the above.</p>\n\n<p>This syntax was originally invented to be used in return types, where there is no generic equivalent:</p>\n\n<pre><code>fn some_function() -&gt; impl Trait { \u2026 }\n</code></pre>\n\n<p>This means that <code>some_function</code> can return any single type that implements <code>Trait</code>, but this type must be known at compile time. This has some performance benefits over returning <code>Box&lt;Trait&gt;</code> for example. In C++, the closest equivalent would be returning <code>auto</code> or <code>decltype(auto)</code>.</p>\n\n<p>The syntax in parameter position was added for symmetry.</p>\n\n<p>You might wonder why not simply make the generics implicit and have:</p>\n\n<pre><code>fn some_function(foo: Trait) { \u2026 }\n</code></pre>\n\n<p>But this would be slightly confusing. <code>Trait</code> by itself is not sized, and therefore cannot be used as a parameter, unless they are generic. This would make traits stand out in the realm of unsized types. For example, if <code>(foo: Trait)</code> would work, you might wonder why <code>(foo: str)</code> doesn't, but what would that one mean? There is also other problems with making generics implicit, for example, generics in traits make the trait non-object-safe.</p>\n\n<hr>\n\n<p>Later, Rust will likely extend those existential types and allow this at a module level:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Foo = impl Bar;\n</code></pre>\n\n<p>(which is currently allowed on nightly, guarded by the <code>type_alias_impl_trait</code> feature)</p>\n\n<hr>\n\n<p>Finally, you are asking why the syntax is <code>impl Foo</code>, rather than <code>trait Foo</code>. This reads well as \"a type that implements Foo\". The <a href=\"https://github.com/rust-lang/rfcs/pull/105/files\" rel=\"nofollow noreferrer\">original RFC</a> doesn't discuss alternative syntaxes much. <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1951-expand-impl-trait.md\" rel=\"nofollow noreferrer\">Another RFC discusses the syntax more</a>, in particular whether the syntax should have been <code>any Foo</code> in parameter position, and <code>some Foo</code> in return position. The syntax <code>trait Foo</code> was never considered as far as I am aware.</p>\n"}], "owner": {"reputation": 1769, "user_id": 3151330, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/osBeZ.jpg?s=128&g=1", "display_name": "manikawnth", "link": "https://stackoverflow.com/users/3151330/manikawnth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 249, "favorite_count": 0, "accepted_answer_id": 57576639, "answer_count": 1, "score": 0, "last_activity_date": 1566315351, "creation_date": 1566241827, "last_edit_date": 1566243939, "question_id": 57562632, "link": "https://stackoverflow.com/questions/57562632/why-is-impl-needed-when-passing-traits-as-function-parameters", "title": "Why is `impl` needed when passing traits as function parameters?", "body": "<p>In the following example of passing a trait as a parameter, what's the need of sending <code>impl</code> in the function signature?</p>\n\n<p>I understand that traits are more generic types and not concrete types, but since the Rust compiler doesn't allow sharing names across structs and traits, why is there a need to provide <code>impl</code> in the function signature to represent the type?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn notify(item: impl Summary) {\n    println!(\"Breaking news! {}\", item.summarize());\n}\n</code></pre>\n\n<p>The documentation mentions that the above signature is just syntactic sugar for the below signature. Wouldn't it make sense to use <code>trait Summary</code> instead of <code>impl Summary</code> as <code>impl</code> can also be used to define methods on structs?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn notify&lt;T: Summary&gt;(item: T) {\n    println!(\"Breaking news! {}\", item.summarize());\n}\n</code></pre>\n\n<p>Is there any hidden concept around it that I'm missing?</p>\n"}, {"tags": ["serialization", "rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566231994, "post_id": 57560593, "comment_id": 101582942, "body": "What prevents you from deriving <code>Serialize</code> like most usages?"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566232617, "post_id": 57560593, "comment_id": 101583195, "body": "It fails with the same error &quot;value: UnsupportedType&quot;. Presumably, my implementation is doing exactly the same that serde_derive would do? In which case, some advice on what the right thing to do would be would be greatly appreciated."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566232973, "post_id": 57560593, "comment_id": 101583353, "body": "Perhaps you can <a href=\"https://stackoverflow.com/posts/57560593/edit\">edit</a> your question to show what you&#39;d like the generated TOML to be?"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566233154, "post_id": 57560593, "comment_id": 101583434, "body": "Actually, I guess I was trying to find out what the output was going to be myself."}], "answers": [{"comments": [{"owner": {"reputation": 328, "user_id": 255065, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/74fa1f2d36c7dd7ede1390d7c098fbc6?s=128&d=identicon&r=PG", "display_name": "clord", "link": "https://stackoverflow.com/users/255065/clord"}, "edited": false, "score": 0, "creation_date": 1569296232, "post_id": 57560842, "comment_id": 102540656, "body": "It seems clear what the serialization should be:      [VariantB]     k: 42     p: 42.42"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1566233230, "last_edit_date": 1566233230, "creation_date": 1566232956, "answer_id": 57560842, "question_id": 57560593, "link": "https://stackoverflow.com/questions/57560593/why-do-i-get-an-unsupportedtype-error-when-serializing-to-toml-with-a-manually-i/57560842#57560842", "title": "Why do I get an UnsupportedType error when serializing to TOML with a manually implemented Serialize for an enum with struct variants?", "body": "<p>The TOML format does not support enums with values:</p>\n\n<pre><code>use serde::Serialize; // 1.0.99\nuse toml; // 0.5.3\n\n#[derive(Serialize)]\nenum A {\n    B(i32),\n}\n\nfn main() {\n    match toml::to_string(&amp;A::B(42)) {\n        Ok(s) =&gt; println!(\"{}\", s),\n        Err(e) =&gt; eprintln!(\"Error: {}\", e),\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error: unsupported Rust type\n</code></pre>\n\n<p>It's unclear what you'd like your data structure to map to as TOML. Using JSON  works just fine:</p>\n\n<pre><code>use serde::Serialize; // 1.0.99\nuse serde_json; // 1.0.40\n\n#[derive(Serialize)]\nenum Variants {\n    VariantA,\n    VariantB { k: u32, p: f64 },\n}\n\nfn main() {\n    match serde_json::to_string(&amp;Variants::VariantB { k: 42, p: 42.42 }) {\n        Ok(s) =&gt; println!(\"{}\", s),\n        Err(e) =&gt; eprintln!(\"Error: {}\", e),\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>{\"VariantB\":{\"k\":42,\"p\":42.42}}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 0, "creation_date": 1596703124, "post_id": 63272188, "comment_id": 111897663, "body": "Thanks for your answer, to be honest I don&#39;t even remember what I was using this for (asked about a year ago) but it&#39;s good to know it can be done!"}], "tags": [], "owner": {"reputation": 524, "user_id": 241947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa658b4652729f94b76b469aa15d8e58?s=128&d=identicon&r=PG", "display_name": "masch", "link": "https://stackoverflow.com/users/241947/masch"}, "is_accepted": true, "score": 2, "last_activity_date": 1596655757, "last_edit_date": 1596655757, "creation_date": 1596655309, "answer_id": 63272188, "question_id": 57560593, "link": "https://stackoverflow.com/questions/57560593/why-do-i-get-an-unsupportedtype-error-when-serializing-to-toml-with-a-manually-i/63272188#63272188", "title": "Why do I get an UnsupportedType error when serializing to TOML with a manually implemented Serialize for an enum with struct variants?", "body": "<p>Enabling external tagging for the enum enables Serde to serialize/deserialize it to TOML:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Deserialize)]\n#[serde(tag = &quot;type&quot;)]\nenum Variants {\n    VariantA,\n    VariantB { k: u32, p: f64 },\n}\n\ntoml::to_string(&amp;Variants::VariantB { k: 42, p: 13.37 })\n</code></pre>\n<p>serializes to</p>\n<pre><code>type = VariantB\nk = 42\np = 13.37\n</code></pre>\n<p>This works well in <code>Vec</code>s and <code>HashMap</code>s, too.</p>\n"}], "owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 409, "favorite_count": 0, "accepted_answer_id": 63272188, "answer_count": 2, "score": 4, "last_activity_date": 1596655757, "creation_date": 1566231809, "last_edit_date": 1566232388, "question_id": 57560593, "link": "https://stackoverflow.com/questions/57560593/why-do-i-get-an-unsupportedtype-error-when-serializing-to-toml-with-a-manually-i", "title": "Why do I get an UnsupportedType error when serializing to TOML with a manually implemented Serialize for an enum with struct variants?", "body": "<p>I'm trying to implement <code>Serialize</code> for an enum that includes struct variants. The <a href=\"https://serde.rs/impl-serialize.html#serializing-an-enum\" rel=\"nofollow noreferrer\">serde.rs documentation</a> indicates the following:</p>\n\n<pre><code>enum E {\n    // Use three-step process:\n    //   1. serialize_struct_variant\n    //   2. serialize_field\n    //   3. end\n    Color { r: u8, g: u8, b: u8 },\n\n    // Use three-step process:\n    //   1. serialize_tuple_variant\n    //   2. serialize_field\n    //   3. end\n    Point2D(f64, f64),\n\n    // Use serialize_newtype_variant.\n    Inches(u64),\n\n    // Use serialize_unit_variant.\n    Instance,\n}\n</code></pre>\n\n<p>With that in mind, I proceeded to implemention:</p>\n\n<pre><code>use serde::ser::{Serialize, SerializeStructVariant, Serializer};\nuse serde_derive::Deserialize;\n\n#[derive(Deserialize)]\nenum Variants {\n    VariantA,\n    VariantB { k: u32, p: f64 },\n}\n\nimpl Serialize for Variants {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where\n        S: Serializer,\n    {\n        match *self {\n            Variants::VariantA =&gt; serializer.serialize_unit_variant(\"Variants\", 0, \"VariantA\"),\n            Variants::VariantB { ref k, ref p } =&gt; {\n                let mut state =\n                    serializer.serialize_struct_variant(\"Variants\", 1, \"VariantB\", 2)?;\n                state.serialize_field(\"k\", k)?;\n                state.serialize_field(\"p\", p)?;\n                state.end()\n            }\n        }\n    }\n}\n\nfn main() {\n    let x = Variants::VariantB { k: 5, p: 5.0 };\n    let toml_str = toml::to_string(&amp;x).unwrap();\n    println!(\"{}\", toml_str);\n}\n</code></pre>\n\n<p>The code compiles, but when I run it it fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: UnsupportedType', src/libcore/result.rs:999:5\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n\n<p>I figured the issue must be in my use of the API, so I consulted the API <a href=\"https://docs.serde.rs/serde/trait.Serializer.html#tymethod.serialize_struct_variant\" rel=\"nofollow noreferrer\">documentation for <code>StructVariant</code></a> and it looks practically the same as my code. I'm sure I'm missing something, but I don't see it based on the docs and output.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 1, "creation_date": 1566227959, "post_id": 57559393, "comment_id": 101581012, "body": "Can you please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">Minimal, Reproducible Example</a>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1566228301, "post_id": 57559393, "comment_id": 101581183, "body": "Highly likely to be a duplicate of <a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1566296392, "post_id": 57559393, "comment_id": 101603419, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">Why can&#39;t I store a value and a reference to that value in the same struct?</a>"}, {"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "edited": false, "score": 0, "creation_date": 1566323710, "post_id": 57559393, "comment_id": 101618160, "body": "While this is a duplicate as pointed out already, in this specific instance, using a <code>str</code> reference with the same lifetime as your message instead of an owned <code>String</code> in <code>Iterator</code> makes more sense."}], "owner": {"reputation": 119, "user_id": 1264693, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72d2fee45d40bf9bc22fb5249adb554b?s=128&d=identicon&r=PG", "display_name": "ali2992", "link": "https://stackoverflow.com/users/1264693/ali2992"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1566296776, "creation_date": 1566226987, "last_edit_date": 1566296776, "question_id": 57559393, "link": "https://stackoverflow.com/questions/57559393/fighting-the-borrow-checker-while-implementing-a-streamingiterator-for-data-dese", "title": "Fighting the borrow checker while implementing a StreamingIterator for data deserialised by Serde", "body": "<p>I'm deserialising using Serde and I want to take advantage of the zero-copy functionality while using a streaming iterator which returns a reference to the current value. This reference is valid until <code>advance</code> is called on the iterator.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::Deserialize;\nuse streaming_iterator::StreamingIterator;\n\nstruct Iterator&lt;'i&gt; {\n    owned_value: String,\n    message: Option&lt;Message&lt;'i&gt;&gt;\n}\n\n#[derive(Deserialize, Debug)]\nstruct Message&lt;'i&gt; {\n    content: &amp;'i str\n}\n\nfn convert&lt;'c&gt;(input: &amp;'c str) -&gt; Message&lt;'c&gt; {\n    serde_json::from_str(input).unwrap()\n}\n\nimpl&lt;'i&gt; StreamingIterator for Iterator&lt;'i&gt; {\n    type Item = Message&lt;'i&gt;;\n\n    fn advance(&amp;mut self) {\n        self.message = Some(convert(&amp;self.owned_value))\n    }\n\n    fn get(&amp;self) -&gt; Option&lt;&amp;Self::Item&gt; {\n        Some(&amp;self.message.unwrap())\n    }\n}\n\nfn main() {\n    let data = r#\"\n        {\n            \"content\": \"Hello world\",\n        }\"#;\n\n    let iter = Iterator{owned_value: String::from(data), message: None};\n    println!(\"{}\", iter.get().unwrap().content);\n}\n</code></pre>\n\n<p><code>cargo.toml</code></p>\n\n<pre><code>[dependencies]\nserde = {version = \"1.0\", features = [\"derive\"]}\nserde_json = \"1.0\"\nstreaming-iterator = \"0.1.4\"\n</code></pre>\n\n<p>The compiler complains</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src\\main.rs:22:37\n   |\n22 |         self.message = Some(convert(&amp;self.owned_value))\n   |                                     ^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 21:5...\n  --&gt; src\\main.rs:21:5\n   |\n21 | /     fn advance(&amp;mut self) {\n22 | |         self.message = Some(convert(&amp;self.owned_value))\n23 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src\\main.rs:22:37\n   |\n22 |         self.message = Some(convert(&amp;self.owned_value))\n   |                                     ^^^^^^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'i as defined on the impl at 18:6...\n  --&gt; src\\main.rs:18:6\n   |\n18 | impl&lt;'i&gt; StreamingIterator for Iterator&lt;'i&gt; {\n   |      ^^\n   = note: ...so that the expression is assignable:\n           expected std::option::Option&lt;Message&lt;'i&gt;&gt;\n              found std::option::Option&lt;Message&lt;'_&gt;&gt;\n</code></pre>\n\n<p>From what I can tell, this is because the compiler is unable to prove that a reference to <code>self</code> will last long enough</p>\n\n<p>Is what I am trying to do possible? Is there a way I can prove to the borrow checker that as long as there is a reference to self then any references returned from <code>get</code> are valid?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1566221921, "post_id": 57557878, "comment_id": 101577723, "body": "There is the <a href=\"https://crates.io/crates/num_enum\" rel=\"nofollow noreferrer\">num_enum crate</a> which can safe a lot of manual writing code"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566222679, "post_id": 57557878, "comment_id": 101578184, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0db2d36ef4bfbd78aa4e21ebe5d0fe39\" rel=\"nofollow noreferrer\">The duplicate applied to your problem</a>."}, {"owner": {"reputation": 1476, "user_id": 9383219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97fabe5d903589acb1dfdf17fe4e405e?s=128&d=identicon&r=PG&f=1", "display_name": "cyclaminist", "link": "https://stackoverflow.com/users/9383219/cyclaminist"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1566341898, "post_id": 57557878, "comment_id": 101624120, "body": "@hellow Thanks for mentioning num_enum. It looks like the best crate for this type of thing because it provides a derive macro that actually implements <code>std::convert</code> traits (rather than for instance creating an unnecessary new trait or associated function). Somehow I didn&#39;t run across it when searching crates.io."}], "answers": [{"tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 3, "last_activity_date": 1566223358, "last_edit_date": 1566223358, "creation_date": 1566222004, "answer_id": 57557942, "question_id": 57557878, "link": "https://stackoverflow.com/questions/57557878/using-from-trait-to-trigger-converting-u8-to-enum/57557942#57557942", "title": "using From trait to trigger converting u8 to enum", "body": "<p><a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\"><code>std::convert::Into</code></a> is automatically implemented for you as a complementary trait to <code>From</code> so you could use its provided method and the following will compile just fine.  (<code>Into::into</code>, unlike <code>From::from</code> is a method and not an associated function.)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let a: ValueType = 0x0u8.into();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "is_accepted": false, "score": 0, "last_activity_date": 1566225812, "creation_date": 1566225812, "answer_id": 57559050, "question_id": 57557878, "link": "https://stackoverflow.com/questions/57557878/using-from-trait-to-trigger-converting-u8-to-enum/57559050#57559050", "title": "using From trait to trigger converting u8 to enum", "body": "<p>You could use the associated from() method that you already implemented:</p>\n\n<pre><code>...\n#[derive(PartialEq, PartialOrd, Debug)]\n...\n\nfn main() {\n    let a = ValueType::from(0x0u8);\n    let b: ValueType = 0x0u8.into();\n    assert_eq!(a,b);\n}\n</code></pre>\n"}], "owner": {"reputation": 2337, "user_id": 930169, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/be36a036900e8c4a2d810db772e43280?s=128&d=identicon&r=PG", "display_name": "JACK M", "link": "https://stackoverflow.com/users/930169/jack-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2463, "favorite_count": 0, "closed_date": 1566226243, "accepted_answer_id": 57557942, "answer_count": 2, "score": 2, "last_activity_date": 1566225812, "creation_date": 1566221750, "last_edit_date": 1566221838, "question_id": 57557878, "link": "https://stackoverflow.com/questions/57557878/using-from-trait-to-trigger-converting-u8-to-enum", "closed_reason": "Duplicate", "title": "using From trait to trigger converting u8 to enum", "body": "<p>I have this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(PartialEq, PartialOrd)]\nenum ValueType {\n    k1,\n    k2,\n    kUnknown,\n}\n\nimpl ValueType {\n    fn value(&amp;self) -&gt; u8 {\n        match *self {\n            ValueType::k1 =&gt; 0x0,\n            ValueType::k2 =&gt; 0x1,\n            ValueType::kUnknown =&gt; 0xff,\n        }\n    }\n}\n\nimpl From&lt;u8&gt; for ValueType {\n    fn from(orig: u8) -&gt; Self {\n        match orig {\n            0x0 =&gt; return ValueType::k1,\n            0x1 =&gt; return ValueType::k2,\n            _ =&gt; return ValueType::kUnknown,\n        };\n    }\n}\n\nfn main() {\n    let a: ValueType = 0x0 as u8; // error, expected enum `ValueType`, found u8\n}\n</code></pre>\n\n<p>I would like to convert <code>u8</code> to <code>ValueType</code>. How do I do it in Rust way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1566207063, "post_id": 57553740, "comment_id": 101569916, "body": "Note that the explicit return is not idiomatic"}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1566207964, "post_id": 57553789, "comment_id": 101570365, "body": "<i>if you don&#39;t see a .clone(), then you are not cloning!</i>  Generalizing like this may not be correct due to struct may have an implementation of <code>Copy</code> trait."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1566208196, "post_id": 57553789, "comment_id": 101570486, "body": "@&#214;merErden Thanks! Somehow I completely forgot to mention that. Very good point. I edited my answer to explain that."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1566208174, "last_edit_date": 1566208174, "creation_date": 1566206437, "answer_id": 57553789, "question_id": 57553740, "link": "https://stackoverflow.com/questions/57553740/am-i-moving-or-cloning-this-string/57553789#57553789", "title": "Am I moving or cloning this String", "body": "<p><strong>It is moved.</strong></p>\n\n<p>This is, in my opinion, one of the great advantages of Rust over C++: if you don't see a <code>.clone()</code> anywhere, then you are not cloning! In Rust, there are no implicit deep copies like in C++. If you want to create a copy/clone then you have to do it explicitly by calling a method that clones your instance. </p>\n\n<p>All of this comes with one exception: types that implement <a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\"><code>Copy</code></a>. These types use copy semantics instead of move semantics. It should be noted that <code>Copy</code> can only be implemented for types \"whose values can be duplicated simply by copying bits\", i.e. very simple types. <code>String</code> and any other types that manage heap memory do not implement <code>Copy</code>.</p>\n"}], "owner": {"reputation": 365, "user_id": 5088437, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-1rpp_jV_EKs/AAAAAAAAAAI/AAAAAAAAAVg/ydIQWEh-JrM/photo.jpg?sz=128", "display_name": "Ivano Donadi", "link": "https://stackoverflow.com/users/5088437/ivano-donadi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 163, "favorite_count": 0, "accepted_answer_id": 57553789, "answer_count": 1, "score": 2, "last_activity_date": 1566208174, "creation_date": 1566206296, "last_edit_date": 1566206374, "question_id": 57553740, "link": "https://stackoverflow.com/questions/57553740/am-i-moving-or-cloning-this-string", "title": "Am I moving or cloning this String", "body": "<p>I have an enum defined like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Debug)]\npub enum JsonState {\n    NameReadingState(String),\n    StringState(String),\n}\n\nimpl JsonState {\n    pub fn get_name_read(self) -&gt; String {\n        if let JsonState::NameReadingState(name) = self {\n            return name;\n        } else {\n            panic!(\n                \"Error: attempted to get name from non name state {:#?}\",\n                self\n            );\n        }\n    }\n}\n</code></pre>\n\n<p>If I were to call <code>get_name_read</code> on an instance of <code>JsonState</code> would the string  be moved out of the enum or would it be copied? My understanding is that since I am passing <code>self</code> and not <code>&amp;self</code> I am taking ownership of the instance inside the function and so I should be able to simply move the string out of it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566195110, "post_id": 57551107, "comment_id": 101564820, "body": "Publish your own library that simplifies this."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566212866, "post_id": 57551107, "comment_id": 101572717, "body": "<code>cin &gt;&gt; input</code> is wrong and you should pretty much never use it. Read <a href=\"https://users.rust-lang.org/t/why-is-it-so-difficult-to-get-user-input-in-rust/27444/11\" rel=\"nofollow noreferrer\">me ranting about why C++&#39;s input model is bad</a> in a related URLO thread."}], "answers": [{"comments": [{"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "edited": false, "score": 1, "creation_date": 1566223424, "post_id": 57551840, "comment_id": 101578640, "body": "This solution does not check for non-integer input and will panic if non-integer input is provided.  This is equivalent to the unwrap() call in the OP&#39;s question."}], "tags": [], "owner": {"reputation": 472, "user_id": 11847611, "user_type": "registered", "profile_image": "https://graph.facebook.com/2399816810113390/picture?type=large", "display_name": "Faheem Uz Zaman", "link": "https://stackoverflow.com/users/11847611/faheem-uz-zaman"}, "is_accepted": true, "score": 2, "last_activity_date": 1566225120, "last_edit_date": 1566225120, "creation_date": 1566198031, "answer_id": 57551840, "question_id": 57551107, "link": "https://stackoverflow.com/questions/57551107/is-there-any-other-way-of-taking-integer-or-float-input-rather-than-taking-strin/57551840#57551840", "title": "Is there any other way of taking integer or float input rather than taking string input and convert it?", "body": "<p>You have the option to use the <a href=\"https://crates.io/crates/text_io\" rel=\"nofollow noreferrer\">text_io</a> crate to achieve your goal.</p>\n\n<p>You must include the crate name and version in <em>Cargo.toml</em> file</p>\n\n<pre><code>[dependencies]\ntext_io = \"0.1.7\"\n</code></pre>\n\n<p>Here is the working example that you want.</p>\n\n<pre><code>#[macro_use] \nextern crate text_io;\nfn main() {\n    let i: i32 = read!();\n    print!(\"{}\",i);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "is_accepted": false, "score": 0, "last_activity_date": 1566224981, "last_edit_date": 1566224981, "creation_date": 1566224545, "answer_id": 57558686, "question_id": 57551107, "link": "https://stackoverflow.com/questions/57551107/is-there-any-other-way-of-taking-integer-or-float-input-rather-than-taking-strin/57558686#57558686", "title": "Is there any other way of taking integer or float input rather than taking string input and convert it?", "body": "<p>@Faheem Uz Zaman suggested using the text_io crate, which is an excellent option.  However, the <code>read!</code> macro really does exactly what the code in the original question does:  reads an input into a string variable and then attempts to parse that string into an i32.</p>\n\n<p>In order to parse input from the terminal into an i32 variable, some error-handling needs to be implemented.  The code in the question is complete and handles integer input, so long as the input is indeed an integer.  </p>\n\n<p>The text_io crate provides a <code>try_read!</code> macro which allows for bad input.  Here is an example of how to implement the try_read! macro, which requires adding the same type of error handling that could be added to the original question's sample code:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>use text_io::*;\nfn main() {\n\n    let i: i32 = match(try_read!()) {\n        Ok(integer_read) =&gt; integer_read,\n        Err(bad_string) =&gt; {\n            eprintln!(\"Error: {}\", bad_string);\n            return;\n        },\n    };\n    println!(\"{}\",i);\n}\n</code></pre>\n\n\n\n<p>This could be shortened using the <code>?</code> operator, which would require an adjustment to the return value for main():</p>\n\n<pre><code>use text_io::*;\nfn main()-&gt; Result&lt;(), Error&gt;{\n    let i: i32 = try_read!()?;\n    println!(\"{}\",i);\n    Ok(()) \n}\n</code></pre>\n\n<p>This will print the parsing error message if the input is not parseable to an i32.</p>\n"}], "owner": {"reputation": 93, "user_id": 11944806, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rcSqT.jpg?s=128&g=1", "display_name": "M Saad Sajid", "link": "https://stackoverflow.com/users/11944806/m-saad-sajid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 3, "closed_date": 1566225154, "accepted_answer_id": 57551840, "answer_count": 2, "score": 1, "last_activity_date": 1566225120, "creation_date": 1566194039, "question_id": 57551107, "link": "https://stackoverflow.com/questions/57551107/is-there-any-other-way-of-taking-integer-or-float-input-rather-than-taking-strin", "closed_reason": "Duplicate", "title": "Is there any other way of taking integer or float input rather than taking string input and convert it?", "body": "<p>I am having trouble while taking integer and float input directly.</p>\n\n<p>I am beginner to Rust and having problem while taking integer input. I did some research but I did not find a direct way of taking integer input as in C++. I just want to know that is there any other possible way of taking integer input without taking string input and than shadowing.</p>\n\n<pre><code>let mut input = String::new();\nstd::io::stdin().read_line(&amp;mut input).expect(\"Error\");\nlet input:i16 = input.trim().parse().unwrap();\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 1, "creation_date": 1566195286, "post_id": 57550004, "comment_id": 101564873, "body": "Perhaps you want codereview.SE instead of stackoverflow? This question looks a bit too broad."}, {"owner": {"reputation": 163, "user_id": 11944425, "user_type": "registered", "profile_image": "https://graph.facebook.com/2023412124609423/picture?type=large", "display_name": "David Golembiowski", "link": "https://stackoverflow.com/users/11944425/david-golembiowski"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566411918, "post_id": 57550004, "comment_id": 101651734, "body": "Thank you @SOFe, I&#39;ll keep that in mind for next time"}], "answers": [{"comments": [{"owner": {"reputation": 163, "user_id": 11944425, "user_type": "registered", "profile_image": "https://graph.facebook.com/2023412124609423/picture?type=large", "display_name": "David Golembiowski", "link": "https://stackoverflow.com/users/11944425/david-golembiowski"}, "edited": false, "score": 0, "creation_date": 1566412218, "post_id": 57551846, "comment_id": 101651842, "body": "Thank you for taking the time out to completely type this out. I especially like your demonstration of using the dereference to entry in <code>Cache::value</code>."}], "tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": true, "score": 3, "last_activity_date": 1566198095, "creation_date": 1566198095, "answer_id": 57551846, "question_id": 57550004, "link": "https://stackoverflow.com/questions/57550004/how-do-i-properly-implement-a-caching-struct-in-rust-for-lazily-computed-values/57551846#57551846", "title": "How do I properly implement a caching struct in Rust for lazily-computed values?", "body": "<ul>\n<li><p>In <code>set()</code>, <code>self.get(arg)</code> can be simplified to <code>value</code>.</p></li>\n<li><p><code>get()</code> only needs a non-mutable <code>&amp;self</code>.</p></li>\n<li><p><code>get()</code> and <code>set()</code> don\u2019t really seem that helpful in the first place.</p></li>\n<li><p>The <a href=\"https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html\" rel=\"nofollow noreferrer\"><code>hash_map::Entry</code></a> API can help you simplify <code>value()</code>.</p>\n\n<pre><code>fn value(&amp;mut self, arg: u32) -&gt; u32 {\n    let Self { internal, calculation } = self;\n    let entry = internal.entry(arg);\n    *entry.or_insert_with(|| (calculation)(arg))\n}\n</code></pre></li>\n</ul>\n\n<p>Then the minor style things:</p>\n\n<ul>\n<li><p>You can use <code>Self</code> instead of repeating the struct name inside the <code>impl</code>.</p></li>\n<li><p>Trailing commas are good.</p></li>\n</ul>\n\n<p>In all:</p>\n\n<pre><code>use std::collections::HashMap;\n\npub struct Cache&lt;T&gt;\n    where T: Fn(u32) -&gt; u32\n{\n    calculation: T,\n    internal: HashMap&lt;u32, u32&gt;,\n}\n\nimpl&lt;T&gt; Cache&lt;T&gt;\n    where T: Fn(u32) -&gt; u32\n{\n    pub fn new(calculation: T) -&gt; Cache&lt;T&gt; {\n        Self {\n            calculation,\n            internal: HashMap::new(),\n        }\n    }\n\n    pub fn value(&amp;mut self, arg: u32) -&gt; u32 {\n        let Self { internal, calculation } = self;\n        let entry = internal.entry(arg);\n        *entry.or_insert_with(|| (calculation)(arg))\n    }\n}\n\n#[test]\nfn call_with_different_values() {\n    let mut c = Cache::new(|a| a);\n    let _v1 = c.value(1);\n    let v2 = c.value(2);\n    assert_eq!(v2, 2);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=40f1ae68dc2b09e0011f2bef7dc864c1\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 163, "user_id": 11944425, "user_type": "registered", "profile_image": "https://graph.facebook.com/2023412124609423/picture?type=large", "display_name": "David Golembiowski", "link": "https://stackoverflow.com/users/11944425/david-golembiowski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 335, "favorite_count": 1, "accepted_answer_id": 57551846, "answer_count": 1, "score": 4, "last_activity_date": 1566198095, "creation_date": 1566183712, "question_id": 57550004, "link": "https://stackoverflow.com/questions/57550004/how-do-i-properly-implement-a-caching-struct-in-rust-for-lazily-computed-values", "title": "How do I properly implement a caching struct in Rust for lazily-computed values?", "body": "<p>In Rust, I'm searching for a more concise and idiomatic way to define a cache for expensive calculations.</p>\n\n<p>In Chapter 13 from the Second Edition of <em>The Rust Programming Language</em>, the authors leave an exercise for the reader to refactor a struct to return lazily-computed values.</p>\n\n<p>After four days of trial and error, I came up with:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\n#[allow(dead_code)]\nstruct Cache&lt;T&gt; \n    where T: Fn(u32) -&gt; u32\n{\n    calculation: T,\n    internal: HashMap&lt;u32, u32&gt;\n}\n\n#[allow(dead_code)]\nimpl&lt;T&gt; Cache&lt;T&gt;\n    where T: Fn(u32) -&gt; u32\n{\n    fn new(calculation: T) -&gt; Cache&lt;T&gt; {\n        Cache {\n            calculation,\n            internal: HashMap::new(),\n        }\n    }\n\n    fn set(&amp;mut self, arg: u32, value: u32) -&gt; u32 {\n        self.internal.insert(arg, value);\n        self.get(arg)\n    }\n\n    fn get(&amp;mut self, arg: u32) -&gt; u32 {\n        self.internal[&amp;arg]\n    }\n\n    fn value(&amp;mut self, arg: u32) -&gt; u32 {\n        match self.internal.contains_key(&amp;arg) {\n            true =&gt; {\n                self.get(arg)\n            },\n            false =&gt; {\n                self.set(arg, (self.calculation)(arg))\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>For the test function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[test]\nfn call_with_different_values() {\n    let mut c = Cache::new(|a| a);\n    let _v1 = c.value(1);\n    let v2 = c.value(2);\n    assert_eq!(v2, 2);\n}\n</code></pre>\n\n<p>Can I improve this <code>impl</code>? Is there a more acceptable way for this to be written?</p>\n"}, {"tags": ["generics", "rust", "yew"], "comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 1, "creation_date": 1566224412, "post_id": 57549813, "comment_id": 101579156, "body": "Please, provide <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> so we can download it / copy &amp; paste it. There will be higher chance that someone will help if you do it. For example - I&#39;ve never used Yew -&gt; no idea what I should put into the Cargo.toml. There&#39;s no single <code>use</code> statement -&gt; no idea from where are these types coming."}], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 3, "last_activity_date": 1597396477, "last_edit_date": 1597396477, "creation_date": 1566227257, "answer_id": 57559469, "question_id": 57549813, "link": "https://stackoverflow.com/questions/57549813/how-do-i-genericize-yew-web-request/57559469#57559469", "title": "How do I genericize Yew web request", "body": "<p><a href=\"https://docs.rs/yew/0.8.0/yew/html/struct.ComponentLink.html#method.send_back\" rel=\"nofollow noreferrer\"><code>ComponentLink::send_back()</code></a> expects a <code>Fn</code> closure. However, your closure is consuming a captured variable, namely <code>error_msg</code>, so it can only be called once. That makes your closure implement <code>FnOnce</code> instead of <code>Fn</code>, so it cannot be used there.</p>\n<p>A simpler way to see this is:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo;\n\nfn call(f: impl Fn() -&gt; Foo) {}\n\nfn test(x: Foo) {\n    let cb = move || x;\n    call(cb);\n}\n</code></pre>\n<p>The complete error message is somewhat clearer:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0525]: expected a closure that implements the `Fn` trait, but this closure only implements `FnOnce`\n --&gt; src/lib.rs:6:14\n  |\n6 |     let cb = move || x;\n  |              ^^^^^^^^-\n  |              |       |\n  |              |       closure is `FnOnce` because it moves the variable `x` out of its environment\n  |              this closure implements `FnOnce`, not `Fn`\n7 |     call(cb);\n  |     ---- the requirement to implement `Fn` derives from here\n</code></pre>\n<p>This makes sense; what would happen if you wrote <code>call(cb)</code> several times? Remember that <code>Foo</code> is not copyable nor clonable.</p>\n<p>Precisely, the easiest solution is to make your type cloneable, so it can be reused:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let cb = move || {\n    x.clone()\n};\n</code></pre>\n<p>And it works!</p>\n<p>If you don't want the cost of the clone, you could add some workaround, such as passing a function that returns an error or some kind of reference counted pointer. For example:</p>\n<pre><code>struct Foo;\n\nfn call(f: impl Fn() -&gt; Foo) {}\n\nfn test(build_x: impl Fn() -&gt; Foo) {\n    let cb = move || build_x();\n    call(cb);\n}\n</code></pre>\n<p>This works because <code>build_x</code> is a <code>Fn</code>, not a <code>FnOnce</code>, so it is not consumed when used, that is, you can call it as many times as you want.</p>\n<p>Another workaround without callbacks is to use an <code>Option</code> and consume it by using <code>Option::take</code>. This replaces it with <code>None</code>, and from the borrow checker's point of view the value goes on existing. However you need a <code>RefCell</code> because otherwise you would be mutating a captured variable and converting your closure into a <code>FnMut</code>.</p>\n<pre><code>use std::cell::RefCell;\nstruct Foo;\n\nfn call(f: impl Fn() -&gt; Foo) {}\n\nfn test(x: Foo) {\n    let ox = RefCell::new(Some(x));\n    let cb = move || ox.borrow_mut().take().unwrap();\n    call(cb);\n}\n</code></pre>\n<p><strong>UPDATE to the last option</strong></p>\n<p>Do not use a <code>RefCell</code> when a simple <code>Cell</code> will do. And <code>Cell</code> has a <code>take</code> member function that makes this code simpler:</p>\n<pre><code>use std::cell::Cell;\nstruct Foo;\n\nfn call(f: impl Fn() -&gt; Foo) {}\n\nfn test(x: Foo) {\n    let ox = Cell::new(Some(x));\n    let cb = move || ox.take().unwrap();\n    call(cb);\n}\n</code></pre>\n"}], "owner": {"reputation": 11396, "user_id": 183380, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/KLp2N.png?s=128&g=1", "display_name": "greggreg", "link": "https://stackoverflow.com/users/183380/greggreg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 333, "favorite_count": 1, "accepted_answer_id": 57559469, "answer_count": 1, "score": 0, "last_activity_date": 1597396477, "creation_date": 1566181134, "question_id": 57549813, "link": "https://stackoverflow.com/questions/57549813/how-do-i-genericize-yew-web-request", "title": "How do I genericize Yew web request", "body": "<p>I'm trying to figure out how to make this web request code from the yew examples generic for Deserialize types and variants of an enum.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Deserialize type\n#[derive(Debug, Deserialize)]\npub struct TagsResponse {\n    tags: Vec&lt;String&gt;,\n}\n\n// Enum variants\npub enum Msg {\n    TagsLoaded(Result&lt;TagsResponse, Error&gt;),\n    TagsLoadError,\n}\n\n// Working non-generic inline code\nlet callback = model.link.send_back(\n    //       want to make TagsResponse generic \u2935 \n    move |response: Response&lt;Json&lt;Result&lt;TagsResponse, Error&gt;&gt;&gt;| {\n        let (meta, Json(data)) = response.into_parts();\n        if meta.status.is_success() {\n         //  \u2193 and be able to pass in an enum value\n            Msg::TagsLoaded(data)\n        } else {\n         //  \u2193 and be able to pass in an enum value\n            Msg::TagsLoadError\n        }\n    },\n);\nlet request = Request::get(format!(\"{}{}\", API_ULR, \"tags\"))\n    .body(Nothing)\n    .unwrap();\nlet task = model.fetch_service.fetch(request, callback);\nmodel.fetch_task.push(task);\n</code></pre>\n\n<p>Here is about as far as I've gotten which seems pretty close but I've gotten into kind of a loop following the compiler:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn remote_get&lt;T: 'static&gt;(\n    fetch_service: &amp;mut FetchService,\n    link: &amp;mut ComponentLink&lt;Model&gt;,\n    success_msg: fn(Result&lt;T, Error&gt;) -&gt; Msg,\n    error_msg: Msg,\n) -&gt; FetchTask\nwhere\n    for&lt;'de&gt; T: serde::Deserialize&lt;'de&gt;,\n{\n    let callback = link.send_back(move |response: Response&lt;Json&lt;Result&lt;T, Error&gt;&gt;&gt;| {\n        let (meta, Json(data)) = response.into_parts();\n        if meta.status.is_success() {\n            success_msg(data)\n        } else {\n            error_msg\n        }\n    });\n    let request = Request::get(format!(\"{}{}\", API_ULR, \"articles?limit=10&amp;offset=0\"))\n        .body(Nothing)\n        .unwrap();\n    fetch_service.fetch(request, callback)\n}\n\n</code></pre>\n\n<p>with the call site:</p>\n\n<pre><code>let task = remote_get(\n    &amp;mut self.fetch_service,\n    &amp;mut self.link,\n    Msg::TagsLoaded,\n    Msg::TagsLoadError,\n);\nself.fetch_task.push(task);\n</code></pre>\n\n<p>produces:</p>\n\n<pre><code>    |\n598 |     error_msg: Msg,\n    |     --------- captured outer variable\n...\n608 |             error_msg\n    |             ^^^^^^^^^ cannot move out of captured variable in an `Fn` closure\n</code></pre>\n\n<p>Strangely, if I remove error_msg from the arguments list and simply hard code <code>Msg::TagsLoadError</code> it will compile but then the request doesn't run. \ud83e\udd37\u200d\u2642\ufe0f</p>\n"}, {"tags": ["rust", "pattern-matching"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566166462, "post_id": 57547912, "comment_id": 101560444, "body": "<a href=\"https://stackoverflow.com/questions/50644111/does-this-error-message-mean-i-can-use-pattern-matching-in-for-loops\" title=\"does this error message mean i can use pattern matching in for loops\">stackoverflow.com/questions/50644111/&hellip;</a> is another question that has to do with patterns that you may find useful."}], "answers": [{"tags": [], "owner": {"reputation": 11066, "user_id": 147057, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/cf9d83a95db2460ccb18f311fa8a766c?s=128&d=identicon&r=PG", "display_name": "max taldykin", "link": "https://stackoverflow.com/users/147057/max-taldykin"}, "is_accepted": true, "score": 7, "last_activity_date": 1566164107, "last_edit_date": 1566164107, "creation_date": 1566159096, "answer_id": 57548031, "question_id": 57547912, "link": "https://stackoverflow.com/questions/57547912/what-is-let-foobar-zar-in-rust/57548031#57548031", "title": "What is let Foo(bar) = zar in Rust?", "body": "<p>This is a destructuring assignment. It just takes value out of a struct or enum:</p>\n\n<pre><code>struct Elements(Vec&lt;&amp;'static str&gt;);\n\nfn main() {\n    let elements = Elements(vec![\"hello\", \"world\"]);\n    let Elements(array) = elements;\n    println!(\"array: {:?}\", array); // prints array: [\"hello\", \"world\"]\n}\n</code></pre>\n\n<p>You can use patterns in many places in Rust. Even in <a href=\"https://doc.rust-lang.org/book/ch18-01-all-the-places-for-patterns.html#let-statements\" rel=\"nofollow noreferrer\">let statements</a>. Just be sure that the pattern is <a href=\"https://doc.rust-lang.org/book/ch18-02-refutability.html\" rel=\"nofollow noreferrer\">irrefutable</a>.</p>\n"}], "owner": {"reputation": 3885, "user_id": 652528, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a580420b66f89e76e1fb9a368f785b3f?s=128&d=identicon&r=PG", "display_name": "geckos", "link": "https://stackoverflow.com/users/652528/geckos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 57548031, "answer_count": 1, "score": 1, "last_activity_date": 1566164439, "creation_date": 1566158052, "last_edit_date": 1566164439, "question_id": 57547912, "link": "https://stackoverflow.com/questions/57547912/what-is-let-foobar-zar-in-rust", "title": "What is let Foo(bar) = zar in Rust?", "body": "<p>I was reading <a href=\"https://www.abubalay.com/blog/2018/04/08/recursive-ascent\" rel=\"nofollow noreferrer\">https://www.abubalay.com/blog/2018/04/08/recursive-ascent</a> and it does something that I couldn't understand</p>\n\n<pre><code>let Elements(array) = elements;\n</code></pre>\n\n<p>What does that expression means? Is it creating the <code>array</code> variable? What about the <code>Elements(...)</code>!?</p>\n\n<p>Regards</p>\n"}, {"tags": ["events", "rust", "webassembly", "game-loop"], "answers": [{"comments": [{"owner": {"reputation": 123, "user_id": 2270245, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22e5c5b63f524b7518688d5be1f394?s=128&d=identicon&r=PG", "display_name": "Filip Franik", "link": "https://stackoverflow.com/users/2270245/filip-franik"}, "edited": false, "score": 0, "creation_date": 1566243838, "post_id": 57556479, "comment_id": 101587680, "body": "Actually lazy_static with Mutex were not a large code refactor. This way I achieved a singleton pattern which to me is the correct way of implementing this logic."}], "tags": [], "owner": {"reputation": 1158, "user_id": 1275025, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2nyU3.png?s=128&g=1", "display_name": "reggaemuffin", "link": "https://stackoverflow.com/users/1275025/reggaemuffin"}, "is_accepted": true, "score": 1, "last_activity_date": 1566216702, "creation_date": 1566216702, "answer_id": 57556479, "question_id": 57547849, "link": "https://stackoverflow.com/questions/57547849/rust-adding-event-listeners-to-a-webassembly-game/57556479#57556479", "title": "Rust - adding event listeners to a webassembly game", "body": "<p>In your example <code>game_loop</code> owns <code>game</code>, as it is moved into the loop. So anything that should change game needs to happen inside <code>game_loop</code>. To fit event handling into this, you have multiple options:</p>\n\n<h3>Option 1</h3>\n\n<p><strong>Let the <code>game_loop</code> poll for events.</strong></p>\n\n<p>You create a queue of events and your <code>game_loop</code> will have some logic to get the first event and handle it.</p>\n\n<p>You will have to deal with synchronization here, so I suggest that you read up on <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\">Mutex</a> and <a href=\"https://doc.rust-lang.org/1.0.0/book/concurrency.html\" rel=\"nofollow noreferrer\">Concurrency</a> in general. But it should be a fairly easy task once you get the hang of it. Your loop gets one reference and each event handler gets one, all try to unlock the mutex and then access the queue (vector probably).</p>\n\n<p>This will make your <code>game_loop</code> the monolithic one truth of them all, which is a popular engine design because it is easy to reason about and start with.</p>\n\n<p>But maybe you want to be less centralized.</p>\n\n<h2>Option 2</h2>\n\n<p><strong>Let events happen outside the loop</strong></p>\n\n<p>This idea would be a bigger refactor. You would put your <code>Game</code> in a <a href=\"https://docs.rs/lazy_static/1.3.0/lazy_static/\" rel=\"nofollow noreferrer\"><code>lazy_static</code></a> with a Mutex around it. </p>\n\n<p>Every invocation of the <code>game_loop</code> it will try to get the lock on said Mutex and then perform game calculations. </p>\n\n<p>When an input event happens, that event also tries to get the Mutex on the <code>Game</code>. This means while the <code>game_loop</code> is processing, no input events are handled, but they will try to get in between ticks.</p>\n\n<p>A challenge here would be to preserve input order and to make sure that inputs are processed quick enough. This might be a bigger challenge to get completely right. But the design will give you some possibilities.</p>\n\n<p>A fleshed out version of this idea is <a href=\"https://github.com/amethyst/amethyst\" rel=\"nofollow noreferrer\"><code>Amethyst</code></a>, which is massively parallel and makes for a clean design. But they employ a quite more complex design behind their engine.</p>\n"}, {"comments": [{"owner": {"reputation": 123, "user_id": 2270245, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22e5c5b63f524b7518688d5be1f394?s=128&d=identicon&r=PG", "display_name": "Filip Franik", "link": "https://stackoverflow.com/users/2270245/filip-franik"}, "edited": false, "score": 0, "creation_date": 1566243571, "post_id": 57557329, "comment_id": 101587597, "body": "I see now how much of a hassle keeping the Game as a local variable actually is. Since there always will be only a single Game that should be alive through all lifetime of the application then it makes much more sense to KISS it as a singleton. From what I saw lazy_static and a Mutex is a perfect way of creating a singleton. I actually refactored my code this way and achieved something that smells good to me. Thanks for the rustfmt i will use it. I just really hate Cleopatra parentheses."}], "tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": false, "score": 3, "last_activity_date": 1566219786, "creation_date": 1566219786, "answer_id": 57557329, "question_id": 57547849, "link": "https://stackoverflow.com/questions/57547849/rust-adding-event-listeners-to-a-webassembly-game/57557329#57557329", "title": "Rust - adding event listeners to a webassembly game", "body": "<p>I think that the compiler error message is pretty clear in this case. You're trying to borrow the <code>game</code> in the closure for the <code>'static</code> lifetime and then you're also trying to move the <code>game</code>. It isn't allowed. I'd recommend to read <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">The Rust Programming Language</a> book again. Focus on chapter 4 - Understanding Ownership.</p>\n\n<p>To make it shorter, your question boils down to something like - <em>how to share a state, which can be mutated</em>. There're plenty of ways how to achieve this goal, but it really depends on your needs (single or multi thread, etc.). I'm going to use <code>Rc</code> &amp; <code>RefCell</code> for this problem.</p>\n\n<p><code>Rc</code> (<a href=\"https://doc.rust-lang.org/std/rc/index.html\" rel=\"nofollow noreferrer\">std::rc</a>):</p>\n\n<blockquote>\n  <p>The type <code>Rc&lt;T&gt;</code> provides shared ownership of a value of type <code>T</code>, allocated in the heap. Invoking <code>clone</code> on <code>Rc</code> produces a new pointer to the same value in the heap. When the last <code>Rc</code> pointer to a given value is destroyed, the pointed-to value is also destroyed.</p>\n</blockquote>\n\n<p><code>RefCell</code> (<a href=\"https://doc.rust-lang.org/beta/std/cell/index.html\" rel=\"nofollow noreferrer\">std::cell</a>):</p>\n\n<blockquote>\n  <p>Values of the <code>Cell&lt;T&gt;</code> and <code>RefCell&lt;T&gt;</code> types may be mutated through shared references (i.e. the common <code>&amp;T</code> type), whereas most Rust types can only be mutated through unique (<code>&amp;mut T</code>) references. We say that <code>Cell&lt;T&gt;</code> and <code>RefCell&lt;T&gt;</code> provide 'interior mutability', in contrast with typical Rust types that exhibit 'inherited mutability'.</p>\n</blockquote>\n\n<p>Here's what I did to your structures:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Inner {\n    time: f64,\n    location: Point,\n    destination: Point,\n}\n\n#[derive(Clone)]\npub struct Game {\n    inner: Rc&lt;RefCell&lt;Inner&gt;&gt;,\n}\n</code></pre>\n\n<p>What does this mean? <code>Inner</code> holds the game state (same fields as the old <code>Game</code>). New <code>Game</code> has just one field <code>inner</code>, which contains the shared state.</p>\n\n<ul>\n<li><code>Rc&lt;T&gt;</code> (<code>T</code> is <code>RefCell&lt;Inner</code>> in this case) - allows me to clone <code>inner</code> multiple times, but it won't clone the <code>T</code></li>\n<li><code>RefCell&lt;T&gt;</code> (<code>T</code> is <code>Inner</code> in this case) - allows me to borrow <code>T</code> immutably or mutably, checking is done in the runtime</li>\n</ul>\n\n<p>I can clone the <code>Game</code> structure multiple times now and it won't clone the <code>RefCell&lt;Inner&gt;</code>, just the <code>Game</code> &amp; <code>Rc</code>. Which is what the <code>enclose!</code> macro is doing in the updated <code>main.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let game: Game = Game::default();\n\ncanvas.add_event_listener(enclose!( (game) move |event: MouseDownEvent| {\n    game.set_destination(event);\n}));\n\ngame_loop(game, context, 0.);\n</code></pre>\n\n<p>Without the <code>enclose!</code> macro:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let game: Game = Game::default();\n\n// game_for_mouse_down_event_closure holds the reference to the\n// same `RefCell&lt;Inner&gt;` as the initial `game`\nlet game_for_mouse_down_event_closure = game.clone();\ncanvas.add_event_listener(move |event: MouseDownEvent| {\n    game_for_mouse_down_event_closure.set_destination(event);\n});\n\ngame_loop(game, context, 0.);\n</code></pre>\n\n<hr>\n\n<p>Updated <code>game.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{cell::RefCell, rc::Rc};\n\nuse stdweb::traits::IMouseEvent;\nuse stdweb::web::event::MouseDownEvent;\n\n#[derive(Clone, Copy)]\npub struct Point {\n    pub x: f64,\n    pub y: f64,\n}\n\nimpl From&lt;MouseDownEvent&gt; for Point {\n    fn from(e: MouseDownEvent) -&gt; Self {\n        Self {\n            x: e.client_x() as f64,\n            y: e.client_y() as f64,\n        }\n    }\n}\n\nstruct Inner {\n    time: f64,\n    location: Point,\n    destination: Point,\n}\n\nimpl Default for Inner {\n    fn default() -&gt; Self {\n        Inner {\n            time: 0.,\n            location: Point { x: 0., y: 0. },\n            destination: Point { x: 700., y: 500. },\n        }\n    }\n}\n\n#[derive(Clone)]\npub struct Game {\n    inner: Rc&lt;RefCell&lt;Inner&gt;&gt;,\n}\n\nimpl Default for Game {\n    fn default() -&gt; Self {\n        Game {\n            inner: Rc::new(RefCell::new(Inner::default())),\n        }\n    }\n}\n\nimpl Game {\n    pub fn update(&amp;self, timestamp: f64) {\n        let mut inner = self.inner.borrow_mut();\n\n        if timestamp - inner.time &gt; 10f64 {\n            inner.location.x += (inner.destination.x - inner.location.x) / 10f64;\n            inner.location.y += (inner.destination.y - inner.location.y) / 10f64;\n\n            inner.time = timestamp;\n        }\n    }\n\n    pub fn set_destination&lt;T: Into&lt;Point&gt;&gt;(&amp;self, location: T) {\n        let mut inner = self.inner.borrow_mut();\n        inner.destination = location.into();\n    }\n\n    pub fn location(&amp;self) -&gt; Point {\n        self.inner.borrow().location\n    }\n}\n</code></pre>\n\n<p>Updated <code>main.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use stdweb::traits::*;\nuse stdweb::unstable::TryInto;\nuse stdweb::web::document;\nuse stdweb::web::event::MouseDownEvent;\nuse stdweb::web::html_element::CanvasElement;\nuse stdweb::web::CanvasRenderingContext2d;\n\nuse game::Game;\n\nmod game;\n\n// https://github.com/koute/stdweb/blob/master/examples/todomvc/src/main.rs#L31-L39\nmacro_rules! enclose {\n    ( ($( $x:ident ),*) $y:expr ) =&gt; {\n        {\n            $(let $x = $x.clone();)*\n            $y\n        }\n    };\n}\n\nfn game_loop(game: Game, context: CanvasRenderingContext2d, timestamp: f64) {\n    game.update(timestamp);\n    draw(&amp;game, &amp;context);\n\n    stdweb::web::window().request_animation_frame(|time: f64| {\n        game_loop(game, context, time);\n    });\n}\n\nfn draw(game: &amp;Game, context: &amp;CanvasRenderingContext2d) {\n    context.clear_rect(0., 0., 800., 800.);\n    context.set_fill_style_color(\"red\");\n\n    let location = game.location();\n    context.fill_rect(location.x, location.y, 5., 5.);\n}\n\nfn main() {\n    let canvas: CanvasElement = document()\n        .query_selector(\"#canvas\")\n        .unwrap()\n        .unwrap()\n        .try_into()\n        .unwrap();\n\n    canvas.set_width(800);\n    canvas.set_height(600);\n\n    let context = canvas.get_context().unwrap();\n\n    let game: Game = Game::default();\n\n    canvas.add_event_listener(enclose!( (game) move |event: MouseDownEvent| {\n        game.set_destination(event);\n    }));\n\n    game_loop(game, context, 0.);\n}\n</code></pre>\n\n<hr>\n\n<p>P.S. Please, before sharing any code in the future, install and use the <a href=\"https://github.com/rust-lang/rustfmt\" rel=\"nofollow noreferrer\">rustfmt</a>.</p>\n"}], "owner": {"reputation": 123, "user_id": 2270245, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22e5c5b63f524b7518688d5be1f394?s=128&d=identicon&r=PG", "display_name": "Filip Franik", "link": "https://stackoverflow.com/users/2270245/filip-franik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1006, "favorite_count": 0, "accepted_answer_id": 57556479, "answer_count": 2, "score": 2, "last_activity_date": 1566219786, "creation_date": 1566157507, "last_edit_date": 1566157700, "question_id": 57547849, "link": "https://stackoverflow.com/questions/57547849/rust-adding-event-listeners-to-a-webassembly-game", "title": "Rust - adding event listeners to a webassembly game", "body": "<p>I'm attempting to create a game in web assembly. I chose to prepare it in rust and compile it using cargo-web. I managed to get a working game loop, but I have a problem with adding MouseDownEvent listener due to rust borrowing mechanisms. I would very much prefer to write \"safe\" code (without using \"unsafe\" keyword) </p>\n\n<p>At this moment the game simply moves a red box from (0,0) to (700,500) with speed depending on the distance. I would like to have the next step to use user click update the destination.</p>\n\n<p>This is the simplified and working code of the game.</p>\n\n<p>static/index.html</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;title&gt;The Game!&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;canvas id=\"canvas\" width=\"600\" height=\"600\"&gt;\n    &lt;script src=\"game.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p>src/main.rs</p>\n\n<pre><code>mod game;\n\nuse game::Game;\n\nuse stdweb::console;\nuse stdweb::traits::*;\nuse stdweb::unstable::TryInto;\nuse stdweb::web::document;\nuse stdweb::web::CanvasRenderingContext2d;\nuse stdweb::web::html_element::CanvasElement;\n\nuse stdweb::web::event::MouseDownEvent;\n\nfn main()\n{\n    let canvas: CanvasElement = document()\n        .query_selector(\"#canvas\")\n        .unwrap()\n        .unwrap()\n        .try_into()\n        .unwrap();\n\n    canvas.set_width(800u32);\n    canvas.set_height(600u32);\n\n\n    let context = canvas.get_context().unwrap();\n\n    let game: Game = Game::new();\n\n    // canvas.add_event_listener(|event: MouseDownEvent|\n    // {\n    //     game.destination.x = (event.client_x() as f64);\n    //     game.destination.y = (event.client_y() as f64);\n    // });\n\n    game_loop(game, context, 0f64);\n}\n\n\nfn game_loop(mut game : Game, context : CanvasRenderingContext2d, timestamp : f64)\n{\n    game.cycle(timestamp);\n    draw(&amp;game,&amp;context);\n\n    stdweb::web::window().request_animation_frame( |time : f64| { game_loop(game, context, time); } );\n}\n\n\nfn draw(game : &amp;Game, context: &amp;CanvasRenderingContext2d)\n{\n    context.clear_rect(0f64,0f64,800f64,800f64);\n    context.set_fill_style_color(\"red\");\n    context.fill_rect(game.location.x, game.location.y, 5f64, 5f64);\n}\n</code></pre>\n\n<p>src/game.rs</p>\n\n<pre><code>pub struct Point\n{\n    pub x: f64,\n    pub y: f64,\n}\n\npub struct Game\n{\n    pub time: f64,\n    pub location: Point,\n    pub destination: Point,\n}\n\nimpl Game\n{\n    pub fn new() -&gt; Game\n    {\n        let game = Game\n        {   \n            time: 0f64,\n            location: Point{x: 0f64, y: 0f64},\n            destination: Point{x: 700f64, y: 500f64},\n        };\n\n        return game;\n    }\n\n    pub fn cycle(&amp;mut self, timestamp : f64)\n    {\n        if timestamp - self.time &gt; 10f64\n        {\n            self.location.x += (self.destination.x - self.location.x) / 10f64; \n            self.location.y += (self.destination.y - self.location.y) / 10f64;\n\n            self.time = timestamp;\n        }\n    }\n}\n</code></pre>\n\n<p>The commented out part of main.rs is my attempt of adding a MouseDownEvent listener. Unfortunately it generates a compilation error:</p>\n\n<pre><code>error[E0505]: cannot move out of `game` because it is borrowed\n  --&gt; src\\main.rs:37:15\n   |\n31 |       canvas.add_event_listener(|event: MouseDownEvent|\n   |       -                         ----------------------- borrow of `game` occurs here\n   |  _____|\n   | |\n32 | |     {\n33 | |         game.destination.x = (event.client_x() as f64);\n   | |         ---- borrow occurs due to use in closure\n34 | |         game.destination.y = (event.client_y() as f64);\n35 | |     });\n   | |______- argument requires that `game` is borrowed for `'static`\n36 |\n37 |       game_loop(game, context, 0f64);\n   |                 ^^^^ move out of `game` occurs here\n</code></pre>\n\n<p>I would very much like to know how to properly implement a way of reading user input into a game. It doesn't need to be asynchronous. </p>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1566197214, "post_id": 57547585, "comment_id": 101565544, "body": "Are you sure you are using the latest version of winapi? <code>wincontypes</code> was added in version 0.3.7, released last april, so if you have an older version it won&#39;t be there. You can check which version you have in your <code>Cargo.lock</code>."}], "answers": [{"tags": [], "owner": {"reputation": 4915, "user_id": 11128312, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ufn85.jpg?s=128&g=1", "display_name": "Strive Sun", "link": "https://stackoverflow.com/users/11128312/strive-sun"}, "is_accepted": true, "score": 0, "last_activity_date": 1566202173, "creation_date": 1566202173, "answer_id": 57552728, "question_id": 57547585, "link": "https://stackoverflow.com/questions/57547585/cant-find-wincontypes/57552728#57552728", "title": "Can&#39;t find &quot;wincontypes&quot;", "body": "<p>On the one hand, it has something to do with the RUST version. Now the latest version is 0.3.7.</p>\n\n<p>Use <code>cargo --version</code> to check</p>\n\n<p>If not the latest version, please use <code>rustup update</code> to update</p>\n\n<p>On the other hand, you did not add dependencies.</p>\n\n<p><a href=\"https://www.rust-lang.org/learn/get-started\" rel=\"nofollow noreferrer\">How to add dependencies?</a></p>\n\n<p>And you can refer this <a href=\"https://github.com/retep998/winapi-rs\" rel=\"nofollow noreferrer\">article</a> to learn more.</p>\n\n<p>Why no <code>wincontypes</code> in <code>um</code> rustc(E0432)?</p>\n\n<p><strong>Modify dependencies in the Cargo. toml manifest file.</strong></p>\n\n<p>Like this: </p>\n\n<pre><code>[dependencies]\nwinapi = { version = \"0.3\", features = [\"winuser\",\"wincontypes\"] }\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 11102496, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37cd66e8e26c3b3dd05cd9a3e5e6dd8e?s=128&d=identicon&r=PG", "display_name": "Kyhou", "link": "https://stackoverflow.com/users/11102496/kyhou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 57552728, "answer_count": 1, "score": 0, "last_activity_date": 1566202173, "creation_date": 1566155315, "question_id": 57547585, "link": "https://stackoverflow.com/questions/57547585/cant-find-wincontypes", "title": "Can&#39;t find &quot;wincontypes&quot;", "body": "<p>I'm trying to use the COORD struct of the crate winapi.</p>\n\n<p>btw: I'm pretty new to rust, so I might have missed something obvious.</p>\n\n<p>My code looks like this.</p>\n\n<pre><code>extern crate kernel32;\nextern crate winapi;\nextern crate libc;\n\nuse std::os::windows::ffi::OsStrExt;\nuse std::ffi::OsStr;\nuse winapi::um::wincontypes;\n\n...\n</code></pre>\n\n<p>The last line shows this error:</p>\n\n<pre><code>unresolved import `winapi::um::wincontypes`\n\nno `wincontypes` in `um`rustc(E0432)\nmain.rs(7, 5): no `wincontypes` in `um`\n</code></pre>\n\n<p>I looked at the documentation(<a href=\"https://docs.rs/winapi/0.3.7/winapi/um/wincontypes/struct.COORD.html\" rel=\"nofollow noreferrer\">https://docs.rs/winapi/0.3.7/winapi/um/wincontypes/struct.COORD.html</a>) and it is there, so I don't know what is wrong here.</p>\n"}, {"tags": ["rust", "graphql", "juniper"], "answers": [{"tags": [], "owner": {"reputation": 402, "user_id": 531650, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f48c610bba004ec446b2ccebf3c1b20b?s=128&d=identicon&r=PG", "display_name": "Adam", "link": "https://stackoverflow.com/users/531650/adam"}, "is_accepted": false, "score": 0, "last_activity_date": 1566145006, "last_edit_date": 1566145006, "creation_date": 1566144315, "answer_id": 57546248, "question_id": 57546247, "link": "https://stackoverflow.com/questions/57546247/how-do-i-add-a-field-to-a-graphql-struct-of-type-graphql-union-rust-enums-and/57546248#57546248", "title": "How do I add a field to a GraphQL struct of type GraphQL Union? (Rust enums and Juniper)", "body": "<p>You need to add <code>where Scalar = &lt;S&gt;</code> to your <code>graphql_union!</code> definition:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>graphql_union!(Character: () where Scalar = &lt;S&gt; |&amp;self| {\n    instance_resolvers: |_| {\n        &amp;Human =&gt; match *self { Character::Human(ref h) =&gt; Some(h), _ =&gt; None },\n        &amp;Droid =&gt; match *self { Character::Droid(ref d) =&gt; Some(d), _ =&gt; None },\n    }\n});\n</code></pre>\n\n<p>This fixes the error. I found this on the <a href=\"https://github.com/graphql-rust/juniper/blob/master/docs/book/content/types/unions.md#enums\" rel=\"nofollow noreferrer\">latest master of the Gitbook's source</a>. Maybe the currently-released docs are out-of-date.</p>\n"}], "owner": {"reputation": 402, "user_id": 531650, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f48c610bba004ec446b2ccebf3c1b20b?s=128&d=identicon&r=PG", "display_name": "Adam", "link": "https://stackoverflow.com/users/531650/adam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 257, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1566145006, "creation_date": 1566144315, "question_id": 57546247, "link": "https://stackoverflow.com/questions/57546247/how-do-i-add-a-field-to-a-graphql-struct-of-type-graphql-union-rust-enums-and", "title": "How do I add a field to a GraphQL struct of type GraphQL Union? (Rust enums and Juniper)", "body": "<p>I copied the straightforward GraphQL Union example from <a href=\"https://graphql-rust.github.io/types/unions.html#enums\" rel=\"nofollow noreferrer\">the Juniper GitBook</a>. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use juniper::{graphql_union, GraphQLObject};\n\n// I copied the below from the Juniper Gitbook\n\n#[derive(GraphQLObject)]\nstruct Human {\n    id: String,\n    home_planet: String,\n}\n\n#[derive(GraphQLObject)]\nstruct Droid {\n    id: String,\n    primary_function: String,\n}\n\nenum Character {\n    Human(Human),\n    Droid(Droid),\n}\n\ngraphql_union!(Character: () where Scalar = &lt;S&gt; |&amp;self| {\n    instance_resolvers: |_| {\n        &amp;Human =&gt; match *self { Character::Human(ref h) =&gt; Some(h), _ =&gt; None },\n        &amp;Droid =&gt; match *self { Character::Droid(ref d) =&gt; Some(d), _ =&gt; None },\n    }\n});\n</code></pre>\n\n<p>And this worked fine. But then I tried to use my new field inside a GraphQLObject struct.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\n\n// I added this type myself\n\n#[derive(GraphQLObject)]\nstruct Movie {\n    protagonist: Character,\n    title: String,\n}\n</code></pre>\n\n<p>This gave me a weird error:</p>\n\n<pre><code>error[E0277]: the trait bound `Character: juniper::types::base::GraphQLType&lt;__S&gt;` is not satisfied\n  --&gt; src/main.rs:24:10\n   |\n24 | #[derive(GraphQLObject)]\n   |          ^^^^^^^^^^^^^ the trait `juniper::types::base::GraphQLType&lt;__S&gt;` is not implemented for `Character`\n   |\n   = help: consider adding a `where Character: juniper::types::base::GraphQLType&lt;__S&gt;` bound\n   = note: required because of the requirements on the impl of `juniper::types::base::GraphQLType&lt;__S&gt;` for `&amp;Character`\n   = note: required because of the requirements on the impl of `juniper::executor::IntoResolvable&lt;'_, __S, &amp;Character, _&gt;` for `&amp;Character`\n   = note: required by `juniper::executor::IntoResolvable::into`\n</code></pre>\n\n<p>I have no idea what's going on. I know the GraphQLObject syntax for my Movie struct is right.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566144979, "post_id": 57546092, "comment_id": 101555850, "body": "All answers to &quot;When would a variable be nullable&quot; in other languages can answer your question."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 1, "creation_date": 1566145405, "post_id": 57546092, "comment_id": 101555947, "body": "In Go, <code>nil</code> doesn&#39;t really represent the zero-value of a type. <code>nil</code> represents the zero-value of the <i>pointer</i> type. The real zero-value for structs is the <code>make</code>/<code>new</code> version of it."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566145788, "post_id": 57546092, "comment_id": 101556041, "body": "In addition to cases where you truly want absence of value, sometimes you might also want an intermediate yet memory safe state of value. For example, if you want to replace a struct field <code>foo.bar</code> with <code>f(foo.bar)</code>, where <code>f</code> is a <code>Fn(Bar)-&gt;Bar</code>, you need <code>Option</code> so that <code>foo.bar</code> remains a valid value even if <code>f</code> panicks somewhere."}], "answers": [{"tags": [], "owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "is_accepted": true, "score": 4, "last_activity_date": 1566146451, "last_edit_date": 1566146451, "creation_date": 1566143475, "answer_id": 57546143, "question_id": 57546092, "link": "https://stackoverflow.com/questions/57546092/whats-the-practical-use-of-option-in-rust/57546143#57546143", "title": "What&#39;s the practical use of Option in rust?", "body": "<blockquote>\n  <p>How is absence of a value useful in practice?</p>\n</blockquote>\n\n<p>A simple example is a function that looks for the first matching element in a collection. It may find it, and return it, or not find any.</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/option/index.html\" rel=\"nofollow noreferrer\">docs</a> give a few more cases:</p>\n\n<blockquote>\n  <ul>\n  <li>Initial values</li>\n  <li>Return values for functions that are not defined over their entire input range (partial functions)</li>\n  <li>Return value for otherwise reporting simple errors, where None is returned on error</li>\n  <li>Optional struct fields</li>\n  <li>Struct fields that can be loaned or \"taken\"</li>\n  <li>Optional function arguments</li>\n  <li>Nullable pointers</li>\n  <li>Swapping things out of difficult situations</li>\n  </ul>\n</blockquote>\n\n<p>Now, you may ask: why don't we use one of the values to mark an empty one? For two reasons:</p>\n\n<ul>\n<li><p>There are cases where you do not have a valid \"zero-value\" or a valid \"invalid\" value. In this case, you have to use some flag somewhere else to store the fact that something is invalid.</p></li>\n<li><p>In general, it is simpler to use the same solution everywhere than having to mark and document which is the \"none\" value.</p></li>\n</ul>\n\n<blockquote>\n  <p>Why will one declare it to have it absent?</p>\n</blockquote>\n\n<p>This is different than initialized/uninitialized values. <code>Option</code> is simply a type that contains either \"nothing\" (<code>None</code>) or a \"value\" of some type (<code>Some(value)</code>)</p>\n\n<p>You can <em>conceptually</em> see it as a <code>struct</code> with a flag and some space for the value itself.</p>\n\n<blockquote>\n  <p>Also please explain, at what point the memory is allocated for i during the initial declaration or when  i gets some value?</p>\n</blockquote>\n\n<p>That depends on the implementation. One could decide to implement <code>Option</code> using a pointer to the value, which means it could delay allocating.</p>\n\n<p>However, the most likely implementation is avoiding pointers and keeping the value plus an extra flag. Note that, for some types, you can also optimize further and avoid the flag altogether. For instance, if you have an <code>Option</code> of a pointer, you can simply use the zero value for <code>None</code>. In fact, Rust does such a thing for types like <code>Option&lt;Box&lt;T&gt;&gt;</code>.</p>\n"}], "owner": {"reputation": 1769, "user_id": 3151330, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/osBeZ.jpg?s=128&g=1", "display_name": "manikawnth", "link": "https://stackoverflow.com/users/3151330/manikawnth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "closed_date": 1566150008, "accepted_answer_id": 57546143, "answer_count": 1, "score": 1, "last_activity_date": 1566146451, "creation_date": 1566142994, "question_id": 57546092, "link": "https://stackoverflow.com/questions/57546092/whats-the-practical-use-of-option-in-rust", "closed_reason": "Needs more focus", "title": "What&#39;s the practical use of Option in rust?", "body": "<p>Consider this example</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut i: Option&lt;i32&gt; = None;\n    //after some processing it got some value of 55\n    i = Some(55);\n    println!(\"value is {:?}\", i.unwrap());\n}\n</code></pre>\n\n<p>In go, <code>nil</code> represents the zero-value of that type. \nHowever in rust, it represents absence of a value. How is absence of a value useful in practice?</p>\n\n<p>When a variable with a type is declared, it must have some value either initialized or un-initialized. Why will one declare it to have it absent?</p>\n\n<p>Also please explain, at what point the memory is allocated for <code>i</code>  during the initial declaration or when <code>i</code> gets some value?</p>\n\n<p>I might be asking a stupid question, but want to get my head around the need of this concept.</p>\n"}, {"tags": ["rust", "macros", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": true, "score": 2, "last_activity_date": 1566144803, "creation_date": 1566144803, "answer_id": 57546309, "question_id": 57545803, "link": "https://stackoverflow.com/questions/57545803/how-to-write-a-macro-to-match-slightly-different-match-statements/57546309#57546309", "title": "How to write a macro to match slightly different match statements?", "body": "<p>Instead of calling a macro per line, you want to make a single macro that encloses them all:</p>\n\n<pre><code>macro_rules! the_macro {\n    ($($alone:ident),* ; $($withx:ident),*) =&gt; {\n        match self {\n            $( X::$alone(_x) =&gt; call_me(), )*\n            $( X::$withx(x) =&gt; x.call_me(), )*\n        }\n    }\n}\n</code></pre>\n\n<p>Then you can use it like this:</p>\n\n<pre><code>the_macro!(B, C, D; A, Z);\n</code></pre>\n"}], "owner": {"reputation": 897, "user_id": 4528728, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/48b7aeab16c3e50657c88ac3542a502b?s=128&d=identicon&r=PG&f=1", "display_name": "Slim Shady", "link": "https://stackoverflow.com/users/4528728/slim-shady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 57546309, "answer_count": 1, "score": 1, "last_activity_date": 1566144803, "creation_date": 1566140895, "question_id": 57545803, "link": "https://stackoverflow.com/questions/57545803/how-to-write-a-macro-to-match-slightly-different-match-statements", "title": "How to write a macro to match slightly different match statements?", "body": "<p>I have match statement like</p>\n\n<pre><code>match self{\nX::A(x) =&gt; x.call_me(),\nX::B(x) =&gt; call_me(),\nX::C(x) =&gt; call_me(),\nX::D(x) =&gt; call_me(),\nX::Z(x) =&gt; x.call_me(),\n}\n</code></pre>\n\n<p>Can i write two macros then join them somehow in a single match statement ? If not how would i write two types of patterns one with A&amp;Z other with B,C,D in single macro ?</p>\n"}, {"tags": ["error-handling", "rust", "actix-web"], "answers": [{"tags": [], "owner": {"reputation": 410, "user_id": 3797176, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ysK5k.png?s=128&g=1", "display_name": "Axel Montini", "link": "https://stackoverflow.com/users/3797176/axel-montini"}, "is_accepted": false, "score": 0, "last_activity_date": 1619168542, "creation_date": 1619168542, "answer_id": 67227017, "question_id": 57544209, "link": "https://stackoverflow.com/questions/57544209/obtain-failurefail-in-actix-web-1-0-middleware/67227017#67227017", "title": "Obtain failure::Fail in actix-web 1.0 Middleware", "body": "<p>I have not found a solution to this.</p>\n<p>Instead, the situation has evolved to a point where <code>failure</code> is not needed anymore and I can just deal with std <code>Error</code>s.</p>\n"}], "owner": {"reputation": 410, "user_id": 3797176, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ysK5k.png?s=128&g=1", "display_name": "Axel Montini", "link": "https://stackoverflow.com/users/3797176/axel-montini"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 97, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1619168542, "creation_date": 1566128572, "question_id": 57544209, "link": "https://stackoverflow.com/questions/57544209/obtain-failurefail-in-actix-web-1-0-middleware", "title": "Obtain failure::Fail in actix-web 1.0 Middleware", "body": "<p>I'm using actix-web 1.0</p>\n\n<p>I'm writing a Middleware that must capture Errors and their stacktrace. The problem is that I can only access <code>ServiceRequest</code>s, which contain an <code>actix_web::Error</code>.</p>\n\n<p>From this I must obtain a <code>failure::Fail</code>, but I can't find any way to do so. Previously I could do <code>Error::as_fail()</code>, but this function isn't available anymore with version 1.0</p>\n\n<p>How can I obtain an error that implements <code>Fail</code> in my Middleware?</p>\n"}, {"tags": ["rust", "iterator"], "answers": [{"comments": [{"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1566130323, "post_id": 57544342, "comment_id": 101552224, "body": "Does the clone method do actual copies of the slice? Or can this be elided?"}, {"owner": {"reputation": 186, "user_id": 8523533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8236cca11621ae7f9c78e6e88bf2cc?s=128&d=identicon&r=PG&f=1", "display_name": "TobiP64", "link": "https://stackoverflow.com/users/8523533/tobip64"}, "reply_to_user": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1566130624, "post_id": 57544342, "comment_id": 101552287, "body": "It doesn&#39;t copy the slice as a whole, but every element when it&#39;s needed. That&#39;s equivalent to dereferencing a <code>&amp;f64</code>. You could also write <code>iter.map(|v| *v)</code>."}, {"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1566130813, "post_id": 57544342, "comment_id": 101552334, "body": "What about more complex types, which are not so cheap to copy?"}, {"owner": {"reputation": 186, "user_id": 8523533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8236cca11621ae7f9c78e6e88bf2cc?s=128&d=identicon&r=PG&f=1", "display_name": "TobiP64", "link": "https://stackoverflow.com/users/8523533/tobip64"}, "reply_to_user": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "edited": false, "score": 0, "creation_date": 1566130929, "post_id": 57544342, "comment_id": 101552351, "body": "In this case you would want to iterate over references (like version 2 of <code>dot</code>)"}], "tags": [], "owner": {"reputation": 186, "user_id": 8523533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8236cca11621ae7f9c78e6e88bf2cc?s=128&d=identicon&r=PG&f=1", "display_name": "TobiP64", "link": "https://stackoverflow.com/users/8523533/tobip64"}, "is_accepted": false, "score": 2, "last_activity_date": 1566129644, "creation_date": 1566129644, "answer_id": 57544342, "question_id": 57543399, "link": "https://stackoverflow.com/questions/57543399/how-to-properly-pass-iterators-to-a-function-in-rust/57544342#57544342", "title": "How to properly pass Iterators to a function in Rust", "body": "<p>You can iterate over slices with the first <code>dot</code> implementation like that:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>dot([0, 1, 2].iter().cloned(), [0, 1, 2].iter().cloned());\n</code></pre>\n\n<p>(<a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned</a>)\nor</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>dot([0, 1, 2].iter().copied(), [0, 1, 2].iter().copied());\n</code></pre>\n\n<p>(<a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.copied\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.copied</a>)</p>\n\n<blockquote>\n  <p>Why does the compiler requires the livetime parameters here?</p>\n</blockquote>\n\n<p>As far as I know every reference in rust has a lifetime, but the compiler can infer simple it in cases. In this case, however the compiler is not yet smart enough, so you need to tell it how long the references yielded by the iterator lives.</p>\n\n<blockquote>\n  <p>Are there more cases?</p>\n</blockquote>\n\n<p>You can always use iterator methods, like the solution above, to get an iterator over <code>f64</code>, so you don't have to deal with lifetimes or generics.</p>\n\n<blockquote>\n  <p>What would be the best practice of solving this problem?</p>\n</blockquote>\n\n<p>I would recommend the first version (and thus leaving it to the caller to transform the iterator to <code>Iterator&lt;f64&gt;</code>), simply because it's the most readable.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1566138068, "creation_date": 1566138068, "answer_id": 57545430, "question_id": 57543399, "link": "https://stackoverflow.com/questions/57543399/how-to-properly-pass-iterators-to-a-function-in-rust/57545430#57545430", "title": "How to properly pass Iterators to a function in Rust", "body": "<p>There is no <em>right</em> way to write a function that can accept <code>Iterator</code>s, but there are some general principles that we can apply to make your function general and easy to use.</p>\n\n<ol>\n<li>Write functions that accept <code>impl IntoIterator&lt;...&gt;</code>. Because all <code>Iterator</code>s implement <code>IntoIterator</code>, this is strictly more general than a function that accepts only <code>impl Iterator&lt;...&gt;</code>.</li>\n<li><code>Borrow&lt;T&gt;</code> is the right way to abstract over <code>T</code> and <code>&amp;T</code>.</li>\n<li>When trait bounds get verbose, it's often easier to read if you write them in <code>where</code> clauses instead of in-line.</li>\n</ol>\n\n<p>With those in mind, here's how I would probably write <code>dot</code>:</p>\n\n<pre><code>fn dot&lt;I, J&gt;(a: I, b: J) -&gt; f64\nwhere\n    I: IntoIterator,\n    J: IntoIterator,\n    I::Item: Borrow&lt;f64&gt;,\n    J::Item: Borrow&lt;f64&gt;,\n{\n    a.into_iter()\n        .zip(b)\n        .map(|(x, y)| x.borrow() * y.borrow())\n        .sum()\n}\n</code></pre>\n\n<p>However, I also agree with <a href=\"https://stackoverflow.com/a/57544342/3650362\">TobiP64's answer</a> in that this level of generality may not be necessary in every case. This <code>dot</code> is nice because it can accept a wide range of arguments, so you can call <code>dot(&amp;some_vec, some_iterator)</code> and it just works. It's optimized for readability at the <em>call site</em>. On the other hand, if you find the <code>Borrow</code> trait complicates the definition too much, there's nothing wrong with optimizing for readability at the <em>definition</em>, and forcing the caller to add a <code>.iter().copied()</code> sometimes. The only thing I would definitely change about the first <code>dot</code> function is to replace <code>Iterator</code> with <code>IntoIterator</code>.</p>\n"}], "owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 983, "favorite_count": 0, "accepted_answer_id": 57545430, "answer_count": 2, "score": 1, "last_activity_date": 1566138068, "creation_date": 1566122009, "question_id": 57543399, "link": "https://stackoverflow.com/questions/57543399/how-to-properly-pass-iterators-to-a-function-in-rust", "title": "How to properly pass Iterators to a function in Rust", "body": "<p>I want to pass Iterators to a function, which then computes some value from these iterators.\nI am not sure how a robust signature to such a function would look like.\nLets say I want to iterate f64.\nYou can find the code in the playground: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c614429c541f337adb102c14518cf39e\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c614429c541f337adb102c14518cf39e</a></p>\n\n<p>My first attempt was</p>\n\n<pre><code>fn dot(a : impl std::iter::Iterator&lt;Item = f64&gt;,b : impl std::iter::Iterator&lt;Item = f64&gt;) -&gt; f64 {\n    a.zip(b).map(|(x,y)| x*y).sum()\n}\n</code></pre>\n\n<p>This fails to compile if we try to iterate over slices</p>\n\n<p>So you can do</p>\n\n<pre><code>fn dot&lt;'a&gt;(a : impl std::iter::Iterator&lt;Item = &amp;'a f64&gt;,b : impl std::iter::Iterator&lt;Item = &amp;'a f64&gt;) -&gt; f64 {\n    a.zip(b).map(|(x,y)| x*y).sum()\n}\n</code></pre>\n\n<p>This fails to compile if I try to iterate over mapped Ranges.\n(Why does the compiler requires the livetime parameters here?)</p>\n\n<p>So I tried to accept references and not references generically:</p>\n\n<pre><code>pub fn dot&lt;T : Borrow&lt;f64&gt;, U : Borrow&lt;f64&gt;&gt;(a : impl std::iter::Iterator::&lt;Item = T&gt;, b: impl std::iter::Iterator::&lt;Item = U&gt;) -&gt; f64 {\n    a.zip(b).map(|(x,y)| x.borrow()*y.borrow()).sum()\n}\n</code></pre>\n\n<p>This works with all combinations I tried, but it is quite verbose and I don't really understand every aspect of it.</p>\n\n<p>Are there more cases?</p>\n\n<p>What would be the best practice of solving this problem?</p>\n"}, {"tags": ["intellij-idea", "rust", "gdb"], "comments": [{"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 2, "creation_date": 1566107935, "post_id": 57541983, "comment_id": 101547818, "body": "There is the issue with instructions: <a href=\"https://github.com/intellij-rust/intellij-rust/issues/535\" rel=\"nofollow noreferrer\">github.com/intellij-rust/intellij-rust/issues/535</a>"}, {"owner": {"reputation": 1363, "user_id": 2773647, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/Hr6Z2.jpg?s=128&g=1", "display_name": "cybersoft", "link": "https://stackoverflow.com/users/2773647/cybersoft"}, "edited": false, "score": 0, "creation_date": 1589651719, "post_id": 57541983, "comment_id": 109380773, "body": "It seems that intellij-rust (for &quot;ultimate&quot; only) has added initial support for this: <a href=\"https://intellij-rust.github.io/2020/04/27/changelog-121.html\" rel=\"nofollow noreferrer\">intellij-rust.github.io/2020/04/27/changelog-121.html</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "edited": false, "score": 1, "creation_date": 1566127182, "post_id": 57542870, "comment_id": 101551404, "body": "Thank you, TobiP64.  I just updated my Intellij ultimate and my CLion tools and confirm @TobiP64&#39;s answer.  CLion provides some very nice debugging features for Rust.  I have been using VSCode, which is excellent, but might be using CLion in the future.  And, yes...it does require purchase of a license."}, {"owner": {"reputation": 5534, "user_id": 1484555, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/9ede0b6ed1e9d2f7037ff60242dd7561?s=128&d=identicon&r=PG", "display_name": "almel", "link": "https://stackoverflow.com/users/1484555/almel"}, "edited": false, "score": 1, "creation_date": 1585748285, "post_id": 57542870, "comment_id": 107871068, "body": "Small note, if you are a student with a university email then you can get a 1 year subscription for free and continue to renew it as long as you have access to that email."}], "tags": [], "owner": {"reputation": 186, "user_id": 8523533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8236cca11621ae7f9c78e6e88bf2cc?s=128&d=identicon&r=PG&f=1", "display_name": "TobiP64", "link": "https://stackoverflow.com/users/8523533/tobip64"}, "is_accepted": true, "score": 10, "last_activity_date": 1566116747, "creation_date": 1566116747, "answer_id": 57542870, "question_id": 57541983, "link": "https://stackoverflow.com/questions/57541983/how-to-debug-rust-in-intellij-idea/57542870#57542870", "title": "How to debug Rust in Intellij idea?", "body": "<p>You cannot debug Rust in IntelliJ, but CLion supports debugging. However CLion is not free.</p>\n"}, {"comments": [{"owner": {"reputation": 661, "user_id": 4932065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PWJhM.jpg?s=128&g=1", "display_name": "digiwizkid", "link": "https://stackoverflow.com/users/4932065/digiwizkid"}, "edited": false, "score": 7, "creation_date": 1590676430, "post_id": 62067165, "comment_id": 109775280, "body": "yes, now they support debugging in Intellij idea ultimate version, but not in community version yet."}, {"owner": {"reputation": 136, "user_id": 1483774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3c1ef07f109937af4c89757dd2f04fe?s=128&d=identicon&r=PG", "display_name": "jenda", "link": "https://stackoverflow.com/users/1483774/jenda"}, "reply_to_user": {"reputation": 661, "user_id": 4932065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PWJhM.jpg?s=128&g=1", "display_name": "digiwizkid", "link": "https://stackoverflow.com/users/4932065/digiwizkid"}, "edited": false, "score": 0, "creation_date": 1590678882, "post_id": 62067165, "comment_id": 109776829, "body": "Unfortunately, yes... However, it&#39;s still better than getting even another IDE :-)"}, {"owner": {"reputation": 2575, "user_id": 656449, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/1d95d92d9d824cbe955148c4a447bba4?s=128&d=identicon&r=PG", "display_name": "user656449", "link": "https://stackoverflow.com/users/656449/user656449"}, "edited": false, "score": 0, "creation_date": 1607372265, "post_id": 62067165, "comment_id": 115247144, "body": "anyway evaluate doesn&#39;t work - &quot;error: no field named ...&quot; on any expression"}], "tags": [], "owner": {"reputation": 136, "user_id": 1483774, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3c1ef07f109937af4c89757dd2f04fe?s=128&d=identicon&r=PG", "display_name": "jenda", "link": "https://stackoverflow.com/users/1483774/jenda"}, "is_accepted": false, "score": 11, "last_activity_date": 1590675939, "creation_date": 1590675939, "answer_id": 62067165, "question_id": 57541983, "link": "https://stackoverflow.com/questions/57541983/how-to-debug-rust-in-intellij-idea/62067165#62067165", "title": "How to debug Rust in Intellij idea?", "body": "<p>Old question, but great news! <a href=\"https://blog.jetbrains.com/clion/2020/05/whats-new-in-intellij-rust/\" rel=\"noreferrer\">https://blog.jetbrains.com/clion/2020/05/whats-new-in-intellij-rust/</a>\nNow it's VERY easy to debug Rust in IntelliJ, just download mentioned plugin and the rest is done before first usage.</p>\n"}, {"tags": [], "owner": {"reputation": 29, "user_id": 4451657, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GtPgn.jpg?s=128&g=1", "display_name": "Tom N", "link": "https://stackoverflow.com/users/4451657/tom-n"}, "is_accepted": false, "score": 0, "last_activity_date": 1612838534, "last_edit_date": 1612838534, "creation_date": 1612830731, "answer_id": 66111350, "question_id": 57541983, "link": "https://stackoverflow.com/questions/57541983/how-to-debug-rust-in-intellij-idea/66111350#66111350", "title": "How to debug Rust in Intellij idea?", "body": "<p>Current Ultimate IntelliJ does not seem to support Rust debugging beyond primitive types. You can setup breakpoints and step through but you can NOT really examine any values from objects. Big disappointment. I may move to VSCode - unless JetBrains will give me a discount on CLion.</p>\n"}], "owner": {"reputation": 661, "user_id": 4932065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PWJhM.jpg?s=128&g=1", "display_name": "digiwizkid", "link": "https://stackoverflow.com/users/4932065/digiwizkid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5052, "favorite_count": 0, "accepted_answer_id": 57542870, "answer_count": 3, "score": 15, "last_activity_date": 1612838534, "creation_date": 1566107188, "question_id": 57541983, "link": "https://stackoverflow.com/questions/57541983/how-to-debug-rust-in-intellij-idea", "title": "How to debug Rust in Intellij idea?", "body": "<p>I have searched for rust debugging and found guides for vs code only. My question is how to configure intellij rust for debugging?</p>\n"}, {"tags": ["rust", "actix-web", "rusoto"], "comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566395003, "post_id": 57541913, "comment_id": 101643552, "body": "You can check <a href=\"https://gist.github.com/zrzka/8d7a31d39206f31e9cbafc6456546b60\" rel=\"nofollow noreferrer\">this gist</a>. I quickly hacked something you can start with. <b>WARNING</b> Not properly tested, finished, polished ... It just works for couple of files I tried."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566395265, "post_id": 57541913, "comment_id": 101643735, "body": "Also I&#39;m going to cast close vote. Reason - this is too broad question and <code>field.map()</code> says that you didn&#39;t spend much time researching / trying to implement it. Try a bit more, ask specific questions, ..."}, {"owner": {"reputation": 2638, "user_id": 749698, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/abfd3fbd1686331802e412f012d99733?s=128&d=identicon&r=PG", "display_name": "Deep", "link": "https://stackoverflow.com/users/749698/deep"}, "reply_to_user": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566423716, "post_id": 57541913, "comment_id": 101656226, "body": "Hi thanks, sorry I didnt put all my attempts, it&#39;s just the compiler complained so I knew it was wrong. Thanks for the gist, I&#39;ll take a look, seems like it&#39;s not as straightforward as I would have imagined."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566456625, "post_id": 57541913, "comment_id": 101663318, "body": "Copy &amp; paste the gist somewhere and use <code>cargo fmt</code>. Seems that GitHub broke formatting."}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1566457178, "post_id": 57541913, "comment_id": 101663574, "body": "This implementation is kind of imperfect hybrid. Questions to ask yourself (&amp; to improve your question): Should upload request wait for S3 upload or return as soon as the whole file is received (async vs sync)? Is the file size limited (S3 put object vs S3 multipart upload)? How many files it will handle? What should happen when S3 upload fails? Retry? How many times? Inform you somehow? Should the uploaded file be saved to a temporary folder and then there will be some uploader which will receive path of a file to upload via a channel (async, request returns, S3 upload queued)?"}], "owner": {"reputation": 2638, "user_id": 749698, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/abfd3fbd1686331802e412f012d99733?s=128&d=identicon&r=PG", "display_name": "Deep", "link": "https://stackoverflow.com/users/749698/deep"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 338, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1566107226, "creation_date": 1566106314, "last_edit_date": 1566107226, "question_id": 57541913, "link": "https://stackoverflow.com/questions/57541913/how-to-save-an-actix-multipart-field-to-s3-using-rusoto-s3", "title": "How to save an actix multipart field to s3 using rusoto_s3?", "body": "<p>Im completely new to rust, but learning. I am attempting to take a multipart upload using actix_web and actix_multipart and upload it to aws s3 using rusoto_s3. From my basic undersntaing basically i have a stream of one type that i need to convert into a <code>ByteStream</code> which is what <code>put_object PutObjectRequest { body }</code> is requiring.</p>\n\n<p>I presume i need to use map on the field to convert it from one type to another, but I'm a little lost.</p>\n\n<p>E.g Something along these lines?</p>\n\n<pre><code>pub fn save_file_s3(field: Field, s3_client: &amp;S3Client) {\n    let bucket = env::var(\"S3_BUCKET\").expect(\"S3 bucket must be set.\");\n\n    let item = field.map();\n\n    s3_client.put_object(PutObjectRequest {\n        bucket: bucket,\n        body: item,        \n        ..Default::default()\n    }).into_stream();\n}\n</code></pre>\n\n<p>Thanks for the help!</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1566161415, "post_id": 57541687, "comment_id": 101559620, "body": "You definitely want the<code>for_each()</code> method from <code>futures::Stream</code>, so you need to bring that trait in scope. If this leads to further errors, please add them to the question, so we can figure out how to resolve them."}, {"owner": {"reputation": 829, "user_id": 2291983, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c7d3ca8b81a66e2dbf197e6e8948a429?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/2291983/max"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1566162153, "post_id": 57541687, "comment_id": 101559760, "body": "@SvenMarnach added more details about the <code>futures::Stream</code> errors"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1566162665, "post_id": 57541687, "comment_id": 101559872, "body": "What versions of <code>streamdeck_rs</code> and <code>futures</code> are you using? From a quick look at the documentation, it appears that <code>StreamDeckSocket</code> should be implementing <code>Stream</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1566163011, "post_id": 57541687, "comment_id": 101559923, "body": "Also note that some of your structs need to <code>#[derive(Deserialize)]</code>."}], "answers": [{"comments": [{"owner": {"reputation": 829, "user_id": 2291983, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c7d3ca8b81a66e2dbf197e6e8948a429?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/2291983/max"}, "edited": false, "score": 0, "creation_date": 1566347775, "post_id": 57562113, "comment_id": 101625070, "body": "Could you explain a little more about the type on <code>for_each</code>? Does it need the actual return of <code>Ok())</code>? I&#39;m still trying to learn how to read Rust type signatures."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 829, "user_id": 2291983, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c7d3ca8b81a66e2dbf197e6e8948a429?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/2291983/max"}, "edited": false, "score": 1, "creation_date": 1566360261, "post_id": 57562113, "comment_id": 101626942, "body": "@Max, certainly. Basically, <a href=\"https://docs.rs/futures/0.1.27/futures/stream/trait.Stream.html#method.for_each\" rel=\"nofollow noreferrer\">the documentation of <code>for_each</code></a> says it expects a closure of type <code>FnMut(Self::Item) -&gt; U</code>, which accepts one parameter and returns something of type <code>U</code>. That <code>U</code> is a shorthand to <code>IntoFuture&lt;Item = (), Error = Self::Error&gt;</code>. <a href=\"https://docs.rs/futures/0.1.27/futures/future/trait.IntoFuture.html\" rel=\"nofollow noreferrer\">The <code>IntoFuture</code> type</a> in turn says it either resolves to a value of type <code>Item</code> or to an error of type <code>Error</code>. In this case, <code>Item</code> is simply <code>()</code>. Hence the return of <code>Ok(())</code>."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 829, "user_id": 2291983, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c7d3ca8b81a66e2dbf197e6e8948a429?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/2291983/max"}, "edited": false, "score": 1, "creation_date": 1566360721, "post_id": 57562113, "comment_id": 101627021, "body": "That said, the rustc error message here is rather opaque and hard to parse. The diagnostics has room to improve. Fortunately, the rust-lang project already has <a href=\"https://github.com/rust-lang/rust/issues/54771\" rel=\"nofollow noreferrer\">this issue</a>  to track the progress of said diagnostics."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1566273623, "last_edit_date": 1566273623, "creation_date": 1566239106, "answer_id": 57562113, "question_id": 57541687, "link": "https://stackoverflow.com/questions/57541687/the-method-for-each-exists-but-trait-bounds-not-satisfied-when-using-streamdecks/57562113#57562113", "title": "The method for_each exists but trait bounds not satisfied when using StreamDeckSocket", "body": "<p>The example code snippet isn't quite right, but very close:</p>\n\n<ul>\n<li>the structures need to <code>#[derive(Deserialize, Debug)]</code></li>\n<li>according to <a href=\"https://docs.rs/futures/0.1.27/futures/stream/trait.Stream.html#method.for_each\" rel=\"nofollow noreferrer\">the documentation</a>, the closure passed to the <code>for_each</code> has the wrong type.</li>\n</ul>\n\n<p>The following compiles:</p>\n\n<pre><code>use futures::future::Future;\nuse futures::stream::Stream;\nuse serde::Deserialize;\nuse std::env;\nuse streamdeck_rs::registration::*;\nuse streamdeck_rs::socket::StreamDeckSocket;\n\n#[derive(Deserialize, Debug)]\nstruct GlobalSettings {}\n\n#[derive(Deserialize, Debug)]\nstruct ActionSettings {}\n\n#[derive(Deserialize, Debug)]\nstruct MessageToSd {}\n\n#[derive(Deserialize, Debug)]\nstruct MessageFromSd {}\n\nfn main() {\n    let params = RegistrationParams::from_args(env::args()).unwrap();\n    let connect =\n        StreamDeckSocket::&lt;GlobalSettings, ActionSettings, MessageFromSd, MessageToSd&gt;::connect(\n            params.port,\n            params.event,\n            params.uuid,\n        );\n    tokio::run(\n        connect\n            .map_err(|e| println!(\"connection failed: {:?}\", e))\n            .and_then(|socket| {\n                socket\n                    .for_each(|message| {\n                        println!(\"recieved: {:?}\", message);\n                        Ok(())\n                    })\n                    .map_err(|e| println!(\"read error: {:?}\", e))\n            }),\n    );\n}\n</code></pre>\n"}], "owner": {"reputation": 829, "user_id": 2291983, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c7d3ca8b81a66e2dbf197e6e8948a429?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/2291983/max"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 465, "favorite_count": 0, "accepted_answer_id": 57562113, "answer_count": 1, "score": 0, "last_activity_date": 1566273623, "creation_date": 1566102962, "last_edit_date": 1566239895, "question_id": 57541687, "link": "https://stackoverflow.com/questions/57541687/the-method-for-each-exists-but-trait-bounds-not-satisfied-when-using-streamdecks", "title": "The method for_each exists but trait bounds not satisfied when using StreamDeckSocket", "body": "<p>I'm trying to use the <a href=\"https://docs.rs/streamdeck-rs/0.3.0/streamdeck_rs/index.html\" rel=\"nofollow noreferrer\">streamdeck-rs</a> crate, and I'm having trouble getting the <a href=\"https://docs.rs/streamdeck-rs/0.3.0/streamdeck_rs/socket/struct.StreamDeckSocket.html\" rel=\"nofollow noreferrer\">example code</a> to work.</p>\n\n<p>My implementation is basically the exact example given:</p>\n\n<pre><code>use futures::future::Future;\nuse std::env;\nuse streamdeck_rs::registration::*;\nuse streamdeck_rs::socket::StreamDeckSocket;\n\n//the fields of these structs doesn't matter\nstruct GlobalSettings {}\nstruct ActionSettings {}\nstruct MessageToSd {}\nstruct MessageFromSd {}\n\nfn register() {\n    let params = RegistrationParams::from_args(env::args()).unwrap();\n    let connect =\n        StreamDeckSocket::&lt;GlobalSettings, ActionSettings, MessageFromSd, MessageToSd&gt;::connect(\n            params.port,\n            params.event,\n            params.uuid,\n        );\n    tokio::run(\n        connect\n            .map_err(|e| println!(\"connection failed: {:?}\", e))\n            .and_then(|socket| {\n                socket\n                    .for_each(|message| println!(\"recieved: {:?}\", message))\n                    .map_err(|e| println!(\"read error: {:?}\", e))\n            }),\n    );\n}\n</code></pre>\n\n<p>My error message changes based on what I'm importing, but it's always a variant of \"the method <code>for_each</code> exists but the following trait bounds were not satisfied\". With the imports I listed now, my error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `for_each` found for type `streamdeck_rs::socket::StreamDeckSocket&lt;GlobalSettings, ActionSettings, MessageFromSd, MessageToSd&gt;` in the current scope\n  --&gt; src/main.rs:37:35\n   |\n37 |         .and_then(|socket| socket.for_each(|message| println!(\"recieved: {:?}\", message))\n   |                                   ^^^^^^^^\n   |\n   = note: the method `for_each` exists but the following trait bounds were not satisfied:\n           `&amp;mut streamdeck_rs::socket::StreamDeckSocket&lt;GlobalSettings, ActionSettings, MessageFromSd, MessageToSd&gt; : std::iter::Iterator`\n</code></pre>\n\n<hr>\n\n<p>I can import <code>future::Stream</code>:</p>\n\n<pre><code>use streamdeck_rs::registration::*;\nuse streamdeck_rs::socket::StreamDeckSocket;\nuse std::env;\nuse futures::future::Future;\nuse futures::Stream;\n//rest same as before\n</code></pre>\n\n<p>And I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `for_each` found for type `streamdeck_rs::socket::StreamDeckSocket&lt;GlobalSettings, ActionSettings, MessageFromSd, MessageToSd&gt;` in the current scope\n  --&gt; src/main.rs:37:35\n   |\n37 |         .and_then(|socket| socket.for_each(|message| println!(\"recieved: {:?}\", message))\n   |                                   ^^^^^^^^\n   |\n   = note: the method `for_each` exists but the following trait bounds were not satisfied:\n           `&amp;mut streamdeck_rs::socket::StreamDeckSocket&lt;GlobalSettings, ActionSettings, MessageFromSd, MessageToSd&gt; : futures::stream::Stream`\n           `&amp;mut streamdeck_rs::socket::StreamDeckSocket&lt;GlobalSettings, ActionSettings, MessageFromSd, MessageToSd&gt; : std::iter::Iterator`\n           `streamdeck_rs::socket::StreamDeckSocket&lt;GlobalSettings, ActionSettings, MessageFromSd, MessageToSd&gt; : futures::stream::Stream`\n\n\n\nwarning: unused import: `futures::Stream`\n</code></pre>\n\n<p>Note the warning about the unused import, too.</p>\n\n<p>Because <code>StreamDeckSocket</code> is defined in the crate, I can't implement any traits on it.</p>\n\n<p>I know this question exists in a few forms, but, from what I understand, those answers are only applicable if there is a missing trait implementation in the crate I'm using.</p>\n"}, {"tags": ["rust", "actix-web", "reqwest"], "comments": [{"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "edited": false, "score": 0, "creation_date": 1566099576, "post_id": 57540455, "comment_id": 101546976, "body": "I would not think that tokio or async/await would call &#39;unwrap()&#39;. In you code: <code>.post(Url::parse(API_ENDPOINT).unwrap())</code>, you are calling unwrap(), which will result in a panic if the unwrap() fails.  Have you tried changing this to a call that does not use unwrap()?"}, {"owner": {"reputation": 10506, "user_id": 5520354, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/QgGFm.jpg?s=128&g=1", "display_name": "C14L", "link": "https://stackoverflow.com/users/5520354/c14l"}, "reply_to_user": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "edited": false, "score": 0, "creation_date": 1566124714, "post_id": 57540455, "comment_id": 101550815, "body": "Thanks for the idea, I updated the question. It panics when unwrapping the reqwest Response."}, {"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "edited": false, "score": 0, "creation_date": 1566125419, "post_id": 57540455, "comment_id": 101550989, "body": "I think it would help if you could submit a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, with a main fn so that members can copy and paste your example into their IDE."}, {"owner": {"reputation": 10506, "user_id": 5520354, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/QgGFm.jpg?s=128&g=1", "display_name": "C14L", "link": "https://stackoverflow.com/users/5520354/c14l"}, "reply_to_user": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "edited": false, "score": 0, "creation_date": 1566127307, "post_id": 57540455, "comment_id": 101551431, "body": "I updated the question with a full example. Almost sure this can be solved with <code>actix_web::web::block()</code> somehow."}], "answers": [{"comments": [{"owner": {"reputation": 10506, "user_id": 5520354, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/QgGFm.jpg?s=128&g=1", "display_name": "C14L", "link": "https://stackoverflow.com/users/5520354/c14l"}, "edited": false, "score": 0, "creation_date": 1566132114, "post_id": 57544458, "comment_id": 101552621, "body": "Thanks, but I am still getting the same error: <code>error: https:&#47;&#47;cisco.com&#47;: blocking Client used inside a Future context</code>. This is run within a request handler, called from the Actix-Web router, not simply from a regular <code>main()</code> function."}, {"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "reply_to_user": {"reputation": 10506, "user_id": 5520354, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/QgGFm.jpg?s=128&g=1", "display_name": "C14L", "link": "https://stackoverflow.com/users/5520354/c14l"}, "edited": false, "score": 0, "creation_date": 1566220195, "post_id": 57544458, "comment_id": 101576680, "body": "I guess your <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> needs to be expanded a little :-)."}, {"owner": {"reputation": 10506, "user_id": 5520354, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/QgGFm.jpg?s=128&g=1", "display_name": "C14L", "link": "https://stackoverflow.com/users/5520354/c14l"}, "edited": false, "score": 0, "creation_date": 1566222782, "post_id": 57544458, "comment_id": 101578247, "body": "I mentioned several times that this is a Actix-Web Request Handler function. And I even posted how to set up the standard Actix Web router on <code>HttpServer</code>. How can I make it more clear? The Question is tagged with &quot;Actix-Web&quot; for that very reason."}], "tags": [], "owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "is_accepted": false, "score": 0, "last_activity_date": 1566130392, "creation_date": 1566130392, "answer_id": 57544458, "question_id": 57540455, "link": "https://stackoverflow.com/questions/57540455/error-blockingclientinfuturecontext-when-trying-to-make-a-request-from-within/57544458#57544458", "title": "Error &quot;BlockingClientInFutureContext&quot; when trying to make a request from within an actix-web route handler function", "body": "<p>The call to <code>unwrap()</code> is failing because an error is returned.  It is best to avoid <code>unwrap()</code> in production code because it usually means we are trying to look at the 'desired' value (often called the 'happy path') while ignoring the error path.</p>\n\n<p>This code works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use actix_web;\nuse reqwest::Url;\n\nfn main()  {\n    println!(\"&gt;&gt;&gt; testing request begin\");\n    let url = Url::parse(\"http:/example.com/\").unwrap();\n    println!(\"&gt;&gt;&gt; testing url built\");\n    let req = reqwest::Client::new().post(url);\n    println!(\"&gt;&gt;&gt; testing req prepared\");\n    let res_struct = req.send();\n    println!(\"&gt;&gt;&gt; testing res_struct received\");\n    match res_struct {\n        Ok(r)=&gt; println!(\"response: {:?}\", r),\n        Err(e)=&gt; println!(\"error: {}\", e),\n    }\n//    let res = res_struct.unwrap();\n    println!(\"done.\");\n}\n</code></pre>\n\n\n\n<p>The output is:</p>\n\n<pre><code>Finished dev [unoptimized + debuginfo] target(s) in 2.63s\n     Running `target/debug/untitled`\n&gt;&gt;&gt; testing request begin\n&gt;&gt;&gt; testing url built\n&gt;&gt;&gt; testing req prepared\n&gt;&gt;&gt; testing res_struct received\nerror: http://example.com/: error trying to connect: failed to lookup address information: nodename nor servname provided, or not known\n&gt;&gt;&gt; testing res unwrapped\ndone.\n</code></pre>\n\n\n\n<p>The above code works without a panic, but the server at <code>example.com</code> is not providing a good response.\nIf I re-run this using a valid URL, e.g. <a href=\"https://cisco.com\" rel=\"nofollow noreferrer\">https://cisco.com</a>, I get no errors:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&gt;&gt;&gt; testing request begin\n&gt;&gt;&gt; testing url built\n&gt;&gt;&gt; testing req prepared\n&gt;&gt;&gt; testing res_struct received\nresponse: Response { url: \"https://www.cisco.com/\", status: 200, headers: {\"server\": \"Apache\", \"etag\": \"\\\"1732e-59058880c8465\\\"\", \"accept-ranges\": \"bytes\", \"strict-transport-security\": \"max-age=31536000\", \"cdchost\": \"wemxweb-publish-prod2-02\", \"x-xss-protection\": \"1; mode=block\", \"x-test-debug\": \"nURL=www.cisco.com,realm=0,isRealm=0,realmDomain=0,shortrealm=0\", \"content-security-policy\": \"upgrade-insecure-requests; frame-ancestors *.cisco.com *.jasper.com *.ciscospark.com *.ciscolive.com  http://cisco.lookbookhq.com https://cisco.lookbookhq.com testcisco.marketing.adobe.com cisco.marketing.adobe.com ciscosales.my.salesforce.com test.salesforce.com zedo.com hindustantimes.com economictimes.indiatimes.com *.webex.com *.cdw.com *.cdwg.com *.cdw.ca *.meraki-go.com http://ciscopartners.lookbookhq.com https://ciscopartners.lookbookhq.com ciscolearningsystem.com ciscocustomer.lookbookhq.com cisco.lookbookhq.com;\", \"content-type\": \"text/html\", \"expires\": \"Sun, 18 Aug 2019 12:10:23 GMT\", \"cache-control\": \"max-age=0, no-cache, no-store\", \"pragma\": \"no-cache\", \"date\": \"Sun, 18 Aug 2019 12:10:23 GMT\", \"connection\": \"keep-alive\", \"vary\": \"Accept-Encoding\"} }\n&gt;&gt;&gt; testing res unwrapped\ndone.\n</code></pre>\n\n\n"}, {"comments": [{"owner": {"reputation": 356, "user_id": 5226961, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ddefe9a6be125d44d0b116debb2aef39?s=128&d=identicon&r=PG&f=1", "display_name": "Ejonas GGgg", "link": "https://stackoverflow.com/users/5226961/ejonas-gggg"}, "edited": false, "score": 0, "creation_date": 1566478462, "post_id": 57563971, "comment_id": 101674913, "body": "Thanks, I almost wasted a day for this problem, but this solution doesn&#39;t work with std::future, does it? since future crate has been yanked I don&#39;t know how to solve this problem"}], "tags": [], "owner": {"reputation": 10506, "user_id": 5520354, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/QgGFm.jpg?s=128&g=1", "display_name": "C14L", "link": "https://stackoverflow.com/users/5520354/c14l"}, "is_accepted": false, "score": 3, "last_activity_date": 1566248853, "creation_date": 1566248853, "answer_id": 57563971, "question_id": 57540455, "link": "https://stackoverflow.com/questions/57540455/error-blockingclientinfuturecontext-when-trying-to-make-a-request-from-within/57563971#57563971", "title": "Error &quot;BlockingClientInFutureContext&quot; when trying to make a request from within an actix-web route handler function", "body": "<p>Turns out, <code>actix_web::web::block()</code> was the correct guess. Using it makes it possible to make blocking calls. <code>block()</code> returns a Future that resolves once the network request returns data. Very close to Promises in JS, plus the <code>.from_err()</code> in there.</p>\n\n<pre><code>pub fn testing(_req: actix_web::HttpRequest)\n    -&gt; impl Future&lt;Item = HttpResponse, Error = Error&gt;\n{\n    println!(\"&gt;&gt;&gt; testing request begin\");\n    let url = Url::parse(\"https://example.com/\").unwrap();\n    println!(\"&gt;&gt;&gt; testing url built\");\n    let req = reqwest::Client::new().get(url);\n    println!(\"&gt;&gt;&gt; testing req prepared\");\n\n    actix_web::web::block(move || {\n        println!(\"&gt;&gt;&gt; testing res received\");\n        req.send()\n    })\n    .from_err()\n    .and_then(|res| {\n        println!(\"&gt;&gt;&gt; testing res: {:?}\", &amp;res);\n        HttpResponse::Ok().content_type(\"text/html\").body(\"Hello!\")\n    })\n}\n</code></pre>\n\n<p>Additionally, in <code>main.rs</code> the route must be called using <code>.to_async()</code> instead of simply <code>.to()</code>:</p>\n\n<pre><code>HttpServer::new(|| App::new().service(\n    web::resource(\"/testing\").route(\n        web::get().to_async(views::testing)\n    )\n)).bind(\"127.0.0.1:8001\")?.run()\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 76, "user_id": 11948536, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/85cc87ca5ef8ca4ac795bbdb967fc7cb?s=128&d=identicon&r=PG&f=1", "display_name": "LoganSmith", "link": "https://stackoverflow.com/users/11948536/logansmith"}, "is_accepted": true, "score": 5, "last_activity_date": 1566335898, "creation_date": 1566335898, "answer_id": 57581649, "question_id": 57540455, "link": "https://stackoverflow.com/questions/57540455/error-blockingclientinfuturecontext-when-trying-to-make-a-request-from-within/57581649#57581649", "title": "Error &quot;BlockingClientInFutureContext&quot; when trying to make a request from within an actix-web route handler function", "body": "<p>I had a similar issue. The resolution for me was to lock the Reqwest crate version at 0.9.17 in your cargo file then rebuild.</p>\n\n<pre><code>reqwest = \"=0.9.17\"\n</code></pre>\n\n<p>It appears that newer version of Reqwest are broken with Actix-web unless you're using the async functionality on both. For reference: <a href=\"https://github.com/seanmonstar/reqwest/issues/541\" rel=\"noreferrer\">https://github.com/seanmonstar/reqwest/issues/541</a></p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 7215129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7845833b7d4ddd1833caadaa23f11ae1?s=128&d=identicon&r=PG&f=1", "display_name": "B. Reynolds", "link": "https://stackoverflow.com/users/7215129/b-reynolds"}, "is_accepted": false, "score": 1, "last_activity_date": 1570685881, "last_edit_date": 1570685881, "creation_date": 1570685422, "answer_id": 58316011, "question_id": 57540455, "link": "https://stackoverflow.com/questions/57540455/error-blockingclientinfuturecontext-when-trying-to-make-a-request-from-within/58316011#58316011", "title": "Error &quot;BlockingClientInFutureContext&quot; when trying to make a request from within an actix-web route handler function", "body": "<p><strong>TL;DR:</strong> Upgrade to reqwest 0.9.22 or newer.</p>\n\n<p>The error is indicating that you're attempting to make a blocking network call from inside an asynchronous context (Actix Web handlers are called asynchronously). This is not supported in reqwest versions 0.9.17 - 0.9.21.</p>\n\n<p>As of 0.9.22, the author has removed this error in favor of a warning. For more information:</p>\n\n<p><a href=\"https://github.com/seanmonstar/reqwest/pull/670\" rel=\"nofollow noreferrer\">https://github.com/seanmonstar/reqwest/pull/670</a></p>\n\n<p><a href=\"https://github.com/seanmonstar/reqwest/issues/541\" rel=\"nofollow noreferrer\">https://github.com/seanmonstar/reqwest/issues/541</a></p>\n"}], "owner": {"reputation": 10506, "user_id": 5520354, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/QgGFm.jpg?s=128&g=1", "display_name": "C14L", "link": "https://stackoverflow.com/users/5520354/c14l"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 636, "favorite_count": 3, "accepted_answer_id": 57581649, "answer_count": 4, "score": 3, "last_activity_date": 1570685881, "creation_date": 1566082139, "last_edit_date": 1566209418, "question_id": 57540455, "link": "https://stackoverflow.com/questions/57540455/error-blockingclientinfuturecontext-when-trying-to-make-a-request-from-within", "title": "Error &quot;BlockingClientInFutureContext&quot; when trying to make a request from within an actix-web route handler function", "body": "<p>I am writing a web service with Rust 2018 Stable and Actix-Web. Using Reqwest, I am making an HTTP request to a diffent site <strong>from within one route handler</strong> function. Simplyfied it looks like this </p>\n\n<pre><code>extern crate reqwest;\nuse actix_web;\nuse reqwest::Url;\n\npub fn testing(req: actix_web::HttpRequest) -&gt; actix_web::Result&lt;actix_web::HttpResponse&gt; {\n    println!(\"&gt;&gt;&gt; testing request begin\");\n    let url = Url::parse(\"https://example.com/\").unwrap();\n    println!(\"&gt;&gt;&gt; testing url built\");\n    let req = reqwest::Client::new().post(url);\n    println!(\"&gt;&gt;&gt; testing req prepared\");\n    let res_struct = req.send();\n    println!(\"&gt;&gt;&gt; testing res_struct received\");\n    let res = res_struct.unwrap();\n    println!(\"&gt;&gt;&gt; testing res unwrapped\");\n    Ok(format!(\"done.\").into())\n}\n</code></pre>\n\n<p>That doesn't work, and I am getting the following error message (the error is printed 8 times, \"worker:1\" to \"worker:8\", despite calling the function only once):</p>\n\n<pre><code>thread 'actix-rt:worker:1' panicked at 'called `Result::unwrap()` \non an `Err` value: Error(BlockingClientInFutureContext, \n\"https://www.example.com/\")', src/libcore/result.rs:999:5\nPanic in Arbiter thread, shutting down system.\n</code></pre>\n\n<p>Google didn't find anything useful on <em>\"BlockingClientInFutureContext\"</em>, but I am guessing it is somehow related to async/await or maybe Tokio's own futures? </p>\n\n<p>Thanks for any pointers about what to read up on. Also, I am new to Rust.</p>\n\n<p>The handler function <strong>is called from the Actix-Web HTttpServer</strong>:</p>\n\n<pre><code>HttpServer::new(|| App::new().service(\n    web::resource(\"/testing\").route(\n        web::get().to(views::testing)\n    )\n)).bind(\"127.0.0.1:8001\")?.run()\n</code></pre>\n"}, {"tags": ["rust", "petgraph"], "answers": [{"comments": [{"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1566081502, "post_id": 57540379, "comment_id": 101545010, "body": "thanks!  changing to <code>let mut graph = Graph::&lt;_, i32&gt;::new();</code> worked -- now I see where the docs refer to the edge/node implementation of Display"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1566082830, "last_edit_date": 1566082830, "creation_date": 1566080959, "answer_id": 57540379, "question_id": 57540335, "link": "https://stackoverflow.com/questions/57540335/writing-petgraph-dot-to-a-file/57540379#57540379", "title": "writing petgraph Dot to a file", "body": "<p><code>Dot</code> implements <code>Display</code> only if both the edge and node weights implement <code>Display</code>.</p>\n\n<p>Since your edges are <code>()</code>, you cannot display this graph.</p>\n\n<p>For example, changing the graph declaration to use <code>i32</code> edge weights:</p>\n\n<pre><code>    let mut graph = Graph::&lt;_, i32&gt;::new();\n</code></pre>\n\n<p>causes the program to compile with no errors.</p>\n"}], "owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 0, "accepted_answer_id": 57540379, "answer_count": 1, "score": 3, "last_activity_date": 1580252253, "creation_date": 1566080322, "last_edit_date": 1580252253, "question_id": 57540335, "link": "https://stackoverflow.com/questions/57540335/writing-petgraph-dot-to-a-file", "title": "writing petgraph Dot to a file", "body": "<p>I may be missing something very basic -- I am new to Rust.  I'm attempting to write a <code>petgraph::dot::Dot</code> representation to a file.</p>\n\n<p>The following small code example doesn't compile:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use petgraph::Graph;\nuse petgraph::dot::{Dot, Config};\nuse std::fs::File;\nuse std::io::Write;\n\n\nfn main() {\n    println!(\"hello graph!\");\n    let mut graph = Graph::&lt;_, ()&gt;::new();\n    graph.add_node(\"A\");\n    graph.add_node(\"B\");\n    graph.add_node(\"C\");\n    graph.add_node(\"D\");\n    graph.extend_with_edges(&amp;[\n        (0, 1), (0, 2), (0, 3),\n        (1, 2), (1, 3),\n        (2, 3),\n    ]);\n\n    println!(\"{:?}\", Dot::with_config(&amp;graph, &amp;[Config::EdgeNoLabel]));\n    let mut f = File::create(\"example1.dot\").unwrap();\n    let output = format!(\"{}\", Dot::with_config(&amp;graph, &amp;[Config::EdgeNoLabel]));\n    f.write_all(&amp;output.as_bytes());\n}\n</code></pre>\n\n<p>Here's the compiler error output:</p>\n\n<pre><code>error[E0277]: `()` doesn't implement `std::fmt::Display`\n  --&gt; examples/graphviz.rs:21:32\n   |\n21 |     let output = format!(\"{}\", Dot::with_config(&amp;graph, &amp;[Config::EdgeNoLabel]));\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `()` cannot be formatted with the default formatter\n   |\n   = help: the trait `std::fmt::Display` is not implemented for `()`\n   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n   = note: required because of the requirements on the impl of `std::fmt::Display` for `petgraph::dot::Dot&lt;'_, &amp;petgraph::graph_impl::Graph&lt;&amp;str, ()&gt;&gt;`\n   = note: required by `std::fmt::Display::fmt`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n</code></pre>\n\n<p>The petgraph docs note that <a href=\"https://docs.rs/petgraph/0.4.13/petgraph/dot/struct.Dot.html#impl-Display\" rel=\"nofollow noreferrer\">Dot implements Display trait</a> and I based my code on sample code in <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" rel=\"nofollow noreferrer\">trait.Display doc</a></p>\n\n<p>I can get the code to work by changing the format string to <code>{:?}</code> but I thought that was only supposed to be for debugging.  Is there a better way to write code to accomplish the same thing?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566086469, "post_id": 57540132, "comment_id": 101545652, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/30154541/how-do-i-concatenate-strings\">How do I concatenate strings?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566086629, "post_id": 57540132, "comment_id": 101545677, "body": "Also <a href=\"https://stackoverflow.com/questions/39917173/why-is-it-not-possible-to-concatenate-two-strings-in-rust-without-deref-coercing\">Why is it not possible to concatenate two Strings in Rust without taking a reference to one of them?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566087285, "post_id": 57540132, "comment_id": 101545745, "body": "<a href=\"https://stackoverflow.com/questions/28333612/how-can-i-append-a-formatted-string-to-an-existing-string\">How can I append a formatted string to an existing String?</a> is probably the question you didn&#39;t know you needed an answer to."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 9730305, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Caranthir", "link": "https://stackoverflow.com/users/9730305/caranthir"}, "edited": false, "score": 0, "creation_date": 1566080339, "post_id": 57540193, "comment_id": 101544831, "body": "Thank you - a lot of useful information here - the map bit especially was useful!"}, {"owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "reply_to_user": {"reputation": 13, "user_id": 9730305, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Caranthir", "link": "https://stackoverflow.com/users/9730305/caranthir"}, "edited": false, "score": 0, "creation_date": 1566080976, "post_id": 57540193, "comment_id": 101544944, "body": "@Caranthir, glad it helped! Please keep in mind that I&#39;m a beginner too, so the the wording and the code may be clumsy. Feel free to ask if something&#39;s unclear and check the latest version of my answer for an example program that seems to work"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566086938, "post_id": 57540193, "comment_id": 101545712, "body": "What you should do for this <i>particular</i> case is <code>write!(&amp;mut string, ...)</code> which will skip the allocation if <code>string</code> has the capacity for it. If you were doing something other than appending to <code>string</code>, you would probably want to write something like <code>string = format!(&quot;{}...&quot;, string, ...);</code>"}], "tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": false, "score": 2, "last_activity_date": 1566081195, "last_edit_date": 1566081195, "creation_date": 1566078932, "answer_id": 57540193, "question_id": 57540132, "link": "https://stackoverflow.com/questions/57540132/how-to-fix-mismatched-types-when-adding-two-strings/57540193#57540193", "title": "How to fix mismatched types when adding two Strings?", "body": "<p><code>format!</code> <a href=\"https://doc.rust-lang.org/stable/std/macro.format.html\" rel=\"nofollow noreferrer\">already returns a <code>String</code></a>, so there's no need for <code>String::from(format!(...))</code>, and it's also an error because it expects a <code>&amp;str</code>, not a <code>String</code> returned by <code>format!</code>.</p>\n\n<p>You'll also get an error in the lambda:</p>\n\n<pre><code>string = string + String::from(format!(...))\n</code></pre>\n\n<p>...even if you remove <code>String::from</code>, because it's not possible to add two <code>String</code>s like that, but it is possible to add a <code>String</code> and a <code>&amp;str</code>, so I think you should borrow like this:</p>\n\n<pre><code>string = string + &amp;format!(...)\n</code></pre>\n\n<p>The same goes for this line:</p>\n\n<pre><code>string = string + &amp;(format!(\"And all for the want of a {}.\", list[0])).to_string();\n</code></pre>\n\n<p>Moreover, your usage of <code>map</code> won't actually execute the lambda for each element of the range. <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\" rel=\"nofollow noreferrer\">It'll just create a <code>Map</code> iterator</a>, over which you'll have to iterate with a loop to actually make it execute the lambda, so you could as well iterate over the range itself and modify your string in the loop.</p>\n\n<p>I'm also not terribly sure about why you're returning <code>string.to_string()</code> when you could've returned <code>string</code> itself.</p>\n\n<hr>\n\n<p>I also think you have an off-by-one error in your range, so after fixing that, I ended up with this:</p>\n\n<pre><code>fn do_it(list: Vec&lt;&amp;str&gt;) -&gt; String {\n    let mut string = format!(\"For want of a {} the {} was lost.\\n\", list[0], list[1]);\n\n    // BTW, you don't need this `if` statement because empty ranges, like `2..2`, are perfectly fine\n    if list.len() &gt; 2 {\n        // These ranges do not include `list.len()`, so your program won't panic, because this index doesn't exist\n        for x in 2 .. list.len() {\n            string += &amp;format!(\"For want of a {} the {} was lost.\\n\", list[x], list[x-1])\n        }\n    }\n\n    string + &amp;format!(\"And all for the want of a {}.\", list[0])  // Return the result of concatenation\n}\n\nfn main() {\n    let list = vec![\"something\", \"test\", \"StackOverflow\"];\n    let result = do_it(list);\n\n    println!(\"The result is: {}\", result)\n}\n</code></pre>\n\n<p>Output (it works, but your post doesn't say what it <em>should</em> output, so I can't say if it's the correct result):</p>\n\n<pre><code>The result is: For want of a something the test was lost.\nFor want of a StackOverflow the test was lost.\nAnd all for the want of a something.\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 9730305, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Caranthir", "link": "https://stackoverflow.com/users/9730305/caranthir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1593032816, "creation_date": 1566078194, "last_edit_date": 1593032816, "question_id": 57540132, "link": "https://stackoverflow.com/questions/57540132/how-to-fix-mismatched-types-when-adding-two-strings", "title": "How to fix mismatched types when adding two Strings?", "body": "<p>With a list input of <code>&amp;str</code>, I'm trying to create a <code>String</code> which contains a proverb based on the inputs.</p>\n<p>Instead of <code>String::from</code> I also tried <code>.to_string()</code> but that doesn't seem to help matters.</p>\n<pre><code>pub fn build_proverb(list: &amp;[&amp;str]) -&gt; String {\n    let mut string = String::from(format!(&quot;For want of a {} the {} was lost.\\n&quot;, list[0], list[1]));\n\n    if list.len() &gt; 2 {\n        (3..list.len() + 1).map(|x| string = string + String::from(format!(&quot;For want of a {} the {} was lost.\\n&quot;, list[x], list[x-1])));\n    }\n\n    string = string + &amp;(format!(&quot;And all for the want of a {}.&quot;, list[0])).to_string();\n\n    return string.to_string();\n}\n</code></pre>\n<p>The error is:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error: mismatched types expected &amp;str, found struct 'std::string::String'.\n</code></pre>\n<p>This is on the <code>String::from(format!(&quot;For want of a {} the {} was lost.\\n&quot;, list[x], list[x-1]))</code> line.</p>\n<p>What's confusing to me is that I'm adding a <code>String</code> to a <code>String</code> - why is it expecting a <code>&amp;str</code>?</p>\n"}, {"tags": ["postgresql", "rust"], "comments": [{"owner": {"reputation": 59, "user_id": 1737973, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/EmWsq.png?s=128&g=1", "display_name": "1737973", "link": "https://stackoverflow.com/users/1737973/1737973"}, "edited": false, "score": 1, "creation_date": 1566076052, "post_id": 57539838, "comment_id": 101544000, "body": "Why don&#39;t you try to <code>SELECT version();</code> first?"}, {"owner": {"reputation": 13, "user_id": 9168825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd22823935521b6c967ab601208c6883?s=128&d=identicon&r=PG&f=1", "display_name": "Sebastien Durand", "link": "https://stackoverflow.com/users/9168825/sebastien-durand"}, "reply_to_user": {"reputation": 59, "user_id": 1737973, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/EmWsq.png?s=128&g=1", "display_name": "1737973", "link": "https://stackoverflow.com/users/1737973/1737973"}, "edited": false, "score": 0, "creation_date": 1566080634, "post_id": 57539838, "comment_id": 101544880, "body": "not sure how it would help me...? what I want to do it&#39;s passing the name of the table I&#39;m creating as a variable. instead of doing &quot;CREATE TABLE IF NOT EXISTS message....&quot;,using a variable that define the table name, like using $1 in the code  conn.execute(&quot;CREATE TABLE IF NOT EXISTS $1.... How would SELECT version(); would help me achieve it?"}, {"owner": {"reputation": 59, "user_id": 1737973, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/EmWsq.png?s=128&g=1", "display_name": "1737973", "link": "https://stackoverflow.com/users/1737973/1737973"}, "edited": false, "score": 0, "creation_date": 1566080811, "post_id": 57539838, "comment_id": 101544909, "body": "I thought you wanted to create a table, which has the obvious precondition of being able to connect and select the server version. I have never read, less wrote, a line of Rust code. I&#39;m not even writing about accidental syntax, but common grounds."}], "answers": [{"comments": [{"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "reply_to_user": {"reputation": 13, "user_id": 9168825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd22823935521b6c967ab601208c6883?s=128&d=identicon&r=PG&f=1", "display_name": "Sebastien Durand", "link": "https://stackoverflow.com/users/9168825/sebastien-durand"}, "edited": false, "score": 0, "creation_date": 1566275379, "post_id": 57540539, "comment_id": 101594531, "body": "@SebastienDurand Welcome to stack overflow. Please consider marking the answer as accepted if it solved your issue. See also <a href=\"https://stackoverflow.com/tour\">the tour</a> for other usage info."}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 2, "last_activity_date": 1566086361, "last_edit_date": 1566086361, "creation_date": 1566083182, "answer_id": 57540539, "question_id": 57539838, "link": "https://stackoverflow.com/questions/57539838/rust-postgres-execute-how-to-pass-table-name-as-a-variable/57540539#57540539", "title": "Rust postgres execute, How to pass table name as a variable", "body": "<p>You cannot use placeholders (eg. <code>$1</code>) to substitute a table name into a query.</p>\n\n<p>One of the functions of placeholders is to allow a query to be prepared once, then executed multiple times. This saves on the overhead of planning the query each time you want to use it, which can be substantial. However it would not be possible to plan the query if the database did not even know which table was being queried.</p>\n\n<p>If you need to dynamically insert the table name at runtime, you will need to do that in rust before passing the SQL to the database:</p>\n\n<pre><code>let sql = format!(\"CREATE TABLE IF NOT EXISTS {} (\n                    id              SERIAL PRIMARY KEY,\n                    title           VARCHAR NOT NULL,\n                    body            VARCHAR,\n                )\", tname);\n</code></pre>\n\n<p>If the table name is being passed in from user input, don't forget to guard against SQL injection by validating it beforehand.</p>\n\n<p>Also note that the panic is due to the use of <code>.ok().expect(....)</code>. </p>\n\n<p><code>ok()</code> will take the result of executing the SQL and convert it into an <code>Option</code>. If the result was an error it will be discarded, so you never get to see the error message which would probably have helped you diagnose the problem. <code>Result</code> implements <code>expect</code> directly, with the advantage that instead of discarding the error, it will display it as part of the Panic. So, you would be better off with:</p>\n\n<pre><code>conn.execute(sql, &amp;[] as &amp;[String]).expect(\"Failed creating table\");\n</code></pre>\n\n<p>However, if there is a realistic chance that the SQL statement is going to fail you would be better off to check the result and handle it more gracefully than crashing the program.</p>\n"}], "owner": {"reputation": 13, "user_id": 9168825, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd22823935521b6c967ab601208c6883?s=128&d=identicon&r=PG&f=1", "display_name": "Sebastien Durand", "link": "https://stackoverflow.com/users/9168825/sebastien-durand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 360, "favorite_count": 0, "accepted_answer_id": 57540539, "answer_count": 1, "score": 1, "last_activity_date": 1566086361, "creation_date": 1566074921, "last_edit_date": 1566076619, "question_id": 57539838, "link": "https://stackoverflow.com/questions/57539838/rust-postgres-execute-how-to-pass-table-name-as-a-variable", "title": "Rust postgres execute, How to pass table name as a variable", "body": "<p>I'm new to Rust and I was trying to play with the postgres crate. I was able to create a table by hardcoding the table name, but I'm always having code going panic when trying to pass the table name from a variable.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc --version 1.36.0\ncargo --version 1.36.0\npostgres = \"0.15\"\n</code></pre>\n\n<pre><code>fn main() {\n  let conn = Connection::connect(\"postgresql://postgres:postgres@localhost/db1\",\n                                    TlsMode::None).unwrap();\n\n  let tname = \"message\";\n  conn.execute(\"CREATE TABLE IF NOT EXISTS $1 (\n                    id              SERIAL PRIMARY KEY,\n                    title           VARCHAR NOT NULL,\n                    body            VARCHAR,\n                )\", &amp;[&amp;tname]).ok().expect(\"Table message creation failed\");\n</code></pre>\n\n<pre><code>thread 'main' panicked at 'Table message creation failed', src/libcore/option.rs:1036:5\nstack backtrace:\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\n   1: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:71\n   2: std::panicking::default_hook::{{closure}}\n             at src/libstd/sys_common/backtrace.rs:59\n             at src/libstd/panicking.rs:197\n   3: std::panicking::default_hook\n             at src/libstd/panicking.rs:211\n   4: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:474\n   5: std::panicking::continue_panic_fmt\n             at src/libstd/panicking.rs:381\n   6: rust_begin_unwind\n             at src/libstd/panicking.rs:308\n   7: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:85\n   8: core::option::expect_failed\n             at src/libcore/option.rs:1036\n   9: core::option::Option&lt;T&gt;::expect\n             at /rustc/a53f9df32fbb0b5f4382caaad8f1a46f36ea887c/src/libcore/option.rs:314\n  10: rustdb::main\n             at ./main.rs:27\n  11: std::rt::lang_start::{{closure}}\n             at /rustc/a53f9df32fbb0b5f4382caaad8f1a46f36ea887c/src/libstd/rt.rs:64\n  12: std::panicking::try::do_call\n             at src/libstd/rt.rs:49\n             at src/libstd/panicking.rs:293\n  13: __rust_maybe_catch_panic\n             at src/libpanic_unwind/lib.rs:85\n  14: std::rt::lang_start_internal\n             at src/libstd/panicking.rs:272\n             at src/libstd/panic.rs:394\n             at src/libstd/rt.rs:48\n  15: std::rt::lang_start\n             at /rustc/a53f9df32fbb0b5f4382caaad8f1a46f36ea887c/src/libstd/rt.rs:64\n  16: main\n  17: __libc_start_main\n  18: _start\n</code></pre>\n"}, {"tags": ["asynchronous", "rust", "future"], "owner": {"reputation": 355, "user_id": 4911008, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-JLdxew6DQ8o/AAAAAAAAAAI/AAAAAAAAANg/cbtQcMgBQyw/photo.jpg?sz=128", "display_name": "sivakov512", "link": "https://stackoverflow.com/users/4911008/sivakov512"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 303, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1566070668, "creation_date": 1566070668, "question_id": 57539382, "link": "https://stackoverflow.com/questions/57539382/how-to-replace-combinators-with-future", "title": "How to replace combinators with Future?", "body": "<p>I have a function which returns Future. It accepts another function which accepts one argument and returns Future. Second function can be implemented as combinators chain passed into first function. It looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use bb8::{Pool, RunError};\nuse bb8_postgres::PostgresConnectionManager;\nuse tokio_postgres::{error::Error, Client, NoTls};\n\n#[derive(Clone)]\npub struct DataManager(Pool&lt;PostgresConnectionManager&lt;NoTls&gt;&gt;);\n\nimpl DataManager {\n    pub fn new(pool: Pool&lt;PostgresConnectionManager&lt;NoTls&gt;&gt;) -&gt; Self {\n        Self(pool)\n    }\n\n    pub fn create_user(\n        &amp;self,\n        reg_req: UserRequest,\n    ) -&gt; impl Future&lt;Item = User, Error = RunError&lt;Error&gt;&gt; {\n        let sql = \"long and awesome sql\";\n\n        let query = move |mut conn: Client| {  // function which accepts one argument and returns Future\n            conn.prepare(sql).then(move |r| match r {\n                Ok(select) =&gt; {\n                    let f = conn\n                        .query(&amp;select, &amp;[&amp;reg_req.email, &amp;reg_req.password])\n                        .collect()\n                        .map(|mut rows| {\n                            let row = rows.remove(0);\n                            row.into()\n                        })\n                        .then(move |r| match r {\n                            Ok(v) =&gt; Ok((v, conn)),\n                            Err(e) =&gt; Err((e, conn)),\n                        });\n                    Either::A(f)\n                }\n                Err(e) =&gt; Either::B(future::err((e, conn))),\n            })\n        };\n        self.0.run(query)  // function which returns Future and accepts another function\n    }\n}\n\n</code></pre>\n\n<p>But I want to write code of <code>create_user</code> as a struct implementing Future.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct UserCreator(Pool&lt;PostgresConnectionManager&lt;NoTls&gt;&gt;, UserRequest);\n\nimpl UserCreator {\n    fn new(pool: Pool&lt;PostgresConnectionManager&lt;NoTls&gt;&gt;, reg_req: UserRequest) -&gt; Self {\n        Self(pool, reg_req)\n    }\n}\n</code></pre>\n\n<p>How to implement Future for this struct that works as first function? Please help me with an example.</p>\n\n<p>Now I tried to make it like this, but nothing is computed and execution always blocks.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Future for UserCreator {\n    type Item = User;\n    type Error = RunError&lt;Error&gt;;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Self::Item, Self::Error&gt; {\n        // Code which which works like `DataManager.create_user`\n        let sql = \"long and awesome sql\";\n        let reg_req = &amp;self.1;\n\n        let query = move |mut conn: Client| {\n            conn.prepare(sql).then(move |r| match r {\n                Ok(select) =&gt; {\n                    let f = conn\n                        .query(&amp;select, &amp;[&amp;reg_req.email, &amp;reg_req.password])\n                        .collect()\n                        .map(|mut rows| {\n                            let row = rows.remove(0);\n                            row.into()\n                        })\n                        .then(move |r| match r {\n                            Ok(v) =&gt; Ok((v, conn)),\n                            Err(e) =&gt; Err((e, conn)),\n                        });\n                    Either::A(f)\n                }\n                Err(e) =&gt; Either::B(future::err((e, conn))),\n            })\n        };\n        self.0.run(query).poll()\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "private", "encapsulation", "organization", "code-organization"], "answers": [{"comments": [{"owner": {"reputation": 570, "user_id": 2780630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57f6fdc404f5a270e608f3df85f40dfb?s=128&d=identicon&r=PG&f=1", "display_name": "DanielV", "link": "https://stackoverflow.com/users/2780630/danielv"}, "edited": false, "score": 0, "creation_date": 1566093483, "post_id": 57539399, "comment_id": 101546382, "body": "Is there a naming convention for this approach?  Seems like a lot of overhead for the simple task of &quot;friending&quot; (maybe more like spying on) a class."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 570, "user_id": 2780630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57f6fdc404f5a270e608f3df85f40dfb?s=128&d=identicon&r=PG&f=1", "display_name": "DanielV", "link": "https://stackoverflow.com/users/2780630/danielv"}, "edited": false, "score": 0, "creation_date": 1566137169, "post_id": 57539399, "comment_id": 101553819, "body": "I don&#39;t think there is a naming convention for this kind of crate. But having a cargo workspace with 3 crates is barely any overhead. And since you mention &quot;friending&quot;, I guess you are coming from C++, but if you want to provide 2 data structures as 2 separate libraries in C++, you would also end-up hiding the common plumbing in a 3rd library."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 1, "last_activity_date": 1566070798, "creation_date": 1566070798, "answer_id": 57539399, "question_id": 57538878, "link": "https://stackoverflow.com/questions/57538878/rust-2-crates-with-overlapping-private-functions/57539399#57539399", "title": "Rust, 2 crates with overlapping private functions", "body": "<blockquote>\n  <p>Is there any better option?</p>\n</blockquote>\n\n<p>Yes. Make a 3rd crate with the plumbing, and make your 2 porcelain crates depend on it. They don't need to expose publicly the plumbing, keeping encapsulation.</p>\n\n<p>This is rather common. For example, the <code>regex</code> (porcelain) crate depends on <code>regex-syntax</code> (plumbing) crate, but doesn't expose anything from this crate. As far as the user of <code>regex</code> is concerned, <code>regex-syntax</code> does not exist. They go as far as <a href=\"https://docs.rs/regex/1.2.1/src/regex/re_unicode.rs.html#21-23\" rel=\"nofollow noreferrer\">wrapping even the simplest functions</a>.</p>\n"}], "owner": {"reputation": 570, "user_id": 2780630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57f6fdc404f5a270e608f3df85f40dfb?s=128&d=identicon&r=PG&f=1", "display_name": "DanielV", "link": "https://stackoverflow.com/users/2780630/danielv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 47, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566070798, "creation_date": 1566066378, "last_edit_date": 1566070416, "question_id": 57538878, "link": "https://stackoverflow.com/questions/57538878/rust-2-crates-with-overlapping-private-functions", "title": "Rust, 2 crates with overlapping private functions", "body": "<p>I'm writing 2 data structures (containers) in rust that have different APIs, but about 50% of the behind the scenes functionality is similar.  FWIW, the first is a redblack tree that stores comparable (<code>std::cmp::Ord</code>) data and the other is container with a list like API, does not require the data to be comparable, and uses a buffer sorted similarly to a red black tree.</p>\n\n<p>I think usually both container data structures would be stored as libraries in 2 different crates.  But they share some private functionality like tree rebalancing.  I insist on not maintaining 2 versions of the same private (fairly complex) code, so I think my only option remaining is to combine the 2 data structures into the same crate.  Is there any better option?</p>\n"}, {"tags": ["rust", "shared-libraries", "rust-crates"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1566047311, "post_id": 57536484, "comment_id": 101537621, "body": "Are you sure this isn&#39;t a crate version issue? E.g., crate 1 requires <code>toml</code> 0.4.5 and crate 2 requires 0.4.8, or something like that?"}, {"owner": {"reputation": 186, "user_id": 8523533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8236cca11621ae7f9c78e6e88bf2cc?s=128&d=identicon&r=PG&f=1", "display_name": "TobiP64", "link": "https://stackoverflow.com/users/8523533/tobip64"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566048101, "post_id": 57536484, "comment_id": 101537819, "body": "This was my first assumption, but I cleaned, updated and rebuilt all crates. I also checked the dependencies and the version is in all 3 crates the same."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1566055603, "post_id": 57536484, "comment_id": 101539587, "body": "I don&#39;t believe any <code>-C</code> options will have an effect on type IDs; those are for codegen. Type IDs are resolved inside rustc itself, before it hands off to LLVM."}, {"owner": {"reputation": 186, "user_id": 8523533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8236cca11621ae7f9c78e6e88bf2cc?s=128&d=identicon&r=PG&f=1", "display_name": "TobiP64", "link": "https://stackoverflow.com/users/8523533/tobip64"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566116343, "post_id": 57536484, "comment_id": 101549177, "body": "I read somewhere that it affects the <code>TypeId</code> gen. Anyway, I removed this option from all 3 crates and now I get the same <code>TypeId</code> for <code>toml::Value</code>, but not for a type in crate 3 that I want to downcast in crate 2. So it actually affects the <code>TypeId</code>, but not  the way I thought it does."}, {"owner": {"reputation": 186, "user_id": 8523533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8236cca11621ae7f9c78e6e88bf2cc?s=128&d=identicon&r=PG&f=1", "display_name": "TobiP64", "link": "https://stackoverflow.com/users/8523533/tobip64"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566119006, "post_id": 57536484, "comment_id": 101549619, "body": "Due to my own incompetence I forgot to recompile one crate. Now only the <code>TypeId</code> of a type in the loader crate still differs."}], "answers": [{"tags": [], "owner": {"reputation": 186, "user_id": 8523533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8236cca11621ae7f9c78e6e88bf2cc?s=128&d=identicon&r=PG&f=1", "display_name": "TobiP64", "link": "https://stackoverflow.com/users/8523533/tobip64"}, "is_accepted": true, "score": 1, "last_activity_date": 1566120461, "creation_date": 1566120461, "answer_id": 57543254, "question_id": 57536484, "link": "https://stackoverflow.com/questions/57536484/consistent-typeids-for-dynamically-loaded-crates/57543254#57543254", "title": "Consistent TypeIds for dynamically loaded crates", "body": "<p>After some testing I found out that the <code>TypeId</code>s are different because the loader crate (crate 1) is used as a library in the other 2 crates but executed as a binary.</p>\n\n<p>To work around the issue I extracted all of crate 1's types I wanted to use in the loaded crates to a new crate and added it to  each crate's dependencies. This new crate is only ever used as a library and not a binary, thus the <code>TypeId</code>s should be consistent.</p>\n\n<p>A summary of everything I had to do to get it working:</p>\n\n<ul>\n<li>use the same toolchain version for all crates</li>\n<li>use the same dependency versions in all crates</li>\n<li>do not use <code>-Cmetadata</code>, this doesn't work anymore and has in fact the opposite effect</li>\n<li>extract all types that are used in the loader crate and the loaded crates into a new crate and add it to all crates' dependencies</li>\n<li>whenever you change something in this 'common types crate' you have to recompile all the other crates, so the <code>TypeId</code>S are up to date</li>\n</ul>\n\n<p>If you still have a problem you can fall back to unsafe rust (e.g. <code>unsafe { &amp;*(value as *const dyn Any as *const Type)</code> }). Note that there are no checks at all, so you might encounter segmentation faults if the types don't match.</p>\n\n<p>Special thanks to @trentcl for pointing me in the right direction.</p>\n"}], "owner": {"reputation": 186, "user_id": 8523533, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8236cca11621ae7f9c78e6e88bf2cc?s=128&d=identicon&r=PG&f=1", "display_name": "TobiP64", "link": "https://stackoverflow.com/users/8523533/tobip64"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 1, "accepted_answer_id": 57543254, "answer_count": 1, "score": 4, "last_activity_date": 1566120461, "creation_date": 1566046605, "last_edit_date": 1566118673, "question_id": 57536484, "link": "https://stackoverflow.com/questions/57536484/consistent-typeids-for-dynamically-loaded-crates", "title": "Consistent TypeIds for dynamically loaded crates", "body": "<p>I have a plugin system where I pass <code>&amp;dyn Any</code> to a dynamically loaded rust function, but downcasting the reference fails because the <code>TypeId</code>s  differ (for the same type), although I added <code>rustflags = [\"-Cmetadata=12345678\"]</code> to both crates' cargo config. Also it seems as if only types from external crates are affected (I tried <code>()</code> and it yielded the same <code>TypeId</code> in both crates). I am currently casting the raw pointers (<code>unsafe { &amp;*(v as *const dyn Any as *const Type) }</code>) to work around this issue, but I would prefer a solution without unsafe code.</p>\n\n<p>For example the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>println!(\"CRATE 1: TypeId of `()`: `{:?}`, TypeId of `toml::Value`: `{:?}`\",\n                 TypeId::of::&lt;()&gt;(), TypeId::of::&lt;toml::Value&gt;());\n</code></pre>\n\n<p>produces this output:</p>\n\n<pre><code>CRATE 1: TypeId of `()`: `TypeId { t: 7549865886324542212 }`, TypeId of `toml::Value`: `TypeId { t: 9270396907601429078 }`\nCRATE 2: TypeId of `()`: `TypeId { t: 7549865886324542212 }`, TypeId of `toml::Value`: `TypeId { t: 5704635987193303200 }`\n</code></pre>\n\n<p>EDIT:\nThis does not seem to be a problem with different dependency versions, as crate 2 (which is dynamically loaded) depends on crate 3 (which is also dynamically loaded) and the problem still occurs, although both, crate 2 and crate 3, are local dependencies (so there is only one version). Crate 1 is btw. the crate that loads crate 2 &amp; 3.</p>\n\n<p>EDIT:\nI removed the <code>-Cmetadata</code> option from all 3 crates and now I get the same <code>TypeId</code> for <code>toml::Value</code>, however the <code>TypeId</code> of a type in crate 1 that I want to downcast in crate 2 still differs.</p>\n"}, {"tags": ["asynchronous", "rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 1, "creation_date": 1566045083, "post_id": 57536217, "comment_id": 101537151, "body": "use <code>pinned.as_mut()</code> to avoid consuming the pinned value"}], "answers": [{"comments": [{"owner": {"reputation": 1326, "user_id": 1836144, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e250d748ff6c2ff23bc4550e0f0971f5?s=128&d=identicon&r=PG", "display_name": "little-dude", "link": "https://stackoverflow.com/users/1836144/little-dude"}, "edited": false, "score": 0, "creation_date": 1566045511, "post_id": 57536310, "comment_id": 101537250, "body": "Alleluia! Now that I see it, it seems obvious, but I had tried many combinations with <code>as_mut()</code> and <code>get_mut()</code> before without managing to get it working."}], "tags": [], "owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "is_accepted": true, "score": 4, "last_activity_date": 1566045939, "last_edit_date": 1566045939, "creation_date": 1566045196, "answer_id": 57536310, "question_id": 57536217, "link": "https://stackoverflow.com/questions/57536217/manually-polling-streams-in-future-implementation/57536310#57536310", "title": "Manually polling streams in future implementation", "body": "<p>You can use <code>Pin::as_mut</code> to avoid consuming the <code>Pin</code>.</p>\n\n<pre><code>impl MyFuture {\n    fn poll_data(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;()&gt; {\n        use Poll::*;\n\n        let MyFuture {\n            ref mut data,\n            ref mut state,\n            ..\n        } = self.get_mut();\n\n        let mut data = Pin::new(data); // Move pin here\n        loop {\n            match data.as_mut().poll_next(cx) {   // Use in loop by calling `as_mut()`\n                Ready(Some(vec)) =&gt; state.update(vec),\n                Ready(None) =&gt; return Ready(()),\n                Pending =&gt; return Pending,\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>and in Future impl:</p>\n\n<pre><code>impl Future for MyFuture {\n    type Output = ();\n\n    fn poll(mut self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        use Poll::*;\n        // `as_mut()` here to avoid consuming\n        if let Ready(_) = self.as_mut().poll_data(cx) { \n            return Ready(());\n        }\n\n        // can consume here as this is the last invocation\n        if let Ready(_) = self.poll_events(cx) {\n            return Ready(());\n        }\n        return Pending;\n    }\n}\n</code></pre>\n\n<h3>EDIT:</h3>\n\n<p><strong>Tip</strong>: Try to use <code>Pin</code> only when necessary. In your case, you don't really need Pinned pointer in <code>poll_data</code> function. <code>&amp;mut self</code> is just fine, which reduces <code>Pin</code> usage a little:</p>\n\n<pre><code>impl MyFuture {\n    fn poll_data(&amp;mut self, cx: &amp;mut Context) -&gt; Poll&lt;()&gt; {\n        use Poll::*;\n\n        loop {\n            match Pin::new(&amp;mut self.data).poll_next(cx) {\n                Ready(Some(vec)) =&gt; self.state.update(vec),\n                Ready(None) =&gt; return Ready(()),\n                Pending =&gt; return Pending,\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>and Future impl:</p>\n\n<pre><code>impl Future for MyFuture {\n    type Output = ();\n\n    fn poll(mut self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        use Poll::*;\n        if let Ready(_) = self.poll_data(cx) {\n            return Ready(());\n        }\n\n        if let Ready(_) = self.poll_events(cx) {\n            return Ready(());\n        }\n        return Pending;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1326, "user_id": 1836144, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e250d748ff6c2ff23bc4550e0f0971f5?s=128&d=identicon&r=PG", "display_name": "little-dude", "link": "https://stackoverflow.com/users/1836144/little-dude"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 989, "favorite_count": 0, "accepted_answer_id": 57536310, "answer_count": 1, "score": 2, "last_activity_date": 1566045939, "creation_date": 1566044376, "question_id": 57536217, "link": "https://stackoverflow.com/questions/57536217/manually-polling-streams-in-future-implementation", "title": "Manually polling streams in future implementation", "body": "<p>I'm in the process of migrating to <code>futures</code> 0.3 and <code>tokio</code> 0.2, and there is one recurring pattern I can't manage to re-use. I'm not sure whether this pattern became obsolete or whether I'm doing something wrong wrt to <code>Pin</code>.</p>\n\n<p>Usually I have one type that holds a socket and a few channel receivers. The <code>Future</code> implementation for such structs consists in polling the streams repeatedly until they return <code>Pending</code> (<code>NotReady</code> in the 0.1 ecosystem).</p>\n\n<p>However, in futures 0.3, <code>Future::poll</code> and <code>Stream::poll_next</code> take <code>self</code> instead of <code>&amp;mut self</code>, and this pattern does not work anymore:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::{\n    stream::Stream,\n    task::{Context, Poll},\n    Future,\n};\nuse std::pin::Pin;\nuse tokio::sync::mpsc::{Receiver, Sender};\n\n/// Dummy structure that represent some state we update when we\n/// receive data or events.\nstruct State;\n\nimpl State {\n    fn update(&amp;mut self, _data: Vec&lt;u8&gt;) {\n        println!(\"updated state\");\n    }\n    fn handle_event(&amp;mut self, _event: u32) {\n        println!(\"handled event\");\n    }\n}\n\n/// The future I want to implement.\nstruct MyFuture {\n    state: State,\n    data: Receiver&lt;Vec&lt;u8&gt;&gt;,\n    events: Receiver&lt;Vec&lt;u8&gt;&gt;,\n}\n\nimpl MyFuture {\n    fn poll_data(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;()&gt; {\n        use Poll::*;\n\n        let MyFuture {\n            ref mut data,\n            ref mut state,\n            ..\n        } = self.get_mut();\n\n        loop {\n            // this breaks, because Pin::new consume the mutable\n            // reference on the first iteration of the loop.\n            match Pin::new(data).poll_next(cx) {\n                Ready(Some(vec)) =&gt; state.update(vec),\n                Ready(None) =&gt; return Ready(()),\n                Pending =&gt; return Pending,\n            }\n        }\n    }\n\n    // unimplemented, but we basically have the same problem than with\n    // `poll_data()`\n    fn poll_events(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;()&gt; {\n        unimplemented!()\n    }\n}\n\nimpl Future for MyFuture {\n    type Output = ();\n\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        use Poll::*;\n        if let Ready(_) = self.poll_data(cx) {\n            return Ready(());\n        }\n\n        // This does not work because self was consumed when\n        // self.poll_data() was called.\n        if let Ready(_) = self.poll_events(cx) {\n            return Ready(());\n        }\n        return Pending;\n    }\n}\n</code></pre>\n\n<p>Is there a way to fix that code? If not, what pattern could I use to implement the same logic?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566041783, "post_id": 57535794, "comment_id": 101536544, "body": "Why would you want that?"}, {"owner": {"reputation": 51, "user_id": 9452295, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8SHRs.png?s=128&g=1", "display_name": "UnityLover123", "link": "https://stackoverflow.com/users/9452295/unitylover123"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566044261, "post_id": 57535794, "comment_id": 101536993, "body": "I have a folder with a bat file that runs some executables, so I need to call it through the command line, so in the build it will not find it."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1566044568, "post_id": 57535794, "comment_id": 101537051, "body": "Sadly, no. You cannot do that with build scripts or cargo without any hacks. If you want this, you&#39;ll have to roll your own script, that both runs <code>cargo build</code>, and does everything else you want it to do, because build scripts allow to do things only before the build, mainly for compiling something like a C library... And there&#39;s no way to run code after the build finishes, because cargo is apparently not supposed to be a general build system for rust. I think we are regressing back to &quot;too lazy&quot; stage which is how languages like C++ with no defined way to do something exist."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1566044583, "post_id": 57535794, "comment_id": 101537053, "body": "Comment, too long, here&#39;s the source: <a href=\"https://github.com/rust-lang/cargo/issues/545\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/545</a> In other words, I&#39;d suggest using your bash file to actually perform cargo build and whatever else you want it to do, or use make if you&#39;re a fan of that."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566050122, "post_id": 57535794, "comment_id": 101538288, "body": "You can embed files into your executable though. See <code>std::include_bytes!</code>."}, {"owner": {"reputation": 749, "user_id": 10663732, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wNDF3.jpg?s=128&g=1", "display_name": "tomer zeitune", "link": "https://stackoverflow.com/users/10663732/tomer-zeitune"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1566056190, "post_id": 57535794, "comment_id": 101539752, "body": "@mcarton They want that because they use these files at runtime or need the user to have them."}, {"owner": {"reputation": 749, "user_id": 10663732, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wNDF3.jpg?s=128&g=1", "display_name": "tomer zeitune", "link": "https://stackoverflow.com/users/10663732/tomer-zeitune"}, "edited": false, "score": 0, "creation_date": 1566057359, "post_id": 57535794, "comment_id": 101540030, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/31080757/copy-files-to-the-target-directory-after-build\" title=\"copy files to the target directory after build\">stackoverflow.com/questions/31080757/&hellip;</a>"}], "owner": {"reputation": 51, "user_id": 9452295, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8SHRs.png?s=128&g=1", "display_name": "UnityLover123", "link": "https://stackoverflow.com/users/9452295/unitylover123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 266, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1566040717, "creation_date": 1566040717, "question_id": 57535794, "link": "https://stackoverflow.com/questions/57535794/rust-include-folder-in-build", "title": "Rust - Include folder in build", "body": "<p>I have this file structure:</p>\n\n<pre><code>myProject\n|\n\u2514\u2500\u2500 FolderToInclude\n|          |\n|          \u2514\u2500\u2500 somebatfile.bat\n|\n\u2514\u2500\u2500 src\n|    |\n|    \u2514\u2500\u2500 main.rs\n|\n\u2514\u2500\u2500 target\n       |\n       \u2514\u2500\u2500 debug\n             |\n             \u2514\u2500\u2500 myProject.exe // and other stuff\n</code></pre>\n\n<p>Is it possible in rust to include a folder in the build directory?\nI want to end up with this file structure:</p>\n\n<pre><code>myProject\n|\n\u2514\u2500\u2500 FolderToInclude\n|          |\n|          \u2514\u2500\u2500 somebatfile.bat\n|\n\u2514\u2500\u2500 src\n|    |\n|    \u2514\u2500\u2500 main.rs\n|\n\u2514\u2500\u2500 target\n       |\n       \u2514\u2500\u2500 debug\n             |\n             \u2514\u2500\u2500 myProject.exe // and other stuff\n             |\n             \u2514\u2500\u2500 FolderToInclude\n                       |\n                       \u2514\u2500\u2500 somebatfile.bat\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1566039278, "last_edit_date": 1566039278, "creation_date": 1566038638, "answer_id": 57535534, "question_id": 57535061, "link": "https://stackoverflow.com/questions/57535061/how-to-use-another-file-in-rust-module-with-hyphens-in-it/57535534#57535534", "title": "How to &quot;use another-file&quot; in rust? Module with hyphens in it", "body": "<p>You will have to explicitly declare the module and <a href=\"https://doc.rust-lang.org/1.35.0/reference/items/modules.html#the-path-attribute\" rel=\"nofollow noreferrer\">provide its path</a>:</p>\n\n<pre><code>#[path=\"../path/to/another-file.rs\"]\nmod another_file;\n\nuse another_file;\n</code></pre>\n\n<p>However this is not common, and I wouldn't recommand it. Just stick with snake_case for module names.</p>\n"}], "owner": {"reputation": 2826, "user_id": 1575632, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/SPw2f.jpg?s=128&g=1", "display_name": "amin", "link": "https://stackoverflow.com/users/1575632/amin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 286, "favorite_count": 0, "accepted_answer_id": 57535534, "answer_count": 1, "score": 2, "last_activity_date": 1566039278, "creation_date": 1566034363, "last_edit_date": 1566038679, "question_id": 57535061, "link": "https://stackoverflow.com/questions/57535061/how-to-use-another-file-in-rust-module-with-hyphens-in-it", "title": "How to &quot;use another-file&quot; in rust? Module with hyphens in it", "body": "<p>Using <code>another_file</code> with underscore in as word separators works fine in Rust.</p>\n\n<p>How do i use hyphens instead (<code>another-file.rs</code>)?</p>\n\n<pre><code>// another-file.rs\npub fn method() { }\n</code></pre>\n\n<pre><code>// lib.rs\nuse another_file;        // &lt;-- ERROR can not find another_file.rs\nanother_file::method();\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 4, "creation_date": 1566024316, "post_id": 57533840, "comment_id": 101533162, "body": "That&#39;s the idea behind the type <a href=\"https://doc.rust-lang.org/stable/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow&lt;&#39;a, T&gt;</code></a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1566056555, "post_id": 57533840, "comment_id": 101539849, "body": "I&#39;m not 100% sure <code>Cow</code> is actually the answer here -- both <code>String</code> and <code>&amp;&#39;a str</code> implement <code>From&lt;&amp;&#39;a str&gt;</code>, so the snippet you give works fine either as <code>make_foo::&lt;String&gt;</code> or as <code>make_foo::&lt;&amp;str&gt;</code>. What&#39;s wrong with it?"}], "answers": [{"tags": [], "owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "is_accepted": true, "score": 6, "last_activity_date": 1566030687, "creation_date": 1566030687, "answer_id": 57534622, "question_id": 57533840, "link": "https://stackoverflow.com/questions/57533840/rust-generic-type-that-can-either-own-or-borrow-its-content/57534622#57534622", "title": "Rust generic type that can either own or borrow its content", "body": "<p><a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"noreferrer\"><code>std::borrow::Cow</code></a></p>\n\n<pre><code>pub enum Cow&lt;'a, B&gt; \nwhere\n    B: 'a + ToOwned + ?Sized, \n {\n    Borrowed(&amp;'a B),\n    Owned(&lt;B as ToOwned&gt;::Owned),\n}\n</code></pre>\n\n<p>When you borrow the type, it either returns a reference it stores, or reference to the value it stores, but if you want to borrow from it mutably, it converts to <code>Owned</code> variant, allowing you to take mutable reference to whatever it stores.</p>\n\n<p>Which is why it's named <code>Cow</code> - Copy on Write. It implicitly copies, often in form of <code>clone</code>, whenever you access it in a way that allows writing.</p>\n\n<p>It's not so implicit in a sense that you have to explicitly convert it to <code>Owned</code>, using <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html#method.to_mut\" rel=\"noreferrer\"><code>to_mut</code></a>, which has this example given to you:</p>\n\n<pre><code>use std::borrow::Cow;\n\nlet mut cow = Cow::Borrowed(\"foo\");\ncow.to_mut().make_ascii_uppercase();\n\nassert_eq!(\n  cow,\n  Cow::Owned(String::from(\"FOO\")) as Cow&lt;str&gt;\n);\n</code></pre>\n\n<p>It's implementation is not as simple, but it's <a href=\"https://doc.rust-lang.org/src/alloc/borrow.rs.html#171-183\" rel=\"noreferrer\">source code</a> is fairly easy to follow, <code>to_mut</code>, which is what you might be interested in, is implemented in <a href=\"https://doc.rust-lang.org/src/alloc/borrow.rs.html#228\" rel=\"noreferrer\"><code>line 228</code></a>.</p>\n"}], "owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 281, "favorite_count": 0, "closed_date": 1566100347, "accepted_answer_id": 57534622, "answer_count": 1, "score": 1, "last_activity_date": 1566030687, "creation_date": 1566023340, "question_id": 57533840, "link": "https://stackoverflow.com/questions/57533840/rust-generic-type-that-can-either-own-or-borrow-its-content", "closed_reason": "Duplicate", "title": "Rust generic type that can either own or borrow its content", "body": "<p>Is it possible to represent a generic struct in Rust that can either own or borrow its content? The rough idea is:</p>\n\n<pre><code>struct Foo&lt;T&gt; {\n    value: T,\n}\n\nfn make_foo&lt;'a, T: From&lt;&amp;'a str&gt;&gt;(s: &amp;'a str) -&gt; Foo&lt;T&gt; {\n    Foo&lt;T&gt;(s.into())\n}\n</code></pre>\n\n<p>However, I don't know how to constrain <code>T</code> so that it can represent either an owned value like a <code>String</code>, or a borrowed value like a <code>&amp;'a str</code>.</p>\n\n<p>Do I have to create two separate <code>FooOwned&lt;T&gt;</code> and <code>FooBorrowed&lt;'a, T&gt;</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 1, "last_activity_date": 1566014136, "creation_date": 1566014136, "answer_id": 57533142, "question_id": 57531275, "link": "https://stackoverflow.com/questions/57531275/confused-about-ref-keyword-usage-in-closures/57533142#57533142", "title": "Confused about ref keyword usage in closures", "body": "<p>Taking a look at the docs page for <a href=\"https://doc.rust-lang.org/std/str/struct.Lines.html\" rel=\"nofollow noreferrer\"><code>Lines</code></a>(The iterator adapter for producing lines from a <code>str</code>), we can see that the <a href=\"https://doc.rust-lang.org/std/str/struct.Lines.html#Item.t\" rel=\"nofollow noreferrer\">item</a> produced by it is:</p>\n\n<pre><code>type Item = &amp;'a str;\n</code></pre>\n\n<p>Therefore the following happens when trying to do the \"doesn't work\" version:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>dbg!(ls.clone().map(|ref l| l[..]).collect::&lt;Vec&lt;&amp;str&gt;&gt;().join(\"\\n\"));  # doesn't work\n//Can become:\nlet temp = ls\n    .clone()\n    .map(|ref l| l[..])\n    .collect::&lt;Vec&lt;&amp;str&gt;&gt;()\n    .join(\"\\n\");\nprintln!(\"{}\", temp);\n</code></pre>\n\n<p>Here we can see a crucial problem. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d4bb4f2a11e6046a3d4d408432a5c431\" rel=\"nofollow noreferrer\"><code>l</code> if of type <code>&amp;&amp;str</code> (Which I will explain below)</a> so indexing into it will create a <code>str</code>, which is unsized and therefore cannot be outside of a pointer of some sort.</p>\n\n<hr>\n\n<p>Now, onto the real thing you wanted to learn: <em>What a <code>ref</code> pattern does</em>:</p>\n\n<blockquote>\n  <p><a href=\"https://doc.rust-lang.org/rust-by-example/scope/borrow/ref.html\" rel=\"nofollow noreferrer\">When doing pattern matching or destructuring via the let binding, the ref keyword can be used to take references to the fields of a struct/tuple.</a></p>\n</blockquote>\n\n<p>What this does is the following:</p>\n\n<ul>\n<li>When we have <code>let ref x = y</code>, we take a reference to <code>y</code>.</li>\n<li><p>When pattern matching on something (Like in your closure arguments you showed) we have a slightly different effect: the value under the reference is <em>moved</em> into the scope and then taken reference to while exposing a way to take the value under the reference. For example:</p>\n\n<blockquote>\n<pre><code>fn foo(ref x: String) {}\nlet y: fn(String) = foo;\n</code></pre>\n  \n  <p>This works because what is essentially being done is this:</p>\n\n<pre><code>fn foo(x: String) {\n   let x: &amp;String = &amp;x;\n}\n</code></pre>\n</blockquote>\n\n<p>So what <code>ref x</code> does is take ownership of <code>x</code> and produce a reference to it.</p></li>\n</ul>\n\n<p>On the other hand</p>\n\n<ul>\n<li>When we have <code>let &amp;x = y</code> we move a value out of <code>y</code>.</li>\n<li>This is the opposite of <code>ref</code>, in that we take ownership of the value under <code>y</code> if we can. For example:\n\n<blockquote>\n<pre><code>let x = 2;\nlet y = &amp;x;\nlet &amp;z = y; //Ok, we're moving a `Copy` type\n</code></pre>\n  \n  <p>This is only ok for copy types though as though this isn't <em>exactly</em> the same as <code>let x = *y</code> which <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6edc3baf54ff0d1ff6710530fb3baee1\" rel=\"nofollow noreferrer\">would work for owned <code>Box</code>es</a>.</p>\n</blockquote></li>\n</ul>\n"}], "owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 57533142, "answer_count": 1, "score": 1, "last_activity_date": 1600743560, "creation_date": 1565990426, "last_edit_date": 1600743560, "question_id": 57531275, "link": "https://stackoverflow.com/questions/57531275/confused-about-ref-keyword-usage-in-closures", "title": "Confused about ref keyword usage in closures", "body": "<p>I'm trying to understand how <code>&amp;</code> and <code>ref</code> correspond. Here's an example where I thought these were equivalent, but one works and the other doesn't:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let t = &quot;\n        aoeu\n        aoeu\n        aoeu\n        a&quot;;\n    let ls = t.lines();\n\n    dbg!(ls.clone().map(|l| &amp;l[..]).collect::&lt;Vec&lt;&amp;str&gt;&gt;().join(&quot;\\n&quot;)); // works\n    dbg!(ls.clone().map(|ref l| l[..]).collect::&lt;Vec&lt;&amp;str&gt;&gt;().join(&quot;\\n&quot;)); // doesn't work\n    dbg!(ls.clone().map(|ref l| &amp;l[..]).collect::&lt;Vec&lt;&amp;str&gt;&gt;().join(&quot;\\n&quot;)); // works again!\n}\n</code></pre>\n<p>From the <a href=\"https://doc.rust-lang.org/rust-by-example/scope/borrow/ref.html\" rel=\"nofollow noreferrer\">docs</a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>// A `ref` borrow on the left side of an assignment is equivalent to\n// an `&amp;` borrow on the right side.\nlet ref ref_c1 = c;\nlet ref_c2 = &amp;c;\n\nprintln!(&quot;ref_c1 equals ref_c2: {}&quot;, *ref_c1 == *ref_c2);\n</code></pre>\n<p>What would the equivalent to <code>|l| &amp;l[..]</code> be with <code>|ref l|</code>? How does it correspond to the assignment examples in the docs?</p>\n"}, {"tags": ["reference", "rust", "pass-by-reference", "biginteger", "borrow-checker"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1565987965, "post_id": 57530536, "comment_id": 101527798, "body": "<code>BigUint</code> should support references just fine. You can definitely get it working with enough references (and just one <code>.clone()</code>, in the small case) \u2013 but that still involves a lot of inefficient intermediate <code>BigUint</code> values. Multiplying in place is the right way to do it, like in mcarton\u2019s answer. (You can convert that to tail recursion if you still want some recursion.)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1565988537, "post_id": 57530536, "comment_id": 101527986, "body": "@Ry I don&#39;t think multiplying in place is more efficient. In fact, <code>x *= y</code> is <a href=\"https://github.com/rust-num/num-bigint/blob/3e3487648685dbf4d447fe60ebb1bd4e706038eb/src/biguint.rs#L836-L841\" rel=\"nofollow noreferrer\">essentially implemented as <code>x = x * y</code></a>, so you get the temporary allocation anyway. (And there is no way to avoid that, since the implementation of the big integer multiplication needs access to the operands while calculating the product.)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1565989763, "post_id": 57530536, "comment_id": 101528351, "body": "<code>factorial(0)</code> is <code>1</code> not <code>0</code>"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1565991041, "post_id": 57530536, "comment_id": 101528678, "body": "@SvenMarnach: I think it\u2019s avoidable when you also own <code>y</code>\u2026 but I might be misthinking it."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1566069095, "post_id": 57530536, "comment_id": 101542614, "body": "@Ry While computing the product, you need to have memory for both the operands and the result. You can&#39;t just override one of the operands with the result since the operands are both needed to complete the computation. Many integer multiplication algorithms will need temporary storage on top of this. That&#39;s not specific to Rust in any way."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1566076942, "post_id": 57530536, "comment_id": 101544193, "body": "@SvenMarnach: <a href=\"https://stackoverflow.com/questions/8408139/in-place-integer-multiplication\" title=\"in place integer multiplication\">stackoverflow.com/questions/8408139/&hellip;</a> is what I was getting at, not that it\u2019s a good idea for a general-purpose bigint library or anything :)"}, {"owner": {"reputation": 361, "user_id": 12845381, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mARoMFM-kxwMrEHo4qVrjWjvNNPqlnm7SZzlLcBbw=k-s128", "display_name": "Tomek Czajka", "link": "https://stackoverflow.com/users/12845381/tomek-czajka"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1615727478, "post_id": 57530536, "comment_id": 117775372, "body": "@SvenMarnach If one of the two numbers is small, as it is here, it&#39;s easy to do the multiplication in place without allocating additional memory. In fact that&#39;s what <code>ibig::UBig</code> will do, regardless of whether you write it as <code>x *= y</code> or <code>x = x * y</code>."}], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1565988763, "post_id": 57530747, "comment_id": 101528057, "body": "Note that <code>BigUint::one()</code> allocates in each call, so this code performs two unnecessary allocations in each iteration."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1565989288, "last_edit_date": 1565989288, "creation_date": 1565987244, "answer_id": 57530747, "question_id": 57530536, "link": "https://stackoverflow.com/questions/57530536/how-to-avoid-cloning-a-big-integer-in-rust/57530747#57530747", "title": "How to avoid cloning a big integer in rust", "body": "<p>The first <code>clone</code> is easy to remove. You are trying to use <code>n</code> twice in the same expression, so don't use just one expression:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>print!(\"{}! = \", n);\nprintln!(\"{}\", factorial(n));\n</code></pre>\n\n<p>is equivalent to <code>println!(\"{}! = {}\", n, factorial(n.clone()))</code> but does not try to move <code>n</code> and use a reference to it at the same time.</p>\n\n<p>The second <code>clone</code> can be removed by changing <code>factorial</code> not to be recursive:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn factorial(mut number: BigUint) -&gt; BigUint {\n    let mut result = BigUint::one();\n    let one = BigUint::one();\n\n    while number &gt; one {\n        result *= &amp;number;\n        number -= &amp;one;\n    }\n\n    result\n}\n</code></pre>\n\n<p>This might seem unidiomatic however. There is a <a href=\"https://docs.rs/num/0.2.0/num/fn.range.html\" rel=\"nofollow noreferrer\"><code>range</code></a> function, that you could use with <code>for</code>, however, it uses <code>clone</code> internally, defeating the point.</p>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1565992329, "creation_date": 1565992329, "answer_id": 57531550, "question_id": 57530536, "link": "https://stackoverflow.com/questions/57530536/how-to-avoid-cloning-a-big-integer-in-rust/57531550#57531550", "title": "How to avoid cloning a big integer in rust", "body": "<p>I don't think take a <code>BigUint</code> as parameter make sense for a factorial. <code>u32</code> should be enough:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use num::{BigUint, One};\n\nfn main() {\n    for n in 0..42 {\n        println!(\"{}! = {}\", n, factorial(n));\n    }\n}\n\nfn factorial_aux(accu: BigUint, i: u32) -&gt; BigUint {\n    if i &gt; 1 {\n        factorial_aux(accu * i, i - 1)\n    }\n    else {\n        accu\n    }\n}\n\nfn factorial(n: u32) -&gt; BigUint {\n    factorial_aux(BigUint::one(), n)\n}\n</code></pre>\n\n<p>Or if you really want to keep <code>BigUint</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use num::{BigUint, FromPrimitive, One, Zero};\n\nfn main() {\n    for i in (0..42).flat_map(|i| FromPrimitive::from_i32(i)) {\n        print!(\"{}! = \", i);\n        println!(\"{}\", factorial(i));\n    }\n}\n\nfn factorial_aux(accu: BigUint, i: BigUint) -&gt; BigUint {\n    if !i.is_one() {\n        factorial_aux(accu * &amp;i, i - 1u32)\n    } else {\n        accu\n    }\n}\n\nfn factorial(n: BigUint) -&gt; BigUint {\n    if !n.is_zero() {\n        factorial_aux(BigUint::one(), n)\n    } else {\n        BigUint::one()\n    }\n}\n</code></pre>\n\n<p>Both version doesn't do any clone.</p>\n"}, {"tags": [], "owner": {"reputation": 361, "user_id": 12845381, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mARoMFM-kxwMrEHo4qVrjWjvNNPqlnm7SZzlLcBbw=k-s128", "display_name": "Tomek Czajka", "link": "https://stackoverflow.com/users/12845381/tomek-czajka"}, "is_accepted": false, "score": 0, "last_activity_date": 1615727303, "creation_date": 1615727303, "answer_id": 66624890, "question_id": 57530536, "link": "https://stackoverflow.com/questions/57530536/how-to-avoid-cloning-a-big-integer-in-rust/66624890#66624890", "title": "How to avoid cloning a big integer in rust", "body": "<p>If you use <a href=\"https://crates.io/crates/ibig\" rel=\"nofollow noreferrer\">ibig::UBig</a> instead of BigUint, those clones will be free, because ibig is optimized not to allocate memory from the heap for numbers this small.</p>\n"}], "owner": {"reputation": 5930, "user_id": 268075, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/72583f4dd226bdd1c5089f9c414d728a?s=128&d=identicon&r=PG", "display_name": "blokeley", "link": "https://stackoverflow.com/users/268075/blokeley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 290, "favorite_count": 0, "accepted_answer_id": 57530747, "answer_count": 3, "score": 1, "last_activity_date": 1615727303, "creation_date": 1565985930, "question_id": 57530536, "link": "https://stackoverflow.com/questions/57530536/how-to-avoid-cloning-a-big-integer-in-rust", "title": "How to avoid cloning a big integer in rust", "body": "<p>I used the <a href=\"https://crates.io/crates/num-bigint\" rel=\"nofollow noreferrer\">num::BigUInt</a> type to avoid integer overflows when calculating the factorial of a number.</p>\n\n<p>However, I had to resort to using <code>.clone()</code> to pass rustc's borrow checker.</p>\n\n<p>How can I refactor the factorial function to avoid cloning what could be large numbers many times?</p>\n\n<pre><code>use num::{BigUint, FromPrimitive, One};\n\nfn main() {\n    for n in -2..33 {\n        let bign: Option&lt;BigUint&gt; = FromPrimitive::from_isize(n);\n        match bign {\n            Some(n) =&gt; println!(\"{}! = {}\", n, factorial(n.clone())),\n            None =&gt; println!(\"Number must be non-negative: {}\", n),\n        }\n    }\n}\n\nfn factorial(number: BigUint) -&gt; BigUint {\n    if number &lt; FromPrimitive::from_usize(2).unwrap() {\n        number\n    } else {\n        number.clone() * factorial(number - BigUint::one())\n    }\n}\n</code></pre>\n\n<p>I tried to use a reference to BigUInt in the function definition but got some errors saying that BigUInt did not support references.</p>\n"}, {"tags": ["rust", "macros"], "comments": [{"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1565984536, "post_id": 57530128, "comment_id": 101526538, "body": "Macros don&#39;t follow same rules as functions or modules, no matter where they&#39;re defined, if you mark them as exportable, they all will live in base of crate, and will be accessible through <code>cratename::macroname!</code>. <code>std::prelude</code> docs don&#39;t even mention macros, so it&#39;s most likely that they&#39;re all imported automagically, as I don&#39;t think there&#39;s any point in nitpicking over what should be exported from std macros, either all, or nothing. That being said, what is rationale of this question? If you cannot access some macro, compiler will tell you."}, {"owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 2, "creation_date": 1565985054, "post_id": 57530128, "comment_id": 101526752, "body": "@Shasahae What&#39;s wrong with trying to get to learn the interesting parts of the language better?"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1565985165, "post_id": 57530128, "comment_id": 101526796, "body": "Which part of my question to your question imply that your question is wrong?  I&#39;m just asking if you had any issues with it, after explaining that it&#39;s most likely that either all macros or none of them are exported if you can access them, while also mentioning that they&#39;re namespaced differently from typical things like types or modules."}], "answers": [{"comments": [{"owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "edited": false, "score": 0, "creation_date": 1565985226, "post_id": 57530293, "comment_id": 101526822, "body": "Thanks for the quick answer again! :) What about the second part of my question; can there be a macro added to the standard library which doesn&#39;t use <code>#[macro_export]</code>, and thus is not usable without the <code>std::foo::</code> prefix?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "edited": false, "score": 0, "creation_date": 1565985536, "post_id": 57530293, "comment_id": 101526921, "body": "@ruohola no, because without <code>macro_export</code> they are not accessible outside. <code>macro_export</code> is basically <code>pub</code> for macros."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1566019660, "post_id": 57530293, "comment_id": 101532391, "body": "Side note: you can actually find this expansion using the <code>cargo expand</code> subcommand."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 7, "last_activity_date": 1565984684, "creation_date": 1565984684, "answer_id": 57530293, "question_id": 57530128, "link": "https://stackoverflow.com/questions/57530128/are-all-macros-in-the-rust-std-library-included-in-the-prelude/57530293#57530293", "title": "Are all macros in the Rust std library included in the prelude?", "body": "<p>The standard macros <a href=\"https://github.com/rust-lang/rust/blob/9a32ad0dd51f8451aa6e39d7e9ea89483cb8fcfa/src/libstd/prelude/v1.rs\" rel=\"noreferrer\">are actually not in the prelude</a>.</p>\n\n<p><code>rustc</code> automatically adds the following code on your crate:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(prelude_import)]\n#![no_std]\n#[prelude_import]\nuse ::std::prelude::v1::*;\n#[macro_use]\nextern crate std as std;\n</code></pre>\n\n<p>Because of <code>#[macro_use] extern crate std as std;</code>, all macros defined in the standard library marked with <code>#[macro_export]</code> are available without using <code>std::</code>.</p>\n"}], "owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 0, "accepted_answer_id": 57530293, "answer_count": 1, "score": 0, "last_activity_date": 1565984684, "creation_date": 1565983723, "question_id": 57530128, "link": "https://stackoverflow.com/questions/57530128/are-all-macros-in-the-rust-std-library-included-in-the-prelude", "title": "Are all macros in the Rust std library included in the prelude?", "body": "<p>Are all macros in Rust's std library included in the <a href=\"https://doc.rust-lang.org/std/prelude/index.html\" rel=\"nofollow noreferrer\">prelude</a>? So is every macro in <a href=\"https://doc.rust-lang.org/std/#macros\" rel=\"nofollow noreferrer\">this whole list</a> always usable without any <code>use</code> statements and without using the <code>std::</code> prefix?</p>\n\n<p>If they all are included in the prelude; is this guaranteed to always be the case or can a macro in theory be added to the std library and be accessable only with <code>std::foo::macro_name!()</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1565982086, "post_id": 57529729, "comment_id": 101525702, "body": "<a href=\"https://doc.rust-lang.org/src/core/str/mod.rs.html#1324-1336\" rel=\"nofollow noreferrer\">Wrong <code>Lines</code></a>"}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 6, "last_activity_date": 1566208114, "last_edit_date": 1566208114, "creation_date": 1565982501, "answer_id": 57529923, "question_id": 57529729, "link": "https://stackoverflow.com/questions/57529729/why-dont-we-need-to-extract-values-from-result-in-some-rust-iterators/57529923#57529923", "title": "Why don&#39;t we need to extract values from Result in some rust iterators?", "body": "<p><a href=\"https://doc.rust-lang.org/std/index.html?search=lines\" rel=\"nofollow noreferrer\">There are two <code>lines</code> in the standard library.</a></p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.lines\" rel=\"nofollow noreferrer\">one on <code>str</code></a>, which returns <a href=\"https://doc.rust-lang.org/std/str/struct.Lines.html\" rel=\"nofollow noreferrer\"><code>std::str::Lines</code></a>, which is an iterator of <code>&amp;str</code>. This is the one you are using. Splitting a string cannot fail, so it doesn't need to use <code>Result</code>.</p>\n\n<p>And the <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.lines\" rel=\"nofollow noreferrer\">one on <code>std::io::BufRead</code></a>, which returns <a href=\"https://doc.rust-lang.org/std/io/struct.Lines.html\" rel=\"nofollow noreferrer\"><code>std::io::Lines</code></a>. This one reads from a <code>BufRead</code>, which can fail (eg. reading a file on a network drive can fail if the drive becomes unreachable), so it must return a <code>Result</code>.</p>\n"}], "owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 57529923, "answer_count": 1, "score": 1, "last_activity_date": 1566208114, "creation_date": 1565981441, "last_edit_date": 1565982689, "question_id": 57529729, "link": "https://stackoverflow.com/questions/57529729/why-dont-we-need-to-extract-values-from-result-in-some-rust-iterators", "title": "Why don&#39;t we need to extract values from Result in some rust iterators?", "body": "<p>Here, I have a simple map and sum over an iterator:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let s = \"\naoeu\naoeu\naoeu\naoeu\n\";\n\n    let ls = s.lines();\n    let i: usize = ls.map(|l| l.len()).sum();\n    dbg!(i);\n}\n</code></pre>\n\n<p>This compiles and runs fine. When I look at the <a href=\"https://doc.rust-lang.org/src/std/io/mod.rs.html#2250\" rel=\"nofollow noreferrer\">source for <code>lines</code></a>, the <code>next</code> method returns <code>Option&lt;Result&lt;String&gt;&gt;</code>.</p>\n\n<p>But the map above calls <code>.len()</code> directly on each item. I understand the value is extracted from inside the <code>Option</code> (a <code>None</code> value would mean the end of the iterator). Is <code>.len()</code> being called on the <code>Result</code> object? Why don't we need to call something like <code>map()</code>* to extract the value from <code>Result</code>?</p>\n\n<p>Thanks!</p>\n\n<p>* I had thought <code>Result::map</code> had a different meaning to <code>Iterator::map</code>, but maybe I'm confusing myself...</p>\n"}, {"tags": ["parameters", "rust", "pattern-matching", "closures"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1565982007, "last_edit_date": 1565982007, "creation_date": 1565980722, "answer_id": 57529597, "question_id": 57529537, "link": "https://stackoverflow.com/questions/57529537/any-way-to-make-closure-which-takes-a-destructured-array/57529597#57529597", "title": "Any way to make closure which takes a destructured array?", "body": "<p>No.</p>\n\n<p>Function arguments are patterns, and those patterns must always be irrefutable.</p>\n\n<hr>\n\n<p>Using <code>itertools</code>, you could do this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::Itertools;\n\nfn main() {\n    let f = |s:&amp;[u8]|s.iter().tuples().all(|(a,b)|a==b);\n    println!(\"{}\", f(b\"TThhiiss  iiss  ddoouubbllee  ssppeeaakk!!\"));\n}\n</code></pre>\n\n<p>This can work because <code>tuples</code> will infer that it needs exactly 2 elements. If there are an odd number of elements, the last one will be ignored.</p>\n"}], "owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 56, "favorite_count": 0, "accepted_answer_id": 57529597, "answer_count": 1, "score": 0, "last_activity_date": 1565985375, "creation_date": 1565980442, "last_edit_date": 1565985375, "question_id": 57529537, "link": "https://stackoverflow.com/questions/57529537/any-way-to-make-closure-which-takes-a-destructured-array", "title": "Any way to make closure which takes a destructured array?", "body": "<p>I was doing <a href=\"https://codegolf.stackexchange.com/questions/189358/is-it-double-speak\">this code golf challenge</a>, and figured out this solution to the problem:</p>\n\n<pre><code>fn main() {\n    let f = |s:&amp;[u8]|s.chunks(2).all(|n|n[0]==n[1]);\n    println!(\"{}\", f(b\"TThhiiss  iiss  ddoouubbllee  ssppeeaakk!!\"));\n}\n</code></pre>\n\n<p>This solution works, but I thought the <code>n[0]==n[1]</code> didn't look too elegant and tried something like:</p>\n\n<pre><code>fn main() {\n    let f = |s:&amp;[u8]|s.chunks(2).all(|[a,b]|a==b);\n    println!(\"{}\", f(b\"TThhiiss  iiss  ddoouubbllee  ssppeeaakk!!\"));\n}\n</code></pre>\n\n<p>But this fails with the error:</p>\n\n<blockquote>\n<pre><code>error[E0005]: refutable pattern in function argument: `&amp;[]` not covered\n --&gt; src/main.rs:2:39\n  |\n2 |     let f = |s:&amp;[u8]|s.chunks(2).all(|[a,b]|a==b);\n  |                                       ^^^^^ pattern `&amp;[]` not covered\n</code></pre>\n</blockquote>\n\n<p>Is there any way to make the above work <strong>by just changing the closure parameters</strong> (everything else should be kept as is):</p>\n\n<pre><code>fn main() {\n    let f = |s:&amp;[u8]|s.chunks(2).all(|/* anything here */|a==b);\n    println!(\"{}\", f(b\"TThhiiss  iiss  ddoouubbllee  ssppeeaakk!!\"));\n}\n</code></pre>\n"}, {"tags": ["rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 8, "last_activity_date": 1566224993, "last_edit_date": 1566224993, "creation_date": 1566222685, "answer_id": 57558151, "question_id": 57529456, "link": "https://stackoverflow.com/questions/57529456/how-can-i-ignore-extra-tuple-items-when-deserializing-with-serde-trailing-cha/57558151#57558151", "title": "How can I ignore extra tuple items when deserializing with Serde? (&quot;trailing characters&quot; error)", "body": "<p>You can implement a custom <code>Visitor</code> which ignores rest of the sequence. Be aware that the whole sequence must be consumed. This is an important part (try to remove it and you'll get same error):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// This is very important!\nwhile let Some(IgnoredAny) = seq.next_element()? {\n    // Ignore rest\n}\n</code></pre>\n\n<p>Here's a working example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt;\n\nuse serde::de::{self, Deserialize, Deserializer, IgnoredAny, SeqAccess, Visitor};\nuse serde::Serialize;\n\n#[derive(Serialize, Debug)]\npub struct MyTuple(String, i32);\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for MyTuple {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        struct MyTupleVisitor;\n\n        impl&lt;'de&gt; Visitor&lt;'de&gt; for MyTupleVisitor {\n            type Value = MyTuple;\n\n            fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                formatter.write_str(\"struct MyTuple\")\n            }\n\n            fn visit_seq&lt;V&gt;(self, mut seq: V) -&gt; Result&lt;Self::Value, V::Error&gt;\n            where\n                V: SeqAccess&lt;'de&gt;,\n            {\n                let s = seq\n                    .next_element()?\n                    .ok_or_else(|| de::Error::invalid_length(0, &amp;self))?;\n                let n = seq\n                    .next_element()?\n                    .ok_or_else(|| de::Error::invalid_length(1, &amp;self))?;\n\n                // This is very important!\n                while let Some(IgnoredAny) = seq.next_element()? {\n                    // Ignore rest\n                }\n\n                Ok(MyTuple(s, n))\n            }\n        }\n\n        deserializer.deserialize_seq(MyTupleVisitor)\n    }\n}\n\nfn main() {\n    let two_elements = r#\"[\"foo\", 123]\"#;\n    let three_elements = r#\"[\"foo\", 123, \"bar\"]\"#;\n\n    let tuple: MyTuple = serde_json::from_str(two_elements).unwrap();\n    assert_eq!(tuple.0, \"foo\");\n    assert_eq!(tuple.1, 123);\n\n    let tuple: MyTuple = serde_json::from_str(three_elements).unwrap();\n    assert_eq!(tuple.0, \"foo\");\n    assert_eq!(tuple.1, 123);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1567008060, "creation_date": 1567008060, "answer_id": 57696273, "question_id": 57529456, "link": "https://stackoverflow.com/questions/57529456/how-can-i-ignore-extra-tuple-items-when-deserializing-with-serde-trailing-cha/57696273#57696273", "title": "How can I ignore extra tuple items when deserializing with Serde? (&quot;trailing characters&quot; error)", "body": "<p>For JSON, I'd combine <a href=\"https://docs.rs/serde_json/1.0.29/serde_json/value/struct.RawValue.html\" rel=\"nofollow noreferrer\"><code>RawValue</code></a> and a custom deserialization:</p>\n\n<pre><code>use serde::{Deserialize, Deserializer};\n\n#[derive(Debug)]\nstruct MyTuple(String, i32);\n\n#[derive(Deserialize, Debug)]\nstruct MyTupleFutureCompat&lt;'a&gt;(\n    String,\n    i32,\n    #[serde(default, borrow)] Option&lt;&amp;'a serde_json::value::RawValue&gt;,\n);\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for MyTuple {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        let t: MyTupleFutureCompat = Deserialize::deserialize(deserializer)?;\n        Ok(MyTuple(t.0, t.1))\n    }\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let json = r#\"[\n        \"foo\",\n        123,\n        \"ignore me\"\n    ]\"#;\n    let d: MyTuple = serde_json::from_str(json)?;\n    println!(\"{:?}\", d);\n    Ok(())\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/46753955/155423\">How to transform fields during deserialization using Serde?</a></li>\n<li><a href=\"https://stackoverflow.com/q/49079533/155423\">Is there a way to deserialize arbitrary JSON using Serde without creating fine-grained objects?</a></li>\n<li><a href=\"https://stackoverflow.com/q/56394620/155423\">Why can Serde not derive Deserialize for a struct containing only a &amp;Path?</a></li>\n</ul>\n"}], "owner": {"reputation": 24273, "user_id": 525872, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/4d6f74711436cfe252bf4fc8f3cf4971?s=128&d=identicon&r=PG", "display_name": "Jo Liss", "link": "https://stackoverflow.com/users/525872/jo-liss"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1227, "favorite_count": 0, "accepted_answer_id": 57558151, "answer_count": 2, "score": 11, "last_activity_date": 1567008060, "creation_date": 1565980054, "last_edit_date": 1566225051, "question_id": 57529456, "link": "https://stackoverflow.com/questions/57529456/how-can-i-ignore-extra-tuple-items-when-deserializing-with-serde-trailing-cha", "title": "How can I ignore extra tuple items when deserializing with Serde? (&quot;trailing characters&quot; error)", "body": "<p>Serde ignores unknown named fields when deserializing into regular structs. How can I similarly ignore extra items when deserializing into tuple structs (e.g. from a heterogeneous JSON array)?</p>\n\n<p>For example, this code ignores the extra <code>\"c\"</code> field just fine:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Serialize, Deserialize, Debug)]\npub struct MyStruct { a: String, b: i32 }\n\nfn test_deserialize() -&gt; MyStruct {\n    ::serde_json::from_str::&lt;MyStruct&gt;(r#\"\n    {\n        \"a\": \"foo\",\n        \"b\": 123,\n        \"c\": \"ignore me\"\n    }\n    \"#).unwrap()\n}\n// =&gt; MyStruct { a: \"foo\", b: 123 }\n</code></pre>\n\n<p>By contrast, this fails on the extra item in the tuple:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Serialize, Deserialize, Debug)]\npub struct MyTuple(String, i32);\n\nfn test_deserialize_tuple() -&gt; MyTuple {\n    ::serde_json::from_str::&lt;MyTuple&gt;(r#\"\n        [\n            \"foo\",\n            123,\n            \"ignore me\"\n        ]\n    \"#).unwrap()\n}\n// =&gt; Error(\"trailing characters\", line: 5, column: 13)\n</code></pre>\n\n<p>I'd like to allow extra items for forward compatibility in my data format. What's the easiest way to get Serde to ignore extra tuple items when deserializing?</p>\n"}, {"tags": ["parsing", "rust", "nom"], "answers": [{"comments": [{"owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "edited": false, "score": 0, "creation_date": 1565976458, "post_id": 57528570, "comment_id": 101523671, "body": "That solves the task at hand, but you are probably right to manually rewrite might be a better option for this"}, {"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "reply_to_user": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "edited": false, "score": 0, "creation_date": 1565976579, "post_id": 57528570, "comment_id": 101523711, "body": "@Delta_Fore Specifically, upon thinking about it, it&#39;s probably a good idea to just write your own combinator by hand for allowing different separators. If you need help with that, just tell me. I&#39;ll check SO later today again."}], "tags": [], "owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "is_accepted": true, "score": 2, "last_activity_date": 1565975016, "creation_date": 1565975016, "answer_id": 57528570, "question_id": 57527176, "link": "https://stackoverflow.com/questions/57527176/nom-parsing-a-separate-list/57528570#57528570", "title": "nom parsing a separate list", "body": "<p>The problem is that <code>nom</code> always takes the first path it sees <em>somewhat</em> works (as in, it doesn't have to consume all input). So what you ideally want to do, is split the paths after the first <code>\"a-z\"</code> (or whatever), to one of two possible ones: You deal with <code>|</code> as a separator, or not.</p>\n\n<p>This is because <code>nom</code> is a parser combinator library, and doesn't work like regex which can backtrack as far as it needs to to find something that works.</p>\n\n<p>Anyway, something like that should work:</p>\n\n<pre><code>fn compound_range(input: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], Node&gt; {\n    let single_range = |input| map(\n        separated_pair(take(1usize), tag(\"-\"), take(1usize)),\n        |(l, r): (&amp;[u8], &amp;[u8])| (l[0], r[0])\n    )(input);\n\n    map(\n        opt(\n            map(\n                pair(\n                    single_range,\n                    alt((\n                        preceded(tag(\"|\"), separated_nonempty_list(\n                            tag(\"|\"),\n                            single_range,\n                        )),\n                        many0(single_range)\n                    ))\n                ),\n                |(first, rest)| Node::Range(\n                    std::iter::once(first).chain(rest).flat_map(|(l, r)| l..r).collect()\n                )\n            ),\n        ),\n        |o| o.unwrap_or_else(|| Node::Range(Vec::new()))\n    )(input)\n}\n</code></pre>\n\n<p>Is there a better way? Probably. Given the specific task, it might actually make sense to implement that part of the parser you're writing manually. Does it work this way though? Probably. (I haven't tested it)</p>\n\n<p>Also something to keep in mind: This might consume too much, if you expect some other stuff that fits the pattern after it.</p>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 290, "favorite_count": 0, "accepted_answer_id": 57528570, "answer_count": 1, "score": 0, "last_activity_date": 1565975016, "creation_date": 1565968732, "question_id": 57527176, "link": "https://stackoverflow.com/questions/57527176/nom-parsing-a-separate-list", "title": "nom parsing a separate list", "body": "<p>I'm trying to parse the following alternate strings with nom5.0</p>\n\n<pre><code>\"A-Za-z0-9\"\n</code></pre>\n\n<p>or</p>\n\n<pre><code>\"A-Z|a-z|0-9\"\n</code></pre>\n\n<p>I've tried the following but to no avail</p>\n\n<pre><code>pub enum Node {\n    Range(Vec&lt;u8&gt;),\n}\n\nfn compound_range(input: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], Node&gt; {\n    map(\n        separated_list(\n            alt((tag(\"|\"), tag(\"\"))),\n            tuple((take(1usize), tag(\"-\"), take(1usize))),\n        ),\n        |v: Vec&lt;(&amp;[u8], _, &amp;[u8])&gt;| {\n            Node::Range(\n                v.iter()\n                    .map(|(s, _, e)| (s[0]..=e[0]).collect::&lt;Vec&lt;_&gt;&gt;())\n                    .flatten()\n                    .collect(),\n            )\n        },\n    )(input)\n}\n</code></pre>\n\n<p>Version 2.  </p>\n\n<pre><code>fn compound_range(input: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], Node&gt; {\n        alt((\n            map(\n                separated_list(tag(\"|\"), tuple((take(1usize), tag(\"-\"), take(1usize)))),\n                |v: Vec&lt;(&amp;[u8], _, &amp;[u8])&gt;| {\n                    Node::Range(\n                        v.iter()\n                            .map(|(s, _, e)| (s[0]..=e[0]).collect::&lt;Vec&lt;_&gt;&gt;())\n                            .flatten()\n                            .collect(),\n                    )\n                },\n            ),\n            map(\n                many1(tuple((take(1usize), tag(\"-\"), take(1usize)))),\n                |v: Vec&lt;(&amp;[u8], _, &amp;[u8])&gt;| {\n                    Node::Range(\n                        v.iter()\n                            .map(|(s, _, e)| (s[0]..=e[0]).collect::&lt;Vec&lt;_&gt;&gt;())\n                            .flatten()\n                            .collect(),\n                    )\n                },\n            ),\n        ))(input)\n    }\n\n\n\n#[test]\nfn parse_compound() {\n    println!(\"{:?}\", compound_range(b\"A-Za-z0-9\"));\n    println!(\"{:?}\", compound_range(b\"A-Z|a-z|0-9\"));\n}\n</code></pre>\n\n<p>I can either get the first or the second one to parse but never both.\nIs there a way to express this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565968346, "post_id": 57527043, "comment_id": 101520476, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>"}, {"owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565969038, "post_id": 57527043, "comment_id": 101520770, "body": "@FrenchBoiethios added"}], "answers": [{"comments": [{"owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1566035331, "post_id": 57528747, "comment_id": 101535186, "body": "I still do not understand why the coercion doesnt happen and why each closure is  a different type matters. The closure implicitly implements <code>FnMut</code> if i am right. So the coercion shouldnt happen shouldnt it? Another example without closure that works without <code>as</code> here <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8c537d11cbe74dacde97aadf33f969d4\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "reply_to_user": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1566080648, "post_id": 57528747, "comment_id": 101544881, "body": "@raj I&#39;ve updated the answer to be a whole lot more explaining and just <i>better</i>."}, {"owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1566196690, "post_id": 57528747, "comment_id": 101565355, "body": "but in this the coercion would have happened if the <code>funcion</code> signature was <code>fn use_coerced(cell: Cell&lt;Box&lt;dyn SomeTrait&gt;&gt;) {</code> . If the function accepts <code>Cell</code> instead of reference it would coerce."}, {"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "reply_to_user": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1566322829, "post_id": 57528747, "comment_id": 101617786, "body": "@raj Yeah, because in this case it&#39;s safe, because you cannot get the original type back anyway. But honestly, that feels a little besides the point, since that&#39;s just miles away from your original question. The answer to that was &quot;help Rusts type inference&quot;."}], "tags": [], "owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "is_accepted": false, "score": 0, "last_activity_date": 1566080625, "last_edit_date": 1566080625, "creation_date": 1565975981, "answer_id": 57528747, "question_id": 57527043, "link": "https://stackoverflow.com/questions/57527043/closure-implementing-fnmut-not-working-on-place-where-dyn-fnmut-is-expected/57528747#57528747", "title": "closure implementing FnMut not working on place where dyn FnMut is expected", "body": "<p>This is actually a pretty sneaky problem. Here's why:</p>\n\n<p>While you can coerce a <code>Box&lt;T&gt;</code> to a <code>Box&lt;dyn Trait&gt;</code> if <code>T: Trait</code>, those two are incompatible types, in that you cannot use a variable or field of the type <code>Box&lt;T&gt;</code> as a <code>Box&lt;dyn Trait&gt;</code>.</p>\n\n<p>Here's an example to show why that could lead to undefined behaviour, using <code>Cell&lt;...&gt;</code>s (where that box would be a field somewhere in <code>Cell&lt;...&gt;</code>)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::Cell;\n\ntrait SomeTrait { }\n\n#[derive(Clone, Copy)]\npub struct A;\n\nimpl SomeTrait for A { }\n\n#[derive(Clone, Copy)]\npub struct B;\n\nimpl SomeTrait for B { }\n\nfn use_coerced(cell: &amp;Cell&lt;Box&lt;dyn SomeTrait&gt;&gt;) {\n    cell.set(Box::new(B));  // valid, since `B` implements `SomeTrait`\n}\n\nfn main() {\n    // I'll put what the type inference will come up with as explicit types here\n    let some_cell: Cell&lt;Box&lt;A&gt;&gt; = Cell::new(Box::new(A));\n    use_coerced(&amp;some_cell);  // If cells would coerce, this would be valid\n    let value: Box&lt;A&gt; = some_cell.into_inner();  // But we put `Box&lt;B&gt;` in there. So we'd have undefined behaviour.\n}\n</code></pre>\n\n<p>So to solve that problem, you have to tell the compiler to use the <code>dyn FnMut()</code> type instead of the closure type somewhere. I personally prefer explicitely unsizing it after creating the <code>Box</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let closure_cell = Rc::new(RefCell::new(None));\n    let closure_cell_clone = Rc::clone(&amp;closure_cell);\n    *closure_cell.borrow_mut() = Some(Closure::wrap(Box::new(move || {\n        request_animation_frame(closure_cell_clone.borrow().as_ref().unwrap());\n    }) as Box&lt;dyn FnMut()&gt;));\n}\n\nfn request_animation_frame(f: &amp;Closure&lt;dyn FnMut()&gt;) { }\n</code></pre>\n\n<p>You can, however, also specify the type of the cell:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let closure_cell: Rc&lt;RefCell&lt;Option&lt;Closure&lt;dyn FnMut()&gt;&gt;&gt;&gt; = Rc::new(RefCell::new(None));\n    let closure_cell_clone = Rc::clone(&amp;closure_cell);\n    *closure_cell.borrow_mut() = Some(Closure::wrap(Box::new(move || {\n        request_animation_frame(closure_cell_clone.borrow().as_ref().unwrap());\n    })));\n}\n\nfn request_animation_frame(f: &amp;Closure&lt;dyn FnMut()&gt;) { }\n</code></pre>\n\n<p>But that is, as you can see, way more wordy, and unnecessarily so.</p>\n"}], "owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 233, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566080625, "creation_date": 1565968187, "last_edit_date": 1565968820, "question_id": 57527043, "link": "https://stackoverflow.com/questions/57527043/closure-implementing-fnmut-not-working-on-place-where-dyn-fnmut-is-expected", "title": "closure implementing FnMut not working on place where dyn FnMut is expected", "body": "<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\nuse wasm_bindgen::prelude::*;\nuse wasm_bindgen::JsCast;\n\nfn main() {\n    let closure_cell = Rc::new(RefCell::new(None));\n    let closure_cell_clone = Rc::clone(&amp;closure_cell);\n    *closure_cell.borrow_mut() = Some(Closure::wrap(Box::new(move || {\n        request_animation_frame(closure_cell_clone.borrow().as_ref().unwrap());\n    })));\n}\nfn request_animation_frame(f: &amp;Closure&lt;dyn FnMut()&gt;) {\n}\n</code></pre>\n\n<p>In the above code <code>request_animation_frame</code> expects <code>&amp;Closure&lt;dyn FnMut()&gt;</code>and I pass a <code>closure</code> which implements <code>FnMnut</code>. But I am getting an error </p>\n\n<pre><code>expected type `std::option::Option&lt;wasm_bindgen::closure::Closure&lt;dyn std::ops::FnMut()&gt;&gt;`\nfound type `std::option::Option&lt;wasm_bindgen::closure::Closure&lt;[closure@src/lib.rs:29:62: 39:6 bucket:_, world:_, closure_cell_clone:_]&gt;&gt;`\n</code></pre>\n\n<p>Arent <code>FnMut</code> default implemented if  a closure can implement that trait? Cant a closure which implements <code>FnMut</code> be sent in place of <code>dyn FnMut</code> ? What am I missing here?</p>\n"}, {"tags": ["syntax", "rust", "pattern-matching"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565960442, "post_id": 57524935, "comment_id": 101516609, "body": "Rust is annoying because it&#39;s hard to make code compile but compiled mean correct code. Why don&#39;t you like when code compile ? This feature was added recently to increase life quality. That just the more infer thing. This is possible because Rust get a more precise borrow checker. <code>number</code> is <code>&amp;mut</code> so the infer tool match ref and mut."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1565963171, "post_id": 57524935, "comment_id": 101517987, "body": "Just to clarify, this has nothing to do with the borrow checker - it&#39;s due to the <a href=\"https://rust-lang.github.io/rfcs/2005-match-ergonomics.html\" rel=\"nofollow noreferrer\">match ergonomics RFC</a>, which added auto-dereferencing to pattern matching."}, {"owner": {"reputation": 405, "user_id": 7080683, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-vHnjck4jA_4/AAAAAAAAAAI/AAAAAAAAACE/wU6N3qQY4hM/photo.jpg?sz=128", "display_name": "Arne J", "link": "https://stackoverflow.com/users/7080683/arne-j"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1565964216, "post_id": 57524935, "comment_id": 101518562, "body": "Thanks @JoeClay this is the first page I&#39;ve seen to explain this behavior. You should provide it as an answer to my question."}], "answers": [{"tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 2, "last_activity_date": 1565965690, "last_edit_date": 1565965690, "creation_date": 1565965056, "answer_id": 57526244, "question_id": 57524935, "link": "https://stackoverflow.com/questions/57524935/matching-borrowed-enum-why-is-this-syntax-equivalent/57526244#57526244", "title": "Matching borrowed enum - why is this syntax equivalent?", "body": "<p>This functionality was added in Rust 1.26, and is called 'default binding modes' (or 'match ergonomics', after <a href=\"https://rust-lang.github.io/rfcs/2005-match-ergonomics.html\" rel=\"nofollow noreferrer\">the RFC that proposed it</a>). It effectively allows pattern matching to automatically dereference values, and to add <code>ref</code> and <code>ref mut</code> to variable bindings where needed.</p>\n\n<p>The rules for this behaviour are discussed in detail in the RFC, but it effectively boils down to:</p>\n\n<ul>\n<li>Variable bindings within a pattern can be resolved in one of three modes:\n\n<ul>\n<li>'move' (the default), which will move the value.</li>\n<li>'ref', which will immutably reference the value.</li>\n<li>'ref mut', which will mutably reference the value.</li>\n</ul></li>\n<li>When a variable binding is encountered within a pattern without an explicit <code>ref</code>, <code>mut</code> or <code>ref mut</code>, the current binding mode will be used.</li>\n<li>When a reference is pattern matched using a non-reference pattern:\n\n<ul>\n<li>The value will be auto-dereferenced.</li>\n<li>The binding mode may change for any nested patterns:\n\n<ul>\n<li>If the type of the reference is <code>&amp;T</code>, the binding mode will change to 'ref'.</li>\n<li>If the type of the reference is <code>&amp;mut T</code> <strong>and</strong> the current binding mode is not 'ref', the binding mode will change to 'ref mut'.</li>\n</ul></li>\n</ul></li>\n</ul>\n\n<p>This may sound complicated, but as you can see from the end result, it tends to line up with how you'd intuitively write the match!</p>\n"}], "owner": {"reputation": 405, "user_id": 7080683, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-vHnjck4jA_4/AAAAAAAAAAI/AAAAAAAAACE/wU6N3qQY4hM/photo.jpg?sz=128", "display_name": "Arne J", "link": "https://stackoverflow.com/users/7080683/arne-j"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 0, "closed_date": 1565992572, "accepted_answer_id": 57526244, "answer_count": 1, "score": 0, "last_activity_date": 1565965690, "creation_date": 1565959673, "last_edit_date": 1565964374, "question_id": 57524935, "link": "https://stackoverflow.com/questions/57524935/matching-borrowed-enum-why-is-this-syntax-equivalent", "closed_reason": "Duplicate", "title": "Matching borrowed enum - why is this syntax equivalent?", "body": "<p>I have the following piece of code, which compiles using rustc v1.36:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Number {\n    Integer(i32),\n    Real(f32),\n}\n\nfn foo1(number: &amp;mut Number) {\n    if let Number::Integer(n) = number {\n        let _y: &amp;mut i32 = n;\n    }\n}\n\nfn foo2(number: &amp;mut Number) {\n    if let &amp;mut Number::Integer(ref mut n) = number {\n        let _y: &amp;mut i32 = n;\n    }\n}\n</code></pre>\n\n<p>Funny enough, I can understand how 'foo2' does the matching, but not so for 'foo1', while 'foo1' is the kind of code you will see in any Rust project. Can someone explain how the matching syntax in these 2 is equivalent? And thus it extend to other code (structures?) as well?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 23, "user_id": 11935516, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a707185b433960aa9b4dea73a74c3b9?s=128&d=identicon&r=PG&f=1", "display_name": "M SUbhan Raza", "link": "https://stackoverflow.com/users/11935516/m-subhan-raza"}, "reply_to_user": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "edited": false, "score": 0, "creation_date": 1565951550, "post_id": 57522953, "comment_id": 101512633, "body": "Thank you brother for taking out the time to answer the Question . . . but i am getting the problem using VSCode on Ubuntu 18.04"}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 1, "last_activity_date": 1565951486, "creation_date": 1565951486, "answer_id": 57523059, "question_id": 57522953, "link": "https://stackoverflow.com/questions/57522953/not-comparing-string-in-rust/57523059#57523059", "title": "Not comparing string in Rust", "body": "<blockquote>\n  <p>This function will read bytes from the underlying stream until the newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes up to, and including, <strong><em>the delimiter (if found) will be appended to buf.</em></strong></p>\n</blockquote>\n\n<p>Use <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.trim\" rel=\"nofollow noreferrer\"><code>trim()</code></a>, <code>let input = user_choice.trim();</code></p>\n"}], "owner": {"reputation": 23, "user_id": 11935516, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a707185b433960aa9b4dea73a74c3b9?s=128&d=identicon&r=PG&f=1", "display_name": "M SUbhan Raza", "link": "https://stackoverflow.com/users/11935516/m-subhan-raza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "closed_date": 1565952729, "accepted_answer_id": 57523059, "answer_count": 1, "score": 2, "last_activity_date": 1565951937, "creation_date": 1565950977, "last_edit_date": 1565951937, "question_id": 57522953, "link": "https://stackoverflow.com/questions/57522953/not-comparing-string-in-rust", "closed_reason": "Duplicate", "title": "Not comparing string in Rust", "body": "<p>I have taken the input from user but when i am trying to compare, it does not enter the if or else if block . Instead, it goes to else block</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let small_coffee = 2;\n    let medium_coffee = 4;\n    let large_coffee = 6;\n\n    let mut total_price = 0;\n\n    let mut user_choice = String::new();\n    io::stdin().read_line(&amp;mut user_choice).ok().expect(\"Eror\");\n\n    if user_choice == \"1\" {\n        total_price += small_coffee;\n    } else if user_choice == \"2\" {\n        total_price += medium_coffee;\n    } else if user_choice == \"3\" {\n        total_price += large_coffee;\n    } else {\n        println!(\"Sorry! Invalid Choice\");\n    }\n\n    println!(\"Your total bill amounted to : {}$\", total_price);\n}\n</code></pre>\n"}, {"tags": ["rust", "unsafe"], "comments": [{"owner": {"reputation": 480272, "user_id": 1968, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd630f72eef3790bfb4ef38d08c7f85?s=128&d=identicon&r=PG", "display_name": "Konrad Rudolph", "link": "https://stackoverflow.com/users/1968/konrad-rudolph"}, "edited": false, "score": 1, "creation_date": 1565949146, "post_id": 57522200, "comment_id": 101511568, "body": "Just to clarify, in your case <i>calling the function itself</i> isn\u2019t always safe, correct?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 480272, "user_id": 1968, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd630f72eef3790bfb4ef38d08c7f85?s=128&d=identicon&r=PG", "display_name": "Konrad Rudolph", "link": "https://stackoverflow.com/users/1968/konrad-rudolph"}, "edited": false, "score": 0, "creation_date": 1565949223, "post_id": 57522200, "comment_id": 101511599, "body": "@KonradRudolph Yes exactly. It is marked <code>unsafe</code> because its safety depends on input parameters or global state. As explained <a href=\"https://stackoverflow.com/a/29050417/2408867\">here</a>. So yes, I&#39;m pretty sure it actually has to be an <code>unsafe</code> function."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1566037280, "post_id": 57522200, "comment_id": 101535615, "body": "This is more of a random thought than an answer, which is why I only comment, as feature itself is unstable, but you can label blocks and in turn mark them as whatever you want really, which looks great, for now, of course, just follow the answers because they&#39;re a lot better than switching to nightly just for <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=bf08fa9d3175b0147809690187403e41\" rel=\"nofollow noreferrer\">this</a>... It&#39;s also technically abuse of feature, but I think it would convey the intention pretty well."}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1565950658, "post_id": 57522857, "comment_id": 101512236, "body": "Do you, by any chance, know if this solution is used in practice (i.e. by larger crates with a lot of <code>unsafe</code> functions)?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1565950787, "post_id": 57522857, "comment_id": 101512290, "body": "@LukasKalbertodt I tried to find out, but it&#39;s a difficult thing to search for :/"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1565951527, "last_edit_date": 1565951527, "creation_date": 1565950483, "answer_id": 57522857, "question_id": 57522200, "link": "https://stackoverflow.com/questions/57522200/what-are-best-practices-for-unsafe-functions-in-which-only-a-small-part-of-the/57522857#57522857", "title": "What are best practices for `unsafe` functions in which only a small part of the code is actually doing `unsafe` things?", "body": "<p>If you want to use the <code>unsafe</code> keyword as a way to catalogue all unsafe operations, you can construct more accurate boundaries by splitting your code into safe private functions. I'm not sure if it exactly meets your requirement of \"best practice\" since I don't know of any large projects using the technique, but it will work:</p>\n\n<pre><code>// Document the assumptions of this unsafe function here\npub unsafe fn my_function() {\n    my_internal_function()\n}\n\n// private\nfn my_internal_function() {\n    // ... doing safe stuff ...\n    unsafe {\n        // Document the assumptions of this unsafe block here\n        // ... doing `unsafe` stuff ...\n    }\n    // ... doing safe stuff ...\n}\n</code></pre>\n\n<p>If you are concerned about the existence of a \"safe\" function that is actually unsafe to use, introducing a risk of accidentally being used incorrectly, you can nest those private functions so they are not callable outside the main unsafe function:</p>\n\n<pre><code>pub unsafe fn my_function() {\n    fn my_internal_function() {\n        // ... doing safe stuff ...\n        unsafe {\n            // Document the assumptions of this unsafe block here\n            // ... doing `unsafe` stuff ...\n        }\n        // ... doing safe stuff ...\n    }\n\n    my_internal_function();    \n}\n</code></pre>\n\n<p>After all of this, properly documenting the assumptions of unsafe code with comments is the most important part to get right. This sort of trick will only help if you are concerned about metrics for the number of unsafe lines.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 57522857, "answer_count": 1, "score": 0, "last_activity_date": 1566002784, "creation_date": 1565947897, "last_edit_date": 1565950220, "question_id": 57522200, "link": "https://stackoverflow.com/questions/57522200/what-are-best-practices-for-unsafe-functions-in-which-only-a-small-part-of-the", "title": "What are best practices for `unsafe` functions in which only a small part of the code is actually doing `unsafe` things?", "body": "<p>In the crate I'm developing I have several <code>unsafe</code> functions, which are marked as such because of reasons <a href=\"https://stackoverflow.com/questions/29050360/how-do-i-decide-when-to-mark-a-function-as-unsafe\">explained in this answer</a>. In <code>unsafe</code> functions, I can perform <code>unsafe</code> operations as if the full function body was wrapped in an <code>unsafe { }</code> block. </p>\n\n<p>The problem is that, in bigger functions, only a small part of the function body is actually performing <code>unsafe</code> operations, while the rest is doing perfectly safe stuff. Often, this safe stuff is even pretty independent of the <code>unsafe</code> code. In these larger functions, I would like to <strong>narrow the scope of <code>unsafe</code> operations</strong>. The reason should be fairly understandable: I also don't wrap my complete codebase in an <code>unsafe { }</code> block just because I can.</p>\n\n<p>Unfortunately, there isn't a <code>safe { }</code> block to \"invert\" the behavior of <code>unsafe</code> functions. If there were I would use it like that:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>unsafe fn my_function() {\n    safe {\n        // ... doing safe stuff ...\n\n        unsafe {\n            // ... doing `unsafe` stuff ...\n        }\n\n        // ... doing safe stuff ...\n    }\n}\n</code></pre>\n\n<p>But as this is not possible: <strong>what are best practices in these situations to narrow the scope of <code>unsafe</code> operations? Are there established tricks to deal with this?</strong></p>\n\n<p>Just to be clear: this question is not about discussing whether or not narrowing the <code>unsafe</code> scope is good or bad. I stated that I want to do it: this question is about <em>how</em> to do it and what solutions (if any) are most commonly <em>used in practice</em>. (And if you don't understand why I would like to do it, <a href=\"https://github.com/rust-lang/rfcs/pull/2585\" rel=\"nofollow noreferrer\">this RFC</a> is very related.)</p>\n"}, {"tags": ["command-line", "ffmpeg", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1565945662, "post_id": 57521397, "comment_id": 101510013, "body": "That basic unix rule, <code>-i</code> is an argument. You must separate ALL of them. Read the documentation of <code>Command</code> all it&#39;s written"}, {"owner": {"reputation": 401, "user_id": 6792871, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1076642632424051/picture?type=large", "display_name": "SoptikHa", "link": "https://stackoverflow.com/users/6792871/soptikha"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565946396, "post_id": 57521397, "comment_id": 101510348, "body": "Thanks, this was the problem."}], "owner": {"reputation": 401, "user_id": 6792871, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1076642632424051/picture?type=large", "display_name": "SoptikHa", "link": "https://stackoverflow.com/users/6792871/soptikha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 212, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1565952890, "creation_date": 1565944646, "last_edit_date": 1565952890, "question_id": 57521397, "link": "https://stackoverflow.com/questions/57521397/how-does-rust-work-with-process-arguments", "title": "How does Rust work with process arguments?", "body": "<p>I'm really confused about Rust processes. I'm trying to call something like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ffmpeg -i path/to/test-video.webm -ab 160k -ac 2 -vn -f mp3 -\n</code></pre>\n\n<p>This should extract sound out of video and send it to stdout. So I've done this:</p>\n\n<pre><code>let sound: std::process::Output = Command::new(\"ffmpeg\")\n    .arg(format!(\"-i {}\", args.input.to_str().unwrap()))\n    .arg(\"-ab 160k\")\n    .arg(\"-ac 2\")\n    .arg(\"-vn\")\n    .arg(\"-f mp3\")\n    .arg(\"-\")\n    .stdout(Stdio::piped())\n    .stdin(Stdio::inherit())\n    .stderr(Stdio::inherit())\n    .output()\n    .unwrap();\n</code></pre>\n\n<p>But for some reason, this doesn't work. It prints this to stderr:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Unrecognized option 'i path/to/test-video.webm'.\nError splitting the argument list: Option not found\n</code></pre>\n\n<p>When I remove the slashes from args (so it looks like <code>.arg(format!(\"i {}\", ...)).arg(\"ab 160k\")...</code>, I get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Output file #0 does not contain any stream\n</code></pre>\n\n<p>I think I misunderstood how this works, but I tested it on other applications and it seemed to work the way I'm doing it now. What did I miss, how does Rust work with these arguments?</p>\n\n<p>And just to be clear, I know about the ffmpeg crates, but they don't work for me for some reason, I can't even compile them.</p>\n"}, {"tags": ["multithreading", "io", "rust", "stdout", "println"], "comments": [{"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 5, "creation_date": 1565941428, "post_id": 57520623, "comment_id": 101508433, "body": "you might want to look into using a TUI library like <code>tui</code> <a href=\"https://crates.io/crates/tui\" rel=\"nofollow noreferrer\">crates.io/crates/tui</a>"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 1, "creation_date": 1565948245, "post_id": 57520623, "comment_id": 101511158, "body": "One more thing though that worth mentioning -- do you want to see the updates while you type?  Or while you start typing the updates should freeze until you press <code>return</code> again?  In which case, do you want to see the &#39;history&#39; of the frozen updates, or just the most recent ones?"}, {"owner": {"reputation": 23, "user_id": 11934790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d491719c6272aa97e58a8144a817f947?s=128&d=identicon&r=PG&f=1", "display_name": "yomdol", "link": "https://stackoverflow.com/users/11934790/yomdol"}, "edited": false, "score": 0, "creation_date": 1565948669, "post_id": 57520623, "comment_id": 101511339, "body": "I want to be able to see the lines being printed while I type - i.e. I could half-type a command and leave it there, and the new lines would continue to be printed above what I&#39;m typing."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 3, "creation_date": 1565949128, "post_id": 57520623, "comment_id": 101511557, "body": "In that case, your best bet is to use the terminal-specific control sequences, which would leave your current line where it is along with the cursor, but at the same time print above it.  To make such thing work on all terminals is quite tricky and surprisingly complex task (mostly because of historical burdens) so as @belst suggested, you should use a crate that already implements this for you and <code>tui</code> is one such great library!"}], "answers": [{"tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 2, "last_activity_date": 1566210469, "last_edit_date": 1566210469, "creation_date": 1565992161, "answer_id": 57531528, "question_id": 57520623, "link": "https://stackoverflow.com/questions/57520623/how-to-prevent-threads-to-visually-mix-up-each-others-output/57531528#57531528", "title": "How to prevent threads to visually mix up each others&#39; output?", "body": "<p>As we mentioned in the comment section above, you very likely want to use an external library to deal with the intrinsic of each terminal.</p>\n\n<p>However, unlike discussed above, you may not even need <code>tui</code> for such a simple \"UI\", you could get away using <a href=\"https://crates.io/crates/termion\" rel=\"nofollow noreferrer\"><code>termion</code></a> (the actual crate <code>tui</code> uses under the hood).</p>\n\n<p>The following code snippet does exactly what you described above and even a tiny bit more.  But this is just a crude initial implementation, there are many things in there which need further refinement.  (E.g. you may want to handle the resize-event of the terminal while your program is running, or you want to gracefully handle the poisoned mutex states, etc.)</p>\n\n<p>Because the following snippet is rather long, let's go over it in small, digesteable chunks.</p>\n\n<p>First, let's start with the boring part, all the imports and some type aliasing we will use throughout the code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n    time::Duration,\n    thread::{\n        spawn,\n        sleep,\n        JoinHandle,\n    },\n    sync::{\n        Arc,\n        Mutex,\n        TryLockError,\n        atomic::{\n            AtomicBool,\n            Ordering,\n        },\n    },\n    io::{\n        self,\n        stdin,\n        stdout,\n        Write,\n    },\n};\n\nuse termion::{\n    terminal_size,\n    input::TermRead,\n    clear,\n    cursor::Goto,\n    raw::IntoRawMode,\n};\n\ntype BgBuf = Arc&lt;Mutex&lt;Vec&lt;String&gt;&gt;&gt;;\ntype FgBuf = Arc&lt;Mutex&lt;String&gt;&gt;;\ntype Signal = Arc&lt;AtomicBool&gt;;\n</code></pre>\n\n<p>That's out of the way, we can focus on our <em>background-thread</em>.  This is where all the \"interrupting\" lines should go.  (In this snippet if you press <kbd>RETURN</kbd> then the typed in \"command\" will be added to these lines as well to demonstrate interthread communication.)</p>\n\n<p>For easier debugging and demonstration purposes the lines are indexed.  As the background-thread is actually just a <em>secondary</em> thread it is not as aggressive as the <em>primary</em> one which handles the user inputs (<em>foreground-thread</em>) so it only uses <code>try_lock</code>.  Because of that it is a good idea to use a thread-local buffer to store the entries which could not be put into the shared buffer when that was unavailable so we wouldn't miss any entries.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn bg_thread(bg_buf: BgBuf,\n             terminate: Signal) -&gt; JoinHandle&lt;()&gt;\n{\n    spawn(move ||\n    {\n        let mut i = 0usize;\n        let mut local_buffer = Vec::new();\n        while !terminate.load(Ordering::Relaxed)\n        {\n            local_buffer.push(format!(\"[{}] Interrupting line\", i));\n\n            match bg_buf.try_lock()\n            {\n                Ok(mut buffer) =&gt;\n                {\n                    buffer.extend_from_slice(&amp;local_buffer);\n                    local_buffer.clear();\n                },\n                Err(TryLockError::Poisoned(_)) =&gt; panic!(\"BgBuf is poisoned\"),\n                _ =&gt; (),\n            }\n\n            i += 1;\n            sleep(Duration::from_millis(1000));\n        };\n    })\n}\n</code></pre>\n\n<p>Then comes our foreground-thread which reads the input from the user.  It has to be in a separate thread because it waits for key presses (aka events) from the user and while it does that it blocks its thread.</p>\n\n<p>As you might noticed both threads are using <code>terminate</code> (a shared <code>AtomicBool</code>) as a signal.  The background-thread and the main thread only read it, while this foreground-thread writes it.  Because we handle all the keyboard inputs in the foreground-thread, naturally this is where we handle the <kbd>CTRL</kbd> + <kbd>C</kbd> interruption, thus we use <code>terminate</code> to signal the other threads if our user wants to quit.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn fg_thread(fg_buf: FgBuf,\n             bg_buf: BgBuf,\n             terminate: Signal) -&gt; JoinHandle&lt;()&gt;\n{\n    use termion::event::Key::*;\n    spawn(move ||\n    {\n        for key in stdin().keys()\n        {\n            match key.unwrap()\n            {\n                Ctrl('c') =&gt; break,\n                Backspace =&gt;\n                {\n                    fg_buf.lock().expect(\"FgBuf is poisoned\").pop();\n                },\n                Char('\\n') =&gt;\n                {\n                    let mut buf = fg_buf.lock().expect(\"FgBuf is poisoned\");\n                    bg_buf.lock().expect(\"BgBuf is poisoned\").push(buf.clone());\n                    buf.clear();\n                },\n                Char(c) =&gt; fg_buf.lock().expect(\"FgBuf is poisoned\").push(c),\n                _ =&gt; continue,\n            };\n        }\n\n        terminate.store(true, Ordering::Relaxed);\n    })\n}\n</code></pre>\n\n<p>And last but not least these are followed by our main-thread.  We create the main data structures here which are shared among the three threads.  We set the terminal to be in \"raw\" mode, so that we control what goes on the screen manually instead of relying on some internal buffering, thus we can implement the <em>clipping</em> mechanism.</p>\n\n<p>We measure the size of the terminal window to determine how many lines we should print out from the background-buffer.</p>\n\n<p>Before every successful frame render we clear the screen, then print out the last <em>n</em> entries of the background-buffer, then print the user input as the last line.  And then to finally make these things appear on the screen, we flush the <code>stdout</code>.</p>\n\n<p>If we receive the termination-signal, we clean up the other two threads (i.e. wait for them to finish), clear the screen, reset the cursor position, and say good-bye to our user.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() -&gt; io::Result&lt;()&gt;\n{\n    let bg_buf = Arc::new(Mutex::new(Vec::new()));\n    let fg_buf = Arc::new(Mutex::new(String::new()));\n    let terminate = Arc::new(AtomicBool::new(false));\n\n    let background = bg_thread(Arc::clone(&amp;bg_buf),\n                               Arc::clone(&amp;terminate));\n    let foreground = fg_thread(Arc::clone(&amp;fg_buf),\n                               Arc::clone(&amp;bg_buf),\n                               Arc::clone(&amp;terminate));\n\n    let mut stdout = stdout().into_raw_mode().unwrap();\n\n    let (_, height) = terminal_size().unwrap();\n\n    while !terminate.load(Ordering::Relaxed)\n    {\n        write!(stdout, \"{}\", clear::All)?;\n\n        {\n            let entries = bg_buf.lock().expect(\"BgBuf is poisoned\");\n            let entries = entries.iter().rev().take(height as usize - 1);\n            for (i, entry) in entries.enumerate()\n            {\n                write!(stdout, \"{}{}\", Goto(1, height - i as u16 - 1), entry)?;\n            }\n        }\n\n        {\n            let command = fg_buf.lock().expect(\"FgBuf is poisoned\");\n            write!(stdout, \"{}{}\", Goto(1, height), command)?;\n        }\n\n        stdout.flush().unwrap();\n        sleep(Duration::from_millis(50));\n    }\n\n    background.join().unwrap();\n    foreground.join().unwrap();\n\n    writeln!(stdout, \"{0}{1}That's all folks!{1}\", clear::All, Goto(1, 1))\n}\n</code></pre>\n\n<p>And if we put all these things together, compile it and run it, we could get the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[0] Interrupting line\n[1] Interrupting line\n[2] Interrupting line\n[3] Interrupting line\nThis is one command..\n[4] Interrupting line\n[5] Interrupting line\n..and here's another..\n[6] Interrupting line\n[7] Interrupting line\n..and it can do even more!\n[8] Interrupting line\n[9] Interrupting line\nPretty cool, eh?\n[10] Interrupting line\n[11] Interrupting line\n[12] Interrupting line\n[13] Interrupting line\nI think it is! :)\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 11934790, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d491719c6272aa97e58a8144a817f947?s=128&d=identicon&r=PG&f=1", "display_name": "yomdol", "link": "https://stackoverflow.com/users/11934790/yomdol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 0, "accepted_answer_id": 57531528, "answer_count": 1, "score": 2, "last_activity_date": 1566210537, "creation_date": 1565940998, "last_edit_date": 1566210537, "question_id": 57520623, "link": "https://stackoverflow.com/questions/57520623/how-to-prevent-threads-to-visually-mix-up-each-others-output", "title": "How to prevent threads to visually mix up each others&#39; output?", "body": "<p>I have a program running two threads, where one prints status message to the console and the other accepts user inputs. However, because they both use the same console, if I'm partway typing a command using one thread when the other thread prints, it takes what I've already written with it (only visually - the command will still execute properly).</p>\n\n<p>This is an example of the code, where if you try to type into the console, it will constantly be interfered with by the second thread.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{time,thread,io};\n\nfn main() {\n    thread::spawn(move || {\n        loop {\n            println!(\"Interrupting line\");\n            thread::sleep(time::Duration::from_millis(1000));\n        };\n    });\n    loop {\n        let mut userinput: String = String::new();\n        io::stdin().read_line(&amp;mut userinput);\n        println!(\"{}\",userinput)\n    }\n}\n</code></pre>\n\n<p>As it is right now, this is what the console ends up looking like when trying to type \"i am trying to write a full sentence here\" into the console:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Interrupting line\ni aInterrupting line\nm trying Interrupting line\nto write a fInterrupting line\null senInterrupting line\ntence hereInterrupting line\n\ni am trying to write a full sentence here\n\nInterrupting line\nInterrupting line\n</code></pre>\n\n<p>As you can see, whatever I've written into the console when the second thread loops and prints \"Interrupting line\" is carried along with that line. Ideally, while I'm in the middle of typing, it would look like this (no matter how long it takes to type):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Interrupting line\nInterrupting line\nInterrupting line\ni am trying to \n</code></pre>\n\n<p>Then, once I'm done typing and press enter, it would look like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Interrupting line\nInterrupting line\nInterrupting line\ni am trying to write a full sentence here\ni am trying to write a full sentence here\n</code></pre>\n\n<p>Where the first sentence is my actual typed input, and the second is when it prints what I entered back to the console.</p>\n\n<p>Is there a way to print lines to the console that doesn't cause any in-progress user input to be mangled with the printing message?</p>\n"}, {"tags": ["rust", "iterator", "generator"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 4, "last_activity_date": 1565919894, "last_edit_date": 1565919894, "creation_date": 1565919443, "answer_id": 57517984, "question_id": 57517633, "link": "https://stackoverflow.com/questions/57517633/how-to-create-an-iterator-over-vecvect-of-unknown-size-that-is-equivalent-of/57517984#57517984", "title": "How to create an iterator over Vec&lt;Vec&lt;T&gt;&gt; of unknown size that is equivalent of cartesian product of iterators over inner Vec&lt;T&gt;s?", "body": "<p>The <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.multi_cartesian_product\" rel=\"nofollow noreferrer\">doc</a> already answer you:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::Itertools; // 0.8.0\n\npub fn product_of_lists(lists: &amp;[Vec&lt;u16&gt;]) -&gt; impl Iterator&lt;Item = Vec&lt;&amp;u16&gt;&gt; {\n    // generate cross products between lists\n    assert!(lists.len() &gt; 2);\n    lists.iter().map(|x| x.iter()).multi_cartesian_product()\n}\n</code></pre>\n\n<p>or</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::Itertools; // 0.8.0\n\npub fn product_of_lists&lt;'a, L, I&gt;(lists: L) -&gt; impl Iterator&lt;Item = Vec&lt;&amp;'a u16&gt;&gt;\nwhere\n    L: IntoIterator&lt;Item = I&gt;,\n    I: IntoIterator&lt;Item = &amp;'a u16&gt;,\n    &lt;I as IntoIterator&gt;::IntoIter: Clone,\n{\n    lists\n        .into_iter()\n        .map(IntoIterator::into_iter)\n        .multi_cartesian_product()\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 11933842, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c043527e1bdcffb6104b74f0b43e0f25?s=128&d=identicon&r=PG&f=1", "display_name": "precious", "link": "https://stackoverflow.com/users/11933842/precious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1565953043, "creation_date": 1565915136, "last_edit_date": 1565953043, "question_id": 57517633, "link": "https://stackoverflow.com/questions/57517633/how-to-create-an-iterator-over-vecvect-of-unknown-size-that-is-equivalent-of", "title": "How to create an iterator over Vec&lt;Vec&lt;T&gt;&gt; of unknown size that is equivalent of cartesian product of iterators over inner Vec&lt;T&gt;s?", "body": "<p>I want to devise a function similar to the example <a href=\"https://docs.rs/itertools/0.5.10/itertools/macro.iproduct.html\" rel=\"nofollow noreferrer\">here</a> except in my case, the number of arguments to <code>iproduct</code> is unknown at compile time. This is easily done in python as explained <a href=\"https://stackoverflow.com/questions/533905/get-the-cartesian-product-of-a-series-of-lists\">here</a>.</p>\n\n<p>I have tried using the <code>itertools</code> crate, specifically <code>iproduct!</code>, <code>multi_cartesian_product</code> and <code>cartesian_product</code> but currently fighting with the type system, as well as unsure if it is the right path.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn product_of_lists(lists: &amp;Vec&lt;Vec&lt;u16&gt;&gt;) -&gt; std::slice::Iter&lt;'_, u16&gt; {\n    // generate cross products between lists\n    assert!(lists.len() &gt; 2);\n    let mut product_iter = lists[0].iter();\n    for (en, list) in lists.iter().enumerate() {\n        if en &gt; 0{\n            product_iter = iproduct!(product_iter, list.iter());\n        }\n    }\n    product_iter\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/testcode.rs:44:28\n   |\n10 |             product_iter = iproduct!(product_iter, list.iter());\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::slice::Iter`, found struct `itertools::adaptors::Product`\n   |\n   = note: expected type `std::slice::Iter&lt;'_, _&gt;`\n              found type `itertools::adaptors::Product&lt;std::slice::Iter&lt;'_, _&gt;, std::slice::Iter&lt;'_, u16&gt;&gt;`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1565938158, "post_id": 57517573, "comment_id": 101507315, "body": "Since you are working with references that needs to be counted in such case, it is better to use <code>Rc</code>. Because of you want to mutate the data from the references you have, it is better to wrap it with <code>Mutex</code>. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d81021bc42c250945353a89a550f0e86\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 13, "user_id": 5661642, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qBIGNNnlPjc/AAAAAAAAAAI/AAAAAAAAAAA/88qwwLxrzjE/photo.jpg?sz=128", "display_name": "Fangzhou Xu", "link": "https://stackoverflow.com/users/5661642/fangzhou-xu"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1565995240, "post_id": 57517573, "comment_id": 101529546, "body": "I am very new to rust. Haven&#39;t tried Rc yet. but I will. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 5661642, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qBIGNNnlPjc/AAAAAAAAAAI/AAAAAAAAAAA/88qwwLxrzjE/photo.jpg?sz=128", "display_name": "Fangzhou Xu", "link": "https://stackoverflow.com/users/5661642/fangzhou-xu"}, "edited": false, "score": 0, "creation_date": 1565994811, "post_id": 57520361, "comment_id": 101529468, "body": "I thought owns it means owns it. what&#39;s the purpose <code>to own &amp;mut B</code>?"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 13, "user_id": 5661642, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qBIGNNnlPjc/AAAAAAAAAAI/AAAAAAAAAAA/88qwwLxrzjE/photo.jpg?sz=128", "display_name": "Fangzhou Xu", "link": "https://stackoverflow.com/users/5661642/fangzhou-xu"}, "edited": false, "score": 0, "creation_date": 1566011894, "post_id": 57520361, "comment_id": 101531566, "body": "To own a mutable reference means to borrow something mutably. You own the reference, but not the actual value."}, {"owner": {"reputation": 13, "user_id": 5661642, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qBIGNNnlPjc/AAAAAAAAAAI/AAAAAAAAAAA/88qwwLxrzjE/photo.jpg?sz=128", "display_name": "Fangzhou Xu", "link": "https://stackoverflow.com/users/5661642/fangzhou-xu"}, "edited": false, "score": 0, "creation_date": 1566117961, "post_id": 57520361, "comment_id": 101549436, "body": "I am new to rust. but if it is a reference, it is not <code>own</code> but <code>borrow</code>. Am I right? then it makes sense."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 13, "user_id": 5661642, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qBIGNNnlPjc/AAAAAAAAAAI/AAAAAAAAAAA/88qwwLxrzjE/photo.jpg?sz=128", "display_name": "Fangzhou Xu", "link": "https://stackoverflow.com/users/5661642/fangzhou-xu"}, "edited": false, "score": 0, "creation_date": 1566122425, "post_id": 57520361, "comment_id": 101550295, "body": "Yes, it is borrow. Owning a reference is a borrow. Not saying that you own the actual value. It is like when you own an address of a house, you don&#39;t actually own the house."}], "tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": true, "score": 0, "last_activity_date": 1565939683, "creation_date": 1565939683, "answer_id": 57520361, "question_id": 57517573, "link": "https://stackoverflow.com/questions/57517573/whats-the-best-way-to-borrow-a-struct-deeply-moved-into-other-objects/57520361#57520361", "title": "what&#39;s the best way to &#39;borrow&#39; a struct deeply moved into other objects?", "body": "<p>Yes, this is the only way to do it, but it is not bad at all.</p>\n\n<p>When you push a value into a linked list, you already moved the value's effective ownership (I said <em>effective</em>, because a <code>Box</code> only <em>effectively</em> owns the underlying value, but does not directly own it in terms of Safe Rust) to the last node. But how did you do it? To move <code>A</code> into <code>B</code>, you also have to own <code>&amp;mut B</code>. And you only want to get a <code>&amp;A</code> (or a <code>&amp;mut A</code>). Why don't you get that from <code>&amp;mut B</code>, since you already borrowed it anyway?</p>\n\n<p>I don't understand what you really mean by \"deeply wrapped\". But assume we have a <code>head: S</code> and a <code>tail: &amp;mut S</code>, where the <code>tail</code> borrows the last node of the linked list led by <code>head</code>. Now, to get an updated reference of <code>tail</code> after moving <code>new_tail</code> into <code>tail</code>, you simply change <code>tail</code> to <code>tail.next</code> (plus the <code>Option</code> and <code>Box</code> unwrapping code, but those don't affect ownership).</p>\n\n<p>Have a look at this new playground code: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1103d2f039c24ed6ea78408d613a4261\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1103d2f039c24ed6ea78408d613a4261</a></p>\n\n<p>You should insert your data with <code>tail: &amp;mut S</code> rather than from <code>head</code>. This is the whole point of the linked list. So to answer your question, yes, you have to borrow the moved node from its precedent node, but you already borrowed precedent node anyway, so it is nothing ugly.</p>\n\n<hr>\n\n<p>Actually, I cheated there. I secretly swapped the last two <code>println!</code> lines. If you swap them back, you would realize that <code>&amp;s1</code> cannot be used before the last use of <code>tail</code>, because <code>tail</code> mutably (hence exclusively) borrows something inside <code>s1</code>.</p>\n\n<pre><code>error[E0502]: cannot borrow `s1` as immutable because it is also borrowed as mutable\n</code></pre>\n\n<p>So how to fix this? You can't do this directly, because you might end up with poisoned data if the thread panics while working with some mutable data. <a href=\"https://stackoverflow.com/q/45108086/3990767\">This question</a> also discusses why mutable references cannot be reused.</p>\n\n<p>You might want to use a <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>Cell</code></a> to hold data that you want to make <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html#method.set\" rel=\"nofollow noreferrer\">internally mutable with just an immutable borrow</a>. But this would be tricky. Or if you want to go multi-threaded, you might try <code>Mutex</code>.</p>\n\n<hr>\n\n<p>But all this complexity aside, if you want real, intuitive, fast, low-level Rust, you have to work with Unsafe Rust.</p>\n"}], "owner": {"reputation": 13, "user_id": 5661642, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-qBIGNNnlPjc/AAAAAAAAAAI/AAAAAAAAAAA/88qwwLxrzjE/photo.jpg?sz=128", "display_name": "Fangzhou Xu", "link": "https://stackoverflow.com/users/5661642/fangzhou-xu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 56, "favorite_count": 0, "accepted_answer_id": 57520361, "answer_count": 1, "score": 1, "last_activity_date": 1565939683, "creation_date": 1565914327, "question_id": 57517573, "link": "https://stackoverflow.com/questions/57517573/whats-the-best-way-to-borrow-a-struct-deeply-moved-into-other-objects", "title": "what&#39;s the best way to &#39;borrow&#39; a struct deeply moved into other objects?", "body": "<p>I am working on a way to programmatically new struct in memory and append it to the linked list.</p>\n\n<p>The way I am doing is to new a struct, new a box pointing to it and wrap it by Option. Then I need to move the tail pointer down to the newly created one.</p>\n\n<p>I want to previous node owns the next node. So the tail pointer has to \n'borrow' the node. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct S {\n    next: Option&lt;Box&lt;S&gt;&gt;,\n}\n\n#[cfg(test)]\nmod test {\n    use crate::tmp::S;\n    use std::borrow::Borrow;\n\n    #[test]\n    fn test_tmp() {\n        let mut s1 = S { next: None };\n        let mut tail = &amp;s1;\n        // potentially within a loop as a linked list has multiple nodes\n        {\n            let mut s2 = S { next: None };\n            s1.next = Some(Box::new(s2));\n//            tail = &amp;s2;\n            tail = s1.next.as_ref().unwrap();\n        }\n        println!(\"s1: {:?}\", &amp;s1);\n        println!(\"tail: {:?}\", &amp;tail);\n    }\n}\n</code></pre>\n\n<p>The line commented out does not work as the owner has been moved to s1, I am fine with it. </p>\n\n<pre><code>tail = &amp;s2\n</code></pre>\n\n<p>It's just so ugly but the next line works. Assuming if I have a struct that deeply wrapped and I want to borrow it. Does that mean I have to unwrap it deeply again? </p>\n\n<pre><code>tail = s1.next.as_ref().unwrap();\n</code></pre>\n\n<p>There must be some way to do it better. Any hints?</p>\n"}, {"tags": ["ssl", "rust", "openssl", "tls1.2", "sni"], "answers": [{"tags": [], "owner": {"reputation": 4263, "user_id": 148736, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/98ce675339d7e7c8269349943d6a0823?s=128&d=identicon&r=PG", "display_name": "Andrew Arrow", "link": "https://stackoverflow.com/users/148736/andrew-arrow"}, "is_accepted": false, "score": 0, "last_activity_date": 1565973797, "creation_date": 1565973797, "answer_id": 57528306, "question_id": 57516102, "link": "https://stackoverflow.com/questions/57516102/what-is-correct-way-to-implement-multiple-tls-certs-and-private-keys-for-sni-rus/57528306#57528306", "title": "What is correct way to implement multiple TLS certs and private keys for SNI rust web server?", "body": "<p>Perfect example here: <a href=\"https://github.com/nikelmwann/garbageproxy/blob/578e92d56fc410a58f0b93195aef52a47cfbe3fb/src/tls.rs#L55\" rel=\"nofollow noreferrer\">https://github.com/nikelmwann/garbageproxy/blob/578e92d56fc410a58f0b93195aef52a47cfbe3fb/src/tls.rs#L55</a> this loops through N servers and adds each cert and key</p>\n"}], "owner": {"reputation": 4263, "user_id": 148736, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/98ce675339d7e7c8269349943d6a0823?s=128&d=identicon&r=PG", "display_name": "Andrew Arrow", "link": "https://stackoverflow.com/users/148736/andrew-arrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 160, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1565973797, "creation_date": 1565902280, "last_edit_date": 1565940179, "question_id": 57516102, "link": "https://stackoverflow.com/questions/57516102/what-is-correct-way-to-implement-multiple-tls-certs-and-private-keys-for-sni-rus", "title": "What is correct way to implement multiple TLS certs and private keys for SNI rust web server?", "body": "<p>With native_tls I see:</p>\n\n<pre><code>let ssl = ssl().expect(\"Failed to load SSL keys\");\n        let builder: native_tls::TlsAcceptorBuilder =\n            native_tls::backend::openssl::TlsAcceptorBuilderExt::from_openssl(ssl);\n        let tls_acceptor = builder.build().expect(\"Failed to build TLS acceptor\");\n</code></pre>\n\n<p>Which I think has:</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Server_Name_Indication\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/Server_Name_Indication</a></p>\n\n<p>and:</p>\n\n<p><a href=\"https://docs.rs/native-tls/0.2.3/native_tls/struct.TlsConnectorBuilder.html#method.use_sni\" rel=\"nofollow noreferrer\">https://docs.rs/native-tls/0.2.3/native_tls/struct.TlsConnectorBuilder.html#method.use_sni</a></p>\n\n<p>use_sni is true by default.</p>\n\n<p>But I'm still looking for correct way to load up N certs for N different domains and run all from the same server on same 443 port.</p>\n\n<p>Is there way to call <code>TlsAcceptorBuilderExt::from_openssl(ssl)</code> over and over with N certs?</p>\n\n<p>Edit1: found <a href=\"https://stackoverflow.com/a/5113466/148736\">this</a> which explains a lot.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 2, "creation_date": 1565897637, "post_id": 57514131, "comment_id": 101498423, "body": "I think it would be much more useful, if you could reduce the amount of code and make it a compilable example.  TBF I still don&#39;t understand what you try to achieve here.  What is the end goal?  Different levels of error types in <code>Result::Err</code>?  How would you want to use the returned error?"}], "answers": [{"comments": [{"owner": {"reputation": 284110, "user_id": 53013, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6d43da5df0e52fc31c55e6a227bb23f4?s=128&d=identicon&r=PG", "display_name": "Daniel C. Sobral", "link": "https://stackoverflow.com/users/53013/daniel-c-sobral"}, "edited": false, "score": 0, "creation_date": 1566091688, "post_id": 57519807, "comment_id": 101546218, "body": "Instead of <code>Err(e)</code>, it should have been <code>e</code>, but it&#39;s a good answer I had not thought of. Unfortunately, that prints the line at the wrong moment, and it&#39;s not testable. I could create a new error to store it and chain it, but then I fall in the same issue I already had with the line number chaining."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1566196399, "last_edit_date": 1566196399, "creation_date": 1565936790, "answer_id": 57519807, "question_id": 57514131, "link": "https://stackoverflow.com/questions/57514131/using-a-previously-borrowed-result-in-rust/57519807#57519807", "title": "Using a previously borrowed Result in Rust", "body": "<p>Just print the line inside the <code>and_then</code>:</p>\n\n<pre><code>let result = next_line\n    .and_then(|line| {\n        re_encode_json(&amp;line, bin_queries, text_queries)\n            .map_err(|e| {\n                println!(\"Error while processing {}\", line);\n                e\n            })\n    });\n</code></pre>\n\n<p>Or if you want to store the line for later:</p>\n\n<pre><code>let result = next_line\n    .and_then(|line| {\n        re_encode_json(&amp;line, bin_queries, text_queries)\n            .map_err(|e| { Error::with_chain (e, line) })\n    });\n</code></pre>\n"}], "owner": {"reputation": 284110, "user_id": 53013, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6d43da5df0e52fc31c55e6a227bb23f4?s=128&d=identicon&r=PG", "display_name": "Daniel C. Sobral", "link": "https://stackoverflow.com/users/53013/daniel-c-sobral"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "closed_date": 1565940792, "answer_count": 1, "score": -1, "last_activity_date": 1566196399, "creation_date": 1565892202, "last_edit_date": 1566098372, "question_id": 57514131, "link": "https://stackoverflow.com/questions/57514131/using-a-previously-borrowed-result-in-rust", "closed_reason": "Not suitable for this site", "title": "Using a previously borrowed Result in Rust", "body": "<p>I'd like to enhance an error message with the contents of a previous <code>Ok</code>, if that was the previous <code>Result</code>, but I found no obvious way of going about it. To demonstrate the issue, I've written the following functions eulating the key elements of my problem:</p>\n\n<pre><code>type SResult&lt;T&gt; = std::result::Result&lt;T, Vec&lt;String&gt;&gt;;\n\nfn main_loop(input: impl BufRead,\n            mut output: impl Write,\n            mut outerr: impl Write) -&gt; SResult&lt;()&gt; {\n    for (index, next_line) in input.lines().enumerate() {\n        let processed = process(next_line.map_err(|e| to_vec(e)), index);\n        match processed {\n            Err(ref error) if error.last().unwrap().starts_with(\"fatal\") =&gt;\n                processed.map(|_| ())?,\n            Err(ref error) =&gt; {\n                let mut error = error.to_owned();\n                writeln!(outerr, \"Error: {}\", error.pop().unwrap());\n                // Line contents should be printed here\n                while !error.is_empty() {\n                    writeln!(outerr, \"caused by: {}\", error.pop().unwrap());\n                }\n            },\n            Ok(ref message) =&gt; writeln!(output, \"{}\", message).map_err(|e| to_vec(e))?\n        }\n    }\n    Ok(())\n}\n\nfn process(next_line: SResult&lt;String&gt;, index: usize) -&gt; SResult&lt;String&gt; {\n    let result = &amp;mut next_line.and_then(eval);\n    match result {\n        Err(ref mut error) if error.last().unwrap().starts_with(\"fatal\") =&gt;\n            chain(result, format!(\"fatal error at {}\", index + 1)),\n        Err(ref mut error) =&gt;\n            chain(result, format!(\"error at {}\", index + 1)),\n        _ =&gt; result.to_owned()\n    }\n}\n\nfn eval&lt;'a&gt;(line: String) -&gt; SResult&lt;String&gt; {\n    match line.as_ref() {\n        \"first\" =&gt; Err(vec![\"bad line\".to_owned()]),\n        \"second\" =&gt; Ok(\"good line\".to_owned()),\n        _ =&gt; Err(vec![\"fatal error\".to_owned()])\n    }\n}\n</code></pre>\n\n<p>The functions <code>to_vec</code> and <code>chain</code> correspond to <code>.into()</code> and error-chain's <code>.chain_err</code> of my actual problem, to cut down on dependencies:</p>\n\n<pre><code>fn to_vec(error: std::io::Error) -&gt; Vec&lt;String&gt; {\n    vec![format!(\"{}\", error)]\n}\n\nfn chain(result: &amp;mut SResult&lt;String&gt;, message: String) -&gt; SResult&lt;String&gt; {\n    match result {\n        Ok(_) =&gt; result.to_owned(),\n        Err(ref mut error) =&gt; {\n            error.push(message);\n            Err(error.to_owned())\n        }\n    }\n}\n</code></pre>\n\n<p>My goal is to print the actual line that had an error where you see a comment in the <code>main_loop</code> function.  The code above can be tested by this test:</p>\n\n<pre><code>#[test]\nfn test_case() {\n    let data = [\"first\", \"second\", \"third\"].join(\"\\n\");\n    let input = Cursor::new(data);\n    let mut output = Vec::&lt;u8&gt;::with_capacity(1024);\n    let mut error = Vec::&lt;u8&gt;::with_capacity(1024);\n    let result = main_loop(input, &amp;mut output, &amp;mut error);\n    let output_as_text = std::str::from_utf8(&amp;output).unwrap();\n    let error_as_text = std::str::from_utf8(&amp;error).unwrap();\n    let mut error_message = result.unwrap_err();\n    error_message.reverse();\n    assert_eq!(output_as_text, \"good line\\n\");\n    assert_eq!(error_message.join(\"\\n\"), \"fatal error at 3\\nfatal error\");\n    assert_eq!(error_as_text, \"Error: error at 1\\ncaused by: bad line\\n\");\n}\n</code></pre>\n\n<p>And what I <em>want</em> would be tested by changing the last two assertions to this:</p>\n\n<pre><code>    assert_eq!(error_message.join(\"\\n\"), \"fatal error at 3\\nline: 'third'\\nfatal error\");\n    assert_eq!(error_as_text, \"Error: error at 1\\nline: 'first'\\ncaused by: bad line\\n\");\n</code></pre>\n\n<p>Mind you, because errors are possible when <em>decoding</em> the line (bad unicode), not all errors would have the line, though all of them have the <em>number</em> of the line. </p>\n\n<p>I've tried to print the line when printing out the errors on <code>main_loop</code>, and I've tried to extract and re-use the result in <code>process</code>. I could change <code>and_then(eval)</code> to <code>and_then(|line| { let r = eval(line); match r /* etc */ })</code>, but that would be as cumbersome as when I add the line number -- that cumbersomeness reflects an issue with error-chain, the crate being used for error handling.</p>\n\n<p>Is there a pattern Ruster old-hands know about that would make this simpler?</p>\n"}, {"tags": ["c", "rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565868300, "post_id": 57507726, "comment_id": 101485477, "body": "<code>argv</code> is bugging me because <code>&amp;[_]</code> is a fat pointer. Shouldn&#39;t that be <code>*mut *mut c_char</code>?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 5, "creation_date": 1565877502, "post_id": 57507726, "comment_id": 101489652, "body": "that a wrong answer, do not use this in production. You can&#39;t accept a slice from C code."}], "tags": [], "owner": {"reputation": 10045, "user_id": 77542, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d2bb52913c4cebae8835bb50c03996d5?s=128&d=identicon&r=PG", "display_name": "Tordek", "link": "https://stackoverflow.com/users/77542/tordek"}, "is_accepted": true, "score": 3, "last_activity_date": 1565862003, "last_edit_date": 1592644375, "creation_date": 1565862003, "answer_id": 57507726, "question_id": 57507413, "link": "https://stackoverflow.com/questions/57507413/how-to-convert-char-to-vecstring-in-rust/57507726#57507726", "title": "How to convert char** to Vec&lt;String&gt; in rust", "body": "<p>From the <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#safety-1\" rel=\"nofollow noreferrer\">documentation</a>:</p>\n<blockquote>\n<p>Other usage (e.g., trying to take ownership of a string that was allocated by foreign code) is likely to lead to undefined behavior or allocator corruption.</p>\n<blockquote>\n<p>Note: If you need to borrow a string that was allocated by foreign code, use CStr.</p>\n</blockquote>\n</blockquote>\n<p>You should be calling <code>CStr::from_ptr</code> and then convert to an owned value with either <code>to_str</code>, <code>to_string_lossy</code> or <code>into_c_string</code> as needed.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub unsafe extern &quot;C&quot; fn rust_main(argc : c_int , argv : &amp;[*mut c_char]) -&gt; c_int {\n\n    let arglen = argc as usize;\n    println!(&quot;Args: {}&quot;, argc);\n\n\n    for x in 0..arglen {\n        let var = CStr::from_ptr(argv[x]);\n        let printable = var.to_string_lossy();\n        println!(&quot;{}&quot;, x);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 2, "last_activity_date": 1565949124, "creation_date": 1565949124, "answer_id": 57522521, "question_id": 57507413, "link": "https://stackoverflow.com/questions/57507413/how-to-convert-char-to-vecstring-in-rust/57522521#57522521", "title": "How to convert char** to Vec&lt;String&gt; in rust", "body": "<p>You can't share slice with C code (There is really no way).</p>\n\n<p>I tried to make an example that could make sense to convert argv to <code>String</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use libc::{c_char, size_t, c_int};\nuse std::ffi::CStr;\nuse std::slice::from_raw_parts;\nuse std::str::Utf8Error;\n\npub unsafe fn convert_double_pointer_to_vec(\n    data: &amp;mut &amp;mut c_char,\n    len: size_t,\n) -&gt; Result&lt;Vec&lt;String&gt;, Utf8Error&gt; {\n    from_raw_parts(data, len)\n        .iter()\n        .map(|arg| CStr::from_ptr(*arg).to_str().map(ToString::to_string))\n        .collect()\n}\n\n\n#[no_mangle]\npub unsafe extern \"C\" fn rust_main(argc : c_int , data: &amp;mut &amp;mut c_char) -&gt; c_int {\n    let argv = convert_double_pointer_to_vec(data, argc as size_t);\n\n    if let Ok(mut argv) = argv {\n        for (i, arg) in argv.iter_mut().enumerate() {\n            arg.insert_str(0, &amp;format!(\"{}: \", i));\n        }\n\n        println!(\"{:#?}\", argv);\n\n        0\n    }\n    else {\n        1\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 514, "user_id": 321053, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f45e032278063da5931701cc846c360e?s=128&d=identicon&r=PG", "display_name": "Wil", "link": "https://stackoverflow.com/users/321053/wil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 494, "favorite_count": 0, "accepted_answer_id": 57507726, "answer_count": 2, "score": 3, "last_activity_date": 1565949124, "creation_date": 1565860429, "question_id": 57507413, "link": "https://stackoverflow.com/questions/57507413/how-to-convert-char-to-vecstring-in-rust", "title": "How to convert char** to Vec&lt;String&gt; in rust", "body": "<p>I have a rust static lib which is being linked int a c project. For the most part it is working well. However I can't figure out how to pass an array of c char* into rust and have it convert to a rust Vec.</p>\n\n<p>My C code:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>int rust_main(int argc, char** argv);\n\nint main(int argc, char **argv)\n{\n    rust_main(argc, argv);\n    return 0;\n}\n</code></pre>\n\n<p>My Rust Code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub unsafe extern \"C\" fn rust_main(argc : c_int , argv : &amp;[*mut c_char]) -&gt; c_int {\n\n    let arglen = argc as usize;\n    println!(\"Args: {}\", argc);\n\n\n    for x in 0..arglen {\n        let var = CString::from_raw(argv[x]);\n        let printable = var.to_string_lossy();\n        println!(\"{}\", x);\n    }\n}\n</code></pre>\n\n<p>Code compiles fine however when I try to access the string pointer array I get a Core Dump.</p>\n\n<p>If anyone could point me in the right direction it would be much appreciated.</p>\n"}, {"tags": ["websocket", "rust", "lifetime"], "comments": [{"owner": {"reputation": 7002, "user_id": 827593, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4d852cf0e1b0e4036e07754fc3925f46?s=128&d=identicon&r=PG", "display_name": "JP Moresmau", "link": "https://stackoverflow.com/users/827593/jp-moresmau"}, "edited": false, "score": 1, "creation_date": 1565865760, "post_id": 57507107, "comment_id": 101484593, "body": "I don&#39;t think this design can work. You&#39;re putting references to Sender into a HashMap, so Rust has to guarantee that these references are valid, which is not true since your handlers are living in other threads. I suppose you could try to use a raw pointer to Sender and retrieve it in unsafe code."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565871042, "post_id": 57507107, "comment_id": 101486501, "body": "Aren&#39;t senders meant to be cloned? What do you hope to achieve by using references?"}, {"owner": {"reputation": 49, "user_id": 5588832, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206326905104734/picture?type=large", "display_name": "Marco", "link": "https://stackoverflow.com/users/5588832/marco"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565871754, "post_id": 57507107, "comment_id": 101486794, "body": "@trentcl avoiding cloning the Senders between threads. Why do you say Senders are meant to be cloned?"}, {"owner": {"reputation": 49, "user_id": 5588832, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206326905104734/picture?type=large", "display_name": "Marco", "link": "https://stackoverflow.com/users/5588832/marco"}, "reply_to_user": {"reputation": 7002, "user_id": 827593, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4d852cf0e1b0e4036e07754fc3925f46?s=128&d=identicon&r=PG", "display_name": "JP Moresmau", "link": "https://stackoverflow.com/users/827593/jp-moresmau"}, "edited": false, "score": 0, "creation_date": 1565872347, "post_id": 57507107, "comment_id": 101487072, "body": "@JPMoresmau also if I move the declaration of connections inside the &quot;server&quot; thread the problem remains. I just want an HashMap string obj. Why it should not be possibile?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565876788, "post_id": 57507107, "comment_id": 101489302, "body": "I just mean they&#39;re cheap to clone and sending to a clone is the same as sending to the original (right?) I don&#39;t see why you want to avoid cloning one; this seems like exactly the situation where that&#39;s what you want."}], "answers": [{"comments": [{"owner": {"reputation": 49, "user_id": 5588832, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206326905104734/picture?type=large", "display_name": "Marco", "link": "https://stackoverflow.com/users/5588832/marco"}, "edited": false, "score": 0, "creation_date": 1565871813, "post_id": 57508597, "comment_id": 101486820, "body": "Thak you for your solution, but I would like to avoid unsafe code"}, {"owner": {"reputation": 7002, "user_id": 827593, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4d852cf0e1b0e4036e07754fc3925f46?s=128&d=identicon&r=PG", "display_name": "JP Moresmau", "link": "https://stackoverflow.com/users/827593/jp-moresmau"}, "reply_to_user": {"reputation": 49, "user_id": 5588832, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206326905104734/picture?type=large", "display_name": "Marco", "link": "https://stackoverflow.com/users/5588832/marco"}, "edited": false, "score": 1, "creation_date": 1565876270, "post_id": 57508597, "comment_id": 101489035, "body": "I think what you&#39;re trying to do IS unsafe. You&#39;re keeping in a map that lives for the duration of your program references to a structure that is owned by another object inside a thread. So the map and the objects it stores references to have fundamentally different life times, which Rust prevents you to do. I&#39;m new to Rust so maybe there are other, safe ways to do what you want, though."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565878658, "post_id": 57508597, "comment_id": 101490271, "body": "I don&#39;t think there&#39;s any way to safely use this code - each thread can only safely use the sender that it itself owns, which makes the <code>HashMap</code> extraneous. It&#39;s not technically unsound because the pointers are never dereferenced, but it&#39;s unlikely to be useful."}], "tags": [], "owner": {"reputation": 7002, "user_id": 827593, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4d852cf0e1b0e4036e07754fc3925f46?s=128&d=identicon&r=PG", "display_name": "JP Moresmau", "link": "https://stackoverflow.com/users/827593/jp-moresmau"}, "is_accepted": false, "score": 1, "last_activity_date": 1565897564, "last_edit_date": 1565897564, "creation_date": 1565866520, "answer_id": 57508597, "question_id": 57507107, "link": "https://stackoverflow.com/questions/57507107/i-want-to-keep-a-reference-inside-an-hashmap-but-im-not-able-to-specify-correct/57508597#57508597", "title": "I want to keep a reference inside an HashMap but I&#39;m not able to specify correctly the lifetime", "body": "<p>What you're trying to do is unsafe. You're keeping in a map that lives for the duration of your program references to a structure that is owned by another object inside a thread. So the map outlives the the objects it stores references to, which Rust prevents.</p>\n\n<p>Following on my comment, this code compiles (I've removed the factory for clarity):</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::sync::{Arc,Mutex};\nuse std::thread;\nuse std::ptr::NonNull;\n\nstruct MHandler {\n    sender: Sender,\n}\n\nstruct Sender{}\n\nstruct Wrapper(NonNull&lt;Sender&gt;);\n\nunsafe impl std::marker::Send for Wrapper { }\n\nfn main() {\n    let connections: Arc&lt;Mutex&lt;HashMap&lt;String, Wrapper&gt;&gt;&gt; = Arc::new(Mutex::new(HashMap::new()));\n\n    // Server thread\n    let server = thread::Builder::new()\n        .name(format!(\"server\"))\n        .spawn(move || {\n\n            let mut handler = MHandler {\n                sender: Sender{},\n            };\n            let w = Wrapper(NonNull::new(&amp;mut handler.sender as *mut Sender).unwrap());\n            Arc::clone(&amp;connections).lock().unwrap().insert(format!(\"Alan\"), w);\n        })\n        .unwrap();\n\n\n}\n</code></pre>\n\n<p>This is using raw pointers (<a href=\"https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html#dereferencing-a-raw-pointer\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html#dereferencing-a-raw-pointer</a>) and NonNull to be able to implement Send (see <a href=\"https://github.com/rust-lang/rust/issues/21709\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/21709</a> and <a href=\"https://play.rust-lang.org/?gist=1ce2532a0eefc60695663c26faddebe1&amp;version=stable\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=1ce2532a0eefc60695663c26faddebe1&amp;version=stable</a>)</p>\n\n<p>Not sure this helps you. </p>\n"}], "owner": {"reputation": 49, "user_id": 5588832, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206326905104734/picture?type=large", "display_name": "Marco", "link": "https://stackoverflow.com/users/5588832/marco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1565897564, "creation_date": 1565858835, "last_edit_date": 1565863346, "question_id": 57507107, "link": "https://stackoverflow.com/questions/57507107/i-want-to-keep-a-reference-inside-an-hashmap-but-im-not-able-to-specify-correct", "title": "I want to keep a reference inside an HashMap but I&#39;m not able to specify correctly the lifetime", "body": "<p>I'm using <a href=\"https://ws-rs.org/docs\" rel=\"nofollow noreferrer\">ws-rs</a> to build a chat app. I need to keep associations between a <em>Sender</em> and a <em>Username</em> but I'm having issues in referencing the <em>Sender</em> in my <em>HashMap</em>.</p>\n\n<p>I'm 99.99% sure that Handler keeps the ownership of Sender. </p>\n\n<p>I had solved this problem cloning every time the sender passing it to another thread, together with the username, via a mspc::channel but I wanna try to use smart pointers and reference.</p>\n\n<p>Here is a Minimal, Reproducible Example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\nuse std::sync::Arc;\nuse std::thread;\n\ntrait Factory {\n    fn connection_made(&amp;mut self, _: Sender) -&gt; MHandler;\n}\n\ntrait Handler {\n    fn on_open(&amp;mut self) -&gt; ();\n}\n\nstruct MFactory&lt;'a&gt; {\n    connections: Arc&lt;HashMap&lt;String, &amp;'a Sender&gt;&gt;,\n}\n\nstruct MHandler&lt;'a&gt; {\n    sender: Sender,\n    connections: Arc&lt;HashMap&lt;String, &amp;'a Sender&gt;&gt;,\n}\n\nstruct Sender{}\n\n\nfn main() {\n    let mut connections: Arc&lt;HashMap&lt;String, &amp;Sender&gt;&gt; = Arc::new(HashMap::new());\n\n        // Server thread\n    let server = thread::Builder::new()\n        .name(format!(\"server\"))\n        .spawn(|| {\n            let mFactory = MFactory {\n                connections: connections.clone(),\n            };\n\n            let mHandler = mFactory.connection_made(Sender{});\n            mHandler.on_open();\n        })\n        .unwrap();\n\n\n}\n\nimpl Factory for MFactory&lt;'_&gt; {\n    fn connection_made(&amp;mut self, s: Sender) -&gt; MHandler {\n        MHandler {\n            sender: s,\n            connections: self.connections.clone(),\n        }\n    }\n}\n\nimpl Handler for MHandler&lt;'_&gt; {\n    fn on_open(&amp;mut self) -&gt; () {\n        self.connections.insert(format!(\"Alan\"), &amp;self.sender);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dfc50413a1d23910811f48c1d16adb8f\" rel=\"nofollow noreferrer\">Playground</a>. </p>\n\n<p>Ps: I'm aware that Arc doesn't guarantee mutual exclusion so I have to wrap my <em>HasMap</em> in a <em>Mutex</em>. I've decided to ignore it for the moment.</p>\n"}]