[{"tags": ["enums", "rust", "rpc", "matching"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530792246, "post_id": 51179868, "comment_id": 89363336, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51179868/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Ideally, produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"comments": [{"owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "edited": false, "score": 0, "creation_date": 1530877147, "post_id": 51182054, "comment_id": 89399819, "body": "Thank you! This worked. After that I only had to edit the function definitions so that their output be the same. Otherwise I had a &quot;match arm with an incompatible type&quot; error"}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 0, "last_activity_date": 1530750942, "creation_date": 1530750942, "answer_id": 51182054, "question_id": 51179868, "link": "https://stackoverflow.com/questions/51179868/mismatched-types-on-handling-value-enum/51182054#51182054", "title": "Mismatched types on handling Value enum", "body": "<p>You need to either perform your type checking here at the call site, or defer type-checking to the callee (the <code>Echo::&lt;whatever&gt;</code> methods).</p>\n\n<p>At the call site:</p>\n\n<pre><code>match method {\n    \"sum\" =&gt; Echo::sum(params[0].as_u64().expect(\"expected u64\"), params[1].as_u64().expect(\"expected u64\")),\n    \"draw\" =&gt; Echo::draw(params), // &lt;-- this must continue to be passed as &amp;[Value]\n    \"concatenate =&gt; Echo::conc(params[0].as_str().expect(\"expected str\"), params[1].as_str().expect(\"expected str\"))\n}\n</code></pre>\n\n<p>In the callee:</p>\n\n<pre><code>impl Echo {\n    pub fn sum(v1: Value, v2: Value) -&gt; u64 {\n        let v1 = v1.as_u64().expect(\"expected u64\");\n        let v2 = v2.as_u64().expect(\"expected u64\");\n\n        v1 + v2\n    }\n}\n</code></pre>\n\n<p>This is <a href=\"https://docs.rs/rmp-rpc/0.2.0/rmp_rpc/enum.Value.html#method.as_u64\" rel=\"nofollow noreferrer\">based on the documentation I could find available</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "is_accepted": false, "score": 0, "last_activity_date": 1530884617, "creation_date": 1530884617, "answer_id": 51211794, "question_id": 51179868, "link": "https://stackoverflow.com/questions/51179868/mismatched-types-on-handling-value-enum/51211794#51211794", "title": "Mismatched types on handling Value enum", "body": "<p>What I did according to Simon was <br>\n<code>match method {\n  \"sum\" =&gt; Methods::sum(params[0].as_u64().expect(\"expected u64\"), params[1].as_u64().expect(\"expected u64\")),\n  \"conc\" =&gt; Methods::concatenate(params[0].as_str().expect(\"expected str\"), params[1].as_str().expect(\"expected str\")),\n  \"draw\" =&gt; Methods::draw(params),\n  _ =&gt; Err(\"invalid argument\".into())\n}</code> \n<br>\nbut also fix each function's output to a Result&lt;'Value, Value>\nin order to avoid incompatible type error</p>\n"}], "owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "accepted_answer_id": 51182054, "answer_count": 2, "score": 0, "last_activity_date": 1536505093, "creation_date": 1530732426, "last_edit_date": 1536505093, "question_id": 51179868, "link": "https://stackoverflow.com/questions/51179868/mismatched-types-on-handling-value-enum", "title": "Mismatched types on handling Value enum", "body": "<p>I am trying to use the <code>rmp_rpc</code> Rust libary to make a server that accepts commands from a client that is written in Python. I am modifying <a href=\"https://github.com/little-dude/rmp-rpc/blob/master/examples/server.rs\" rel=\"nofollow noreferrer\">this</a> example to reach my goal.</p>\n\n<p>How can I handle an argument of varying type (integer/string/boolean) into a match statement without getting a \"mismatched types; expected i32, found enum 'rmp_rpc::Value'\" error? For each method the params types might be different.</p>\n\n<pre><code>fn handle_request(&amp;mut self, method: &amp;str, params: &amp;[Value]) -&gt; Self::RequestFuture {\n        match method {\n            \"sum\" =&gt; Methods::sum(params[0], params[1]),\n            \"draw\" =&gt; Methods::draw(params),\n            \"conc\" =&gt; Methods::concatenate(params[0], params[1])\n        }\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1236, "user_id": 6047503, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/N9MT9.png?s=128&g=1", "display_name": "Hristo Kolev", "link": "https://stackoverflow.com/users/6047503/hristo-kolev"}, "edited": false, "score": 0, "creation_date": 1530729995, "post_id": 51179419, "comment_id": 89341398, "body": "If you return the <code>String</code> from the function instead of a pointer does that mean that you are copying it in memory?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 1236, "user_id": 6047503, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/N9MT9.png?s=128&g=1", "display_name": "Hristo Kolev", "link": "https://stackoverflow.com/users/6047503/hristo-kolev"}, "edited": false, "score": 0, "creation_date": 1530730429, "post_id": 51179419, "comment_id": 89341534, "body": "@HristoKolev: the specifics behind move semantics are <a href=\"https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics\">a separate topic</a> and potential LLVM optimizations are <a href=\"https://stackoverflow.com/questions/38571270/can-rust-optimise-away-the-bit-wise-copy-during-move-of-an-object-someday?rq=1\">a whole different story</a> but, in general (outside of some <code>unsafe</code> magic perhaps), this is the way it is done in Rust."}, {"owner": {"reputation": 1236, "user_id": 6047503, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/N9MT9.png?s=128&g=1", "display_name": "Hristo Kolev", "link": "https://stackoverflow.com/users/6047503/hristo-kolev"}, "edited": false, "score": 0, "creation_date": 1530730688, "post_id": 51179419, "comment_id": 89341626, "body": "But If I pass it as a <code>mut</code> parameter it doesn&#39;t do any copying?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 1236, "user_id": 6047503, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/N9MT9.png?s=128&g=1", "display_name": "Hristo Kolev", "link": "https://stackoverflow.com/users/6047503/hristo-kolev"}, "edited": false, "score": 0, "creation_date": 1530731011, "post_id": 51179419, "comment_id": 89341732, "body": "@HristoKolev: in general it <i>shouldn&#39;t</i> - in most cases this is expected to be optimized away. You can always verify it with addresses like in <a href=\"https://stackoverflow.com/questions/38571270/can-rust-optimise-away-the-bit-wise-copy-during-move-of-an-object-someday?rq=1\">this question</a> if you like."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1530772226, "post_id": 51179419, "comment_id": 89351074, "body": "Note that if you return the <code>String</code> from the function, it will probably copy the <code>String</code> <b>struct</b> (ie. a pointer and an int), but it won&#39;t copy the string <b>data</b> which is allocated on the heap and referenced by the pointer."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 1, "last_activity_date": 1530729608, "creation_date": 1530729608, "answer_id": 51179419, "question_id": 51179353, "link": "https://stackoverflow.com/questions/51179353/reading-a-file-with-rust-borrowed-value-only-lives-until-here/51179419#51179419", "title": "Reading a file with Rust - borrowed value only lives until here", "body": "<p>You are correct about the file handle being closed automatically when its variable goes out of scope; the same will happen to <code>contents</code>, though - it will be destroyed at the end of the function, unless you decide to return it as an owned <code>String</code>. In Rust functions can't return references to objects created inside them, only to those passed to them as arguments.</p>\n\n<p>You can fix your function as follows:</p>\n\n<pre><code>fn read(file_name: &amp;str) -&gt; String {\n    let mut f = File::open(file_name)\n        .expect(&amp;format!(\"file not found: {}\", file_name));\n\n    let mut contents = String::new();\n\n    f.read_to_string(&amp;mut contents)\n        .expect(&amp;format!(\"cannot read file {}\", file_name));\n\n    contents\n}\n</code></pre>\n\n<p>Alternatively, you can pass <code>contents</code> as a mutable reference to the <code>read</code> function:</p>\n\n<pre><code>fn read(file_name: &amp;str, contents: &amp;mut String) { ... }\n</code></pre>\n"}], "owner": {"reputation": 1236, "user_id": 6047503, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/N9MT9.png?s=128&g=1", "display_name": "Hristo Kolev", "link": "https://stackoverflow.com/users/6047503/hristo-kolev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 264, "favorite_count": 1, "accepted_answer_id": 51179419, "answer_count": 1, "score": 0, "last_activity_date": 1530729608, "creation_date": 1530729250, "question_id": 51179353, "link": "https://stackoverflow.com/questions/51179353/reading-a-file-with-rust-borrowed-value-only-lives-until-here", "title": "Reading a file with Rust - borrowed value only lives until here", "body": "<p>I have a function that should read a file and returns it's contents.</p>\n\n<pre><code>fn read (file_name: &amp;str) -&gt; &amp;str {\n\n    let mut f = File::open(file_name)\n        .expect(&amp;format!(\"file not found: {}\", file_name));\n\n    let mut contents = String::new();\n\n    f.read_to_string(&amp;mut contents)\n        .expect(&amp;format!(\"cannot read file {}\", file_name));\n\n    return &amp;contents;\n}\n</code></pre>\n\n<p>But I get this error: </p>\n\n<pre><code>  --&gt; src\\main.rs:20:13\n   |\n20 |     return &amp;contents;\n   |             ^^^^^^^^ borrowed value does not live long enough\n21 | }\n   | - borrowed value only lives until here\n   |\n</code></pre>\n\n<p>What am I doing wrong?</p>\n\n<p>My Idea of what is happening here is this:</p>\n\n<ol>\n<li><p><code>let mut f = File::open(file_name).expect(....);</code> - this takes a handle of a file and tells the OS that we want to do things with it.</p></li>\n<li><p><code>let mut contents = String::new();</code> - this creates a vector-like data structure on the heap in order to store the data that we are about to read from the file.</p></li>\n<li><p><code>f.read_to_string(&amp;mut contents).expect(...);</code> - this reads the file into the <code>contents</code> space.</p></li>\n<li><p><code>return &amp;contents;</code> - this returns a pointer to the vector where the file data is stored.</p></li>\n</ol>\n\n<p>Why am I not able to return the pointer that I want?</p>\n\n<p>How do I close my file (the <code>f</code> variable)? I think that rust will close it for me after the variable goes out of scope, but what If I need to close it before that?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1530773572, "post_id": 51179123, "comment_id": 89351754, "body": "I tried using <code>feature(nll)</code>, no cookie. Using <code>let b: () = a.borrow().c;</code>, the compiler wants <code>b</code> to be of type <code>Token</code> (NOT <code>&amp;Token</code>). So we have a borrow with no outstanding reference somehow... oO"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530792745, "post_id": 51179123, "comment_id": 89363634, "body": "See also <a href=\"https://stackoverflow.com/q/50066190/155423\">Why does adding a semicolon to an if let avoid a borrow checker error?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1530792858, "post_id": 51179123, "comment_id": 89363708, "body": "Specifically, this code works with NLL <i>with</i> the experimental &quot;polonius&quot; implementation (<code>#![feature(nll)]</code> + <code>RUSTFLAGS=&#39;-Z polonius&#39;</code>)."}], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 39, "favorite_count": 0, "closed_date": 1530792710, "answer_count": 0, "score": 6, "last_activity_date": 1530792676, "creation_date": 1530728099, "last_edit_date": 1530792676, "question_id": 51179123, "link": "https://stackoverflow.com/questions/51179123/match-of-a-temporary-member-does-not-live-long-enough", "closed_reason": "Duplicate", "title": "match of a temporary member does not live long enough", "body": "<p>The following code does not compile <a href=\"https://play.rust-lang.org/?gist=1389001ee36df038d16254ccc6631a9f&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">(playground)</a>:</p>\n\n<pre><code>#![allow(unused)]\nuse std::cell::RefCell;\n\nenum Token {\n    A,\n    B,\n}\n\nstruct Thing {\n    c: Token,\n}\n\nfn main() {\n    let a = RefCell::new(Thing { c: Token::A });\n\n    if let Token::A = a.borrow().c {\n        //Error!\n    }\n}\n</code></pre>\n\n<p>It fails with this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `a` does not live long enough\n  --&gt; src/main.rs:16:23\n   |\n16 |     if let Token::A = a.borrow().c {\n   |                       ^ borrowed value does not live long enough\n...\n19 | }\n   | - `a` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>If I add anything after the statement, even a single <code>;</code> then it works fine:</p>\n\n<pre><code>if let Token::A = a.borrow().c { \n};  // Ok\n</code></pre>\n\n<p>I assume that it is because the value of the <code>if</code> is used as the return of <code>main</code>, so the borrow in the <code>if let</code> is somehow extended. But that should not happen, it is just <code>()</code>! Or is there something I'm not understanding?</p>\n\n<p>BTW, the same thing happens with:</p>\n\n<pre><code>match a.borrow().c {\n    _ =&gt; ()\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": true, "score": 6, "last_activity_date": 1530750339, "creation_date": 1530750339, "answer_id": 51182014, "question_id": 51176126, "link": "https://stackoverflow.com/questions/51176126/how-to-init-a-constant-matrix-with-ndarray/51182014#51182014", "title": "How to init a constant matrix with ndarray?", "body": "<p>You can declare a immutable static variable instead of a const (since consts are compile time evaluated only), and then use <a href=\"https://crates.io/crates/lazy_static\" rel=\"noreferrer\">lazy-static</a>, which is </p>\n\n<blockquote>\n  <p>A macro for declaring lazily evaluated statics in Rust.</p>\n</blockquote>\n\n<p>to run your function and set the static variable. </p>\n\n<p>Example: <a href=\"https://play.rust-lang.org/?gist=7660d0e2c6bfe8173a1dbe6c1526c56d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">Playground</a></p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static; // 1.0.1;\n\npub mod a_mod {\nlazy_static! {\n    pub static ref FOO : ::std::time::SystemTime = ::std::time::SystemTime::now();\n}\n\n}\n\nfn main() {\n        println!(\"{:?}\", *a_mod::foo);\n}\n</code></pre>\n\n<p>It would require you to deref the variable before you use it though.</p>\n"}], "owner": {"reputation": 658, "user_id": 3866312, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dfea2f37d76cfb9421be5a418870a60c?s=128&d=identicon&r=PG&f=1", "display_name": "sonovice", "link": "https://stackoverflow.com/users/3866312/sonovice"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2828, "favorite_count": 1, "closed_date": 1530792203, "accepted_answer_id": 51182014, "answer_count": 1, "score": 4, "last_activity_date": 1530792216, "creation_date": 1530715007, "last_edit_date": 1530715257, "question_id": 51176126, "link": "https://stackoverflow.com/questions/51176126/how-to-init-a-constant-matrix-with-ndarray", "closed_reason": "Duplicate", "title": "How to init a constant matrix with ndarray?", "body": "<p>I would like to have a matrix in <code>ndarray</code> as a constant available for other modules. Unfortunately, the construction function itself is not a constant function. Is there any way around that restriction?</p>\n\n<p>Code:</p>\n\n<pre><code>extern crate ndarray;\n\nuse ndarray::prelude::*;\n\nconst foo: Array2&lt;f32&gt; = arr2(&amp;[\n    [1.26, 0.09], [0.79, 0.92]\n]);\n\nfn main() {\n    println!(\"{}\", foo);\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n --&gt; src\\main.rs:5:26\n  |\n5 |   const foo: Array2&lt;f32&gt; = arr2(&amp;[\n  |  __________________________^\n6 | |     [1.26, 0.09], [0.79, 0.92]\n7 | | ]);\n  | |__^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530693850, "post_id": 51169036, "comment_id": 89321507, "body": "What&#39;s even more curious is that a &quot;handmade&quot; <code>PartialEq</code> implementation <i>actually works</i> with such cases: <a href=\"http://play.rust-lang.org/?gist=574fdb76c93288b45770691c8630e8ef&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530710272, "post_id": 51169721, "comment_id": 89332044, "body": "<i>It seems like deref coercion isn&#39;t taking place when using the operators</i> \u2014 it&#39;s unclear to me what you are basing this statement on."}, {"owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530716595, "post_id": 51169721, "comment_id": 89335807, "body": "I am basing this on the premise that if deref coercion was taking place, the examples in the question would all be working. When I get a chance I will try to find more solid evidence of this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530794077, "post_id": 51169721, "comment_id": 89364453, "body": "Deref coercion always converts to a reference (&amp;T -&gt; &amp;U, &amp;&amp;T -&gt; &amp;U, &amp;&amp;&amp;T -&gt; &amp;U), etc. I don&#39;t see how it would come into play here."}], "tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": false, "score": 1, "last_activity_date": 1530710219, "last_edit_date": 1530710219, "creation_date": 1530694776, "answer_id": 51169721, "question_id": 51169036, "link": "https://stackoverflow.com/questions/51169036/why-does-1-2-not-compile/51169721#51169721", "title": "Why does 1 == &amp;2 not compile?", "body": "<p>It seems like deref coercion isn't taking place when using the operators (I am not sure why this is), however borrows may still be used due to an implementation of <code>PartialEq</code>. </p>\n\n<p>From the Rust documentation of <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\"><code>PartialEq</code></a> the following implementation can be seen:</p>\n\n<pre><code>impl&lt;'a, 'b, A, B&gt; PartialEq&lt;&amp;'b B&gt; for &amp;'a A \nwhere\n    A: PartialEq&lt;B&gt; + ?Sized,\n    B: ?Sized, \n</code></pre>\n\n<p>This states there is an implementation for a borrow of type <code>B</code> and a borrow for type <code>A</code> if there exists an implementation of <code>PartialEq</code> for type <code>A</code> and <code>B</code>.</p>\n\n<p>Given this definition, <code>&amp;i32 == &amp;i32</code>  can be used because <code>i32</code> implements <code>PartialEq</code> and given the above impl this dictates <code>PartialEq</code> is implemented for borrows of <code>i32</code>s. This then leads to the recursive case that <code>&amp;&amp;i32 == &amp;&amp;i32</code> works because <code>PartialEq</code> is implemented for <code>&amp;i32</code> so given the above impl <code>PartialEq</code> is also implemented for <code>&amp;&amp;i32</code>.</p>\n\n<p>Because of the definition of this implementation the number of borrows on both sides must be the same.</p>\n"}], "owner": {"reputation": 121, "user_id": 2419698, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d091cafc8033b35f47561118d8440f9b?s=128&d=identicon&r=PG", "display_name": "Yusuke Yoshimoto", "link": "https://stackoverflow.com/users/2419698/yusuke-yoshimoto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1530710219, "creation_date": 1530692636, "last_edit_date": 1530710168, "question_id": 51169036, "link": "https://stackoverflow.com/questions/51169036/why-does-1-2-not-compile", "title": "Why does 1 == &amp;2 not compile?", "body": "<p>I tried to compile the following code to understand the behavior of comparison operators applied to references:</p>\n\n<pre><code>fn main() {\n    &amp;1 == &amp;2;              // OK\n    &amp;&amp;1 == &amp;&amp;2;            // OK\n    &amp;1 == &amp;mut 2;          // OK\n    &amp;mut(&amp;1) == &amp;(&amp;mut 2); // OK\n    1 == &amp;2;               // Compilation Error\n    &amp;1 == &amp;&amp;2;             // Compilation Error\n}\n</code></pre>\n\n<p>According to this result, for type <code>T</code> implementing <code>PartialEq</code>, it seems that</p>\n\n<ol>\n<li>References of <code>T</code>s, references of references of <code>T</code>s, ... are comparable.</li>\n<li>Shared and mutable references can be mixed.</li>\n<li>The amount of references for both sides of <code>==</code> must be the same.</li>\n</ol>\n\n<p>Where do these rules come from? Rule 1 and 2 can be derived from <a href=\"https://doc.rust-lang.org/reference/expressions/operator-expr.html#comparison-operators\" rel=\"nofollow noreferrer\">the semantics of comparison operators</a> and deref coercion. Consider <code>&amp;1 == &amp;mut 2</code>:</p>\n\n<ol>\n<li>The expression is interpreted as <code>PartialEq::eq(&amp;&amp;1, &amp;(&amp;mut 2))</code> by the compiler.</li>\n<li>The first argument <code>&amp;&amp;1</code> turns into <code>&amp;1</code> by deref coercion because <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#implementors\" rel=\"nofollow noreferrer\"><code>&amp;T</code> implements <code>Deref&lt;Target = T&gt;</code></a>.</li>\n<li>The second argument <code>&amp;(&amp;mut 2)</code> turns into <code>&amp;2</code> by deref coercion because <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#implementors\" rel=\"nofollow noreferrer\"><code>&amp;mut T</code> implements <code>Deref&lt;Target = T&gt;</code></a>.</li>\n<li>Now the types of both arguments match the signature of <code>PartialEq::eq</code> implemented by <code>i32</code>. So <code>PartialEq::&lt;i32&gt;::eq(&amp;1, &amp;2)</code> is evaluated.</li>\n</ol>\n\n<p>However, I don't understand where Rule 3 comes from. I think <code>PartialEq::eq(&amp;1, &amp;&amp;2)</code> is coerced to <code>PartialEq::eq(&amp;1, &amp;2)</code> because deref coercion is applied to the both arguments independently.</p>\n\n<p>What is the rationale of Rule 3? Please show documented semantics of Rust or the appropriate code in the compiler?</p>\n"}, {"tags": ["string", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1530685660, "post_id": 51166835, "comment_id": 89317251, "body": "Hi! Could you please explain what part of the error message you don&#39;t understand? What puzzles you about that? Thanks!"}, {"owner": {"reputation": 1739, "user_id": 1788771, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/66738ae415551775371fa9ed5516750b?s=128&d=identicon&r=PG", "display_name": "kaan_a", "link": "https://stackoverflow.com/users/1788771/kaan-a"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1530686592, "post_id": 51166835, "comment_id": 89317709, "body": "@LukasKalbertodt It&#39;s not that I don&#39;t understand the error. Apparently to_lowercase() returns a new String because a unicode string with flipped case might have a different length than the original. This new string must be deallocated at the end of the function. However the return value uses a slice of this new String, which is what is causing the error. What I don&#39;t understand is how to fix it."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530687088, "post_id": 51166835, "comment_id": 89317943, "body": "Why <code>&amp;&#39;a str</code> for <code>contents2</code>?"}, {"owner": {"reputation": 1739, "user_id": 1788771, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/66738ae415551775371fa9ed5516750b?s=128&d=identicon&r=PG", "display_name": "kaan_a", "link": "https://stackoverflow.com/users/1788771/kaan-a"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530687377, "post_id": 51166835, "comment_id": 89318096, "body": "@ljedrz same reason i even have a contents2, I was trying stuff more or less randomly hoping to make the error disappear. Adding the lifetime parameter was one of those. Removing it doesn&#39;t really change the error. Only changing it to &#39;b changes the error. But what I need to do is figure out a way to make the string outlive the function (i don&#39;t know force a borrow) or refactor so this isn&#39;t an issue anymore but I&#39;m a bit lost"}, {"owner": {"reputation": 1739, "user_id": 1788771, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/66738ae415551775371fa9ed5516750b?s=128&d=identicon&r=PG", "display_name": "kaan_a", "link": "https://stackoverflow.com/users/1788771/kaan-a"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530769541, "post_id": 51166835, "comment_id": 89349940, "body": "@Shepmaster I have edited the question to add minimal, complete code. You can verify that it does produce the same error. It also compiles and works as expected if you replace the return types of the functions with Vec&lt;String&gt; and push String::from(line) into the vector instead of just line. I guess this was sort of the solution I was looking for though perhaps there is a better way. In this example one might argue as Simon Whitehead has that the functionality is not the same and both functions should have a loop, but I was hoping for a silver bullet of sorts. Perhaps I&#39;m too optimistic"}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 1, "last_activity_date": 1530687565, "creation_date": 1530687565, "answer_id": 51167592, "question_id": 51166835, "link": "https://stackoverflow.com/questions/51166835/how-do-i-pass-modified-string-parameters/51167592#51167592", "title": "How do I pass modified string parameters?", "body": "<p>You have introduced an impossible constraint on the lifetime of variable <code>contents2</code>; by writing <code>&amp;'a</code> you are attempting to assign to it the same lifetime as to the <code>contents</code> argument, but it is created and destroyed within the scope of <code>search_case_insensitive</code> and thus is outlived by <code>contents</code>.</p>\n\n<p>In order for <code>contents2</code> to outlive the body of <code>search_case_insensitive</code> you would need to either return it as a <code>String</code> and assign to some variable outside of it or pass it to <code>search_case_insensitive</code> by reference as long as it already exists as a <code>String</code> elsewhere.</p>\n\n<p>Citing <a href=\"https://doc.rust-lang.org/1.26.0/book/first-edition/lifetimes.html\" rel=\"nofollow noreferrer\">The Book</a>:</p>\n\n<blockquote>\n  <p>It's important to understand that <strong>lifetime annotations are\n  descriptive, not prescriptive</strong>. This means that how long a reference is\n  valid is determined by the code, not by the annotations.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530717804, "post_id": 51167728, "comment_id": 89336469, "body": "Lower-casing the query yields a very different answer though; I don&#39;t see how it solves the OP issue."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530746585, "post_id": 51167728, "comment_id": 89345698, "body": "@MatthieuM. I checked the book examples - the book actually lowercases the query so the OP is headed in the wrong direction anyway. They&#39;ve introduced a bug which isn&#39;t present in the book because they&#39;ve done something completely different. Instead of helping with the error I&#39;ve attempted to point them in the right direction given what they&#39;re doing isn&#39;t an issue if following the examples correctly. Either way though, I think the &quot;logic de-duplication&quot; isn&#39;t an achievable goal given the two core lines of the logic are required to be different. This is what I&#39;m trying to point out at the end."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1530747382, "post_id": 51167728, "comment_id": 89345872, "body": "I&#39;ve added an example of what I might do in this situation... but it strays away from the examples you&#39;re following in the book. I based the top half of my answer on what you&#39;re doing in wrong whilst following the book."}, {"owner": {"reputation": 1739, "user_id": 1788771, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/66738ae415551775371fa9ed5516750b?s=128&d=identicon&r=PG", "display_name": "kaan_a", "link": "https://stackoverflow.com/users/1788771/kaan-a"}, "edited": false, "score": 0, "creation_date": 1530768185, "post_id": 51167728, "comment_id": 89349454, "body": "I understand that the behavior of the the function would differ from the book in that the returned strings would all be lowercase. I&#39;m not really interested in rewriting grep or duplicating the functionality in the book exactly. But I have often written code where one of two functions with identical signatures calls the other after a short prelude and I thought others might have similar issues with functions returning string references. The answer I hoped to get is something along the lines of, &#39;change the return values of both functions to Vec&lt;String&gt;&#39; or something better that I can&#39;t imagine"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 1739, "user_id": 1788771, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/66738ae415551775371fa9ed5516750b?s=128&d=identicon&r=PG", "display_name": "kaan_a", "link": "https://stackoverflow.com/users/1788771/kaan-a"}, "edited": false, "score": 0, "creation_date": 1530768843, "post_id": 51167728, "comment_id": 89349670, "body": "@Kaan I was just trying to keep it as close to the source material as possible. Even though I think my solution is acceptable in honesty I would&#39;ve just used <code>String</code> instances everywhere here and refactored it into references where appropriate later on. Rust programmers generally try to avoid allocations where possible so you&#39;ll see references used a lot - but I personally would&#39;ve reached directly for <code>String</code> instances and refactored later. I hope my solution helps you anyway."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 1739, "user_id": 1788771, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/66738ae415551775371fa9ed5516750b?s=128&d=identicon&r=PG", "display_name": "kaan_a", "link": "https://stackoverflow.com/users/1788771/kaan-a"}, "edited": false, "score": 0, "creation_date": 1530769710, "post_id": 51167728, "comment_id": 89350010, "body": "@Kaan I have updated my answer to use <code>String</code> instances. Obviously this will allocate more than the original answer but at least its another alternative for you."}, {"owner": {"reputation": 1739, "user_id": 1788771, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/66738ae415551775371fa9ed5516750b?s=128&d=identicon&r=PG", "display_name": "kaan_a", "link": "https://stackoverflow.com/users/1788771/kaan-a"}, "edited": false, "score": 0, "creation_date": 1530770386, "post_id": 51167728, "comment_id": 89350268, "body": "@SimonWhitehead I&#39;m accepting your answer. I think probably the correct way to do this is to duplicate part of the functionality and continue returning &amp;str vectors as in the book and your original answer. Since you&#39;ve added the string return type as well, unless someone else comes up with something genius I think this is as good as it&#39;s going to get. I was kind of hoping someone would be able to tell me how to do it with the call to search like I wanted while still returning &lt;&amp;str&gt; but maybe that&#39;s just wanting to have your cake and eat it too."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 1739, "user_id": 1788771, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/66738ae415551775371fa9ed5516750b?s=128&d=identicon&r=PG", "display_name": "kaan_a", "link": "https://stackoverflow.com/users/1788771/kaan-a"}, "edited": false, "score": 0, "creation_date": 1530770474, "post_id": 51167728, "comment_id": 89350306, "body": "@Kaan My original edit does still use string references... it however introduces a <code>SearchOptions</code> enum and duplicates 1 of the lines (the <code>contains</code> call is duplicated). I think that&#39;s as close as you&#39;ll get to what you want using references. Glad I could help ayway."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 1, "last_activity_date": 1530769684, "last_edit_date": 1592644375, "creation_date": 1530688070, "answer_id": 51167728, "question_id": 51166835, "link": "https://stackoverflow.com/questions/51166835/how-do-i-pass-modified-string-parameters/51167728#51167728", "title": "How do I pass modified string parameters?", "body": "<h3>EDIT 2:</h3>\n<p>Since you've updated the question with an MCVE and you've stated you don't care about straying away from the book examples... here is another version relying on extra allocations via the use of <code>String</code>:</p>\n<pre><code>fn main() {\n    let a = search(&quot;Waldo&quot;, &quot;where in\\nthe world\\nis Waldo?&quot;);\n    let b = search(&quot;waldo&quot;, &quot;where in\\nthe world\\nis Waldo?&quot;);\n    let c = search_case_insensitive(&quot;waldo&quot;, &quot;where in\\nthe world\\nis Waldo?&quot;);\n\n    println!(&quot;{:?}&quot;, a);\n    println!(&quot;{:?}&quot;, b);\n    println!(&quot;{:?}&quot;, c);\n}\n\npub fn search&lt;S&gt;(query: S, contents: S) -&gt; Vec&lt;String&gt; where S: Into&lt;String&gt; {\n    let query = query.into();\n    let mut results = Vec::new();\n\n    for line in contents.into().lines() {\n        if line.contains(&amp;query) {\n            results.push(line.into());\n        }\n    }\n\n    results\n\n}\n\npub fn search_case_insensitive&lt;S&gt;(query: S, contents: S) -&gt; Vec&lt;String&gt; where S: Into&lt;String&gt; {\n    let query = query.into().to_lowercase();\n    let contents = contents.into().to_lowercase();\n\n    search(query, contents)\n}\n</code></pre>\n<p>Here it is <a href=\"https://play.rust-lang.org/?gist=44ce6c2f9546576af29cf09806cc0dc7&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">running in the Playground</a></p>\n<h3>EDIT:</h3>\n<p>I realised I never really gave you an alternative. Here's what I would probably do:</p>\n<pre><code>pub enum SearchOptions {\n    CaseSensitive,\n    CaseInsensitive\n}\n\npub fn search&lt;'a&gt;(query: &amp;str, contents: &amp;'a str, options: SearchOptions) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut results = Vec::new();\n\n    for line in contents.lines() {\n        let check = match options {\n            SearchOptions::CaseSensitive =&gt; line.contains(query),   \n            SearchOptions::CaseInsensitive =&gt; line.to_lowercase().contains(&amp;query.to_lowercase()),   \n        };\n    \n        if check {\n            results.push(line);\n        }\n    }\n\n    results\n}\n</code></pre>\n<p>This is about as far as you could get &quot;de-dupe&quot;'ing it.</p>\n<h3>Original answer:</h3>\n<p>The actual problem is that you're trying to pass the <code>contents</code> around when its bound to the lifetime <code>'a</code> ... but what you really want to be &quot;case insensitive&quot; is the <code>query</code>.</p>\n<p>This isn't bound to the lifetime <code>'a</code> in quite the same way and as such ... works:</p>\n<pre><code>pub fn search_case_insensitive&lt;'a&gt;(query: &amp;str, contents: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n    let query = query.to_lowercase();\n    search(&amp;query, contents)\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?gist=03f77a892b765a921500e78b2fb58967&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Here it is on the playground</a></p>\n<p>You'll need to still duplicate the logic though ... because you need to match the lowercase query with the lowercase line ... which is demonstrated in the examples in the book:</p>\n<pre><code>if line.to_lowercase().contains(&amp;query) {\n//      ^^^^^^^^^^^^^^ each LINE is converted to lowercase here in the insensitive search\n    results.push(line);\n}\n</code></pre>\n<p>&quot;How do I stop duplicating the logic?&quot; - well they're not quite the same in the first place. I think your attempt wasn't quite what you were after in the first place (happy to be corrected though).</p>\n"}], "owner": {"reputation": 1739, "user_id": 1788771, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/66738ae415551775371fa9ed5516750b?s=128&d=identicon&r=PG", "display_name": "kaan_a", "link": "https://stackoverflow.com/users/1788771/kaan-a"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 51167728, "answer_count": 2, "score": 2, "last_activity_date": 1530793125, "creation_date": 1530684631, "last_edit_date": 1530793125, "question_id": 51166835, "link": "https://stackoverflow.com/questions/51166835/how-do-i-pass-modified-string-parameters", "title": "How do I pass modified string parameters?", "body": "<p>I'm on <a href=\"https://doc.rust-lang.org/book/second-edition/ch12-04-testing-the-librarys-functionality.html\" rel=\"nofollow noreferrer\">chapter 12 of <em>The Rust Programming Language</em></a>, where a case insensitive line search is implemented. It doesn't make sense to me to implement the same logic twice, so I figured if I just called  the case sensitive search function with the parameters converted to lower case, that might work. It did not. </p>\n\n<p>This is my non working code:</p>\n\n<pre><code>fn main() {\n    let a = search(\"Waldo\", \"where in\\nthe world\\nis Waldo?\");\n    let b = search(\"waldo\", \"where in\\nthe world\\nis Waldo?\");\n    let c = search_case_insensitive(\"waldo\", \"where in\\nthe world\\nis Waldo?\");\n\n    println!(\"{:?}\", a);\n    println!(\"{:?}\", b);\n    println!(\"{:?}\", c);\n}\n\npub fn search&lt;'a&gt;(query: &amp;str, contents: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut results = Vec::new();\n\n    for line in contents.lines() {\n        if line.contains(query) {\n            results.push(line);\n        }\n    }\n\n    results\n}\n\npub fn search_case_insensitive&lt;'a&gt;(query: &amp;str, contents: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n    let query = query.to_lowercase();\n    let contents2: &amp;str = &amp;contents.to_lowercase();\n\n    search(&amp;query, contents2)\n}\n</code></pre>\n\n<p>The error in most versions I've come up with is inevitably something very much like: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:25:28\n   |\n25 |     let contents2: &amp;str = &amp;contents.to_lowercase();\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n...\n28 | }\n   | - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 23:1...\n  --&gt; src/main.rs:23:1\n   |\n23 | pub fn search_case_insensitive&lt;'a&gt;(query: &amp;str, contents: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 133677, "user_id": 44389, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/eed60bdfc964ec62cc48aa6020a03d7b?s=128&d=identicon&r=PG", "display_name": "Noldorin", "link": "https://stackoverflow.com/users/44389/noldorin"}, "is_accepted": true, "score": 1, "last_activity_date": 1530673308, "last_edit_date": 1530673308, "creation_date": 1530672370, "answer_id": 51165111, "question_id": 51165043, "link": "https://stackoverflow.com/questions/51165043/how-to-end-borrow-when-an-option-is-none/51165111#51165111", "title": "How to end borrow when an Option is None", "body": "<p>This is a common problem due to the way lifetimes currently work in (stable) Rust. The standard solution would look something like this in your case:</p>\n\n<pre><code>fn at(&amp;mut self, i: usize) -&gt; Option&lt;&amp;T&gt; {\n    if let Some(x) = self.vector.get(i) {\n        return Some(x);\n    }\n    // mutate self.vector\n    self.at(i)\n}\n</code></pre>\n\n<p>As you can probably see, the immutable borrow of <code>self.vector</code> only lasts as long as the <em>if</em> block, so a mutable borrow on it is possible as soon as it ends.</p>\n\n<p>That said, Rust nightly has a work-around for this issue, if you want to enable the unstable <a href=\"https://github.com/rust-lang/rust/issues/43234\" rel=\"nofollow noreferrer\">non-lexical lifetimes</a> feature. Your existing code should work fine if you just include the line <code>#![feature(nll)]</code> at the top of your crate.</p>\n"}], "owner": {"reputation": 10499, "user_id": 8611, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/3ab4d3a66e470ce10eb7ec812fab3c46?s=128&d=identicon&r=PG", "display_name": "singpolyma", "link": "https://stackoverflow.com/users/8611/singpolyma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 0, "closed_date": 1530678608, "accepted_answer_id": 51165111, "answer_count": 1, "score": 1, "last_activity_date": 1530678662, "creation_date": 1530671734, "last_edit_date": 1530678443, "question_id": 51165043, "link": "https://stackoverflow.com/questions/51165043/how-to-end-borrow-when-an-option-is-none", "closed_reason": "Duplicate", "title": "How to end borrow when an Option is None", "body": "<p>The following code will fail the borrow checker:</p>\n\n<pre><code>fn at(&amp;mut self, i: usize) -&gt; Option&lt;&amp;T&gt; {\n    match self.vector.get(i) {\n        Some(x) =&gt; Some(x),\n        None =&gt; {\n            self.mutate_vector_to_have_more_stuff();\n            self.at(i)\n        }\n    }\n}\n</code></pre>\n\n<p>I can see why: <code>self.vector</code> is still borrowed lexically through to the end, so I cannot borrow <code>self</code> again.</p>\n\n<p>What is the right way to structure my scopes?  The borrow persists into the match because I actually use it in the <code>Some(x)</code> branch, but in the <code>None</code> branch I no longer use the borrowed value, because there was no value to borrow to begin with.</p>\n\n<p>I have a rewritten version that works for this specific case:</p>\n\n<pre><code>if i &gt;= self.vector.len() {\n    self.mutate_vector_to_have_more_stuff();\n    self.at(i)\n} else {\n    self.vector.get(i)\n}\n</code></pre>\n\n<p>This works because using <code>len</code> means that I witness the \"nothing to borrow\" before even trying to borrow anything, and then only borrow in the nested scope.  I'm concerned that this wouldn't work in every case where I have an <code>Option</code>, though, there may not be a boolean-only variant of every <code>Option</code>-returning API. </p>\n\n<p>Is there a way to restructure this code to work but still using the <code>get</code> call as the main way to know if there is a value or not?</p>\n"}, {"tags": ["memory", "rust", "borrow-checker", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "edited": false, "score": 0, "creation_date": 1530655591, "post_id": 51163360, "comment_id": 89310034, "body": "If I do that, I get a different error since <code>d.sensorId</code> is now a different type to <code>opts.sensorId.as_ref().unwrap()</code>."}, {"owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "reply_to_user": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "edited": false, "score": 0, "creation_date": 1530655611, "post_id": 51163360, "comment_id": 89310042, "body": "That&#39;s what I get for not testing sample code. We can just write <code>&amp;d.sensorId</code> then. I will edit the answer."}, {"owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "edited": false, "score": 0, "creation_date": 1530655684, "post_id": 51163360, "comment_id": 89310072, "body": "Ok, that works now, thanks."}, {"owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "edited": false, "score": 0, "creation_date": 1530655752, "post_id": 51163360, "comment_id": 89310085, "body": "Surely the <code>map_or</code> conditional should be <code>!=</code> rather than <code>==</code>?"}, {"owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "reply_to_user": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "edited": false, "score": 0, "creation_date": 1530655874, "post_id": 51163360, "comment_id": 89310123, "body": "Yes, that&#39;s what it is."}, {"owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "edited": false, "score": 0, "creation_date": 1530655935, "post_id": 51163360, "comment_id": 89310137, "body": "Ah, must have misread, nvm."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1530658117, "post_id": 51163360, "comment_id": 89310673, "body": "I&#39;d write <code>*id != d.sensorid</code>. It results in the same (to compare references, you have to compare the pointers), but it&#39;s more intuitive. Or even better write <code>|&amp;id| id != d.sensorId)</code>"}, {"owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "edited": false, "score": 0, "creation_date": 1530830716, "post_id": 51163360, "comment_id": 89383225, "body": "<code>*id != d.sensorId</code> works, but you can&#39;t do <code>|&amp;id| id != d.sensorId</code> here -- that attempts to move out from the reference, defeating of purpose of using <code>as_ref</code>."}], "tags": [], "owner": {"reputation": 1295, "user_id": 1114328, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d211889b453feb9210d9645cbcfd524e?s=128&d=identicon&r=PG", "display_name": "durka42", "link": "https://stackoverflow.com/users/1114328/durka42"}, "is_accepted": true, "score": 1, "last_activity_date": 1530655637, "last_edit_date": 1530655637, "creation_date": 1530655408, "answer_id": 51163360, "question_id": 51163284, "link": "https://stackoverflow.com/questions/51163284/cannot-move-out-of-borrowed-content-with-optional-members-passed-as-argument/51163360#51163360", "title": "Cannot move out of borrowed content with optional members passed as argument", "body": "<p>The key is that since you only have a reference to the <code>SearchOpts</code> struct in your function, you can't move out of it.</p>\n\n<p>Looking at the <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap\" rel=\"nofollow noreferrer\">definition of <code>Option::unwrap</code></a>:</p>\n\n<pre><code>pub fn unwrap(self) -&gt; T\n</code></pre>\n\n<p>It takes the <code>Option</code> argument by value, so it would move out of the struct. No good! The key to fixing this is <code>Option::as_ref</code>:</p>\n\n<pre><code>pub fn as_ref(&amp;self) -&gt; Option&lt;&amp;T&gt;\n</code></pre>\n\n<p>As the signature implies, it transforms <code>&amp;Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>. This latter type can be unwrapped (resulting in <code>&amp;T</code>) without moving anything. So you can write:</p>\n\n<pre><code>if opts.sensorId.is_some() &amp;&amp; &amp;d.sensorId != opts.sensorId.as_ref().unwrap() {\n     return false;\n}\n</code></pre>\n\n<p>However, I would write it like this:</p>\n\n<pre><code>if opts.sensorId.as_ref().map_or(false, |id| id != &amp;d.sensorId) {\n    return false;\n}\n</code></pre>\n"}], "owner": {"reputation": 6293, "user_id": 907981, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/kOThB.jpg?s=128&g=1", "display_name": "GTF", "link": "https://stackoverflow.com/users/907981/gtf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 423, "favorite_count": 0, "closed_date": 1530667074, "accepted_answer_id": 51163360, "answer_count": 1, "score": 1, "last_activity_date": 1530667087, "creation_date": 1530654887, "last_edit_date": 1530667050, "question_id": 51163284, "link": "https://stackoverflow.com/questions/51163284/cannot-move-out-of-borrowed-content-with-optional-members-passed-as-argument", "closed_reason": "Duplicate", "title": "Cannot move out of borrowed content with optional members passed as argument", "body": "<p>I have a <code>find</code> function defined on a basic in-memory storage solution. I'm trying to find a way to flexibly pass conditional search options by creating a <code>struct</code> called <code>SearchOpts</code>:</p>\n\n<pre><code>trait HasRecords {\n    fn find(&amp;self, opts: &amp;SearchOpts) -&gt; ();\n}\n\npub struct SearchOpts {\n    sensorId: Option&lt;String&gt;,\n}\n\nstruct MemDb {\n    id: u32,\n}\n\nimpl HasRecords for MemDb {\n    fn find(&amp;self, opts: &amp;SearchOpts) -&gt; () {\n        println!(\"Hello {}\", opts.sensorId.unwrap());\n    }\n}\n\nfn main() {\n    let _x = MemDb { id: 42 };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d3bcd340fafa93900ab30aeafffcb455&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:15:30\n   |\n15 |         println!(\"Hello {}\", opts.sensorId.unwrap());\n   |                              ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I don't know if this is the best way to implement this sort of functionality, but I also don't understand how to please the borrow checker in this instance (which is the thing I'd like to learn first).</p>\n"}, {"tags": ["generics", "types", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530651766, "post_id": 51162337, "comment_id": 89308829, "body": "Applying the duplicate to your case: <code>fn stuff&lt;T&gt;(arg: T) -&gt; T where     T: Div&lt;i32&gt;,     T::Output: Rem&lt;i32, Output = T&gt;,</code>"}], "owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 28, "favorite_count": 0, "closed_date": 1530651470, "answer_count": 0, "score": 1, "last_activity_date": 1530651537, "creation_date": 1530649366, "last_edit_date": 1530651537, "question_id": 51162337, "link": "https://stackoverflow.com/questions/51162337/require-that-generic-type-overload-operators-and-result-of-operation-also-overlo", "closed_reason": "Duplicate", "title": "Require that generic type overload operators and result of operation also overload operators", "body": "<p>I am trying to implement a kind of <code>HashSet</code> that can store which hashes have been encountered (without associating a value).</p>\n\n<p>I'm having trouble with this:</p>\n\n<ul>\n<li>I want the structure to be generic over types that implement <code>Div</code>, <code>Rem</code> and <code>Eq</code> (int-like).</li>\n<li>For it to work, I need the output of <code>Div</code> and <code>Rem</code> to also implement <code>Div</code>, <code>Rem</code> and <code>Eq</code> (I think). I'm willing to disqualify types that don't meet this criteria.</li>\n<li>The types also need to interact with an integer constant that I can't get to be of a dynamic type.</li>\n</ul>\n\n<p>I've tried to reduce it to a minimal example (<a href=\"https://play.rust-lang.org/?gist=a5b8f0e8cefe1723c75174a92582bfc4&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>use std::ops::{ Rem, Div };\n\nconst X: i32 = 16;\n\npub trait Int: Rem + Div + Eq + Sized {}\n\nimpl Int for i32 {}\nimpl Int for usize {}\n// also other int types\n\npub fn stuff&lt;T: Int&gt;(arg: T) -&gt; T {\n    (arg / X) % X\n}\n</code></pre>\n\n<p>(I also have a more elaborate <a href=\"https://play.rust-lang.org/?gist=9cc2440ae44e142f6ccde4c35d21c992&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a> to show what I tried).</p>\n\n<p>But while I understand the errors I get, I don't know how to resolve them:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; main.rs:13:12\n   |\n13 |     (arg / BINS) % BINS\n   |            ^^^^ expected type parameter, found i32\n   |\n   = note: expected type `T`\n              found type `i32`\n\nerror[E0369]: binary operation `%` cannot be applied to type `&lt;T as std::ops::Div&gt;::Output`\n  --&gt; main.rs:13:5\n   |\n13 |     (arg / BINS) % BINS\n   |     ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: an implementation of `std::ops::Rem` might be missing for `&lt;T as std::ops::Div&gt;::Output`\n</code></pre>\n\n<p>Nightly features are fine.</p>\n"}, {"tags": ["macos", "rust", "rust-cargo", "nix"], "answers": [{"comments": [{"owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "edited": false, "score": 0, "creation_date": 1567021808, "post_id": 51161923, "comment_id": 101842239, "body": "I actually have the same issue, but I can&#39;t run <code>nix-env -i nixpkgs.drawin.apple_sdk.frameworks</code> as neither darwin, apple_sdk, nor frameworks appear to exist. Is there a step you have to do to get them to show up, or are they tied to your OS X version?"}, {"owner": {"reputation": 2207, "user_id": 575152, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5e0170ce985a52a6af02b95baa38e1ae?s=128&d=identicon&r=PG", "display_name": "Savanni D&#39;Gerinel", "link": "https://stackoverflow.com/users/575152/savanni-dgerinel"}, "reply_to_user": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "edited": false, "score": 0, "creation_date": 1571315269, "post_id": 51161923, "comment_id": 103205717, "body": "I find nix-env to be particularly tricky when it comes to actually finding packages. But as you would be installing by path instead of by name, it would need to be something more like <code>nix-env -i -A nixpkgs.darwin.apple_sdk.frameworks...</code>. And you would need to specify the framework, not the entire frameworks attribute."}, {"owner": {"reputation": 3142, "user_id": 274699, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/9d8f33ae6e2c041f65172a58f8b83279?s=128&d=identicon&r=PG", "display_name": "Dan", "link": "https://stackoverflow.com/users/274699/dan"}, "edited": false, "score": 0, "creation_date": 1581096577, "post_id": 51161923, "comment_id": 106328482, "body": "you could also install <code>nixpkgs.darwin.apple_sdk</code> which gives you the entire SDK with all the frameworks"}], "tags": [], "owner": {"reputation": 2207, "user_id": 575152, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5e0170ce985a52a6af02b95baa38e1ae?s=128&d=identicon&r=PG", "display_name": "Savanni D&#39;Gerinel", "link": "https://stackoverflow.com/users/575152/savanni-dgerinel"}, "is_accepted": true, "score": 10, "last_activity_date": 1530647252, "creation_date": 1530647252, "answer_id": 51161923, "question_id": 51161225, "link": "https://stackoverflow.com/questions/51161225/how-can-i-make-macos-frameworks-available-to-clang-in-a-nix-environment/51161923#51161923", "title": "How can I make macOS frameworks available to clang in a Nix environment?", "body": "<p>Apparently Nix both provides packages for standard Apple frameworks <em>and</em> sandboxes the environment enough that standard frameworks are unavailable.</p>\n\n<p>Most of what I discovered for this solution came from <a href=\"https://github.com/NixOS/nixpkgs/issues/9809\" rel=\"noreferrer\">Use proper SDK and command-line tools on OS X 10.11</a> and then from examining <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/misc/vim-plugins/default.nix\" rel=\"noreferrer\">vim-plugins nix derivation</a>.</p>\n\n<p>First step is to actually install the frameworks that my project needs. They all live in <code>nixpkgs.darwin.apple_sdk.frameworks</code>.</p>\n\n<p>Doing that gets most of the link working, but then <code>_CFURLResourceIsReachable</code> is an undefined symbol on my platform. I solve that with an updated <code>NIX_LDFLAGS</code> variable (as suggested in the vim-plugins nix derivation). The end result for my project is this <code>shell.nix</code> file:</p>\n\n<pre><code>let\n    pkgs = import &lt;stable&gt; {};\n    frameworks = pkgs.darwin.apple_sdk.frameworks;\nin pkgs.stdenv.mkDerivation {\n    name = \"orizentic\";\n\n    buildInputs = [ pkgs.rustc\n                    pkgs.cargo\n                    frameworks.Security\n                    frameworks.CoreFoundation\n                    frameworks.CoreServices\n                  ];\n\n    shellHook = ''\n        export PS1=\"[$name] \\[$txtgrn\\]\\u@\\h\\[$txtwht\\]:\\[$bldpur\\]\\w \\[$txtcyn\\]\\$git_branch\\[$txtred\\]\\$git_dirty \\[$bldylw\\]\\$aws_env\\[$txtrst\\]\\$ \"\n        export NIX_LDFLAGS=\"-F${frameworks.CoreFoundation}/Library/Frameworks -framework CoreFoundation $NIX_LDFLAGS\";\n    '';\n}\n</code></pre>\n\n<p>This gives me the <code>cargo-watch</code> package (which depends on <code>CoreServices</code> and <code>CoreFoundation</code>). It also apparently resolves the dependency <code>jsonwebtoken</code> has on <code>Security</code> though I have not managed to validate that yet.</p>\n"}], "owner": {"reputation": 2207, "user_id": 575152, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/5e0170ce985a52a6af02b95baa38e1ae?s=128&d=identicon&r=PG", "display_name": "Savanni D&#39;Gerinel", "link": "https://stackoverflow.com/users/575152/savanni-dgerinel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1540, "favorite_count": 2, "accepted_answer_id": 51161923, "answer_count": 1, "score": 8, "last_activity_date": 1530647252, "creation_date": 1530643824, "last_edit_date": 1530645617, "question_id": 51161225, "link": "https://stackoverflow.com/questions/51161225/how-can-i-make-macos-frameworks-available-to-clang-in-a-nix-environment", "title": "How can I make macOS frameworks available to clang in a Nix environment?", "body": "<p>I'm on macOS 10.13.5, learning to program Rust, and I use Nix to control my development environment.</p>\n\n<p>Some actions, such as including the <code>jsonwebtoken</code> library or installing the  <code>cargo-watch</code> module, cause a build that requires a macOS framework that appears to not be installed. I get this error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  = note: ld: framework not found CoreServices\n          clang-5.0: error: linker command failed with exit code 1 (use -v to see invocation)\n\nerror: aborting due to previous error\n\nerror: failed to compile `cargo-watch v6.0.0`, intermediate artifacts can be found at `/var/folders/13/84dj8yr54_1c_pn0s8n7444h0000gn/T/cargo-install.lYPZaEduUBdu`\n\nCaused by:\n  Could not compile `cargo-watch`.\n</code></pre>\n\n<p>This is an abbreviated version of the clang command that fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `/nix/store/9j864incgjx7kqggbpisdi3nmssy4qm5-clang-wrapper-5.0.2/bin/cc` failed: exit code: 1\n  |\n  = note: \"/nix/store/9j864incgjx7kqggbpisdi3nmssy4qm5-clang-wrapper-5.0.2/bin/cc\" \"-m64\" \"-L\" ... \"/nix/store/rfp87664xzhl6zv7dx5c1hixasqfxkp4-rustc-1.24.0/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-ba331b20e371c580.rlib\" \"-framework\" \"CoreServices\" \"-framework\" \"CoreServices\" \"-l\" \"System\" \"-l\" \"resolv\" \"-l\" \"pthread\" \"-l\" \"c\" \"-l\" \"m\"\n</code></pre>\n\n<p>The only thing that I have found to try was to add frameworks to my PATH, but either that answer is wrong or the PATH environment variable isn't able to go through cargo all the way to where I'm doing the build in question.</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/16387484/clangllvm-compile-with-frameworks\">Clang(LLVM) compile with frameworks</a></li>\n<li><p><a href=\"https://discussions.apple.com/thread/3754858\" rel=\"noreferrer\">How to specify framework in clang? - Apple Community</a></p></li>\n<li><p>Rust: 1.24.0</p></li>\n<li>Cargo: 0.25.0</li>\n<li>jsonwebtoken: 0.4.0</li>\n<li>cargo-watch: default version from <code>cargo install cargo-watch</code></li>\n</ul>\n\n<p>How do I tell clang where to look for the frameworks? Does it involve a change to my working environment, or do I need to be looking into changing the build process for the crates that I want to install?</p>\n\n<h1>More information</h1>\n\n<p>I discovered the <code>clang -Xlinker -v</code> command, and the output is quite interesting:</p>\n\n<pre><code>@(#)PROGRAM:ld  PROJECT:ld64-274.2\nconfigured to support archs: armv6 armv7 armv7s arm64 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em (tvOS)\nLibrary search paths:\n    /nix/store/ql6xbmdplca4sjpk0pz647p7djzri03c-libc++-5.0.2/lib\n    /nix/store/rfp87664xzhl6zv7dx5c1hixasqfxkp4-rustc-1.24.0/lib\n    /nix/store/ql6xbmdplca4sjpk0pz647p7djzri03c-libc++-5.0.2/lib\n    /nix/store/rfp87664xzhl6zv7dx5c1hixasqfxkp4-rustc-1.24.0/lib\n    /nix/store/8ykfqv6jx9jvfhnc4cdygdzg0piy8253-Libsystem-osx-10.11.6/lib\n    /nix/store/4papfih2r9xlsl9m7hlisparij8k9zaq-clang-5.0.2-lib/lib\nFramework search paths:\n    /nix/store/hc6d711vwlwnn9swmkdpi9nbswbqg6h0-CF-osx-10.10.5/Library/Frameworks\n    /nix/store/hc6d711vwlwnn9swmkdpi9nbswbqg6h0-CF-osx-10.10.5/Library/Frameworks\nUndefined symbols for architecture x86_64:\n  \"_main\", referenced from:\n     implicit entry/start for main executable\nld: symbol(s) not found for architecture x86_64\nclang-5.0: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n\n<p>This seems to point to things missing from my Nix shell and not the operating system or even <code>clang</code> itself.</p>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1530627873, "post_id": 51156992, "comment_id": 89297351, "body": "This may answer the question, but would be more helpful with <a href=\"//meta.stackexchange.com/a/7693/206345\">evidence</a> to support it."}, {"owner": {"reputation": 1183, "user_id": 1816631, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29ced07f3e8c91fca396d867bda0b7da?s=128&d=identicon&r=PG", "display_name": "Gorm Casper", "link": "https://stackoverflow.com/users/1816631/gorm-casper"}, "edited": false, "score": 0, "creation_date": 1530628211, "post_id": 51156992, "comment_id": 89297598, "body": "I am reading through it, and it seems like it is indeed the answer, and I <i>almost</i> understand the example there. I just don&#39;t get how it&#39;s supposed to access the <code>req</code> parameter (like in my example above) when it only gets a <code>Form</code>"}, {"owner": {"reputation": 1183, "user_id": 1816631, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29ced07f3e8c91fca396d867bda0b7da?s=128&d=identicon&r=PG", "display_name": "Gorm Casper", "link": "https://stackoverflow.com/users/1816631/gorm-casper"}, "edited": false, "score": 0, "creation_date": 1530691542, "post_id": 51156992, "comment_id": 89320245, "body": "I give up for now and work on something else until <a href=\"https://github.com/actix/examples/issues/24\" rel=\"nofollow noreferrer\">github.com/actix/examples/issues/24</a> is resolved"}], "tags": [], "owner": {"reputation": 154, "user_id": 7526741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e7fc59fd903158f3127f1384139cf0?s=128&d=identicon&r=PG", "display_name": "Nikolay Kim", "link": "https://stackoverflow.com/users/7526741/nikolay-kim"}, "is_accepted": false, "score": 1, "last_activity_date": 1530627764, "creation_date": 1530627764, "answer_id": 51156992, "question_id": 51156656, "link": "https://stackoverflow.com/questions/51156656/how-do-i-get-the-parameters-from-a-post-request-from-a-html-form-in-actix-web/51156992#51156992", "title": "How do I get the parameters from a POST request from a HTML form in Actix-web?", "body": "<p>You need <a href=\"https://actix.rs/actix-web/actix_web/struct.Form.html\" rel=\"nofollow noreferrer\">Form</a> extractor.\n<code>params: Form&lt;LoginParams&gt;</code></p>\n"}, {"tags": [], "owner": {"reputation": 81, "user_id": 9019683, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-tGWKzAXOeJk/AAAAAAAAAAI/AAAAAAAAACI/BWchNiKVQo0/photo.jpg?sz=128", "display_name": "Douman Ashiya", "link": "https://stackoverflow.com/users/9019683/douman-ashiya"}, "is_accepted": true, "score": 2, "last_activity_date": 1530709906, "last_edit_date": 1530709906, "creation_date": 1530693564, "answer_id": 51169326, "question_id": 51156656, "link": "https://stackoverflow.com/questions/51156656/how-do-i-get-the-parameters-from-a-post-request-from-a-html-form-in-actix-web/51169326#51169326", "title": "How do I get the parameters from a POST request from a HTML form in Actix-web?", "body": "<p>You can use an extractor by:</p>\n\n<ul>\n<li>Defining a struct that can be deserialized from raw data.</li>\n<li>Defining a handler that accepts an extractor. In your case, use <code>Form</code> <a href=\"https://stackoverflow.com/a/51156992/155423\">as Nikolay said</a>, with the type parameter of your struct.</li>\n<li>Register this handler.</li>\n</ul>\n\n<p>If you take a look at simple example in linked documentation you'll see how describe such handler.</p>\n\n<p>Here is a bit more complete one:</p>\n\n<h1>Define struct</h1>\n\n<pre><code>#[derive(Deserialize)]\nstruct AddHook {\n    id: u64,\n    title: String,\n    version: Option&lt;String&gt;,\n    code: Option&lt;String&gt;\n}\n</code></pre>\n\n<h1>Define handler</h1>\n\n<pre><code>fn remove_hook_del((query, state): (Form&lt;AddHook&gt;, State&lt;AppState&gt;)) -&gt; FutureHttpResponse {\n    let query = query.into_inner();\n    let AddHook {id, title, version, code} = query;\n\n    //Do something with your data\n}\n</code></pre>\n\n<h1>Register handler</h1>\n\n<pre><code>App::with_state(AppState::new()).resource(\"/remove_hook\", |res| {\n    res.method(Method::GET).with(remove_hook_get);\n    res.method(Method::DELETE).with(remove_hook_del);\n    res.route().f(not_allowed);\n})\n</code></pre>\n\n<p>This is more or less a complete example for <a href=\"https://github.com/actix/actix-web/tree/09aabc7b3b23be7c4ae02dada73138b2b57a97e5\" rel=\"nofollow noreferrer\">the current master branch of <code>actix-web</code></a>. I also made it with state to show how you can use multiple arguments in your handler</p>\n"}], "owner": {"reputation": 1183, "user_id": 1816631, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29ced07f3e8c91fca396d867bda0b7da?s=128&d=identicon&r=PG", "display_name": "Gorm Casper", "link": "https://stackoverflow.com/users/1816631/gorm-casper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3720, "favorite_count": 1, "accepted_answer_id": 51169326, "answer_count": 2, "score": 3, "last_activity_date": 1530709906, "creation_date": 1530626767, "last_edit_date": 1530627511, "question_id": 51156656, "link": "https://stackoverflow.com/questions/51156656/how-do-i-get-the-parameters-from-a-post-request-from-a-html-form-in-actix-web", "title": "How do I get the parameters from a POST request from a HTML form in Actix-web?", "body": "<p>I am building a little webapp in Actix-web, but I can't find any example of getting parameters out of a POST request in Actix-web anywhere. </p>\n\n<p><a href=\"https://github.com/actix/examples/search?q=POST&amp;unscoped_q=POST\" rel=\"nofollow noreferrer\">Searching their excellent examples repo</a> only gives a <a href=\"https://github.com/actix/examples/blob/a01db994f6af8344669642dae99d58ca1b072189/json/src/main.rs#L118\" rel=\"nofollow noreferrer\">couple</a> of (to me) meaningful <a href=\"https://github.com/actix/examples/blob/e4f1833215b4e4ab1deb59484942c499a2deffc3/web-cors/backend/src/main.rs#L35\" rel=\"nofollow noreferrer\">examples</a>, but they both deal with JSON and not form data.</p>\n\n<p>I also found <a href=\"https://actix.rs/actix-web/actix_web/trait.FromRequest.html\" rel=\"nofollow noreferrer\">this page</a>, which I suspect holds the answer; but to a beginner this isn't much help.</p>\n\n<p>I imagine it should look something like:</p>\n\n<pre><code>&lt;form method=\"POST\"&gt;\n    &lt;input type=\"password\" name=\"password\"&gt;\n    &lt;button type=\"submit\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>fn main() {\n    // ...\n    App::with_state(AppState { db: pool.clone() })\n        .middleware(IdentityService::new(\n            CookieIdentityPolicy::new(&amp;[0; 32])\n                .name(\"auth-cookie\")\n                .secure(true),\n        ))\n        .resource(\"/login\", |r| {\n            r.method(http::Method::GET).with(login);\n            r.method(http::Method::POST).with(perform_login) // help!\n        })\n}\n\nstruct LoginParams {\n    password: String,\n}    \n\nfn perform_login(mut req: HttpRequest&lt;AppState&gt;, params: LoginParams) -&gt; HttpResponse {\n    if params.password == \"abc123\" {\n        req.remember(\"logged-in\".to_owned());\n        // redirect to home\n    };\n    // show \"wrong password\" error\n}\n</code></pre>\n"}, {"tags": ["rust", "type-inference"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1530627671, "last_edit_date": 1530627671, "creation_date": 1530625023, "answer_id": 51156033, "question_id": 51155605, "link": "https://stackoverflow.com/questions/51155605/why-is-mapping-a-result-from-parsing-a-string-using-intointo-unable-to-infer-a/51156033#51156033", "title": "Why is mapping a Result from parsing a string using Into::into unable to infer a type?", "body": "<p><a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.parse\" rel=\"nofollow noreferrer\">Parsing a string can return any number of types</a>:</p>\n\n<pre><code>pub fn parse&lt;F&gt;(&amp;self) -&gt; Result&lt;F, &lt;F as FromStr&gt;::Err&gt;\nwhere\n    F: FromStr, \n</code></pre>\n\n<p>Your code doesn't have any hints about <em>what</em> should be parsed out of the string before you start messing with it, so the compiler has no idea which implementation of <code>parse</code> to pick:</p>\n\n<blockquote>\n<pre><code>let addr = \"127.0.0.1:23456\".parse();\nlet addr = addr.map_err(|e| e.into())?;\n</code></pre>\n</blockquote>\n\n<p>You are then trying to convert an unknown type into a <code>MyError</code>, thus the error.</p>\n\n<blockquote>\n<pre><code>let addr = addr.map_err(|e: ::std::net::AddrParseError| e.into())?;\n</code></pre>\n</blockquote>\n\n<p>Knowing the <em>error</em> type isn't enough because multiple types can implement <a href=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\" rel=\"nofollow noreferrer\"><code>FromStr</code></a> with the same error type:</p>\n\n<pre><code>pub trait FromStr {\n    type Err;\n    fn from_str(s: &amp;str) -&gt; Result&lt;Self, Self::Err&gt;;\n}\n</code></pre>\n\n<p>This means that the compiler still doesn't know what to parse as.</p>\n\n<p>In general, the compiler will not make multiple leaps of inference because the search space can become exponentially huge. In other cases, the current <em>ad hoc</em> trait system doesn't know enough / try hard enough to make certain types of inference work. It's possible that <a href=\"https://github.com/rust-lang/rust/issues/48049\" rel=\"nofollow noreferrer\">switching to chalk</a> will make the type system a bit more mathematically rigorous. </p>\n\n<hr>\n\n<blockquote>\n<pre><code>let addr = addr.map_err(|e| &lt;MyError as From&lt;_&gt;&gt;::from(e))?;\n</code></pre>\n</blockquote>\n\n<p>This can be written more simply:</p>\n\n<pre><code>let addr = addr.map_err(|e| MyError::from(e))?;\n</code></pre>\n\n<blockquote>\n  <p>I don't even need to map the error</p>\n</blockquote>\n\n<p>Yes, because <code>?</code> does it for you.</p>\n"}, {"tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": true, "score": 3, "last_activity_date": 1530657520, "last_edit_date": 1530657520, "creation_date": 1530630368, "answer_id": 51157800, "question_id": 51155605, "link": "https://stackoverflow.com/questions/51155605/why-is-mapping-a-result-from-parsing-a-string-using-intointo-unable-to-infer-a/51157800#51157800", "title": "Why is mapping a Result from parsing a string using Into::into unable to infer a type?", "body": "<p>Concerning your second error: Reducing your example a bit by replacing the result obtained from parsing with another custom error (<code>MyError2</code>) reproduces the same issue (<code>|e: MyError2| e.into()</code> again does not help):</p>\n\n<pre><code>#[derive(Debug)]\nstruct MyError();\nstruct MyError2();\n\nimpl From&lt;MyError2&gt; for MyError {\n    fn from(_e: MyError2) -&gt; MyError{\n        MyError()\n    }\n}\n\nfn main() -&gt; Result&lt;(),MyError&gt; {\n    let addr = Err(MyError2{});\n    addr.map_err(|e| e.into())?;\n    Ok(())\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:20:5\n   |\n20 |     addr.map_err(|e| e.into())?;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for `_`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Replacing <code>?</code> with its macro definition (<code>try!</code>) from the standard library reveals:</p>\n\n<pre><code>macro_rules! try {\n    ($e:expr) =&gt; (match $e {\n        Ok(val) =&gt; val,\n        Err(err) =&gt; return Err(::std::convert::From::from(err)),\n    });\n}\n\nfn main() -&gt; Result&lt;(),MyError&gt; {\n    let addr = Err(MyError2{});\n    let addr = try!(addr.map_err(|e| e.into()));\n    Ok(addr)\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:14:13\n   |\n14 |         Err(err) =&gt; return Err(::std::convert::From::from(err)),\n   |             ^^^ cannot infer type for `_`\n...\n20 |     let addr = try!(addr.map_err(|e| e.into()));\n   |                -------------------------------- in this macro invocation\n</code></pre>\n\n<p>The <code>From::from()</code> applied on the <code>err</code> in the macro definition is responsible for the inference fail. Replacing this line: <code>Err(err) =&gt; return Err(::std::convert::From::from(err)),</code> with <code>Err(err) =&gt; return Err(err),</code> resolves the issue - the program compiles.</p>\n\n<p>The reason is that by placing two conversions via <code>From::from()</code> between <code>MyError</code> and <code>MyError2</code> this conversion pipeline becomes ambiguous. The compiler can't determine the intermediate type. </p>\n\n<p>Example - two valid options (note that <code>From::from</code> is implemented reflexively):</p>\n\n<ul>\n<li><p><code>MyError2</code> -> <code>MyError2</code> -> <code>MyError</code></p>\n\n<p>compiles: <code>let addr = addr.map_err(|e| {let e2: MyError2 = e.into(); e2})?;</code></p></li>\n<li><p><code>MyError2</code> -> <code>MyError</code> -> <code>MyError</code></p>\n\n<p>compiles: <code>let addr = addr.map_err(|e| {let e2: MyError = e.into(); e2})?;</code></p></li>\n</ul>\n"}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 496, "favorite_count": 0, "accepted_answer_id": 51157800, "answer_count": 2, "score": 2, "last_activity_date": 1530657520, "creation_date": 1530623730, "last_edit_date": 1530624443, "question_id": 51155605, "link": "https://stackoverflow.com/questions/51155605/why-is-mapping-a-result-from-parsing-a-string-using-intointo-unable-to-infer-a", "title": "Why is mapping a Result from parsing a string using Into::into unable to infer a type?", "body": "<p>The following (<a href=\"https://play.rust-lang.org/?gist=8b6a50f2730b71ce0d081a5149d0f887&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground link</a>)</p>\n\n<pre><code>#[derive(Debug)]\nstruct MyError();\n\nimpl From&lt;::std::net::AddrParseError&gt; for MyError {\n    fn from(_e: ::std::net::AddrParseError) -&gt; MyError {\n        MyError()\n    }\n}\n\nfn accept_addr(_addr: ::std::net::SocketAddr) {}\n\nfn main() -&gt; Result&lt;(), MyError&gt; {\n    let addr = \"127.0.0.1:23456\".parse();\n    let addr = addr.map_err(|e| e.into())?;\n    Ok(accept_addr(addr))\n}\n</code></pre>\n\n<p>does not work. Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:14:30\n   |\n14 |     let addr = addr.map_err(|e| e.into())?;\n   |                              ^ consider giving this closure parameter a type\n</code></pre>\n\n<p>I cannot resolve this issue by following the advice from the error message above. If I change the code to:</p>\n\n<pre><code>let addr = addr.map_err(|e: ::std::net::AddrParseError| e.into())?;\n</code></pre>\n\n<p>I get another error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:14:16\n   |\n14 |     let addr = addr.map_err(|e: ::std::net::AddrParseError| e.into())?;\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for `_`\n</code></pre>\n\n<p>My solution is to use <code>From</code> instead:</p>\n\n<pre><code>let addr = addr.map_err(|e| &lt;MyError as From&lt;_&gt;&gt;::from(e))?; // Worked!!\n</code></pre>\n\n<p>Even better, I figured out later that I don't even need to map the error:</p>\n\n<pre><code>let addr = \"127.0.0.1:23456\".parse()?;\nOk(accept_addr(addr))\n</code></pre>\n\n<p>I know that type inference is never easy, but why doesn't the above code infer the type properly?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1530615323, "post_id": 51152144, "comment_id": 89288942, "body": "There is the function <a href=\"https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#427\" rel=\"nofollow noreferrer\"><code>search_hashed_nonempty</code></a>, but of course it&#39;s not public :|"}], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530615590, "post_id": 51152804, "comment_id": 89289118, "body": "Thanks, I forgot about the equality check. However wouldn&#39;t it be possible to provide the <code>Hash</code> <b>and</b> the key for a potential faster lookup? Assuming you are using the same <code>HashBuilder</code>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530618113, "post_id": 51152804, "comment_id": 89290605, "body": "@Tim: In the current implementation, it could possibly be made available. However, there is a DOS-prevention scheme for hash maps which consists in changing the hash seed on growth (which immediately invalidates all cached hashes), and exposing the internal hash for caching would make this DOS-prevention implementation impossible, so I&#39;m not sure if anyone would be comfortable adding this. On the other hand, the work-around I described is immune to this issue and provides the caching you seek."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530618243, "post_id": 51152804, "comment_id": 89290692, "body": "Alright, the DOS-prevention scheme makes sense and it&#39;s probably good, that it&#39;s not a public interface so the internal may change."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1530615250, "creation_date": 1530615250, "answer_id": 51152804, "question_id": 51152144, "link": "https://stackoverflow.com/questions/51152144/can-i-use-the-hashes-in-a-hashmap-directly/51152804#51152804", "title": "Can I use the hashes in a HashMap directly?", "body": "<p><strong>No.</strong></p>\n\n<p>This is fundamentally impossible at the algorithmic level.</p>\n\n<p>By design, a hash operation is <strong>surjective</strong>: multiple elements may hash to the same value. Therefore, any HashMap implementation can only use the hash as a <em>hint</em> and must then use a <em>full equality comparison</em> to check that the element found by the <em>hint</em> is the right element (or not).</p>\n\n<p>At <em>best</em>, a <code>get_by_hash</code> method would return an <code>Iterator</code> of all possible elements matching the current hash.</p>\n\n<p>For a degenerate case, consider a hashing algorithm which always returns <code>4</code> (obtained by the roll of a fair dice). Which element would you expect it to return?</p>\n\n<hr>\n\n<p><strong>Work-around</strong></p>\n\n<p>If <em>caching</em> is what you are after, the trick in languages with no <code>HashBuilder</code> is to pre-hash (and cache) the hash inside the key itself.</p>\n\n<p>It requires caching the full key (because of the equality check), but hashing is then a very simple operation (return the cached value).</p>\n\n<p>It does not, however, speed up the equality check, which depending on the value may be quite expensive.</p>\n\n<p>You could adapt the pattern to Rust, although you would lose the advantage of using a <code>HashBuilder</code>.</p>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 495, "favorite_count": 0, "accepted_answer_id": 51152804, "answer_count": 1, "score": 2, "last_activity_date": 1530615250, "creation_date": 1530613271, "question_id": 51152144, "link": "https://stackoverflow.com/questions/51152144/can-i-use-the-hashes-in-a-hashmap-directly", "title": "Can I use the hashes in a HashMap directly?", "body": "<p>Is it possible to insert and get values into/from a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\"><code>HashMap</code></a> directly with a <a href=\"https://doc.rust-lang.org/std/hash/trait.Hash.html\" rel=\"nofollow noreferrer\"><code>Hash</code></a> provided, so I can cache the hashes?</p>\n\n<p>I want to do something like this:</p>\n\n<pre><code>map.insert(key, \"value\");\n\nlet hashed_key = {\n    let mut hasher = map.hasher().build_hasher();\n    key.hash(&amp;mut hasher);\n    hasher.finish()\n};\n\nassert_eq!(map.get(key).unwrap(), map.get_by_hash(hashed_key).unwrap());\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0cf098be07b08369121fa0de558a3f34&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["rust", "higher-order-functions", "ownership"], "comments": [{"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1530590472, "post_id": 51146409, "comment_id": 89277035, "body": "question originally from codewars <a href=\"http://www.codewars.com/kata/array-dot-diff/train/rust\" rel=\"nofollow noreferrer\">codewars.com/kata/array-dot-diff/train/rust</a>"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1530593408, "post_id": 51146409, "comment_id": 89277655, "body": "Why <code>collect</code> gets references? Hint, look at <code>iter</code>. Another hint: <code>into_iter</code>."}, {"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1530593883, "post_id": 51146409, "comment_id": 89277801, "body": "wasn&#39;t aware there&#39;s <code>into_iter</code> and wasn&#39;t aware <code>iter</code> returns reference #facepalm thanks for the tip"}], "answers": [{"comments": [{"owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "edited": false, "score": 0, "creation_date": 1530593842, "post_id": 51146854, "comment_id": 89277790, "body": "LOL, OK i need to spend some time reading the documentation. I didn&#39;t know the function exists (got the <code>iter</code> from official guide lol)."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 2, "last_activity_date": 1530593472, "creation_date": 1530593472, "answer_id": 51146854, "question_id": 51146409, "link": "https://stackoverflow.com/questions/51146409/is-there-a-way-to-remove-entries-from-a-generic-first-vector-that-are-present-in/51146854#51146854", "title": "Is there a way to remove entries from a generic first vector that are present in another vector?", "body": "<p>For this particular test ... you can consume the vector instead of relying on references. The signature yields values and not references. As such, to pass the test you only have to use <code>into_iter</code> instead:</p>\n\n<pre><code>a.into_iter() // &lt;----------- call into_iter\n    .filter(|incoming| !b.contains(incoming))\n    .collect::&lt;Vec&lt;T&gt;&gt;()\n</code></pre>\n\n<p>This consumes the values and returns them out again.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1530623156, "creation_date": 1530623156, "answer_id": 51155410, "question_id": 51146409, "link": "https://stackoverflow.com/questions/51146409/is-there-a-way-to-remove-entries-from-a-generic-first-vector-that-are-present-in/51155410#51155410", "title": "Is there a way to remove entries from a generic first vector that are present in another vector?", "body": "<p>Destroying the incoming allocation to create a new allocation isn't very efficient. Instead, write code that is more directly in line with the problem statement:</p>\n\n<pre><code>fn array_diff&lt;T: PartialEq&gt;(mut a: Vec&lt;T&gt;, b: Vec&lt;T&gt;) -&gt; Vec&lt;T&gt; {\n    a.retain(|aa| !b.contains(aa));\n    a\n}\n</code></pre>\n\n<p>Adding <code>mut</code> in the signature <em>doesn't change the signature</em> because no one can tell that you've added it. It's the exact same as:</p>\n\n<pre><code>fn array_diff&lt;T: PartialEq&gt;(a: Vec&lt;T&gt;, b: Vec&lt;T&gt;) -&gt; Vec&lt;T&gt; {\n    let mut a = a;\n    a.retain(|aa| !b.contains(aa));\n    a\n}\n</code></pre>\n"}], "owner": {"reputation": 5378, "user_id": 5742, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3c09250bd1e6c4618d8e469e7aa0468d?s=128&d=identicon&r=PG", "display_name": "Jeffrey04", "link": "https://stackoverflow.com/users/5742/jeffrey04"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "accepted_answer_id": 51146854, "answer_count": 2, "score": 0, "last_activity_date": 1530623156, "creation_date": 1530589746, "last_edit_date": 1530622654, "question_id": 51146409, "link": "https://stackoverflow.com/questions/51146409/is-there-a-way-to-remove-entries-from-a-generic-first-vector-that-are-present-in", "title": "Is there a way to remove entries from a generic first vector that are present in another vector?", "body": "<p>I have a problem understanding ownership when a higher order function is called. I am supposed to remove entries from the first vector if the elements exist in the second vector so I came up with this attempt:</p>\n\n<pre><code>fn array_diff&lt;T: PartialEq&gt;(a: Vec&lt;T&gt;, b: Vec&lt;T&gt;) -&gt; Vec&lt;T&gt; {\n    a.iter()\n        .filter(|incoming| !b.contains(incoming))\n        .collect::&lt;Vec&lt;T&gt;&gt;()\n}\n</code></pre>\n\n<p>I can't change the function signature. The <code>.collect()</code> call doesn't work because all I am getting is a reference to elements in <code>a</code>. While this is generic, I don't know if the result is <code>copy</code>-able or <code>clone</code>-able. I also probably can't dereference the elements in <code>a</code>.</p>\n\n<p>Is there a way to fix this piece of code without rewriting it from scratch?</p>\n"}, {"tags": ["rust", "arguments", "command-line-interface", "clap"], "comments": [{"owner": {"reputation": 694, "user_id": 7033869, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-qhp8umXBLiA/AAAAAAAAAAI/AAAAAAAAAAA/faBbkZ-N7fw/photo.jpg?sz=128", "display_name": "Francois Mockers", "link": "https://stackoverflow.com/users/7033869/francois-mockers"}, "edited": false, "score": 1, "creation_date": 1530573893, "post_id": 51143220, "comment_id": 89273898, "body": "If scrap, rename or generate can&#39;t be used at the same time, it might be easier to set them up as subcommands, and each could have it&#39;s own parameters"}, {"owner": {"reputation": 21, "user_id": 8453305, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-IMPJRyEaRnQ/AAAAAAAAAAI/AAAAAAAAGDc/MOAH9An103Q/photo.jpg?sz=128", "display_name": "Jonathan Marple", "link": "https://stackoverflow.com/users/8453305/jonathan-marple"}, "reply_to_user": {"reputation": 694, "user_id": 7033869, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-qhp8umXBLiA/AAAAAAAAAAI/AAAAAAAAAAA/faBbkZ-N7fw/photo.jpg?sz=128", "display_name": "Francois Mockers", "link": "https://stackoverflow.com/users/7033869/francois-mockers"}, "edited": false, "score": 0, "creation_date": 1530577901, "post_id": 51143220, "comment_id": 89274659, "body": "That&#39;s what I started out with but switched to flags for simplicity. Its not vital that I have it functioning the way I want it to yet so I may go back and delve a bit deeper into subcommands."}], "answers": [{"tags": [], "owner": {"reputation": 21, "user_id": 8453305, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-IMPJRyEaRnQ/AAAAAAAAAAI/AAAAAAAAGDc/MOAH9An103Q/photo.jpg?sz=128", "display_name": "Jonathan Marple", "link": "https://stackoverflow.com/users/8453305/jonathan-marple"}, "is_accepted": true, "score": 0, "last_activity_date": 1530714605, "creation_date": 1530714605, "answer_id": 51176028, "question_id": 51143220, "link": "https://stackoverflow.com/questions/51143220/clap-arg-group-containing-arguments-with-different-requirements-and-conflicts/51176028#51176028", "title": "Clap arg group containing arguments with different requirements and conflicts", "body": "<p>As per Francois' suggestion, I switched to using subcommands. I had to write out my <code>-t</code> and <code>-m</code> flags and their <code>DB</code> group twice, once for each subcommand that uses them. I was trying to avoid that to keep my YAML file clean and less repetitive but functionality is more important.</p>\n\n<p>Working YAML file:</p>\n\n<pre><code>name: mfm\nversion: \"0.1.0\"\nauthor: Jonathan Marple &lt;elpramnoj@gmail.com&gt;\nabout: Media file manager written in rust.\nargs:\n    - INPUT:\n        help: Sets the input file(s) to use\n        required: true\n        min_values: 1\nsubcommands:\n    - scrape:\n        about: Scrape information on show/movie\n        args:\n            - tvdb:\n                short: t\n                long: tvdb\n                help: Pull from tvdb\n            - tmdb:\n                short: m\n                long: tmdb\n                help: Pull from tmdb\n        groups:\n            - DB:\n                required: true\n                args:\n                    - tvdb\n                    - tmdb\n    - rename:\n        about: Rename file(s)\n        args:\n            - tvdb:\n                short: t\n                long: tvdb\n                help: Pull from tvdb\n            - tmdb:\n                short: m\n                long: tmdb\n                help: Pull from tmdb\n        groups:\n            - DB:\n                required: true\n                args:\n                    - tvdb\n                    - tmdb\n    - generate:\n        about: Generate folders for file(s)\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 8453305, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-IMPJRyEaRnQ/AAAAAAAAAAI/AAAAAAAAGDc/MOAH9An103Q/photo.jpg?sz=128", "display_name": "Jonathan Marple", "link": "https://stackoverflow.com/users/8453305/jonathan-marple"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 718, "favorite_count": 0, "accepted_answer_id": 51176028, "answer_count": 1, "score": 1, "last_activity_date": 1530714605, "creation_date": 1530562777, "last_edit_date": 1530564955, "question_id": 51143220, "link": "https://stackoverflow.com/questions/51143220/clap-arg-group-containing-arguments-with-different-requirements-and-conflicts", "title": "Clap arg group containing arguments with different requirements and conflicts", "body": "<p>I am trying to write a CLI in Rust with the help of Clap and YAML. My input will require one argument (file path) and one of the flags <code>-s</code>, <code>-r</code>, or <code>-g</code>. The flags <code>-s</code> and <code>-r</code> will require one of the two flags <code>-t</code> and <code>-m</code>, but the flag <code>-g</code> conflicts with both <code>-t</code> and <code>-m</code>. I am trying to configure it so that <code>-g</code> will not be accepted if <code>-t</code> or <code>-m</code> is selected, but it disallows the use of <code>-s</code> or <code>-r</code> with either <code>-t</code> or <code>-m</code>. </p>\n\n<p>How do I configure my YAML file so that I can disallow <code>-gt</code> and <code>-gm</code> but allow (and require) the use of <code>-t</code> or <code>-m</code> with <code>-s</code> or <code>-r</code>?</p>\n\n<p>cli.yml:</p>\n\n<pre><code>name: mfm\nversion: \"0.1.0\"\nauthor: Jonathan Marple &lt;elpramnoj@gmail.com&gt;\nabout: Media file manager written in rust.\nargs:\n    - INPUT:\n        help: Sets the input file(s) to use\n        required: true\n    - scrape:\n        short: s\n        long: scrape\n        help: Scrape information on show/movie\n        requires:\n            - DB\n    - rename:\n        short: r\n        long: rename\n        help: Rename file(s)\n        requires:\n            - DB\n    - generate:\n        short: g\n        long: generate\n        help: Generate folders for file(s)\n        conflicts_with:\n            - tvdb\n            - tmdb\n    - tvdb:\n        short: t\n        long: tvdb\n        help: Pull from tvdb\n    - tmdb:\n        short: m\n        long: tmdb\n        help: Pull from tmdb\ngroups:\n    - CMD:\n        required: true\n        args:\n            - scrape\n            - rename\n            - generate\n    - DB:\n        args:\n            - tvdb\n            - tmdb\n</code></pre>\n\n<p>I've also tried marking <code>DB</code> under <code>conflicts_with:</code> but it behaves the same way regardless.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530557017, "post_id": 51141672, "comment_id": 89268254, "body": "<i>perhaps it would return</i> \u2014 I recommend reading <a href=\"https://doc.rust-lang.org/std/macro.try.html\" rel=\"nofollow noreferrer\">the documentation for functions, macros, and types that you find</a>. A lot of time and effort has gone into them and they cover many basic questions."}, {"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530557850, "post_id": 51141672, "comment_id": 89268590, "body": "Thanks for pointing me to the resources @Shepmaster. But I had already gone through them. All the error handling variants appeared to me to be working only in case a Result type is being returned. But I was looking to handle some case very analogous to the try/catch mentioned above. My function returns a value and not a Result or Option type, but may panic which is what I wanted to ignore."}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 1, "creation_date": 1530562882, "post_id": 51141672, "comment_id": 89270562, "body": "You can use <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\">catch_unwind</a> but it is not recommended. Docs &quot;It is not recommended to use this function for a general try/catch mechanism. The Result type is more appropriate to use for functions that can fail on a regular basis.&quot;"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1530598529, "post_id": 51141672, "comment_id": 89279387, "body": "I think the reason why somebody downvoted your question is, that you should not &quot;throw away&quot; the error. Handle it properly (you may do this with <code>expect</code>) or return it, so the caller can handle the error itself."}, {"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1530598750, "post_id": 51141672, "comment_id": 89279480, "body": "Yes thanks @hellow for pointing it out. But its in a UT that I am willing to do this where anyways there are mocking and stuff to get around things. I might even go on to assert in the catch block but do not want to stop the progress of the UT."}], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 364, "user_id": 2639190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b996a08921333a509722d4a0f7e79c37?s=128&d=identicon&r=PG", "display_name": "phiresky", "link": "https://stackoverflow.com/users/2639190/phiresky"}, "edited": false, "score": 1, "creation_date": 1579367578, "post_id": 51142002, "comment_id": 105746264, "body": "Calling <code>Result::ok</code> just turns it into an <code>Option</code>. Then you basically have the same story as in <code>Result</code>"}, {"owner": {"reputation": 364, "user_id": 2639190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b996a08921333a509722d4a0f7e79c37?s=128&d=identicon&r=PG", "display_name": "phiresky", "link": "https://stackoverflow.com/users/2639190/phiresky"}, "edited": false, "score": 0, "creation_date": 1579474132, "post_id": 51142002, "comment_id": 105768609, "body": "Nope, because rustc <i>does</i> complain about an unused Result&lt;T, _&gt; but it <i>doesn&#39;t</i> complain about an unused Option&lt;T&gt;"}, {"owner": {"reputation": 364, "user_id": 2639190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b996a08921333a509722d4a0f7e79c37?s=128&d=identicon&r=PG", "display_name": "phiresky", "link": "https://stackoverflow.com/users/2639190/phiresky"}, "edited": false, "score": 0, "creation_date": 1579474195, "post_id": 51142002, "comment_id": 105768622, "body": "Not sure if there&#39;s a more idiomatic way to tell the compiler &quot;I intentionally ignored that result&quot;"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 364, "user_id": 2639190, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b996a08921333a509722d4a0f7e79c37?s=128&d=identicon&r=PG", "display_name": "phiresky", "link": "https://stackoverflow.com/users/2639190/phiresky"}, "edited": false, "score": 0, "creation_date": 1579536037, "post_id": 51142002, "comment_id": 105790561, "body": "It&#39;s expressive to type <code>let _</code>. It gives a hint to the compiler, that you don&#39;t use the value and other readers (or youself at a later point) will see that, too."}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1597186151, "post_id": 51142002, "comment_id": 112050466, "body": "You can also use <code>unwrap_or</code> or <code>unwrap_or_default</code>. Example: <code>std::fs::remove_file(file).unwrap_or_default();</code> to delete a file, ignoring any errors."}, {"owner": {"reputation": 1739, "user_id": 3938965, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/ucqW3.jpg?s=128&g=1", "display_name": "workerjoe", "link": "https://stackoverflow.com/users/3938965/workerjoe"}, "edited": false, "score": 0, "creation_date": 1602611360, "post_id": 51142002, "comment_id": 113773385, "body": "How could you log an error (i.e., with <code>println!</code>) and proceed, as the OP originally asked?   I&#39;ve tried <code>.or_else</code> with no luck."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 1739, "user_id": 3938965, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/ucqW3.jpg?s=128&g=1", "display_name": "workerjoe", "link": "https://stackoverflow.com/users/3938965/workerjoe"}, "edited": false, "score": 1, "creation_date": 1602673616, "post_id": 51142002, "comment_id": 113793472, "body": "@workerjoe <code>.or_else</code> requires a return value. You may either use <code>if let Ok(...) = result { ... } else { println!(...) }</code> or a <code>match result { ... }</code> statement."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 43, "last_activity_date": 1593783620, "last_edit_date": 1593783620, "creation_date": 1530556651, "answer_id": 51142002, "question_id": 51141672, "link": "https://stackoverflow.com/questions/51141672/how-do-i-ignore-an-error-returned-from-a-rust-function-and-proceed-regardless/51142002#51142002", "title": "How do I ignore an error returned from a Rust function and proceed regardless?", "body": "<p>Functions in Rust which can fail return a <a href=\"https://doc.rust-lang.org/std/result/\" rel=\"noreferrer\"><code>Result</code></a>:</p>\n<blockquote>\n<p><code>Result&lt;T, E&gt;</code> is the type used for returning and propagating errors. It is an enum with the variants, <code>Ok(T)</code>, representing success and containing a value, and <code>Err(E)</code>, representing error and containing an error value.</p>\n</blockquote>\n<p>I highly recommend reading the <a href=\"https://doc.rust-lang.org/book/ch09-00-error-handling.html\" rel=\"noreferrer\">Error Handling section</a> in the <a href=\"https://doc.rust-lang.org/book/\" rel=\"noreferrer\">Rust Book</a>:</p>\n<blockquote>\n<p>Rust has a number of features for handling situations in which something goes wrong</p>\n</blockquote>\n<p>If you want to ignore an error, you have different possibilities:</p>\n<ul>\n<li><p>Don't use the <code>Result</code>:</p>\n<pre><code>  let _ = failing_function();\n</code></pre>\n<p>The function will be called, but the result will be ignored. If you omit <code>let _ = </code>, you will get a warning.</p>\n</li>\n<li><p>Ignore the <code>Err</code> variant of <code>Result</code> using <a href=\"https://doc.rust-lang.org/book/ch06-03-if-let.html\" rel=\"noreferrer\"><code>if let</code></a> or <a href=\"https://doc.rust-lang.org/book/ch06-02-match.html\" rel=\"noreferrer\"><code>match</code></a>:</p>\n<pre><code>  if let Ok(ret) = failing_function() {\n      // use the returned value\n  }\n</code></pre>\n<p>You may also convert the <code>Result</code> into <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"noreferrer\"><code>Option</code></a> with <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.ok\" rel=\"noreferrer\"><code>Result::ok</code></a>:</p>\n<pre><code>  let opt = failing_function().ok();\n</code></pre>\n</li>\n<li><p>Unwrap the error. This code panics if an error occurred though:</p>\n<pre><code>  let ret = failing_function().unwrap();\n  // or\n  let ret = failing_function().expect(&quot;A panic message to be displayed&quot;);\n</code></pre>\n</li>\n</ul>\n<p><code>try!()</code> unwraps a result and early returns the function, if an error occurred. However, you should use <code>?</code> instead of <code>try!</code> as <a href=\"https://github.com/rust-lang/rust/pull/62672\" rel=\"noreferrer\">this is deprecated</a>.</p>\n<hr />\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/42917566/what-is-this-question-mark-operator-about\">What is this question mark operator about?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/40545332/is-the-question-mark-operator-equivalent-to-the-try-macro\">Is the question mark operator ? equivalent to the try! macro?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/30505639/how-to-do-error-handling-in-rust-and-what-are-the-common-pitfalls\">How to do error handling in Rust and what are the common pitfalls?</a></li>\n</ul>\n"}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12507, "favorite_count": 3, "accepted_answer_id": 51142002, "answer_count": 1, "score": 20, "last_activity_date": 1609655893, "creation_date": 1530555195, "last_edit_date": 1548856038, "question_id": 51141672, "link": "https://stackoverflow.com/questions/51141672/how-do-i-ignore-an-error-returned-from-a-rust-function-and-proceed-regardless", "title": "How do I ignore an error returned from a Rust function and proceed regardless?", "body": "<p>When it is known that some piece of code might throw an error, we make use of <code>try/catch</code> blocks to ignore such errors and proceed. This is done when the error is not that important but maybe we only want to log it:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>try{\n    int i = 1/0;\n} catch( ArithmeticException e){\n    System.out.println(\"Encountered an error but would proceed.\");\n} \nx = y;\n</code></pre>\n\n<p>Such a construct in Java would continue on to execute <code>x = y;</code>.</p>\n\n<p>Can I make use of <code>match</code> to do this or any other construct?</p>\n\n<p>I do see a <code>try!</code> macro, but perhaps it would return in case of an error with the return type of the method as <code>Result</code>.</p>\n\n<p>I want to use such a construct in a UT to ensure it continues to run even after an error has occurred.</p>\n"}, {"tags": ["rust", "generic-programming"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1530553299, "post_id": 51141200, "comment_id": 89266562, "body": "<a href=\"https://play.rust-lang.org/?gist=171215eec4602191d595ac5cfe1f9b00&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> ?"}, {"owner": {"reputation": 193, "user_id": 6606270, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-usgivvoQ9v0/AAAAAAAAAAI/AAAAAAAADAw/7h5HCZuxWMo/photo.jpg?sz=128", "display_name": "Kevin Del Castillo Ramirez", "link": "https://stackoverflow.com/users/6606270/kevin-del-castillo-ramirez"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1530553434, "post_id": 51141200, "comment_id": 89266628, "body": "@Stargateur what I mean is to do <b>A</b> if <i>T</i> implements a Trait, and do <b>B</b> if <i>T</i> doesn&#39;t implement a Trait, all of this under one common name like <code>do_something(&amp;Self)</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1530553879, "post_id": 51141200, "comment_id": 89266854, "body": "It&#39;s not possible both must implement the trait in this context. :/ Maybe you should read about trait and how to use them."}, {"owner": {"reputation": 193, "user_id": 6606270, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-usgivvoQ9v0/AAAAAAAAAAI/AAAAAAAADAw/7h5HCZuxWMo/photo.jpg?sz=128", "display_name": "Kevin Del Castillo Ramirez", "link": "https://stackoverflow.com/users/6606270/kevin-del-castillo-ramirez"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1530554365, "post_id": 51141200, "comment_id": 89267088, "body": "Yeah, I supposed it, but just wondering if I didn&#39;t know something ultra advanced, but it will be cool to see something like <code>if T impl Debug { A } else { B }</code> inside functions, I think it&#39;s possible because its like conditional compilation, all of this can be checked at compile time."}], "answers": [{"comments": [{"owner": {"reputation": 193, "user_id": 6606270, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-usgivvoQ9v0/AAAAAAAAAAI/AAAAAAAADAw/7h5HCZuxWMo/photo.jpg?sz=128", "display_name": "Kevin Del Castillo Ramirez", "link": "https://stackoverflow.com/users/6606270/kevin-del-castillo-ramirez"}, "edited": false, "score": 0, "creation_date": 1530558072, "post_id": 51142261, "comment_id": 89268682, "body": "I had something like this in mind but I didn&#39;t know about specialization feature."}], "tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": true, "score": 5, "last_activity_date": 1530565714, "last_edit_date": 1530565714, "creation_date": 1530557943, "answer_id": 51142261, "question_id": 51141200, "link": "https://stackoverflow.com/questions/51141200/how-can-i-implement-a-function-differently-depending-on-if-a-generic-type-implem/51142261#51142261", "title": "How can I implement a function differently depending on if a generic type implements a trait or not?", "body": "<p>Here is a solution based on the nightly feature <a href=\"https://github.com/rust-lang/rust/issues/31844\" rel=\"noreferrer\"><em>specialization</em></a>:</p>\n\n<pre><code>#![feature(specialization)]\n\nuse std::fmt::Debug;\n\nstruct A(i32);\n\n#[derive(Debug)]\nstruct B(i32);\n\nstruct Foo&lt;T&gt; {\n    data: T,\n    /* more fields */\n}\n\ntrait Do {\n    fn do_something(&amp;self);\n}\n\nimpl&lt;T&gt; Do for Foo&lt;T&gt; {\n    default fn do_something(&amp;self) {\n        /* ... */\n        println!(\"Success!\");\n    }\n}\n\nimpl&lt;T&gt; Do for Foo&lt;T&gt;\nwhere\n    T: Debug,\n{\n    fn do_something(&amp;self) {\n        /* ... */\n        println!(\"Success on {:?}\", self.data);\n    }\n}\n\nfn main() {\n    let foo = Foo {\n        data: A(3), /* ... */\n    };\n    foo.do_something(); // should call first implementation, because A\n                        // doesn't implement Debug\n\n    let foo = Foo {\n        data: B(2), /* ... */\n    };\n    foo.do_something(); // should call second implementation, because B\n                        // does implement Debug\n}\n</code></pre>\n\n<p>The first step is to create a trait which defines <code>do_something(&amp;self)</code>. Now, we define two <code>impl</code>s of this trait for <code>Foo&lt;T&gt;</code>: a generic \"parent\" <code>impl</code> which is implemented for all <code>T</code> and a specialized \"child\" <code>impl</code> which is only implemented for the subset where <code>T</code> implements <code>Debug</code>. The child <code>impl</code> may specialize items from the parent <code>impl</code>. These items we want to specialize need to be marked with the <code>default</code> keyword in the parent <code>impl</code>. In your example, we want to specialize <code>do_something</code>.</p>\n"}], "owner": {"reputation": 193, "user_id": 6606270, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-usgivvoQ9v0/AAAAAAAAAAI/AAAAAAAADAw/7h5HCZuxWMo/photo.jpg?sz=128", "display_name": "Kevin Del Castillo Ramirez", "link": "https://stackoverflow.com/users/6606270/kevin-del-castillo-ramirez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 491, "favorite_count": 0, "accepted_answer_id": 51142261, "answer_count": 1, "score": 4, "last_activity_date": 1530565714, "creation_date": 1530553100, "last_edit_date": 1530554293, "question_id": 51141200, "link": "https://stackoverflow.com/questions/51141200/how-can-i-implement-a-function-differently-depending-on-if-a-generic-type-implem", "title": "How can I implement a function differently depending on if a generic type implements a trait or not?", "body": "<p>I'd like to make the implementation of <code>do_something</code> conditional based on if the generic type <code>T</code> implements <code>Debug</code> or not. Is there any way to do something like this?</p>\n\n<pre><code>struct A(i32);\n\n#[derive(Debug)]\nstruct B(i32);\n\nstruct Foo&lt;T&gt; {\n    data: T,\n    /* more fields */\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    fn do_something(&amp;self) {\n        /* ... */\n        println!(\"Success!\");\n    }\n\n    fn do_something(&amp;self)\n    where\n        T: Debug,\n    {\n        /* ... */\n        println!(\"Success on {:?}\", self.data);\n    }\n}\n\nfn main() {\n    let foo = Foo {\n        data: A(3), /* ... */\n    };\n    foo.do_something(); // should call first implementation, because A\n                        // doesn't implement Debug\n\n    let foo = Foo {\n        data: B(2), /* ... */\n    };\n    foo.do_something(); // should call second implementation, because B\n                        // does implement Debug\n}\n</code></pre>\n\n<p>I think one way to do this is to create a trait where we have to define <code>do_something(&amp;Self)</code>, but I'm not sure. My code snippet is what I will try first.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530547301, "post_id": 51139753, "comment_id": 89263925, "body": "Are you trying to <i>combine</i> the types or are you trying to <i>transform</i> them?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530547358, "post_id": 51139753, "comment_id": 89263959, "body": "<i>a common trait</i> \u2014 have you tried this? What problems did you experience while attempting it? Have you read <a href=\"https://doc.rust-lang.org/book/second-edition/ch10-02-traits.html\" rel=\"nofollow noreferrer\">the book chapter on traits</a>?"}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530550301, "post_id": 51139753, "comment_id": 89265280, "body": "I have values of both types and need to decide if I transform one type in another or create a third type and convert both of them. I am new to Rust and do not know all the options. Are traits the idiomatic option in this case?"}], "answers": [{"tags": [], "owner": {"reputation": 694, "user_id": 7033869, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-qhp8umXBLiA/AAAAAAAAAAI/AAAAAAAAAAA/faBbkZ-N7fw/photo.jpg?sz=128", "display_name": "Francois Mockers", "link": "https://stackoverflow.com/users/7033869/francois-mockers"}, "is_accepted": true, "score": 1, "last_activity_date": 1530571501, "creation_date": 1530571501, "answer_id": 51144547, "question_id": 51139753, "link": "https://stackoverflow.com/questions/51139753/how-to-combine-types-from-different-libraries-in-rust/51144547#51144547", "title": "How to combine types from different libraries in Rust?", "body": "<p>Looking at the doc of <a href=\"https://docs.rs/stdweb/*/stdweb/enum.Value.html\" rel=\"nofollow noreferrer\"><code>stdweb::Value</code></a>, it seems they have you covered!</p>\n\n<p>It implements <a href=\"https://docs.rs/stdweb/*/stdweb/enum.Value.html#impl-TryFrom%3CJsonValue%3E\" rel=\"nofollow noreferrer\"><code>TryFrom&lt;JsonValue&gt;</code></a>, with <code>JsonValue</code> being an alias of <code>serde_json::Value</code>, so this lets you converts from <code>serde_json::Value</code> to <code>stdweb::Value</code>.</p>\n\n<p>It implements <a href=\"https://docs.rs/stdweb/*/stdweb/enum.Value.html?search=#impl-Serialize\" rel=\"nofollow noreferrer\"><code>Serialize</code></a>, and <a href=\"https://docs.serde.rs/serde_json/fn.to_value.html\" rel=\"nofollow noreferrer\"><code>serde_json::to_value</code></a> lets you convert any type that implements <code>Serialize</code> to a <code>serde_json::Value</code></p>\n\n<p>So this should work:</p>\n\n<pre><code>let json_value: serde_json::Value = json!(\"my value\");\nprintln!(\"{:#?}\", json_value);\n\nlet stdweb_value: stdweb::Value = stdweb::Value::try_from(json_value).unwrap();\nprintln!(\"{:#?}\", stdweb_value);\n\nlet json_value_again: serde_json::Value = serde_json::to_value(stdweb_value).unwrap();\nprintln!(\"{:#?}\", json_value_again);\n</code></pre>\n"}], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 51144547, "answer_count": 1, "score": 0, "last_activity_date": 1530571501, "creation_date": 1530546527, "last_edit_date": 1530547278, "question_id": 51139753, "link": "https://stackoverflow.com/questions/51139753/how-to-combine-types-from-different-libraries-in-rust", "title": "How to combine types from different libraries in Rust?", "body": "<p>I am using the the Rust libraries <a href=\"https://github.com/koute/stdweb\" rel=\"nofollow noreferrer\">swtweb</a> (to interface with JavaScript) and <a href=\"https://github.com/serde-rs/json\" rel=\"nofollow noreferrer\">serde-json</a> (to work with JSON). Both have a <code>Value</code> type to represent JavaScript objects that are very similar: </p>\n\n<p><a href=\"https://github.com/koute/stdweb/blob/master/src/webcore/value.rs\" rel=\"nofollow noreferrer\">swtweb's <code>Value</code></a>: </p>\n\n<pre><code>#[derive(Clone, PartialEq, Debug)]\npub enum Value {\n    Undefined,\n    Null,\n    Bool(bool),\n    Number(Number),\n    Symbol(Symbol),\n    String(String),\n    Reference(Reference)\n}\n</code></pre>\n\n<p>and <a href=\"https://github.com/serde-rs/json/blob/master/src/value/mod.rs\" rel=\"nofollow noreferrer\">serde-json's <code>Value</code></a>:</p>\n\n<pre><code>#[derive(Clone, PartialEq)]\npub enum Value {\n    Null,\n    Bool(bool),\n    Number(Number),\n    String(String),\n    Array(Vec&lt;Value&gt;),\n    Object(Map&lt;String, Value&gt;),\n}\n</code></pre>\n\n<p>What is an approach to transform instances of one type to another? Is it possible to derive a common trait without modifying the libraries?</p>\n"}, {"tags": ["docker", "rust"], "answers": [{"tags": [], "owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "is_accepted": true, "score": 9, "last_activity_date": 1530546704, "last_edit_date": 1530546704, "creation_date": 1530539849, "answer_id": 51137905, "question_id": 51137904, "link": "https://stackoverflow.com/questions/51137904/cannot-create-new-rust-project-with-docker-could-not-determine-the-current-use/51137905#51137905", "title": "Cannot create new Rust project with Docker: &quot;could not determine the current user&quot;", "body": "<p>Forwarding the <code>$USER</code> environment variable from my machine seems to do the trick:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>docker run -it --rm -e USER=$USER -v \"$PWD\":/app -w /app rust:1.27.0-slim-stretch cargo new project --bin\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2174, "user_id": 7127824, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cde3b677ba36e4e191116a5f13dddbd2?s=128&d=identicon&r=PG&f=1", "display_name": "techkuz", "link": "https://stackoverflow.com/users/7127824/techkuz"}, "is_accepted": false, "score": 0, "last_activity_date": 1576660913, "last_edit_date": 1576660913, "creation_date": 1576659854, "answer_id": 59388605, "question_id": 51137904, "link": "https://stackoverflow.com/questions/51137904/cannot-create-new-rust-project-with-docker-could-not-determine-the-current-use/59388605#59388605", "title": "Cannot create new Rust project with Docker: &quot;could not determine the current user&quot;", "body": "<p>If you need to fix this inside the container, run:\n<code>$ export USER=yourname</code></p>\n"}], "owner": {"reputation": 4415, "user_id": 2230347, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/wrVIW.jpg?s=128&g=1", "display_name": "Will Squire", "link": "https://stackoverflow.com/users/2230347/will-squire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1776, "favorite_count": 0, "accepted_answer_id": 51137905, "answer_count": 2, "score": 3, "last_activity_date": 1576660913, "creation_date": 1530539849, "last_edit_date": 1530546656, "question_id": 51137904, "link": "https://stackoverflow.com/questions/51137904/cannot-create-new-rust-project-with-docker-could-not-determine-the-current-use", "title": "Cannot create new Rust project with Docker: &quot;could not determine the current user&quot;", "body": "<p>Following the <a href=\"https://hub.docker.com/_/rust/\" rel=\"nofollow noreferrer\">Docker documentation for Rust</a>, I can't create a new project using <code>cargo new</code> without getting <code>could not determine the current user, please set $USER</code>. Here's the command I'm using:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>docker run -it --rm -v \"$PWD\":/app -w /app rust:1.27.0-slim-stretch cargo new project --bin\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1530539421, "post_id": 51137704, "comment_id": 89259469, "body": "What problem are you even trying to solve?"}, {"owner": {"reputation": 12066, "user_id": 3924118, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/abb01e1c2a8e3d9e1534dca14b19b3d8?s=128&d=identicon&r=PG&f=1", "display_name": "nbro", "link": "https://stackoverflow.com/users/3924118/nbro"}, "edited": false, "score": 0, "creation_date": 1530539471, "post_id": 51137704, "comment_id": 89259504, "body": "&quot;I can&#39;t just define RESULTS constants because I&#39;d have multiple constants with the same name, which is forbidden.&quot;, what?"}, {"owner": {"reputation": 157, "user_id": 8004264, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/71a051711d83b297520f1b0c1c10f742?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Pa&#223;lick", "link": "https://stackoverflow.com/users/8004264/timon-pa%c3%9flick"}, "edited": false, "score": 0, "creation_date": 1530539762, "post_id": 51137704, "comment_id": 89259703, "body": "These compile time constants include all possible factorial results for all built-in integers."}, {"owner": {"reputation": 157, "user_id": 8004264, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/71a051711d83b297520f1b0c1c10f742?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Pa&#223;lick", "link": "https://stackoverflow.com/users/8004264/timon-pa%c3%9flick"}, "edited": false, "score": 0, "creation_date": 1530539810, "post_id": 51137704, "comment_id": 89259734, "body": "I want to make it a library so that I don&#39;t have to type these hardcoded values out again and again. And to get used to Rust, cargo and libraries."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1530539899, "post_id": 51137704, "comment_id": 89259796, "body": "Please add to your question, that you don&#39;t want to return a <code>const [i8; 6]</code> but let the function evaluate at compile time."}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 3, "last_activity_date": 1592398247, "last_edit_date": 1592398247, "creation_date": 1530539444, "answer_id": 51137784, "question_id": 51137704, "link": "https://stackoverflow.com/questions/51137704/how-to-return-a-const-value/51137784#51137784", "title": "How to return a const value?", "body": "<p>In case you want to return a immutable variable, you have to omit the <code>const</code>. In Rust, variables are immutable by default. This is similar to declaring everything <code>const</code> in C++. You can opt out of this with introducing mutability. </p>\n\n<pre><code>pub fn results() -&gt; [i8; 6] {\n    unimplemented!()\n}\n</code></pre>\n\n<p>For further information see the <a href=\"https://doc.rust-lang.org/book/second-edition/ch03-01-variables-and-mutability.html\" rel=\"nofollow noreferrer\">official book</a>:</p>\n\n<blockquote>\n  <p>By default variables are immutable. This is one of many nudges Rust gives you to write your code in a way that takes advantage of the safety and easy concurrency that Rust offers. However, you still have the option to make your variables mutable. Let\u2019s explore how and why Rust encourages you to favor immutability and why sometimes you might want to opt out.</p>\n</blockquote>\n\n<p>If you want to make your function evaluated at compile time, you need the <a href=\"https://doc.rust-lang.org/nightly/unstable-book/language-features/const-fn.html\" rel=\"nofollow noreferrer\"><code>const_fn</code></a> feature, which is still under development. However, it's stable enough to do what you want:</p>\n\n<pre><code>pub const fn results() -&gt; [i8; 6] {\n    [1, 1, 2, 6, 24, 120] // 720 is too large for i8.\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 157, "user_id": 8004264, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/71a051711d83b297520f1b0c1c10f742?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Pa&#223;lick", "link": "https://stackoverflow.com/users/8004264/timon-pa%c3%9flick"}, "edited": false, "score": 0, "creation_date": 1530557304, "post_id": 51141361, "comment_id": 89268368, "body": "I wanted to use functions so that the type could maybe be deduced. But I guess I&#39;ll do it like that until <code>const fn</code> becomes stable."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 157, "user_id": 8004264, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/71a051711d83b297520f1b0c1c10f742?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Pa&#223;lick", "link": "https://stackoverflow.com/users/8004264/timon-pa%c3%9flick"}, "edited": false, "score": 1, "creation_date": 1530557742, "post_id": 51141361, "comment_id": 89268544, "body": "@TimonPa&#223;lick <i>the type could maybe be deduced</i> \u2014what type deduction? There&#39;s exactly as many explicit types in this answer as your proposed code. <a href=\"https://stackoverflow.com/q/31609137/155423\">Rust does not have inference of top-level items</a>."}, {"owner": {"reputation": 157, "user_id": 8004264, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/71a051711d83b297520f1b0c1c10f742?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Pa&#223;lick", "link": "https://stackoverflow.com/users/8004264/timon-pa%c3%9flick"}, "edited": false, "score": 0, "creation_date": 1530558412, "post_id": 51141361, "comment_id": 89268844, "body": "Thank you, I did not know that. I&#39;m used to the C++ type system."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1530553857, "creation_date": 1530553857, "answer_id": 51141361, "question_id": 51137704, "link": "https://stackoverflow.com/questions/51137704/how-to-return-a-const-value/51141361#51141361", "title": "How to return a const value?", "body": "<blockquote>\n  <p>get an array of all possible factorial values at compile time</p>\n</blockquote>\n\n<p>Just declare constant values:</p>\n\n<pre><code>pub const RESULTS_I8: [i8; 6] = [1, 1, 2, 6, 24, 120];\n\npub const RESULTS_I32: [i32; 13] = [\n    1,\n    1,\n    2,\n    6,\n    24,\n    120,\n    720,\n    5_040,\n    40_320,\n    362_880,\n    3_628_800,\n    39_916_800,\n    479_001_600,\n];\n</code></pre>\n\n<p>There's <em>no reason</em> to involve a function at all because there's no computation needed!</p>\n"}], "owner": {"reputation": 157, "user_id": 8004264, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/71a051711d83b297520f1b0c1c10f742?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Pa&#223;lick", "link": "https://stackoverflow.com/users/8004264/timon-pa%c3%9flick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 559, "favorite_count": 0, "accepted_answer_id": 51141361, "answer_count": 2, "score": -2, "last_activity_date": 1592398247, "creation_date": 1530539193, "last_edit_date": 1531050956, "question_id": 51137704, "link": "https://stackoverflow.com/questions/51137704/how-to-return-a-const-value", "title": "How to return a const value?", "body": "<p>I want to write a small factorial library. Please look at the code inside the main module of the library:</p>\n\n<pre><code>pub fn results() -&gt; const [i8; 6] { [\n      1,\n      1,\n      2,\n      6,\n     24,\n    120,\n    //720 is too large for i8.\n] }\n\npub fn results() -&gt; const [i32; 13] { [\n              1,\n              1,\n              2,\n              6,\n             24,\n            120,\n            720,\n          5_040,\n         40_320,\n        362_880,\n      3_628_800,\n     39_916_800,\n    479_001_600,\n    //6_227_020_800 is too large for i32.\n] }\n</code></pre>\n\n<p>It gives me this error for the return type of the first function:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected type, found keyword `const`\n --&gt; src/main.rs:1:21\n  |\n1 | pub fn results() -&gt; const [i8; 6] { [\n  |                     ^^^^^\n</code></pre>\n\n<p>The goal is to get an array of all possible factorial values at compile time.</p>\n"}, {"tags": ["linked-list", "rust", "singly-linked-list"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1530529499, "post_id": 51134192, "comment_id": 89253581, "body": "Why do you use <code>impl LinkedList&lt;i64&gt;</code> instead of <code>T</code>?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1530529539, "post_id": 51134192, "comment_id": 89253601, "body": "Even better: provide a playground link to play with for us :)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1530529827, "post_id": 51134192, "comment_id": 89253744, "body": "Possible duplicate: <a href=\"https://stackoverflow.com/questions/41653148/singly-linked-list-in-rust\" title=\"singly linked list in rust\">stackoverflow.com/questions/41653148/singly-linked-list-in-r&zwnj;&#8203;ust</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1530529877, "post_id": 51134192, "comment_id": 89253773, "body": "Also please see: <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\">cglab.ca/~abeinges/blah/too-many-lists/book</a> to get some inspiration"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1530531796, "post_id": 51134192, "comment_id": 89254906, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/41653148/singly-linked-list-in-rust\">Singly-Linked List in Rust</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530546319, "post_id": 51134192, "comment_id": 89263433, "body": "I don&#39;t think &quot;Singly-Linked List in Rust&quot; is the best duplicate because it doesn&#39;t cover OPs error message. There are plenty of other questions that <i>do</i> explain that error though..."}, {"owner": {"reputation": 169, "user_id": 7584077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc90486d17862893ad21a3d9936216bc?s=128&d=identicon&r=PG&f=1", "display_name": "Ashniu123", "link": "https://stackoverflow.com/users/7584077/ashniu123"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530547218, "post_id": 51134192, "comment_id": 89263880, "body": "I am pretty sure it isn&#39;t a duplicate. As for @Shepmaster, I couldn&#39;t find an answer which helps me solve the borrow problem when used in a loop."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1530553319, "last_edit_date": 1530553319, "creation_date": 1530548851, "answer_id": 51140277, "question_id": 51134192, "link": "https://stackoverflow.com/questions/51134192/deleting-a-node-from-singly-linked-list-has-the-error-cannot-move-out-of-borrow/51140277#51140277", "title": "Deleting a node from singly linked list has the error &quot;cannot move out of borrowed content&quot;", "body": "<p>Before you start, go read <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\"><em>Learning Rust With Entirely Too Many Linked Lists</em></a>. People think that linked lists are <em>easy</em> because they've been taught them in languages that either don't care if you introduce memory unsafety or completely take away that agency from the programmer.</p>\n\n<p>Rust does neither, which means that you have to think about things you might never have thought of before.</p>\n\n<hr>\n\n<p>There are a number of issues with your code. The one that you ask about, \"cannot move out of borrowed content\" is already well-covered by numerous other questions, so there's no reason to restate all those good answers:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28158738/155423\">Cannot move out of borrowed content</a></li>\n<li><a href=\"https://stackoverflow.com/q/28258548/155423\">Cannot move out of borrowed content when trying to transfer ownership</a></li>\n<li><a href=\"https://stackoverflow.com/q/43997415/155423\">error[E0507]: Cannot move out of borrowed content</a></li>\n</ul>\n\n<p>TL;DR: You are attempting to move ownership of <code>next</code> from out of a reference; you cannot.</p>\n\n<blockquote>\n<pre><code>p.next = c.next;\n</code></pre>\n</blockquote>\n\n<p>You are attempting to modify an immutable reference:</p>\n\n<blockquote>\n<pre><code>let mut head = &amp;self.head;\n</code></pre>\n</blockquote>\n\n<p>You allow for people to remove one <strong>past</strong> the end, which doesn't make sense to me:</p>\n\n<blockquote>\n<pre><code>if index &gt;= self.len()\n</code></pre>\n</blockquote>\n\n<p>You iterate the <em>entire tree</em> not once, but <strong>twice</strong> before iterating it again to perform the removal:</p>\n\n<blockquote>\n<pre><code>if self.len() == 0\nif index &gt;= self.len()\n</code></pre>\n</blockquote>\n\n<hr>\n\n<p>All of that pales in comparison to the fact that your algorithm is flawed in the eyes of Rust because you attempt to introduce <em>mutable aliasing</em>. If your code were able to compile, you'd have a mutable reference to <code>previous</code> as well as a mutable reference to <code>current</code>. However, you can get a mutable reference to <code>current</code> from <code>previous</code>. This would allow you to break Rust's memory safety guarantees!</p>\n\n<p>Instead, you can only keep track of <code>current</code> and, when the right index is found, break it apart and move the pieces:</p>\n\n<pre><code>fn remove(&amp;mut self, index: usize) -&gt; T {\n    self.remove_x(index)\n        .unwrap_or_else(|| panic!(\"index {} out of range\", index))\n}\n\nfn remove_x(&amp;mut self, mut index: usize) -&gt; Option&lt;T&gt; {\n    let mut head = &amp;mut self.head;\n\n    while index &gt; 0 {\n        head = match { head }.as_mut() {\n            Some(n) =&gt; &amp;mut n.next,\n            None =&gt; return None,\n        };\n        index -= 1;\n    }\n\n    match head.take().map(|x| *x) {\n        Some(Node { data, next }) =&gt; {\n            *head = next;\n            Some(data)\n        }\n        None =&gt; None,\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a></li>\n<li><a href=\"https://stackoverflow.com/q/42264041/155423\">How do I get an owned value out of a `Box`?</a></li>\n</ul>\n\n<hr>\n\n<blockquote>\n  <p><a href=\"https://play.rust-lang.org/?gist=a33d0e58040dfe071feed4389d382076&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground Link</a> for more info.</p>\n</blockquote>\n\n<p>There are numerous problems with the rest of your code, such as the fact that the result of your <code>insert</code> method is unlike any I've ever seen before.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=7a8fe43dae182a166a2357a231f3a4cc&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">How I'd write it</a>.</p>\n"}], "owner": {"reputation": 169, "user_id": 7584077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc90486d17862893ad21a3d9936216bc?s=128&d=identicon&r=PG&f=1", "display_name": "Ashniu123", "link": "https://stackoverflow.com/users/7584077/ashniu123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 218, "favorite_count": 1, "accepted_answer_id": 51140277, "answer_count": 1, "score": 0, "last_activity_date": 1530553319, "creation_date": 1530527698, "last_edit_date": 1530546951, "question_id": 51134192, "link": "https://stackoverflow.com/questions/51134192/deleting-a-node-from-singly-linked-list-has-the-error-cannot-move-out-of-borrow", "title": "Deleting a node from singly linked list has the error &quot;cannot move out of borrowed content&quot;", "body": "<p>I am making a singly-linked list. When you delete a node, the previous node's <code>next</code> should become the current node's <code>next</code> (<code>prev-&gt;next = curr-&gt;next;</code>) and return <code>data</code> if the index matches. Otherwise, the previous node becomes the current node and the current node becomes the next node (<code>prev = curr; curr = curr-&gt;next;</code>):</p>\n\n<pre><code>struct Node&lt;T&gt; {\n    data: T,\n    next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nstruct LinkedList&lt;T&gt; {\n    head: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nimpl LinkedList&lt;i64&gt; {\n    fn remove(&amp;mut self, index: usize) -&gt; i64 {\n        if self.len() == 0 {\n            panic!(\"LinkedList is empty!\");\n        }\n        if index &gt;= self.len() {\n            panic!(\"Index out of range: {}\", index);\n        }\n        let mut count = 0;\n        let mut head = &amp;self.head;\n        let mut prev: Option&lt;Box&lt;Node&lt;i64&gt;&gt;&gt; = None;\n        loop {\n            match head {\n                None =&gt; {\n                    panic!(\"LinkedList is empty!\");\n                }\n                Some(c) =&gt; {\n                    // I have borrowed here\n                    if count == index {\n                        match prev {\n                            Some(ref p) =&gt; {\n                                p.next = c.next;\n                                //       ^ cannot move out of borrowed content\n                            }\n                            _ =&gt; continue,\n                        }\n                        return c.data;\n                    } else {\n                        count += 1;\n                        head = &amp;c.next;\n                        prev = Some(*c);\n                        //          ^^ cannot move out of borrowed content\n                    }\n                }\n            }\n        }\n    }\n\n    fn len(&amp;self) -&gt; usize {\n        unimplemented!()\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0594]: cannot assign to field `p.next` of immutable binding\n  --&gt; src/main.rs:31:33\n   |\n30 |                             Some(ref p) =&gt; {\n   |                                  ----- consider changing this to `ref mut p`\n31 |                                 p.next = c.next;\n   |                                 ^^^^^^^^^^^^^^^ cannot mutably borrow field of immutable binding\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:31:42\n   |\n31 |                                 p.next = c.next;\n   |                                          ^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:40:37\n   |\n40 |                         prev = Some(*c);\n   |                                     ^^ cannot move out of borrowed content\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a33d0e58040dfe071feed4389d382076&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground Link</a> for more info.</p>\n\n<p>How can I do this? Is my approach wrong?</p>\n"}, {"tags": ["function", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1530518023, "post_id": 51131408, "comment_id": 89247409, "body": "This does not work at the moment. See <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530518347, "post_id": 51131408, "comment_id": 89247542, "body": "True, it doesn&#39;t work as a compile time constant. It does work as the <a href=\"https://play.rust-lang.org/?gist=1c8d952c9bed040bf58d39b6d28880a2&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">general syntax for accessing associated constants</a>."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 0, "last_activity_date": 1530518004, "creation_date": 1530518004, "answer_id": 51131408, "question_id": 51131229, "link": "https://stackoverflow.com/questions/51131229/how-to-use-associated-constants-to-define-the-length-of-an-array/51131408#51131408", "title": "How to use associated constants to define the length of an array?", "body": "<p>To access an associated constant, you need to explicitly say which trait it is coming from, using this slightly cumbersome syntax: <code>&lt;T as ToNetEnt&gt;::NET_SIZE</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530519008, "post_id": 51131542, "comment_id": 89247862, "body": "This is correct; a lot of work has been put into associated consts and const generics and it&#39;s hard to keep track, but <code>T::NET_SIZE</code> works just fine outside of the array declaration."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530519091, "post_id": 51131542, "comment_id": 89247910, "body": "I think everyone is looking forward for const generics. This will simplify so many things..."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530520075, "post_id": 51131542, "comment_id": 89248371, "body": "Cool; I&#39;m also not sure about your first statement - IMO <code>T::NET_SIZE</code> should work just as fine as <code>&lt;T as ToNetEnt&gt;::NET_SIZE</code> and outside of array lengths it worked for me in the playground."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530520316, "post_id": 51131542, "comment_id": 89248511, "body": "Since neither of them are working, I expected <code>&lt;T as ToNetEnt&gt;::NET_SIZE</code> to be more clear. The linked comment on GitHub also uses this syntax, which has strengthened my opinion. I almost always use <code>&lt;T as Bar&gt;::</code> in associative types. Is this not needed in const associative types?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1530523244, "post_id": 51131542, "comment_id": 89250046, "body": "I only mean that it <i>might</i> work, but who knows? We can only be certain when it lands."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 3, "last_activity_date": 1530519771, "last_edit_date": 1530519771, "creation_date": 1530518592, "answer_id": 51131542, "question_id": 51131229, "link": "https://stackoverflow.com/questions/51131229/how-to-use-associated-constants-to-define-the-length-of-an-array/51131542#51131542", "title": "How to use associated constants to define the length of an array?", "body": "<p>At time of writing this is not possible. But let's first fix your code:</p>\n\n<pre><code>pub fn req&lt;T: ToNetEnt&gt;(&amp;self) -&gt; T {\n    let buf: [u8; &lt;T as ToNetEnt&gt;::NET_SIZE];\n    ...\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This should be the right syntax, but does not compile at the moment: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `T: ToNetEnt` is not satisfied\n --&gt; src/main.rs:6:19\n  |\n6 |     let buf: [u8; &lt;T as ToNetEnt&gt;::NET_SIZE];\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ToNetEnt` is not implemented for `T`\n  |\n  = help: consider adding a `where T: ToNetEnt` bound\n</code></pre>\n\n<p>which is simply a <strong>wrong</strong> error message to the problem. See <a href=\"https://github.com/rust-lang/rust/issues/29646#issuecomment-366146434\" rel=\"nofollow noreferrer\">this comment on GitHub</a>:</p>\n\n<blockquote>\n  <p>[U]sing an associated const as an array size does not appear to work:</p>\n\n<pre><code>pub trait Can {\n    const SIZE: usize;\n}\n\nfn f&lt;T: Can&gt;(t: T) {\n    // error[E0277]: the trait bound `T: Can` is not satisfied\n    let x = [0u8; &lt;T as Can&gt;::SIZE];\n}\n</code></pre>\n  \n  <p>There error message is clearly wrong, so this is either a bug in <code>rustc</code> or unimplemented functionality resulting in a bogus error message. </p>\n</blockquote>\n\n<p>You can workaround this when defining the <code>const NET_SIZE</code> in your struct directly.</p>\n\n<p>You can read more about this at the GitHub issue for this specific bug: <a href=\"https://github.com/rust-lang/rust/issues/43408\" rel=\"nofollow noreferrer\">Array lengths don't support generic type parameters (#43408)</a>.</p>\n"}], "owner": {"reputation": 31, "user_id": 8378486, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60a41dc6ee8652bdf47c6b737d80188?s=128&d=identicon&r=PG&f=1", "display_name": "Weline", "link": "https://stackoverflow.com/users/8378486/weline"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "closed_date": 1530539691, "accepted_answer_id": 51131542, "answer_count": 2, "score": 2, "last_activity_date": 1530539651, "creation_date": 1530517238, "last_edit_date": 1530539651, "question_id": 51131229, "link": "https://stackoverflow.com/questions/51131229/how-to-use-associated-constants-to-define-the-length-of-an-array", "closed_reason": "Duplicate", "title": "How to use associated constants to define the length of an array?", "body": "<p>I've got a trait which represents an entity that can be sent through UDP sockets:</p>\n\n<pre><code>pub trait ToNetEnt {\n    const NET_SIZE: usize;\n\n    fn from_net(data: &amp;[u8]) -&gt; Self;\n    fn to_net(&amp;self) -&gt; &amp;[u8];\n}\n</code></pre>\n\n<p>Though there is an associated constant <code>NET_SIZE</code>, I couldn't use it in methods:</p>\n\n<pre><code>pub fn req&lt;T: ToNetEnt&gt;(&amp;self) -&gt; T {\n    let buf: [u8; T::NET_SIZE];\n}\n</code></pre>\n\n<p>because it causes this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no associated item named `NET_SIZE` found for type `T` in the current scope\n  --&gt; src/main.rs:10:23\n   |\n10 |         let buf: [u8; T::NET_SIZE];\n   |                       ^^^^^^^^^^^ associated item not found in `T`\n   |\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `NET_SIZE`, perhaps you need to implement it:\n           candidate #1: `ToNetEnt`\n</code></pre>\n\n<p>Can I use an associated constant in this context?</p>\n"}, {"tags": ["rust", "type-mismatch"], "answers": [{"tags": [], "owner": {"reputation": 39499, "user_id": 351705, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/5vFwo.jpg?s=128&g=1", "display_name": "Yury Tarabanko", "link": "https://stackoverflow.com/users/351705/yury-tarabanko"}, "is_accepted": false, "score": 3, "last_activity_date": 1530538926, "last_edit_date": 1530538926, "creation_date": 1530509893, "answer_id": 51129647, "question_id": 51129285, "link": "https://stackoverflow.com/questions/51129285/type-mismatch-when-returning-from-inside-if-statement/51129647#51129647", "title": "Type mismatch when returning from inside if statement", "body": "<p><code>if-else</code> is an assignable expression that has a type. Omitting <code>else {}</code> is equivalent to <code>if { ... } else { () }</code>. If you assign that value to a variable:</p>\n\n<pre><code>// would not compile\nlet result = if x == 5 {\n    5\n};\n</code></pre>\n\n<p>it is equivalent to writing:</p>\n\n<pre><code>let result = if x == 5 {\n    5\n} else {\n    ()\n};\n</code></pre>\n\n<p>Making the type of <code>result</code> either integer or unit, which is invalid.</p>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 5, "last_activity_date": 1530538841, "last_edit_date": 1530538841, "creation_date": 1530512089, "answer_id": 51130041, "question_id": 51129285, "link": "https://stackoverflow.com/questions/51129285/type-mismatch-when-returning-from-inside-if-statement/51130041#51130041", "title": "Type mismatch when returning from inside if statement", "body": "<p>In Rust, nearly everything is an expression, including <code>if</code>-<code>else</code>. <code>if</code> generates a value, but there is no value for the expression if the expression fails (i.e. <code>x != 5</code>). When putting the <code>6</code> into the else block, the <code>if</code>-<code>else</code> statement returns an integral (which will be an <code>i32</code> due to the return type). You can suppress the statement's value with a semicolon.</p>\n\n<p><code>return 5</code> (note, that there is no semicolon) is also a statement, which results in <code>()</code>. Now the <code>if</code> expression always returns <code>()</code>, which is fine.</p>\n\n<p>Idiomatically you should prefer the <code>else</code> variant, so you can omit the <code>return</code>:</p>\n\n<pre><code>fn testing() -&gt; i32 {\n    let x = 5;\n    if x == 5 {\n        5\n    } else {\n        6\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 10019567, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/l4D4m.png?s=128&g=1", "display_name": "Alsafi", "link": "https://stackoverflow.com/users/10019567/alsafi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 321, "favorite_count": 0, "closed_date": 1530538791, "accepted_answer_id": 51130041, "answer_count": 2, "score": 3, "last_activity_date": 1530538926, "creation_date": 1530507052, "last_edit_date": 1530512449, "question_id": 51129285, "link": "https://stackoverflow.com/questions/51129285/type-mismatch-when-returning-from-inside-if-statement", "closed_reason": "Duplicate", "title": "Type mismatch when returning from inside if statement", "body": "<p>The following code fails to compile:</p>\n\n<pre><code>fn testing() -&gt; i32 {\n    let x = 5;\n    if x == 5 {\n        5\n    }\n    6\n}\n</code></pre>\n\n<p>with this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error E0308: mismatched types. (expected (), found integral variable)\n</code></pre>\n\n<p>If I put an explicit <code>return</code> in front of the <code>5</code>, or if I put the <code>6</code> inside an <code>else</code> block, everything works fine. What exactly is Rust complaining about?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 4, "last_activity_date": 1530513607, "last_edit_date": 1530513607, "creation_date": 1530511026, "answer_id": 51129845, "question_id": 51128929, "link": "https://stackoverflow.com/questions/51128929/can-an-array-length-constant-be-defined-for-a-library-in-another-project/51129845#51129845", "title": "Can an array length constant be defined for a library in another project?", "body": "<p>At time of writing this is not possible. It requires a <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2000-const-generics.md\" rel=\"nofollow noreferrer\">const generic</a> argument:</p>\n\n<pre><code>pub struct MyStruct&lt;const SIZE: usize&gt; {\n    ints: [u32; SIZE]\n}\n</code></pre>\n\n<p>But this is not implemented yet. We expect to land this feature in late 2018.</p>\n"}], "owner": {"reputation": 4689, "user_id": 1755847, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/tTDlX.png?s=128&g=1", "display_name": "manabreak", "link": "https://stackoverflow.com/users/1755847/manabreak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "closed_date": 1530538722, "accepted_answer_id": 51129845, "answer_count": 1, "score": 0, "last_activity_date": 1530538769, "creation_date": 1530503524, "last_edit_date": 1530538769, "question_id": 51128929, "link": "https://stackoverflow.com/questions/51128929/can-an-array-length-constant-be-defined-for-a-library-in-another-project", "closed_reason": "Duplicate", "title": "Can an array length constant be defined for a library in another project?", "body": "<p>I have a library that has a statically-sized array in a struct:</p>\n\n<pre><code>const SIZE: usize = 32;\n\npub struct MyStruct {\n    ints: [u32; SIZE]\n}\n</code></pre>\n\n<p>Can I define the constant <code>SIZE</code> somewhere else? More specifically, can I somehow define it in the executable project that uses this library so that it can be tuned to the needs of that project?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1530474403, "post_id": 51126450, "comment_id": 89237903, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51126450/edit\">edit</a> your question to include it. We cannot tell what the contents of <code>main.rs</code> are, as one example. Ideally, produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530474445, "post_id": 51126450, "comment_id": 89237913, "body": "Also, <b>please</b> read <a href=\"https://doc.rust-lang.org/book/second-edition/ch07-00-modules.html\" rel=\"nofollow noreferrer\">the documentation on modules</a> because it covers the basics around this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530474616, "post_id": 51126450, "comment_id": 89237959, "body": "There are also <a href=\"https://stackoverflow.com/search?q=%5Brust%5D+is%3Aq+%22unresolved+import%22\"><i>numerous</i> questions with the same error message</a>; have you looked at any of these? It&#39;s highly likely that this is a duplicate of one of them."}, {"owner": {"reputation": 47, "user_id": 8677174, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/adef053c044388c85851252e304ac6c6?s=128&d=identicon&r=PG&f=1", "display_name": "justicecurcian", "link": "https://stackoverflow.com/users/8677174/justicecurcian"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530479473, "post_id": 51126450, "comment_id": 89239002, "body": "of course I read documentations on modules, I don&#39;t want to use  [mod functions] because it will search for settings/functions.rs, and it is not i want to."}, {"owner": {"reputation": 47, "user_id": 8677174, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/adef053c044388c85851252e304ac6c6?s=128&d=identicon&r=PG&f=1", "display_name": "justicecurcian", "link": "https://stackoverflow.com/users/8677174/justicecurcian"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530479504, "post_id": 51126450, "comment_id": 89239011, "body": "it is not a duplication, I&#39;ve double-checked"}, {"owner": {"reputation": 47, "user_id": 8677174, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/adef053c044388c85851252e304ac6c6?s=128&d=identicon&r=PG&f=1", "display_name": "justicecurcian", "link": "https://stackoverflow.com/users/8677174/justicecurcian"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530479693, "post_id": 51126450, "comment_id": 89239048, "body": "I already created the minimal example, and it is also most complete. I cannot produce that error on rust playground, because it is linking problem"}, {"owner": {"reputation": 47, "user_id": 8677174, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/adef053c044388c85851252e304ac6c6?s=128&d=identicon&r=PG&f=1", "display_name": "justicecurcian", "link": "https://stackoverflow.com/users/8677174/justicecurcian"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530479755, "post_id": 51126450, "comment_id": 89239064, "body": "@Shepmaster, can you give better advise?"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530480440, "post_id": 51126450, "comment_id": 89239211, "body": "Do your <code>main.rs</code> contains <code>mod functions</code>?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1530522687, "post_id": 51126450, "comment_id": 89249716, "body": "@xiaomifanboy Please read the content behind the many links Shepmaster has provided to you. It is rude to request for more advice after you were given plenty of content to improve your question. The question still doesn&#39;t look complete enough to reproduce the problem."}], "answers": [{"comments": [{"owner": {"reputation": 47, "user_id": 8677174, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/adef053c044388c85851252e304ac6c6?s=128&d=identicon&r=PG&f=1", "display_name": "justicecurcian", "link": "https://stackoverflow.com/users/8677174/justicecurcian"}, "edited": false, "score": 0, "creation_date": 1530525897, "post_id": 51127625, "comment_id": 89251666, "body": "That is what i looked for! Thank you! But can you explain how does it work? This is really confusing. Also, can I remove [mod functions] from main.rs somehow?"}, {"owner": {"reputation": 16753, "user_id": 395287, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/OiGAR.jpg?s=128&g=1", "display_name": "Tim McNamara", "link": "https://stackoverflow.com/users/395287/tim-mcnamara"}, "edited": false, "score": 0, "creation_date": 1530653805, "post_id": 51127625, "comment_id": 89309503, "body": "There&#39;s no need to remove functions that have been imported from another module. Unlike say, Python, only functions that you explicitly re-export are available outside of main"}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 1, "last_activity_date": 1530486514, "creation_date": 1530486514, "answer_id": 51127625, "question_id": 51126450, "link": "https://stackoverflow.com/questions/51126450/rust-import-error/51127625#51127625", "title": "Rust import error", "body": "<p>In your comments, you state:</p>\n\n<blockquote>\n  <p>I don't want to use [mod functions] because it will search for settings/functions.rs, and it is not i want to</p>\n</blockquote>\n\n<p>Have you tried that? Assuming you've declared the module correctly ... this is <em>exactly</em> what you want.</p>\n\n<p>main.rs:</p>\n\n<pre><code>mod functions;\nmod settings;\n\nfn main() { \n    ...\n}\n</code></pre>\n\n<p>settings.rs:</p>\n\n<pre><code>use functions;\n\npub fn something() {\n    functions::some_function_here();\n}\n</code></pre>\n\n<p>If this does not work .. then there is something missing from your problem description.</p>\n"}, {"tags": [], "owner": {"reputation": 16753, "user_id": 395287, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/OiGAR.jpg?s=128&g=1", "display_name": "Tim McNamara", "link": "https://stackoverflow.com/users/395287/tim-mcnamara"}, "is_accepted": false, "score": 0, "last_activity_date": 1530654361, "creation_date": 1530654361, "answer_id": 51163187, "question_id": 51126450, "link": "https://stackoverflow.com/questions/51126450/rust-import-error/51163187#51163187", "title": "Rust import error", "body": "<p>It looks like you're confusing the role of the root namespace. <code>use ::functions;</code> means something slightly different than <code>use functions;</code></p>\n\n<p>Let's consider your project structure:</p>\n\n<pre><code>project\n\u251c\u2500\u2500 src\n|   \u251c\u2500\u2500 settings.rs\n|   \u251c\u2500\u2500 functions.rs\n|   \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 Cargo.toml\n</code></pre>\n\n<p>When you're within <code>settings.rs</code>, the other modules are at the same level, so a <code>use functions;</code> accesses the <code>functions</code> module.</p>\n\n<p>If you do wish to refer to the <code>functions</code> module via the root namespace, then the full path looks like this <code>::project::functions</code> and the <code>use</code> declaration is <code>use ::project::functions;</code>.</p>\n"}], "owner": {"reputation": 47, "user_id": 8677174, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/adef053c044388c85851252e304ac6c6?s=128&d=identicon&r=PG&f=1", "display_name": "justicecurcian", "link": "https://stackoverflow.com/users/8677174/justicecurcian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 0, "accepted_answer_id": 51127625, "answer_count": 2, "score": -4, "last_activity_date": 1530654361, "creation_date": 1530473950, "last_edit_date": 1530474343, "question_id": 51126450, "link": "https://stackoverflow.com/questions/51126450/rust-import-error", "title": "Rust import error", "body": "<p>I have a Rust project made by <code>cargo init</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>dir\n |-src\n    |-main.rs\n    |-settings.rs\n    |-functions.rs\n</code></pre>\n\n<p>I have in <code>settings.rs</code>:</p>\n\n<pre><code>use ::functions;\n</code></pre>\n\n<p>but at compilation I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `functions`\n--&gt; src/settings.rs:3:5\n  |\n3 | use ::functions;\n  |     ^^^^^^^^^^^ no `functions` in the root\n</code></pre>\n"}, {"tags": ["opengl", "rust", "glsl", "fragment-shader", "glium"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1530462676, "post_id": 51124204, "comment_id": 89235086, "body": "Do both <b>and benchmark it</b>."}, {"owner": {"reputation": 2796, "user_id": 6121044, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d36000b5ea58961acf50354041457af9?s=128&d=identicon&r=PG&f=1", "display_name": "Andreas", "link": "https://stackoverflow.com/users/6121044/andreas"}, "edited": false, "score": 0, "creation_date": 1530463797, "post_id": 51124204, "comment_id": 89235351, "body": "In part depends on your quality requirements and circle size, thus how many triangles are required. If hexagons are enough, use hexagons."}, {"owner": {"reputation": 2796, "user_id": 6121044, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d36000b5ea58961acf50354041457af9?s=128&d=identicon&r=PG&f=1", "display_name": "Andreas", "link": "https://stackoverflow.com/users/6121044/andreas"}, "edited": false, "score": 0, "creation_date": 1530463904, "post_id": 51124204, "comment_id": 89235374, "body": "There are also some issues with clipping at fragment shader stage since MSAA stops working, whereas triangle method does not."}, {"owner": {"reputation": 773, "user_id": 9408711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a288a953384d55fc2242d676c4fb7c4f?s=128&d=identicon&r=PG&f=1", "display_name": "aitvann", "link": "https://stackoverflow.com/users/9408711/aitvann"}, "reply_to_user": {"reputation": 2796, "user_id": 6121044, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d36000b5ea58961acf50354041457af9?s=128&d=identicon&r=PG&f=1", "display_name": "Andreas", "link": "https://stackoverflow.com/users/6121044/andreas"}, "edited": false, "score": 0, "creation_date": 1530481029, "post_id": 51124204, "comment_id": 89239323, "body": "@Andreas, the last time I drew circles using triangles and the size of the number of points in the circle directly depended on its radius. that is, if the radius is 32 (pixels), then the number of points is 32. It is important for me not to see the facets."}, {"owner": {"reputation": 489, "user_id": 8138975, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/010caff8536ca6a7b4550c92046213b3?s=128&d=identicon&r=PG&f=1", "display_name": "florent teppe", "link": "https://stackoverflow.com/users/8138975/florent-teppe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530531621, "post_id": 51124204, "comment_id": 89254801, "body": "@Shepmaster even a benchmark can be difficult if you are just drawing circles, since you have no idea where the actual bottleneck of your application is. He could notice a 10% difference that has nothing to do with the actual efficiency of either technique."}, {"owner": {"reputation": 2796, "user_id": 6121044, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d36000b5ea58961acf50354041457af9?s=128&d=identicon&r=PG&f=1", "display_name": "Andreas", "link": "https://stackoverflow.com/users/6121044/andreas"}, "edited": false, "score": 0, "creation_date": 1530554155, "post_id": 51124204, "comment_id": 89266991, "body": "If you absolutely need it pixel-perfect, fragment shader is the way to go"}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1530463671, "post_id": 51124657, "comment_id": 89235321, "body": "This is a comment, not an answer."}, {"owner": {"reputation": 18072, "user_id": 2579738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oXata.png?s=128&g=1", "display_name": "BDL", "link": "https://stackoverflow.com/users/2579738/bdl"}, "edited": false, "score": 1, "creation_date": 1530465620, "post_id": 51124657, "comment_id": 89235727, "body": "Do you have any proof for this claim? Rendering a full-screen quad for each circle doesn&#39;t sound fast. Also note, that only one circle is needed which can be scaled and translated in the vertex shader."}, {"owner": {"reputation": 185, "user_id": 9775923, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c70ce00d59662f812dde08913649c82?s=128&d=identicon&r=PG&f=1", "display_name": "JoeDortman", "link": "https://stackoverflow.com/users/9775923/joedortman"}, "edited": false, "score": 0, "creation_date": 1530477810, "post_id": 51124657, "comment_id": 89238650, "body": "Oh, okay, my bad ^^"}, {"owner": {"reputation": 773, "user_id": 9408711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a288a953384d55fc2242d676c4fb7c4f?s=128&d=identicon&r=PG&f=1", "display_name": "aitvann", "link": "https://stackoverflow.com/users/9408711/aitvann"}, "reply_to_user": {"reputation": 18072, "user_id": 2579738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oXata.png?s=128&g=1", "display_name": "BDL", "link": "https://stackoverflow.com/users/2579738/bdl"}, "edited": false, "score": 0, "creation_date": 1530478351, "post_id": 51124657, "comment_id": 89238772, "body": "@BDL, I&#39;m thinking of making one full-screen quad and drawing all the circles on it. Why do need such a square for each circle?"}, {"owner": {"reputation": 18072, "user_id": 2579738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oXata.png?s=128&g=1", "display_name": "BDL", "link": "https://stackoverflow.com/users/2579738/bdl"}, "edited": false, "score": 0, "creation_date": 1530479506, "post_id": 51124657, "comment_id": 89239012, "body": "If you do it in one quad, you&#39;ll have to do blending (for smooth borders) and depth-testing also in the shader. This could work when only drawing circles. In the general case you&#39;ll have to use image atomic operations for depth testing which I highly doubt are faster then doing the usual geometry rendering."}, {"owner": {"reputation": 2892, "user_id": 2393786, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PGPFl.png?s=128&g=1", "display_name": "Stranger in the Q", "link": "https://stackoverflow.com/users/2393786/stranger-in-the-q"}, "reply_to_user": {"reputation": 18072, "user_id": 2579738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/oXata.png?s=128&g=1", "display_name": "BDL", "link": "https://stackoverflow.com/users/2579738/bdl"}, "edited": false, "score": 0, "creation_date": 1530599336, "post_id": 51124657, "comment_id": 89279756, "body": "@BDL yes, but it was gpu, not CPU work, right? And after that performance depends on gpu power?"}], "tags": [], "owner": {"reputation": 185, "user_id": 9775923, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c70ce00d59662f812dde08913649c82?s=128&d=identicon&r=PG&f=1", "display_name": "JoeDortman", "link": "https://stackoverflow.com/users/9775923/joedortman"}, "is_accepted": false, "score": -2, "last_activity_date": 1530459127, "creation_date": 1530459127, "answer_id": 51124657, "question_id": 51124204, "link": "https://stackoverflow.com/questions/51124204/is-creating-circles-from-triangles-or-drawing-them-with-a-fragment-shader-faster/51124657#51124657", "title": "Is creating circles from triangles or drawing them with a fragment shader faster?", "body": "<p>Well drawing with GPU(shader) should be way faster than making a whole bunch of triangles (if I'm indeed correct myself..)</p>\n"}, {"tags": [], "owner": {"reputation": 2892, "user_id": 2393786, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PGPFl.png?s=128&g=1", "display_name": "Stranger in the Q", "link": "https://stackoverflow.com/users/2393786/stranger-in-the-q"}, "is_accepted": false, "score": 2, "last_activity_date": 1530600551, "last_edit_date": 1530600551, "creation_date": 1530599843, "answer_id": 51148045, "question_id": 51124204, "link": "https://stackoverflow.com/questions/51124204/is-creating-circles-from-triangles-or-drawing-them-with-a-fragment-shader-faster/51148045#51148045", "title": "Is creating circles from triangles or drawing them with a fragment shader faster?", "body": "<p>Faster? </p>\n\n<p>Faster for CPU? </p>\n\n<p>Totally faster? </p>\n\n<p>Nobody knows your environment. Graphics chip can be VERY powerful. \nAnd when you can rationally utilize its power it's possible to you program will be \"faster\"</p>\n\n<p>When you render bucket of triangles your CPU is doing work for prepare geometry parameters, etc, when you render only two triangles per draw call then  work was done on GPU side. \nBut this approach can be harder to implement, because you need to transfer raw circle data (I mean radius and center coordinates) in fragment shader. For small count of circle it's trivial, but not for many. Consider about it.</p>\n\n<p>If you do it with distance field texture, then you must create it on CPU or with different draw call.</p>\n"}], "owner": {"reputation": 773, "user_id": 9408711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a288a953384d55fc2242d676c4fb7c4f?s=128&d=identicon&r=PG&f=1", "display_name": "aitvann", "link": "https://stackoverflow.com/users/9408711/aitvann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 759, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1530600551, "creation_date": 1530455453, "last_edit_date": 1530462659, "question_id": 51124204, "link": "https://stackoverflow.com/questions/51124204/is-creating-circles-from-triangles-or-drawing-them-with-a-fragment-shader-faster", "title": "Is creating circles from triangles or drawing them with a fragment shader faster?", "body": "<p>I use the language Rust and the Glium library. I want to display a large number of circles on the screen, but I can not decide how I'd better do it. </p>\n\n<p>There is an option to create circles from triangles, or I can draw them with a fragment shader, that is, take the distance from the center of each circle to each point on the screen and if it is less than the radius, then paint it in the desired color. For clarity, here is an example of how I draw one circle:</p>\n\n<pre><code>vec2 point = vec2(200.0f, 200.0f);\nfloat dist = distance(point, gl_FragCoord.xy);\n\nif (dist &lt; 200)\n    gl_FragColor = vec4(0.0f, 1.0f, 0.0f, 1.0f);\n</code></pre>\n\n<p>Which method will work faster? Are there options to do it better? The size and color of each circle will change in the run-time.</p>\n"}, {"tags": ["testing", "rust"], "comments": [{"owner": {"reputation": 13, "user_id": 10017511, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bmrMRZl3x1I/AAAAAAAAAAI/AAAAAAAADUM/5SmRQf-Yz8c/photo.jpg?sz=128", "display_name": "user10017511", "link": "https://stackoverflow.com/users/10017511/user10017511"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530456636, "post_id": 51123500, "comment_id": 89233745, "body": "Sorry, I added example ."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 10017511, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bmrMRZl3x1I/AAAAAAAAAAI/AAAAAAAADUM/5SmRQf-Yz8c/photo.jpg?sz=128", "display_name": "user10017511", "link": "https://stackoverflow.com/users/10017511/user10017511"}, "edited": false, "score": 0, "creation_date": 1530505083, "post_id": 51128536, "comment_id": 89242897, "body": "Thank for your quick response!!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1530499282, "creation_date": 1530499282, "answer_id": 51128536, "question_id": 51123500, "link": "https://stackoverflow.com/questions/51123500/is-it-possible-to-run-code-after-all-tests-have-finished/51128536#51128536", "title": "Is it possible to run code after all tests have finished?", "body": "<p>No, the built-in testing framework does not have support for anything like this.</p>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2318-custom-test-frameworks.md\" rel=\"nofollow noreferrer\">RFC 2318, custom test frameworks</a>, has been accepted and is being worked on. Once available, I expect there to be a small explosion in alternate frameworks, many of which are likely to include <code>before</code> / <code>after</code> / <code>around</code> type functionality.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/38253321/155423\">What is a good way of cleaning up after a unit test in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 13, "user_id": 10017511, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bmrMRZl3x1I/AAAAAAAAAAI/AAAAAAAADUM/5SmRQf-Yz8c/photo.jpg?sz=128", "display_name": "user10017511", "link": "https://stackoverflow.com/users/10017511/user10017511"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "accepted_answer_id": 51128536, "answer_count": 1, "score": 1, "last_activity_date": 1530499282, "creation_date": 1530449867, "last_edit_date": 1530499117, "question_id": 51123500, "link": "https://stackoverflow.com/questions/51123500/is-it-possible-to-run-code-after-all-tests-have-finished", "title": "Is it possible to run code after all tests have finished?", "body": "<p>I would like to run a teardown function (i.e. write a log to a file) when all of my tests have finished. In this example, the function would run after both <code>it_works_foo</code> and <code>it_works_bar</code> are complete:</p>\n\n<pre><code>#[test]\nfn it_works_foo() {\n    assert_eq!(1, 1);\n}\n\n#[test]\nfn it_works_bar() {\n    assert_eq!(2, 2);\n}\n</code></pre>\n\n<p>I'm looking for something like <a href=\"https://mochajs.org/\" rel=\"nofollow noreferrer\">Mocha</a>'s <code>after</code> behavior:</p>\n\n<pre><code>describe('hooks', function() {\n  after(function() {\n    // runs after all tests in this block\n  });\n\n  it('it_works_foo', () =&gt; {});\n\n  it('it_works_bar', () =&gt; {});\n});\n</code></pre>\n\n<p>Is this possible?</p>\n"}, {"tags": ["python", "rust", "ffi", "pyo3"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530452106, "post_id": 51123149, "comment_id": 89232585, "body": "<a href=\"http://jakegoulding.com/rust-ffi-omnibus/\" rel=\"nofollow noreferrer\">The Rust FFI Omnibus</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1530539492, "last_edit_date": 1530539492, "creation_date": 1530516008, "answer_id": 51130935, "question_id": 51123149, "link": "https://stackoverflow.com/questions/51123149/what-is-the-best-practice-to-follow-in-order-to-use-python-to-call-functions-fro/51130935#51130935", "title": "What is the best practice to follow in order to use Python to call functions from inside a Rust program?", "body": "<p>Your Rust background process will need to expose some kind of RPC mechanism such as <a href=\"https://crates.io/crates/json_rpc\" rel=\"nofollow noreferrer\">jsonrpc</a> or <a href=\"https://crates.io/crates/rmp-rpc\" rel=\"nofollow noreferrer\">msgpack-rpc</a>.</p>\n\n<p>Then any other application can call into your background process using the same RPC mechanism. For example for Python, there are libraries for <a href=\"https://pypi.org/search/?q=jsonrpc\" rel=\"nofollow noreferrer\">jsonrpc</a> and <a href=\"https://pypi.org/search/?q=msgpack+rpc\" rel=\"nofollow noreferrer\">msgpack-rpc</a>.</p>\n"}], "owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1538055863, "creation_date": 1530446822, "last_edit_date": 1538055863, "question_id": 51123149, "link": "https://stackoverflow.com/questions/51123149/what-is-the-best-practice-to-follow-in-order-to-use-python-to-call-functions-fro", "title": "What is the best practice to follow in order to use Python to call functions from inside a Rust program?", "body": "<p>I want to implement a system which consists of a Python UI and some Rust datastore and functions. \nThe user executes the python code which in turn executes the Rust program in a subprocess.\nI want the Rust program to run in the background, waiting to exchange variables or function calls with the Python UI (for example every time a button is pressed).</p>\n\n<p>My obstacles are:</p>\n\n<ol>\n<li><p>I have tried to make a simple Rust FFI library that can be invoked with ctypes from Python but I don't know how this library will be able to communicate with the compiled rust program that is running on the background.</p></li>\n<li><p>Another approach is to use PyO3 to make a python module using rust. But again I cannot understand how this will cooperate with the rust program to exchange data</p></li>\n</ol>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530444047, "post_id": 51122714, "comment_id": 89230716, "body": "Did you try <code>branch = &quot;master&quot;</code> as a workaround? As time of writing, this should result in the desired revision."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1530450963, "post_id": 51122714, "comment_id": 89232326, "body": "It&#39;s strange that this isn&#39;t working for you. I have used the same syntax with other crates and it works fine for me. I suspect something else must be going on. Can you reproduce this with a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>?"}], "owner": {"reputation": 9, "user_id": 10017273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ba3488f896dfba89b0de3dd39c54b02?s=128&d=identicon&r=PG&f=1", "display_name": "Poddiri", "link": "https://stackoverflow.com/users/10017273/poddiri"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 97, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1530449212, "creation_date": 1530443202, "last_edit_date": 1530449212, "question_id": 51122714, "link": "https://stackoverflow.com/questions/51122714/why-does-rev-have-no-effect-in-cargo", "title": "Why does &quot;rev&quot; have no effect in Cargo?", "body": "<p>In Actix 0.6.1 there's a runtime bug with the error, \"System isn't running\". My <code>Cargo.toml</code> contains this:</p>\n\n<pre><code>actix = \"0.6.1\"\nactix-web = { git = \"https://github.com/actix/actix-web\", version = \"0.7.0-dev\" }\n</code></pre>\n\n<p>However, this fixes it:</p>\n\n<pre><code>actix = { git = \"https://github.com/actix/actix\" }\nactix-web = { git = \"https://github.com/actix/actix-web\", version = \"0.7.0-dev\" }\n</code></pre>\n\n<p>But, even though the latest commit of actix is <code>ad7442905c17585d0047e3f3d1cf2ec79ae4353e</code>, I still see the bug when I try to specify the exact git revision hash:</p>\n\n<pre><code>actix = { git = \"https://github.com/actix/actix\", rev = \"ad7442905c17585d0047e3f3d1cf2ec79ae4353e\" }\nactix-web = { git = \"https://github.com/actix/actix-web\", version = \"0.7.0-dev\" }\n</code></pre>\n\n<p>My question: why doesn't <code>rev = \"ad7442905c17585d0047e3f3d1cf2ec79ae4353e\"</code> fix it, even though  <code>{ git = \"https://github.com/actix/actix\" }</code> is implicitly using <strong>the same</strong> latest commit?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1530439324, "post_id": 51121823, "comment_id": 89229670, "body": "What have you tried? Perhaps <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-path-dependencies\" rel=\"nofollow noreferrer\">reading the documentation would be of use to you?</a>"}, {"owner": {"reputation": 127, "user_id": 4467214, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/I35OW.png?s=128&g=1", "display_name": "Abrar Khan", "link": "https://stackoverflow.com/users/4467214/abrar-khan"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1530441576, "post_id": 51121823, "comment_id": 89230166, "body": "Thanks @Simon , I have used that path = [&#39;path/to/lib&#39;], but the thing is, It is my own local repo so If add this as a dependency so problem with that is I have to copy manually whole code with my co-workers also. And I don&#39;t want to create github link for every crate. Is there anything like I can add my files in the current project, and It will compile only once."}], "answers": [{"tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": true, "score": 2, "last_activity_date": 1530440415, "creation_date": 1530440415, "answer_id": 51122409, "question_id": 51121823, "link": "https://stackoverflow.com/questions/51121823/how-to-use-a-crate-in-another-project-so-it-wont-compile-again/51122409#51122409", "title": "How to use a crate in another project so it won&#39;t compile again?", "body": "<p>There are two possible solutions here.</p>\n\n<h2>Add a dependency to your crate as a relative path:</h2>\n\n<p>Assuming the project structure is the following:</p>\n\n<pre><code>project\n|__hellow_crate\n|__hello_project\n</code></pre>\n\n<p>Then you can alter hellow_project's Cargo.toml file to look like this:</p>\n\n<pre><code>[package]\nname = \"hello_project\"\nversion = \"0.1.0\"\nauthors = [\"John &lt;john@123gmail.com&gt;\"]\n[dependencies]\nhellow_crate = { path = \"../hellow_crate\" }\n</code></pre>\n\n<h2>Use a workspace:</h2>\n\n<p>If <em>hellow_crate</em> is only used by <em>hello_project</em> and won't be used as a dependency for another independent project, it makes sense to include it as part of a workspace.</p>\n\n<p>In that case, the directory structure becomes the following:</p>\n\n<pre><code>hello_project\n|__hellow_crate\n|  |__src\n|  |  |__lib.rs\n|  |__Cargo.toml\n|  |__Cargo.lock\n|__src\n|  |__main.rs\n|__Cargo.lock\n|__Cargo.toml\n</code></pre>\n\n<p>And alter hello_project's Cargo.toml file to look like this:</p>\n\n<pre><code>[package]\nname = \"hello_project\"\nversion = \"0.1.0\"\nauthors = [\"John &lt;john@123gmail.com&gt;\"]\n\n[workspace]\nmembers = [ \"hellow_crate\" ]\n\n[dependencies]\nhellow_crate = { path = \"hellow_crate\" }\n</code></pre>\n\n<p>This has the advantage of making cargo compile all code in a single target directory, and allows you to run all tests of the project and the crate with <code>cargo test --all</code>.</p>\n"}], "owner": {"reputation": 127, "user_id": 4467214, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/I35OW.png?s=128&g=1", "display_name": "Abrar Khan", "link": "https://stackoverflow.com/users/4467214/abrar-khan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 51122409, "answer_count": 1, "score": 0, "last_activity_date": 1530452351, "creation_date": 1530435345, "last_edit_date": 1530452351, "question_id": 51121823, "link": "https://stackoverflow.com/questions/51121823/how-to-use-a-crate-in-another-project-so-it-wont-compile-again", "title": "How to use a crate in another project so it won&#39;t compile again?", "body": "<p>I want to use my hellow_crate inside my hello_project so that the crate will not be recompiled. </p>\n\n<p>This is my crate structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>hellow_crate\n|__src\n|  |__lib.rs\n|__Cargo.lock\n|__Cargo.toml\n</code></pre>\n\n<p>This is my crate's <code>Cargo.toml</code> file:</p>\n\n<pre><code>[package]\nname = \"hellow_new\"\nversion = \"0.1.0\"\nauthors = [\"John &lt;john@123gmail.com&gt;\"]\n[dependencies]\n</code></pre>\n\n<p>This is my project structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>hello_project\n|  |__main.rs\n|__Cargo.lock\n|__Cargo.toml\n</code></pre>\n\n<p>This is my project's <code>Cargo.toml</code> file:</p>\n\n<pre><code>[package]\nname = \"hello_project\"\nversion = \"0.1.0\"\nauthors = [\"John &lt;john@123gmail.com&gt;\"]\n[dependencies]\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1530432510, "post_id": 51121446, "comment_id": 89228277, "body": "What <code>MyEnum::WithFields {..}</code> is suppose to do ? <a href=\"https://play.rust-lang.org/?gist=dfa1b92d4a88f83273cb0bb95f226612&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1530432915, "post_id": 51121446, "comment_id": 89228352, "body": "Hi :) I think your question is answered by <a href=\"https://stackoverflow.com/questions/32554285/compare-enums-only-by-variant-not-value\">&quot;Compare enums only by variant, not value&quot;</a>. In short: use <a href=\"https://doc.rust-lang.org/std/mem/fn.discriminant.html\" rel=\"nofollow noreferrer\"><code>mem::discriminant</code></a>. If you don&#39;t think this link answers your question, please explain why your question is different."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1530433745, "post_id": 51121446, "comment_id": 89228530, "body": "@Stargateur it is supposed to ignore the fields value and just match on <code>WithFields</code>."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1530433775, "post_id": 51121446, "comment_id": 89228536, "body": "@LukasKalbertodt Sadly that does not work, the rust compiler still wants me to specify the field somehow."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1530434145, "post_id": 51121446, "comment_id": 89228616, "body": "@PhilippLudwig You can&#39;t compare a variant with something that doesn&#39;t exist, do you want something like that ? <a href=\"https://play.rust-lang.org/?gist=e7df26067b37cbeea7624a181645dd3a&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1530439890, "post_id": 51121446, "comment_id": 89229782, "body": "@Stargateur yeah, I&#39;d like something like that. Seems a bit much though."}], "answers": [{"comments": [{"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1530439972, "post_id": 51122349, "comment_id": 89229799, "body": "Thanks, that is a good idea. I&#39;m still wondering though if there is a more straight-forward solution. Or maybe I will just have to create my own macro."}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "edited": false, "score": 0, "creation_date": 1530446904, "post_id": 51122349, "comment_id": 89231338, "body": "@SirDarius Thanks for providing the source, this is interesting. I will accept your answer, maybe you want to include these additional information there."}], "tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": true, "score": 7, "last_activity_date": 1602864719, "last_edit_date": 1602864719, "creation_date": 1530439801, "answer_id": 51122349, "question_id": 51121446, "link": "https://stackoverflow.com/questions/51121446/how-do-i-assert-an-enum-is-a-specific-variant-if-i-dont-care-about-its-fields/51122349#51122349", "title": "How do I assert an enum is a specific variant if I don&#39;t care about its fields?", "body": "<p><strong>If you are using Rust 1.42 and later, see <a href=\"https://stackoverflow.com/a/51123901/393701\">Shepmaster's answer below</a>.</strong></p>\n<p>A simple solution here would be to do the opposite assertion:</p>\n<pre><code>assert!(return_with_fields() != MyEnum::WithoutFields);\n</code></pre>\n<p>or even more simply:</p>\n<pre><code>assert_ne!(return_with_fields(), MyEnum::WithoutFields);\n</code></pre>\n<p>Of course if you have more members in your enum, you'll have to add more asserts to cover all possible cases.</p>\n<p>Alternatively, and this what OP probably had in mind, since <code>assert!</code> just panics in case of failure, the test can use pattern matching and call <code>panic!</code> directly in case something is wrong:</p>\n<pre><code>match return_with_fields() {\n    MyEnum::WithFields {..} =&gt; {},\n    MyEnum::WithoutFields =&gt; panic!(&quot;expected WithFields, got WithoutFields&quot;),\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 23, "last_activity_date": 1594049383, "last_edit_date": 1594049383, "creation_date": 1530453080, "answer_id": 51123901, "question_id": 51121446, "link": "https://stackoverflow.com/questions/51121446/how-do-i-assert-an-enum-is-a-specific-variant-if-i-dont-care-about-its-fields/51123901#51123901", "title": "How do I assert an enum is a specific variant if I don&#39;t care about its fields?", "body": "<h1>Rust 1.42</h1>\n<p>You can use <a href=\"https://doc.rust-lang.org/std/macro.matches.html\" rel=\"noreferrer\"><code>std::matches</code></a>:</p>\n<pre><code>assert!(matches!(return_with_fields(), MyEnum::WithFields { .. }));\n</code></pre>\n<h1>Previous versions</h1>\n<p>Your original code can be made to work with a new macro:</p>\n<pre><code>macro_rules! is_enum_variant {\n    ($v:expr, $p:pat) =&gt; (\n        if let $p = $v { true } else { false }\n    );\n}\n\n#[test]\nfn example() {\n    assert!(is_enum_variant!(return_with_fields(), MyEnum::WithoutFields {..}));\n}\n</code></pre>\n<p>Personally, I tend to add methods to my enums:</p>\n<pre><code>fn is_with_fields(&amp;self) -&gt; bool {\n    match self {\n        MyEnum::WithFields { .. } =&gt; true,\n        _ =&gt; false,\n    }\n}\n</code></pre>\n<p>I also tend to avoid struct-like enums and instead put in extra work:</p>\n<pre><code>enum MyEnum {\n    WithoutFields,\n    WithFields(WithFields),\n}\n\nstruct WithFields { field: String }\n\nimpl MyEnum {\n    fn is_with_fields(&amp;self) -&gt; bool {\n        match self {\n            MyEnum::WithFields(_) =&gt; true,\n            _ =&gt; false,\n        }\n    }\n\n    fn as_with_fields(&amp;self) -&gt; Option&lt;&amp;WithFields&gt; {\n        match self {\n            MyEnum::WithFields(x) =&gt; Some(x),\n            _ =&gt; None,\n        }\n    }\n    \n    fn into_with_fields(self) -&gt; Option&lt;WithFields&gt; {\n        match self {\n            MyEnum::WithFields(x) =&gt; Some(x),\n            _ =&gt; None,\n        }\n    }\n}\n</code></pre>\n<p>I hope that some day, enum variants can be made into their own type to avoid this extra struct.</p>\n"}, {"tags": [], "owner": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "is_accepted": false, "score": 1, "last_activity_date": 1569547345, "creation_date": 1569547345, "answer_id": 58126569, "question_id": 51121446, "link": "https://stackoverflow.com/questions/51121446/how-do-i-assert-an-enum-is-a-specific-variant-if-i-dont-care-about-its-fields/58126569#58126569", "title": "How do I assert an enum is a specific variant if I don&#39;t care about its fields?", "body": "<p>I'd use a macro like @Shepmaster proposed, but with more error reporting (like the existing <code>assert!</code> and <code>assert_eq!</code> macros:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! assert_variant {\n    ($value:expr, $pattern:pat) =&gt; ({\n        let value = &amp;$value;\n\n        if let $pattern = value {} else {\n            panic!(r#\"assertion failed (value doesn't match pattern):\n   value: `{:?}`,\n pattern: `{}`\"#, value, stringify!($pattern))\n        }\n    })\n\n    // TODO: Additional patterns for trailing args, like assert and assert_eq\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f349d1b9dafa29e8e07048a1915e3018\" rel=\"nofollow noreferrer\">Rust playground demonstrating this example</a></p>\n"}], "owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7913, "favorite_count": 1, "accepted_answer_id": 51122349, "answer_count": 3, "score": 21, "last_activity_date": 1602864719, "creation_date": 1530431781, "last_edit_date": 1530451943, "question_id": 51121446, "link": "https://stackoverflow.com/questions/51121446/how-do-i-assert-an-enum-is-a-specific-variant-if-i-dont-care-about-its-fields", "title": "How do I assert an enum is a specific variant if I don&#39;t care about its fields?", "body": "<p>I'd like to check enums with fields in tests while ignoring the actual value of the fields for now.</p>\n\n<p>Consider the following example:</p>\n\n<pre><code>enum MyEnum {\n    WithoutFields,\n    WithFields { field: String },\n}\n\nfn return_with_fields() -&gt; MyEnum {\n    MyEnum::WithFields {\n        field: \"some string\".into(),\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn example() {\n        assert_eq!(return_with_fields(), MyEnum::WithFields {..});\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=e9e9726c146ecb20ea837f15e77e9410&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">playground</a></p>\n\n<p>I'd like to use <code>assert_eq!</code> here, but the compiler tells me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected expression, found `}`\n  --&gt; src/lib.rs:18:64\n   |\n18 |         assert_eq!(return_with_fields(), MyEnum::WithFields {..});\n   |                                                                ^ expected expression\n</code></pre>\n\n<p>This is similar to <a href=\"https://stackoverflow.com/questions/50775023/why-do-i-get-an-error-when-pattern-matching-a-struct-like-enum-variant-with-fiel\">Why do I get an error when pattern matching a struct-like enum variant with fields?</a>, but the solution does not apply in my case.</p>\n\n<p>Of course, I can use <code>match</code> and do it myself, but being able to use <code>assert_eq!</code> would be less work.</p>\n"}, {"tags": ["rust", "compiler-optimization"], "answers": [{"comments": [{"owner": {"reputation": 5397, "user_id": 1178806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8f0734a3d7563e5504433dbef483472?s=128&d=identicon&r=PG", "display_name": "Vlad Frolov", "link": "https://stackoverflow.com/users/1178806/vlad-frolov"}, "edited": false, "score": 1, "creation_date": 1530419314, "post_id": 51120348, "comment_id": 89226239, "body": "&quot;making the address of the variable visible&quot; - this is what I suspected and feared."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1530710050, "last_edit_date": 1530710050, "creation_date": 1530418526, "answer_id": 51120348, "question_id": 51120292, "link": "https://stackoverflow.com/questions/51120292/why-can-the-rust-compiler-not-optimize-optiontake-and-an-if-let-if-you-print/51120348#51120348", "title": "Why can the Rust compiler not optimize Option::take and an &quot;if let&quot; if you print the value?", "body": "<p>The optimizer is only allowed to make changes to the program that do not change the runtime behavior. By printing the <code>Option</code>, <strong>you have changed the runtime behavior</strong> and thus the optimizer is now more restricted.</p>\n\n<p>By adding the print statement, you are making the <em>address</em> of the variable visible and important to the code:</p>\n\n<pre><code>&amp;[::std::fmt::ArgumentV1::new(&amp;x, ::std::fmt::Debug::fmt)],\n//                            ^^\n</code></pre>\n\n<p>This means that the optimizer can no longer skip generating a memory location for the value or manipulating the value stored in it. Once you've added all the gunk about dynamic dispatch and IO, one extra <code>if</code> isn't going to add appreciable overhead.</p>\n\n<hr>\n\n<p>Your <em>real</em> answer is going to be to go read the LLVM source code. Optimizations are non-trivial and they apply and don't apply for esoteric reasons.</p>\n"}], "owner": {"reputation": 5397, "user_id": 1178806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8f0734a3d7563e5504433dbef483472?s=128&d=identicon&r=PG", "display_name": "Vlad Frolov", "link": "https://stackoverflow.com/users/1178806/vlad-frolov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 1, "accepted_answer_id": 51120348, "answer_count": 1, "score": 3, "last_activity_date": 1530710050, "creation_date": 1530417661, "last_edit_date": 1530417927, "question_id": 51120292, "link": "https://stackoverflow.com/questions/51120292/why-can-the-rust-compiler-not-optimize-optiontake-and-an-if-let-if-you-print", "title": "Why can the Rust compiler not optimize Option::take and an &quot;if let&quot; if you print the value?", "body": "<p>I bumped into the following observation:</p>\n\n<pre><code>pub fn xx(mut x: Option&lt;usize&gt;) -&gt; usize {\n    let y = x.take();\n    //print!(\"{:?}\", x);\n    if let Some(x) = x {\n        x\n    } else {\n        0\n    }\n}\n</code></pre>\n\n<p>This code (with <code>print!</code> being commented out) gets optimized to \"nothing\":</p>\n\n<pre><code>xorl    %eax, %eax\nretq\n</code></pre>\n\n<p>Once I uncomment the <code>print!</code>, it can no longer optimize out the <code>if let Some(x) = x</code> anymore. I went ahead and expanded the macro (using <code>rustc +nightly --pretty=expanded -Z unstable-options main.rs</code>) and stripped minimized the code down to a minimal compilable example:</p>\n\n<pre><code>#![feature(print_internals)]\n#![feature(fmt_internals)]\n\npub fn xx(mut x: Option&lt;usize&gt;) -&gt; usize {\n    let y = x.take();\n\n    std::io::_print(\n        ::std::fmt::Arguments::new_v1_formatted(\n            &amp;[\"\"],\n            &amp;[::std::fmt::ArgumentV1::new(&amp;x, ::std::fmt::Debug::fmt)],\n            &amp;[]\n        )\n    );\n\n    if let Some(x) = x {\n        x\n    } else {\n        0\n    }\n}\n</code></pre>\n\n<p>As far as I can see, we only reference <code>x</code> once, and it is a non-mutable reference, so nothing should prevent the optimizer from assuming it is <code>None</code> (since we <code>take()</code> it) and just constantly return <code>0</code> as in the first snippet.</p>\n\n<p><a href=\"https://godbolt.org/g/P6Tk38\" rel=\"nofollow noreferrer\">Here are the snippets in the Compiler Explorer</a></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": true, "score": 1, "last_activity_date": 1530401713, "last_edit_date": 1530401713, "creation_date": 1530400022, "answer_id": 51119192, "question_id": 51119143, "link": "https://stackoverflow.com/questions/51119143/how-do-i-check-the-second-element-of-the-command-line-arguments/51119192#51119192", "title": "How do I check the second element of the command line arguments?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.nth\" rel=\"nofollow noreferrer\"><code>nth()</code></a>:</p>\n\n<pre><code>let second_arg = env::args().nth(1).expect(\"no second arg\");\n</code></pre>\n\n<p>which returns an <code>Option&lt;String&gt;</code>.</p>\n\n<p>It is semantically equivalent to call <code>skip(1)</code> followed by <code>next()</code>.</p>\n\n<p>To go further, you can use pattern matching:</p>\n\n<pre><code>let mut args = env::args();\nmatch args.nth(1).as_ref().map(|s| s.as_str()) {\n    // args has been consumed so it will iterate over the next elements\n    Some(\"sort\") =&gt; for arg in args {\n        println!(\"arg: {}\", arg);\n    },\n    _ =&gt; {},\n}\n</code></pre>\n\n<p>It is necessary to convert the argument from <code>String</code> to <code>&amp;str</code> in order to be able to use <code>Some(\"sort\")</code> as-is.</p>\n\n<p>Alternatively, you might want to use a command line parsing package such as <a href=\"https://clap.rs/\" rel=\"nofollow noreferrer\">clap</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1548038230, "creation_date": 1548038230, "answer_id": 54282865, "question_id": 51119143, "link": "https://stackoverflow.com/questions/51119143/how-do-i-check-the-second-element-of-the-command-line-arguments/54282865#54282865", "title": "How do I check the second element of the command line arguments?", "body": "<p>In case you need to check the argument for a flag that may or may not be present, you may be able to use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.peekable\" rel=\"nofollow noreferrer\"><code>peekable</code></a>:</p>\n\n<pre><code>use std::env;\n\nfn main() {\n    let mut args = env::args()\n        .skip(1) // skip program name\n        .peekable(); // allow looking forward one\n\n    match args.peek().map(|x| x.as_ref()) {\n        Some(\"--option1\") =&gt; {\n            args.next(); // Skip the flag\n            println!(\"handle option 1\");\n        }\n        Some(\"--option2\") =&gt; {\n            args.next(); // Skip the flag\n            println!(\"handle option 2\");\n        }\n        _ =&gt; {\n            println!(\"handle no option\");\n        }\n    }\n}\n</code></pre>\n\n<p>Realistically, you should use a command line parsing package.</p>\n"}], "owner": {"reputation": 105, "user_id": 6366489, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d9cfeb14f203daef6431b29dcabc072?s=128&d=identicon&r=PG&f=1", "display_name": "cloudiebro", "link": "https://stackoverflow.com/users/6366489/cloudiebro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 265, "favorite_count": 0, "accepted_answer_id": 51119192, "answer_count": 2, "score": -1, "last_activity_date": 1548038230, "creation_date": 1530399315, "last_edit_date": 1530414996, "question_id": 51119143, "link": "https://stackoverflow.com/questions/51119143/how-do-i-check-the-second-element-of-the-command-line-arguments", "title": "How do I check the second element of the command line arguments?", "body": "<p>I need to check the second element to determine which action I'm doing to the rest of the arguments.  </p>\n\n<p>This loops through the command line arguments and skips the first one because it's always the program name. It also skips the second one because it's the operation I'm performing on the list:</p>\n\n<pre><code>for arg in std::env::args().skip(2)\n</code></pre>\n\n<p>I am doing the following which is redundant:</p>\n\n<pre><code>let check: Vec&lt;String&gt; = env::args().collect();\n\nif check[1] == 'sort'{\n    for arg in std::env::args().skip(2){\n       //sort\n    }\n}\n</code></pre>\n\n<p>Is there a better way to do this?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530415214, "post_id": 51119032, "comment_id": 89225775, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/38147453/155423\">Do we need to manually create a destructor for a linked list?</a>,  <a href=\"https://stackoverflow.com/q/47051923/155423\">Why does my iterative implementation of drop for a linked list still cause a stack overflow?</a> and <a href=\"https://stackoverflow.com/q/42955243/155423\">cargo test --release causes a stack overflow. Why doesn&#39;t cargo bench?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51119032/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530415240, "post_id": 51119032, "comment_id": 89225778, "body": "TL;DR: &quot;and there is no recursion&quot; is a lie and tests have a smaller stack size."}, {"owner": {"reputation": 3536, "user_id": 1371116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61e179a755e44f07873b2ccd75771123?s=128&d=identicon&r=PG", "display_name": "Isaac", "link": "https://stackoverflow.com/users/1371116/isaac"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530418527, "post_id": 51119032, "comment_id": 89226147, "body": "Ah, so the default destructor is recursive; that makes perfect sense, thank you."}], "owner": {"reputation": 3536, "user_id": 1371116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61e179a755e44f07873b2ccd75771123?s=128&d=identicon&r=PG", "display_name": "Isaac", "link": "https://stackoverflow.com/users/1371116/isaac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 298, "favorite_count": 0, "closed_date": 1530418777, "answer_count": 0, "score": 0, "last_activity_date": 1530418799, "creation_date": 1530398027, "last_edit_date": 1530415171, "question_id": 51119032, "link": "https://stackoverflow.com/questions/51119032/why-does-this-rust-binary-tree-overflow-its-stack-in-tests", "closed_reason": "Duplicate", "title": "Why does this Rust binary tree overflow its stack in tests?", "body": "<p>I've written a binary tree-like structure, but I've been getting stack-overflow errors in some of my stress tests. I've reduced the error-causing code down to the following:\n    struct Node {\n        index: usize,\n        right: Option>,\n    }</p>\n\n<pre><code>struct BoxedTree {\n    root: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nfn build_degenerate() {\n    let mut t = BoxedTree {\n        root: Some(Box::new(Node {\n            index: 0,\n            right: None,\n        })),\n    };\n    let mut n = t.root.as_mut().unwrap();\n    for i in 1..50000 {\n        let cur = n;\n        let p = &amp;mut cur.right;\n        *p = Some(Box::new(Node {\n            index: i,\n            right: None,\n        }));\n        n = p.as_mut().unwrap();\n    }\n    println!(\"{}\", n.index);\n}\n\nfn main() {\n    build_degenerate();\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn mytest() {\n        build_degenerate();\n    }\n}\n</code></pre>\n\n<p>Running <code>cargo test</code> gives me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>running 1 test\n\nthread 'tests::mytest' has overflowed its stack\nfatal runtime error: stack overflow\nerror: process didn't exit successfully: ...\n</code></pre>\n\n<p>I don't understand how this code could be causing a stack overflow, as all data seems to be allocated on the heap, and there is no recursion.</p>\n\n<p>Even stranger, this code causes an overflow when I run <code>cargo test</code>, but not when I run <code>cargo run</code>, even though <code>mytest</code> and <code>main</code> call the same code.</p>\n\n<p>What's going wrong here?</p>\n"}, {"tags": ["rust", "closures", "borrow-checker", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "edited": false, "score": 0, "creation_date": 1530398446, "post_id": 51118309, "comment_id": 89223983, "body": "Oh, thank you! I would have expected an error telling me the borrowchk does not have enough info."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "edited": false, "score": 0, "creation_date": 1530416163, "post_id": 51118309, "comment_id": 89225888, "body": "@ValentinLorentz FWIW, I&#39;ve never seen this particular error before, and this is the first SO question about it. It&#39;s possible this is a brand new error. You may wish to <a href=\"https://github.com/rust-lang/rust\" rel=\"nofollow noreferrer\">file a bug</a> with your case and the error message and say that it wasn&#39;t helpful. The Rust contributors strive to have useful error messages."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1596915285, "post_id": 51118309, "comment_id": 111966583, "body": "I spent a few hours misinterpreting the &quot;and remove it from the closure&quot; part. It&#39;s not that you can remove it if you&#39;re bored with it, you <i>have to</i> remove it to make this compile."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1530391014, "creation_date": 1530391014, "answer_id": 51118309, "question_id": 51118023, "link": "https://stackoverflow.com/questions/51118023/what-does-borrowed-data-cannot-be-stored-outside-of-its-closure-mean/51118309#51118309", "title": "What does &quot;borrowed data cannot be stored outside of its closure&quot; mean?", "body": "<p>It means exactly what it says: that the data you are borrowing only lives for the duration of the closure. Attempting to store it outside of the closure would expose the code to memory unsafety.</p>\n\n<p>This arises because the inferred lifetime of the closure's argument has no relation to the lifetimes stored in the <code>Vec</code>.</p>\n\n<p>Generally, this isn't a problem you experience because <em>something</em> has caused more type inference to happen. In this case, you can add a type to <code>fields</code> and remove it from the closure:</p>\n\n<pre><code>let mut fields: Vec&lt;&amp;str&gt; = Vec::new();\nlet pusher = |a| fields.push(a);\n</code></pre>\n"}], "owner": {"reputation": 8789, "user_id": 539465, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/2acba600ecfbe1cc2e7f3c94b686ac84?s=128&d=identicon&r=PG", "display_name": "Valentin Lorentz", "link": "https://stackoverflow.com/users/539465/valentin-lorentz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1464, "favorite_count": 0, "accepted_answer_id": 51118309, "answer_count": 1, "score": 7, "last_activity_date": 1609871816, "creation_date": 1530388098, "last_edit_date": 1609871816, "question_id": 51118023, "link": "https://stackoverflow.com/questions/51118023/what-does-borrowed-data-cannot-be-stored-outside-of-its-closure-mean", "title": "What does &quot;borrowed data cannot be stored outside of its closure&quot; mean?", "body": "<p>When compiling the following code:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut fields = Vec::new();\n    let pusher = &amp;mut |a: &amp;str| {\n        fields.push(a);\n    };\n}\n</code></pre>\n<p>The compiler gives me the following error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed data cannot be stored outside of its closure\n --&gt; src/main.rs:4:21\n  |\n3 |     let pusher = &amp;mut |a: &amp;str| {\n  |         ------        --------- ...because it cannot outlive this closure\n  |         |\n  |         borrowed data cannot be stored into here...\n4 |         fields.push(a);\n  |                     ^ cannot be stored outside of its closure\n</code></pre>\n<p>And in later versions of Rust:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0521]: borrowed data escapes outside of closure\n --&gt; src/main.rs:4:9\n  |\n2 |     let mut fields = Vec::new();\n  |         ---------- `fields` declared here, outside of the closure body\n3 |     let pusher = &amp;mut |a: &amp;str| {\n  |                        - `a` is a reference that is only valid in the closure body\n4 |         fields.push(a);\n  |         ^^^^^^^^^^^^^^ `a` escapes the closure body here\n</code></pre>\n<p>What does this error mean, and how can I fix my code?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1530374868, "post_id": 51116311, "comment_id": 89219110, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51116311/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530375357, "post_id": 51116311, "comment_id": 89219215, "body": "<a href=\"http://play.rust-lang.org/?gist=57ccdf73ad9c94d80e2607e3b95cea20&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>."}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "closed_date": 1530463160, "answer_count": 0, "score": 0, "last_activity_date": 1530375004, "creation_date": 1530373378, "last_edit_date": 1530375004, "question_id": 51116311, "link": "https://stackoverflow.com/questions/51116311/how-to-use-a-loop-to-descend-and-insert-into-a-binary-tree-in-rust", "closed_reason": "Duplicate", "title": "How to use a loop to descend and insert into a binary tree in Rust?", "body": "<p>I want to create a binary tree through a series of insertions. Each insertion is provided with an list of <code>u8</code> and a value. The list of <code>u8</code> represents left or right while descending the tree: 0 is for left, not 0 for right.</p>\n\n<p>While there are a <a href=\"https://www.google.com/search?client=safari&amp;rls=en&amp;q=rust%20binary%20tree&amp;ie=UTF-8&amp;oe=UTF-8\" rel=\"nofollow noreferrer\">number of examples</a> of Rust binary trees, I haven't come upon one which inserts through a loop instead of recursively. I've come to and become stuck at the following (<a href=\"http://play.rust-lang.org/?gist=a162eb46a8fedf319b5aa0696b78b5d4&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>pub struct Tree {\n    data: u8,\n    left: Option&lt;Box&lt;Tree&gt;&gt;,\n    right: Option&lt;Box&lt;Tree&gt;&gt;,\n}\n\nimpl Tree {\n    fn new() -&gt; Self {\n        Tree {\n            data: 0,\n            left: None,\n            right: None,\n        }\n    }\n\n    fn insert(&amp;mut self, code: &amp;[u8], data: u8) {\n        let mut tree = self;\n        for i in code {\n            match i {\n                0 =&gt; {\n                    if tree.left.is_none() {\n                        tree.left = Some(Box::new(Tree::new()));\n                    }\n                    tree = &amp;mut tree.left.as_mut().unwrap(); // &lt;---\n                }\n                _ =&gt; {\n                    if tree.right.is_none() {\n                        tree.right = Some(Box::new(Tree::new()));\n                    }\n                    tree = &amp;mut tree.right.unwrap(); // &lt;---\n                }\n            }\n        }\n        tree.data = data;\n    }\n}\n</code></pre>\n\n<p>I'm stuck at the two locations identified where I try to assign <code>tree</code> iteratively as I descend:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:24:33\n   |\n24 |                     tree = &amp;mut tree.left.as_mut().unwrap();\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^- temporary value dropped here while still borrowed\n   |                                 |\n   |                                 temporary value does not live long enough\n...\n35 |     }\n   |     - temporary value needs to live until here\n   |\n   = note: consider using a `let` binding to increase its lifetime\n\nerror[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:30:33\n   |\n30 |                     tree = &amp;mut tree.right.unwrap();\n   |                                 ^^^^^^^^^^^^^^^^^^^- temporary value dropped here while still borrowed\n   |                                 |\n   |                                 temporary value does not live long enough\n...\n35 |     }\n   |     - temporary value needs to live until here\n   |\n   = note: consider using a `let` binding to increase its lifetime\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:30:33\n   |\n30 |                     tree = &amp;mut tree.right.unwrap();\n   |                                 ^^^^ cannot move out of borrowed content\n\nerror[E0502]: cannot borrow `tree.left` as immutable because it is also borrowed as mutable\n  --&gt; src/main.rs:21:24\n   |\n21 |                     if tree.left.is_none() {\n   |                        ^^^^^^^^^ immutable borrow occurs here\n...\n24 |                     tree = &amp;mut tree.left.as_mut().unwrap();\n   |                                 --------- mutable borrow occurs here\n...\n35 |     }\n   |     - mutable borrow ends here\n\nerror[E0506]: cannot assign to `tree.left` because it is borrowed\n  --&gt; src/main.rs:22:25\n   |\n22 |                         tree.left = Some(Box::new(Tree::new()));\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `tree.left` occurs here\n23 |                     }\n24 |                     tree = &amp;mut tree.left.as_mut().unwrap();\n   |                                 --------- borrow of `tree.left` occurs here\n\nerror[E0506]: cannot assign to `tree` because it is borrowed\n  --&gt; src/main.rs:24:21\n   |\n24 |                     tree = &amp;mut tree.left.as_mut().unwrap();\n   |                     ^^^^^^^^^^^^---------^^^^^^^^^^^^^^^^^^\n   |                     |           |\n   |                     |           borrow of `tree` occurs here\n   |                     assignment to borrowed `tree` occurs here\n\nerror[E0499]: cannot borrow `tree.left` as mutable more than once at a time\n  --&gt; src/main.rs:24:33\n   |\n24 |                     tree = &amp;mut tree.left.as_mut().unwrap();\n   |                                 ^^^^^^^^^ mutable borrow starts here in previous iteration of loop\n...\n35 |     }\n   |     - mutable borrow ends here\n\nerror[E0506]: cannot assign to `tree` because it is borrowed\n  --&gt; src/main.rs:30:21\n   |\n24 |                     tree = &amp;mut tree.left.as_mut().unwrap();\n   |                                 --------- borrow of `tree` occurs here\n...\n30 |                     tree = &amp;mut tree.right.unwrap();\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `tree` occurs here\n</code></pre>\n\n<p>What is the right way to go about this?</p>\n"}, {"tags": ["asynchronous", "rust", "future"], "comments": [{"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 2, "creation_date": 1530363076, "post_id": 51114794, "comment_id": 89216378, "body": "invert your controlflow. always use unfold and use a nested match inside"}, {"owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1530366914, "post_id": 51114794, "comment_id": 89217273, "body": "Thanks a lot. I did, now the <code>fn resolve</code> seems to compile, but I&#39;m not able to use it - <a href=\"https://play.rust-lang.org/?gist=3f76f3d827427df945a39a910366c66a\" rel=\"nofollow noreferrer\">play.rust-lang.org/?gist=3f76f3d827427df945a39a910366c66a</a>  It should just stream the <code>SocketAddr</code> and I need to map it somehow so that in the end I get a <code>Future&lt;Item=(),Error=()&gt;</code> to be executed by <code>tokio::run()</code>"}, {"owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1530367588, "post_id": 51114794, "comment_id": 89217434, "body": "Got rid of that <code>Option&lt;&gt;</code> now... <a href=\"https://play.rust-lang.org/?gist=5ed8a3790f637e96ac01a491fd690849&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "edited": false, "score": 0, "creation_date": 1530367954, "post_id": 51115662, "comment_id": 89217548, "body": "Simple and elegant. I couldn&#39;t help laughing :D over my clumsiness."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1530367481, "creation_date": 1530367481, "answer_id": 51115662, "question_id": 51114794, "link": "https://stackoverflow.com/questions/51114794/how-do-i-convert-an-iterator-into-a-stream-on-success-or-an-empty-stream-on-fail/51115662#51115662", "title": "How do I convert an iterator into a stream on success or an empty stream on failure?", "body": "<p>Rust is a statically typed language which means that the return type of a function has to be a single type, known at compile time. You are attempting to return multiple types, decided at runtime.</p>\n\n<p>The closest solution to your original is to always return the <code>Unfold</code> stream:</p>\n\n<pre><code>fn resolve(addrs: impl ToSocketAddrs) -&gt; impl Stream&lt;Item = SocketAddr, Error = ()&gt; {\n    stream::unfold(addrs.to_socket_addrs(), |r| {\n        match r {\n            Ok(mut iter) =&gt; iter.next().map(|addr| future::ok((addr, Ok(iter)))),\n            Err(_) =&gt; None,\n        }\n    })\n}\n</code></pre>\n\n<hr>\n\n<p>But why reinvent the wheel?</p>\n\n<p><a href=\"https://docs.rs/futures/0.1.21/futures/stream/fn.iter_ok.html\" rel=\"noreferrer\"><code>futures::stream::iter_ok</code></a></p>\n\n<blockquote>\n  <p>Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready to yield the next value.</p>\n</blockquote>\n\n<p>Subsequent versions of the futures crate implement <code>Stream</code> for <code>Either</code>, which makes this very elegant:</p>\n\n<pre><code>fn resolve(addrs: impl ToSocketAddrs) -&gt; impl Stream&lt;Item = SocketAddr, Error = ()&gt; {\n    match addrs.to_socket_addrs() {\n        Ok(iter) =&gt; stream::iter_ok(iter).left_stream(),\n        Err(_) =&gt; stream::empty().right_stream(),\n    }\n}\n</code></pre>\n\n<p>It's straightforward to backport this functionality to futures 0.1 (maybe someone should submit it as a PR for those who are stuck on 0.1...):</p>\n\n<pre><code>enum MyEither&lt;L, R&gt; {\n    Left(L),\n    Right(R),\n}\n\nimpl&lt;L, R&gt; Stream for MyEither&lt;L, R&gt;\nwhere\n    L: Stream,\n    R: Stream&lt;Item = L::Item, Error = L::Error&gt;,\n{\n    type Item = L::Item;\n    type Error = L::Error;\n\n    fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt; {\n        match self {\n            MyEither::Left(l) =&gt; l.poll(),\n            MyEither::Right(r) =&gt; r.poll(),\n        }\n    }\n}\n\ntrait EitherStreamExt {\n    fn left_stream&lt;R&gt;(self) -&gt; MyEither&lt;Self, R&gt;\n    where\n        Self: Sized;\n    fn right_stream&lt;L&gt;(self) -&gt; MyEither&lt;L, Self&gt;\n    where\n        Self: Sized;\n}\n\nimpl&lt;S: Stream&gt; EitherStreamExt for S {\n    fn left_stream&lt;R&gt;(self) -&gt; MyEither&lt;Self, R&gt; {\n        MyEither::Left(self)\n    }\n    fn right_stream&lt;L&gt;(self) -&gt; MyEither&lt;L, Self&gt; {\n        MyEither::Right(self)\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Even better, use the fact that  <code>Result</code> is an iterator and <code>Stream::flatten</code> exists:</p>\n\n<pre><code>fn resolve(addrs: impl ToSocketAddrs) -&gt; impl Stream&lt;Item = SocketAddr, Error = ()&gt; {\n    stream::iter_ok(addrs.to_socket_addrs())\n        .map(stream::iter_ok)\n        .flatten()\n}\n</code></pre>\n\n<p>Or if you really want to print errors:</p>\n\n<pre><code>fn resolve(addrs: impl ToSocketAddrs) -&gt; impl Stream&lt;Item = SocketAddr, Error = ()&gt; {\n    stream::once(addrs.to_socket_addrs())\n        .map(stream::iter_ok)\n        .map_err(|e| eprintln!(\"err: {}\", e))\n        .flatten()\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/45787053/155423\">Conditionally return empty iterator from flat_map</a></li>\n<li><a href=\"https://stackoverflow.com/q/29760668/155423\">Conditionally iterate over one of several possible iterators</a></li>\n<li><a href=\"https://stackoverflow.com/q/27535289/155423\">What is the correct way to return an Iterator (or any other trait)?</a></li>\n</ul>\n"}], "owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1316, "favorite_count": 0, "accepted_answer_id": 51115662, "answer_count": 1, "score": 3, "last_activity_date": 1530367481, "creation_date": 1530360613, "last_edit_date": 1530365071, "question_id": 51114794, "link": "https://stackoverflow.com/questions/51114794/how-do-i-convert-an-iterator-into-a-stream-on-success-or-an-empty-stream-on-fail", "title": "How do I convert an iterator into a stream on success or an empty stream on failure?", "body": "<p>I'd like to take a <a href=\"https://docs.rs/futures/0.2.1/futures/stream/fn.unfold.html\" rel=\"nofollow noreferrer\">regular iterator and turn it into a stream</a> so that I can do further stream processing. The trouble is that I may have an iterator or an error to deal with. I think I'm pretty close with this:</p>\n\n<pre><code>#[macro_use]\nextern crate log;\nextern crate futures; // 0.1.21\nextern crate tokio;\n\nuse futures::prelude::*;\nuse futures::{future, stream};\nuse std::fmt::Debug;\nuse std::net::{SocketAddr, ToSocketAddrs};\n\nfn resolve(addrs: impl ToSocketAddrs + Debug) -&gt; impl Stream&lt;Item = SocketAddr, Error = ()&gt; {\n    match addrs.to_socket_addrs() {\n        Ok(iter) =&gt; stream::unfold(iter, |iter| match iter.next() {\n            Some(a) =&gt; Some(future::ok((a, iter))),\n            None =&gt; None,\n        }),\n        Err(e) =&gt; {\n            error!(\"could not resolve socket addresses {:?}: {:?}\", addrs, e);\n            stream::empty()\n        }\n    }\n}\n\nfn main() {\n    let task = resolve(\"1.2.3.4:12345\")\n        .map_err(|e| error!(\"{:?}\", e))\n        .for_each(|addr| info!(\"{:?}\", addr))\n        .fold();\n    tokio::run(task);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a3d94eac0da4342687be1c748a4681ea&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: match arms have incompatible types\n  --&gt; src/main.rs:12:5\n   |\n12 | /     match addrs.to_socket_addrs() {\n13 | |         Ok(iter) =&gt; stream::unfold(iter, |iter| match iter.next() {\n14 | |             Some(a) =&gt; Some(future::ok((a, iter))),\n15 | |             None =&gt; None,\n...  |\n20 | |         }\n21 | |     }\n   | |_____^ expected struct `futures::stream::Unfold`, found struct `futures::stream::Empty`\n   |\n   = note: expected type `futures::stream::Unfold&lt;&lt;impl ToSocketAddrs + Debug as std::net::ToSocketAddrs&gt;::Iter, [closure@src/main.rs:13:42: 16:10], futures::FutureResult&lt;(std::net::SocketAddr, &lt;impl ToSocketAddrs + Debug as std::net::ToSocketAddrs&gt;::Iter), _&gt;&gt;`\n              found type `futures::stream::Empty&lt;_, _&gt;`\nnote: match arm with an incompatible type\n  --&gt; src/main.rs:17:19\n   |\n17 |           Err(e) =&gt; {\n   |  ___________________^\n18 | |             error!(\"could not resolve socket addresses {:?}: {:?}\", addrs, e);\n19 | |             stream::empty()\n20 | |         }\n   | |_________^\n\nerror[E0277]: the trait bound `(): futures::Future` is not satisfied\n  --&gt; src/main.rs:27:10\n   |\n27 |         .for_each(|addr| info!(\"{:?}\", addr))\n   |          ^^^^^^^^ the trait `futures::Future` is not implemented for `()`\n   |\n   = note: required because of the requirements on the impl of `futures::IntoFuture` for `()`\n\nerror[E0599]: no method named `fold` found for type `futures::stream::ForEach&lt;futures::stream::MapErr&lt;impl futures::Stream, [closure@src/main.rs:26:18: 26:39]&gt;, [closure@src/main.rs:27:19: 27:45], ()&gt;` in the current scope\n  --&gt; src/main.rs:28:10\n   |\n28 |         .fold();\n   |          ^^^^\n   |\n   = note: the method `fold` exists but the following trait bounds were not satisfied:\n           `&amp;mut futures::stream::ForEach&lt;futures::stream::MapErr&lt;impl futures::Stream, [closure@src/main.rs:26:18: 26:39]&gt;, [closure@src/main.rs:27:19: 27:45], ()&gt; : futures::Stream`\n           `&amp;mut futures::stream::ForEach&lt;futures::stream::MapErr&lt;impl futures::Stream, [closure@src/main.rs:26:18: 26:39]&gt;, [closure@src/main.rs:27:19: 27:45], ()&gt; : std::iter::Iterator`\n</code></pre>\n\n<p>The hint is pretty obvious. The two <code>Result</code>s I'm returning from the <code>match</code> differ and should be the same. Now, how can I do that so that I return a stream?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 1, "last_activity_date": 1530358497, "last_edit_date": 1530358497, "creation_date": 1530357441, "answer_id": 51114404, "question_id": 51114045, "link": "https://stackoverflow.com/questions/51114045/errore0597-borrowed-value-does-not-live-long-enough-when-trying-to-return-s/51114404#51114404", "title": "error[E0597]: borrowed value does not live long enough when trying to return &amp;&#39;static", "body": "<p>After you are creating a slice, you reference it again with <code>&amp;[][..]</code>. This creates a temporary object, which will be dropped afterwards. This is the origin on the errors.</p>\n\n<p>You can fix it, when you remove all <code>[..]</code> from the code.</p>\n\n<pre><code>#[derive(Debug)]\npub struct Node&lt;T: 'static&gt; {\n    pub name: T,\n    pub children: &amp;'static [Node&lt;T&gt;],\n}\npub fn return_root() -&gt; Node&lt;&amp;'static str&gt; {\n    return Node {\n        name: \"root\",\n        children: &amp;[Node {\n            name: \"uk\",\n            children: &amp;[\n                Node {\n                    name: \"ac\",\n                    children: &amp;[],\n                },\n                Node {\n                    name: \"co\",\n                    children: &amp;[\n                        Node {\n                            name: \"blogspot\",\n                            children: &amp;[],\n                        },\n                        Node {\n                            name: \"no-ip\",\n                            children: &amp;[],\n                        },\n                    ],\n                },\n                Node {\n                    name: \"gov\",\n                    children: &amp;[Node {\n                        name: \"service\",\n                        children: &amp;[],\n                    }],\n                },\n                Node {\n                    name: \"ltd\",\n                    children: &amp;[],\n                },\n                Node {\n                    name: \"me\",\n                    children: &amp;[],\n                },\n                Node {\n                    name: \"net\",\n                    children: &amp;[],\n                },\n                Node {\n                    name: \"nhs\",\n                    children: &amp;[],\n                },\n                Node {\n                    name: \"org\",\n                    children: &amp;[],\n                },\n                Node {\n                    name: \"plc\",\n                    children: &amp;[],\n                },\n                Node {\n                    name: \"police\",\n                    children: &amp;[],\n                },\n                Node {\n                    name: \"sch\",\n                    children: &amp;[Node {\n                        name: \"*\",\n                        children: &amp;[],\n                    }],\n                },\n            ],\n        }],\n    };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=963995dc2b5c4e84b100b720394ff2c1&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The <code>[..]</code> is not needed, because it only creates a slice from the other slice, which results in the same slice.</p>\n"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 558, "favorite_count": 0, "accepted_answer_id": 51114404, "answer_count": 1, "score": 0, "last_activity_date": 1530367981, "creation_date": 1530354379, "last_edit_date": 1530367981, "question_id": 51114045, "link": "https://stackoverflow.com/questions/51114045/errore0597-borrowed-value-does-not-live-long-enough-when-trying-to-return-s", "title": "error[E0597]: borrowed value does not live long enough when trying to return &amp;&#39;static", "body": "<p>I'm trying to rewrite the <code>publicsuffix</code> crate, hoping to get better performance. I'm using the Python library with the same name as a reference and after simplifying its data structures, I came up with this:</p>\n\n<pre><code>#[derive(Debug)]\npub struct Node&lt;T&gt; {\n    pub name: T,\n    pub children: Vec&lt;Node&lt;T&gt;&gt;,\n}\n</code></pre>\n\n<p>I was feeling too lazy to implement structure loading before I get a signal that it works well, which is why I decided to hardcode it. I keep getting <code>error[E0015]: calls in statics are limited to constant functions, struct and enum constructors</code> when I tried to do something like <code>pub static root = Node { name: \"x\", children: vec![]};</code>, so I decided to wrap it in a function. I ended up with <a href=\"https://gitlab.com/d33tah/psl-rewrite/blob/master/src/lib.rs\" rel=\"nofollow noreferrer\">this file</a>, which takes forever to build (about 10 minutes). After asking on IRC #rust-beginners, I got a suggestion to try using references to array slices instead and ended up with this sample code:</p>\n\n<pre><code>#[derive(Debug)]\npub struct Node&lt;T: 'static&gt; {\n    pub name: T,\n    pub children: &amp;'static [Node&lt;T&gt;],\n}\npub fn return_root() -&gt; Node&lt;&amp;'static str&gt; {\n    return Node {\n        name: \"root\",\n        children: &amp;[Node {\n            name: \"uk\",\n            children: &amp;[\n                Node {\n                    name: \"ac\",\n                    children: &amp;[][..],\n                },\n                Node {\n                    name: \"co\",\n                    children: &amp;[\n                        Node {\n                            name: \"blogspot\",\n                            children: &amp;[][..],\n                        },\n                        Node {\n                            name: \"no-ip\",\n                            children: &amp;[][..],\n                        },\n                    ][..],\n                },\n                Node {\n                    name: \"gov\",\n                    children: &amp;[Node {\n                        name: \"service\",\n                        children: &amp;[][..],\n                    }][..],\n                },\n                Node {\n                    name: \"ltd\",\n                    children: &amp;[][..],\n                },\n                Node {\n                    name: \"me\",\n                    children: &amp;[][..],\n                },\n                Node {\n                    name: \"net\",\n                    children: &amp;[][..],\n                },\n                Node {\n                    name: \"nhs\",\n                    children: &amp;[][..],\n                },\n                Node {\n                    name: \"org\",\n                    children: &amp;[][..],\n                },\n                Node {\n                    name: \"plc\",\n                    children: &amp;[][..],\n                },\n                Node {\n                    name: \"police\",\n                    children: &amp;[][..],\n                },\n                Node {\n                    name: \"sch\",\n                    children: &amp;[Node {\n                        name: \"*\",\n                        children: &amp;[][..],\n                    }][..],\n                },\n            ][..],\n        }][..],\n    };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=94cc36d8a85a29e1559119fd07b2d096&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This does not compile and I don't understand the error messages:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:9:20\n   |\n9  |           children: &amp;[Node {\n   |  ____________________^\n10 | |             name: \"uk\",\n11 | |             children: &amp;[\n12 | |                 Node {\n...  |\n71 | |             ][..],\n72 | |         }][..],\n   | |__________^ temporary value does not live long enough\n73 |       };\n   |        - temporary value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n   = note: consider using a `let` binding to increase its lifetime\n\nerror[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:11:24\n   |\n11 |               children: &amp;[\n   |  ________________________^\n12 | |                 Node {\n13 | |                     name: \"ac\",\n14 | |                     children: &amp;[][..],\n...  |\n70 | |                 },\n71 | |             ][..],\n   | |_____________^ temporary value does not live long enough\n72 |           }][..],\n73 |       };\n   |        - temporary value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n   = note: consider using a `let` binding to increase its lifetime\n\nerror[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:18:32\n   |\n18 |                       children: &amp;[\n   |  ________________________________^\n19 | |                         Node {\n20 | |                             name: \"blogspot\",\n21 | |                             children: &amp;[][..],\n...  |\n26 | |                         },\n27 | |                     ][..],\n   | |_____________________^ temporary value does not live long enough\n...\n73 |       };\n   |        - temporary value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n   = note: consider using a `let` binding to increase its lifetime\n\nerror[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:31:32\n   |\n31 |                       children: &amp;[Node {\n   |  ________________________________^\n32 | |                         name: \"service\",\n33 | |                         children: &amp;[][..],\n34 | |                     }][..],\n   | |______________________^ temporary value does not live long enough\n...\n73 |       };\n   |        - temporary value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n   = note: consider using a `let` binding to increase its lifetime\n\nerror[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:66:32\n   |\n66 |                       children: &amp;[Node {\n   |  ________________________________^\n67 | |                         name: \"*\",\n68 | |                         children: &amp;[][..],\n69 | |                     }][..],\n   | |______________________^ temporary value does not live long enough\n...\n73 |       };\n   |        - temporary value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n   = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>Is there a way to solve this problem?</p>\n"}, {"tags": ["reference", "rust", "match"], "comments": [{"owner": {"reputation": 1783, "user_id": 453056, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/787f07c7f788f35cd01628a783174d5e?s=128&d=identicon&r=PG", "display_name": "Kyle", "link": "https://stackoverflow.com/users/453056/kyle"}, "edited": false, "score": 2, "creation_date": 1530304470, "post_id": 51108873, "comment_id": 89205180, "body": "You&#39;re trying to move a borrowed value which isn&#39;t allowed by the borrowchecker. <code>match</code> just borrows the value (which is valid; you can borrow from a borrow). That would be equivalent to <code>let x = &amp;*t</code> instead of <code>let x = *t</code>."}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1530311249, "post_id": 51108873, "comment_id": 89207235, "body": "Also fun fact: as of Rust 1.26 you don&#39;t need to dereference in a <code>match</code> anymore (though you may choose to for people using older Rust versions)."}], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 0, "last_activity_date": 1530370012, "last_edit_date": 1530370012, "creation_date": 1530352749, "answer_id": 51113835, "question_id": 51108873, "link": "https://stackoverflow.com/questions/51108873/how-does-the-match-expression-interpret-values-vs-references/51113835#51113835", "title": "How does the match expression interpret values vs. references?", "body": "<p><code>let x = *t</code> does not work, because it's moved out of the reference. I.e. this means, with dereferencing <code>t</code>, you get a <code>BinaryTree</code> (without reference). The <code>BinaryTree</code> is borrowed in the function, so assigning it with <code>let x = *t</code> will move the it into the x, which is not possible, since it's borrowed.</p>\n\n<p>The match does work, because <code>match</code> borrows the variable. <code>match *t</code> will not move it out, but it will borrow the <code>BinaryTree</code>. This is a special syntax in Rust and the borrow happens behind the scenes. You can think of this:</p>\n\n<pre><code>fn tree_weight_v2(t: &amp;BinaryTree) -&gt; i32 {\n    match &amp;*t {\n        &amp;BinaryTree::Leaf(payload) =&gt; payload,\n        &amp;BinaryTree::Node(ref left, payload, ref right) =&gt; {\n            tree_weight_v2(left) + payload + tree_weight_v2(right)\n        }\n    }\n}\n</code></pre>\n\n<p>but all the references are not needed.</p>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43370054\">Is there any difference between matching on a reference to a pattern or a dereferenced value?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35921015\">Should a reference to an enum be dereferenced before it is matched?</a></li>\n</ul>\n"}], "owner": {"reputation": 1, "user_id": 10012472, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dcf863aa7568289bcfaf56d488877b90?s=128&d=identicon&r=PG&f=1", "display_name": "sce415", "link": "https://stackoverflow.com/users/10012472/sce415"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 51113835, "answer_count": 1, "score": 0, "last_activity_date": 1530370012, "creation_date": 1530303580, "last_edit_date": 1530304391, "question_id": 51108873, "link": "https://stackoverflow.com/questions/51108873/how-does-the-match-expression-interpret-values-vs-references", "title": "How does the match expression interpret values vs. references?", "body": "<p>In this example, why can I dereference <code>t</code> in the match expression but not on the line directly above? </p>\n\n<pre><code>fn tree_weight_v2(t: &amp;BinaryTree) -&gt; i32 {\n    // let x = *t; // if uncommented, error: \"Cannot move out of borrowed content\"\n    match *t {\n        BinaryTree::Leaf(payload) =&gt; payload,\n        BinaryTree::Node(ref left, payload, ref right) =&gt; {\n            tree_weight_v2(left) + payload + tree_weight_v2(right)\n        }\n    }\n}\n\n#[test]\nfn tree_demo_2() {\n    let tree = sample_tree();\n    assert_eq!(tree_weight_v2(&amp;tree), (1 + 2 + 3) + 4 + 5);\n    assert_eq!(tree_weight_v2(&amp;tree), (1 + 2 + 3) + 4 + 5);\n    // no error ^ meaning tree_weight_v2 is not taking ownership of tree\n}\n\nenum BinaryTree {\n    Leaf(i32),\n    Node(Box&lt;BinaryTree&gt;, i32, Box&lt;BinaryTree&gt;)\n}\n\nfn sample_tree() -&gt; BinaryTree {\n    let l1 = Box::new(BinaryTree::Leaf(1));\n    let l3 = Box::new(BinaryTree::Leaf(3));\n    let n2 = Box::new(BinaryTree::Node(l1, 2, l3));\n    let l5 = Box::new(BinaryTree::Leaf(5));\n\n    BinaryTree::Node(n2, 4, l5)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0925329a6bc346730e8bb877fc60c8be&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I don't believe what the code is doing beyond the match statement to be important - unless of course, that is the source of my confusion. </p>\n\n<p>I'm also curious about how match expressions handle dereferenced values. Specifically, since what the match expression sees is a value of type <code>BinaryTree</code> (without any references), why does the match expression not try to take ownership over it? More generally, how does Rust's <code>match</code> interpret the difference between a dereferenced pointer to a value and a normal value? </p>\n"}, {"tags": ["rust", "rayon"], "answers": [{"comments": [{"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1530279391, "post_id": 51101208, "comment_id": 89193285, "body": "Just to elaborate for Avi&#39;s benefit, changing <code>p1.par_chunks(2)</code> to <code>p1.into_iter().collect::&lt;Vec&lt;Node&gt;&gt;().par_chunks(2)</code> will give the output you want but will be a complete duplication of the data."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1530279806, "post_id": 51101208, "comment_id": 89193580, "body": "@user25064 It might be even worse than that. You can&#39;t create a vector and immediately return a slice of it. He would have to have the vector owned by <code>Pixel</code> or something else that lives as long as the slice is needed."}, {"owner": {"reputation": 23, "user_id": 10009453, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Osa8ygYENho/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq3J_Kt3azmn9LELmE1LNx5dwoGHLw/mo/photo.jpg?sz=128", "display_name": "Avi Srivastava", "link": "https://stackoverflow.com/users/10009453/avi-srivastava"}, "edited": false, "score": 0, "creation_date": 1530302100, "post_id": 51101208, "comment_id": 89204250, "body": "Thanks @PeterHall and user25064 for the answers, you got it right, the data is too big to duplicate and would bump up the overall resource usage. I guess I&#39;ll fall back to Crossbeam based parallelization. I thing I have to work on understand the difference between the use cases for rayon and crossbeam. Thanks again, cheers!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1530273362, "creation_date": 1530273362, "answer_id": 51101208, "question_id": 51096527, "link": "https://stackoverflow.com/questions/51096527/implement-rayon-as-parallel-slice-using-iterators/51101208#51101208", "title": "Implement rayon `as_parallel_slice` using iterators", "body": "<p>You can't create a slice of <code>Node</code>s unless you have a chunk of contiguous memory containing just <code>Node</code>s. But you don't have that; the data from each <code>Node</code> is lazily copied from bits of data stored in three separate <code>Vec</code>s.</p>\n\n<p>The most obvious way to create a slice would be to first create all the <code>Node</code>s in a <code>Vec&lt;Node&gt;</code> and then make a slice of that. However, I would suspect that this is exactly what you don't want to do.</p>\n"}], "owner": {"reputation": 23, "user_id": 10009453, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Osa8ygYENho/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq3J_Kt3azmn9LELmE1LNx5dwoGHLw/mo/photo.jpg?sz=128", "display_name": "Avi Srivastava", "link": "https://stackoverflow.com/users/10009453/avi-srivastava"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 222, "favorite_count": 0, "accepted_answer_id": 51101208, "answer_count": 1, "score": 2, "last_activity_date": 1530273734, "creation_date": 1530257542, "last_edit_date": 1530273734, "question_id": 51096527, "link": "https://stackoverflow.com/questions/51096527/implement-rayon-as-parallel-slice-using-iterators", "title": "Implement rayon `as_parallel_slice` using iterators", "body": "<p>I have a small problem of my own:</p>\n\n<pre><code>extern crate rayon;\nuse rayon::prelude::*;\n\n#[derive(Debug)]\nstruct Pixel {\n    r: Vec&lt;i8&gt;,\n    g: Vec&lt;i8&gt;,\n    b: Vec&lt;i8&gt;,\n}\n\n#[derive(Debug)]\nstruct Node{\n    r: i8,\n    g: i8,\n    b: i8,\n}\n\nstruct PixelIterator&lt;'a&gt; {\n    pixel: &amp;'a Pixel,\n    index: usize,\n}\n\nimpl&lt;'a&gt; IntoIterator for &amp;'a Pixel {\n    type Item = Node;\n    type IntoIter = PixelIterator&lt;'a&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        println!(\"Into &amp;\");\n        PixelIterator { pixel: self, index: 0 }\n    }\n}\n\nimpl&lt;'a&gt; Iterator for PixelIterator&lt;'a&gt; {\n    type Item = Node;\n    fn next(&amp;mut self) -&gt; Option&lt;Node&gt; {\n        println!(\"next &amp;\");\n        let result = match self.index {\n            0 | 1 | 2 | 3  =&gt; Node {\n                r: self.pixel.r[self.index],\n                g: self.pixel.g[self.index],\n                b: self.pixel.b[self.index],\n            },\n            _ =&gt; return None,\n        };\n        self.index += 1;\n        Some(result)\n    }\n}\n\nimpl ParallelSlice&lt;Node&gt; for Pixel {\n    fn as_parallel_slice(&amp;self) -&gt; &amp;[Node] {\n        // ??\n    }\n}\n\nfn main() {\n    let p1 = Pixel {\n        r: vec![11, 21, 31, 41],\n        g: vec![12, 22, 32, 42],\n        b: vec![13, 23, 33, 43],\n    };\n\n    p1.par_chunks(2).enumerate().for_each(|(index, chnk)| {\n        for (cindex, i) in chnk.into_iter().enumerate(){\n            println!(\"{:?}, {:?}\", (index*2)+cindex, i);   \n        }\n    });\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=744978e588f29ae2ed9e605a1de5d709&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Basically I wanted to use rayon's <code>per_chunk</code> function and it requires me to have to implement <code>ParallelSlice</code> trait. I am wondering what should go into the <code>as_parallel_slice</code> function so that I can get output as (order doesn't matter):</p>\n\n<pre><code>0 Node { 11, 12, 13} \n1 Node { 21, 22, 23}\n2 Node { 31, 32, 33}\n3 Node { 41, 42, 43}\n</code></pre>\n\n<p>One more stupid question is <code>as_parallel_slice</code> bounds the Trait to return a slice, according to my understanding under this scenario I need to have the full data available beforehand? Since I am working with DNA sequences (which can be a lot of data) I guess I should fall back to using crossbeam and iterators instead of slice based parallelization through rayon, or is their a better way to do the same?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 4, "creation_date": 1530254335, "post_id": 51095431, "comment_id": 89179071, "body": "This seems to be a bug. There is an <a href=\"https://github.com/rust-lang/rust/issues/46969\" rel=\"nofollow noreferrer\">open issue</a> for it."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1530258566, "post_id": 51095431, "comment_id": 89181236, "body": "Did you mean to write <code>impl&lt;T: Sized&gt; Trait for T</code>? (This doesn&#39;t solve the problem but matches your problem description more)"}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 2, "creation_date": 1530258747, "post_id": 51095431, "comment_id": 89181311, "body": "@Tim <code>T: Sized</code> is redundant: <a href=\"https://doc.rust-lang.org/std/marker/trait.Sized.html\" rel=\"nofollow noreferrer\">All type parameters have an implicit bound of <code>Sized</code>.</a>."}, {"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1530278410, "post_id": 51095431, "comment_id": 89192662, "body": "@kazemakase: Thanks! If you post that as an answer I&#39;ll accept it."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1530281945, "post_id": 51095431, "comment_id": 89194833, "body": "@Cornstalks &quot;It&#39;s a bug&quot; hardly makes for a good answer... but apparently it is the only one there is :("}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1530288659, "post_id": 51103797, "comment_id": 89198529, "body": "As a workaround, can&#39;t you just use a function in the trait instead of a <code>const</code>? It should get inlined to the same thing."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1530289391, "post_id": 51103797, "comment_id": 89198856, "body": "@PeterHall You are right of course. Thank you for pointing out that oversight."}], "tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 2, "last_activity_date": 1530289319, "last_edit_date": 1530289319, "creation_date": 1530281903, "answer_id": 51103797, "question_id": 51095431, "link": "https://stackoverflow.com/questions/51095431/why-does-rust-want-self-to-be-sized-when-implementing-an-associated-const-with-a/51103797#51103797", "title": "Why does Rust want Self to be Sized when implementing an associated const with an associated type?", "body": "<p>According to <a href=\"https://github.com/rust-lang/rust/issues/46969\" rel=\"nofollow noreferrer\">this GitHub issue</a>, this appears to be a known bug that has been around at least since Rust 1.23 (longer, I suspect).</p>\n\n<p>It is not clear what is causing the problem and when/if it will be fixed. There is only a rather vague hypothesis:</p>\n\n<blockquote>\n  <p>I'm not familiar with the compiler internals, but <strong>my hypothesis is that associated types and constants depending on a type parameter are not evaluated properly in the constant expression evaluator</strong>. In this case, it's associated types that do not reduce well: <code>const VAL: Self::T = 5;</code> forces Rust to do some fancy type of computation at compile time in order to type check, but there's a bug in the code for such computations.</p>\n</blockquote>\n\n<p>There are a few ways to work around the issue:</p>\n\n<ol>\n<li><p>Specifying a concrete type in the trait:</p>\n\n<pre><code>pub trait Trait {\n    // type Type;  // no longer used\n    const CONST: u8;\n}\n</code></pre></li>\n<li><p>Opting <code>T</code> out of <code>Sized</code>:</p>\n\n<pre><code>impl&lt;T: ?Sized&gt; Trait for T {\n    type Type = u8;\n    const CONST: u8 = 42;\n}\n</code></pre></li>\n<li><p>Use a function instead of a constant (credit goes to @PeterHall):</p>\n\n<pre><code>pub trait Trait {\n  type Type;\n  fn const_val() -&gt; Self::Type;\n}\n\nimpl&lt;T&gt; Trait for T {\n  type Type = u8;\n  fn const_val() -&gt; Self::Type { 42 }\n}\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 519, "favorite_count": 0, "accepted_answer_id": 51103797, "answer_count": 1, "score": 5, "last_activity_date": 1530289319, "creation_date": 1530253210, "question_id": 51095431, "link": "https://stackoverflow.com/questions/51095431/why-does-rust-want-self-to-be-sized-when-implementing-an-associated-const-with-a", "title": "Why does Rust want Self to be Sized when implementing an associated const with an associated type?", "body": "<p>Consider the following code:</p>\n\n<pre><code>pub trait Trait {\n  type Type;\n  const CONST: Self::Type;\n}\n\nimpl&lt;T&gt; Trait for T {\n  type Type = u8;\n  const CONST: u8 = 42;\n}\n</code></pre>\n\n<p>My (incorrect?) understanding of Rust is that this code should work and that all <code>Sized</code> types should now implement <code>Trait</code> and have an associated type (<code>Type = u8</code>) and const (<code>CONST = 42</code>). Unsized types shouldn't implement this trait since <code>impl&lt;T&gt;</code> implicitly assumes <code>T</code> to be <code>Sized</code>.</p>\n\n<p>However, when I try to <a href=\"https://play.rust-lang.org/?gist=3386c356e537e91c36d4b1590e5ca8d9&amp;version=nightly&amp;mode=debug\" rel=\"noreferrer\">compile the code</a> I get the error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for value values of type `T` cannot be known at compilation time\n --&gt; src/main.rs:8:3\n  |\n8 |   const CONST: u8 = 42;\n  |   ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `T`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized&gt;\n  = help: consider adding a `where T: std::marker::Sized` bound\n  = note: required because of the requirements on the impl of `Trait` for `T`\n</code></pre>\n\n<p>My questions:</p>\n\n<ul>\n<li>Why does Rust think that <code>T</code> isn't <code>Sized</code> here? <a href=\"https://play.rust-lang.org/?gist=0accf2876da1658f427d70150a1e0f62&amp;version=nightly&amp;mode=debug\" rel=\"noreferrer\">Explicitly stating <code>T: Sized</code> doesn't help</a>.</li>\n<li>Let's pretend <code>T</code> isn't <code>Sized</code>. Why does Rust care whether <code>T</code> is sized or not here? Nothing depends on it, as far as I can tell (the associated type and const aren't related to <code>T</code>). Changing the code to <code>T: ?Sized</code> works, so clearly <code>T</code> being unsized isn't actually problematic.</li>\n</ul>\n"}, {"tags": ["function", "parameters", "rust", "increment"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1530212664, "post_id": 51089668, "comment_id": 89167734, "body": "Simply, <code>i</code> =&gt; <code>*i</code>"}], "answers": [{"tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": false, "score": 7, "last_activity_date": 1530219792, "last_edit_date": 1530219792, "creation_date": 1530212669, "answer_id": 51089743, "question_id": 51089668, "link": "https://stackoverflow.com/questions/51089668/how-can-a-rust-function-modify-the-value-of-an-array-index/51089743#51089743", "title": "How can a Rust function modify the value of an array index?", "body": "<p>You need to dereference <code>i</code>. This can be confusing because Rust does a lot of <a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">auto dereferencing</a> for you.</p>\n\n<pre><code>fn main() {\n    let mut x: [usize; 3] = [1; 3];\n    let mut i: usize = 1;\n    f(&amp;mut i, &amp;mut x);\n    println!(\"\\nWant i = 2, and i = {}\", i);\n    println!(\"\\nWant x = [1,2,1], and x = {:?}\", x);\n} // end main\n\nfn f(i: &amp;mut usize, x: &amp;mut [usize]) {\n    x[*i] += 1;\n    *i += 1;\n} // end f\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=7437fdc6bfb3eafc52871d822dffbc72&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 133, "user_id": 3134725, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/53d7db90cbd53dd396396d148593b067?s=128&d=identicon&r=PG&f=1", "display_name": "user3134725", "link": "https://stackoverflow.com/users/3134725/user3134725"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2373, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1530219792, "creation_date": 1530212351, "last_edit_date": 1530219768, "question_id": 51089668, "link": "https://stackoverflow.com/questions/51089668/how-can-a-rust-function-modify-the-value-of-an-array-index", "title": "How can a Rust function modify the value of an array index?", "body": "<p>My goal is to have the Rust function <code>f</code> increment an element of array <code>x</code>, and increment the index <code>i</code>: </p>\n\n<pre><code>fn main() {\n    let mut x: [usize; 3] = [1; 3];\n    let mut i: usize = 1;\n    f(&amp;mut i, &amp;mut x);\n    println!(\"\\nWant i = 2, and i = {}\", i);\n    println!(\"\\nWant x = [1,2,1], and x = {:?}\", x);\n} // end main\n\nfn f(i: &amp;mut usize, x: &amp;mut [usize]) {\n    x[i] += 1;\n    i += 1;\n} // end f\n</code></pre>\n\n<p>The compiler reports the following errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;mut usize: std::slice::SliceIndex&lt;[usize]&gt;` is not satisfied\n  --&gt; src/main.rs:10:5\n   |\n10 |     x[i] += 1;\n   |     ^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `std::slice::SliceIndex&lt;[usize]&gt;` is not implemented for `&amp;mut usize`\n   = note: required because of the requirements on the impl of `std::ops::Index&lt;&amp;mut usize&gt;` for `[usize]`\n\nerror[E0368]: binary assignment operation `+=` cannot be applied to type `&amp;mut usize`\n  --&gt; src/main.rs:11:5\n   |\n11 |     i += 1;\n   |     -^^^^^\n   |     |\n   |     cannot use `+=` on type `&amp;mut usize`\n</code></pre>\n\n<p>How do I make the function <code>f</code> increment both an element of its array parameter <code>x</code> and the index <code>i</code> (also a parameter)?</p>\n"}, {"tags": ["javascript", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1530200633, "post_id": 51083241, "comment_id": 89162239, "body": "Are you not familiar with JavaScript coding practices? There&#39;s nothing special about this code from the JS point of view, which is kind of the point."}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530226893, "post_id": 51083241, "comment_id": 89172714, "body": "I am making a DSL in Rust to create React components. They are created using JavaScript functions: <code>function Hello(props) {  return &lt;h1&gt;Hello!&lt;&#47;h1&gt;;}</code> is a component that can be used as <code>var elem = &lt;Hello&#47;&gt;;</code>. When I create the component in Rust and use it in the same file I need to add the namespace. From another file, I can do <code>import { Hello } from &#39;.&#47;comp.js&#39;;</code> and use Hello without a namespace. I want to use Hello without a namespace in both cases."}], "answers": [{"tags": [], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "is_accepted": true, "score": 0, "last_activity_date": 1530645800, "creation_date": 1530645800, "answer_id": 51161651, "question_id": 51083241, "link": "https://stackoverflow.com/questions/51083241/how-to-call-a-rust-function-from-javascript-without-a-namespace/51161651#51161651", "title": "How to call a Rust function from JavaScript without a namespace?", "body": "<p>I couldn't call a Rust function by name from JavaScript unless I exported it first (<code>#[js_export]</code>). However, the <code>js!</code> macro from the <a href=\"https://github.com/koute/stdweb\" rel=\"nofollow noreferrer\">stdweb library</a> allows JavaScript code to call a regular Rust function:</p>\n\n<pre><code>fn handleClick(e: Value) {\n    js!{ alert(\"Hello!\"); }\n}\n</code></pre>\n\n<p>To call it:</p>\n\n<pre><code>js!{\n    React.createElement(\"p\",{onClick: @{handleClick} }, ...);\n}\n</code></pre>\n\n<p>or, if you really need to name the function:</p>\n\n<pre><code>js!{\n    const fct = @{handleClick};\n    React.createElement(\"p\",{onClick: fct}, ...);\n</code></pre>\n"}], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 324, "favorite_count": 0, "accepted_answer_id": 51161651, "answer_count": 1, "score": 0, "last_activity_date": 1530645800, "creation_date": 1530189723, "last_edit_date": 1530200563, "question_id": 51083241, "link": "https://stackoverflow.com/questions/51083241/how-to-call-a-rust-function-from-javascript-without-a-namespace", "title": "How to call a Rust function from JavaScript without a namespace?", "body": "<p>I am using the <a href=\"https://github.com/koute/stdweb\" rel=\"nofollow noreferrer\">stdweb library</a> to call a Rust function from JavaScript:</p>\n\n<pre><code>#[js_export]\nfn handleClick(e: Value) {\n    js!{ alert(\"Hello!\"); }\n}\n</code></pre>\n\n<p>It works, but I have to add the namespace <code>Module.exports.</code> to call it:</p>\n\n<pre><code>React.createElement(\"p\",{onClick: e =&gt; Module.exports.handleClick(e) }, ... }\n</code></pre>\n\n<p>How can I hide this namespace or make it smaller?</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1530190453, "post_id": 51082737, "comment_id": 89155195, "body": "Without the attribute, you would need to express the types in some sort of schema. But unfortunately <code>serde_xml_rs</code>  does not support schema or DTD."}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1530190888, "post_id": 51082737, "comment_id": 89155478, "body": "Maybe <code>Option&lt;u32&gt;</code> would work to handle non-numeric cases"}, {"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "edited": false, "score": 0, "creation_date": 1530209789, "post_id": 51082737, "comment_id": 89166609, "body": "<a href=\"https://stackoverflow.com/questions/27043268/convert-a-string-to-int-in-rust\" title=\"convert a string to int in rust\">stackoverflow.com/questions/27043268/&hellip;</a>  Why not just append the str::parse::&lt;u32&gt; to your deserialize function?"}], "answers": [{"tags": [], "owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "is_accepted": false, "score": 0, "last_activity_date": 1535636968, "creation_date": 1535636968, "answer_id": 52098717, "question_id": 51082737, "link": "https://stackoverflow.com/questions/51082737/how-to-deserialise-a-number-from-an-xml-attribute-using-serde/52098717#52098717", "title": "How to deserialise a number from an XML attribute using serde?", "body": "<p>Do not use <code>0.2.1</code>. Add to Cargo.toml:</p>\n\n<pre><code>serde-xml-rs = { git= \"https://github.com/RReverser/serde-xml-rs.git\"}\n</code></pre>\n\n<p>Using serde-xml-rs from master fixes this issue.</p>\n"}], "owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 327, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1538858019, "creation_date": 1530188338, "last_edit_date": 1538858019, "question_id": 51082737, "link": "https://stackoverflow.com/questions/51082737/how-to-deserialise-a-number-from-an-xml-attribute-using-serde", "title": "How to deserialise a number from an XML attribute using serde?", "body": "<p>I want to deserialize a number (for example, <code>u32</code>) from an XML attribute.</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde;\nextern crate serde_xml_rs as serde_xml;\n\n\n#[derive(Deserialize, Debug)]\n#[serde(rename = \"objects\")]\npub struct Objects {\n    pub foo: u32\n}\n\nfn main() {\n    let result_string = r#\"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n    &lt;objects foo=\"42\"&gt;&lt;/objects&gt;\"#;\n    let deserialized: Objects= serde_xml::deserialize(result_string.as_bytes()).expect(\"Parse error!\");\n}\n</code></pre>\n\n<p>But after execution, I get the following error</p>\n\n<pre><code>thread 'main' panicked at 'Parse error!: invalid type: string \"42\", expected u32'\n</code></pre>\n\n<p>I know about <code>#[serde(deserialize_with=\"...\")]</code> annotation, but is there an easier way, (for example use <code>serde_xml_rs</code> crate)?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1530187647, "post_id": 51079507, "comment_id": 89153420, "body": "This looks like a bug, related to some special handling of <code>Cell</code> by the compiler. See <a href=\"https://play.rust-lang.org/?gist=ea79b3576a84f620cdf0c4b5e3bf52a8&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">this playground snippet</a> where I&#39;ve replaced the <code>std::cell::Cell</code> with a custom type having exactly the same constraints, but it doesn&#39;t exhibit the problem."}, {"owner": {"reputation": 610, "user_id": 5212952, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9V6zT.jpg?s=128&g=1", "display_name": "Drgabble", "link": "https://stackoverflow.com/users/5212952/drgabble"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1530188273, "post_id": 51079507, "comment_id": 89153813, "body": "Very interesting... so the lifetime definition as I&#39;ve written it does match what I was attempting in your opinion? In which case if there aren&#39;t any any other answers I shall file a bug report. Exciting! @PeterHall would like to add your comment as an answer?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1530192972, "post_id": 51079507, "comment_id": 89157012, "body": "A thing to note \u2014 those aren&#39;t function pointers. A function pointer is of type <code>fn(...) -&gt; ...</code>. You just have generic types that implement the <code>Fn*</code> traits (which don&#39;t have a succinct name AFAIK). You also don&#39;t need to take a reference to it, just pass it by value."}], "answers": [{"comments": [{"owner": {"reputation": 610, "user_id": 5212952, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9V6zT.jpg?s=128&g=1", "display_name": "Drgabble", "link": "https://stackoverflow.com/users/5212952/drgabble"}, "edited": false, "score": 0, "creation_date": 1530192414, "post_id": 51083886, "comment_id": 89156586, "body": "But in the first example, surely my reference to <code>number</code> also does not exists for the lifetime of <code>&#39;a</code> (i.e. the entire function and possibly beyond)? Why does that one compile?"}, {"owner": {"reputation": 610, "user_id": 5212952, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9V6zT.jpg?s=128&g=1", "display_name": "Drgabble", "link": "https://stackoverflow.com/users/5212952/drgabble"}, "edited": false, "score": 0, "creation_date": 1530192586, "post_id": 51083886, "comment_id": 89156730, "body": "What exactly does invariant over T mean in this context?"}, {"owner": {"reputation": 610, "user_id": 5212952, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9V6zT.jpg?s=128&g=1", "display_name": "Drgabble", "link": "https://stackoverflow.com/users/5212952/drgabble"}, "edited": false, "score": 0, "creation_date": 1530192697, "post_id": 51083886, "comment_id": 89156811, "body": "Is there no way to say &quot;infer the lifetime <code>&#39;a</code> at the point where function <code>func</code> is called, not where the function <code>foo</code> is called&quot;?"}, {"owner": {"reputation": 610, "user_id": 5212952, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9V6zT.jpg?s=128&g=1", "display_name": "Drgabble", "link": "https://stackoverflow.com/users/5212952/drgabble"}, "edited": false, "score": 0, "creation_date": 1530193375, "post_id": 51083886, "comment_id": 89157311, "body": "To address the final point in your question @Shepmaster, it is a slightly contrived example. For reasons outside the scope of this question the struct needs to be immutable - I was seeking to create a minimum example that demonstrated my issue with out cluttering it. I think I might open another question to better rephrase what I&#39;m getting at, perhaps with a larger example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 610, "user_id": 5212952, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9V6zT.jpg?s=128&g=1", "display_name": "Drgabble", "link": "https://stackoverflow.com/users/5212952/drgabble"}, "edited": false, "score": 0, "creation_date": 1530193457, "post_id": 51083886, "comment_id": 89157378, "body": "@Drgabble yep, I figured it was an artifact of the example."}, {"owner": {"reputation": 610, "user_id": 5212952, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9V6zT.jpg?s=128&g=1", "display_name": "Drgabble", "link": "https://stackoverflow.com/users/5212952/drgabble"}, "edited": false, "score": 0, "creation_date": 1530193624, "post_id": 51083886, "comment_id": 89157484, "body": "Ooh, that final example might actually work with what I was looking for... I had originally tried it without the <code>&amp;&#39;a i32</code> and got the error <code>binding for associated type `Output` references lifetime `&#39;a`, which does not appear in the trait input types</code>. But I could change it to take the input."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1530253762, "post_id": 51083886, "comment_id": 89178817, "body": "I&#39;d like to see an explanation of the mechanism by which the compiler treats <code>Cell</code> differently from an apparently identical user-defined struct. The type of <code>Cell</code> does not communicate the invariance."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1530200199, "last_edit_date": 1530200199, "creation_date": 1530191701, "answer_id": 51083886, "question_id": 51079507, "link": "https://stackoverflow.com/questions/51079507/how-do-i-pass-a-function-that-creates-a-struct-containing-a-cell-with-a-lifetime/51083886#51083886", "title": "How do I pass a function that creates a struct containing a Cell with a lifetime to another function?", "body": "<p>The compiler is smarter than you give it credit for. It has <strong>prevented you from introducing memory unsafety</strong>:</p>\n\n<blockquote>\n<pre><code>fn foo&lt;'a, F&gt;(func: &amp;F)\nwhere\n    F: Fn() -&gt; Bar&lt;'a&gt;,\n{\n    let number = 42;\n    let bar = (func)();\n    bar.number.set(Some(&amp;number));\n}\n</code></pre>\n</blockquote>\n\n<p>This code says that the caller of <code>foo</code> can specify a lifetime for <code>'a</code>, but then the body of the method stores a reference into the value. That stored reference is not guaranteed to live that long. As an obvious example, the caller might require that <code>'a</code> == <code>'static</code>, but that would be impossible for the function to accomplish:</p>\n\n<pre><code>fn b() -&gt; Bar&lt;'static&gt; {\n    Bar {\n        number: Cell::new(None),\n    }\n}\n\nfn main() {\n    foo(&amp;b);\n}\n</code></pre>\n\n<p>Note that this doesn't have anything to do with closures or functions:</p>\n\n<pre><code>use std::cell::Cell;\n\nfn main() {\n    let number = Cell::new(None);\n    let x = 1;\n    number.set(Some(&amp;x));\n    let y = 2;\n    number.set(Some(&amp;y));\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `x` does not live long enough\n --&gt; src/main.rs:6:22\n  |\n6 |     number.set(Some(&amp;x));\n  |                      ^ borrowed value does not live long enough\n...\n9 | }\n  | - `x` dropped here while still borrowed\n  |\n  = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<blockquote>\n  <p>Why did the first example work and not the second? </p>\n</blockquote>\n\n<p>Because the compiler knows that <code>Cell</code> (really <code>UnsafeCell</code>) needs to account for the possibility that you will be storing a value in the created type.</p>\n\n<p>From <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html#variance\" rel=\"nofollow noreferrer\">the Nomicon</a>, emphasis mine:</p>\n\n<blockquote>\n  <ul>\n  <li><code>UnsafeCell&lt;T&gt;</code>, <code>Cell&lt;T&gt;</code>, <code>RefCell&lt;T&gt;</code>, <code>Mutex&lt;T&gt;</code> and all other interior mutability types are <strong>invariant over <code>T</code></strong> (as is <code>*mut T</code> by metaphor)</li>\n  </ul>\n</blockquote>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Covariance_and_contravariance_(computer_science)\" rel=\"nofollow noreferrer\">Variance</a> is a dense topic that I cannot explain succinctly. </p>\n\n<p><a href=\"https://stackoverflow.com/users/3650362/trentcl\">@trentcl</a> provides this example that shows that your original code may not be doing what you think it is.</p>\n\n<p>Without the <code>Cell</code>, the compiler knows that it's safe to automatically adjust the lifetime of the returned type to one that's a little bit shorter. If we force the type to be the longer <code>'a</code>, however, we get the same error:</p>\n\n<pre><code>fn foo&lt;'a, F&gt;(func: F)\nwhere\n    F: Fn() -&gt; Bar&lt;'a&gt;,\n{\n    let number = 42;\n    let mut bar: Bar&lt;'a&gt; = func();\n    //           ^^^^^^^\n    bar.number = Some(&amp;number);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `number` does not live long enough\n  --&gt; src/main.rs:17:24\n   |\n17 |     bar.number = Some(&amp;number);\n   |                        ^^^^^^ borrowed value does not live long enough\n18 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 11:1...\n  --&gt; src/main.rs:11:1\n   |\n11 | / fn foo&lt;'a, F&gt;(func: F)\n12 | | where\n13 | |     F: Fn() -&gt; Bar&lt;'a&gt;,\n14 | | {\n...  |\n17 | |     bar.number = Some(&amp;number);\n18 | | }\n   | |_^\n</code></pre>\n\n<blockquote>\n  <p>Is this not possible without [...]</p>\n</blockquote>\n\n<p>Yes, but I'm not sure exactly what it would be. I believe it would need <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">generic associated types (GAT) from RFC 1598</a>.</p>\n\n<p>My first thought was to try higher-ranked trait bounds (HRTB):</p>\n\n<pre><code>fn foo&lt;F&gt;(func: F)\nwhere\n    F: for&lt;'a&gt; Fn() -&gt; Bar&lt;'a&gt;,\n{\n    let number = 42;\n    let bar = func();\n    bar.number.set(Some(&amp;number));\n}\n</code></pre>\n\n<p>This triggers <a href=\"https://doc.rust-lang.org/stable/error-index.html#E0582\" rel=\"nofollow noreferrer\">E0582</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0582]: binding for associated type `Output` references lifetime `'a`, which does not appear in the trait input types\n  --&gt; src/main.rs:17:25\n   |\n17 |     F: for &lt;'a&gt; Fn() -&gt; Bar&lt;'a&gt;,\n   |                         ^^^^^^^\n</code></pre>\n\n<hr>\n\n<p>To be honest, I cannot see the value in the code based on the example provided. If you are returning a <code>Bar</code> by value, you can make it mutable, removing any need for interior mutability.</p>\n\n<p>You can also change the closure to take the value as needed:</p>\n\n<pre><code>fn foo&lt;F&gt;(func: F)\nwhere\n    F: for&lt;'a&gt; Fn(&amp;'a i32) -&gt; Bar&lt;'a&gt;,\n{\n    let number = 42;\n    let bar = func(&amp;number);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/45713314/155423\">Is it possible to have a struct which contains a reference to a value which has a shorter lifetime than the struct?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35592750/155423\">How does for&lt;&gt; syntax differ from a regular lifetime bound?</a></li>\n</ul>\n"}], "owner": {"reputation": 610, "user_id": 5212952, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9V6zT.jpg?s=128&g=1", "display_name": "Drgabble", "link": "https://stackoverflow.com/users/5212952/drgabble"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 169, "favorite_count": 2, "answer_count": 1, "score": 12, "last_activity_date": 1530200199, "creation_date": 1530178663, "last_edit_date": 1530190711, "question_id": 51079507, "link": "https://stackoverflow.com/questions/51079507/how-do-i-pass-a-function-that-creates-a-struct-containing-a-cell-with-a-lifetime", "title": "How do I pass a function that creates a struct containing a Cell with a lifetime to another function?", "body": "<p>I'm trying to pass a constructor function as an argument to another function. The function creates a struct with an associated lifetime.  I need to create a struct from this pointer <strong>after</strong> I have created some other objects that this struct can then reference. The example below seems to work:</p>\n\n<pre><code>struct Bar&lt;'a&gt; {\n    number: Option&lt;&amp;'a usize&gt;,\n}\n\nimpl&lt;'a&gt; Bar&lt;'a&gt; {\n    pub fn new() -&gt; Bar&lt;'a&gt; {\n        Bar { number: None }\n    }\n}\n\nfn foo&lt;'a, F&gt;(func: &amp;F)\nwhere\n    F: Fn() -&gt; Bar&lt;'a&gt;,\n{\n    let number = 42;\n    let mut bar = (func)();\n    bar.number = Some(&amp;number);\n}\n\nfn main() {\n    foo(&amp;Bar::new);\n}\n</code></pre>\n\n<p>When I add a <code>Cell</code> for interior mutability then it does not compile:</p>\n\n<pre><code>use std::cell::Cell;\n\nstruct Bar&lt;'a&gt; {\n    number: Cell&lt;Option&lt;&amp;'a usize&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Bar&lt;'a&gt; {\n    pub fn new() -&gt; Bar&lt;'a&gt; {\n        Bar {\n            number: Cell::new(None),\n        }\n    }\n}\n\nfn foo&lt;'a, F&gt;(func: &amp;F)\nwhere\n    F: Fn() -&gt; Bar&lt;'a&gt;,\n{\n    let number = 42;\n    let bar = (func)();\n    bar.number.set(Some(&amp;number));\n}\n\nfn main() {\n    foo(&amp;Bar::new);\n}\n</code></pre>\n\n<p>Giving me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `number` does not live long enough\n  --&gt; src/main.rs:21:26\n   |\n21 |     bar.number.set(Some(&amp;number));\n   |                          ^^^^^^ borrowed value does not live long enough\n22 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 15:1...\n  --&gt; src/main.rs:15:1\n   |\n15 | / fn foo&lt;'a, F&gt;(func: &amp;F)\n16 | | where\n17 | |     F: Fn() -&gt; Bar&lt;'a&gt;,\n18 | | {\n...  |\n21 | |     bar.number.set(Some(&amp;number));\n22 | | }\n   | |_^\n</code></pre>\n\n<p>Why did the first example work and not the second? Is there a way to specify a lifetime that exists for the scope <code>let mut bar</code> until the end of the function, rather than <code>'a</code> which encompasses the entire function? Is this not possible without Non Lexical Lifetimes or Higher Kind Type Constructors etc?</p>\n"}, {"tags": ["rust", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 2, "last_activity_date": 1530175308, "creation_date": 1530175308, "answer_id": 51078386, "question_id": 51078215, "link": "https://stackoverflow.com/questions/51078215/why-does-matching-a-result-require-an-explicit-err-when-changing-the-type-of-the/51078386#51078386", "title": "Why does matching a Result require an explicit Err when changing the type of the Result?", "body": "<p>You are matching <code>Result&lt;Option&lt;u8&gt;, String&gt;</code>, so <code>e</code> is of this type but your function requires the return value to be the type of <code>Result&lt;u8, String&gt;</code>: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>note: expected type `std::result::Result&lt;u8, _&gt;`\n         found type `std::result::Result&lt;std::option::Option&lt;u8&gt;, _&gt;`\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 8, "last_activity_date": 1530199525, "last_edit_date": 1530199525, "creation_date": 1530175337, "answer_id": 51078398, "question_id": 51078215, "link": "https://stackoverflow.com/questions/51078215/why-does-matching-a-result-require-an-explicit-err-when-changing-the-type-of-the/51078398#51078398", "title": "Why does matching a Result require an explicit Err when changing the type of the Result?", "body": "<p>Because <code>Err</code> is not a type.</p>\n\n<p><code>Err</code> is a variant of <code>Result&lt;T, E&gt;</code> whose type is <code>Result&lt;T, E&gt;</code>. Since <code>Result&lt;T, E&gt;</code> is different from <code>Result&lt;U, E&gt;</code> unless <code>T == U</code>, and since there is no implicit conversion, you need to explicitly perform the conversion.</p>\n\n<p>I admit it does look silly since type inference takes care of deducing the <code>T</code>, <code>U</code>, and <code>E</code> in this case resulting in <code>Err(e) =&gt; return Err(e)</code>, but at the semantic level those 2 <code>Err(e)</code> have different types.</p>\n\n<p>For another silly example:</p>\n\n<pre><code>enum Term&lt;'a&gt; {\n    Int(i64),\n    String(&amp;'a str),\n}\n\nfn staticify(t: Term) -&gt; Term&lt;'static&gt; {\n    use Term::*;\n\n    match t {\n        String(_) =&gt; String(\"Hello, World!\"),\n        _ =&gt; t,\n    }\n}\n</code></pre>\n\n<p>Will fail for the same reason, because <code>Term&lt;'a&gt;</code> and <code>Term&lt;'static&gt;</code> are not the same type unless <code>'a == 'static</code>. When <code>Term</code> contains mostly non-lifetime parameters it gets tedious :(</p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 3, "last_activity_date": 1530199548, "last_edit_date": 1530199548, "creation_date": 1530179173, "answer_id": 51079685, "question_id": 51078215, "link": "https://stackoverflow.com/questions/51078215/why-does-matching-a-result-require-an-explicit-err-when-changing-the-type-of-the/51079685#51079685", "title": "Why does matching a Result require an explicit Err when changing the type of the Result?", "body": "<p>Things will be clearer if you use qualified types for your <code>Err(e) =&gt; return Err(e)</code> case. What you are really saying here is:</p>\n\n<pre><code>Result&lt;Option&lt;u8&gt;, String&gt;::Err(e) =&gt; return Result&lt;u8, String&gt;::Err(e)\n</code></pre>\n\n<p>Once written like this, it becomes clear that there is a conversion going on. Conversely, <code>e =&gt; return e</code> is equivalent to:</p>\n\n<pre><code>Result&lt;Option&lt;u8&gt;, String&gt;::Err(e) =&gt; return Result&lt;Option&lt;u8&gt;, String&gt;::Err(e)\n</code></pre>\n\n<p>which has the wrong type since your function is supposed to return <code>Result&lt;u8, String&gt;</code>.</p>\n"}], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 51078398, "answer_count": 3, "score": 2, "last_activity_date": 1530199759, "creation_date": 1530174730, "last_edit_date": 1530199759, "question_id": 51078215, "link": "https://stackoverflow.com/questions/51078215/why-does-matching-a-result-require-an-explicit-err-when-changing-the-type-of-the", "title": "Why does matching a Result require an explicit Err when changing the type of the Result?", "body": "<p>I have a match expression that I would like to potentially return an error from. It seems that the compiler is not able to infer that the last case <code>e</code> is an <code>Err(String)</code> and requires the pattern to be explicit:</p>\n\n<pre><code>fn foo() -&gt; Result&lt;Option&lt;u8&gt;, String&gt; {\n    unimplemented!() // don't mind the panic here\n}\n\nfn foo2() -&gt; Result&lt;u8, String&gt; {\n    let bar = foo();\n\n    for _ in 0..3 {\n        let baz = match bar {\n            Ok(Some(b)) =&gt; b,\n            Ok(None)    =&gt; continue,\n            Err(e)      =&gt; return Err(e) // works\n//          e           =&gt; return e      // error[E0308]\n        };\n    }\n\n    Ok(0)\n}\n\nfn main() {\n    let _ = foo2();\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:13:33\n   |\n13 |           e           =&gt; return e      // error[E0308]\n   |                                 ^ expected u8, found enum `std::option::Option`\n   |\n   = note: expected type `std::result::Result&lt;u8, _&gt;`\n              found type `std::result::Result&lt;std::option::Option&lt;u8&gt;, _&gt;`\n</code></pre>\n\n<p>I'm pretty sure I have exhausted all the <code>Ok(_)</code> variants, so the only one left should be <code>Err(_)</code>. This error doesn't occur if <code>foo()</code> returns <code>Result&lt;u8, String&gt;</code>, for instance. Am I missing anything?</p>\n"}]