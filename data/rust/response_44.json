[{"tags": ["rust", "function-pointers", "channel"], "answers": [{"comments": [{"owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "edited": false, "score": 0, "creation_date": 1447336962, "post_id": 33668543, "comment_id": 55119122, "body": "Unfortunately, stable is my only option. It looks like you just confirmed what I&#39;ve already tried and figured out, but someone else may find this super helpful who has the ability to use nightly. Thanks :)"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "edited": false, "score": 2, "creation_date": 1447339092, "post_id": 33668543, "comment_id": 55120657, "body": "You can use a hack. Still use a <code>Fn</code> and only move in <code>Option</code>s that you move out of with <code>take</code>. Then you get a runtime-error when you mis-use your <code>Fn</code>"}, {"owner": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "edited": false, "score": 0, "creation_date": 1510585635, "post_id": 33668543, "comment_id": 81485439, "body": "What if I need a <code>Fn</code> though, because of a library requirement."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "edited": false, "score": 1, "creation_date": 1510665812, "post_id": 33668543, "comment_id": 81523843, "body": "@JeroenBollen the hack still applies. <code>move || (foo_option.take().unwrap())()</code>"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 26, "last_activity_date": 1471573575, "last_edit_date": 1471573575, "creation_date": 1447321839, "answer_id": 33668543, "question_id": 33662098, "link": "https://stackoverflow.com/questions/33662098/cannot-move-out-of-captured-outer-variable-in-an-fn-closure/33668543#33668543", "title": "Cannot move out of captured outer variable in an `Fn` closure", "body": "<p>The problem with <code>Fn()</code> is that you can call it multiple times. If you moved out of a captured value, that value would not be available anymore at the next call. You need a <code>FnOnce()</code> to make sure calling the closure also moves out of it, so it's gone and can't be called again.</p>\n\n<p>There's no way to have an <code>Arc&lt;Mutex&lt;(FnOnce() + Send + Sync + 'static)&gt;&gt;</code>. This would again require that you statically guarantee that after you call the function, noone else can call it again. Which you cannot, since someone else might have another <code>Arc</code> pointing to your <code>FnOnce</code>. What you can do is box it and send it as <code>Box&lt;FnOnce() + Send + Sync + 'static&gt;</code>. There's only ever one owner of a <code>Box</code>.</p>\n\n<p>The trouble with <code>FnOnce()</code> is, is that you can't really call it while it's in the <code>Box</code>, because that would require moving it out of the <code>Box</code> and calling it. But we don't know the size of it, so we cannot move it out of the <code>Box</code>. In the future <code>Box&lt;FnOnce()&gt;</code> closures might become directly usable.</p>\n\n<p>\"Luckily\" this problem occurred more often, so there's <a href=\"https://doc.rust-lang.org/stable/std/boxed/trait.FnBox.html\" rel=\"noreferrer\"><code>FnBox</code></a>. Sadly this requires nightly to work. Also I couldn't figure out how to use the function call syntax that is described in the docs, but you can manually call <code>call_box</code> on the <code>Box&lt;FnBox()&gt;</code>. Try it out in the <a href=\"https://play.rust-lang.org/?gist=ca093c71cac4969351149522bbf4ddb2&amp;version=nightly&amp;backtrace=0\" rel=\"noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6265, "favorite_count": 3, "accepted_answer_id": 33668543, "answer_count": 1, "score": 24, "last_activity_date": 1471573575, "creation_date": 1447286214, "last_edit_date": 1447297774, "question_id": 33662098, "link": "https://stackoverflow.com/questions/33662098/cannot-move-out-of-captured-outer-variable-in-an-fn-closure", "title": "Cannot move out of captured outer variable in an `Fn` closure", "body": "<p>I'm trying to figure out how to send a function through a channel, and how to avoid extra cloning in order to execute the function at the other end. If I remove the extra cloning operation inside the closure, I get the following error: </p>\n\n<pre><code>error: cannot move out of captured outer variable in an 'Fn' closure\n</code></pre>\n\n<p>Ignoring the fact that this code does absolutely nothing, and makes use of a global mutable static <code>Sender&lt;T&gt;</code>, it represents what I'm trying to achieve while giving the proper compiler errors. This code is <strong>not meant to be ran</strong>, just compiled.</p>\n\n<pre><code>use std::ops::DerefMut;\nuse std::sync::{Arc, Mutex};\nuse std::collections::LinkedList;\nuse std::sync::mpsc::{Sender, Receiver};\n\ntype SafeList = Arc&lt;Mutex&lt;LinkedList&lt;u8&gt;&gt;&gt;;\ntype SendableFn = Arc&lt;Mutex&lt;(Fn() + Send + Sync + 'static)&gt;&gt;;\nstatic mut tx: *mut Sender&lt;SendableFn&gt; = 0 as *mut Sender&lt;SendableFn&gt;;\n\nfn main() {\n    let list: SafeList = Arc::new(Mutex::new(LinkedList::new()));\n    loop {\n        let t_list = list.clone();\n        run(move || {\n            foo(t_list.clone());\n        });\n    }\n}\n\nfn run&lt;T: Fn() + Send + Sync + 'static&gt;(task: T) {\n    unsafe {\n        let _ = (*tx).send(Arc::new(Mutex::new(task)));\n    }\n}\n\n#[allow(dead_code)]\nfn execute(rx: Receiver&lt;SendableFn&gt;) {\n    for t in rx.iter() {\n        let mut guard = t.lock().unwrap();\n        let task = guard.deref_mut();\n        task();\n    }\n}\n\n#[allow(unused_variables)]\nfn foo(list: SafeList) { }\n</code></pre>\n\n<p>Is there a better method to getting around that error and/or another way I should be sending functions through channels?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user824425"}, "edited": false, "score": 4, "creation_date": 1447282041, "post_id": 33661273, "comment_id": 55096237, "body": "I&#39;m probably missing something, but how can you do that in C?"}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 1, "creation_date": 1447292765, "post_id": 33661273, "comment_id": 55099627, "body": "You can use <code>std::process::exit</code> (like C&#39;s <code>exit</code>) to quit early."}], "answers": [{"comments": [{"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 1, "creation_date": 1447292746, "post_id": 33662461, "comment_id": 55099620, "body": "This does allow matching C exactly (i.e. a function marked <code>#[start]</code> is 100% equivalent to C&#39;s <code>main</code>), but isn&#39;t where a Rust program typically starts: most programs will go through <a href=\"https://github.com/rust-lang/rust/blob/cc30948720d152f73e48f8f322ac3f9da18e72cd/src/libstd/rt.rs#L41\" rel=\"nofollow noreferrer\"><code>std::rt::lang_start</code></a>, which is executed directly by C&#39;s <code>main</code>, being passed a function pointer to the Rust <code>main</code> and the argv/argc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1447295561, "post_id": 33662461, "comment_id": 55100357, "body": "@huon would the next part of the docs (&quot;overriding the <code>main</code> shim&quot;) correspond to what you mean? I can add that to the example as well."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1447301065, "post_id": 33662461, "comment_id": 55101877, "body": "I think so, yeah, although you can&#39;t actually create a new version of <code>lang_start</code> if <code>std</code> is imported (lang items can be defined at most once in a dependency graph)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1447290684, "last_edit_date": 1447290684, "creation_date": 1447288332, "answer_id": 33662461, "question_id": 33661273, "link": "https://stackoverflow.com/questions/33661273/determining-where-a-rust-program-starts-and-ends/33662461#33662461", "title": "Determining where a Rust program starts and ends", "body": "<p>Review the <a href=\"https://doc.rust-lang.org/book/no-stdlib.html\" rel=\"nofollow\">documentation for avoiding the standard library</a>. You are looking for the attribute <code>start</code>:</p>\n\n<pre><code>// Entry point for this program\n#[start]\nfn start(_argc: isize, _argv: *const *const u8) -&gt; isize {\n    0\n}\n</code></pre>\n\n<p>And yes, normal execution flow must return back through here. I'm not sure how it plays with panicking.</p>\n"}], "owner": {"reputation": 11, "user_id": 5548256, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1830c81315a97c5dddf915104e9bc25?s=128&d=identicon&r=PG&f=1", "display_name": "Daniel Ohayon", "link": "https://stackoverflow.com/users/5548256/daniel-ohayon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1447290684, "creation_date": 1447281887, "last_edit_date": 1447288357, "question_id": 33661273, "link": "https://stackoverflow.com/questions/33661273/determining-where-a-rust-program-starts-and-ends", "title": "Determining where a Rust program starts and ends", "body": "<p>Can you specify where a Rust program starts executing like you can in C? Or does it always start at <code>main</code>? In addition, can you specify where it ends or does it always end at the end of the main scope?</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 0, "creation_date": 1447265881, "post_id": 33655998, "comment_id": 55087570, "body": "What are you trying to achieve? Currently, using your <code>enum_helper</code> macro results in more code than directly using <code>enum</code>."}, {"owner": {"reputation": 1089, "user_id": 158128, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20225d90d6d62be610d6f7b9c964a4a3?s=128&d=identicon&r=PG", "display_name": "Paul Mason", "link": "https://stackoverflow.com/users/158128/paul-mason"}, "reply_to_user": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 0, "creation_date": 1447266969, "post_id": 33655998, "comment_id": 55088296, "body": "Sorry, to be clear the enum helper is a truncated version of what I&#39;m actually doing. In the actual implementation I am implementing various custom traits etc. I&#39;ll update the example to demonstrate."}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 0, "creation_date": 1447269207, "post_id": 33655998, "comment_id": 55089620, "body": "Perhaps it would be simpler to only create the <code>trait</code>s in the macro, and not creating the <code>enum</code> itself?"}, {"owner": {"reputation": 1089, "user_id": 158128, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20225d90d6d62be610d6f7b9c964a4a3?s=128&d=identicon&r=PG", "display_name": "Paul Mason", "link": "https://stackoverflow.com/users/158128/paul-mason"}, "reply_to_user": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 0, "creation_date": 1447270360, "post_id": 33655998, "comment_id": 55090285, "body": "Unfortunately, I run into the same problem. Essentially, I&#39;m doing pattern matching against the enum within the trait. I need to match against all scenarios so want to know the given types too. Is it perhaps outside the scope of what a macro can do for now? e.g. a job for AST?"}, {"owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "edited": false, "score": 0, "creation_date": 1447281618, "post_id": 33655998, "comment_id": 55096050, "body": "Where are else are you using <code>$name</code>?"}, {"owner": {"reputation": 1089, "user_id": 158128, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20225d90d6d62be610d6f7b9c964a4a3?s=128&d=identicon&r=PG", "display_name": "Paul Mason", "link": "https://stackoverflow.com/users/158128/paul-mason"}, "edited": false, "score": 0, "creation_date": 1447284440, "post_id": 33655998, "comment_id": 55097187, "body": "I&#39;m using name for pattern matching. Let me update the example."}], "owner": {"reputation": 1089, "user_id": 158128, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20225d90d6d62be610d6f7b9c964a4a3?s=128&d=identicon&r=PG", "display_name": "Paul Mason", "link": "https://stackoverflow.com/users/158128/paul-mason"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 528, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1447289119, "creation_date": 1447262002, "last_edit_date": 1447289119, "question_id": 33655998, "link": "https://stackoverflow.com/questions/33655998/representing-enum-variants-with-optional-data-in-macro-rules", "title": "Representing enum variants with optional data in macro_rules", "body": "<p>I'm trying to create a macro to help with some boilerplate enum code that I've been repetitively writing. I managed to implement a simple enum (i.e. no arguments) relatively easily using a basic <code>macro_rule</code>. e.g. An excerpt:</p>\n\n<pre><code>macro_rules! enum_helper {\n    ($type:ident, { $( $name:ident ), * }) =&gt; {\n        enum $type {\n            $(\n                $name,\n            )+\n        }\n\n        impl FromSql for $type {\n            fn from_sql&lt;R: Read&gt;(_: &amp;Type, raw: &amp;mut R, _: &amp;SessionInfo) -&gt; Result&lt;&amp;type&gt; {\n                // ... the implementation\n        }\n\n        // ... plus some other internal traits being implemented\n    }\n}\n\nenum_helper!(Step, {\n    Step1,\n    Step2\n});\n</code></pre>\n\n<p>I was hoping to extend this macro to also support a mixed set of enum styles, primarily with only one typed argument e.g.</p>\n\n<pre><code>enum_helper!(Step, {\n    Step1,\n    Step2,\n    Step3(i64)\n});\n</code></pre>\n\n<p>Is there a way to represent this \"optional\" argument using <code>macro_rules</code>? I suspect it involves using a <code>tt</code> however I'm still a bit lost with how <code>tt</code> works in a subnested environment.</p>\n\n<p><strong>Update 1</strong></p>\n\n<p>I'm using <code>$name</code> within some of the trait implementations for pattern matching. For example, I have some code similar to below:</p>\n\n<pre><code>match raw {\n    $(\n        $type::$name =&gt; { /* a result of some sort */ },\n    )+\n}\n</code></pre>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 625, "user_id": 5471706, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/904857529607067/picture?type=large", "display_name": "Raj Felix", "link": "https://stackoverflow.com/users/5471706/raj-felix"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1447258732, "post_id": 33654653, "comment_id": 55083125, "body": "@Shepmaster thanks. and <code>read_dir</code> source is coming from <a href=\"http://web.mit.edu/rust-lang_v1.2/arch/amd64_ubuntu1404/share/doc/rust/html/std/fs/fn.read_dir.html\" rel=\"nofollow noreferrer\">web.mit.edu/rust-lang_v1.2/arch/amd64_ubuntu1404/share/doc/r&zwnj;&#8203;ust/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1447258913, "post_id": 33654653, "comment_id": 55083249, "body": "I&#39;d encourage you to <a href=\"https://stackoverflow.com/posts/33654653/edit\">edit</a> your question to add that link. I&#39;d also add a link to the crate that you mention to help future people solve their problem without needing to rewrite the code for learning purposes. Also, that doc links to Rust 1.2, while 1.4 is the current stable version."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1447259151, "post_id": 33654653, "comment_id": 55083416, "body": "Also, your question is muddled with separate issues. You seem to be asking about a concrete problem getting something to compile. You should reduce your code to produce an <a href=\"/help/mcve\">MCVE</a> that focuses on that specific problem. Once you have working code, you may want to ask on <a href=\"http://meta.codereview.stackexchange.com/questions/5777/a-guide-to-code-review-for-stack-overflow-users\">Code Review</a> for feedback on making things more efficient."}, {"owner": {"reputation": 311, "user_id": 565185, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/363a3638166ad473a56728b743ca8080?s=128&d=identicon&r=PG", "display_name": "Vladislav Korotnev", "link": "https://stackoverflow.com/users/565185/vladislav-korotnev"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1616566176, "post_id": 33654653, "comment_id": 118039048, "body": "@Shepmaster you were right, now I&#39;m here looking for a crate that can list drives, and nothing relevant but this question turns up :/"}], "answers": [{"tags": [], "owner": {"reputation": 625, "user_id": 5471706, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/904857529607067/picture?type=large", "display_name": "Raj Felix", "link": "https://stackoverflow.com/users/5471706/raj-felix"}, "is_accepted": false, "score": 1, "last_activity_date": 1447267879, "last_edit_date": 1495540316, "creation_date": 1447265283, "answer_id": 33656994, "question_id": 33654653, "link": "https://stackoverflow.com/questions/33654653/efficient-approach-to-get-all-logical-drive-letters-of-hdd-and-collect-root-dirs/33656994#33656994", "title": "Efficient approach to get all logical drive letters of HDD and collect root dirs", "body": "<p>with little help from <a href=\"https://stackoverflow.com/questions/26076005/how-can-i-list-files-of-a-directory-in-rust\">this post</a></p>\n\n<pre><code>extern crate kernel32;\nextern crate libc;\nuse std::fs::{self, DirEntry};\nuse std::path::Path;\nuse std::path::PathBuf;.\nfn main() {\n\n    unsafe{\n        for mut cur_drl in get_win32_ready_drives(){\n            let mut mcur_drl = cur_drl.clone();\n            let mut cur_path = PathBuf::from(mcur_drl.clone());\n\n            //print root of each logical drive letter \n            let unwrpd_curfspath = fs::metadata(cur_path).unwrap();\n            if unwrpd_curfspath.is_dir(){\n\n                for entry in fs::read_dir(mcur_drl).unwrap() {\n\n                        println!(\"drive {0}\", entry.unwrap().path().display());\n                }\n            }\n        }\n    }\n}\n\n//getting all drive letters \nunsafe fn get_win32_ready_drives() -&gt; Vec&lt;String&gt;\n{\n    let mut logical_drives = Vec::with_capacity(5);\n    let mut bitfield =kernel32::GetLogicalDrives();\n     let mut drive = 'A';\n     let mut rtstr = CString::new(\"\");\n\n     while bitfield != 0 {\n           if bitfield &amp; 1 == 1 {\n\n            let strfulldl = drive.to_string() + \":\\\\\";\n            let cstrfulldl = CString::new(strfulldl.clone()).unwrap();\n            let x = kernel32::GetDriveTypeA(cstrfulldl.as_ptr());\n            if(x ==3 || x ==2)\n            {\n                  logical_drives.push(strfulldl);\n                  // println!(\"drive {0} is {1}\", strfdl, x);\n            }\n           }\n           drive = std::char::from_u32((drive as u32) + 1).unwrap();\n                   bitfield &gt;&gt;= 1;\n       }\n    logical_drives\n}\n</code></pre>\n\n<p>i hope that some other newbs could make use of this </p>\n"}], "owner": {"reputation": 625, "user_id": 5471706, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/904857529607067/picture?type=large", "display_name": "Raj Felix", "link": "https://stackoverflow.com/users/5471706/raj-felix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 246, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1447267879, "creation_date": 1447257855, "last_edit_date": 1447259541, "question_id": 33654653, "link": "https://stackoverflow.com/questions/33654653/efficient-approach-to-get-all-logical-drive-letters-of-hdd-and-collect-root-dirs", "title": "Efficient approach to get all logical drive letters of HDD and collect root dirs", "body": "<p>I am aware that there is a crate for similar tasks, but it is not Windows-specific and may not be the most efficient approach. I also wish to learn how to implement what I already know how to do in C# with Rust.</p>\n\n<p>This is what I have tried so far: <a href=\"http://web.mit.edu/rust-lang_v1.4/arch/amd64_ubuntu1404/share/doc/rust/html/std/fs/fn.read_dir.html\" rel=\"nofollow\">read_dir source</a> <sub>(updated)</sub></p>\n\n<pre><code>fn main() {\n\n    unsafe{\n        for mut cur_drl in get_win32_ready_drives(){\n            let mut mcur_drl = cur_drl.clone();\n            let mut cur_path = PathBuf::from(mcur_drl);\n\n            //here i try to print root of current logical\n            let unwrpd_curfspath = fs::metadata(cur_path).unwrap();\n            if unwrpd_curfspath.is_dir(){\n                for entry in (fs::read_dir(cur_path)) {\n                    let curfspath2 = fs::metadata(entry.path()).unwrap();\n                    if curfspath2.is_dir(){\n\n                        cur_drl.push_str(entry.path());\n                        println!(\"drive {0}\", cur_drl);\n                    }\n                }\n            }\n        }\n    }\n} \n// this is the working part of the project so far \n// getting all drive letters\n//(hdd only actually (3 is hdd &amp; 2 = removable..sd cards etc') into a list \nunsafe fn get_win32_ready_drives() -&gt; Vec&lt;String&gt;\n{\n    let mut logical_drives = Vec::with_capacity(5);\n    let mut bitfield =kernel32::GetLogicalDrives();\n     let mut drive = 'A';\n     let mut rtstr = CString::new(\"\");\n\n     while bitfield != 0 {\n           if bitfield &amp; 1 == 1 {\n\n            let strfulldl = drive.to_string() + \":\\\\\";\n            let cstrfulldl = CString::new(strfulldl.clone()).unwrap();\n            let drvT = kernel32::GetDriveTypeA(cstrfulldl.as_ptr());\n            if(drvT ==3 || drvT ==2)\n            {\n                  logical_drives.push(strfulldl);\n                  // println!(\"drive {0} is {1}\", strfdl, drvT);\n            }\n           }\n           drive = std::char::from_u32((drive as u32) + 1).unwrap();\n                   bitfield &gt;&gt;= 1;\n       }\n    logical_drives\n}\n</code></pre>\n\n<p>This code does not compile as I am having issues \nunderstanding each return type and how to properly handle iterating on its results.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1447257274, "post_id": 33654412, "comment_id": 55082105, "body": "Moving out isn&#39;t limited to <code>Box</code>; it also <a href=\"http://is.gd/Wgqq2v\" rel=\"nofollow noreferrer\">applies to references</a>. Of course, you can&#39;t actually move out of a reference, but it tries."}, {"owner": {"reputation": 1596, "user_id": 319954, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/65c56b6acbf9a28bc5abb60b8829e69f?s=128&d=identicon&r=PG", "display_name": "Mansour", "link": "https://stackoverflow.com/users/319954/mansour"}, "edited": false, "score": 0, "creation_date": 1447258223, "post_id": 33654412, "comment_id": 55082750, "body": "@bluss This helps a lot - but given my updated knowledge of derefing and a little testing, <code>*</code> doesn&#39;t discard the box after extracting the value out, as I expected. Since <code>Deref.deref()</code> as implemented on <code>Box</code> does a share borrow (ie <code>&amp;self</code>), it leaves the original owner of the <code>Box</code> intact. Did I understand this correctly?"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1447259973, "post_id": 33654412, "comment_id": 55083993, "body": "@Shepmaster Well it has an error that says it&#39;s not possible, you mean :-)"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "reply_to_user": {"reputation": 1596, "user_id": 319954, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/65c56b6acbf9a28bc5abb60b8829e69f?s=128&d=identicon&r=PG", "display_name": "Mansour", "link": "https://stackoverflow.com/users/319954/mansour"}, "edited": false, "score": 0, "creation_date": 1447260024, "post_id": 33654412, "comment_id": 55084025, "body": "@Mansour Yes, that&#39;s right, I forgot the case that Shepmaster explains and applies to your case -- Deref followed by Copy. An integer implements the <code>Copy</code> trait."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1447260070, "post_id": 33654412, "comment_id": 55084052, "body": "But as explained, the <code>(*a).clone()</code> case does not copy the integer even if it&#39;s a <code>Box&lt;i32&gt;</code>, you call with a reference pointing into the box."}], "tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": false, "score": 13, "last_activity_date": 1447260169, "last_edit_date": 1447260169, "creation_date": 1447257068, "answer_id": 33654412, "question_id": 33653946, "link": "https://stackoverflow.com/questions/33653946/dereferencing-boxt-gives-back-value-instead-of-reference/33654412#33654412", "title": "Dereferencing Box&lt;T&gt; gives back value instead of reference", "body": "<p>Dereferencing doesn't necessarily produce an (intermediate) value. Consider</p>\n\n<pre><code>let b = Box::new(1);\n(*b).clone();\n</code></pre>\n\n<p>The method <code>i32::clone()</code> is called with a <code>&amp;self</code> argument where the reference points to the value inside the box, not to a temporary value that could be produced by <code>(*b)</code>.</p>\n\n<p>The trait <a href=\"http://doc.rust-lang.org/nightly/std/ops/trait.Deref.html\" rel=\"noreferrer\"><code>Deref</code></a> is part of implementing dereferencing (just like <a href=\"http://doc.rust-lang.org/nightly/std/ops/trait.DerefMut.html\" rel=\"noreferrer\"><code>DerefMut</code></a>).</p>\n\n<p>There is no corresponding trait to what <code>*</code> can additionally do on a box: Move the inner value out and discard the box; this is colloquially called <code>DerefMove</code> but remains a compiler-hardcoded box speciality at this point.</p>\n\n<p>When the compiler sees <code>(*a)</code>, it has to infer whether to use <code>Deref</code>, <code>DerefMut</code> or \u201c<code>DerefMove</code>\u201d; it is inferred from how the expression is used: if you call a <code>&amp;self</code> method on the result, <code>Deref</code> is used, for example.</p>\n\n<p>Edited: Inherently copyable types (trait <a href=\"http://doc.rust-lang.org/nightly/std/marker/trait.Copy.html\" rel=\"noreferrer\"><code>Copy</code></a>), use <code>Deref</code> followed by copy instead of \u201c<code>DerefMove</code>\u201d; this is then no longer resticted to Box, but works with all smart pointers.</p>\n"}, {"comments": [{"owner": {"reputation": 1596, "user_id": 319954, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/65c56b6acbf9a28bc5abb60b8829e69f?s=128&d=identicon&r=PG", "display_name": "Mansour", "link": "https://stackoverflow.com/users/319954/mansour"}, "edited": false, "score": 0, "creation_date": 1447258631, "post_id": 33654423, "comment_id": 55083049, "body": "The second part of this answer is exactly what I was missing."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 12, "last_activity_date": 1606761303, "last_edit_date": 1606761303, "creation_date": 1447257082, "answer_id": 33654423, "question_id": 33653946, "link": "https://stackoverflow.com/questions/33653946/dereferencing-boxt-gives-back-value-instead-of-reference/33654423#33654423", "title": "Dereferencing Box&lt;T&gt; gives back value instead of reference", "body": "<p><code>*foo</code> is not the same as calling <code>foo.deref()</code>. If it were, you'd <em>never</em> be able to actually dereference a value. ^_^</p>\n<p><code>*</code> is syntactic sugar for &quot;call <code>Deref::deref</code> and then go into the address provided&quot;. This is just what people expect from that operator. <code>Deref</code> exists to make it extensible.</p>\n<p>That last bit glosses over some details that <a href=\"https://stackoverflow.com/a/33654412/155423\">bluss' answer covers much better</a>.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42264041/155423\">How do I get an owned value out of a `Box`?</a></li>\n</ul>\n"}], "owner": {"reputation": 1596, "user_id": 319954, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/65c56b6acbf9a28bc5abb60b8829e69f?s=128&d=identicon&r=PG", "display_name": "Mansour", "link": "https://stackoverflow.com/users/319954/mansour"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2613, "favorite_count": 2, "accepted_answer_id": 33654423, "answer_count": 2, "score": 10, "last_activity_date": 1606761303, "creation_date": 1447255774, "last_edit_date": 1447258857, "question_id": 33653946, "link": "https://stackoverflow.com/questions/33653946/dereferencing-boxt-gives-back-value-instead-of-reference", "title": "Dereferencing Box&lt;T&gt; gives back value instead of reference", "body": "<p>I can't seem to figure out why:</p>\n\n<pre><code>let a = Box::new(5i32);\nlet _:() = *a;\n</code></pre>\n\n<p>tells me that the assigned type on the second line is <code>i32</code> and not <code>&amp;i32</code> since <code>Deref.deref()</code> (which I assume is being called at <code>*a</code>), returns <code>&amp;T</code>.</p>\n\n<p>Also, if I were to call <code>deref()</code> myself:</p>\n\n<pre><code>let _:() = &lt;Box&lt;i32&gt; as Deref&gt;::deref(&amp;a);\n</code></pre>\n\n<p>I get the expected <code>&amp;i32</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1447233688, "post_id": 33647337, "comment_id": 55068356, "body": "I think the book is pretty clear on this? <a href=\"https://doc.rust-lang.org/stable/book/associated-types.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/book/associated-types.html</a> The whole idea behind associated types is that an impl of the trait chooses the associated types. Like the <code>Add</code> trait doesn&#39;t allow you to implement adding two types twice to yield a different type for each add operation. It would be pretty surprising if adding two <code>i32</code>s yields a different result depending on the inferred result type"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 4, "creation_date": 1447236388, "post_id": 33647337, "comment_id": 55069840, "body": "Well, you&#39;re right that generic type parameters and associated types are only semantically different. But the behavior you are observing in your example <i>is exactly this semantic difference</i>! It is not a technical difference - on the lowest level both associated types and type parameters are exactly the same. Associated types are &quot;output&quot; type parameters, while regular generic parameters are &quot;input&quot;."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 4, "creation_date": 1447237831, "post_id": 33647337, "comment_id": 55070660, "body": "What is the &quot;only&quot;  in &quot;only semantically different&quot; meant to mean? They&#39;re clearly syntactically different too, and anyway, aren&#39;t most pairs of language features (in any language) semantically different? (e.g. <code>if</code> has different semantics to <code>while</code>, and <code>fn</code> is different to <code>struct</code>, etc.) So it doesn&#39;t seem wildly surprising that these two different syntaxes mean different things; maybe the question you&#39;re really asking is when each one is appropriate ala <a href=\"http://stackoverflow.com/q/32059370/1256624\">stackoverflow.com/q/32059370/1256624</a> ?"}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1447241382, "post_id": 33647337, "comment_id": 55072625, "body": "@VladimirMatveev is this the only difference between them? You&#39;re spot on with your comment if so; please post it as an answer so I can accept it."}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1447241505, "post_id": 33647337, "comment_id": 55072685, "body": "@huon that&#39;s not my question at all; these are two different forms of generics; my understanding was that they were implemented identically, and were exactly equivalent except for the syntax; but this doesn&#39;t appear to be the case (it is possible to do something with one that it is not possible to do with the other). I&#39;m totally ok with that; I just want to know exactly what the distinction between the two is. Is it just syntax? If so, that&#39;s a perfect answer to my question."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 2, "creation_date": 1447246189, "post_id": 33647337, "comment_id": 55075119, "body": "Ah, well, the answers to the question I linked go into the distinction."}], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 5, "last_activity_date": 1447253623, "creation_date": 1447253623, "answer_id": 33653157, "question_id": 33647337, "link": "https://stackoverflow.com/questions/33647337/what-is-the-difference-between-generics-and-associated-types/33653157#33653157", "title": "What is the difference between generics and associated types?", "body": "<p>I'll repeat my comment: it is true that type parameters and associated types are only semantically different. However, that's the main point <em>why</em> they are both present in the language - they do their own separate jobs, so it is not \"just\" semantic difference, it is the whole reason for their existence as a separate thing from type parameters.</p>\n\n<p>Note that I do not even touch syntactic differences. Of course it is absolutely natural that there are syntactic differences. These are separate features after all; if they had <em>no</em> syntactic differences, then how you would distinguish between them? Their syntactic difference is closely tied to the semantic difference, because the way associated types are defined makes it clear that they have \"output\" position, compared to \"input\" position of type parameters, but technically both type parameters and associated types (and also the implicit <code>Self</code>, parameter, by the way) are the same thing.</p>\n"}, {"comments": [{"owner": {"reputation": 2662, "user_id": 159876, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a3c8697d4dcb305bd7a3214910c4a406?s=128&d=identicon&r=PG", "display_name": "Twisol", "link": "https://stackoverflow.com/users/159876/twisol"}, "edited": false, "score": 2, "creation_date": 1607685199, "post_id": 33693570, "comment_id": 115355918, "body": "I believe this is to do with Rust&#39;s &quot;orphan rule&quot;: a trait implementation for Trait&lt;Ty1, Ty2&gt; must be in the same crate as at least one of Trait, Ty1, or Ty2. This is so that it isn&#39;t possible for conflicting implementations on the same set of types to come from multiple upstream crates.  Associated types aren&#39;t involved in looking up the unique implementation of a trait, so even if the associated type is in the current crate, there&#39;s nothing else preventing another crate from implementing the same trait, and hence the orphan rule applies."}], "tags": [], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "is_accepted": false, "score": 1, "last_activity_date": 1447420464, "creation_date": 1447420464, "answer_id": 33693570, "question_id": 33647337, "link": "https://stackoverflow.com/questions/33647337/what-is-the-difference-between-generics-and-associated-types/33693570#33693570", "title": "What is the difference between generics and associated types?", "body": "<p>For anyone else who finds this question, there is also <em>another</em> technical distinction between type parameters and associated types as well.</p>\n\n<p>If you attempt to implement a trait with an associated type you may see the error: </p>\n\n<pre><code>src/lib.rs:10:1: 15:2 error: the impl does not reference any types\ndefined in this crate; only traits defined in the current crate can\nbe implemented for arbitrary types [E0117]\n</code></pre>\n\n<p>If you have traits exported in a crate bar:</p>\n\n<pre><code>pub trait BarParam&lt;TRtn&gt; {\n  fn bar() -&gt; TRtn;\n}\n\npub trait BarAssoc {\n  type TRtn;\n  fn bar() -&gt; Self::TRtn;\n}\n</code></pre>\n\n<p>You will find that a crate importing these traits will only be able to implement:</p>\n\n<pre><code>impl&lt;'a&gt; BarParam&lt;Foo&gt; for &amp;'a str {\n  fn bar() -&gt; Foo {\n    return Foo;\n  }\n}\n</code></pre>\n\n<p>While attempting to implement:</p>\n\n<pre><code>impl&lt;'a&gt; BarAssoc for &amp;'a str {\n  type TRtn = Foo;\n  fn bar() -&gt; Foo {\n    return Foo;\n  }\n}\n</code></pre>\n\n<p>Will result in the error above. </p>\n\n<p>Frankly I'm not really sure what's going on here, so if you do, by all means add a comment or another answer; but this is a tangible reason to avoid associated types when you're writing a crate.</p>\n"}], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1209, "favorite_count": 3, "accepted_answer_id": 33653157, "answer_count": 2, "score": 3, "last_activity_date": 1447420464, "creation_date": 1447233157, "question_id": 33647337, "link": "https://stackoverflow.com/questions/33647337/what-is-the-difference-between-generics-and-associated-types", "title": "What is the difference between generics and associated types?", "body": "<p>I was under the impression that these two things were only semantically different.</p>\n\n<p>However, this is possible:</p>\n\n<pre><code>struct Foo;\n\ntrait Bar&lt;T&gt; {\n  fn resolve(&amp;self) -&gt; T;\n}\n\nimpl Bar&lt;isize&gt; for Foo {\n  fn resolve(&amp;self) -&gt; isize {\n    return 0isize;\n  }\n}\n\nimpl Bar&lt;usize&gt; for Foo {\n  fn resolve(&amp;self) -&gt; usize {\n    return 1usize;\n  }\n}\n\n#[test]\nfn test_foo() {\n  let foo = Foo;\n  assert!((&amp;foo as &amp;Bar&lt;isize&gt;).resolve() == 0isize);\n  assert!((&amp;foo as &amp;Bar&lt;usize&gt;).resolve() == 1usize);\n}\n</code></pre>\n\n<p>While this is not:</p>\n\n<pre><code>struct Foo;\n\ntrait Bar {\n  type T;\n  fn resolve(&amp;self) -&gt; Self::T;\n}\n\nimpl Bar for Foo {\n  type T = isize;\n  fn resolve(&amp;self) -&gt; isize {\n    return 0isize;\n  }\n}\n\nimpl Bar for Foo {\n  type T = usize;\n  fn resolve(&amp;self) -&gt; usize {\n    return 1usize;\n  }\n}\n\n#[test]\nfn test_foo() {\n  let foo = Foo;\n  assert!((&amp;foo as &amp;Bar&lt;T = isize&gt;).resolve() == 0isize);\n  assert!((&amp;foo as &amp;Bar&lt;T = usize&gt;).resolve() == 1isize);\n}\n</code></pre>\n\n<p>It generates:</p>\n\n<pre><code>&lt;anon&gt;:8:1: 13:2 error: conflicting implementations for trait `Bar` [E0119]\n&lt;anon&gt;: 8 impl Bar for Foo {\n&lt;anon&gt;: 9   type T = isize;\n&lt;anon&gt;:10   fn resolve(&amp;self) -&gt; isize {\n&lt;anon&gt;:11     return 0isize;\n&lt;anon&gt;:12   }\n&lt;anon&gt;:13 }\n</code></pre>\n\n<p>Am I missing something?</p>\n\n<p>Is there a special syntax for what I'm trying to achieve, or is there really a... technical... distinction between a generic and an associated type?</p>\n\n<p>Is there some circumstance in which an associated type has a tangible (rather than purely code prettiness) benefit over using a generic?</p>\n"}, {"tags": ["io", "terminal", "rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1447233124, "post_id": 33646418, "comment_id": 55068070, "body": "Possible duplicate of <a href=\"http://stackoverflow.com/questions/26321592/how-can-i-read-one-character-from-stdin-without-having-to-hit-enter\">How can I read one character from stdin without having to hit enter?</a>"}, {"owner": {"reputation": 42737, "user_id": 4518274, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UPurS.png?s=128&g=1", "display_name": "Thomas Dickey", "link": "https://stackoverflow.com/users/4518274/thomas-dickey"}, "edited": false, "score": 0, "creation_date": 1447234082, "post_id": 33646418, "comment_id": 55068531, "body": "No - this is language-specific, and the suggested duplicate does not address Rust."}, {"owner": {"reputation": 42737, "user_id": 4518274, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UPurS.png?s=128&g=1", "display_name": "Thomas Dickey", "link": "https://stackoverflow.com/users/4518274/thomas-dickey"}, "edited": false, "score": 2, "creation_date": 1447242083, "post_id": 33646418, "comment_id": 55072990, "body": "By itself, Rust has no features for this, but can call system-specific functions to do it -- but OP gave no clues regarding which systems are of interest.  For UTF-8, there is the complication of whether it is acceptable to timeout in the middle of a multibyte input sequence, etc."}], "answers": [{"tags": [], "owner": {"reputation": 1476, "user_id": 5088458, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vsJec.jpg?s=128&g=1", "display_name": "schrieveslaach", "link": "https://stackoverflow.com/users/5088458/schrieveslaach"}, "is_accepted": false, "score": 0, "last_activity_date": 1588281871, "creation_date": 1588281871, "answer_id": 61532969, "question_id": 33646418, "link": "https://stackoverflow.com/questions/33646418/how-to-read-an-utf-8-char-from-a-terminal-with-a-timeout/61532969#61532969", "title": "How to read an UTF-8 char from a terminal with a timeout?", "body": "<p>The <a href=\"https://docs.rs/crate/async-std/1.5.0\" rel=\"nofollow noreferrer\">async-std</a> crate has out-of-the-box support for this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use async_std::io;\nuse std::time::Duration;\n\n#[async_std::main]\nasync fn main() -&gt; std::io::Result&lt;()&gt; {\n    let input = io::timeout(Duration::from_secs(5), async {\n        let stdin = io::stdin();\n        let mut line = String::new();\n        stdin.read_line(&amp;mut line).await?;\n        Ok(line)\n    })\n    .await;\n\n    println!(\"{:?}\", input);\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 5549604, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ceaaed756e22c566bfd8d68297d4e4e1?s=128&d=identicon&r=PG&f=1", "display_name": "Gwenn", "link": "https://stackoverflow.com/users/5549604/gwenn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 467, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1588281871, "creation_date": 1447229154, "last_edit_date": 1447253263, "question_id": 33646418, "link": "https://stackoverflow.com/questions/33646418/how-to-read-an-utf-8-char-from-a-terminal-with-a-timeout", "title": "How to read an UTF-8 char from a terminal with a timeout?", "body": "<p>I am trying to implement a command line editing library in Rust.</p>\n\n<p>To handle the <kbd>ESC</kbd> key properly, I need to wait for the rest of an escape sequence that may never arrive.</p>\n\n<p>Currently, I am using:</p>\n\n<pre><code>let stdin = io::stdin();\nlet mut chars = stdin.lock().chars();\nlet mut ch = try!(chars.next().unwrap());\n</code></pre>\n\n<p>but there seems to be no way to specify a timeout. Should I try to mix Rust IO with the <a href=\"http://man7.org/linux/man-pages/man2/poll.2.html\" rel=\"nofollow\" title=\"poll\">poll function</a>?</p>\n"}, {"tags": ["input", "rust"], "comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1447160443, "post_id": 33630400, "comment_id": 55034437, "body": "Possible duplicate of <a href=\"http://stackoverflow.com/questions/26643688/how-to-split-a-string-in-rust\">How to split a string in Rust?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1447161816, "post_id": 33630400, "comment_id": 55035243, "body": "Have you tried combining <code>map</code> and <code>split</code> like the Python code? It is expected that you show <i>some</i> effort at solving your own problem, Stack Overflow isn&#39;t a code writing service."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 2, "creation_date": 1447246406, "post_id": 33630400, "comment_id": 55075231, "body": "By the way. As of Rust 1.4.0 (released about two weeks ago), <code>result.expect(&quot;msg&quot;)</code> is available and objectively better than <code>.ok().expect(&quot;msg&quot;)</code> (because it includes the contents of the <code>Err</code> in the panic message)."}], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 8, "last_activity_date": 1447164345, "last_edit_date": 1447164345, "creation_date": 1447161512, "answer_id": 33630950, "question_id": 33630400, "link": "https://stackoverflow.com/questions/33630400/how-to-extract-two-integers-from-a-string/33630950#33630950", "title": "How to extract two integers from a string?", "body": "<p><code>&amp;str</code> has a <a href=\"http://doc.rust-lang.org/std/primitive.str.html#method.split_whitespace\"><code>split_whitespace()</code></a> method which returns an iterator yielding parts of the target string separated by an arbitrary amount of whitespace, much like <code>split()</code> in Python. You can use  the <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\"><code>map()</code></a> iterator adapter to convert each part to a number:</p>\n\n<pre><code>let mut s = String::new();\nstd::io::stdin().read_line(&amp;mut s).expect(\"read_line error\");\n\nlet mut parts = s.split_whitespace().map(|s| s.parse::&lt;i32&gt;());\nmatch (parts.next(), parts.next()) {\n    (Some(Ok(a)), Some(Ok(b))) =&gt; {\n        // a and b are i32\n    }\n    // handle other problems: not enough numbers, numbers are invalid, etc\n    _ =&gt; {}  // ignore invalid input\n}\n</code></pre>\n\n<p>This looks a lot more verbose than the Python version, but that's mostly because in Python all errors will be thrown as exceptions, while in Rust you have to handle them explicitly. If you don't care about them, you can throw <code>match</code> away:</p>\n\n<pre><code>let a = parts.next().unwrap().unwrap();\nlet b = parts.next().unwrap().unwrap();\n</code></pre>\n\n<p>Even another approach would be to use a handy <code>collect()</code> implementation for <code>Result&lt;Vec&lt;_&gt;, _&gt;</code>:</p>\n\n<pre><code>let items: Result&lt;Vec&lt;i32&gt;, _&gt; = parts.collect();\n</code></pre>\n\n<p>This way if any of numbers in the input string fail to parse, <code>items</code> will contain the corresponding <code>Err</code> value, but if they all are parsed successfully, then <code>items</code> will contain <code>Ok</code> variant with the vector of parsed numbers. With this approach you also do not need to specify <code>::&lt;i32&gt;()</code> in <code>parse()</code> invocation, as it will be inferred automatically (no need for <code>mut</code> either):</p>\n\n<pre><code>let parts = s.split_whitespace().map(|s| s.parse());\n</code></pre>\n\n<p>Also there is no one-liner function to read a string from stdin in the standard library. It is somewhat unfortunate but rarely a problem in practice. There are libraries which provide such functionality; see other answers to find some examples.</p>\n"}, {"tags": [], "owner": {"reputation": 627, "user_id": 3987763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5edbe17788bc835fa4f08ac4977e67d1?s=128&d=identicon&r=PG&f=1", "display_name": "basic_bgnr", "link": "https://stackoverflow.com/users/3987763/basic-bgnr"}, "is_accepted": false, "score": 2, "last_activity_date": 1614356752, "last_edit_date": 1614356752, "creation_date": 1447162668, "answer_id": 33631317, "question_id": 33630400, "link": "https://stackoverflow.com/questions/33630400/how-to-extract-two-integers-from-a-string/33631317#33631317", "title": "How to extract two integers from a string?", "body": "<p>The Rust code is always going to be more verbose than the Python one. But since version 1.26, Rust also supports slice patterns as shown below. The code looks more readable in my opinion.</p>\n<pre><code>fn main() {\n    let a = &quot;2 3&quot;;\n    if let [Ok(aa), Ok(aaa)] = &amp;a.split(&quot; &quot;)\n                                 .map(|a| a.parse::&lt;i32&gt;())\n                                 .collect::&lt;Vec&lt;_&gt;&gt;()[..] {\n        println!(&quot;{:?} {:?}&quot;, aa, aaa);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 4, "last_activity_date": 1464359282, "last_edit_date": 1464359282, "creation_date": 1447163533, "answer_id": 33631589, "question_id": 33630400, "link": "https://stackoverflow.com/questions/33630400/how-to-extract-two-integers-from-a-string/33631589#33631589", "title": "How to extract two integers from a string?", "body": "<p>You can use the <a href=\"https://crates.io/crates/text_io\" rel=\"nofollow\"><code>text_io</code></a> crate which offers a macro <code>read!</code> to read from standard input to produce tuples:</p>\n\n<pre><code>#[macro_use] extern crate text_io;\nlet (a, b): (i32, i32);\nscan!(\"{} {}\", a, b);\n</code></pre>\n\n<p>You can also read the values one by one</p>\n\n<pre><code>#[macro_use] extern crate text_io;\nlet a: i32 = read!();\nlet b: i32 = read!();\n</code></pre>\n"}], "owner": {"reputation": 550, "user_id": 2370748, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/761dc8702d3aa8e25ef8d76980d02c9b?s=128&d=identicon&r=PG", "display_name": "Jay Foreman", "link": "https://stackoverflow.com/users/2370748/jay-foreman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1824, "favorite_count": 0, "accepted_answer_id": 33630950, "answer_count": 3, "score": 7, "last_activity_date": 1614356752, "creation_date": 1447159793, "last_edit_date": 1447164461, "question_id": 33630400, "link": "https://stackoverflow.com/questions/33630400/how-to-extract-two-integers-from-a-string", "title": "How to extract two integers from a string?", "body": "<p>How do I extract two <code>i32</code>s from a single line of input in Rust? In Python I can read two <code>int</code>s like:</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>a, b = map(int, input().split()) #  \"2 3\"  =&gt;  a=2 and b=3\n</code></pre>\n\n<p>As of Rust 1.3.0, I can run the following to read one i32:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut s = String::new();\nstd::io::stdin().read_line(&amp;mut s).ok().expect(\"read_line panic\");\nlet n: i32 = s.trim().parse().ok().expect(\"parse panic\");\n</code></pre>\n"}, {"tags": ["emacs", "rust"], "answers": [{"tags": [], "owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "is_accepted": false, "score": 2, "last_activity_date": 1447145386, "creation_date": 1447145386, "answer_id": 33626012, "question_id": 33624175, "link": "https://stackoverflow.com/questions/33624175/emacs-racer-cant-find-crate/33626012#33626012", "title": "Emacs Racer &quot;can&#39;t find crate&quot;", "body": "<p>Okay, I was being stupid: it wasn't actually emacs-racer producing the error, it was flycheck mode. It's fixable by installing rust-flycheck.</p>\n"}], "owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1447154498, "creation_date": 1447137076, "last_edit_date": 1447154498, "question_id": 33624175, "link": "https://stackoverflow.com/questions/33624175/emacs-racer-cant-find-crate", "title": "Emacs Racer &quot;can&#39;t find crate&quot;", "body": "<p>I have a project set up that builds fine with <code>cargo build</code>, but when I open it in Emacs with rust-mode and racer-mode it gives the the error <code>can't find crate for whatever_dependency</code> for every single <code>extern crate whatever_dependency;</code> declaration. I assume this means that Racer is not finding my dependencies, so I was wondering if there's anything I need to do to tell Racer where to find them? </p>\n\n<p>I've set <code>CARGO_HOME</code> to <code>/home/myUser/.cargo</code>, but that doesn't seem to help.</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 306, "user_id": 3879341, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b1767df6c85e9574a53d18175be1d6db?s=128&d=identicon&r=PG&f=1", "display_name": "khc", "link": "https://stackoverflow.com/users/3879341/khc"}, "edited": false, "score": 0, "creation_date": 1499474350, "post_id": 33616960, "comment_id": 76938133, "body": "what if you want to get a mutable reference because you need to modify one of the values?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 306, "user_id": 3879341, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b1767df6c85e9574a53d18175be1d6db?s=128&d=identicon&r=PG&f=1", "display_name": "khc", "link": "https://stackoverflow.com/users/3879341/khc"}, "edited": false, "score": 1, "creation_date": 1499525186, "post_id": 33616960, "comment_id": 76949761, "body": "@khc then you need <a href=\"https://doc.rust-lang.org/stable/std/cell/\" rel=\"nofollow noreferrer\">interior mutability</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1513891364, "last_edit_date": 1513891364, "creation_date": 1447098263, "answer_id": 33616960, "question_id": 33613305, "link": "https://stackoverflow.com/questions/33613305/how-can-i-model-a-bidirectional-map-without-annoying-the-borrow-checker/33616960#33616960", "title": "How can I model a bidirectional map without annoying the borrow checker?", "body": "<p>In this case, the <em>easiest</em> solution is to act like a language with a garbage collector would work:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::rc::Rc;\nuse std::hash::Hash;\nuse std::ops::Deref;\n\nstruct BidiMap&lt;A, B&gt; {\n    left_to_right: HashMap&lt;Rc&lt;A&gt;, Rc&lt;B&gt;&gt;,\n    right_to_left: HashMap&lt;Rc&lt;B&gt;, Rc&lt;A&gt;&gt;,\n}\n\nimpl&lt;A, B&gt; BidiMap&lt;A, B&gt;\nwhere\n    A: Eq + Hash,\n    B: Eq + Hash,\n{\n    fn new() -&gt; Self {\n        BidiMap {\n            left_to_right: HashMap::new(),\n            right_to_left: HashMap::new(),\n        }\n    }\n\n    fn put(&amp;mut self, a: A, b: B) {\n        let a = Rc::new(a);\n        let b = Rc::new(b);\n        self.left_to_right.insert(a.clone(), b.clone());\n        self.right_to_left.insert(b, a);\n    }\n\n    fn get(&amp;self, a: &amp;A) -&gt; Option&lt;&amp;B&gt; {\n        self.left_to_right.get(a).map(Deref::deref)\n    }\n\n    fn get_reverse(&amp;self, b: &amp;B) -&gt; Option&lt;&amp;A&gt; {\n        self.right_to_left.get(b).map(Deref::deref)\n    }\n}\n\nfn main() {\n    let mut map = BidiMap::new();\n    map.put(1, 2);\n    println!(\"{:?}\", map.get(&amp;1));\n    println!(\"{:?}\", map.get_reverse(&amp;2));\n}\n</code></pre>\n\n<p>Of course, you'd want to have <strong>much</strong> more rigorous code as this allows you to break the bidirectional mapping. This just shows you one way of solving the problem.</p>\n\n<blockquote>\n  <p>Clearly, one of them has to own the data</p>\n</blockquote>\n\n<p>Clearly, that's not true ^_^. In this case, both maps <em>share</em> the ownership using <a href=\"http://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a>.</p>\n\n<p><em>Benchmark</em> this solution to know if it's efficient enough.</p>\n\n<p>Doing anything more efficient would require much heavier thinking about ownership. For example, if the <code>left_to_right</code> map owned the data and you used a raw pointer in the other map, that pointer would become invalidated as soon as the first map reallocated.</p>\n"}], "owner": {"reputation": 3421, "user_id": 635523, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/5afdae1b0353a803b15582e7cb8a694b?s=128&d=identicon&r=PG", "display_name": "knub", "link": "https://stackoverflow.com/users/635523/knub"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1567, "favorite_count": 2, "accepted_answer_id": 33616960, "answer_count": 1, "score": 9, "last_activity_date": 1513891364, "creation_date": 1447085333, "last_edit_date": 1495541761, "question_id": 33613305, "link": "https://stackoverflow.com/questions/33613305/how-can-i-model-a-bidirectional-map-without-annoying-the-borrow-checker", "title": "How can I model a bidirectional map without annoying the borrow checker?", "body": "<p>From <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\" title=\"Why can&#39;t I store a value and a reference to that value in the same struct?\">Why can't I store a value and a reference to that value in the same struct?</a> I learned that I cannot store a value and a reference in the same struct.</p>\n\n<p>The proposed solution is:</p>\n\n<blockquote>\n  <p>The easiest and most recommended solution is to not attempt to put these items in the same structure together. By doing this, your structure nesting will mimic the lifetimes of your code.\n  Place types that own data into a structure together and then provide methods that allow you to get references or objects containing references as needed.</p>\n</blockquote>\n\n<p>However, I do not know how to apply this in my concrete case:</p>\n\n<p>I want to build bidirectional map, implemented by two internal <code>HashMap</code>s.\nClearly, one of them has to own the data. However, the other part is also essential to the bidirectional map, so I don't see how I could separate these two while still maintaining a bidirectional map interface.</p>\n\n<pre><code>struct BidiMap&lt;'a, S: 'a, T: 'a&gt; { ? }\nfn put(&amp;mut self, s: S, t: T) -&gt; ()\nfn get(&amp;self, s: &amp;S) -&gt; T\nfn get_reverse(&amp;self, t: &amp;T) -&gt; S\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo", "mio"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1447059022, "post_id": 33605157, "comment_id": 54985425, "body": "I suggest you post an issue in the time crate to make sure they update to 0.2 and an issue to mio, because they are using <a href=\"https://github.com/dpc/mioco/blob/master/Cargo.toml#L24-L33\" rel=\"nofollow noreferrer\">wildcard dependency versions</a>, which is probably what is causing this"}, {"owner": {"reputation": 460, "user_id": 412627, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/6c0941d5fe20485f2288c574134c9d76?s=128&d=identicon&r=PG", "display_name": "Alberto Leal", "link": "https://stackoverflow.com/users/412627/alberto-leal"}, "edited": false, "score": 0, "creation_date": 1447064568, "post_id": 33605157, "comment_id": 54988511, "body": "See: <a href=\"https://github.com/retep998/winapi-rs/issues/238\" rel=\"nofollow noreferrer\">github.com/retep998/winapi-rs/issues/238</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1447078622, "post_id": 33605157, "comment_id": 54996416, "body": "<i>Cargo.lock always be added to version control</i> \u2014 <a href=\"http://doc.crates.io/guide.html#cargotoml-vs-cargolock\" rel=\"nofollow noreferrer\">This is absolutely not universally true</a>. Commit the lockfile for binaries and applications. Do <b>not</b> commit it for libraries."}], "answers": [{"tags": [], "owner": {"reputation": 13479, "user_id": 1830736, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/gwUf7.jpg?s=128&g=1", "display_name": "George Hilliard", "link": "https://stackoverflow.com/users/1830736/george-hilliard"}, "is_accepted": true, "score": 2, "last_activity_date": 1447107496, "creation_date": 1447107496, "answer_id": 33619354, "question_id": 33605157, "link": "https://stackoverflow.com/questions/33605157/native-library-kernel32-is-being-linked-to-by-more-than-one-package/33619354#33619354", "title": "Native library `kernel32` is being linked to by more than one package", "body": "<p>This is a known issue that has been documented <a href=\"https://github.com/retep998/winapi-rs/issues/238\" rel=\"nofollow\">on the WinAPI bugtracker</a>.</p>\n\n<p>It seems the issue was that the maintainer published a new version, bumping it from v0.1.x to v0.2.x.  Since some packages depend on (and will continue to depend on, until they're updated) v0.1.x, Cargo complained that the two dependencies are not compatible, and refused to link them both in.  Chaos ensues.</p>\n\n<p>This should now be rectified, according to the ticket mentioned above.</p>\n"}], "owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 0, "accepted_answer_id": 33619354, "answer_count": 1, "score": 1, "last_activity_date": 1447107496, "creation_date": 1447058102, "last_edit_date": 1447078733, "question_id": 33605157, "link": "https://stackoverflow.com/questions/33605157/native-library-kernel32-is-being-linked-to-by-more-than-one-package", "title": "Native library `kernel32` is being linked to by more than one package", "body": "<p>I cloned and tried to build the <a href=\"https://github.com/dpc/mioco\" rel=\"nofollow\">MIO coroutines library</a>, but its dependencies seem to clash:</p>\n\n<pre><code>native library `kernel32` is being linked to by more than one package, and can only be linked to by one package\n\n  kernel32-sys v0.2.0\n  kernel32-sys v0.1.4\n</code></pre>\n\n<p>It seems like the dependency <code>time</code> requires <code>kernel32</code> 0.1.4, but two other dependencies <code>fs2</code> and <code>memmap</code> require 0.2.0.</p>\n\n<p>Is there anything I can do to address it, or would the best solution in cases like this just be to file a bug report?</p>\n\n<p>On a related note, if the repo doesn't have a Cargo.lock, does that count as a bug? I've seen it recommended that Cargo.lock always be added to version control to prevent issues like this.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 1, "creation_date": 1447047983, "post_id": 33603089, "comment_id": 54981388, "body": "Whats your <code>.travis.yml</code> configuration file look like?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1447080397, "post_id": 33603089, "comment_id": 54997515, "body": "Have you pushed the <code>target</code> folder to your repository?"}, {"owner": {"reputation": 15257, "user_id": 1409312, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/4TCzB.jpg?s=128&g=1", "display_name": "Syntactic Fructose", "link": "https://stackoverflow.com/users/1409312/syntactic-fructose"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1447089351, "post_id": 33603089, "comment_id": 55003253, "body": "@huon , ahh It might be using previous cached directories?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1447098941, "post_id": 33603089, "comment_id": 55008680, "body": "Yeah, don&#39;t cache the <code>target</code> directory. Why did you add that to your configuration?"}], "owner": {"reputation": 15257, "user_id": 1409312, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/4TCzB.jpg?s=128&g=1", "display_name": "Syntactic Fructose", "link": "https://stackoverflow.com/users/1409312/syntactic-fructose"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 147, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1447089323, "creation_date": 1447047353, "last_edit_date": 1447089323, "question_id": 33603089, "link": "https://stackoverflow.com/questions/33603089/nightly-build-of-lazy-static-fails-on-travis-ci-with-compiled-by-an-older-versi", "title": "Nightly build of lazy_static fails on Travis-CI with &quot;compiled by an older version of rustc&quot;", "body": "<p>My code seems to run fine except for a crate which was \"compiled by an older version of rustc\".</p>\n\n<p>Shortened output:</p>\n\n<pre><code>Using worker: worker-linux-docker-1a1baae3.prod.travis-ci.org:travis-linux-8\n1.30s$ git clone --depth=50 https://github.com/cpjreynolds/rustty.git cpjreynolds/rustty\nCloning into 'cpjreynolds/rustty'...\nrustup: extracting installer\nrustup: installing toolchain for 'nightly'\ninstall: creating uninstall script at /home/travis/rust/lib/rustlib/uninstall.sh\ninstall: installing component 'rustc'\ninstall: installing component 'rust-std-x86_64-unknown-linux-gnu'\ninstall: installing component 'rust-docs'\ninstall: installing component 'cargo'\n    Rust is ready to roll.\n0.00s0.00s0.00s$ rustc --version\nrustc 1.6.0-nightly (1a2eaffb6 2015-10-31)\n$ cargo --version\ncargo 0.7.0-nightly (8acff56 2015-10-31)\n5.93s$ cargo build --verbose\n    Updating registry `https://github.com/rust-lang/crates.io-index`\n Downloading winapi-build v0.1.1\n Downloading gag v0.1.6\n Downloading nix v0.4.1\n Downloading lazy_static v0.1.15\n Downloading advapi32-sys v0.1.2\n Downloading bitflags v0.3.2\n Downloading term v0.2.12\n Downloading rand v0.3.11\n Downloading libc v0.1.12\n Downloading tempfile v1.1.1\n Downloading libc v0.2.0\n Downloading winapi v0.2.4\n Downloading kernel32-sys v0.1.4\n       Fresh winapi-build v0.1.1\n       Fresh lazy_static v0.1.15\n       Fresh winapi v0.2.4\n       Fresh libc v0.2.0\n       Fresh libc v0.1.12\n       Fresh bitflags v0.3.2\n       Fresh nix v0.4.1\n       Fresh kernel32-sys v0.1.4\n       Fresh advapi32-sys v0.1.2\n       Fresh term v0.2.12\n       Fresh rand v0.3.11\n       Fresh tempfile v1.1.1\n       Fresh gag v0.1.6\n   Compiling rustty v0.1.9 (file:///home/travis/build/cpjreynolds/rustty)\n     Running `rustc src/lib.rs --crate-name rustty --crate-type lib -g --out-dir /home/travis/build/cpjreynolds/rustty/target/debug --emit=dep-info,link -L dependency=/home/travis/build/cpjreynolds/rustty/target/debug -L dependency=/home/travis/build/cpjreynolds/rustty/target/debug/deps --extern nix=/home/travis/build/cpjreynolds/rustty/target/debug/deps/libnix-decfdf7b683bd511.rlib --extern term=/home/travis/build/cpjreynolds/rustty/target/debug/deps/libterm-c60a08d637b7e6c7.rlib --extern lazy_static=/home/travis/build/cpjreynolds/rustty/target/debug/deps/liblazy_static-f3aa6dfcc7c157cc.rlib --extern gag=/home/travis/build/cpjreynolds/rustty/target/debug/deps/libgag-71f01cbae2611a97.rlib --extern libc=/home/travis/build/cpjreynolds/rustty/target/debug/deps/liblibc-29adb837ec836726.rlib`\nsrc/lib.rs:20:14: 20:39 error: the crate `lazy_static` has been compiled with an old version of rustc, which is incompatible with this version of rustc [E0514]\nsrc/lib.rs:20 #[macro_use] extern crate lazy_static;\n</code></pre>\n\n<p>Why does the lazy_static crate fail when building it using the nightly compiler? </p>\n\n<p>edit: <code>.travis.yml</code></p>\n\n<pre><code>language: rust\n\nrust:\n    - nightly\n    - beta\n    - stable\n\ncache:\n    directories:\n        - target\n\nscript:\n    - cargo build --verbose\n    - cargo test --verbose\n    - cargo doc\n\nafter_success:\n    test $TRAVIS_PULL_REQUEST == \"false\" &amp;&amp;\n    test $TRAVIS_BRANCH == \"master\" &amp;&amp;\n    test $TRAVIS_RUST_VERSION == \"stable\" &amp;&amp;\n    sh etc/deploy-docs.sh\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1447043766, "post_id": 33602267, "comment_id": 54980404, "body": "<a href=\"https://play.rust-lang.org/?gist=ea0d9b0b2a7d22b93236&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>?"}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1447047808, "post_id": 33602267, "comment_id": 54981345, "body": "@Veedrac oh, it was just semantics, not actually a problem with borrowing self. If you want to turn that into an answer, I&#39;ll accept it~"}], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 5, "last_activity_date": 1447055034, "creation_date": 1447055034, "answer_id": 33604500, "question_id": 33602267, "link": "https://stackoverflow.com/questions/33602267/how-do-you-write-a-trait-that-returns-an-iterator/33604500#33604500", "title": "How do you write a trait that returns an iterator?", "body": "<p>Unfortunately, Veedrac's suggestion doesn't work directly. You will get the following error if you'd try to use <code>val_iterator()</code> method on <code>instance</code> inside <code>takes_vals()</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&lt;anon&gt;:31:25: 31:39 error: the trait `core::iter::Iterator` is not implemented for the type `U` [E0277]\n&lt;anon&gt;:31     let iter = instance.val_iterator();\n                                  ^~~~~~~~~~~~~~\n&lt;anon&gt;:31:25: 31:39 help: see the detailed explanation for E0277\n&lt;anon&gt;:31:25: 31:39 note: `U` is not an iterator; maybe try calling `.iter()` or a similar method\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n</code></pre>\n\n<p>This (and some other further errors) requires changing the signature of the function to this one:</p>\n\n<pre><code>fn takes_vals&lt;'a, T: 'a, U: Iterator&lt;Item=Val&gt;+'a&gt;(instance: T) where T: HasValsIterator&lt;'a, U&gt;\n</code></pre>\n\n<p>However, even this doesn't work yet:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&lt;anon&gt;:31:16: 31:24 error: `instance` does not live long enough\n&lt;anon&gt;:31     let iter = instance.val_iterator();\n                         ^~~~~~~~\n&lt;anon&gt;:30:97: 32:2 note: reference must be valid for the lifetime 'a as defined on the block at 30:96...\n&lt;anon&gt;:30 fn takes_vals&lt;'a, T: 'a, U: Iterator&lt;Item=Val&gt;+'a&gt;(instance: T) where T: HasValsIterator&lt;'a, U&gt; {\n&lt;anon&gt;:31     let iter = instance.val_iterator();\n&lt;anon&gt;:32 }\n&lt;anon&gt;:30:97: 32:2 note: ...but borrowed value is only valid for the scope of parameters for function at 30:96\n&lt;anon&gt;:30 fn takes_vals&lt;'a, T: 'a, U: Iterator&lt;Item=Val&gt;+'a&gt;(instance: T) where T: HasValsIterator&lt;'a, U&gt; {\n&lt;anon&gt;:31     let iter = instance.val_iterator();\n&lt;anon&gt;:32 }\n</code></pre>\n\n<p>Remember that the trait requires that <code>val_iterator()</code> accepts the target by reference with lifetime <code>'a</code>. This lifetime in this function is an input parameter. However, when <code>val_iterator()</code> is called on <code>instance</code>, the only lifetime which can be specified for the reference is the one of <code>instance</code> which is strictly smaller than any possible <code>'a</code> as a parameter, because it is a local variable. Therefore, it is not possible to pass <code>instance</code> by value; you can only pass it by reference for lifetimes to match:</p>\n\n<pre><code>fn takes_vals&lt;'a, T: 'a, U: Iterator&lt;Item=Val&gt;+'a&gt;(instance: &amp;'a T) where T: HasValsIterator&lt;'a, U&gt; {\n    let iter = instance.val_iterator();\n}\n</code></pre>\n\n<p>This works.</p>\n\n<p>I'd like to add that using associated types instead of type parameters would be more correct semantically:</p>\n\n<pre><code>trait HasValsIterator&lt;'a&gt; {\n    type Iter: Iterator&lt;Item=Val&gt; + 'a;\n    fn val_iterator(&amp;'a self) -&gt; Self::Iter;\n}\n\nimpl&lt;'a&gt; HasValsIterator&lt;'a&gt; for Foo {\n    type Iter = ValsFromT&lt;'a, Foo&gt;;\n    fn val_iterator(&amp;'a self) -&gt; ValsFromT&lt;'a, Foo&gt; { ... }\n}\n\nfn takes_vals&lt;'a, T: 'a&gt;(instance: &amp;'a T) where T: HasValsIterator&lt;'a&gt; {\n    ...\n}\n</code></pre>\n\n<p>I say that this is more correct because the type of the iterator is determined by the implementor, that is, it is \"output\" type, which are modeled by associated types. As you can see, <code>takes_vals()</code> signature also shrank considerably.</p>\n\n<p>Ideally, <code>HasValsIterator</code> trait should have been defined like this:</p>\n\n<pre><code>trait HasValsIterator {\n    type Iter&lt;'a&gt;: Iterator&lt;Item=Val&gt; + 'a\n    fn val_iterator&lt;'a&gt;(&amp;'a self) -&gt; Iter&lt;'a&gt;;\n}\n</code></pre>\n\n<p>This way, <code>val_iterator()</code> would in any situation, including when <code>HasValsIterator</code> implementor is passed by value. However, Rust is not there yet.</p>\n"}], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 644, "favorite_count": 0, "accepted_answer_id": 33604500, "answer_count": 1, "score": 1, "last_activity_date": 1447055034, "creation_date": 1447041093, "question_id": 33602267, "link": "https://stackoverflow.com/questions/33602267/how-do-you-write-a-trait-that-returns-an-iterator", "title": "How do you write a trait that returns an iterator?", "body": "<p>Broadly speaking my goal is this:</p>\n\n<ul>\n<li>For some known type Bar...</li>\n<li>Have a trait Foo with a function: <code>get_iterator&lt;T&gt;() -&gt; T where T: Iterator&lt;Item = Bar&gt;</code></li>\n<li>The instance of the iterator borrows the original object Foo is implemented on.</li>\n</ul>\n\n<p>I imagine it working like this:</p>\n\n<pre><code>let mut foo = Foo;\nlet bar = foo.get_iterator();\n\nfoo.mutable_call(); // &lt;-- This fails, because foo is borrowed in bar\n\nfor x in bar { \n  ...\n}\n</code></pre>\n\n<p>So, that's the goal, and here's my attempt, which I can't seem to get working:</p>\n\n<pre><code>struct ValsFromT&lt;'a, T: 'a&gt; {\n  parent:&amp;'a T,\n  offset: usize,\n}\n\nstruct Val;\n\ntrait HasValsIterator&lt;T&gt; {\n  fn val_iterator(&amp;self) -&gt; T where T: Iterator&lt;Item = Val&gt;;\n}\n\nstruct Foo;\n\nimpl&lt;'a&gt; Iterator for ValsFromT&lt;'a, Foo&gt; {\n  type Item = Val;\n  fn next(&amp;mut self) -&gt; Option&lt;Val&gt; {\n    return None;\n  }\n}\n\nimpl&lt;'a&gt; HasValsIterator&lt;ValsFromT&lt;'a, Foo&gt;&gt; for Foo {\n  fn val_iterator(&amp;'a self) -&gt; ValsFromT&lt;'a, Foo&gt; { \n    return ValsFromT {\n      offset: 0usize,\n      parent: self\n    };\n  }\n}\n\nfn takes_vals&lt;T&gt;(instance:T) where T: HasValsIterator&lt;T&gt; {\n  // ...\n}\n\n#[test] \nfn test_foo() {\n  let x = Foo;\n  takes_vals(x);\n}\n</code></pre>\n\n<p>(playpen: <a href=\"http://is.gd/wys3fx\" rel=\"nofollow\">http://is.gd/wys3fx</a>)</p>\n\n<p>We're getting the dreaded concrete/bound lifetime error here, because of trying to return an iterator instance that references <code>self</code> from the trait function:</p>\n\n<pre><code>&lt;anon&gt;:22:3: 27:4 error: method `val_iterator` has an incompatible type for trait:\n expected bound lifetime parameter ,\n    found concrete lifetime [E0053]\n&lt;anon&gt;:22   fn val_iterator(&amp;'a self) -&gt; ValsFromT&lt;'a, Foo&gt; { \n&lt;anon&gt;:23     return ValsFromT {\n&lt;anon&gt;:24       offset: 0usize,\n&lt;anon&gt;:25       parent: self\n&lt;anon&gt;:26     };\n&lt;anon&gt;:27   }\n&lt;anon&gt;:22:3: 27:4 help: see the detailed explanation for E0053\n</code></pre>\n\n<p>Is there some way of doing this?</p>\n"}, {"tags": ["rust", "closures", "lifetime", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1492253301, "post_id": 33601388, "comment_id": 73908313, "body": "Thanks. I just re-read this answer after a few months. The part that was non-obvious is the lazy map iterator. Connecting that with the capture-by-reference makes it all make sense."}], "tags": [], "owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "is_accepted": true, "score": 10, "last_activity_date": 1502126237, "last_edit_date": 1502126237, "creation_date": 1447034522, "answer_id": 33601388, "question_id": 33600843, "link": "https://stackoverflow.com/questions/33600843/borrow-check-error-with-variable-not-living-long-enough-in-nested-lambda/33601388#33601388", "title": "Borrow-check error with variable not living long enough in nested lambda", "body": "<p>The trick here is how closures capture their variables: they will take references to them if it is allowed by the contents of the closure, without looking at how they are used, to keep the inference local to the closure expression and predicable. In this case the <code>row</code> variable is only ever used by reference, so it is fine to be captured by reference; that is, the closure object passed to map contains a reference to <code>row</code>. This object hence cannot leave the scope that declares the <code>row</code> variable (i.e. <code>flat_map</code>'s closure) because that reference would be left pointing to invalid memory. Returning <code>.map(closure)</code> will fall foul of this rule, as <code>.map</code> creates a lazy iterator that stores the closure and only calls it as elements are requested.</p>\n\n<p>The fix here is to force the <code>row</code> variable to not be captured by reference, so that the closure can leave the scope. This can be done with the <code>move</code> keyword:</p>\n\n<pre><code>let pair_sums = rows.iter()\n    .flat_map(|row| { \n        (0..row.len() - 1)\n            .map(move |i| row[i] + row[i + 1])\n    })\n    .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>In other words, the original code is equivalent to something like:</p>\n\n<pre><code>let pair_sums = rows.iter()\n    .flat_map(|row: &amp;Vec&lt;i32&gt;| { \n        let row_ref: &amp;&amp;Vec&lt;i32&gt; = &amp;row;\n        (0..row.len() - 1)\n            .map(move |i| (*row_ref)[i] + (*row_ref)[i + 1])\n    })\n    .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>(My <a href=\"http://huonw.github.io/blog/2015/05/finding-closure-in-rust/\" rel=\"nofollow noreferrer\">Finding Closure in Rust</a> post digs into closures in more detail, as does the <a href=\"https://doc.rust-lang.org/book/first-edition/closures.html\" rel=\"nofollow noreferrer\">Rust book</a>.)</p>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 530, "favorite_count": 2, "accepted_answer_id": 33601388, "answer_count": 1, "score": 8, "last_activity_date": 1527759816, "creation_date": 1447029999, "last_edit_date": 1527759816, "question_id": 33600843, "link": "https://stackoverflow.com/questions/33600843/borrow-check-error-with-variable-not-living-long-enough-in-nested-lambda", "title": "Borrow-check error with variable not living long enough in nested lambda", "body": "<p>I am getting an error inside a nested lambda.</p>\n\n<pre><code>let rows = vec![\n    vec![3, 6, 2, 8, 9, 0],\n    vec![0, 0, 1, 4, 5, 1],\n];\n\nlet pair_sums = rows.iter()\n    .flat_map(|row| {\n        (0 ..= row.len()).map(|i| row[i] + row[i + 1])\n    })\n    .collect::&lt;Vec&lt;_&gt;&gt;();\n\nprintln!(\"{:?}\", pair_sums);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `row` does not live long enough\n  --&gt; src/main.rs:9:40\n   |\n9  |             (0..row.len() - 1).map(|i| row[i] + row[i + 1])\n   |                                    --- ^^^ does not live long enough\n   |                                    |\n   |                                    capture occurs here\n10 |         })\n   |         - borrowed value only lives until here\n11 |         .collect::&lt;Vec&lt;_&gt;&gt;();\n   |                            - borrowed value needs to live until here\n</code></pre>\n\n<p>I can sort of see why this is happening, and I can fix it by threading the value of <code>row</code> through to the inner lambda:</p>\n\n<pre><code>let pair_sums = rows.iter()\n    .flat_map(|row| { \n        (0 ..= row.len()).zip(iter::repeat(row))\n            .map(|(i, row)| row[i] + row[i + 1])\n    })\n    .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>This is horrible and can't be the best solution. How can I refer to variables in a parent scope without having to pass them along explicitly?</p>\n"}, {"tags": ["vector", "reference", "rust"], "comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1447037511, "post_id": 33600606, "comment_id": 54978974, "body": "You&#39;d want <code>Vec&lt;Box&lt;Object&lt;&#39;a&gt;&gt;&gt;</code> for an owned pointer. You do have inefficiency, in that <code>Object::Int</code> takes as much space as <code>Object::String</code>, but boxing it is just going to make it worse (even if boxing allowed more compact representations). I would just change <code>Str(String)</code> to <code>Str(Box&lt;String&gt;)</code> and <code>Vector&lt;Vec&lt;...&gt;&gt;</code> to <code>Vector&lt;Box&lt;Vec&lt;...&gt;&gt;&gt;</code> and leave it at that, since that removes the only things keeping <code>Object</code> <i>too</i> large. It&#39;s still possible the extra indirection is worse than the inefficiency for smaller (probably more common) values, though."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1447060090, "post_id": 33600606, "comment_id": 54986039, "body": "what do you mean with &quot;inefficiency&quot;? Are you asking how to save memory or how to be more performant? Also I think this question belongs on <a href=\"http://codereview.stackexchange.com/\">codereview.stackexchange.com</a>"}, {"owner": {"reputation": 1276, "user_id": 2449599, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/8117b8eb8ef06d96fef4a5be131ab6c1?s=128&d=identicon&r=PG", "display_name": "phil", "link": "https://stackoverflow.com/users/2449599/phil"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1447186137, "post_id": 33600606, "comment_id": 55051320, "body": "@ker I think I meant both; I was vague because I didn&#39;t know enough to be more specific.  Yes, it could have gone to codereview; I wasn&#39;t sure."}], "answers": [{"comments": [{"owner": {"reputation": 28407, "user_id": 109618, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/84a4143803eafa1966191c604864a7b5?s=128&d=identicon&r=PG", "display_name": "David J.", "link": "https://stackoverflow.com/users/109618/david-j"}, "edited": false, "score": 2, "creation_date": 1475693915, "post_id": 33605905, "comment_id": 67050268, "body": "A style point regarding &quot;(yes, every word is a different link)&quot;. A bulleted list of links to other Stack Overflow questions is clearer to browse, because SO will automatically look up the titles and show them."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 12, "last_activity_date": 1475694349, "last_edit_date": 1495541373, "creation_date": 1447060971, "answer_id": 33605905, "question_id": 33600606, "link": "https://stackoverflow.com/questions/33600606/when-and-how-to-use-a-vector-of-references/33605905#33605905", "title": "When and how to use a vector of references", "body": "<p>The reason you could not get it to work is that structs cannot have fields that refer to other fields. (See supporting links at the bottom.)</p>\n\n<p>What you can do, is put all the <code>Object</code>s into your <code>Vec</code>, and have the <code>HashMap</code> contain the indices of the named elements it references.</p>\n\n<pre><code>struct State {\n    named: BTreeMap&lt;String, usize&gt;,\n    stack: Vec&lt;Object&gt;\n}\n</code></pre>\n\n<p>I'd also remove all lifetimes from your example, as this can be done completely with owned objects.</p>\n\n<pre><code>enum Object {\n    Str(String),\n    Int(i32),\n    Float(f32),\n    Vector(Vec&lt;Object&gt;),\n    Prim(fn(State) -&gt; State)\n}\n</code></pre>\n\n<p>You can try out a working implementation in the <a href=\"https://play.rust-lang.org/?code=use%20std%3A%3Acollections%3A%3ABTreeMap%3B%0A%0Aenum%20Object%20%7B%0A%20%20%20%20Str(String)%2C%0A%20%20%20%20Int(i32)%2C%0A%20%20%20%20Float(f32)%2C%0A%20%20%20%20Vector(Vec%3CObject%3E)%2C%0A%20%20%20%20Prim(fn(State)%20-%3E%20State)%0A%7D%0A%0A%23%5Bderive(Default)%5D%0Astruct%20State%20%7B%0A%20%20%20%20named%3A%20BTreeMap%3CString%2C%20usize%3E%2C%0A%20%20%20%20stack%3A%20Vec%3CObject%3E%0A%7D%0A%0Aimpl%20State%20%7B%0A%20%20%20%20fn%20push_int(%26mut%20self%2C%20x%3A%20i32)%20%7B%0A%20%20%20%20%20%20%20%20self.stack.push(Object%3A%3AInt(x))%3B%0A%20%20%20%20%7D%0A%20%20%20%20fn%20push_named(%26mut%20self%2C%20name%3A%20String%2C%20obj%3A%20Object)%20%7B%0A%20%20%20%20%20%20%20%20self.named.insert(name%2C%20self.stack.len())%3B%0A%20%20%20%20%20%20%20%20self.stack.push(obj)%3B%0A%20%20%20%20%7D%0A%7D%0A%0A%0Afn%20main()%20%7B%0A%20%20%20%20println!(%22Hello%2C%20world!%22)%3B%0A%20%20%20%20let%20obj%20%3D%20Object%3A%3AStr(%22this%20is%20a%20test%22.to_string())%3B%0A%20%20%20%20let%20mut%20state%20%3D%20State%3A%3Adefault()%3B%0A%20%20%20%20state.stack.push(Object%3A%3AFloat(42.0))%3B%0A%20%20%20%20state.stack.push(obj)%3B%0A%20%20%20%20state.push_int(99)%3B%0A%20%20%20%20state.push_named(%22cake%22.to_string()%2C%20Object%3A%3AStr(%22is%20a%20lie%22.to_string()))%3B%0A%7D&amp;version=stable)\" rel=\"noreferrer\">Playground</a></p>\n\n<p>Supporting links:</p>\n\n<ul>\n<li><p><a href=\"https://stackoverflow.com/questions/25269597/how-to-initialize-struct-fields-which-reference-each-other\">How to initialize struct fields which reference each other</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/31794503/using-self-in-new-constructor\">using self in new constructor</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/31825650/how-to-design-a-struct-when-i-need-to-reference-to-itself\">How to design a struct when I need to reference to itself</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/31988530/how-to-store-hashmap-and-its-values-iterator-in-the-same-struct\">How to store HashMap and its Values iterator in the same struct?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/20698384/lifetime-of-rust-structs-that-reference-each-other\">What lifetimes do I use to create Rust structs that reference each other cyclically?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/32209391/how-to-store-a-sqliteconnection-and-sqlitestatement-objects-in-the-same-struct-i\">How to store a SqliteConnection and SqliteStatement objects in the same struct in Rust?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\">Why can&#39;t I store a value and a reference to that value in the same struct?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/33123634/reference-inside-struct-to-object-it-owns\">https://stackoverflow.com/questions/33123634/reference-inside-struct-to-object-it-owns</a></p></li>\n</ul>\n"}], "owner": {"reputation": 1276, "user_id": 2449599, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/8117b8eb8ef06d96fef4a5be131ab6c1?s=128&d=identicon&r=PG", "display_name": "phil", "link": "https://stackoverflow.com/users/2449599/phil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6900, "favorite_count": 0, "accepted_answer_id": 33605905, "answer_count": 1, "score": 7, "last_activity_date": 1475733549, "creation_date": 1447027981, "last_edit_date": 1475733549, "question_id": 33600606, "link": "https://stackoverflow.com/questions/33600606/when-and-how-to-use-a-vector-of-references", "title": "When and how to use a vector of references", "body": "<p>This code correctly compiles.  It has a few unused code warnings, but that's okay for now.</p>\n\n<pre><code>use std::collections::BTreeMap;\n\nenum Object&lt;'a&gt; {\n    Str(String),\n    Int(i32),\n    Float(f32),\n    Vector(Vec&lt;&amp;'a Object&lt;'a&gt;&gt;),\n    Prim(fn(State) -&gt; State)\n}\n\nstruct State&lt;'a&gt; {\n    named: BTreeMap&lt;String, &amp;'a Object&lt;'a&gt;&gt;,\n    stack: Vec&lt;Object&lt;'a&gt;&gt;\n\n}\n\nimpl&lt;'a&gt; State&lt;'a&gt; {\n    fn push_int(&amp;mut self, x: i32) {\n        self.stack.push(Object::Int(x));\n    }\n}\n\n\nfn main() {\n    println!(\"Hello, world!\");\n    let obj = Object::Str(\"this is a test\".to_string());\n}\n</code></pre>\n\n<p>The important part of this code  is <code>push_int</code> and <code>stack: Vec&lt;Object&lt;'a&gt;&gt;</code>.</p>\n\n<p>I'm sort of trying to make a stack-based VM.\nI want to pass the state to functions, which can take stuff off the stack, manipulate the stuff, and then put some stuff back on the stack; the named field is going to hold named objects.</p>\n\n<p>I have a hunch that it would be better to have the stack represented as a <code>Vec&lt;&amp;'a Object&lt;'a&gt;&gt;</code> instead.\nThe way I have it now, I fear I'm committing some inefficiency error. Is my hunch correct?</p>\n\n<p>The second part of the problem is that I don't know how to get the vector of references version to work.  Creating new value with the right lifetimes to push onto the stack is not working for me.</p>\n\n<p>I'm a bit vague about this issue, so if I've been unclear, ask me questions to clear stuff up.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "edited": false, "score": 0, "creation_date": 1447083002, "post_id": 33600267, "comment_id": 54999242, "body": "Re-exporting does the trick - I guess it makes sense for enum types to behave more like mini-modules than structs and primitives."}], "tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": true, "score": 11, "last_activity_date": 1447025460, "last_edit_date": 1447025460, "creation_date": 1447025146, "answer_id": 33600267, "question_id": 33600159, "link": "https://stackoverflow.com/questions/33600159/type-alias-for-enum/33600267#33600267", "title": "Type alias for enum", "body": "<p>I don't think type aliases allow doing what you want, but you can rename the enum type in a <code>use</code> statement:</p>\n\n<pre><code>enum One { A, B, C }\n\nfn main() {\n    use One as Two;\n    let b = Two::B;\n}\n</code></pre>\n\n<p>You can use this in combination with <code>pub use</code> to re-export types under a different identifier:</p>\n\n<pre><code>mod foo {\n    pub enum One { A, B, C }\n}\n\nmod bar {\n    pub use foo::One as Two;\n}\n\nfn main() {\n    use bar::Two;\n    let b = Two::B;\n}\n</code></pre>\n"}], "owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1392, "favorite_count": 0, "accepted_answer_id": 33600267, "answer_count": 1, "score": 12, "last_activity_date": 1447025460, "creation_date": 1447024349, "question_id": 33600159, "link": "https://stackoverflow.com/questions/33600159/type-alias-for-enum", "title": "Type alias for enum", "body": "<p>Is there a way to make the code below work? That is, export an enum under a type alias, and allow access to the variants under the new name?</p>\n\n<pre><code>enum One { A, B, C }\n\ntype Two = One;\n\nfn main() {\n    // error: no associated item named `B` found for type `One` in the current scope\n    let b = Two::B;\n}\n</code></pre>\n"}, {"tags": ["opengl", "rust", "glsl", "shader", "tesselation"], "comments": [{"owner": {"reputation": 18146, "user_id": 646619, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/bd61a0f309ebc135d2661710c2faf379?s=128&d=identicon&r=PG", "display_name": "Colonel Thirty Two", "link": "https://stackoverflow.com/users/646619/colonel-thirty-two"}, "edited": false, "score": 4, "creation_date": 1447015463, "post_id": 33598306, "comment_id": 54973006, "body": "Only <code>GL_PATCH</code> primitives may be submitted to a shader program that has a tessellation shader, but you are submitting <code>GL_TRIANGLES</code>."}], "answers": [{"tags": [], "owner": {"reputation": 138010, "user_id": 5577765, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LoGpC.jpg?s=128&g=1", "display_name": "Rabbid76", "link": "https://stackoverflow.com/users/5577765/rabbid76"}, "is_accepted": false, "score": 1, "last_activity_date": 1613291013, "creation_date": 1613291013, "answer_id": 66193603, "question_id": 33598306, "link": "https://stackoverflow.com/questions/33598306/gldrawarrays-fails-when-tesselation-shaders-attached/66193603#66193603", "title": "gl::DrawArrays fails when tesselation shaders attached", "body": "<p>A tessellation shader does not render primitives, but patches. The primitives are created during the tessellation. See <a href=\"https://www.khronos.org/opengl/wiki/Tessellation\" rel=\"nofollow noreferrer\">Tessellation</a>.</p>\n<p>You must use the <a href=\"https://www.khronos.org/opengl/wiki/Primitive\" rel=\"nofollow noreferrer\">Primitive</a> type <code>gl::PATCHES</code> instead of <code>gl::TRIANGLES</code>. In addition, you have to specify the size of a single patch by setting the parameter <code>gl::PATCH VERTICES</code> with<code> gl::PatchParameteri</code>:</p>\n<p><s><code>gl::DrawArrays(gl::TRIANGLES, 0, 3);</code></s></p>\n<pre class=\"lang-rust prettyprint-override\"><code>gl::PatchParameteri(gl::PATCH_VERTICES, 3);\ngl::DrawArrays(gl::PATCHES, 0, 3);\n</code></pre>\n"}], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 215, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1613292471, "creation_date": 1447012389, "last_edit_date": 1613292471, "question_id": 33598306, "link": "https://stackoverflow.com/questions/33598306/gldrawarrays-fails-when-tesselation-shaders-attached", "title": "gl::DrawArrays fails when tesselation shaders attached", "body": "<p>I'm using the OpenGL SuperBible 6th edition, and learning about tessellation shaders. I get a <code>INVALID_OPERATION</code> error from <code>gl::DrawArrays</code>. This is my code:</p>\n\n<pre><code>extern crate libc;\nextern crate glutin;\nextern crate gl;\n\nuse std::io::Read;\n\nfn main() {\n    unsafe {\n        let win = glutin::WindowBuilder::new()\n                  .with_gl_profile(glutin::GlProfile::Core)\n                  .build_strict()\n                  .unwrap();\n\n        win.make_current().unwrap();\n        gl::load_with(|s| win.get_proc_address(s));\n\n        gl::DebugMessageCallback(\n            std::mem::transmute(gl_debug_message),\n            std::ptr::null_mut());\n\n        let program = build_shader_program();\n        gl::UseProgram(program);\n\n        let mut vao = std::mem::uninitialized();\n        gl::GenVertexArrays(1, &amp;mut vao);\n        gl::BindVertexArray(vao);\n\n        gl::PolygonMode(gl::FRONT_AND_BACK, gl::LINE);\n\n        let red = [1.0, 0.0, 0.0, 1.0];\n\n        let mut running = true;\n        while running {\n            for event in win.poll_events() {\n                if let glutin::Event::Closed = event {\n                    running = false;\n                }\n            }\n\n            win.swap_buffers().unwrap();\n            gl::ClearBufferfv(gl::COLOR, 0, &amp;red[0]);\n\n            gl::DrawArrays(gl::TRIANGLES, 0, 3);\n        }\n    }\n}\n\nextern \"system\"\nfn gl_debug_message(_source: u32, _type: u32, _id: u32, _sev: u32,\n                    _len: i32, message: *const libc::c_char,\n                    _param: *mut libc::c_void)\n{\n    unsafe {\n        let s = cstring_to_string(message);\n        panic!(\"OpenGL Debug message: {}\", s);\n    }\n}\n\nfn build_shader_program() -&gt; u32 {\n    let vert = load_and_compile_shader(\"a.vert\", gl::VERTEX_SHADER);\n    let tesc = load_and_compile_shader(\"a.tesc\", gl::TESS_CONTROL_SHADER);\n    let tese = load_and_compile_shader(\"a.tese\", gl::TESS_EVALUATION_SHADER);\n    let frag = load_and_compile_shader(\"a.frag\", gl::FRAGMENT_SHADER);\n\n    unsafe {\n        let program_id = gl::CreateProgram();\n        gl::AttachShader(program_id, vert);\n        gl::AttachShader(program_id, tesc);\n        gl::AttachShader(program_id, tese);\n        gl::AttachShader(program_id, frag);\n        gl::LinkProgram(program_id);\n\n        let mut result = std::mem::uninitialized();\n        gl::GetProgramiv(program_id, gl::LINK_STATUS, &amp;mut result);\n        assert_eq!(result, gl::TRUE as i32);\n\n        program_id\n    }\n}\n\nunsafe fn cstring_to_string(mut cs: *const libc::c_char) -&gt; String {\n    let mut v : Vec&lt;u8&gt; = Vec::new();\n    while *cs != 0 {\n        v.push(*cs as u8);\n        cs = cs.offset(1);\n    }\n    String::from_utf8(v).expect(\"c-string not utf8\")\n}\n\nfn load_file_as_cstring(path: &amp;str) -&gt; std::ffi::CString {\n    let mut contents = Vec::new();\n    let mut file = std::fs::File::open(path).unwrap();\n    file.read_to_end(&amp;mut contents).unwrap();\n    std::ffi::CString::new(contents).unwrap()\n}\n\nfn load_and_compile_shader(path: &amp;str, shader_type: u32) -&gt; u32 {\n    let contents = load_file_as_cstring(path);\n    unsafe {\n        let shader_id = gl::CreateShader(shader_type);\n\n        let source_ptr = contents.as_ptr();\n        gl::ShaderSource(shader_id, 1, &amp;source_ptr, std::ptr::null());\n        gl::CompileShader(shader_id);\n\n        let mut result = std::mem::uninitialized();\n        gl::GetShaderiv(shader_id, gl::COMPILE_STATUS, &amp;mut result);\n        assert_eq!(result, gl::TRUE as i32);\n\n        shader_id\n    }\n}\n</code></pre>\n\n<p>Running this program causes a debug message:</p>\n\n<pre><code>OpenGL Debug message: glDrawArrays has generated an error (GL_INVALID_OPERATION)\n</code></pre>\n\n<p>I've omitted the shaders (a vertex shader, a fragment shader, a tessellation control shader and a tessellation evaluation shader), but I can show them if that is necessary. They are very basic, I just didn't want to clutter the question. In fact they are the ones in <a href=\"https://github.com/openglsuperbible/sb6code/blob/master/src/tessellatedtri/tessellatedtri.cpp\" rel=\"nofollow\">this example program</a> from the sb6 git repository. They compile and link with no errors.</p>\n\n<p>If I remove the calls to <code>gl::AttachShader</code> for both tessellation shaders, there are no errors, and a simple wireframe triangle is drawn. With the tessellation shaders, it is supposed to draw the same triangle, just cut up into smaller triangles.</p>\n\n<p>I've looked the documentation for <code>glDrawArrays</code> <a href=\"https://www.opengl.org/sdk/docs/man/\" rel=\"nofollow\">on this site</a>, and my code doesn't seem to be doing any of the things that can cause an <code>INVALID_OPERATION</code> error, afaict.</p>\n"}, {"tags": ["file", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1446995567, "post_id": 33595362, "comment_id": 54965886, "body": "There&#39;s no <i>question</i> here that I can see. You&#39;ve simply pasted some examples of code and state that it doesn&#39;t work. Stack Overflow is not a code-writing service. Create an <a href=\"/help/mcve\">MCVE</a> that exemplifies your problem and ask a direct, specific question."}, {"owner": {"reputation": 625, "user_id": 5471706, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/904857529607067/picture?type=large", "display_name": "Raj Felix", "link": "https://stackoverflow.com/users/5471706/raj-felix"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1446995980, "post_id": 33595362, "comment_id": 54966014, "body": "@Shepmaster thanks for trying to help, i tried to read a file line by line. then store each line into a struct. the problem is i could not find a way to correctly assign the line to the buffer, the question is what is the correct way . thanks for clarifying"}], "answers": [{"comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1447023328, "post_id": 33599975, "comment_id": 54975427, "body": "You use panic for error handling, but to panic in rust in a function called from C or other language, will unwind across the boundary and this is UB. You should use catch_panic to avoid panicking across the boundary. And better, where possible, use non-panicking way of handling errors -- see <code>try!</code> in the <a href=\"https://doc.rust-lang.org/nightly/book/error-handling.html\" rel=\"nofollow noreferrer\">error handling guide.</a>"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1447023385, "post_id": 33599975, "comment_id": 54975444, "body": "To properly reconstitute a string <a href=\"http://doc.rust-lang.org/nightly/std/string/struct.String.html#method.from_raw_parts\" rel=\"nofollow noreferrer\">you <b>need</b> all three of pointer, length, capacity.</a>. So you need to keep the capacity around if you plan to allow freeing your datastructure by calling back into rust."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1447024050, "post_id": 33599975, "comment_id": 54975602, "body": "&quot;<i>i was sure that the code is wrong</i>&quot; - So there wasn no problem? Then the question should be closed. It isn&#39;t a very useful question anyway."}], "tags": [], "owner": {"reputation": 625, "user_id": 5471706, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/904857529607067/picture?type=large", "display_name": "Raj Felix", "link": "https://stackoverflow.com/users/5471706/raj-felix"}, "is_accepted": true, "score": 3, "last_activity_date": 1447023071, "creation_date": 1447023071, "answer_id": 33599975, "question_id": 33595362, "link": "https://stackoverflow.com/questions/33595362/using-bufreader-reading-files-line-by-line-stored-into-an-array/33599975#33599975", "title": "using BufReader reading files line by line, stored into an array", "body": "<p>as it appear now it seem that there was a bug in my visual studio, it's not the first time it ever happen but as i am new to rust i was sure that the code is wrong .</p>\n\n<p>this is what is working for me, i will be happy to have comments and suggestions </p>\n\n<pre><code>extern crate libc;\nuse std::env;\nuse libc::c_char;\nuse libc::c_int;\nuse std::mem;\nuse std::io::{BufReader, BufRead};\nuse std::fs::File;\n\n#[repr(C)]\npub struct PackChar {\n    pub int_val: c_int,\n    pub buffer: *mut c_char, // changed\n    pub dbuffer_size: c_int, // added\n}\n\n\n#[no_mangle]\npub extern fn rust_print_file() -&gt; *mut PackChar {\n    let mut out_vec = Vec::with_capacity(50 as usize);\n\n    let mut cwd = env::current_dir().unwrap();\n    let fl_str = \"file_test.txt\";\n    cwd.push(fl_str);\n    let file = BufReader::new(File::open(cwd).unwrap());\n\n    for (index, line) in file.lines().enumerate() {\n\n        let buffer = line.unwrap();\n        let buffer_size = buffer.len();\n\n        let pack_char = PackChar {\n            int_val: index as i32,\n            dbuffer_size: buffer_size as i32,\n            buffer: buffer.as_ptr() as *mut _,\n        };\n        mem::forget(buffer); // don't deallocate memory\n        out_vec.push(pack_char);\n    }\n\n    Box::into_raw(out_vec.into_boxed_slice()) as *mut _ // changed\n}\n</code></pre>\n"}], "owner": {"reputation": 625, "user_id": 5471706, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/904857529607067/picture?type=large", "display_name": "Raj Felix", "link": "https://stackoverflow.com/users/5471706/raj-felix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2192, "favorite_count": 0, "accepted_answer_id": 33599975, "answer_count": 1, "score": 1, "last_activity_date": 1447023071, "creation_date": 1446994978, "last_edit_date": 1447007385, "question_id": 33595362, "link": "https://stackoverflow.com/questions/33595362/using-bufreader-reading-files-line-by-line-stored-into-an-array", "title": "using BufReader reading files line by line, stored into an array", "body": "<p>in the code below the creation of the string buffer \nis a quickest way i have found as there's no allocation deallocation done \nif i understand correctly</p>\n\n\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub extern fn rust_print_file() -&gt; *mut PackChar {\n\n    //set min size to 50 - avoid expanding when line count is 50 or less\n    let mut out_vec = Vec::with_capacity(50);\n    let mut curdr = env::current_dir().unwrap();//get path to file dir\n    let fl_str = \"file_test.txt\";\n    curdr.push(fl_str);//created full path to be used\n\n    let file = BufReader::new(File::open(curdr).unwrap());\n\n    //here i try to accommodate each line in a struct\n\n    let mut line_index = 0;\n    for line in file.lines() {\n\n        let cur_line = line.unwrap();\n\n        let loclbuf_size = cur_line.len();\n        let mut loclbuf = String::with_capacity(buffer_size);\n        //i tried two ways\n        loclbuf.push_str(cur_line.unwrap()); // can't be done\n        loclbuf.push_str(line.unwrap()); // can't be done too\n\n        let pack_char = PackChar {\n            int_val: line_index,\n            buffer_size: loclbuf_size as i32,\n            buffer: loclbuf.as_ptr() as *mut _,\n        };\n        line_index+=1;\n        mem::forget(buffer);\n        out_vec.push(pack_char);\n    }\n    Box::into_raw(out_vec.into_boxed_slice()) as *mut _ \n}\n</code></pre>\n\n<p>this is the struct i am using to pass to C# </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C)]\npub struct PackChar {\n    pub int_val: c_int,\n    pub buffer: *mut c_char,\n    pub buffer_size: c_int,\n}\n</code></pre>\n\n<p>when generating some dummy text \ni have checked, and it passes data correctly to \"the other side\" to use it.\nbut not with the read line task, produced text as coded above.</p>\n\n<p>and this is another way i have tried, although i prefer the above code but this one  throws a compile error.</p>\n\n<p>error: use of moved value: <code>buffer</code> [E0382] on <code>forget(buffer)</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern fn rust_return_file_read_lines() -&gt; *mut PackChar {\n    let mut out_vec = Vec::with_capacity(50);\n\n    let mut curdr = env::current_dir().unwrap();\n    let fl_str = \"file_test.txt\";\n    curdr.push(fl_str);\n\n\n    let file = BufReader::new(File::open(curdr).unwrap());\n\n    let mut lindex = 0;\n    for line in file.lines() {\n\n       let tmpbuffer = line.unwrap().into_bytes();\n       let tmpbuffer_size = buffer.len();\n\n       let pack_char = PackChar {\n           int_val: lindex,\n           buffer_size: tmpbuffer_size as i32,\n           buffer: Box::into_raw(tmpbuffer.into_boxed_slice()) as *mut _\n       };\n       lindex+=1;\n       mem::forget(buffer);\n       out_vec.push(pack_char);\n\n    }\n    Box::into_raw(out_vec.into_boxed_slice()) as *mut _\n}\n</code></pre>\n\n<p><strong>Edit</strong>\nas long as the type of buffer :</p>\n\n<p><code>buffer: loclbuf.as_ptr() as *mut _,</code></p>\n\n<p>i could pass the the data correctly to c#. \nso <strong>how could i read lines that way so each will be stored into buffer as described ?</strong></p>\n"}, {"tags": ["binding", "pattern-matching", "rust", "variant"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1446937701, "post_id": 33588734, "comment_id": 54953794, "body": "I <b>guarantee</b> you can <a href=\"http://is.gd/363IR1\" rel=\"nofollow noreferrer\">make a smaller example</a> :-) This is called an <a href=\"/help/mcve\">MCVE</a> and is a <i>very</i> good idea when asking a question on Stack Overflow! Also note that having code that runs on the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playground</a> is <b>strongly</b> preferred."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446942767, "post_id": 33588734, "comment_id": 54954892, "body": "It&#39;s still very long compared to the question you are asking."}], "answers": [{"comments": [{"owner": {"reputation": 35530, "user_id": 196844, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/20232ad0698d2ac6c0f127d5eb850254?s=128&d=identicon&r=PG", "display_name": "Daniel Trebbien", "link": "https://stackoverflow.com/users/196844/daniel-trebbien"}, "edited": false, "score": 0, "creation_date": 1446943928, "post_id": 33589435, "comment_id": 54955106, "body": "This oversimplifies my question too much and thus does not answer it.  I was already aware of <code>ref mut</code> and how that is typically used.  The problem here is that I need to return the updated state containing the vector.  I can&#39;t just return a new <code>A</code> value with the <code>lines</code> mut ref because <code>A</code> needs the actual vector.  See the edit to my question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 35530, "user_id": 196844, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/20232ad0698d2ac6c0f127d5eb850254?s=128&d=identicon&r=PG", "display_name": "Daniel Trebbien", "link": "https://stackoverflow.com/users/196844/daniel-trebbien"}, "edited": false, "score": 0, "creation_date": 1446944440, "post_id": 33589435, "comment_id": 54955185, "body": "@DanielTrebbien then your question seems to have nothing to do with pattern matching or binding. You want to &quot;avoid creating the <code>new_lines</code> vector&quot; and don&#39;t want to &quot;create a clone of the vector&quot;, but you simply <b>cannot</b> change the data you are iterating on because the body of your loop <i>doesn&#39;t own it</i>. You may just want to change to <code>for line in lines</code> and consume the input vector?"}, {"owner": {"reputation": 35530, "user_id": 196844, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/20232ad0698d2ac6c0f127d5eb850254?s=128&d=identicon&r=PG", "display_name": "Daniel Trebbien", "link": "https://stackoverflow.com/users/196844/daniel-trebbien"}, "edited": false, "score": 0, "creation_date": 1446985489, "post_id": 33589435, "comment_id": 54962814, "body": "I am not changing the data that I am iterating on, which I agree would be prohibited in Rust.  Here, a new value of <code>state</code> is created with each iteration of the loop and the previous <code>state</code> value is overwritten.  I can create mutable values for each of the variables held in state (e.g. <a href=\"http://is.gd/AMTPgi\" rel=\"nofollow noreferrer\">is.gd/AMTPgi</a> ); however, it&#39;s not very elegant."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1446944215, "last_edit_date": 1446944215, "creation_date": 1446942740, "answer_id": 33589435, "question_id": 33588734, "link": "https://stackoverflow.com/questions/33588734/how-to-access-fields-of-a-value-bound-to-a-variable-in-a-match-expression/33589435#33589435", "title": "How to access fields of a value bound to a variable in a match expression?", "body": "<p>Let's look at a much simpler version of your issue:</p>\n\n<pre><code>enum Foo {\n    Alpha { score: u8 },\n    Beta { lives_left: u8 },\n}\n\nfn main() {\n    let the_value = Foo::Alpha { score: 42 };\n    match the_value {\n        alpha_only @ Alpha =&gt; println!(\"Score is {}\", alpha_only.score),\n        _ =&gt; println!(\"Dunno what to do!\"),\n    }\n}\n</code></pre>\n\n<p>The problem is that enum variants are not standalone types. That is, there is <em>no way</em> to have a variable of type <code>Foo::Alpha</code>; you can only have it be the type <code>Foo</code>. You can see this in the error message:</p>\n\n<blockquote>\n  <p>attempted access of field <code>score</code> <strong>on type <code>Foo</code></strong>, but no field with that name was found</p>\n</blockquote>\n\n<p>When you use <code>@</code> to bind the entire pattern, you can only know that you are getting something of type <code>Foo</code>.</p>\n\n<p>The normal way of dealing with this is to bind to a component of the item using <code>ref</code>:</p>\n\n<pre><code>match the_value {\n    Foo::Alpha { ref score } =&gt; println!(\"Score is {}\", score),\n    _ =&gt; println!(\"Dunno what to do!\"),\n}\n</code></pre>\n\n<p>And if you need to mutate the value, use <code>ref mut</code>:</p>\n\n<pre><code>match the_value {\n    Foo::Alpha { ref mut score } =&gt; {\n        *score += 1;\n        println!(\"Score is {}\", score)\n    },\n    _ =&gt; println!(\"Dunno what to do!\"),\n}\n</code></pre>\n\n<p>Of if you can consume the value, you don't need <code>ref</code>:</p>\n\n<pre><code>let the_value = Foo::Alpha { score: 42 };\nlet new_value = match the_value {\n    Foo::Alpha { score } =&gt; Foo::Alpha { score: score + 1 },\n    Foo::Beta { lives_left } =&gt; Foo::Alpha { score: lives_left * 2 },\n};\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 373, "user_id": 361640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a26c2ab786845a33302f62df06125e9e?s=128&d=identicon&r=PG", "display_name": "nielsle", "link": "https://stackoverflow.com/users/361640/nielsle"}, "is_accepted": true, "score": 4, "last_activity_date": 1446985367, "creation_date": 1446985367, "answer_id": 33593900, "question_id": 33588734, "link": "https://stackoverflow.com/questions/33588734/how-to-access-fields-of-a-value-bound-to-a-variable-in-a-match-expression/33593900#33593900", "title": "How to access fields of a value bound to a variable in a match expression?", "body": "<p>The following seems to work. Does it solve the problem?</p>\n\n<pre><code>    let new_state = match state { \n        B {n} =&gt; A { n: n, lines: vec![line.to_string()] },\n        A {n, mut lines} =&gt; {\n            match *line {\n                \"GO\" =&gt; B { n: n + 1 },\n                _ =&gt; {\n                    lines.push(line.to_string());\n                    A{ n:n, lines: lines}\n                }\n            }\n        }\n    };\n    state = new_state\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4fa712834999e45ccd4d&amp;version=stable\" rel=\"nofollow\">https://play.rust-lang.org/?gist=4fa712834999e45ccd4d&amp;version=stable</a></p>\n"}], "owner": {"reputation": 35530, "user_id": 196844, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/20232ad0698d2ac6c0f127d5eb850254?s=128&d=identicon&r=PG", "display_name": "Daniel Trebbien", "link": "https://stackoverflow.com/users/196844/daniel-trebbien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 33593900, "answer_count": 2, "score": 0, "last_activity_date": 1446985367, "creation_date": 1446936569, "last_edit_date": 1495542190, "question_id": 33588734, "link": "https://stackoverflow.com/questions/33588734/how-to-access-fields-of-a-value-bound-to-a-variable-in-a-match-expression", "title": "How to access fields of a value bound to a variable in a match expression?", "body": "<p>I have code similar to:</p>\n\n<pre><code>use std::string::{String};\nuse std::vec::{Vec};\n\nenum State {\n    A {\n        n: usize,\n        lines: Vec&lt;String&gt;,\n    },\n    B {\n        n: usize,\n    }\n}\n\nfn main() {\n    use State::*;\n\n    let lines = vec![\"a\", \"b\", \"GO\", \"c\", \"GO\", \"d\"];\n    let mut state = B { n: 0 };\n    for line in &amp;lines {\n        state = match state {\n            A { n, lines } =&gt; {\n                if line == &amp;\"GO\" {\n                    B { n: n + 1 }\n                } else {\n                    let mut new_lines = Vec::from(lines);\n                    new_lines.push(line.to_string());\n                    A { n: n, lines: new_lines }\n                }\n            },\n            B { n } =&gt; {\n                A { n: n, lines: vec![line.to_string()] }\n            },\n        };\n    }\n    let final_n = match state {\n        A { n, .. } =&gt; n,\n        B { n } =&gt; n,\n    };\n    println!(\"final_n = {}\", final_n);\n}\n</code></pre>\n\n<p>Rust Playground link:  <a href=\"http://is.gd/0QTYaQ\" rel=\"nofollow noreferrer\">http://is.gd/0QTYaQ</a></p>\n\n<p>(Note that this is a simplification of the actual code.  See the <a href=\"https://stackoverflow.com/revisions/33588734/1\">first revision</a> of this question for the full background.)</p>\n\n<p>I want to avoid creating the <code>new_lines</code> vector, so I tried binding the <code>State::A</code> value to a variable and accessing the fields of the value like so:</p>\n\n<pre><code>            s @ A { .. } =&gt; {\n                if line == &amp;\"GO\" {\n                    B { n: s.n + 1 }\n                } else {\n                    s.lines.push(line.to_string());\n                    s\n                }\n            },\n</code></pre>\n\n<p>However, this fails to compile:</p>\n\n<pre>\nParseState_enum_test.rs:23:28: 23:31 error: attempted access of field `n` on type `State`, but no field with that name was found\nParseState_enum_test.rs:23                     B { n: s.n + 1 }\n                                                      ^~~\nParseState_enum_test.rs:19:5: 33:6 note: in this expansion of for loop expansion\nParseState_enum_test.rs:25:21: 25:28 error: attempted access of field `lines` on type `State`, but no field with that name was found\nParseState_enum_test.rs:25                     s.lines.push(line.to_string());\n                                               ^~~~~~~\nParseState_enum_test.rs:19:5: 33:6 note: in this expansion of for loop expansion\nerror: aborting due to 2 previous errors\n</pre>\n\n<p>How do I access the fields of the value bound to the variable?</p>\n\n<p><strong>EDIT:</strong> I am aware of <code>ref mut</code> in pattern binding, but I don't think that this is a good solution in my case.  If I use <code>ref mut</code>, then I need to create a clone of the vector because this code does not compile:</p>\n\n<pre><code>            A { n, ref mut lines } =&gt; {\n                if line == &amp;\"GO\" {\n                    B { n: n + 1 }\n                } else {\n                    lines.push(line.to_string());\n                    A {\n                        n: n,\n                        lines: lines, // error: mismatched types\n                    }\n                }\n            },\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1446927193, "post_id": 33587245, "comment_id": 54950568, "body": "This is called &quot;downcasting&quot; and isn&#39;t really available. This will be a duplicate of <a href=\"http://stackoverflow.com/q/27892375/155423\">stackoverflow.com/q/27892375/155423</a> or <a href=\"http://stackoverflow.com/q/25246443/155423\">stackoverflow.com/q/25246443/155423</a>."}, {"owner": {"reputation": 373, "user_id": 361640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a26c2ab786845a33302f62df06125e9e?s=128&d=identicon&r=PG", "display_name": "nielsle", "link": "https://stackoverflow.com/users/361640/nielsle"}, "edited": false, "score": 2, "creation_date": 1446994307, "post_id": 33587245, "comment_id": 54965440, "body": "BTW: In some situations it is helful to use an enum rather than a trait. This allows you to use match instead of downcasting.   <a href=\"https://doc.rust-lang.org/book/enums.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/enums.html</a>"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "closed_date": 1447025921, "answer_count": 0, "score": 1, "last_activity_date": 1446927525, "creation_date": 1446927031, "last_edit_date": 1446927525, "question_id": 33587245, "link": "https://stackoverflow.com/questions/33587245/is-it-possible-to-cast-a-trait-to-the-implementing-struct", "closed_reason": "Duplicate", "title": "Is it possible to cast a trait to the implementing struct?", "body": "<p>I have a binding to a trait, and I want to cast it to the implementing struct so that I can call a method implemented on that struct.  Is this possible?  Below is code that illustrates what I'd like to do:</p>\n\n<pre><code>struct Struct {\n    num: u8\n}\n\ntrait Trait {\n    fn trait_fn(&amp;self) -&gt; u8;\n}\n\nimpl Trait for Struct {\n    fn trait_fn(&amp;self) -&gt; u8 {\n        self.num + 1\n    }\n}\n\nimpl Struct {\n    fn struct_fn(&amp;self) -&gt; u8 {\n        self.num - 1\n    }\n}\n\nfn main() {\n    let t: Box&lt;Trait&gt; = Box::new(Struct { num: 5 });\n    let t_result = t.trait_fn();\n    let s_result = (*t as Struct).struct_fn(); // How can I do something like this?\n    println!(\"Trait Result: {}, Struct Result: {}\", t_result, s_result);\n}\n</code></pre>\n"}, {"tags": ["c#", "interop", "rust", "marshalling", "dynamic-arrays"], "comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 13, "creation_date": 1446896954, "post_id": 33581363, "comment_id": 54941073, "body": "I don&#39;t know much about C# interop, but one thing is always true for using FFI with any external language: you should not use Rust-specific types like <code>Vec&lt;T&gt;</code> in <code>extern</code> functions. The only kinds of types which can be used in such functions are primitive types like integers, floats and pointers, and <code>#[repr(C)]</code> structures which consist of these types."}], "answers": [{"tags": [], "owner": {"reputation": 1090, "user_id": 6649664, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tkRmw.jpg?s=128&g=1", "display_name": "randomPoison", "link": "https://stackoverflow.com/users/6649664/randompoison"}, "is_accepted": false, "score": 5, "last_activity_date": 1475724744, "last_edit_date": 1475724744, "creation_date": 1475532476, "answer_id": 39841169, "question_id": 33581363, "link": "https://stackoverflow.com/questions/33581363/how-to-return-a-vector-of-structs-from-rust-to-c/39841169#39841169", "title": "How to return a vector of structs from Rust to C#?", "body": "<p>Let's break this down into the various requirements that your Rust code needs to meet:</p>\n\n<ol>\n<li>The DLL needs to expose a function with the correct name <code>GetPacksChar</code>. This is because you declare it with the name <code>GetPacksChar</code> from C# and the names must match.</li>\n<li>The function needs the correct calling convention, in this case <code>extern \"C\"</code>. This is because you declare the function as <code>CallingConvention = CallingConvention.Cdecl</code> from C#, which matches the <code>extern \"C\"</code> calling convention in Rust.</li>\n<li>The function needs the correct signature, in this case taking the Rust equivalent of a <code>uint</code> and a <code>PackChar**</code> and returning nothing. This matches the function signature <code>fn (u32, *mut *mut PackChar)</code>.</li>\n<li>The declaration of <code>PackChar</code> needs to match between C# and Rust. I'll go over this below.</li>\n<li>The function needs to the replicate the behavior of the original C function. I'll go over this below.</li>\n</ol>\n\n<p>The easiest part will be declaring the function in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"C\" fn GetPacksChar(length: u32, array_ptr: *mut *mut PackChar) {}\n</code></pre>\n\n<p>Next we need to address <code>PackChar</code>. Based on how it's used in the C# code, it looks like it should be declared:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C)]\npub struct PackChar {\n    pub IntVal: i32,\n    pub buffer: *mut u8,\n}\n</code></pre>\n\n<p>Breaking this down, <code>#[repr(C)]</code> tells the Rust compiler to arrange <code>PackChar</code> in memory the same way a C compiler would, which is important since you're telling C# that it's calling into C. <code>IntVal</code> and <code>buffer</code> are both used from C# and the original C version. <code>IntVal</code> is declared as an <code>int</code> in the C version, so we use <code>i32</code> in the Rust version, and <code>buffer</code> is treated as an array of bytes in C, so we use a <code>*mut u8</code> in Rust.</p>\n\n<p>Note that the definition of <code>PackChar</code> in C# should match the declaration in C/Rust, so:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>public struct PackChar {\n    public int IntVal;\n    public char* buffer;\n}\n</code></pre>\n\n<p>Now all that's left is to reproduce the original behavior of the C function in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"C\" fn GetPacksChar(len: u32, array_ptr: *const *mut PackChar) {\n    static DUMMY_STR: &amp;'static [u8] = b\"abcdefgHij\\0\";\n\n    // Allocate space for an array of `len` `PackChar` objects.\n    let bytes_to_alloc = len * mem::size_of::&lt;PackChar&gt;();\n    *array_ptr = CoTaskMemAlloc(bytes_to_alloc) as *mut PackChar;\n\n    // Convert the raw array of `PackChar` objects into a Rust slice and\n    // initialize each element of the array.\n    let mut array = slice::from_raw_parts(len as usize, *array_ptr);\n    for (index, pack_char) in array.iter_mut().enumerate() {\n        pack_char.IntVal = index;\n        pack_char.buffer = strdup(DUMMY_STR as ptr);\n        pack_char.buffer[DUMMY_STR.len() - 1] = b'0' + index % (126 - b'0');\n    }\n}\n</code></pre>\n\n<p>Important points from the above:</p>\n\n<ul>\n<li>We have to manually include the null terminating character (<code>\\0</code>) in <code>DUMMY_STR</code> because it's meant to be a C string.</li>\n<li>We call <code>CoTaskMemAlloc()</code> and <code>strdup()</code>, which are both C functions. <code>strdup()</code> is in the <a href=\"https://crates.io/crates/libc\" rel=\"noreferrer\">libc crate</a>, and you can probably find in <a href=\"https://retep998.github.io/doc/ole32/fn.CoTaskMemAlloc.html\" rel=\"noreferrer\">the ole32-sys crate</a>.</li>\n<li>The function is declared as <code>unsafe</code> because we have to do a number of unsafe things, like calling C functions and doing <code>str::from_raw_parts()</code>.</li>\n</ul>\n\n<p>Hope that helps!</p>\n"}], "owner": {"reputation": 625, "user_id": 5471706, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/904857529607067/picture?type=large", "display_name": "Raj Felix", "link": "https://stackoverflow.com/users/5471706/raj-felix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2700, "favorite_count": 2, "answer_count": 1, "score": 14, "last_activity_date": 1592834603, "creation_date": 1446889888, "last_edit_date": 1592834603, "question_id": 33581363, "link": "https://stackoverflow.com/questions/33581363/how-to-return-a-vector-of-structs-from-rust-to-c", "title": "How to return a vector of structs from Rust to C#?", "body": "<p>How is it possible to write Rust code like the C code below? This is my Rust code so far, without the option to marshal it:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct PackChar {\n    id: u32,\n    val_str: String,\n}\n\n#[no_mangle]\npub extern &quot;C&quot; fn get_packs_char(size: u32) -&gt; Vec&lt;PackChar&gt; {\n    let mut out_vec = Vec::new();\n\n    for i in 0..size {\n        let int_0 = '0' as u32;\n        let last_char_val = int_0 + i % (126 - int_0);\n        let last_char = char::from_u32(last_char_val).unwrap();\n        let buffer = format!(&quot;abcdefgHi{}&quot;, last_char);\n\n        let pack_char = PackChar {\n            id: i,\n            val_str: buffer,\n        };\n\n        out_vec.push(pack_char);\n    }\n\n    out_vec\n}\n</code></pre>\n<p>The code above tries to reproduce the following C code which I am able to  interoperate with as is.</p>\n<pre class=\"lang-c prettyprint-override\"><code>void GetPacksChar(int size, PackChar** DpArrPnt)\n{\n    int TmpStrSize = 10;\n    *DpArrPnt = (PackChar*)CoTaskMemAlloc( size * sizeof(PackChar));\n    PackChar* CurPackPnt = *DpArrPnt;\n    char dummyString[]= &quot;abcdefgHij&quot;;\n    for (int i = 0; i &lt; size; i++,CurPackPnt++)\n    {\n        dummyString[TmpStrSize-1] = '0' + i % (126 - '0');\n        CurPackPnt-&gt;IntVal = i;\n        CurPackPnt-&gt;buffer = strdup(dummyString);\n    }\n}\n</code></pre>\n<p>This C code could be accessed via DLL import in C# like this:</p>\n<pre class=\"lang-cs prettyprint-override\"><code>[Dllimport(&quot;DllPath&quot;, CallingConvention = CallingConvention.Cdecl)]\npublic static extern void GetPacksChar(uint length, PackChar** ArrayStructs)\n\nPackChar* MyPacksChar;\nGetPacksChar(10, &amp;MyPacksChar);\nPackChar* CurrentPack = MyPacksChar;\nvar contLst = new List&lt;PackChar&gt;();\nfor (uint i = 0; i &lt; ArrL; i++, CurrentPack++)\n    contlist.Add(new PackChar() {\n        IntVal = CurrentPack-&gt;IntVal, buffer = contLst-&gt;buffer\n    });\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 8, "last_activity_date": 1446858893, "creation_date": 1446858893, "answer_id": 33578031, "question_id": 33577805, "link": "https://stackoverflow.com/questions/33577805/dynamically-inferring-the-type-of-a-string/33578031#33578031", "title": "Dynamically inferring the type of a string", "body": "<p>There is a <a href=\"http://doc.rust-lang.org/stable/std/primitive.str.html#method.parse\"><code>parse</code></a> method on string slices (<code>&amp;str</code>) that attempts to parse a string as a particular type. You'll have to know the specific types you're ready to handle, though. The <code>parse</code> method can return values of any type that implements <a href=\"http://doc.rust-lang.org/stable/std/str/trait.FromStr.html#implementors\"><code>FromStr</code></a>.</p>\n\n<pre><code>fn main() {\n    if let Ok(i) = \"1\".parse::&lt;u32&gt;() {\n        println!(\"{}\", i);\n    }\n    if let Ok(f) = \"1.1\".parse::&lt;f64&gt;() {\n        println!(\"{}\", f);\n    }\n}\n</code></pre>\n\n<p>Note that the <code>::&lt;T&gt;</code> part is only necessary if the compiler is unable to infer what type you're trying to parse into (you'll get a compiler error in that case).</p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 5, "last_activity_date": 1446888021, "last_edit_date": 1446888021, "creation_date": 1446887685, "answer_id": 33581096, "question_id": 33577805, "link": "https://stackoverflow.com/questions/33577805/dynamically-inferring-the-type-of-a-string/33581096#33581096", "title": "Dynamically inferring the type of a string", "body": "<blockquote>\n  <p>I am trying to code a function that given a string returns the most possible type but I have no idea where to start.</p>\n</blockquote>\n\n<p>First of all: Rust is statically typed which means that a function returns one and only one type, so you can't just return different types, like in dynamically typed languages. However, there are ways to simulate dynamic typing -- namely two (that I can think of):</p>\n\n<ol>\n<li><p><code>enum</code>: If you have a fixed number of possible types, you could define an <code>enum</code> with one variant per type, like this:</p>\n\n<pre><code>enum DynType {\n    Integer(i64),\n    Float(f32),\n    String(String),\n}\n\nfn dyn_parse(s: &amp;str) -&gt; DynType {\n    ...\n}\n</code></pre>\n\n<p>You can read more on <code>enum</code>s in <a href=\"http://doc.rust-lang.org/book/enums.html\">this</a> and the following Rust book chapter.</p></li>\n<li><p>There is a trait in the standard library designed to simulate dynamic typing: <a href=\"http://doc.rust-lang.org/std/any/trait.Any.html\"><code>Any</code></a>. There is more information <a href=\"http://doc.rust-lang.org/std/any/index.html\">here</a>. Your code could look like this:</p>\n\n<pre><code>fn dyn_parse(s: &amp;str) -&gt; Box&lt;Any&gt; {\n    ...\n}\n</code></pre>\n\n<p>You can't return trait objects directly, so you have to put it in a <code>Box</code>.</p></li>\n</ol>\n\n<p>Keep in mind that both possibilities require the user of your function to do additional dispatch. Since Rust is statically typed, you can't do the things you are used to in a dynamically typed language. </p>\n\n<p>Maybe you should try to solve your problems in a different way that makes more sense in the statically typed world.</p>\n\n<hr>\n\n<p>About the implementation part: Like Francis Gagn\u00e9 said, there is <a href=\"http://doc.rust-lang.org/stable/std/primitive.str.html#method.parse\"><code>parse</code></a> which tries to parse a string as a type the programmer specifies. You could of course just chain those <code>parse</code> calls with different types and take the first one that succeeds. But this might not be what you want and maybe not the fastest implementation.</p>\n\n<p>Of course you should first think of exact rules what string should parse as what type. After that you could, for example, build a finite state machine that detects the type of the string. Doing that properly could be a bit tricky though. </p>\n"}], "owner": {"reputation": 327, "user_id": 4390396, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8ca9955dfb1057190c888a7b421be460?s=128&d=identicon&r=PG&f=1", "display_name": "Biela Diela", "link": "https://stackoverflow.com/users/4390396/biela-diela"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 33581096, "answer_count": 2, "score": 4, "last_activity_date": 1446888021, "creation_date": 1446856948, "question_id": 33577805, "link": "https://stackoverflow.com/questions/33577805/dynamically-inferring-the-type-of-a-string", "title": "Dynamically inferring the type of a string", "body": "<p>Rust newbie here. What would be a good way to go about dynamically inferring the most probably type given a string? I am trying to code a function that given a string returns the most possible type but I have no idea where to start. In Python I would probably use a <code>try-except</code> block. This is what I would expect to have:</p>\n\n<pre><code>\"4\" -&gt; u32 (or u64)\n\"askdjf\" -&gt; String\n\"3.2\" -&gt; f64\n</code></pre>\n\n<p>and so on? I know that some strings can be assigned to several possible types so the problem is not well defined but I am only interested in the general philosophy on how to solve the problem efficiently in rust.</p>\n"}, {"tags": ["rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "edited": false, "score": 1, "creation_date": 1446860381, "post_id": 33577216, "comment_id": 54933961, "body": "Thanks so much for your explanation!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1446852839, "creation_date": 1446852839, "answer_id": 33577216, "question_id": 33576978, "link": "https://stackoverflow.com/questions/33576978/graphicsmagick-ffi-issue/33577216#33577216", "title": "GraphicsMagick FFI issue", "body": "<p>The error message states (rewritten a bit):</p>\n\n<blockquote>\n  <p>Assertion <code>exception != NULL</code> failed</p>\n</blockquote>\n\n<p>That is, you <em>cannot</em> pass NULL to that method. Note the C code:</p>\n\n<pre><code>ExceptionInfo exception;\n</code></pre>\n\n<p>This is <strong>not</strong> a pointer. You need to allocate space for it and then pass in a reference to the allocated space.</p>\n\n<p>The <a href=\"http://www.graphicsmagick.org/api/types.html#exceptioninfo\" rel=\"nofollow\">documentation</a> shows the definition:</p>\n\n<pre><code>typedef struct _ExceptionInfo\n{\n  char\n    *reason,\n    *description;\n\n  ExceptionType\n    severity;\n\n  unsigned long\n    signature;\n} ExceptionInfo;\n</code></pre>\n\n<p>You will need to represent this in Rust. Something like this untested code:</p>\n\n<pre><code>extern crate libc;\n\n#[repr(C)]\nstruct ExceptionInfo {\n    reason: *const libc::c_char,\n    description: *const libc::c_char,\n    severity: ExceptionType,\n    signature: libc::c_ulong,\n}\n\n#[repr(C)]\nenum ExceptionType {\n    UndefinedException,\n    WarningException = 300,\n    // the rest\n}\n</code></pre>\n\n<p>Then you need to allocate it and pass a reference. More untested code:</p>\n\n<pre><code>let img_info;\nlet mut exception = ffi::ExceptionInfo::new();\n\nunsafe {             \n    ffi::InitializeMagick(ptr::null_mut());\n    img_info = \n        ffi::CloneImageInfo(ptr::null_mut() as *const ffi::ImageInfo);\n    ffi::GetExceptionInfo(&amp;mut exception);\n    // ...\n}\n</code></pre>\n\n<p>Note that Rust style is 4 space indents.</p>\n"}, {"comments": [{"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "edited": false, "score": 0, "creation_date": 1446860485, "post_id": 33577265, "comment_id": 54933981, "body": "Perfect, thanks! I was able to use this verbatim. I wasn&#39;t aware of <code>std::mem::uninitialized()</code>, but it was what I was missing. Thanks also for linking the relevant source code--"}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 4, "last_activity_date": 1446853112, "creation_date": 1446853112, "answer_id": 33577265, "question_id": 33576978, "link": "https://stackoverflow.com/questions/33576978/graphicsmagick-ffi-issue/33577265#33577265", "title": "GraphicsMagick FFI issue", "body": "<p>The difference between your C and Rust code is that the C version <em>allocates</em> an <code>ExceptionInfo</code> instance on the stack and passes into the <code>GetExceptionInfo</code> a pointer referencing that instance.</p>\n\n<p>Your Rust code, on the other hand, passes a <code>NULL</code> pointer.</p>\n\n<p><code>GetExceptionInfo</code> specifically guards against being passed a <code>NULL</code> pointer, you can see the assertion's code <a href=\"http://hg.code.sf.net/p/graphicsmagick/code/file/1c911b6deafd/magick/error.c#l395\" rel=\"nofollow\">here, in magick/error.c</a>.</p>\n\n<p>I don't know what kind of FFI bindings you use, but if the <code>ExceptionInfo</code> is fully defined in them then you should be able to allocate it on the stack and pass a reference to it just like in the C version:</p>\n\n<pre><code>let mut exception: ffi::ExceptionInfo = unsafe {std::mem::uninitialized()};\nunsafe {ffi::GetExceptionInfo (&amp;mut exception);}\n</code></pre>\n"}], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 33577265, "answer_count": 2, "score": 1, "last_activity_date": 1446853112, "creation_date": 1446850470, "last_edit_date": 1446851819, "question_id": 33576978, "link": "https://stackoverflow.com/questions/33576978/graphicsmagick-ffi-issue", "title": "GraphicsMagick FFI issue", "body": "<p>As an exercise, I'm attempting to write a GraphicsMagick FFI wrapper in Rust. I'm having an issue replicating some reference C code:</p>\n\n<p><a href=\"http://www.graphicsmagick.org/api/api.html\" rel=\"nofollow\">Demo C code</a>:</p>\n\n<pre><code>Image\n  *image = (Image *) NULL;\nImageInfo\n  *imageInfo;\nExceptionInfo\n  exception;\n\nInitializeMagick(NULL);\nimageInfo=CloneImageInfo(0);\nGetExceptionInfo(&amp;exception);\n</code></pre>\n\n<p>And here is my (naive) translation to Rust:</p>\n\n<pre><code>let img: *mut ffi::Image;\nlet img_info: *mut ffi::ImageInfo;\nlet exception: *mut ffi::ExceptionInfo = ptr::null_mut();\nunsafe {             \n  ffi::InitializeMagick(ptr::null_mut());\n  img_info = \n    ffi::CloneImageInfo(ptr::null_mut() as *const ffi::ImageInfo);\n  ffi::GetExceptionInfo(exception);\n  // ...\n}\n</code></pre>\n\n<p>This compiles just fine, but when I try to run it, I see:</p>\n\n<pre><code>magick/error.c:388: GetExceptionInfo: Assertion `exception != (ExceptionInfo *) ((void *)0)' failed\n</code></pre>\n\n<p>which is caused by <code>ffi::GetExceptionInfo(exception)</code>. The only difference seems to be that the C exception isn't \"initialized\", but I don't know enough about C to know if there is a difference between a null and an empty/uninitialized pointer.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1446841392, "post_id": 33574134, "comment_id": 54928167, "body": "See also the <a href=\"http://stackoverflow.com/questions/33569621/which-generic-parameter-must-be-specified\">previous question</a> in this series."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 1, "last_activity_date": 1446862505, "creation_date": 1446862505, "answer_id": 33578423, "question_id": 33574134, "link": "https://stackoverflow.com/questions/33574134/how-to-tell-which-generic-type-rust-is-unable-to-infer/33578423#33578423", "title": "How to tell which generic type Rust is unable to infer?", "body": "<pre><code>impl&lt;R, Ins&gt; GeneticAlgorithm&lt;R, Ins, Vec&lt;Ins&gt;&gt; for Mep&lt;Ins&gt; where R: Rng, Ins: Clone {\n    // ...\n}\n</code></pre>\n\n<p>This <code>impl</code> block implements <code>GeneticAlgorithm</code> for <code>Mep&lt;Ins&gt;</code> for all possible values of <code>R</code>. This means that there are multiple implementations of the <code>GeneticAlgorithm</code> trait for a particular <code>Mep&lt;Ins&gt;</code>. When you invoke the <code>mate</code> and <code>mutate</code> methods, the compiler is able to resolve a specific implementation from the arguments, but when you invoke <code>call</code>, the compiler is unable to resolve a specific implementation, since <code>R</code> is unconstrained.</p>\n\n<p>To solve this, move the <code>R</code> generic parameter to the <code>mate</code> and <code>mutate</code> methods.</p>\n\n<pre><code>pub trait GeneticAlgorithm&lt;Ins, C&gt; : Clone {\n    fn mate&lt;R&gt;(parents: (&amp;Self, &amp;Self), rng: &amp;mut R) -&gt; Self where R: Rng;\n    fn mutate&lt;R, F&gt;(&amp;mut self, rng: &amp;mut R, mutator: F) where F: FnMut(&amp;mut Ins), R: Rng;\n    fn call&lt;F&gt;(&amp;self, program: F) where F: FnOnce(&amp;C);\n}\n\nimpl&lt;Ins&gt; GeneticAlgorithm&lt;Ins, Vec&lt;Ins&gt;&gt; for Mep&lt;Ins&gt; where Ins: Clone {\n    fn mate&lt;R&gt;(parents: (&amp;Mep&lt;Ins&gt;, &amp;Mep&lt;Ins&gt;), rng: &amp;mut R) -&gt; Mep&lt;Ins&gt; where R: Rng { panic!() }\n    fn mutate&lt;R, F&gt;(&amp;mut self, rng: &amp;mut R, mut mutator: F) where F: FnMut(&amp;mut Ins), R: Rng { panic!() }\n    fn call&lt;F&gt;(&amp;self, program: F) where F: FnOnce(&amp;Vec&lt;Ins&gt;) {\n        program(&amp;self.instructions);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 105, "user_id": 4147262, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh3.googleusercontent.com/-Lu5bthyKl5Y/AAAAAAAAAAI/AAAAAAAAABE/gQdIKjHlGz8/photo.jpg?sz=128", "display_name": "vadix", "link": "https://stackoverflow.com/users/4147262/vadix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 893, "favorite_count": 0, "accepted_answer_id": 33578423, "answer_count": 1, "score": 0, "last_activity_date": 1446862505, "creation_date": 1446837634, "question_id": 33574134, "link": "https://stackoverflow.com/questions/33574134/how-to-tell-which-generic-type-rust-is-unable-to-infer", "title": "How to tell which generic type Rust is unable to infer?", "body": "<p>I encountered an issue in this situation (code here is buildable):</p>\n\n<pre><code>extern crate rand;\nuse rand::{Isaac64Rng, SeedableRng, Rng};\npub trait GeneticAlgorithm&lt;R, Ins, C&gt; : Clone where R: Rng {\n    fn mate(parents: (&amp;Self, &amp;Self), rng: &amp;mut R) -&gt; Self;\n    fn mutate&lt;F&gt;(&amp;mut self, rng: &amp;mut R, mutator: F) where F: FnMut(&amp;mut Ins);\n    fn call&lt;F&gt;(&amp;self, program: F) where F: FnOnce(&amp;C);\n}\n\npub struct Mep&lt;Ins&gt; {\n    instructions: Vec&lt;Ins&gt;,\n    unit_mutate_size: usize,\n    crossover_points: usize,\n}\n\nimpl&lt;Ins&gt; Mep&lt;Ins&gt; {\n    //Generates a new Mep with a particular size and takes a closure to generate random instructions\n    pub fn new&lt;I&gt;(unit_mutate_size: usize, crossover_points: usize, instruction_iter: I) -&gt; Mep&lt;Ins&gt;\n        where I: Iterator&lt;Item=Ins&gt; {\n        Mep{instructions: instruction_iter.collect(), unit_mutate_size: unit_mutate_size,\n            crossover_points: crossover_points}\n    }\n}\n\nimpl&lt;Ins&gt; Clone for Mep&lt;Ins&gt;\n    where Ins: Clone {\n    fn clone(&amp;self) -&gt; Self {\n        Mep{instructions: self.instructions.clone(), unit_mutate_size: self.unit_mutate_size,\n            crossover_points: self.crossover_points}\n    }\n}\n\nimpl&lt;R, Ins&gt; GeneticAlgorithm&lt;R, Ins, Vec&lt;Ins&gt;&gt; for Mep&lt;Ins&gt; where R: Rng, Ins: Clone {\n    fn mate(parents: (&amp;Mep&lt;Ins&gt;, &amp;Mep&lt;Ins&gt;), rng: &amp;mut R) -&gt; Mep&lt;Ins&gt; {}\n    fn mutate&lt;F&gt;(&amp;mut self, rng: &amp;mut R, mut mutator: F) where F: FnMut(&amp;mut Ins) {}\n    fn call&lt;F&gt;(&amp;self, program: F) where F: FnOnce(&amp;Vec&lt;Ins&gt;) {\n        program(&amp;self.instructions);\n    }\n}\n\nfn main() {\n    let mut rng = Isaac64Rng::from_seed(&amp;[1, 2, 3, 4]);\n    let (a, b) = {\n        let mut clos = || Mep::new(3, 3, rng.gen_iter::&lt;u32&gt;().map(|x| x % 10).take(10));\n        (clos(), clos())\n    };\n    let mut c = Mep::mate((&amp;a, &amp;b), &amp;mut rng);\n    c.mutate(&amp;mut rng, |ins: &amp;mut u32| *ins = 2);\n    c.call(|x: &amp;Vec&lt;u32&gt;| panic!());\n}\n</code></pre>\n\n<p>Rust claims that it cannot infer a type somewhere, but I am not sure how to specify the type of a closure if that is the issue, nor am I able to identify which specific generic parameter is causing the issue:</p>\n\n<pre><code>main.rs:48:7: 48:36 error: unable to infer enough type information about `_`; type annotations or generic parameter binding required [E0282]\nmain.rs:48     c.call(|x: &amp;Vec&lt;u32&gt;| panic!());\n                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>Which generic parameter is necessary to specify and how can that be determined? If it cannot be inferred, how is it possible to specify the intended trait: <code>GeneticAlgorithm&lt;Isaac64Rng, u32, Vec&lt;u32&gt;&gt;</code></p>\n\n<p>If anyone would like to build the original code itself, I am <a href=\"https://github.com/vadixidav/gpi\" rel=\"nofollow\">hosting it on GitHub (commit b0b24482fb7fc71da9c23cd1481ea09c9edd867e)</a>.</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 8771, "user_id": 2050, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2d1e9a607c47a89730352dd7b9dacaab?s=128&d=identicon&r=PG", "display_name": "Eric Platon", "link": "https://stackoverflow.com/users/2050/eric-platon"}, "edited": false, "score": 1, "creation_date": 1446847913, "post_id": 33573425, "comment_id": 54930981, "body": "Thanks for the detail. What do you think is the performance impact of cloning here? I am wondering whether it is worth chaining in such cases."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8771, "user_id": 2050, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2d1e9a607c47a89730352dd7b9dacaab?s=128&d=identicon&r=PG", "display_name": "Eric Platon", "link": "https://stackoverflow.com/users/2050/eric-platon"}, "edited": false, "score": 1, "creation_date": 1446852963, "post_id": 33573425, "comment_id": 54932273, "body": "The performance impact is very likely to be completely negligible here. Cloning a integer is a simple bitwise copy and that&#39;s a thing computers do ^_^. I&#39;ve added another possible solution."}, {"owner": {"reputation": 8771, "user_id": 2050, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2d1e9a607c47a89730352dd7b9dacaab?s=128&d=identicon&r=PG", "display_name": "Eric Platon", "link": "https://stackoverflow.com/users/2050/eric-platon"}, "edited": false, "score": 1, "creation_date": 1446854295, "post_id": 33573425, "comment_id": 54932653, "body": "Thank you. The question is generic, though. I do not know how cloning works in Rust; just seeing an extra cost in general. The alternative with <code>into_iter</code> looks good---having a look at the implementation."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1446860484, "post_id": 33573425, "comment_id": 54933980, "body": "Thanks, this is really great. I didn&#39;t even spot that that <code>&amp;</code>. Now I need to find out why <code>Option</code> works differently in this case.."}, {"owner": {"reputation": 5159, "user_id": 482819, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/241c9426403e040a283f10ae6499ace6?s=128&d=identicon&r=PG", "display_name": "Hernan", "link": "https://stackoverflow.com/users/482819/hernan"}, "edited": false, "score": 0, "creation_date": 1459317670, "post_id": 33573425, "comment_id": 60225902, "body": "What happens is the Item of both iterators are of different types but implement the same Trait? Can you join them returning an Iterator over elements of that shared Trait?"}, {"owner": {"reputation": 361, "user_id": 4237232, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-9O5kKSPEl6Y/AAAAAAAAAAI/AAAAAAAAAB0/ht9QINTIVnQ/photo.jpg?sz=128", "display_name": "Demur Rumed", "link": "https://stackoverflow.com/users/4237232/demur-rumed"}, "reply_to_user": {"reputation": 5159, "user_id": 482819, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/241c9426403e040a283f10ae6499ace6?s=128&d=identicon&r=PG", "display_name": "Hernan", "link": "https://stackoverflow.com/users/482819/hernan"}, "edited": false, "score": 1, "creation_date": 1474850945, "post_id": 33573425, "comment_id": 66685669, "body": "@Hernan you would have to map them to Box&lt;Trait&gt;"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1446852999, "last_edit_date": 1446852999, "creation_date": 1446834954, "answer_id": 33573425, "question_id": 33573260, "link": "https://stackoverflow.com/questions/33573260/chaining-iterators-of-different-types/33573425#33573425", "title": "Chaining iterators of different types", "body": "<p>First, note that the iterators yield different types. I've added an explicit <code>u8</code> to the numbers to make the types more obvious:</p>\n\n<pre><code>fn main() {\n    let s = Some(10u8);\n    let r = (1..5u8);\n\n    let () = s.iter().next(); // Option&lt;&amp;u8&gt;\n    let () = r.next();        // Option&lt;u8&gt;\n}\n</code></pre>\n\n<p>When you <code>chain</code> two iterators, <strong>both iterators must yield the same type</strong>. This makes sense as the iterator cannot \"switch\" what type it outputs when it gets to the end of one and begins on the second:</p>\n\n<pre><code>fn chain&lt;U&gt;(self, other: U) -&gt; Chain&lt;Self, U::IntoIter&gt; \n    where U: IntoIterator&lt;Item=Self::Item&gt;\n//                        ^~~~~~~~~~~~~~~ This means the types must match\n</code></pre>\n\n<p>So why does <code>zip</code> work? Because it doesn't have that restriction:</p>\n\n<pre><code>fn zip&lt;U&gt;(self, other: U) -&gt; Zip&lt;Self, U::IntoIter&gt; \n    where U: IntoIterator\n//                       ^~~~ Nothing here!\n</code></pre>\n\n<p>This is because <code>zip</code> returns a tuple with one value from each iterator; a new type, distinct from either source iterator's type. One iterator could be an integral type and the other could return your own custom type for all <code>zip</code> cares.</p>\n\n<blockquote>\n  <p>Why is Rust able to infer the correct types for <code>zip</code> but not for <code>chain</code></p>\n</blockquote>\n\n<p>There is no type inference happening here; that's a different thing. This is just plain-old type mismatching.</p>\n\n<blockquote>\n  <p>and how can I fix it?</p>\n</blockquote>\n\n<p>In this case, your inner iterator yields a reference to an integer, a <code>Clone</code>-able type, so you can use <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned\"><code>cloned</code></a> to make a new iterator that clones each value and then both iterators would have the same type:</p>\n\n<pre><code>fn main() {\n    let s = Some(10);\n    let v: Vec&lt;_&gt; = (1..5).chain(s.iter().cloned()).collect();\n}\n</code></pre>\n\n<p>If you are done with the option, you can also use a <em>consuming iterator</em> with <code>into_iter</code>:</p>\n\n<pre><code>fn main() {\n    let s = Some(10);\n    let v: Vec&lt;_&gt; = (1..5).chain(s.into_iter()).collect();\n}\n</code></pre>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1492, "favorite_count": 0, "accepted_answer_id": 33573425, "answer_count": 1, "score": 2, "last_activity_date": 1446852999, "creation_date": 1446834300, "question_id": 33573260, "link": "https://stackoverflow.com/questions/33573260/chaining-iterators-of-different-types", "title": "Chaining iterators of different types", "body": "<p>I get type errors when chaining different types of Iterator.</p>\n\n<pre><code>let s = Some(10);\nlet v = (1..5).chain(s.iter())\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>&lt;anon&gt;:23:20: 23:35 error: type mismatch resolving `&lt;core::option::Iter&lt;'_, _&gt; as core::iter::IntoIterator&gt;::Item == _`:\n expected &amp;-ptr,\n    found integral variable [E0271]\n&lt;anon&gt;:23     let v = (1..5).chain(s.iter())\n                             ^~~~~~~~~~~~~~~\n&lt;anon&gt;:23:20: 23:35 help: see the detailed explanation for E0271\n&lt;anon&gt;:24:14: 24:33 error: no method named `collect` found for type `core::iter::Chain&lt;core::ops::Range&lt;_&gt;, core::option::Iter&lt;'_, _&gt;&gt;` in the current scope\n&lt;anon&gt;:24             .collect::&lt;Vec&lt;_&gt;&gt;();\n                       ^~~~~~~~~~~~~~~~~~~\n&lt;anon&gt;:24:14: 24:33 note: the method `collect` exists but the following trait bounds were not satisfied: `core::iter::Chain&lt;core::ops::Range&lt;_&gt;, core::option::Iter&lt;'_, _&gt;&gt; : core::iter::Iterator`\nerror: aborting due to 2 previous errors\n</code></pre>\n\n<p>But it works fine when zipping:</p>\n\n<pre><code>let s = Some(10);\nlet v = (1..5).zip(s.iter())\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>[(1, 10)]\n</code></pre>\n\n<p>Why is Rust able to infer the correct types for <code>zip</code> but not for <code>chain</code> and how can I fix it? n.b. I want to be able to do this for any iterator, so I don't want a solution that just works for Range and Option.</p>\n"}, {"tags": ["debugging", "gdb", "rust"], "answers": [{"comments": [{"owner": {"reputation": 144, "user_id": 3646645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/853ceee504eed53fdd87e8cfd916e9b5?s=128&d=identicon&r=PG&f=1", "display_name": "kirillkh", "link": "https://stackoverflow.com/users/3646645/kirillkh"}, "edited": false, "score": 1, "creation_date": 1459648022, "post_id": 33570022, "comment_id": 60378816, "body": "In my experience, there are too many bugs with rustdt+gdb on Windows, and enabling pretty-printing only makes it worse. For one, every Vec will be displayed as string including all its items, no matter how many. For two, I&#39;ve seen reproducible freezes when stepping out of a function. I figure right now it&#39;s better to disable pretty-printing. Many things don&#39;t work, but at least it doesn&#39;t freeze. YMMV"}, {"owner": {"reputation": 1357, "user_id": 393898, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89b55a355cb66fff949fe85c45ea4897?s=128&d=identicon&r=PG", "display_name": "BrunoMedeiros", "link": "https://stackoverflow.com/users/393898/brunomedeiros"}, "reply_to_user": {"reputation": 144, "user_id": 3646645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/853ceee504eed53fdd87e8cfd916e9b5?s=128&d=identicon&r=PG&f=1", "display_name": "kirillkh", "link": "https://stackoverflow.com/users/3646645/kirillkh"}, "edited": false, "score": 0, "creation_date": 1459876734, "post_id": 33570022, "comment_id": 60480320, "body": "True. This was mentioned in the User Guide: &quot;Having the pretty-printers enabled may sometimes cause slowdown when debugging, if the Variables view is visible, and the value of uninitialized variables is displayed.&quot; And there might be other issues with pretty-printers too."}, {"owner": {"reputation": 1357, "user_id": 393898, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89b55a355cb66fff949fe85c45ea4897?s=128&d=identicon&r=PG", "display_name": "BrunoMedeiros", "link": "https://stackoverflow.com/users/393898/brunomedeiros"}, "reply_to_user": {"reputation": 144, "user_id": 3646645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/853ceee504eed53fdd87e8cfd916e9b5?s=128&d=identicon&r=PG&f=1", "display_name": "kirillkh", "link": "https://stackoverflow.com/users/3646645/kirillkh"}, "edited": false, "score": 1, "creation_date": 1459876851, "post_id": 33570022, "comment_id": 60480379, "body": "Hum, I think I will change the wording of the User Guide from &quot;slowdown&quot; to &quot;long pauses / freezes&quot;, since that is more accurate."}], "tags": [], "owner": {"reputation": 1357, "user_id": 393898, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89b55a355cb66fff949fe85c45ea4897?s=128&d=identicon&r=PG", "display_name": "BrunoMedeiros", "link": "https://stackoverflow.com/users/393898/brunomedeiros"}, "is_accepted": false, "score": 25, "last_activity_date": 1447239406, "last_edit_date": 1447239406, "creation_date": 1446823319, "answer_id": 33570022, "question_id": 33570021, "link": "https://stackoverflow.com/questions/33570021/how-to-set-up-gdb-for-debugging-rust-programs-in-windows/33570022#33570022", "title": "How to set up GDB for debugging Rust programs in Windows?", "body": "<h2>Rust installation</h2>\n\n<p>First, you need to compile your programs with the Windows GNU ABI Rust installation. The MSVC ABI uses a different debugging format than the one GDB understands, so that won't work. MSVC ABI compiled programs would have to debugged with Visual Studio (or possibly LLDB, in the future).</p>\n\n<h2>GDB</h2>\n\n<p>Second step is to get GDB itself. The recommended option is to get it from either TDM-GCC or mingw-w64:</p>\n\n<ul>\n<li>TDM-GCC (<a href=\"http://tdm-gcc.tdragon.net/\">http://tdm-gcc.tdragon.net/</a>): Has available a download package with <a href=\"http://sourceforge.net/projects/tdm-gcc/files/GDB/gdb-7.9.1-tdm64-2.zip/download\">GDB only</a> (without GCC or the other tools, which you don't need). Special keys work in Windows terminal only. Recommended GDB for use with Eclipse/RustDT.</li>\n<li>Mingw-w64 (<a href=\"http://mingw-w64.org/\">http://mingw-w64.org/</a>): Special keys work in Windows terminal only. Recent versions seems to have a bug: command-line arguments with spaces in them are parsed incorrectly. </li>\n<li>Cygwin: Not recommended. Special keys work in Windows terminal and bash terminal. Paths have to be specified in Cygwin format, and this seems to break a few things. Doesn't work properly with Eclipse/RustDT.</li>\n</ul>\n\n<h2>Enabling pretty-printers</h2>\n\n<p>Rust provides some extensions to GDB to enable a better display of certain Rust native types, such as enums, slices, and vectors. With the pretty-printers, variables of this type will be displayed in a structured way, instead of the low-level representation. For more info see <a href=\"https://michaelwoerister.github.io/2015/03/27/rust-xxdb.html\">https://michaelwoerister.github.io/2015/03/27/rust-xxdb.html</a> .</p>\n\n<p>The pretty-printers are only included in the Linux (and Mac OS?) distributions of Rust, not the Windows one (<a href=\"https://github.com/rust-lang/rust/issues/29658\">Issue reported</a>). But they can be made to work in Windows.</p>\n\n<p>Download the Linux Rust archive (<a href=\"https://www.rust-lang.org/downloads.html\">https://www.rust-lang.org/downloads.html</a>), extract and locate the <code>rustc/lib/rustlib/etc</code> directory inside. Now copy the <code>etc</code> folder to <code>$RUST/bin/rustlib</code> , where $RUST is the location of your Rust installation. The Python scripts there will then be located in <code>$RUST/bin/rustlib/etc</code>.</p>\n\n<p><strong>If you only intend to use GDB from within RustDT, and have RustDT 0.4.1 or above, you can skip to the next section: \"Using GDB in Eclipse with RustDT\"</strong>.</p>\n\n<p>Now, GDB needs to be configured to load these scripts. Locate the gdbinit file of your GDB installation (for TDM-GCC, should be <code>gdb64\\bin\\gdbinit</code>, for mingw-w64: <code>mingw64\\etc\\gdbinit</code>). Now add the following text to the end of the file:</p>\n\n<pre><code>python\nprint \"---- Loading Rust pretty-printers ----\"\n\nsys.path.insert(0, \"$RUST_GDB_ETC\")\nimport gdb_rust_pretty_printing\ngdb_rust_pretty_printing.register_printers(gdb)\n\nend\n</code></pre>\n\n<p>But replace <code>$RUST_GDB_ETC</code> with the location of the <code>etc</code> directory with the Python files, for example <code>D:/devel/tools.Rust/rust/bin/rustlib/etc</code>. Note, even though it's a Windows path, make sure you use the forward-slash ('/') as a path separator, to avoid escape issues in that string literal.</p>\n\n<p>To verify this works, start gdb. If you see the \"---- Loading Rust pretty-printers ----\" message before the prompt and no Python errors after, things should be working. To confirm, type the command <code>info pretty-printer</code>. There should be a line with \"rust_pretty_printer_lookup_function\" in the output if the pretty-printers were loaded successfully.</p>\n\n<h2>Using GDB in Eclipse with RustDT</h2>\n\n<p>If you successfully completed the steps before, you are nearly good to go to use GDB from within RustDT. Just a few details:</p>\n\n<ul>\n<li><p>If using TDM GDB, the GDB executable to be started must be the one at <code>$TDM_ROOT/gdb64/bin/gdb.exe</code>, not the ones at <code>$TDM_ROOT/bin/gdb.exe</code> or <code>$TDM_ROOT/bin/gdb64.exe</code>, because these last two are wrappers for the correct executable, and they don't work properly when RustDT/CDT starts the GDB process.</p></li>\n<li><p>If using RustDT 0.4.1 or above, the pretty-printers will be configured automatically, as long as RustDT finds them in <code>${RUST_ROOT}/lib/rustlib/etc</code>. You can verify this worked by starting a debug launch, opening the corresponding \"gdb traces\" console page in the Console view, and searching for the string \"Registering Rust pretty-printers for Windows\":\n<a href=\"https://i.stack.imgur.com/fYFSb.png\"><img src=\"https://i.stack.imgur.com/fYFSb.png\" alt=\"RustDT GDB debug traces\"></a></p></li>\n<li><p>For RustDT versions prior to 0.4.1, to enable the pretty-printers, you much configure the launch configuration to run the gdbinit file that you just modified in the previous section. The default gdbinit is not executed when GDB is started by RustDT/CDT, only the one you specify in the configuration. So change the \"GDB command file\" field from <code>.gdbinit</code> to, for example <code>D:\\devel\\tools\\TDM-GDB\\gdb64\\bin\\gdbinit</code>:</p></li>\n</ul>\n\n<p><a href=\"https://i.stack.imgur.com/ZZt2A.png\"><img src=\"https://i.stack.imgur.com/ZZt2A.png\" alt=\"RustDT debug launch configuration\"></a></p>\n"}], "owner": {"reputation": 1357, "user_id": 393898, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89b55a355cb66fff949fe85c45ea4897?s=128&d=identicon&r=PG", "display_name": "BrunoMedeiros", "link": "https://stackoverflow.com/users/393898/brunomedeiros"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7459, "favorite_count": 8, "answer_count": 1, "score": 20, "last_activity_date": 1447380420, "creation_date": 1446823319, "last_edit_date": 1447380420, "question_id": 33570021, "link": "https://stackoverflow.com/questions/33570021/how-to-set-up-gdb-for-debugging-rust-programs-in-windows", "title": "How to set up GDB for debugging Rust programs in Windows?", "body": "<p>How can I configure GDB for debugging Rust programs in Windows, including setting-up the Rust pretty-printers, and debugging either in an IDE or the command-line?</p>\n"}, {"tags": ["path", "rust", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 485, "user_id": 4893106, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-D59LRZ5jwr4/AAAAAAAAAAI/AAAAAAAAAFo/4U_1kHzqng0/photo.jpg?sz=128", "display_name": "user4893106", "link": "https://stackoverflow.com/users/4893106/user4893106"}, "edited": false, "score": 0, "creation_date": 1606876585, "post_id": 33570304, "comment_id": 115093812, "body": "this helped me. i&#39;d like to add something that is stated several times in the rust book, as well as implicitly here, but still may slip up folks new to rust: <code>Sized</code> is the default and implicit."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1606877955, "last_edit_date": 1606877955, "creation_date": 1446824192, "answer_id": 33570304, "question_id": 33569651, "link": "https://stackoverflow.com/questions/33569651/how-can-i-write-a-builder-that-stores-a-path/33570304#33570304", "title": "How can I write a builder that stores a Path?", "body": "<p>This works:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{fs::File, path::Path};\n\nstruct Foo {\n    a: Option&lt;File&gt;,\n}\n\nstruct FooBuilder&lt;'a&gt; {\n    a: Option&lt;&amp;'a Path&gt;,\n}\n\nimpl&lt;'a&gt; FooBuilder&lt;'a&gt; {\n    fn new() -&gt; FooBuilder&lt;'a&gt; {\n        FooBuilder { a: None }\n    }\n\n    fn a&lt;P&gt;(&amp;mut self, a: &amp;'a P) -&gt; &amp;mut FooBuilder&lt;'a&gt;\n    where\n        P: AsRef&lt;Path&gt; + ?Sized,\n    {\n        self.a = Some(a.as_ref());\n        self\n    }\n\n    fn build(&amp;self) -&gt; Foo {\n        Foo {\n            a: self.a.map(|path| File::open(path).unwrap()),\n        }\n    }\n}\n\nfn main() {\n    let path1 = Path::new(&quot;1&quot;);\n    let _foo = FooBuilder::new().a(path1).build();\n}\n</code></pre>\n<p>Let's focus on the <code>a</code> method:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn a&lt;P&gt;(&amp;mut self, a: &amp;'a P) -&gt; &amp;mut FooBuilder&lt;'a&gt;\nwhere\n    P: AsRef&lt;Path&gt; + ?Sized,\n</code></pre>\n<p>This method accepts a <em>reference</em> to a type that implements <code>AsRef&lt;Path&gt;</code>. That means that we can get a reference to a <code>Path</code> with the same lifetime as the parameter. The other change is to make the <code>Sized</code> bound optional for the type via <code>?</code>. This means that we can have a reference to something that we don't know  how big it is. This is fine as we will know how big the <em>reference itself</em> is.</p>\n<p>Let's compare this to your original version:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn a&lt;P: AsRef&lt;Path&gt; + 'a&gt;(&amp;'a mut self, a: P) -&gt; &amp;mut FooBuilder&lt;'a&gt; {\n    self.a = Some(a.as_ref());\n    self\n}\n</code></pre>\n<p>Here, the <code>a</code> parameter is passed-by-value into the method <code>a</code>. When you call <code>as_ref</code>, you are implicitly calling it on a <em>reference</em> to the item that is on the stack frame of the method call. The referred-to item will be dropped at the end of the method call, which means that the reference would become invalid. That is the reasoning behind the <code>error: `a` does not live long enough</code> error you were getting.</p>\n<p>I also used <code>Option::map</code> to clean up the <code>build</code> method. I renamed it to <code>build</code> because <em>builders</em> should generally have a <code>build</code> method, unless there's a more obvious verb to use (like <code>open</code>).</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30333607/155423\">What does the question mark mean in a type parameter bound?</a></li>\n</ul>\n"}], "owner": {"reputation": 13, "user_id": 5533913, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d2b014f7924b80f3cd99761af1616d8?s=128&d=identicon&r=PG&f=1", "display_name": "waxogi", "link": "https://stackoverflow.com/users/5533913/waxogi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 319, "favorite_count": 1, "accepted_answer_id": 33570304, "answer_count": 1, "score": 1, "last_activity_date": 1606878078, "creation_date": 1446822105, "last_edit_date": 1606878078, "question_id": 33569651, "link": "https://stackoverflow.com/questions/33569651/how-can-i-write-a-builder-that-stores-a-path", "title": "How can I write a builder that stores a Path?", "body": "<p>The <code>Path</code> argument could be immediately converted into a <code>PathBuf</code>, but that seems inefficient. There has to be some way of keeping just a <code>Path</code>, right?</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{fs::File, path::Path};\n\nstruct Foo {\n    a: Option&lt;File&gt;,\n    b: Option&lt;File&gt;,\n}\n\nstruct FooBuilder&lt;'a&gt; {\n    a: Option&lt;&amp;'a Path&gt;,\n    b: Option&lt;&amp;'a Path&gt;,\n}\n\nimpl&lt;'a&gt; FooBuilder&lt;'a&gt; {\n    fn new() -&gt; FooBuilder&lt;'a&gt; {\n        FooBuilder { a: None, b: None }\n    }\n\n    fn a&lt;P: AsRef&lt;Path&gt; + 'a&gt;(&amp;'a mut self, a: P) -&gt; &amp;mut FooBuilder&lt;'a&gt; {\n        self.a = Some(a.as_ref());\n        self\n    }\n\n    fn b&lt;P: AsRef&lt;Path&gt; + 'a&gt;(&amp;'a mut self, b: P) -&gt; &amp;mut FooBuilder&lt;'a&gt; {\n        self.b = Some(b.as_ref());\n        self\n    }\n\n    fn done(&amp;self) -&gt; Foo {\n        Foo {\n            a: match self.a {\n                Some(path) =&gt; Some(File::open(path).unwrap()),\n                None =&gt; None,\n            },\n            b: match self.b {\n                Some(path) =&gt; Some(File::open(path).unwrap()),\n                None =&gt; None,\n            },\n        }\n    }\n}\n\nfn main() {\n    let path1 = Path::new(&quot;1&quot;);\n    let path2 = Path::new(&quot;2&quot;);\n    let _foo = FooBuilder::new().a(path1).b(path2).done();\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `a` does not live long enough\n  --&gt; src/main.rs:19:23\n   |\n13 | impl&lt;'a&gt; FooBuilder&lt;'a&gt; {\n   |      -- lifetime `'a` defined here\n...\n19 |         self.a = Some(a.as_ref());\n   |         --------------^----------\n   |         |             |\n   |         |             borrowed value does not live long enough\n   |         assignment requires that `a` is borrowed for `'a`\n20 |         self\n21 |     }\n   |     - `a` dropped here while still borrowed\n\nerror[E0597]: `b` does not live long enough\n  --&gt; src/main.rs:24:23\n   |\n13 | impl&lt;'a&gt; FooBuilder&lt;'a&gt; {\n   |      -- lifetime `'a` defined here\n...\n24 |         self.b = Some(b.as_ref());\n   |         --------------^----------\n   |         |             |\n   |         |             borrowed value does not live long enough\n   |         assignment requires that `b` is borrowed for `'a`\n25 |         self\n26 |     }\n   |     - `b` dropped here while still borrowed\n</code></pre>\n"}, {"tags": ["generics", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1446823018, "creation_date": 1446823018, "answer_id": 33569938, "question_id": 33569621, "link": "https://stackoverflow.com/questions/33569621/which-generic-parameter-must-be-specified/33569938#33569938", "title": "Which generic parameter must be specified?", "body": "<p>Let's look at your declaration, trimmed a bit for clarity:</p>\n\n<pre><code>pub trait GeneticAlgorithm&lt;R, Ins, C&gt; {\n    fn call&lt;F&gt;(&amp;self, program: F);\n}\n</code></pre>\n\n<p>There are 4 generic types here: <code>R</code>, <code>Ins</code>, <code>C</code>, and <code>F</code>. Now, let's look at your implementation (again, trimmed):</p>\n\n<pre><code>impl&lt;R, Ins&gt; GeneticAlgorithm&lt;R, Ins, Vec&lt;Ins&gt;&gt; for Mep&lt;Ins&gt; {\n    fn call&lt;F&gt;(&amp;self, program: F);\n}\n</code></pre>\n\n<p>So, you have now provided a concrete value to <code>C</code> that depends on <code>Ins</code>. You still have 3 parameters that the user has to specify: <code>Ins</code>, <code>F</code>, and <code>R</code>.</p>\n\n<p><code>F</code> will be specified when the function is called, based on the closure type. <code>Ins</code> will be specified when the <code>Mep</code> structure is created.</p>\n\n<p>That leaves <code>R</code>. <em>Based on these declarations</em>, what is <code>R</code> supposed to be? It's impossible to tell. This appears to just be an error in your implementation; it's likely that you should have it somewhere. The other option is that you simply have a parameter that you <em>don't need</em>.</p>\n"}], "owner": {"reputation": 105, "user_id": 4147262, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh3.googleusercontent.com/-Lu5bthyKl5Y/AAAAAAAAAAI/AAAAAAAAABE/gQdIKjHlGz8/photo.jpg?sz=128", "display_name": "vadix", "link": "https://stackoverflow.com/users/4147262/vadix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 33569938, "answer_count": 1, "score": 1, "last_activity_date": 1446835765, "creation_date": 1446821996, "last_edit_date": 1446835765, "question_id": 33569621, "link": "https://stackoverflow.com/questions/33569621/which-generic-parameter-must-be-specified", "title": "Which generic parameter must be specified?", "body": "<p>I encountered an issue where I have this trait (some things omitted):</p>\n\n<pre><code>use rand::Rng;\npub trait GeneticAlgorithm&lt;R, Ins, C&gt; : Clone where R: Rng {\n    fn call&lt;F&gt;(&amp;self, program: F) where F: FnOnce(&amp;C);\n}\n</code></pre>\n\n<p>This struct implements the trait:</p>\n\n<pre><code>pub struct Mep&lt;Ins&gt; {\n    instructions: Vec&lt;Ins&gt;,\n    unit_mutate_size: usize,\n    crossover_points: usize,\n}\n\nimpl&lt;R, Ins&gt; GeneticAlgorithm&lt;R, Ins, Vec&lt;Ins&gt;&gt; for Mep&lt;Ins&gt; where R: Rng, Ins: Clone {\n    fn call&lt;F&gt;(&amp;self, program: F) where F: FnOnce(&amp;Vec&lt;Ins&gt;) {\n        program(&amp;self.instructions);\n    }\n}\n</code></pre>\n\n<p>In a test I attempt to run this:</p>\n\n<pre><code>let mut rng = Isaac64Rng::from_seed(&amp;[1, 2, 3, 4]);\nlet (a, b) = {\n    let mut clos = || Mep::new(3, 3, rng.gen_iter::&lt;u32&gt;().map(|x| x % 10).take(10));\n    (clos(), clos())\n};\nlet mut c = Mep::mate((&amp;a, &amp;b), &amp;mut rng);\nc.call(|x: &amp;Vec&lt;u32&gt;| panic!());\n</code></pre>\n\n<p>Rust claims that it cannot infer a type somewhere, but I am not sure how to specify the type of a closure if that is the issue, nor am I able to identify which specific generic parameter is causing the issue:</p>\n\n<pre><code>error: unable to infer enough type information about `_`; type annotations or generic parameter binding required [E0282]\nc.call(|x: &amp;Vec&lt;u32&gt;| panic!());\n</code></pre>\n\n<p>Which generic parameter is necessary to specify?</p>\n\n<p>If anyone would like to build the code itself, I am <a href=\"https://github.com/vadixidav/gpi\" rel=\"nofollow\">hosting it on GitHub</a>.</p>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446814842, "post_id": 33566434, "comment_id": 54912645, "body": "I&#39;m unfamiliar with the <code>sequence</code> function in Haskell; does this replace every usage of <code>sequence</code> that a user would want?"}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1446816059, "post_id": 33566434, "comment_id": 54913389, "body": "@Shepmaster, <a href=\"http://hackage.haskell.org/package/base-4.8.1.0/docs/Prelude.html#v:sequence\" rel=\"nofollow noreferrer\"><code>sequence</code></a> is generic over any monad, so <code>collect</code> isn&#39;t an automatic/guaranteed replacement due to Rust&#39;s lack of a generic monad, but I believe any type that could implement a hypothetical <code>Monad</code> trait can implement <code>FromIterator</code> in this way manually to ensure the trick works (e.g. <code>Option</code> does too)."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 2, "creation_date": 1446816212, "post_id": 33566434, "comment_id": 54913485, "body": "(Also, the lack of laziness in Rust means the precise semantics are somewhat different.)"}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 7, "last_activity_date": 1446811471, "creation_date": 1446811471, "answer_id": 33566434, "question_id": 33566286, "link": "https://stackoverflow.com/questions/33566286/does-rust-have-an-equivalent-to-haskells-sequence-function/33566434#33566434", "title": "Does Rust have an equivalent to Haskell&#39;s `sequence` function?", "body": "<p>You can use the <code>FromIterator</code> implementation of <code>Result</code> for this:</p>\n\n<pre><code>fn main() {\n    let v = (1..10)\n        .map( |n| {\n            if n % 4 == 0 {\n                Err(\"Too fourish!\")\n            }\n            else {\n                Ok(n)\n            }\n        }).collect::&lt;Result&lt;Vec&lt;_&gt;, _&gt;&gt;();\n    println!(\"{:?}\", v);\n\n    let v = (1..10)\n        .map( |n| {\n            if n % 4 == 4 { // impossible\n                Err(\"Too fourish!\")\n            }\n            else {\n                Ok(n)\n            }\n        }).collect::&lt;Result&lt;Vec&lt;_&gt;, _&gt;&gt;();\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>Err(\"Too fourish!\")\nOk([1, 2, 3, 4, 5, 6, 7, 8, 9])\n</code></pre>\n\n<p>More info: <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#implementations\" rel=\"noreferrer\">https://doc.rust-lang.org/std/result/enum.Result.html#implementations</a></p>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 563, "favorite_count": 1, "accepted_answer_id": 33566434, "answer_count": 1, "score": 5, "last_activity_date": 1446811471, "creation_date": 1446810991, "question_id": 33566286, "link": "https://stackoverflow.com/questions/33566286/does-rust-have-an-equivalent-to-haskells-sequence-function", "title": "Does Rust have an equivalent to Haskell&#39;s `sequence` function?", "body": "<p>I am mapping over <code>Vec</code> such that each item becomes a <code>Result</code>. If any element is an <code>Err</code> then I want to terminate early and produce an <code>Err</code>, otherwise I want to produce an <code>Ok</code> containing the <code>Vec&lt;i32&gt;</code>.</p>\n\n<pre><code>let v = (1..10)\n        .map( |n| {\n            if n % 4 == 0 {\n                Err(\"Too fourish!\")\n            }\n            else {\n                Ok(n)\n            }\n        }).collect::&lt;Vec&lt;_&gt;&gt;();\n\n\nprintln!(\"{:?}\", v);\n</code></pre>\n\n<p>In Haskell, I can use <code>sequence</code>. Is there an equivalent built-in Rust function?</p>\n"}, {"tags": ["rust", "mutability", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 2063, "user_id": 2865814, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/100001422536254/picture?type=large", "display_name": "T3 H40", "link": "https://stackoverflow.com/users/2865814/t3-h40"}, "edited": false, "score": 1, "creation_date": 1446798596, "post_id": 33562359, "comment_id": 54903094, "body": "What is the question here?"}, {"owner": {"reputation": 13, "user_id": 5532580, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6eae4ddbcdf60b062a4f382f417a2248?s=128&d=identicon&r=PG&f=1", "display_name": "Heheyizi", "link": "https://stackoverflow.com/users/5532580/heheyizi"}, "reply_to_user": {"reputation": 2063, "user_id": 2865814, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/100001422536254/picture?type=large", "display_name": "T3 H40", "link": "https://stackoverflow.com/users/2865814/t3-h40"}, "edited": false, "score": 0, "creation_date": 1446799222, "post_id": 33562359, "comment_id": 54903362, "body": "@T3H40 How to necessary to temporarily block the possibility of working with the object in <code>fn main()</code>, until you call the <code>.unbind()</code>?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1446799303, "post_id": 33562359, "comment_id": 54903418, "body": "it&#39;s impossible. The object is bound until you drop parent1: <a href=\"http://is.gd/8alczd\" rel=\"nofollow noreferrer\">is.gd/8alczd</a>"}, {"owner": {"reputation": 13, "user_id": 5532580, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6eae4ddbcdf60b062a4f382f417a2248?s=128&d=identicon&r=PG&f=1", "display_name": "Heheyizi", "link": "https://stackoverflow.com/users/5532580/heheyizi"}, "reply_to_user": {"reputation": 2063, "user_id": 2865814, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/100001422536254/picture?type=large", "display_name": "T3 H40", "link": "https://stackoverflow.com/users/2865814/t3-h40"}, "edited": false, "score": 0, "creation_date": 1446800708, "post_id": 33562359, "comment_id": 54904199, "body": "@T3H40 If the object is already binded to the other parent, you can not interact with it. As I started using crutches <code>&amp;mut</code>. <a href=\"http://is.gd/RD7DSz\" rel=\"nofollow noreferrer\">is.gd/RD7DSz</a>"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1446801495, "post_id": 33562359, "comment_id": 54904650, "body": "There&#39;s absolutely no way to get what you want at compile-time, since there&#39;s no way to specify that the <code>unbind</code> function frees up the borrow."}], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 2, "last_activity_date": 1446800151, "creation_date": 1446800151, "answer_id": 33562895, "question_id": 33562359, "link": "https://stackoverflow.com/questions/33562359/to-temporarily-hold-the-borrowed-object/33562895#33562895", "title": "To temporarily hold the borrowed object", "body": "<p>It's impossible for the borrow checker to prove this correct at compile-time. But you can use <code>RefCell</code> to make sure it works at runtime and panics if you do it wrong. Instead of storing a reference to the object in the Parent object, you can store a <code>RefMut</code> that allows you to modify the object. The <code>bind</code> function takes a reference to a <code>RefCell</code> and will panic if the object is already borrowed.</p>\n\n<pre><code>use std::cell::*;\n\nstruct Parent&lt;'a&gt; {\n    inner: Option&lt;RefMut&lt;'a, Object&gt;&gt;,\n}\nimpl&lt;'a&gt; Parent&lt;'a&gt; {\n    fn new() -&gt; Parent&lt;'a&gt; {\n        Parent {\n            inner: None,\n        }\n    }\n    fn bind(&amp;mut self, obj: &amp;'a RefCell&lt;Object&gt;) {\n        self.inner = Some(obj.borrow_mut());\n    }\n    fn unbind(&amp;mut self) {\n        self.inner = None;\n    }\n}\nstruct Object {\n    inner: u32,\n}\nfn main() {\n    let obj = RefCell::new(Object { inner: 0 });\n    let mut parent1 = Parent::new();\n    parent1.bind(&amp;obj);\n    parent1.unbind(); // comment this line out and you get a runtime panic\n    let mut parent2 = Parent::new();\n    parent2.bind(&amp;obj);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1446809392, "post_id": 33564535, "comment_id": 54909511, "body": "It&#39;s the other way around. &quot;Since you cannot access <code>parent1</code> after the scope is closed, the borrow checker knows that <code>parent1</code> cannot access <code>obj</code> anymore, so you can access <code>obj</code> again."}], "tags": [], "owner": {"reputation": 43, "user_id": 5501930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b82a147cf2f35f0f0dd83ae057427719?s=128&d=identicon&r=PG&f=1", "display_name": "Nikolai Hellwig", "link": "https://stackoverflow.com/users/5501930/nikolai-hellwig"}, "is_accepted": false, "score": 0, "last_activity_date": 1446805302, "creation_date": 1446805302, "answer_id": 33564535, "question_id": 33562359, "link": "https://stackoverflow.com/questions/33562359/to-temporarily-hold-the-borrowed-object/33564535#33564535", "title": "To temporarily hold the borrowed object", "body": "<p>You could also scope the usage of <code>parent1</code>. Since once you bind <code>obj</code> to <code>parent2</code>, it cannot be used by <code>parent1</code> anymore:</p>\n\n<pre><code>let mut obj = Object { inner: 0 };\n{\n    let mut parent1 = Parent::new();\n    parent1.bind(&amp;mut obj);\n    parent1.unbind();\n}\nlet mut parent2 = Parent::new();\nparent2.bind(&amp;mut obj);\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 5532580, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6eae4ddbcdf60b062a4f382f417a2248?s=128&d=identicon&r=PG&f=1", "display_name": "Heheyizi", "link": "https://stackoverflow.com/users/5532580/heheyizi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 33562895, "answer_count": 2, "score": 1, "last_activity_date": 1446805302, "creation_date": 1446798225, "question_id": 33562359, "link": "https://stackoverflow.com/questions/33562359/to-temporarily-hold-the-borrowed-object", "title": "To temporarily hold the borrowed object", "body": "<pre><code>struct Parent&lt;'a&gt; {\n    inner: Option&lt;&amp;'a mut Object&gt;\n}\nimpl&lt;'a&gt; Parent&lt;'a&gt; {\n    fn new() -&gt; Parent&lt;'a&gt; {\n        Parent {\n            inner: None,\n        }\n    }\n    fn bind(&amp;mut self, obj: &amp;'a mut Object) {\n        self.inner = Some(obj);\n    }\n    fn unbind(&amp;mut self) {\n        self.inner = None;\n    }\n}\nstruct Object {\n    inner: u32,\n}\nfn main() {\n    let mut obj = Object { inner: 0 };\n    let mut parent1 = Parent::new();\n    let mut parent2 = Parent::new();\n    parent1.bind(&amp;mut obj);\n    parent1.unbind();\n    // parent2.bind(&amp;mut obj);\n    // ^ error\n\n}\n</code></pre>\n\n<p>Struct <code>Parent</code> field must store the <code>Option</code>:</p>\n\n<pre><code>struct Parent {\n    inner: Option&lt;/*  magic  */&gt;\n}\n</code></pre>\n\n<p>It is necessary to temporarily block the possibility of working with the object in <code>fn main()</code>, until you call the <code>.unbind()</code></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1446781597, "creation_date": 1446781597, "answer_id": 33559135, "question_id": 33557375, "link": "https://stackoverflow.com/questions/33557375/how-do-i-prevent-tcpstream-from-blocking-on-a-read/33559135#33559135", "title": "How do I prevent TcpStream from blocking on a read?", "body": "<p>You want to use <a href=\"http://doc.rust-lang.org/std/net/struct.TcpStream.html#method.set_read_timeout\" rel=\"nofollow\"><code>TcpStream::set_read_timeout</code></a> and then check for that specific type of error:</p>\n\n<pre><code>use std::io::{self, Read};\nuse std::net::{TcpListener, TcpStream};\nuse std::time::Duration;\n\nfn main() {\n    let listener = TcpListener::bind(\"localhost:1234\").unwrap();\n    for stream in listener.incoming() {\n        let s = stream.unwrap();\n        handle_stream(s);\n    }\n\n    fn handle_stream(mut stream: TcpStream) -&gt; () {\n        let mut buf = [0];\n        stream.set_read_timeout(Some(Duration::from_millis(100))).unwrap();\n        loop {\n            let _ = match stream.read(&amp;mut buf) {\n                Err(e) =&gt; {\n                    match e.kind() {\n                        io::ErrorKind::WouldBlock =&gt; {\n                            println!(\"would have blocked\");\n                            break;\n                        },\n                        _ =&gt; panic!(\"Got an error: {}\", e),\n                    }\n                },\n                Ok(m) =&gt; {\n                    println!(\"Received {:?}, {:?}\", m, buf);\n                    if m == 0 {\n                        // doesn't reach here.\n                        break;\n                    }\n                    m\n                },\n            };\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2836, "user_id": 225291, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/d9511b3f1579c63dcfa680a8c945592b?s=128&d=identicon&r=PG", "display_name": "banyan", "link": "https://stackoverflow.com/users/225291/banyan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1206, "favorite_count": 0, "accepted_answer_id": 33559135, "answer_count": 1, "score": 1, "last_activity_date": 1446781597, "creation_date": 1446769596, "last_edit_date": 1446781521, "question_id": 33557375, "link": "https://stackoverflow.com/questions/33557375/how-do-i-prevent-tcpstream-from-blocking-on-a-read", "title": "How do I prevent TcpStream from blocking on a read?", "body": "<pre><code>let listener = TcpListener::bind(\"localhost:1234\").unwrap();\nfor stream in listener.incoming() {\n    let s = stream.unwrap();\n    handle_stream(s);\n}   \n\nfn handle_stream(mut stream: TcpStream) -&gt; () {\n    let mut buf = [0];\n    loop {\n        let _ = match stream.read(&amp;mut buf) {\n            Err(e) =&gt; panic!(\"Got an error: {}\", e),\n            Ok(m) =&gt; {\n                println!(\"Received {:?}, {:?}\", m, buf);\n                if m == 0 {\n                     // doesn't reach here.\n                     break;\n                }\n                m\n            },\n        };\n    }\n}\n</code></pre>\n\n<p>I then connect to the server by running <code>curl http://localhost:1234</code>.</p>\n\n<p>I expect <code>Ok(0)</code> would be returned, but it doesn't reach that statement and it hangs instead. If that's an EOF, how can I treat in this case?</p>\n"}, {"tags": ["json", "file", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446761831, "post_id": 33555327, "comment_id": 54891473, "body": "What are you asking? Are you asking why it&#39;s slower than Python (&quot;<i>to outperform python</i>&quot;)? Are you asking why you are getting an error? <i>SyntaxError(&quot;unescaped control character in string&quot;, 759, 55)</i> \u2014 Have you looked at the file at that position to see why you have a control character? <i>it is not the data</i> \u2014 it&#39;s more than possible that one of Rust or Python is more strict about the JSON standard."}, {"owner": {"reputation": 718, "user_id": 494526, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/05a5c779357effe368da837549e4ea5d?s=128&d=identicon&r=PG", "display_name": "rebeling", "link": "https://stackoverflow.com/users/494526/rebeling"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446764806, "post_id": 33555327, "comment_id": 54892722, "body": "Sorry, was not as obvious as thought and added the question to the end now. Thanks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446776699, "post_id": 33555327, "comment_id": 54896181, "body": "The problem is that one of your input files contains invalid JSON. You need to figure out which file (print the file name?) and then look at line 759, column 55 to figure out what it is. That&#39;s what the error message is telling you."}], "answers": [{"tags": [], "owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "is_accepted": false, "score": 1, "last_activity_date": 1456572976, "creation_date": 1456572976, "answer_id": 35669214, "question_id": 33555327, "link": "https://stackoverflow.com/questions/33555327/read-json-file-in-and-write-without-indentation/35669214#35669214", "title": "Read json file in and write without indentation", "body": "<p>Wild guess: if the same input file can be parsed by other JSON parsers (e.g. in Python), you may be hitting a rustc-serialize bug that was fixed in <a href=\"https://github.com/rust-lang-nursery/rustc-serialize/pull/142\" rel=\"nofollow\">https://github.com/rust-lang-nursery/rustc-serialize/pull/142</a>. Try to update?</p>\n"}], "owner": {"reputation": 718, "user_id": 494526, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/05a5c779357effe368da837549e4ea5d?s=128&d=identicon&r=PG", "display_name": "rebeling", "link": "https://stackoverflow.com/users/494526/rebeling"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 459, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1456572976, "creation_date": 1446759671, "last_edit_date": 1446764910, "question_id": 33555327, "link": "https://stackoverflow.com/questions/33555327/read-json-file-in-and-write-without-indentation", "title": "Read json file in and write without indentation", "body": "<p>The following code take a folder of json files (saved with indentation) open it, get content and serialize to json and write to file a new file.\nSame code task in python works, so it is not the data. But the rust version you see in here:</p>\n\n<pre><code>extern crate rustc_serialize;\nuse rustc_serialize::json;\nuse std::io::Read;\nuse std::fs::read_dir;\nuse std::fs::File;\nuse std::io::Write;\nuse std::io;\nuse std::str;\n\n\nfn write_data(filepath: &amp;str, data: json::Json) -&gt; io::Result&lt;()&gt; {\n\n    let mut ofile = try!(File::create(filepath));\n    let encoded: String = json::encode(&amp;data).unwrap();\n    try!(ofile.write(encoded.as_bytes()));\n    Ok(())\n}\n\n\nfn main() {\n\n    let root = \"/Users/bling/github/data/\".to_string();\n    let folder_path = root + &amp;\"texts\";\n    let paths = read_dir(folder_path).unwrap();\n\n    for path in paths {\n        let input_filename = format!(\"{}\", path.unwrap().path().display());\n        let output_filename = str::replace(&amp;input_filename, \"texts\", \"texts2\");\n\n        let mut data = String::new();\n        let mut f = File::open(input_filename).unwrap();\n        f.read_to_string(&amp;mut data).unwrap();\n        let json = json::Json::from_str(&amp;data).unwrap();\n\n        write_data(&amp;output_filename, json).unwrap();\n    }\n}\n</code></pre>\n\n<p>Do you have spot an Error in my code already or did I get some language concepts wrong. Is the rustc-serialize cargo wrongly used. At the end it does not work as expected - to outperform python. </p>\n\n<pre><code>\u00b1 % cargo run --release --verbose                                                                                                                                            \n       Fresh rustc-serialize v0.3.16\n       Fresh fileprocessing v0.1.0 (file:///Users/bling/github/rust/fileprocessing)\n     Running `target/release/fileprocessing`\nthread '&lt;main&gt;' panicked at 'called `Result::unwrap()` on an `Err` value: SyntaxError(\"unescaped control character in string\", 759, 55)', ../src/libcore/result.rs:736\nProcess didn't exit successfully: `target/release/fileprocessing` (exit code: 101)\n</code></pre>\n\n<p>Why does it throw an error is my serializing json done wrong?<br>\nCan I get the object it fails on? What about encoding? </p>\n\n<p>...is the code right or is there something obvious wrong with some more experience?</p>\n"}, {"tags": ["time", "command-line", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 770, "user_id": 4917486, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh5.googleusercontent.com/-DLwv2CDyEBE/AAAAAAAAAAI/AAAAAAAAC7c/CxTPiCPEePk/photo.jpg?sz=128", "display_name": "Michael Eden", "link": "https://stackoverflow.com/users/4917486/michael-eden"}, "is_accepted": true, "score": 5, "last_activity_date": 1446761689, "last_edit_date": 1446761689, "creation_date": 1446757830, "answer_id": 33554836, "question_id": 33554670, "link": "https://stackoverflow.com/questions/33554670/getting-execution-time-with-cargo/33554836#33554836", "title": "Getting execution time with Cargo", "body": "<p>You could use <code>time</code>, it's a command line utility.</p>\n\n<pre><code>$ time ./target/debug/hello_world\n./target/debug/hello_world  3.02s user 0.18s system 34% cpu 9.177 total\n</code></pre>\n\n<p>That would be the simplest way to do it. I don't think you can pass a flag to <code>cargo</code> directly to time the compilation step.</p>\n\n<p>There is something similar: <code>cargo bench</code> which allows you to write benchmarks for your program. This gives you very specific reports about the speed of certain parts of your program.</p>\n\n<p><a href=\"https://doc.rust-lang.org/book/benchmark-tests.html\" rel=\"nofollow\">The docs have more reading</a>.</p>\n\n<pre><code>$ cargo bench\nrunning 1 test\ntest bench_xor_1000_ints ... bench:       131 ns/iter (+/- 3)\n</code></pre>\n\n<p>Although this is only available on nightly Rust.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1446757849, "creation_date": 1446757849, "answer_id": 33554841, "question_id": 33554670, "link": "https://stackoverflow.com/questions/33554670/getting-execution-time-with-cargo/33554841#33554841", "title": "Getting execution time with Cargo", "body": "<p>Cargo does not have a built in way to time things. You will want to use your operating systems mechanism. For example, on Linux or OS X, you can probably use <code>time</code>:</p>\n\n<pre><code>time ./target/debug/hello_world\n</code></pre>\n\n<p>Of special note is that you have a <strong>debug</strong> build. This <strong>has no optimizations</strong> and should not be used for profiling. Instead, you should build your code in release mode:</p>\n\n<pre><code>cargo build --release\n</code></pre>\n\n<p>and then execute the program in the <code>target/release</code> directory.</p>\n\n<p>Also, you probably do not want to include the time for Cargo itself. That is, do <strong>not</strong> do either of these:</p>\n\n<pre><code>time cargo run\ntime cargo run --release\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 730, "user_id": 3283003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/969f644f75512332a20f0ea1ff6e64d0?s=128&d=identicon&r=PG&f=1", "display_name": "Squirrel", "link": "https://stackoverflow.com/users/3283003/squirrel"}, "is_accepted": false, "score": 1, "last_activity_date": 1601844897, "creation_date": 1601844897, "answer_id": 64199807, "question_id": 33554670, "link": "https://stackoverflow.com/questions/33554670/getting-execution-time-with-cargo/64199807#64199807", "title": "Getting execution time with Cargo", "body": "<p>It's not baked into cargo but hyperfine is written in rust and is an alternative to time:</p>\n<pre><code>cargo install hyperfine\nhyperfine ./target/debug/hello_world\n</code></pre>\n"}], "owner": {"reputation": 718, "user_id": 494526, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/05a5c779357effe368da837549e4ea5d?s=128&d=identicon&r=PG", "display_name": "rebeling", "link": "https://stackoverflow.com/users/494526/rebeling"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1425, "favorite_count": 0, "accepted_answer_id": 33554836, "answer_count": 3, "score": 0, "last_activity_date": 1601844897, "creation_date": 1446757166, "last_edit_date": 1446758120, "question_id": 33554670, "link": "https://stackoverflow.com/questions/33554670/getting-execution-time-with-cargo", "title": "Getting execution time with Cargo", "body": "<p>I am pretty new to Rust and I want to time the execution of my program. I searched online, but found nothing so far. After running <code>cargo build</code>, my code is executed like this:</p>\n\n<pre><code>bling@bling ~/github/rust/hello_world [master *]\n\u00b1 % ./target/debug/hello_world\n</code></pre>\n\n<p>Does Cargo have a built in way to time the execution or do I need to use the command line?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 43, "user_id": 3099695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf6893008d2a0d438ff252534563ee45?s=128&d=identicon&r=PG&f=1", "display_name": "user3099695", "link": "https://stackoverflow.com/users/3099695/user3099695"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1446734414, "post_id": 33546113, "comment_id": 54874424, "body": "@Shepmaster thank you"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1446797137, "post_id": 33546113, "comment_id": 54902439, "body": "It&#39;s an interesting question but unfortunately the title is close to useless... while multiple scopes do matter, the important issue here is the ownership transfer and its lack of &quot;back-transfer&quot;... but I see no way in wording this such that the next person wondering about this may have a chance to find this question :/"}], "answers": [{"comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1446752558, "post_id": 33546384, "comment_id": 54886191, "body": "You say &quot;most certainly not such a situation&quot;, but IMO it&#39;s not so clear cut. For example, <code>let k: &amp;mut _ = n;</code> reborrows. I wouldn&#39;t be shocked if a future compiler change made this into a reborrow, too."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1446798574, "post_id": 33546384, "comment_id": 54903085, "body": "Hmm, indeed you&#39;re right. I forgot about this bit, thanks!"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 8, "last_activity_date": 1446798805, "last_edit_date": 1446798805, "creation_date": 1446731639, "answer_id": 33546384, "question_id": 33546113, "link": "https://stackoverflow.com/questions/33546113/what-happens-when-you-use-multiple-nested-scopes/33546384#33546384", "title": "What happens when you use multiple nested scopes?", "body": "<blockquote>\n  <p>But isn't the variable k has ends its scope yet? Why didn't it give the ownership back to variable n?</p>\n</blockquote>\n\n<p>Yes, <code>k</code>'s scope has ended, but why do you think that it should give ownership back?</p>\n\n<p>In Rust nothing can \"give ownership back\". If a type does not implement <code>Copy</code> (and <code>&amp;mut</code> references absolutely do not), then its values can only be moved. Move implies ownership transfer, so it is up to the receiver of the ownership to decide what to do with the value. So, when <code>k</code> goes out of scope, the pointer is effectively \"destroyed\" (the pointer itself, not the value). Since it was moved out of <code>n</code>, the binding effectively became uninitialized, so you get this error.</p>\n\n<p><code>&amp;mut</code> references <em>are</em> unique in that, while they are not copyable and therefore can only be moved, sometimes they are automatically <em>reborrowed</em>, that is, the compiler automatically inserts <code>&amp;mut *p</code> for you. I don't remember exact rules when automatic reborrowing is applied (as far as I remember, this happens when mutable reference is passed to functions and probably somewhere else), but this is not such situation. To make your code work you'd want to reborrow the value explicitly:</p>\n\n<pre><code>fn main() {\n    let mut m = 12;\n    {\n        let n = &amp;mut m;\n        *n = 13;\n        {\n            let k = &amp;mut *n;  // explicit referencing of the dereferenced value\n            *k = 20;\n            println!(\"{}\", k);\n        }\n        println!(\"{}\", n);\n     }\n     println!(\"{}\", m);\n}\n</code></pre>\n\n<p>This way the compiler knows that <code>n</code> is not moved into <code>k</code> and allows you to use it after <code>k</code>'s scope ends.</p>\n\n<p>Just as a side note, the following (thanks Veedrac for reminding) also works, again, due to automatic reborrowing:</p>\n\n<pre><code>fn main() {\n    let mut m = 12;\n    {\n        let n = &amp;mut m;\n        *n = 13;\n        {\n            let k: &amp;mut _ = n;  // automatic reborrowing because of type annotation\n            *k = 20;\n            println!(\"{}\", k);\n        }\n        println!(\"{}\", n);\n     }\n     println!(\"{}\", m);\n}\n</code></pre>\n\n<p>It appears that if the compiler knows that the target type is a mutable reference, it will reborrow the original reference, otherwise, that is, if the target type is unknown (e.g. in generic context or when assigning to a binding without explicit type annotation), the reference is moved, not reborrowed. So yes, behavior around mutable references may be confusing somewhat.</p>\n"}], "owner": {"reputation": 43, "user_id": 3099695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf6893008d2a0d438ff252534563ee45?s=128&d=identicon&r=PG&f=1", "display_name": "user3099695", "link": "https://stackoverflow.com/users/3099695/user3099695"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 1, "accepted_answer_id": 33546384, "answer_count": 1, "score": 4, "last_activity_date": 1446798805, "creation_date": 1446730915, "last_edit_date": 1446733333, "question_id": 33546113, "link": "https://stackoverflow.com/questions/33546113/what-happens-when-you-use-multiple-nested-scopes", "title": "What happens when you use multiple nested scopes?", "body": "<pre><code>fn main() {\n    let mut m = 12;\n    {\n        let n = &amp;mut m;\n        *n = 13;\n        {\n            let k = n;\n            *k = 20;\n            println!(\"{}\", k);\n        } // k's scope ends here, right?\n        println!(\"{}\", n);\n    }\n    println!(\"{}\", m);\n}\n</code></pre>\n\n<p>Here is what I got when I ran the code:</p>\n\n<pre><code>src/main.rs:11:18: 11:19 error: use of moved value: `n` [E0382]\nsrc/main.rs:11      println!(\"{}\", n);\n                               ^\n</code></pre>\n\n<p>But hasn't the variable <code>k</code> ended its scope yet? Why wasn't the ownership given back to variable <code>n</code>?</p>\n"}, {"tags": ["iterator", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 4863, "user_id": 2482582, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/yQkZE.jpg?s=128&g=1", "display_name": "Moebius", "link": "https://stackoverflow.com/users/2482582/moebius"}, "edited": false, "score": 2, "creation_date": 1455978853, "post_id": 33542412, "comment_id": 58738723, "body": "Lifetime is so damn hard ! Congratulation for understanding it and explain it."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 14, "last_activity_date": 1492026663, "last_edit_date": 1492026663, "creation_date": 1446719927, "answer_id": 33542412, "question_id": 33541492, "link": "https://stackoverflow.com/questions/33541492/returning-iterator-of-a-vec-in-a-refcell/33542412#33542412", "title": "Returning iterator of a Vec in a RefCell", "body": "<p>You cannot do this because it would allow you to circumvent runtime checks for uniqueness violations.</p>\n\n<p><code>RefCell</code> provides you a way to \"defer\" mutability exclusiveness checks to runtime, in exchange allowing mutation of the data it holds inside through shared references. This is done using RAII guards: you can obtain a guard object using a shared reference to <code>RefCell</code>, and then access the data inside <code>RefCell</code> using this guard object:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&amp;'a RefCell&lt;T&gt;        -&gt; Ref&lt;'a, T&gt; (with borrow) or RefMut&lt;'a, T&gt; (with borrow_mut)\n&amp;'b Ref&lt;'a, T&gt;        -&gt; &amp;'b T\n&amp;'b mut RefMut&lt;'a, T&gt; -&gt; &amp;'b mut T\n</code></pre>\n\n<p>The key point here is that <code>'b</code> is different from <code>'a</code>, which allows one to obtain <code>&amp;mut T</code> references without having a <code>&amp;mut</code> reference to the <code>RefCell</code>. However, these references will be linked to the guard instead and can't live longer than the guard. This is done intentionally: <code>Ref</code> and <code>RefMut</code> destructors toggle various flags inside their <code>RefCell</code> to force mutability checks and to force <code>borrow()</code> and <code>borrow_mut()</code> panic if these checks fail.</p>\n\n<p>The simplest thing you can do is to return a wrapper around <code>Ref</code>, a reference to which would implement <code>IntoIterator</code>:</p>\n\n<pre><code>use std::cell::Ref;\n\nstruct VecRefWrapper&lt;'a, T: 'a&gt; {\n    r: Ref&lt;'a, Vec&lt;T&gt;&gt;\n}\n\nimpl&lt;'a, 'b: 'a, T: 'a&gt; IntoIterator for &amp;'b VecRefWrapper&lt;'a, T&gt; {\n    type IntoIter = Iter&lt;'a, T&gt;;\n    type Item = &amp;'a T;\n\n    fn into_iter(self) -&gt; Iter&lt;'a, T&gt; {\n        self.r.iter()\n    }\n}\n</code></pre>\n\n<p>(try it <a href=\"https://play.rust-lang.org/?gist=fd69c4c3ba5e19fa10d4&amp;version=stable\" rel=\"noreferrer\">on playground</a>)</p>\n\n<p>You can't implement <code>IntoIterator</code> for <code>VecRefWrapper</code> directly because then the internal <code>Ref</code> will be consumed by <code>into_iter()</code>, giving you essentially the same situation you're in now.</p>\n"}], "owner": {"reputation": 1300, "user_id": 826797, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/ae5bf6a2566204b386bf2898443be58d?s=128&d=identicon&r=PG", "display_name": "NobbZ", "link": "https://stackoverflow.com/users/826797/nobbz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1420, "favorite_count": 2, "accepted_answer_id": 33542412, "answer_count": 1, "score": 10, "last_activity_date": 1492026663, "creation_date": 1446717506, "last_edit_date": 1492026545, "question_id": 33541492, "link": "https://stackoverflow.com/questions/33541492/returning-iterator-of-a-vec-in-a-refcell", "title": "Returning iterator of a Vec in a RefCell", "body": "<p>Given the following <code>struct</code> and <code>impl</code>:</p>\n\n<pre><code>use std::slice::Iter;\nuse std::cell::RefCell;\n\nstruct Foo {\n    bar: RefCell&lt;Vec&lt;u32&gt;&gt;,\n}\n\nimpl Foo {\n    pub fn iter(&amp;self) -&gt; Iter&lt;u32&gt; {\n        self.bar.borrow().iter()\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I get an error message about a lifetime issue:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: borrowed value does not live long enough\n  --&gt; src/main.rs:9:9\n   |\n9  |         self.bar.borrow().iter()\n   |         ^^^^^^^^^^^^^^^^^ does not live long enough\n10 |     }\n   |     - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the body at 8:36...\n  --&gt; src/main.rs:8:37\n   |\n8  |       pub fn iter(&amp;self) -&gt; Iter&lt;u32&gt; {\n   |  _____________________________________^ starting here...\n9  | |         self.bar.borrow().iter()\n10 | |     }\n   | |_____^ ...ending here\n</code></pre>\n\n<p>How am I able to return and use <code>bar</code>s iterator?</p>\n"}]