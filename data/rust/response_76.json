[{"tags": ["regex", "rust", "regex-lookarounds"], "comments": [{"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 1, "creation_date": 1466612072, "post_id": 37973332, "comment_id": 63392903, "body": "Why not use <code>[0-9]+-?</code>? The best method to emulate a lookbehind (when you need it) is using optional capturing groups."}, {"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 2, "creation_date": 1466612372, "post_id": 37973332, "comment_id": 63393099, "body": "Could you please think of a more appropriate example?"}, {"owner": {"reputation": 10027, "user_id": 385907, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/5e249e45a1849e387e324787d08ef738?s=128&d=identicon&r=PG", "display_name": "barlop", "link": "https://stackoverflow.com/users/385907/barlop"}, "reply_to_user": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1466612400, "post_id": 37973332, "comment_id": 63393116, "body": "@WiktorStribi\u017cew how does optional capturing groups emulate a lookbehind?  the idea of a lookbehind is see if it&#39;s there and if it is then don&#39;t match the letters themselves just the position.  Surely an optional capture group would match the letters/characters when they exist?"}, {"owner": {"reputation": 10027, "user_id": 385907, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/5e249e45a1849e387e324787d08ef738?s=128&d=identicon&r=PG", "display_name": "barlop", "link": "https://stackoverflow.com/users/385907/barlop"}, "edited": false, "score": 1, "creation_date": 1466612494, "post_id": 37973332, "comment_id": 63393170, "body": "I suppose you could emulate a lookbehind, by Matching but not capturing."}, {"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1466612509, "post_id": 37973332, "comment_id": 63393178, "body": "Yes, but then you can check if the group matched or not. If it matched, there is the text. If not, there is no such text. Sure, there are limitations and it is more like a <code>\\K</code> workaround."}, {"owner": {"reputation": 10027, "user_id": 385907, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/5e249e45a1849e387e324787d08ef738?s=128&d=identicon&r=PG", "display_name": "barlop", "link": "https://stackoverflow.com/users/385907/barlop"}, "reply_to_user": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1466612559, "post_id": 37973332, "comment_id": 63393208, "body": "@WiktorStribi\u017cew you write &quot;there is the text&quot;. &lt;-- He or a person using a lookbehind, Does Not Want The Text <i>ever</i> Hence The LookBehind."}, {"owner": {"reputation": 10027, "user_id": 385907, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/5e249e45a1849e387e324787d08ef738?s=128&d=identicon&r=PG", "display_name": "barlop", "link": "https://stackoverflow.com/users/385907/barlop"}, "reply_to_user": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1466612599, "post_id": 37973332, "comment_id": 63393224, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/115331/discussion-between-barlop-and-wiktor-stribizew\">continue this discussion in chat</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466618888, "post_id": 37973332, "comment_id": 63396923, "body": "<i>iff each one follows a string like &quot;Fish&quot;</i> \u2014 perhaps you can describe what defines &quot;like Fish&quot;? Maybe add something to the input string that <b>shouldn&#39;t</b> be matched but would be matched by <code>[0-9]+-?</code>. Right now, it seems like <code>[A-Z][a-z]+([0-9]+-?)</code> and grabbing the grouped expression would work."}, {"owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466619119, "post_id": 37973332, "comment_id": 63397073, "body": "@Shepmaster I was actively trying to ask a question more general than a specific regex pattern issue, since I wanted to know what to do about this in Rust in general, not just for the particular application of a lookbehind I ran into. I put the (weak) regex example in only because the question form was urging me to do so."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1466619295, "post_id": 37973332, "comment_id": 63397165, "body": "And I think a general question is fine, but they are usually driven by concrete examples. So far, it appears that the &quot;real answer&quot; to your question is &quot;Don&#39;t emulate this behavior because you don&#39;t need it&quot;. Presumably that&#39;s not your ideal end state. The question form encourages you to do so <i>because it&#39;s useful</i> and would have prevented you from having to deal with most of these comments ^^."}], "answers": [{"tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": false, "score": 12, "last_activity_date": 1550756814, "last_edit_date": 1550756814, "creation_date": 1466613580, "answer_id": 37973864, "question_id": 37973332, "link": "https://stackoverflow.com/questions/37973332/whats-the-most-sensible-way-to-emulate-lookbehind-behavior-in-rust-regex/37973864#37973864", "title": "What&#39;s the most sensible way to emulate lookbehind behavior in Rust regex?", "body": "<p>Without a motivating example, it's hard to usefully answer your question in a general way. In many cases, you can substitute lookaround operators with two regexes---one to search for candidates and another to produce the actual match you're interested in. However, this approach isn't always feasible.</p>\n\n<p>If you're truly stuck, then you're only option is to use a regex library that supports these features. Rust has bindings to a couple of them:</p>\n\n<ul>\n<li><a href=\"https://crates.io/crates/pcre\" rel=\"nofollow noreferrer\">PCRE</a></li>\n<li><a href=\"https://crates.io/crates/pcre2\" rel=\"nofollow noreferrer\">PCRE2</a></li>\n<li><a href=\"https://crates.io/crates/onig\" rel=\"nofollow noreferrer\">Oniguruma</a></li>\n</ul>\n\n<p>There is also a more experimental library, <a href=\"https://github.com/fancy-regex/fancy-regex\" rel=\"nofollow noreferrer\">fancy-regex</a>, which is built on top of the <code>regex</code> crate.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468262671, "post_id": 38273752, "comment_id": 64044488, "body": "I&#39;m not usually an advocate for commenting when you downvote, but I&#39;m not sure why this answer is &quot;not useful&quot; in someone&#39;s opinion. If I knew advanced regex concepts like lookbehind better, I&#39;d weigh in with my own voting. ^_^"}, {"owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1468263145, "post_id": 38273752, "comment_id": 64044726, "body": "I have a gut feeling that this approach is A Bad Idea but I too want to know why ;)"}, {"owner": {"reputation": 21514, "user_id": 211627, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "JDB still remembers Monica", "link": "https://stackoverflow.com/users/211627/jdb-still-remembers-monica"}, "edited": false, "score": 0, "creation_date": 1513021299, "post_id": 38273752, "comment_id": 82481621, "body": "Presumably because someone felt that this was not &quot;<i>the <b>most</b> sensible way to emulate lookbehind behavior in Rust regex</i>&quot;"}], "tags": [], "owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "is_accepted": true, "score": 1, "last_activity_date": 1468262467, "last_edit_date": 1495542288, "creation_date": 1468004715, "answer_id": 38273752, "question_id": 37973332, "link": "https://stackoverflow.com/questions/37973332/whats-the-most-sensible-way-to-emulate-lookbehind-behavior-in-rust-regex/38273752#38273752", "title": "What&#39;s the most sensible way to emulate lookbehind behavior in Rust regex?", "body": "<p>If you have a regex application where you have a known consistent pattern that you want to use as lookbehind, another workaround is to use <a href=\"https://doc.rust-lang.org/regex/regex/struct.RegexSplits.html\" rel=\"nofollow noreferrer\"><code>.splits()</code></a> with the lookbehind-matching pattern as the argument (similar to the idea mentioned in <a href=\"https://stackoverflow.com/a/37973864/2023432\">the other answer</a>). That will at least give you strings expressed by their adjacency to the match you want to lookbehind.</p>\n\n<p>I don't know about performance guarantees regex-wise but this at least means that you can do a lookbehind-free regex match on the split result either N times (for N splits), or once on the concatenated result as needed.</p>\n"}], "owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2597, "favorite_count": 1, "accepted_answer_id": 38273752, "answer_count": 2, "score": 11, "last_activity_date": 1550756814, "creation_date": 1466611997, "last_edit_date": 1466617440, "question_id": 37973332, "link": "https://stackoverflow.com/questions/37973332/whats-the-most-sensible-way-to-emulate-lookbehind-behavior-in-rust-regex", "title": "What&#39;s the most sensible way to emulate lookbehind behavior in Rust regex?", "body": "<p>The Rust <a href=\"https://doc.rust-lang.org/regex/regex/index.html\" rel=\"noreferrer\">regex crate</a> states:</p>\n\n<blockquote>\n  <p>This crate provides a native implementation of regular expressions that is heavily based on RE2 both in syntax and in implementation. Notably, backreferences and arbitrary lookahead/lookbehind assertions are not provided.</p>\n</blockquote>\n\n<p>As of this writing, \"rust regex lookbehind\" comes back with no results from DuckDuckGo.</p>\n\n<p>I've never had to work around this before, but I can think of two approaches:</p>\n\n<h2>Approach 1 (forward)</h2>\n\n<ol>\n<li>Iterate over <code>.captures()</code> for the pattern I want to use as lookbehind.</li>\n<li>Match the thing I actually wanted to match between captures. (forward)</li>\n</ol>\n\n<h2>Approach 2 (reverse)</h2>\n\n<ol>\n<li>Match the pattern I really want to match.</li>\n<li>For each match, look for the lookbehind pattern until the end byte of a previous capture or the beginning of the string.</li>\n</ol>\n\n<p>Not only does this seem like a huge pain, it also seems like a lot of edge cases are going to trip me up. Is there a better way to go about this?</p>\n\n<h2>Example</h2>\n\n<p>Given a string like:</p>\n\n<p><code>\"Fish33-Tiger2Hyena4-\"</code></p>\n\n<p>I want to extract <code>[\"33-\", \"2\", \"4-\"]</code> iff each one follows a string like <code>\"Fish\"</code>.</p>\n"}, {"tags": ["http", "asynchronous", "rust"], "comments": [{"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466615779, "post_id": 37973281, "comment_id": 63395127, "body": "Funny, but I need some real-life approach..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1466615912, "post_id": 37973281, "comment_id": 63395198, "body": "My point is that you seem to either be asking for someone to write code for you (which seems overly broad), or to tell you about an existing library (which is off-topic as shown on the <a href=\"https://stackoverflow.com/help/on-topic\">help center</a>). Your question doesn&#39;t seem to indicate why one of the existing Rust server libraries doesn&#39;t meet your needs \u2014 why must it be asynchronous? Why is a threaded server inappropriate?"}, {"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 3, "creation_date": 1466616642, "post_id": 37973281, "comment_id": 63395642, "body": "Hyper has an asynchronous server as of 0.9.4 too."}, {"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1471285703, "post_id": 37973281, "comment_id": 65276118, "body": "You probably just want to use Iron (or other Rust http server library): <a href=\"https://github.com/iron/iron\" rel=\"nofollow noreferrer\">github.com/iron/iron</a> . See the README.md example."}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 231, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1466614876, "creation_date": 1466611852, "last_edit_date": 1466614876, "question_id": 37973281, "link": "https://stackoverflow.com/questions/37973281/is-it-possible-to-implement-an-asynchronous-http-server-in-rust", "title": "Is it possible to implement an asynchronous HTTP server in Rust?", "body": "<p>Is it possible to implement an async HTTP server with Rust in NodeJS async style:</p>\n\n<pre><code>server.on('/url, function(req, resp){\n    // call resp.end() if you need\n});\n</code></pre>\n\n<p>I also need to be able to implement hanging GET, i.e. when I call <code>resp.end</code> not immediately, but later, on some other event. I tried http-rotor but it panics if the request is not finalized.</p>\n"}, {"tags": ["xml", "xml-parsing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 462, "user_id": 3191035, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sqUZV.jpg?s=128&g=1", "display_name": "Frederick Ollinger", "link": "https://stackoverflow.com/users/3191035/frederick-ollinger"}, "edited": false, "score": 1, "creation_date": 1534180979, "post_id": 37972585, "comment_id": 90609442, "body": "I had to add this to Cargo.toml, instead:  serde-xml-rs = &quot;0.2.1&quot;"}, {"owner": {"reputation": 3502, "user_id": 118875, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/2yCMQ.png?s=128&g=1", "display_name": "pndc", "link": "https://stackoverflow.com/users/118875/pndc"}, "edited": false, "score": 2, "creation_date": 1597066069, "post_id": 37972585, "comment_id": 112003999, "body": "The explanatory text for parsing refers to <code>serde_xml::from_str</code> whereas the code uses <code>serde_xml_rs::deserialize</code>. (Has one been edited without the other?) The <code>deserialize</code> method was removed in <code>serde_xml_rs</code> 0.3, but you can parse bytes in the current version 0.4.0 with <code>from_reader</code> instead (because <code>&amp;[u8]</code> implements <code>Read</code>). But what with the shifting API and its general eagerness to choke on normal XML stuff such as a Unicode BOM or DOCTYPE declaration at the start of the file, <code>serde_xml_rs</code> doesn&#39;t seem particularly fit for purpose yet. <code>serde_xml</code> is abandoned."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 27, "last_activity_date": 1555421312, "last_edit_date": 1592644375, "creation_date": 1466609771, "answer_id": 37972585, "question_id": 37970355, "link": "https://stackoverflow.com/questions/37970355/read-xml-file-into-struct/37972585#37972585", "title": "Read XML file into struct", "body": "<p>Rust has great support for automatically generating (de)serialization code. There's the legacy <a href=\"https://crates.io/crates/rustc-serialize\" rel=\"noreferrer\"><code>rustc-serialize</code></a> which requires very little setup. Then there's the <a href=\"https://crates.io/crates/serde\" rel=\"noreferrer\"><code>serde</code></a> crate which is a completely new (de)serialization framework that allows many formats and detailed custom configurations, but requires a little more initial setup.</p>\n<p>I'm going to describe how to use <code>serde</code> + <code>serde_xml_rs</code> to deserialize the XML to the Rust-structs.</p>\n<h1>Add the crates to your <code>Cargo.toml</code></h1>\n<p>We could either implement the deserialization code manually, or we can generate it automatically by using the <code>serde_derive</code> crate.</p>\n<pre><code>[dependencies]\nserde_derive = &quot;1.0&quot;\nserde = &quot;1.0&quot;\nserde-xml-rs = &quot;0.3.1&quot;\n</code></pre>\n<h1>Add annotations to your structs</h1>\n<p>Serde needs to know about your structs. To aid it and not generate code for every single struct in your project, you need to annotate the structs you want. The <code>Debug</code> derivation is so we can easily print the structs with <code>println!</code> to inspect whether everything worked. The <code>Deserialize</code> bound is what notifies <code>serde</code> to generate code. If you want to treat the contents of an xml tag as text, you need to &quot;rename&quot; the field that should contain the text to <code>$value</code>. The naming of <code>$value</code> was done very arbitrarily in the creation of the <code>serde_xml_rs</code> crate, but can never collide with an actual field, because field names can't contain <code>$</code> signs.</p>\n<pre><code>#[macro_use]\nextern crate serde_derive;\n\nextern crate serde;\nextern crate serde_xml_rs;\n\n#[derive(Deserialize, Debug)]\nstruct Note {\n    name: String,\n    body: Body,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Body {\n    name: String,\n    #[serde(rename=&quot;layer&quot;)]\n    layers: Vec&lt;Layer&gt;,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Layer {\n    content_type: String,\n    count: u8,\n    data: Vec&lt;Data&gt;,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Data {\n    id: u8,\n    #[serde(rename=&quot;$value&quot;)]\n    content: String,\n}\n</code></pre>\n<h1>Turn a String containing xml into an object</h1>\n<p>Now comes the easy part. You call <code>serde_xml::from_str</code> on your string and you get either an error or a value of type <code>Node</code>:</p>\n<pre><code>fn main() {\n    let note: Note = serde_xml_rs::deserialize(r##&quot;\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;note name=&quot;title&quot;&gt;\n  &lt;body name=&quot;main_body&quot;&gt;\n    &lt;layer content_type=&quot;something&quot; count=&quot;99&quot;&gt;\n      &lt;data id=&quot;13&quot;&gt;\n        Datacontent\n      &lt;/data&gt;\n    &lt;/layer&gt;\n  &lt;/body&gt;\n&lt;/note&gt;\n    &quot;##.as_bytes()).unwrap();\n    println!(&quot;{:#?}&quot;, note);\n}\n</code></pre>\n"}], "owner": {"reputation": 757, "user_id": 5083453, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/52685bd3fa5ba092cb58f2aa426dcd92?s=128&d=identicon&r=PG&f=1", "display_name": "Jessica Nowak", "link": "https://stackoverflow.com/users/5083453/jessica-nowak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4465, "favorite_count": 7, "accepted_answer_id": 37972585, "answer_count": 1, "score": 12, "last_activity_date": 1555421312, "creation_date": 1466604084, "last_edit_date": 1466604310, "question_id": 37970355, "link": "https://stackoverflow.com/questions/37970355/read-xml-file-into-struct", "title": "Read XML file into struct", "body": "<p>I am trying to write a program that reads an XML file into a previously defined Rust struct.</p>\n\n<p>Something like this:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;note name=\"title\"&gt;\n  &lt;body name=\"main_body\"&gt;\n    &lt;layer content_type=\"something\" count=\"99\"&gt;\n      &lt;data id=\"13\"&gt;\n        Datacontent\n      &lt;/data&gt;\n    &lt;/layer&gt;\n  &lt;/body&gt;\n&lt;/note&gt;\n</code></pre>\n\n<p>Into this:</p>\n\n<pre><code>struct Note {\n    name: String,\n    Body: Body \n}\n\nstruct Body {\n    name: String,\n    layers: Vec&lt;Layer&gt;,\n}\n\nstruct Layer {\n    content_type: String,\n    count: u8,\n    data: Vec&lt;Data&gt;,\n}\n\nstruct Data {\n    id: u8,\n    // Datacontent?\n}\n</code></pre>\n\n<p>I looked at <a href=\"https://github.com/netvl/xml-rs\">xml-rs</a> because it currently appears to be the most popular XML library. Being new to Rust, I have a hard time figuring out how to perform this task.</p>\n"}, {"tags": ["java", "rust", "keyword"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1466599631, "post_id": 37968199, "comment_id": 63382629, "body": "You are likely being downvoted because it appears you haven&#39;t done any research. Uses of <code>final</code> include subclassing (Rust doesn&#39;t have), all variables may only be assigned once (default in Rust). These are aspects that you run into immediately upon doing any Rust. Additionally, the &quot;etc...&quot; is kind of like saying &quot;I&#39;m too lazy to list out all the uses, you do all the hard work for me&quot;."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 3, "creation_date": 1466599714, "post_id": 37968199, "comment_id": 63382698, "body": "It&#39;s a low effort question, reeking of XY problem (you presumably ask because you want to achieve a specific thing that you&#39;d achieve in Java with <code>final</code>, but instead of asking about that thing you ask about the Java language feature) and doesn&#39;t even make much sense when one is familiar with Rust."}, {"owner": {"reputation": 773, "user_id": 2328389, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bpbu6.jpg?s=128&g=1", "display_name": "SonOfSun", "link": "https://stackoverflow.com/users/2328389/sonofsun"}, "edited": false, "score": 0, "creation_date": 1466599793, "post_id": 37968199, "comment_id": 63382753, "body": "Shepmaster: I have read entire page of its wiki and according to wiki, rust supports object-oriented programming. my question was about all of the situations I can use final which includes preventing overriding."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466599846, "post_id": 37968199, "comment_id": 63382792, "body": "Object-oriented programming doesn&#39;t require subclassing; that&#39;s just the form that many programmers are familiar with."}, {"owner": {"reputation": 161, "user_id": 1669629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/034711a7d186ec18b84c363825fe1a1a?s=128&d=identicon&r=PG", "display_name": "Thiago Born", "link": "https://stackoverflow.com/users/1669629/thiago-born"}, "edited": false, "score": 0, "creation_date": 1591109196, "post_id": 37968199, "comment_id": 109927059, "body": "you <i>can</i> actually override trait methods with default implementations, so the question make all sense in this case."}], "answers": [{"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 10, "last_activity_date": 1466599628, "creation_date": 1466599628, "answer_id": 37968492, "question_id": 37968199, "link": "https://stackoverflow.com/questions/37968199/what-is-the-equivalent-of-javas-final-in-rust/37968492#37968492", "title": "What is the equivalent of Java&#39;s final in Rust?", "body": "<ul>\n<li><code>final</code> for methods does not make sense because Rust doesn't have implementation inheritance.</li>\n<li><code>final</code> for properties does not exist because it does not mesh well with <em>inherited mutability</em>. In most cases, properties <code>a.x</code> are mutable if and only if their owner <code>a</code> is mutable. While one can opt into more mutability (this is then called <em>inherent</em> mutability), the converse (a field being immutable within an otherwise mutable value) was considered too much hassle to be worthwhile. This is partly because Rust doesn't default to reference semantics, so you can always overwrite the \"object\" entirely even if you can't overwrite individual fields.</li>\n<li><code>final</code> for local variables is similar to the <em>default behavior</em> in Rust (variables are, by default, deeply immutable). There are differences, primarily that a <code>final</code> local of reference type only prevents changing the <em>reference</em> but not <em>the referenced object</em> &mdash; Rust has inherited mutability instead, see above.</li>\n</ul>\n"}], "owner": {"reputation": 773, "user_id": 2328389, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bpbu6.jpg?s=128&g=1", "display_name": "SonOfSun", "link": "https://stackoverflow.com/users/2328389/sonofsun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 592, "favorite_count": 0, "accepted_answer_id": 37968492, "answer_count": 1, "score": 0, "last_activity_date": 1466599748, "creation_date": 1466598968, "last_edit_date": 1466599748, "question_id": 37968199, "link": "https://stackoverflow.com/questions/37968199/what-is-the-equivalent-of-javas-final-in-rust", "title": "What is the equivalent of Java&#39;s final in Rust?", "body": "<p>What is the Rust equivalent of Java's <code>final</code> for methods, properties, etc...</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 622, "user_id": 864286, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e982b922fc8e3c97db88b4857e626a25?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/864286/alex"}, "edited": false, "score": 1, "creation_date": 1466600293, "post_id": 37966696, "comment_id": 63383206, "body": "Please add more information like your OS, do you launch in command line? In command line mode you just have to type export PATH=$PATH:/home/karthik/.cargo/bin and hit Enter. Then type your command to run your program"}, {"owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "reply_to_user": {"reputation": 622, "user_id": 864286, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e982b922fc8e3c97db88b4857e626a25?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/864286/alex"}, "edited": false, "score": 0, "creation_date": 1466647214, "post_id": 37966696, "comment_id": 63407600, "body": "Ok, I&#39;ve done that, now how do I set Racer&#39;s path? I&#39;ve cloned rust&#39;s src code and set the Rust src path"}, {"owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "reply_to_user": {"reputation": 622, "user_id": 864286, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e982b922fc8e3c97db88b4857e626a25?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/864286/alex"}, "edited": false, "score": 0, "creation_date": 1466648846, "post_id": 37966696, "comment_id": 63407941, "body": "Ok, I have a new problem. For racer I did export PATH=$PATH:/home/karthik/.cargo/bin/racer. The nfor the rust src path I did export RUST_SRC_PATH=/usr/local/src/rust/src. This works and I can use racer (and it works in vim with YouCompleteMe). But it doesn&#39;t work in any other terminal instance and if I close the terminal I did it in, it still doesn&#39;t work anywhere"}], "answers": [{"tags": [], "owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "is_accepted": true, "score": 6, "last_activity_date": 1466670295, "creation_date": 1466670295, "answer_id": 37986031, "question_id": 37966696, "link": "https://stackoverflow.com/questions/37966696/cargo-path-setup-for-rust-racer/37986031#37986031", "title": "Cargo path setup for rust-racer", "body": "<p>You have to add the cargo bin path to your <code>PATH</code> variable and set the <code>RUST_SRC_PATH</code> in <code>.profile</code> or <code>.bash_profile</code>.</p>\n\n<p><a href=\"https://unix.stackexchange.com/questions/26047/how-to-correctly-add-a-path-to-path\">Related unix.stackechange question</a></p>\n"}, {"tags": [], "owner": {"reputation": 381, "user_id": 6162031, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/c2087196e379c933f145a94453e5e592?s=128&d=identicon&r=PG&f=1", "display_name": "MLev", "link": "https://stackoverflow.com/users/6162031/mlev"}, "is_accepted": false, "score": 1, "last_activity_date": 1494520236, "last_edit_date": 1495540034, "creation_date": 1494520236, "answer_id": 43921072, "question_id": 37966696, "link": "https://stackoverflow.com/questions/37966696/cargo-path-setup-for-rust-racer/43921072#43921072", "title": "Cargo path setup for rust-racer", "body": "<p>There are two steps:</p>\n\n<p>(1) Add the Cargo bin to your <code>PATH</code> variable.  You can run <code>$ whereis cargo</code> to find the bin path, and then do <code>$ sudo -H gedit /etc/environment</code> where you can add that new path section to your current <code>PATH</code> variable.  You will need to save and close the file (and you can ignore the error message in the terminal during the saving portion) in order for it to take effect.</p>\n\n<p>(2) Run <code>$ rustup component add rust-src</code> to download the necessary Rust source files for you.</p>\n\n<p>At this point Racer should work properly.</p>\n\n<p>This is based on the answer <a href=\"https://stackoverflow.com/questions/33901423/where-does-multirust-install-the-rust-language-source-code\">here</a>.</p>\n"}], "owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8260, "favorite_count": 2, "accepted_answer_id": 37986031, "answer_count": 2, "score": 4, "last_activity_date": 1524432524, "creation_date": 1466594872, "last_edit_date": 1520313989, "question_id": 37966696, "link": "https://stackoverflow.com/questions/37966696/cargo-path-setup-for-rust-racer", "title": "Cargo path setup for rust-racer", "body": "<p>I just installed <code>racer</code> using <code>cargo</code>. After installing it say this:</p>\n\n<pre><code>Installing /home/karthik/.cargo/bin/racer\nwarning: be sure to add `/home/karthik/.cargo/bin` to your PATH to be able to run the installed binaries\n</code></pre>\n\n<p>How do I do this? Googling didn't help. Also, Should I be setting a <code>PATH</code> variable for cargo bin as well?</p>\n\n<p>Edit: OS is Ubuntu 14.04 and I have super user access </p>\n"}, {"tags": ["multithreading", "rust", "wait", "notify"], "comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 1, "creation_date": 1466591953, "post_id": 37964467, "comment_id": 63377268, "body": "Note that using <code>wait()&#47;notify()</code> without a <code>while</code> loop on a shared flag is a bad idea - <code>wait()</code> may stop waiting without <code>notify()</code> being called, this is known as a spurious wakeup. Using specialized primitives like <code>CountDownLatch</code> or <code>Exchanger&lt;Void&gt;</code> would be much better; it would be very similar to channels in Rust in the answers below."}], "answers": [{"tags": [], "owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "is_accepted": true, "score": 8, "last_activity_date": 1466590435, "last_edit_date": 1466590435, "creation_date": 1466589604, "answer_id": 37964685, "question_id": 37964467, "link": "https://stackoverflow.com/questions/37964467/how-to-freeze-a-thread-and-notify-it-from-another/37964685#37964685", "title": "How to freeze a thread and notify it from another?", "body": "<p>Using a channel that sends type <code>()</code> is probably easiest:</p>\n\n<pre><code>use std::sync::mpsc::channel;\nuse std::thread;\n\nlet (tx,rx) = channel();\n\n// Spawn your worker thread, giving it `send` and whatever else it needs\nthread::spawn(move|| {\n    // Do whatever\n    tx.send(()).expect(\"Could not send signal on channel.\");\n    // Continue\n});\n\n// Do whatever\nrx.recv().expect(\"Could not receive from channel.\");\n// Continue working\n</code></pre>\n\n<p>The <code>()</code> type is because it's effectively zero-information, which means it's pretty clear you're only using it as a signal. The fact that it's size zero means it's also potentially faster in some scenarios (but realistically probably not any faster than a normal machine word write).</p>\n\n<p>If you just need to notify the program that a thread is <strong>done</strong>, you can grab its join guard and wait for it to join.</p>\n\n<pre><code>let guard = thread::spawn( ... ); // This will automatically join when finished computing\n\nguard.join().expect(\"Could not join thread\");\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1466589681, "creation_date": 1466589681, "answer_id": 37964724, "question_id": 37964467, "link": "https://stackoverflow.com/questions/37964467/how-to-freeze-a-thread-and-notify-it-from-another/37964724#37964724", "title": "How to freeze a thread and notify it from another?", "body": "<p>There are multiple ways to achieve this in Rust.</p>\n\n<p>The underlying model in Java is that each object contains both a mutex and a condition variable, if I remember correctly. So using a mutex and <a href=\"https://doc.rust-lang.org/std/sync/struct.Condvar.html\" rel=\"nofollow\">condition variable</a> would work...</p>\n\n<p>... however, I would personally switch to using a channel instead:</p>\n\n<ul>\n<li>the \"waiting\" thread has the receiving end of the channel, and waits for it</li>\n<li>the \"notifying\" thread has the sending end of the channel, and sends a message</li>\n</ul>\n\n<p>It is easier to manipulate than a condition variable, notably because there is no risk to accidentally use a different mutex when locking the variable.</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/sync/mpsc/\" rel=\"nofollow\"><code>std::sync::mpsc</code></a> has two channels (asynchronous and synchronous) depending on your needs. Here, the asynchronous one matches more closely: <a href=\"https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html\" rel=\"nofollow\"><code>std::sync::mpsc::channel</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "is_accepted": false, "score": 3, "last_activity_date": 1466596678, "last_edit_date": 1466596678, "creation_date": 1466596083, "answer_id": 37967167, "question_id": 37964467, "link": "https://stackoverflow.com/questions/37964467/how-to-freeze-a-thread-and-notify-it-from-another/37967167#37967167", "title": "How to freeze a thread and notify it from another?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/nightly/std/thread/fn.park.html\" rel=\"nofollow\">std::thread::park()</a> and <a href=\"https://doc.rust-lang.org/nightly/std/thread/struct.Thread.html#method.unpark\" rel=\"nofollow\">std::thread::Thread::unpark()</a> to achieve this.</p>\n\n<p>In the thread you want to wait,</p>\n\n<pre><code>fn worker_thread() {\n    std::thread::park();\n}\n</code></pre>\n\n<p>in the controlling thread, which has a thread handle already,</p>\n\n<pre><code>fn main_thread(worker_thread: std::thread::Thread) {\n    worker_thread.unpark();\n}\n</code></pre>\n\n<p>Note that the parking thread can wake up spuriously, which means the thread can sometimes wake up without the any other threads calling <code>unpark</code> on it. You should prepare for this situation in your code, or use something like <a href=\"https://doc.rust-lang.org/nightly/std/sync/mpsc/fn.channel.html\" rel=\"nofollow\">std::sync::mpsc::channel</a> that is suggested in @Jsor's answer.</p>\n"}, {"tags": [], "owner": {"reputation": 144, "user_id": 3646645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/853ceee504eed53fdd87e8cfd916e9b5?s=128&d=identicon&r=PG&f=1", "display_name": "kirillkh", "link": "https://stackoverflow.com/users/3646645/kirillkh"}, "is_accepted": false, "score": 1, "last_activity_date": 1467551764, "last_edit_date": 1467551764, "creation_date": 1467549381, "answer_id": 38170001, "question_id": 37964467, "link": "https://stackoverflow.com/questions/37964467/how-to-freeze-a-thread-and-notify-it-from-another/38170001#38170001", "title": "How to freeze a thread and notify it from another?", "body": "<p>There is a <a href=\"https://github.com/kirillkh/monitor_rs\" rel=\"nofollow\">monitor</a> crate that provides this functionality by combining <code>Mutex</code> with <code>Condvar</code> in a convenience structure.</p>\n\n<p>(Full disclosure: I am the author.)</p>\n\n<p>Briefly, it can be used like this:</p>\n\n<pre><code>    let mon = Arc::new(Monitor::new(false));\n    {\n        let mon = mon.clone();\n        let _ = thread::spawn(move || {\n            thread::sleep(Duration::from_millis(1000));\n\n            mon.with_lock(|mut done| {     // done is a monitor::MonitorGuard&lt;bool&gt;\n                *done = true;\n                done.notify_one();\n            });\n        });\n    }\n\n    mon.with_lock(|mut done| {\n        while !*done {\n            done.wait();\n        }\n        println!(\"finished waiting\");\n    });\n</code></pre>\n\n<p>Here, <code>mon.with_lock(...)</code> is semantically equivalent to Java's <code>synchronized(mon) {...}</code>.</p>\n"}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1901, "favorite_count": 0, "accepted_answer_id": 37964685, "answer_count": 4, "score": 3, "last_activity_date": 1467551764, "creation_date": 1466589098, "last_edit_date": 1467551734, "question_id": 37964467, "link": "https://stackoverflow.com/questions/37964467/how-to-freeze-a-thread-and-notify-it-from-another", "title": "How to freeze a thread and notify it from another?", "body": "<p>I need to pause the current thread in Rust and notify it from another thread. In Java I would write:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>synchronized(myThread) {\n    myThread.wait();\n}\n</code></pre>\n\n<p>and from the second thread (to resume main thread):</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>synchronized(myThread){\n    myThread.notify();\n}\n</code></pre>\n\n<p>Is is possible to do the same in Rust?</p>\n"}, {"tags": ["rust", "match"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1466580988, "post_id": 37961369, "comment_id": 63370066, "body": "Please provide a <a href=\"http://stackoverflow.com/help/mcve\">MCVE</a>, it ensures that answers are really adapted for the situation described AND that there is no typo in your question."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1466588462, "post_id": 37961369, "comment_id": 63374954, "body": "Are you sure your first example compiles?  The linked sample does have the extra <code>()</code> to make the tuple."}, {"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1466589176, "post_id": 37961369, "comment_id": 63375470, "body": "@ChrisEmerson, excuse me, it wouldn&#39;t compile. Should I delete the question?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466600101, "post_id": 37961369, "comment_id": 63383032, "body": "<i>but I am not ready for that</i> \u2014 you can take all the time you want <b>before you ask a question</b> to make it good. All the syntax errors show that you didn&#39;t spend much time on the question to start with. If you don&#39;t care to spend time to ask a good question, why should someone take the time to provide a good answer?"}], "answers": [{"comments": [{"owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 0, "creation_date": 1466581525, "post_id": 37961611, "comment_id": 63370412, "body": "please give some comment about double parentness, why do I need (())? Thanx!"}, {"owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "reply_to_user": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "edited": false, "score": 5, "creation_date": 1466581832, "post_id": 37961611, "comment_id": 63370602, "body": "<code>Some(x)</code> returns an <code>Option</code> filled with <code>x</code>. <code>(a, b, c)</code> constructs a tuple. So if you want an <code>Option</code> filled with a tuple, you have to first construct a tuple and then pass it to <code>Some</code>: <code>Some((a, b, c))</code>"}], "tags": [], "owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "is_accepted": true, "score": 2, "last_activity_date": 1466602106, "last_edit_date": 1466602106, "creation_date": 1466581371, "answer_id": 37961611, "question_id": 37961369, "link": "https://stackoverflow.com/questions/37961369/rust-e0061-somea-is-not-the-same-as-somematch-a/37961611#37961611", "title": "rust E0061: Some(A) is not the same as Some(match ... =&gt;A)", "body": "<p>The code from your question does not compile. In your sample on GitHub though you have the correct tuple-constructing syntax.</p>\n\n<p>So for both your first and second example in the question: add parentheses around the tuple values to construct it:</p>\n\n<pre><code>Some((Hello, RecvMode::Buffered(1024),\n         scope.now() + Duration::new(10, 0)))\n</code></pre>\n\n<p>You want to pass a tuple to an Option-Enum, you have to first construct the tuple. </p>\n"}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 37961611, "answer_count": 1, "score": 0, "last_activity_date": 1466602106, "creation_date": 1466580708, "last_edit_date": 1466600002, "question_id": 37961369, "link": "https://stackoverflow.com/questions/37961369/rust-e0061-somea-is-not-the-same-as-somematch-a", "title": "rust E0061: Some(A) is not the same as Some(match ... =&gt;A)", "body": "<p>This code compiles fine:</p>\n\n<pre><code>Some(match head.path {\n  \"/\" =&gt; Hello,\n  \"/num\" =&gt; GetNum,\n   p if p.starts_with('/') =&gt; HelloName(p[1..].to_string()),\n   _ =&gt; PageNotFound\n }, RecvMode::Buffered(1024), scope.now() + Duration::new(10, 0))\n</code></pre>\n\n<p>If I change it to </p>\n\n<pre><code>Some(Hello, RecvMode::Buffered(1024),\n         scope.now() + Duration::new(10, 0))\n</code></pre>\n\n<p>I get </p>\n\n<pre><code>error: this function takes 1 parameter but 3 parameters were supplied [E0061]\n</code></pre>\n\n<p>Why? Does match construction same semantics as </p>\n\n<pre><code>x&gt;0?A:B\n</code></pre>\n\n<p>?</p>\n\n<p>Function return value is declared as </p>\n\n<pre><code>Option&lt;(Self, RecvMode, Time).\n</code></pre>\n\n<p>I was asked to provide MCVE, but I am not ready for that, that's why I'll give a <a href=\"https://github.com/tailhook/rotor-http/blob/master/examples/hello_world_server.rs\" rel=\"nofollow\">link to sample</a>, which I'm trying to change. To build it, add following dependencies to cargo.ml:</p>\n\n<blockquote>\n  <p>rotor = \"0.6.3\" \n  rotor-http = \"0.7.0\"</p>\n</blockquote>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1466577329, "post_id": 37959528, "comment_id": 63367754, "body": "Please only ask one thing per question. It helps to keep questions at SO structured. For example, you second question (access the int values) has already been asked, but we can&#39;t close this SO-question as duplicate because it contains multiple questions. So it would be great to remove this second question of yours."}, {"owner": {"reputation": 327, "user_id": 1954355, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9316a697f30054e3672ac1c0fb7813be?s=128&d=identicon&r=PG", "display_name": "graeme", "link": "https://stackoverflow.com/users/1954355/graeme"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1466620282, "post_id": 37959528, "comment_id": 63397751, "body": "Oh, my bad. Edited it."}], "answers": [{"tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 7, "last_activity_date": 1466575335, "creation_date": 1466575335, "answer_id": 37959757, "question_id": 37959528, "link": "https://stackoverflow.com/questions/37959528/impl-partialeq-for-an-enum-so-that-multiple-variants-are-equal/37959757#37959757", "title": "impl PartialEq for an Enum so that multiple variants are equal", "body": "<p>You can add <code>#[repr(T)]</code> to the enum (where <code>T</code> is an integer type), and then compare their <code>as T</code> values:</p>\n\n<pre><code>#[derive(Copy, Clone)]\n#[repr(u8)]\npub enum Test {\n    A,\n    B,\n    C,\n    AlsoA,\n}\n\nimpl PartialEq for Test {\n    fn eq(&amp;self, other: &amp;Test) -&gt; bool {\n        match (self, other) {\n            (&amp;Test::A, &amp;Test::AlsoA) |\n            (&amp;Test::AlsoA, &amp;Test::A) =&gt; true,\n            (x, y) =&gt; *x as u8 == *y as u8,\n        }\n    }\n}\n\nfn main() {\n    use Test::*;\n    assert!(A == A);\n    assert!(B == B);\n    assert!(C == C);\n    assert!(AlsoA == AlsoA);\n    assert!(A == AlsoA);\n    assert!(AlsoA == A);\n}\n</code></pre>\n\n<p>This also answers your second question: just add a <code>#[repr(T)]</code> and then use <code>as T</code>.</p>\n"}], "owner": {"reputation": 327, "user_id": 1954355, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/9316a697f30054e3672ac1c0fb7813be?s=128&d=identicon&r=PG", "display_name": "graeme", "link": "https://stackoverflow.com/users/1954355/graeme"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 769, "favorite_count": 0, "accepted_answer_id": 37959757, "answer_count": 1, "score": 2, "last_activity_date": 1466620246, "creation_date": 1466574522, "last_edit_date": 1466620246, "question_id": 37959528, "link": "https://stackoverflow.com/questions/37959528/impl-partialeq-for-an-enum-so-that-multiple-variants-are-equal", "title": "impl PartialEq for an Enum so that multiple variants are equal", "body": "<p>I would like to define an enum where two different values are equal, however I want to do it without having to explicitly write out all the match cases for Test::B == Test::B, Test::C == Test::C.</p>\n\n<pre><code>pub enum Test {\n    A,\n    B,\n    C,\n    AlsoA,\n}\n</code></pre>\n\n<p>Maybe something like this, but without having to write out the comment marked part</p>\n\n<pre><code>impl PartialEq for Test {\n    fn eq(&amp;self, other: &amp;Test) -&gt; bool {\n        match (self, other) {\n            (&amp;Test::A, &amp;Test::AlsoA) | (&amp;Test::AlsoA, &amp;Test::A) =&gt; true,\n\n            // But without this part -------------------\n            (&amp;Test::A, &amp;Test::A) =&gt; true,\n            (&amp;Test::B, &amp;Test::B) =&gt; true,\n            (&amp;Test::C, &amp;Test::C) =&gt; true,\n            (&amp;Test::AlsoA, &amp;Test::AlsoA) =&gt; true,\n            // -----------------------------------------\n\n            _ =&gt; false,\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1466577893, "post_id": 37957609, "comment_id": 63368072, "body": "What&#39;s up with all those explicit type annotations? You probably don&#39;t need any of them. It&#39;s more idiomatic in Rust to remove them. You should probably ask about your code on <a href=\"https://codereview.stackexchange.com\">CodeReview</a> :)"}, {"owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1466598171, "post_id": 37957609, "comment_id": 63381495, "body": "Oh, I&#39;m just starting with Rust and this is the first language I&#39;ve used with type inference, so it&#39;s taking me a while to get out of my C habits :)"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1466564784, "creation_date": 1466564784, "answer_id": 37957835, "question_id": 37957609, "link": "https://stackoverflow.com/questions/37957609/why-does-my-prime-number-sieve-include-the-number-49/37957835#37957835", "title": "Why does my prime number sieve include the number 49?", "body": "<p>It appears that your \"clever\" trick to ignore the values <code>0</code> and <code>1</code> backfired and you didn't consistently shift your offsets up and down. Something like this appears to give the correct output: </p>\n\n<pre><code>fn sieve(n: u32) -&gt; Vec&lt;u32&gt; {\n    let mut is_prime = vec![true; (n-2) as usize];\n    let sqrt = (n as f32).sqrt() as u32 + 1;\n    for i in 2..sqrt {\n        if is_prime[(i-2) as usize] {\n            let mut k = i*i;\n            loop {\n                if k &gt;= n {\n                    break;\n                }\n                is_prime[(k-2) as usize] = false;\n                k += i;\n                println!(\"i:{} k:{}\", i, n);\n            }\n        }\n    }\n    let mut primes = Vec::new();\n    for i in 0..is_prime.len() {\n        if is_prime[i] {\n            primes.push((i+2) as u32);\n        }\n    }\n    println!(\"SQ{}\", sqrt);\n    println!(\"Vec {:?}\", primes);\n    primes\n}\n\nfn main() {\n    let a = sieve(50);\n    assert_eq!(a, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]);\n}\n</code></pre>\n"}], "owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 37957835, "answer_count": 1, "score": 0, "last_activity_date": 1466577751, "creation_date": 1466562963, "last_edit_date": 1592644375, "question_id": 37957609, "link": "https://stackoverflow.com/questions/37957609/why-does-my-prime-number-sieve-include-the-number-49", "title": "Why does my prime number sieve include the number 49?", "body": "<p>I haven't been able to find the bug in my sieve implementation. My test shows the following error.</p>\n<pre><code>// Expected \n[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]\n// Mine\n[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 49]\n</code></pre>\n<p>Can someone point out what I'm doing wrong? I realise it's the something to do with the final condition but I haven't been able to figure it out</p>\n<pre><code>/// Find all prime numbers less than `n`.\n/// For example, `sieve(7)` should return `[2, 3, 5]`\npub fn sieve(n: u32) -&gt; Vec&lt;u32&gt; {\n    // Check assert and then populate vector\n    assert!(n &gt; 1, &quot;Error n is less than 1&quot;);\n    let mut is_prime: Vec&lt;bool&gt; = vec![true; (n-1) as usize];\n    let sqrt: u32 = (n as f32).sqrt() as u32 + 1;\n    for i in 2..sqrt {\n        if is_prime[i as usize] == true {\n            let mut k = i * i;\n            loop {\n                if k &gt; n {\n                    break;\n                }\n                is_prime[(k-2) as usize] = false;\n                k += i;\n                println!(&quot;i:{} k:{}&quot;, i, n);\n            }\n        }\n    }\n    let mut primes: Vec&lt;u32&gt; = Vec::new();\n    for i in 0..is_prime.len() {\n        if is_prime[i] == true {\n            primes.push((i+2) as u32);\n        }\n    }\n    println!(&quot;SQ{}&quot;, sqrt);\n    println!(&quot;Vec {:?}&quot;, primes);\n    primes\n}\n</code></pre>\n<p>(<a href=\"https://github.com/karbfg10k/Project/blob/master/Rust/cis198/hw01/src/problem3.rs\" rel=\"nofollow noreferrer\">Github</a>)</p>\n<p>Also is this a relatively fast implementation or am I making a big mistake (besides the prints, those are for debugging)?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466549121, "post_id": 37955643, "comment_id": 63359771, "body": "Duplicate of <a href=\"http://stackoverflow.com/q/25462935/155423\">stackoverflow.com/q/25462935/155423</a> ?"}, {"owner": {"reputation": 101, "user_id": 5173765, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/fae46355682a461a162f8d30ab3300ed?s=128&d=identicon&r=PG&f=1", "display_name": "George", "link": "https://stackoverflow.com/users/5173765/george"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466552382, "post_id": 37955643, "comment_id": 63360696, "body": "Not exactly the same question but that response answers my question. Apparently <code>Box&lt;Self&gt;</code> is a valid type for <code>self</code>, which wasn&#39;t made clear in the rust-book."}], "owner": {"reputation": 101, "user_id": 5173765, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/fae46355682a461a162f8d30ab3300ed?s=128&d=identicon&r=PG&f=1", "display_name": "George", "link": "https://stackoverflow.com/users/5173765/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 30, "favorite_count": 0, "closed_date": 1466561579, "answer_count": 0, "score": 0, "last_activity_date": 1466549084, "creation_date": 1466548247, "last_edit_date": 1466549084, "question_id": 37955643, "link": "https://stackoverflow.com/questions/37955643/box-type-and-method-syntax-in-rust", "closed_reason": "Duplicate", "title": "Box type and method syntax in Rust", "body": "<p>Why does this code work?</p>\n\n<pre><code>trait T: std::fmt::Debug {\n    fn func(mut self: Box&lt;Self&gt;) -&gt; Box&lt;T&gt;;\n}\n\n#[derive(Debug)]\nstruct S {\n    i: i32,\n}\n\nimpl T for S {\n\n    fn func(mut self: Box&lt;Self&gt;) -&gt; Box&lt;T&gt; {\n        self.as_mut().i += 1;\n        self\n    }\n}\n\nimpl S {\n    fn new() -&gt; Box&lt;S&gt; {\n        Box::new(S{i: 0})\n    }\n}\n\nfn main() {\n    let s = S::new();\n    let s_inc = s.func();\n    print!(\"{:?}\", s_inc);\n}\n</code></pre>\n\n<p>(Playground)</p>\n\n<p>In particular, I don't understand how the type annotation <code>mut self: Box&lt;Self&gt;</code> in  </p>\n\n<pre><code>impl T for S {\n    fn func(mut self: Box&lt;Self&gt;) -&gt; Box&lt;T&gt; {\n        // ...\n    }\n}\n</code></pre>\n\n<p>works. Shouldn't <code>self</code> be of type <code>S</code>, not <code>Box&lt;S&gt;?</code> Which part of the method rules allow for this syntax?</p>\n"}, {"tags": ["string", "rust", "concat"], "answers": [{"comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1466569754, "post_id": 37953074, "comment_id": 63364665, "body": "Thanks! your format!() idea helped me out the most :D I totally forgot about that"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1466537524, "last_edit_date": 1495541776, "creation_date": 1466537524, "answer_id": 37953074, "question_id": 37952798, "link": "https://stackoverflow.com/questions/37952798/concat-string-and-convert-them-to-str/37953074#37953074", "title": "Concat String and convert them to &amp;str", "body": "<p><strong>If</strong> you need to return the <code>&amp;str</code> from the function, you are out of luck, see <a href=\"https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str\">Return local String as a slice (&amp;str)</a>.</p>\n\n<p>If you <em>just</em> need to put the slices into a <code>HashMap</code> and pass it further down, you need to store the <code>String</code>s somewhere and fill the map with references into the <code>String</code>s:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn resolve_template(_: &amp;mut String, _: HashMap&lt;&amp;str, &amp;str&gt;) {}\n\nfn lyrics_more_bottles(song_template: &amp;mut String, number: i32) {\n    let mut start_num = number.to_string();\n    let mut remaining_num = (number - 1).to_string();\n\n    let start = start_num.clone() + \" bottles\";\n    let repeat = start_num + \" bottles\";\n    let remaining = remaining_num + \" bottles\";\n\n    let mut template_partials = HashMap::new();\n\n    template_partials.insert(\"start\", &amp;*start);\n    template_partials.insert(\"repeat\", &amp;*repeat);\n    template_partials.insert(\"remaining\", &amp;*remaining);\n    template_partials.insert(\"message\", \"Take one down and pass it around\");\n\n    resolve_template(song_template, template_partials);\n}\n\nfn main() {}\n</code></pre>\n\n<p>We use <code>&amp;*</code> to <code>Deref</code> the <code>String</code> to a <code>str</code> and then take another reference to end up at a <code>&amp;str</code>.</p>\n\n<p>Note that the <code>let mut template_partials</code> line has to be moved <em>after</em> the strings are created, otherwise when the strings are dropped, the map might contain references to invalid memory. Additionally, the <code>start_num</code> needs to be cloned as it's used twice.</p>\n\n<hr>\n\n<p>Personally, I'd just use <code>format!</code> and use the same string twice instead of cloning and modifying it twice:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn resolve_template(_: &amp;mut String, _: HashMap&lt;&amp;str, &amp;str&gt;) {}\n\nfn lyrics_more_bottles(song_template: &amp;mut String, number: i32) {\n    let start_and_repeat = format!(\"{} bottles\", number);\n    let remaining = format!(\"{} bottles\", number - 1);\n\n    let mut template_partials = HashMap::new();\n\n    template_partials.insert(\"start\", &amp;*start_and_repeat);\n    template_partials.insert(\"repeat\", &amp;*start_and_repeat);\n    template_partials.insert(\"remaining\", &amp;*remaining);\n    template_partials.insert(\"message\", \"Take one down and pass it around\");\n\n    resolve_template(song_template, template_partials);\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 487, "favorite_count": 0, "accepted_answer_id": 37953074, "answer_count": 1, "score": -1, "last_activity_date": 1466537524, "creation_date": 1466536543, "last_edit_date": 1466536779, "question_id": 37952798, "link": "https://stackoverflow.com/questions/37952798/concat-string-and-convert-them-to-str", "title": "Concat String and convert them to &amp;str", "body": "<pre><code>fn lyrics_more_bottles(song_template: &amp;mut String, number: i32) {\n    let mut template_partials = HashMap::new();\n    let mut start_num = number.to_string();\n    let mut remaining_num = (number - 1).to_string();\n\n    template_partials.insert(\"start\", start_num + \" bottles\");\n    template_partials.insert(\"repeat\", start_num + \" bottles\");\n    template_partials.insert(\"remaining\", remaining_num + \" bottles\");\n    template_partials.insert(\"message\", \"Take one down and pass it around\");\n\n    resolve_template(song_template, template_partials);\n}\n</code></pre>\n\n<p>I can't manage to convert those concatenated strings to a <code>&amp;str</code>. I tried to put them into parentheses and call <code>.as_str()</code>. No luck on that. </p>\n\n<p>I need to have a <code>HashMap&lt;&amp;str, &amp;str&gt;</code> so having a <code>String</code> is not an option here.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1466529440, "post_id": 37949520, "comment_id": 63350045, "body": "It really feels like <code>fn foo(mut &amp;a: &amp;u64)</code> should work, but it doesn&#39;t."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1466530560, "post_id": 37949520, "comment_id": 63350636, "body": "@Shepmaster Why should it work? <code>mut</code> applies to <i>names</i>, not whole patterns. You&#39;re not making the reference mutable, you&#39;re making <code>a</code> mutable."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466530729, "post_id": 37949520, "comment_id": 63350736, "body": "@delnan I&#39;ll admit to not thoroughly thinking through all the potential avenues. Maybe it&#39;s bad-ole-C-thinking - destructure with <code>&amp;</code> and then make the result mutable. That&#39;s why I made a comment instead of really showing my ignorance in an answer ^_^."}, {"owner": {"reputation": 917, "user_id": 4808573, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/oFwhb.jpg?s=128&g=1", "display_name": "pengowen123", "link": "https://stackoverflow.com/users/4808573/pengowen123"}, "edited": false, "score": 0, "creation_date": 1466531071, "post_id": 37949520, "comment_id": 63350933, "body": "I don&#39;t think this is possible. You are using a Copy type in this case so you could just take <code>mut a: u64</code> instead of a reference. Then, any time the function is called the compiler generates a mutable copy for you."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1466528621, "post_id": 37950381, "comment_id": 63349617, "body": "In your code the type of <code>a</code> is different (<code>&amp;mut u64</code> vs <code>&amp;u64</code>)."}, {"owner": {"reputation": 576, "user_id": 3095091, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90ba23961eb7931a4fb1d8178f1c0913?s=128&d=identicon&r=PG", "display_name": "Chronium", "link": "https://stackoverflow.com/users/3095091/chronium"}, "edited": false, "score": 0, "creation_date": 1466579486, "post_id": 37950381, "comment_id": 63369053, "body": "That&#39;s true, but it is one solution to the problem. Because I&#39;m not sure if they want a mutable reference or a mutable value."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1466587424, "post_id": 37950381, "comment_id": 63374197, "body": "The question has since been clarified."}], "tags": [], "owner": {"reputation": 576, "user_id": 3095091, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90ba23961eb7931a4fb1d8178f1c0913?s=128&d=identicon&r=PG", "display_name": "Chronium", "link": "https://stackoverflow.com/users/3095091/chronium"}, "is_accepted": false, "score": 1, "last_activity_date": 1466529052, "last_edit_date": 1466529052, "creation_date": 1466528269, "answer_id": 37950381, "question_id": 37949520, "link": "https://stackoverflow.com/questions/37949520/destructure-immutable-reference-and-bind-mutably-in-parameter-list/37950381#37950381", "title": "Destructure immutable reference and bind mutably in parameter list", "body": "<p>This seems to work on the Rust playground:</p>\n\n<pre><code>fn foo(mut a: &amp;mut u64) {\n    mutate(a);\n}\n</code></pre>\n\n<p>Short answer is that you need to take in a mutable parameter that has the type of a mutable reference to a <code>u64</code>. I cannot provide a better answer, I'm still learning.</p>\n\n<p>Here you can see a working example: <a href=\"https://play.rust-lang.org/?gist=9ba6d56f9633e3ae8b89773121880ecd&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Rust Playground</a></p>\n\n<p>I am not 100% sure if I understand what you're asking, but it's worth a shot.</p>\n"}, {"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 2, "last_activity_date": 1466530658, "last_edit_date": 1466530658, "creation_date": 1466530342, "answer_id": 37950935, "question_id": 37949520, "link": "https://stackoverflow.com/questions/37949520/destructure-immutable-reference-and-bind-mutably-in-parameter-list/37950935#37950935", "title": "Destructure immutable reference and bind mutably in parameter list", "body": "<p>I don't think you can do that. While patterns can destructure data (i.e., introduce bindings for parts of data), and bindings can be marked mutable, there doesn't seem to be a way to combine the two in the case of destructuring a reference, even though other combinations work:</p>\n\n<pre><code>struct X(i32);\nlet it = X(5);\nlet X(mut inside) = it;\ninside = 1;\n</code></pre>\n\n<p>This may just be an edge case where other syntactic choices leave no good possibility. As you noticed, <code>&amp;mut x</code> is already taken, and disambiguating with parentheses is not supported in patterns.</p>\n\n<p>This isn't a big issue because there are several ways to do the same thing outside the pattern:</p>\n\n<ol>\n<li>Don't make the binding mutable in the pattern and then make a new, mutable binding (<code>let mut x = x;</code>)</li>\n<li>Don't destructure to begin with &dash; it's not terribly useful with references since you can just say <code>let mut x = *reference;</code>.</li>\n</ol>\n\n<p>Trying to be too clever in argument lists is detrimental to readability anyway IMHO.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 0, "accepted_answer_id": 37950935, "answer_count": 2, "score": 1, "last_activity_date": 1466530658, "creation_date": 1466525523, "last_edit_date": 1466530187, "question_id": 37949520, "link": "https://stackoverflow.com/questions/37949520/destructure-immutable-reference-and-bind-mutably-in-parameter-list", "title": "Destructure immutable reference and bind mutably in parameter list", "body": "<p>I want to destructure a reference to a <code>Copy</code>-type and bind the resulting value mutably. <em>Note</em>: yes, I want to create a copy of the given argument and mutate that copy. This works:</p>\n\n<pre><code>fn foo(a: &amp;u64) {\n    let mut a = *a;\n    mutate(&amp;mut a);\n}\n</code></pre>\n\n<p>But I want to do it via destructuring in the argument list. When I just destructure like this:</p>\n\n<pre><code>fn foo(&amp;a: &amp;u64) {\n    mutate(&amp;mut a);\n}\n</code></pre>\n\n<p>Rust (understandably) complains:</p>\n\n<pre><code>&lt;anon&gt;:3:17: 3:18 error: cannot borrow immutable local variable `a` as mutable\n&lt;anon&gt;:3     mutate(&amp;mut a);\n                         ^\n&lt;anon&gt;:1:9: 1:10 help: to make the local variable mutable, use `mut` as shown:\n&lt;anon&gt;:  fn foo(&amp;mut a: &amp;u64) {\n</code></pre>\n\n<p>But the solution the compiler suggests does not work!</p>\n\n<pre><code>&lt;anon&gt;:1:8: 1:14 error: mismatched types:\n expected `&amp;u64`,\n    found `&amp;mut _`\n(values differ in mutability) [E0308]\n&lt;anon&gt;:1 fn foo(&amp;mut a: &amp;u64) {\n                ^~~~~~\n</code></pre>\n\n<p>How to do what I want?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1466535791, "last_edit_date": 1495535438, "creation_date": 1466524903, "answer_id": 37949326, "question_id": 37949215, "link": "https://stackoverflow.com/questions/37949215/how-do-i-move-mutable-state-into-a-closure/37949326#37949326", "title": "How do I move mutable state into a closure?", "body": "<p>As the error message says:</p>\n\n<blockquote>\n  <p>cannot assign to captured outer variable in an <code>Fn</code> closure</p>\n</blockquote>\n\n<p>Instead, you want a <a href=\"http://doc.rust-lang.org/std/ops/trait.FnMut.html\" rel=\"noreferrer\"><code>FnMut</code></a> closure: </p>\n\n<pre><code>fn counter() -&gt; Box&lt;FnMut() -&gt; i32&gt; {\n    let mut c = 0;\n    Box::new(move || {\n        c += 1;\n        c\n    })\n}\n\nfn main() {\n    let mut a = counter();\n    let mut b = counter();\n\n    let result = [a(), a(), a(), b(), b(), a()];\n    println!(\"{:?}\", result);\n\n    assert_eq!([1, 2, 3, 1, 2, 4], result);\n}\n</code></pre>\n\n<p>As the <code>FnMut</code> docs say:</p>\n\n<blockquote>\n  <p>A version of the call operator that takes a mutable receiver.</p>\n</blockquote>\n\n<p>This allows the closure to mutate the contained state.</p>\n\n<p>Incidentally, the explicit type for <code>c</code> is not needed.</p>\n\n<hr>\n\n<blockquote>\n  <p>What confuses me, is that <code>pub trait Fn&lt;Args&gt;: FnMut&lt;Args&gt;</code>. Doesn't it mean that <code>Fn</code> (what I used) should support behaviour of <code>FnMut</code>?</p>\n</blockquote>\n\n<p>Perhaps <a href=\"https://stackoverflow.com/q/30177395/155423\">When does a closure implement Fn, FnMut and FnOnce?</a> can help provide some background information. This is an aspect I get intuitively, but haven't figured out how best to communicate. This section from <a href=\"http://huonw.github.io/blog/2015/05/finding-closure-in-rust/\" rel=\"noreferrer\">Finding Closure in Rust</a> also seems relevant:</p>\n\n<blockquote>\n  <p>At a high-level <code>self</code> gives implementers (i.e. the types users define to implement the trait) the most flexibility, with <code>&amp;mut self</code> next and <code>&amp;self</code> the least flexible. Conversely, <code>&amp;self</code> gives consumers of the trait (i.e. functions with generics bounded by the trait) the most flexibility, and <code>self</code> the least.</p>\n</blockquote>\n\n<p>In short, that trait definition says that any <code>FnMut</code> closure can be <strong>used as a <code>Fn</code> closure</strong>. This makes some sense, as we can simply ignore the mutability. You cannot go the other way - you cannot make an immutable reference into a mutable one.</p>\n"}], "owner": {"reputation": 420, "user_id": 236378, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d73cb546da468a0b03888ff822dd42af?s=128&d=identicon&r=PG", "display_name": "Shchvova", "link": "https://stackoverflow.com/users/236378/shchvova"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4209, "favorite_count": 0, "accepted_answer_id": 37949326, "answer_count": 1, "score": 7, "last_activity_date": 1466535791, "creation_date": 1466524579, "last_edit_date": 1466524718, "question_id": 37949215, "link": "https://stackoverflow.com/questions/37949215/how-do-i-move-mutable-state-into-a-closure", "title": "How do I move mutable state into a closure?", "body": "<p>Closures have some data in their state, but how do I make it mutable? For example, I want a counter closure which returns the incremented value each time, but it doesn't work. How do I make it work?</p>\n\n<pre><code>fn counter() -&gt; Box&lt;Fn() -&gt; i32&gt; {\n    let mut c: i32 = 0;\n    Box::new(move || {\n        c += 1;\n        c\n    })\n}\n\nfn main() {\n    let mut a = counter();\n    let mut b = counter();\n    println!(\"{:?}\", [a(), a(), a(), b(), b(), a()]);\n}\n</code></pre>\n\n<p>Error (and warning) I'm getting:</p>\n\n<pre><code>error: cannot assign to captured outer variable in an `Fn` closure\n        c += 1;\n        ^~~~~~\nhelp: consider changing this closure to take self by mutable reference\n    Box::new(move || {\n        c += 1;\n        c\n    })\n</code></pre>\n\n<p>I expect it to output something like <code>[1, 2, 3, 1, 2, 4]</code>.</p>\n"}, {"tags": ["gtk", "rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466521314, "post_id": 37947764, "comment_id": 63344782, "body": "You will probably be interested in <a href=\"http://stackoverflow.com/q/29540167/155423\">stackoverflow.com/q/29540167/155423</a> or <a href=\"http://stackoverflow.com/q/32044301/155423\">stackoverflow.com/q/32044301/155423</a>. Of maximal relevance: <i>Post events to an queue and handle them in main loop as you want</i>"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1466581516, "post_id": 37953332, "comment_id": 63370402, "body": "Ok, I understand know. I come from C++, and I hardly understand rust mechanisms. Thank you for explanation!"}], "tags": [], "owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "is_accepted": true, "score": 3, "last_activity_date": 1466538464, "creation_date": 1466538464, "answer_id": 37953332, "question_id": 37947764, "link": "https://stackoverflow.com/questions/37947764/how-to-use-the-button-itself-from-the-callback-closure/37953332#37953332", "title": "How to use the button itself from the callback closure?", "body": "<p>underscore doesn't mean \"same name as outside the closure\", it means \"make the closure argument unused/unusable\". Try naming the argument:</p>\n\n<pre><code>button.connect_clicked(move |button| {\n    button.hide();\n});\n</code></pre>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 202, "favorite_count": 0, "accepted_answer_id": 37953332, "answer_count": 1, "score": 2, "last_activity_date": 1466538464, "creation_date": 1466520682, "last_edit_date": 1466522452, "question_id": 37947764, "link": "https://stackoverflow.com/questions/37947764/how-to-use-the-button-itself-from-the-callback-closure", "title": "How to use the button itself from the callback closure?", "body": "<p>I have written this little code from gtk-rs examples, but it cannot compile since the button cannot be used from the closure.</p>\n\n<pre><code>extern crate gtk;\n\nuse gtk::prelude::*;\n\nfn main() {\n    if gtk::init().is_err() {\n        println!(\"Failed to initialize GTK.\");\n        return;\n    }\n    let window = gtk::Window::new(gtk::WindowType::Toplevel);\n    let button = gtk::Button::new_from_stock(\"Click me !\");\n\n    window.add(&amp;button);\n\n    window.connect_delete_event(|_, _| {\n        gtk::main_quit();\n        Inhibit(false)\n    });\n\n    button.connect_clicked(move |_| {\n        button.hide(); // error\n    });\n\n    window.show_all();\n    gtk::main();\n}\n</code></pre>\n\n<p>The compiler writes:</p>\n\n<blockquote>\n<pre><code>src/main.rs:22:3: 22:9 error: cannot move `button` into closure because it is borrowed [E0504]\nsrc/main.rs:22      button.hide();\n                    ^~~~~~\nsrc/main.rs:21:2: 21:8 note: borrow of `button` occurs here\nsrc/main.rs:21  button.connect_clicked(move |_| {\n            ^~~~~~\n</code></pre>\n</blockquote>\n\n<p>How to solve this problem?</p>\n\n<p>I cannot pass variables by reference: it is invalid because the lifetime of closure may exceed the lifetime of main, compiler says.</p>\n\n<p>Note: I use this <code>Cargo.toml</code> to compile:</p>\n\n<pre><code>[package]\nname = \"test\"\nversion = \"0.1.0\"\nauthors = [\"Me\"]\n\n[features]\ndefault = [\"gtk/v3_16\"]\n\n[dependencies]\ngtk = { git = \"https://github.com/gtk-rs/gtk.git\" }\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1466517919, "post_id": 37946586, "comment_id": 63341978, "body": "Probably a duplicate of <a href=\"http://stackoverflow.com/q/28519997/155423\">stackoverflow.com/q/28519997/155423</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466518103, "post_id": 37946586, "comment_id": 63342142, "body": "There&#39;s a number of <a href=\"https://play.rust-lang.org/?gist=4bc8b01537550436846d9ea65d7e83ce&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">idiomatic changes that you should make</a>(implicit returns, avoiding array indexing, avoiding explicit types). Additionally, if the code compiles and does what you want, that certainly seems like &quot;correct syntax&quot; to me."}], "owner": {"reputation": 11, "user_id": 6494444, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-dkpo9OJtyxk/AAAAAAAAAAI/AAAAAAAAAAw/aOhW1YpY3pE/photo.jpg?sz=128", "display_name": "Michael Scott", "link": "https://stackoverflow.com/users/6494444/michael-scott"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "closed_date": 1466528618, "answer_count": 0, "score": 0, "last_activity_date": 1466517960, "creation_date": 1466517673, "last_edit_date": 1466517960, "question_id": 37946586, "link": "https://stackoverflow.com/questions/37946586/what-is-correct-rust-syntax-in-this-program", "closed_reason": "Duplicate", "title": "What is correct Rust syntax in this program?", "body": "<pre><code>fn sum(x: &amp;[u8]) -&gt; usize {\n    let mut tot = 0;\n    for i in 0..10 {\n        tot += x[i] as usize\n    }\n    return tot;\n}\n\nfn func(y: &amp;[u8]) -&gt; usize {\n    let tot = sum(&amp;&amp;&amp;&amp;y);     /* Look here! */\n    return tot;\n}\n\nfn main() {\n    let w: [u8; 10] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    let tot = func(&amp;w);\n    println!(\"{}\", tot);\n}\n</code></pre>\n\n<p>This program works identically irrespective of the number of &amp;'s where indicated. Whats going on, and what is the correct syntax?</p>\n"}, {"tags": ["amazon-s3", "rust", "aws-api-gateway", "hyper"], "answers": [{"tags": [], "owner": {"reputation": 1726, "user_id": 5705481, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dc2bee4c1f51546f6c131d71510d807?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo de Lara", "link": "https://stackoverflow.com/users/5705481/lorenzo-de-lara"}, "is_accepted": false, "score": 1, "last_activity_date": 1466530107, "creation_date": 1466530107, "answer_id": 37950875, "question_id": 37942119, "link": "https://stackoverflow.com/questions/37942119/rust-aws-api-gateway-service-proxy-to-s3-file-upload-using-raw-https-request/37950875#37950875", "title": "Rust AWS API Gateway Service Proxy to S3 file upload using raw https request", "body": "<p>Unfortunately at this time API Gateway does not support binary payloads. This is a common feature request so it is in our backlog, although we can't comment on a release date. We will be sure to update this post when the feature has been released.</p>\n"}], "owner": {"reputation": 882, "user_id": 2300810, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ffb1bf99983af1b449d0bffcc96facfa?s=128&d=identicon&r=PG", "display_name": "zhywu", "link": "https://stackoverflow.com/users/2300810/zhywu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 986, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1498053146, "creation_date": 1466505394, "last_edit_date": 1466508816, "question_id": 37942119, "link": "https://stackoverflow.com/questions/37942119/rust-aws-api-gateway-service-proxy-to-s3-file-upload-using-raw-https-request", "title": "Rust AWS API Gateway Service Proxy to S3 file upload using raw https request", "body": "<p>Firstly, sorry for the long title.</p>\n\n<p>I've set up an api gateway to act as the s3 proxy so I can upload files by sending a PUT request to a api url. The api works fine (or at least I think it does), but it seems that I can only upload text files correctly.</p>\n\n<p>For the uploaded text files (eg. Content-Type=text/plain), the sizes of the files locally are identical to the sizes of the files that are uploaded into s3 bucket. BUT, it is not the case for the binary files (eg. Content-Type=application/pdf). The files in the s3 buckets have a bigger size. When I download the binary files from s3 I cannot open them, they are corrupted.</p>\n\n<p>Here is the rust code to send the request, I'm using <a href=\"https://github.com/hyperium/hyper\" rel=\"nofollow\">hyper's http client</a>:</p>\n\n<pre><code>match File::open(file.as_path()) {\n        Err(_) =&gt; Err(\"Failed to open file\".to_owned()),\n        Ok(mut openned_file) =&gt; {\n            let file_mime = mime_guess::guess_mime_type(file.as_path());\n            let connector = HttpsConnector::new(OpensslClient::default());\n            let url_str = format!(\"https://my.api.com/upload/{}\",\n                                file.file_name().unwrap().to_str().unwrap());\n            let mut client =\n                Request::with_connector(Method::Put, Url::parse(&amp;url_str).unwrap(), &amp;connector)\n                    .unwrap();\n            client.headers_mut().set(ContentType(file_mime.clone()));\n            // client.headers_mut().set(ContentLength(openned_file.metadata().unwrap().len()));\n            let file_mime_str = file_mime.to_string();\n            let mut buffer: [u8; 4096] = [0; 4096];\n            let mut uploaded: usize = 0;\n            let request = match file_mime {\n                Mime(TopLevel::Text, _, _) |\n                Mime(TopLevel::Application, SubLevel::Javascript, _) =&gt; {\n                    let mut request = client.start().unwrap();\n                    println!(\"Uploading text ...\", );\n                    while let Ok(read_count) = openned_file.read(&amp;mut buffer) {\n                        if read_count &gt; 0 {\n                            println!(\"Uploading {} bytes\", read_count);\n                            request.write_all(&amp;buffer[0..read_count]);\n                            uploaded += read_count;\n                        } else {\n                            request.flush();\n                            println!(\"File mime: {}\", file_mime_str);\n                            println!(\"File size: {}, Total uploaded: {}\",\n                                     openned_file.metadata().unwrap().len(),\n                                     uploaded);\n                            break;\n                        }\n                    }\n                    request\n                }\n                _ =&gt; {\n                    // client.headers_mut()\n                    //     .set_raw(\"Content-Encoding\", vec![b\"base64\".to_vec()]);\n                    let mut request = client.start().unwrap();\n\n                    let mut config = MIME;\n                    config.line_length = None;\n                    println!(\"Uploading binary ...\", );\n                    while let Ok(read_count) = openned_file.read(&amp;mut buffer) {\n                        if read_count &gt; 0 {\n                            println!(\"Uploading {} bytes\", read_count);\n                            request.write_all(&amp;buffer[0..read_count]);\n                            // let base64_str = buffer[0..read_count].to_base64(STANDARD);\n                            // request.write_all(base64_str.into_bytes().as_slice());\n                            uploaded += read_count;\n                        } else {\n                            request.flush();\n                            println!(\"File mime: {}\", file_mime_str);\n                            println!(\"File size: {}, Total uploaded: {}\",\n                                     openned_file.metadata().unwrap().len(),\n                                     uploaded);\n                            break;\n                        }\n                    }\n                    request\n                }\n            };\n\n            match request.send() {\n                Err(err) =&gt; Err(format!(\"{}\", err)),\n                Ok(mut response) =&gt; {\n                    let mut rep_str = String::new();\n                    response.read_to_string(&amp;mut rep_str);\n                    Err(format!(\"{}\", rep_str))\n                }\n            }\n</code></pre>\n\n<p>As you can see from the commented out code, I've tried using the Content-Encoding=base64 and encoding the bytes read from the file to upload. But Content-Encoding=base64 seems not a valid encoding type that s3 accepts. I failed to upload entirely (500: Internal Server Error, I can't even see the file of the wrong size on s3 bucket) whenever I set the Content-Encoding. But text file is working perfectly.</p>\n\n<p>For reference:</p>\n\n<ul>\n<li><a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\" rel=\"nofollow\">http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html</a></li>\n<li><a href=\"https://developer.salesforce.com/forums/?id=906F0000000BMDFIA4\" rel=\"nofollow\">https://developer.salesforce.com/forums/?id=906F0000000BMDFIA4</a></li>\n</ul>\n"}, {"tags": ["string", "hashmap", "pattern-matching", "rust"], "answers": [{"comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1466486733, "post_id": 37936128, "comment_id": 63322083, "body": "So I also have to destruct the <code>Option&lt;&amp;&amp;str&gt;</code> before I even can deref the <code>&amp;&amp;str</code> ...I&#39;ll try a <code>if let Some(x)</code>"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1466487522, "post_id": 37936128, "comment_id": 63322376, "body": "Correct. Perhaps I should give you a fix for your actual issue in my answer as well. I&#39;ll add that now."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1466487672, "post_id": 37936128, "comment_id": 63322441, "body": "thank you...am not getting it to work with if let anyway"}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1466506731, "post_id": 37936128, "comment_id": 63333752, "body": "can you explain <code>&amp;key[..]</code> further?"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 3, "creation_date": 1466550125, "post_id": 37936128, "comment_id": 63360074, "body": "Oh sure - sorry, its just baked in my brain (and I wrote this on the train on my tablet). Basically you only want a way to allow your match arms to match identical types. Your <code>key</code> is <code>&amp;&amp;str</code>.. and the match arms are <code>&amp;&#39;static str</code>. They aren&#39;t comparable. You can use any method you want to dereference the <code>key</code> variable. So these will all work: <code>*key</code>, <code>&amp;key[..]</code>, <code>key.as_ref()</code>, etc."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 4, "last_activity_date": 1466487683, "last_edit_date": 1466487683, "creation_date": 1466486293, "answer_id": 37936128, "question_id": 37936058, "link": "https://stackoverflow.com/questions/37936058/why-does-iterating-over-a-hashmapstr-str-yield-a-str/37936128#37936128", "title": "Why does iterating over a HashMap&lt;&amp;str,&amp;str&gt; yield a &amp;&amp;str?", "body": "<p>Because <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get\" rel=\"nofollow\">that particular method returns a reference wrapped by an Option</a>.</p>\n\n<p>Basically, if you store a <code>String</code> there and use <code>get</code> .. you'll get an <code>Option&lt;&amp;String&gt;</code> as the result of a call to <code>get</code>. Storing <code>&amp;str</code> will return you an <code>Option&lt;&amp;&amp;str&gt;</code> as the result of a call to <code>get</code>.</p>\n\n<p>Examples of values and how they'll appear when you call <code>get</code>:</p>\n\n<pre><code>String -&gt; Option&lt;&amp;String&gt;\n&amp;str -&gt; Option&lt;&amp;&amp;str&gt;\nu32 -&gt; Option&lt;&amp;u32&gt;\n</code></pre>\n\n<p>Ownership of the <code>&amp;str</code> is being transferred to the hashmap when you insert it in as a value. The hashmap therefore returns references to them for you using <code>get</code> ... or <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get_mut\" rel=\"nofollow\">mutable references using get_mut</a>.</p>\n\n<p>The playground is currently broken (can't share anything from it) ... so here is a working .. broken down sample of your code:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut map: HashMap&lt;&amp;str, &amp;str&gt; = HashMap::new();\n    map.insert(\"start\", \"value\");\n\n    let mut start: &amp;str = \"Unknown\";\n    let mut repeat: &amp;str;\n    let mut remaining: &amp;str;\n    let mut message: &amp;str;\n\n    for key in map.keys() {\n        match &amp;key[..] {\n            \"start\" =&gt; start = map.get(key).unwrap(),\n            \"repeat\" =&gt; repeat = map.get(key).unwrap(),\n            \"remaining\" =&gt; remaining = map.get(key).unwrap(),\n            \"message\" =&gt; message = map.get(key).unwrap(),\n            _ =&gt; unreachable!()\n        }\n    }\n\n    println!(\"Result: {}\", start);\n}\n</code></pre>\n"}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 556, "favorite_count": 0, "accepted_answer_id": 37936128, "answer_count": 1, "score": 1, "last_activity_date": 1466515290, "creation_date": 1466485967, "last_edit_date": 1466515290, "question_id": 37936058, "link": "https://stackoverflow.com/questions/37936058/why-does-iterating-over-a-hashmapstr-str-yield-a-str", "title": "Why does iterating over a HashMap&lt;&amp;str,&amp;str&gt; yield a &amp;&amp;str?", "body": "<p>I'm iterating over a <code>HashMap</code> and putting the values in it via pattern matching in some local vars.</p>\n\n<p><strong>Delegater</strong></p>\n\n<pre><code>fn lyrics_no_bottles(song_template:&amp;mut String){\n    let mut template_partials = HashMap::new();\n\n    template_partials.insert(\"start\", \"No more bottles\");\n    template_partials.insert(\"repeat\", \"no more bottles\");\n    template_partials.insert(\"remaining\", \"99 bottles\");\n    template_partials.insert(\"message\", \"Go to the store and buy some more\");\n\n    resolve_template(song_template, template_partials);\n}\n</code></pre>\n\n<p><strong>Called</strong></p>\n\n<pre><code>fn resolve_template(song_template:&amp;mut String, partials: HashMap&lt;&amp;str, &amp;str&gt;){\n    let start:&amp;str;\n    let repeat:&amp;str;\n    let remaining:&amp;str;\n    let message:&amp;str;\n\n    for key in partials.keys(){\n        match key {\n            \"start\" =&gt; start = partials.get(key),\n            \"repeat\" =&gt; repeat = partials.get(key),\n            \"remaining\" =&gt; remaining = partials.get(key),\n            \"message\" =&gt; message = partials.get(key)\n        }\n    }\n\n    *song_template = song_template.replace(\"%1\", start);\n    *song_template = song_template.replace(\"%2\", repeat);\n    *song_template = song_template.replace(\"%3\", message);\n    *song_template = song_template.replace(\"%4\", remaining);\n}\n</code></pre>\n\n<p><strong>Error Output</strong></p>\n\n<pre><code>lib.rs:51:5: 58:6 error: type mismatch resolving `&lt;std::collections::hash::map::Keys&lt;'_, &amp;str, &amp;str&gt; as core::iter::Iterator&gt;::Item == &amp;str`:\n expected &amp;-ptr,\n    found str [E0271]\nlib.rs:51     for key in partials.keys(){\nlib.rs:52         match key {\nlib.rs:53             \"start\" =&gt; start = partials.get(key),\nlib.rs:54             \"repeat\" =&gt; repeat = partials.get(key),\nlib.rs:55             \"remaining\" =&gt; remaining = partials.get(key),\nlib.rs:56             \"message\" =&gt; message = partials.get(key)\n          ...\nlib.rs:51:5: 58:6 help: run `rustc --explain E0271` to see a detailed explanation\nlib.rs:53:32: 53:49 error: mismatched types:\n expected `&amp;str`,\n    found `core::option::Option&lt;&amp;&amp;str&gt;`\n(expected &amp;-ptr,\n    found enum `core::option::Option`) [E0308]\nlib.rs:53             \"start\" =&gt; start = partials.get(key),\n</code></pre>\n\n<p>I don't understand why the compiler thinks there is a <code>&amp;&amp;str</code> when I declared the parameter as <code>HashMap&lt;&amp;str,&amp;str&gt;</code>.</p>\n"}, {"tags": ["pattern-matching", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466477011, "post_id": 37932602, "comment_id": 63319491, "body": "See also <a href=\"http://stackoverflow.com/q/28512394/155423\">How to lookup from and insert into a HashMap efficiently?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 6596, "user_id": 5021321, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG", "display_name": "Eli Sadoff", "link": "https://stackoverflow.com/users/5021321/eli-sadoff"}, "edited": false, "score": 0, "creation_date": 1466461165, "post_id": 37932658, "comment_id": 63315942, "body": "When I use <code>or_insert</code> I get <code>mismatched types: expected `()` found `&amp;mut u32`</code>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 6596, "user_id": 5021321, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG", "display_name": "Eli Sadoff", "link": "https://stackoverflow.com/users/5021321/eli-sadoff"}, "edited": false, "score": 0, "creation_date": 1466462617, "post_id": 37932658, "comment_id": 63316390, "body": "That&#39;s because <code>or_insert</code> returns <code>&amp;mut _</code> but the loop body must have a unit type. I&#39;ve edited my answer anyway."}, {"owner": {"reputation": 6596, "user_id": 5021321, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG", "display_name": "Eli Sadoff", "link": "https://stackoverflow.com/users/5021321/eli-sadoff"}, "edited": false, "score": 0, "creation_date": 1466463225, "post_id": 37932658, "comment_id": 63316549, "body": "Thank you! The <code>Entry</code> API is fantastic."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466476975, "post_id": 37932658, "comment_id": 63319483, "body": "I think you really want <code>*h.entry(x.to_string()).or_insert(0) += 1;</code>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 6596, "user_id": 5021321, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG", "display_name": "Eli Sadoff", "link": "https://stackoverflow.com/users/5021321/eli-sadoff"}, "edited": false, "score": 1, "creation_date": 1466493870, "post_id": 37932658, "comment_id": 63325317, "body": "@EliSadoff: I was blown away when Gankro unveiled it :)"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1466462567, "last_edit_date": 1466462567, "creation_date": 1466460736, "answer_id": 37932658, "question_id": 37932602, "link": "https://stackoverflow.com/questions/37932602/how-can-i-specify-the-type-of-the-some-parameter-in-rust/37932658#37932658", "title": "How can I specify the type of the Some parameter in Rust?", "body": "<p>The <code>or_with</code> family of functions expect a function that returns the values as a parameter. You want <a href=\"https://doc.rust-lang.org/collections/btree_map/enum.Entry.html#method.or_insert\" rel=\"nofollow\"><code>.or_insert</code></a>, which directly expects the value:</p>\n\n<pre><code>let re = regex::Regex::new(r\"[^A-Za-z0-9\\w'\").unwrap();\nlet s = re.split(s).collect::&lt;Vec&lt;&amp;str&gt;&gt;();\nlet mut h: HashMap&lt;String, u32&gt; = HashMap::new();\nfor x in s {\n    match h.get(x) {\n      Some(i) =&gt; h.entry(x.to_string()).or_insert(i + 1),\n      None    =&gt; h.entry(x.to_string()).or_insert(1),\n    }\n}\n</code></pre>\n\n<p>Anyway, you are missing the point of the <code>Entry</code> API:</p>\n\n<pre><code>let re = regex::Regex::new(r\"[^A-Za-z0-9\\w'\").unwrap();\nlet s = re.split(s).collect::&lt;Vec&lt;&amp;str&gt;&gt;();\nlet mut h: HashMap&lt;String, u32&gt; = HashMap::new();\nfor x in s {\n    match h.entry(x.to_string()) {\n      Entry::Vacant(v)   =&gt; {\n          v.insert(1);\n      },\n      Entry::Occupied(o) =&gt; {\n          *o.into_mut() += 1;\n      },\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 6596, "user_id": 5021321, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG", "display_name": "Eli Sadoff", "link": "https://stackoverflow.com/users/5021321/eli-sadoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 37932658, "answer_count": 1, "score": 1, "last_activity_date": 1466462567, "creation_date": 1466460446, "last_edit_date": 1466460810, "question_id": 37932602, "link": "https://stackoverflow.com/questions/37932602/how-can-i-specify-the-type-of-the-some-parameter-in-rust", "title": "How can I specify the type of the Some parameter in Rust?", "body": "<p>I am working on a program in Rust and I am getting stuck on <code>match</code>. I currently have</p>\n\n<pre><code>extern crate regex;\n\nuse std::collections::HashMap;\n\nfn main() {\n    let s = \"\";\n\n    let re = regex::Regex::new(r\"[^A-Za-z0-9\\w'\").unwrap();\n    let s = re.split(s).collect::&lt;Vec&lt;&amp;str&gt;&gt;();\n    let mut h: HashMap&lt;String, u32&gt; = HashMap::new();\n    for x in s {\n        match h.get(x) {\n            Some(i) =&gt; h.entry(x.to_string()).or_insert_with(i + 1),\n            None =&gt; h.entry(x.to_string()).or_insert_with(1),\n        }\n    }\n}\n</code></pre>\n\n<p>but when I run this I get a whole litany of errors, including </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the trait bound `u32: std::ops::FnOnce&lt;()&gt;` is not satisfied [E0277]\n            Some(i) =&gt; h.entry(x.to_string()).or_insert_with(i + 1),\n                                              ^~~~~~~~~~~~~~\n</code></pre>\n\n<p>and I'm not exactly sure where to go with this.</p>\n"}, {"tags": ["c", "linker", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466515186, "post_id": 37929165, "comment_id": 63339666, "body": "Please do not edit your <b>question</b> to include an <b>answer</b>. Stack Overflow explicitly encourages you to add your own answer below."}], "answers": [{"tags": [], "owner": {"reputation": 1987, "user_id": 5278682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34509cba2b4d128dce294dcf5092d300?s=128&d=identicon&r=PG&f=1", "display_name": "Eli Friedman", "link": "https://stackoverflow.com/users/5278682/eli-friedman"}, "is_accepted": true, "score": 6, "last_activity_date": 1466475672, "creation_date": 1466475672, "answer_id": 37934581, "question_id": 37929165, "link": "https://stackoverflow.com/questions/37929165/rust-and-c-linking-problems-with-minimal-program-and-no-std/37934581#37934581", "title": "Rust and C linking problems with minimal program and no_std", "body": "<p>You shouldn't use <code>--emit=obj</code>; just <code>rustc --crate-type=staticlib -C panic=abort sum.rs</code> should do the right thing.  (This fixes the _ZN4core9panicking5panic17h907815f47e914305E link error.)</p>\n\n<p>To fix another link error, you need to write panic_fmt correctly (note the use of <code>extern</code>):</p>\n\n<pre><code>#[lang=\"panic_fmt\"]\nextern fn panic_fmt(_: ::core::fmt::Arguments, _: &amp;'static str, _: u32) -&gt; ! {\n    loop {}\n}\n</code></pre>\n\n<p>With those changes, everything appears to work the way it's supposed to.</p>\n\n<hr>\n\n<p>You need panic_fmt so you can decide what to do when a panic happens: if you use <code>#![no_std]</code>, rustc assumes there is no standard library/libc/kernel, so it can't just call abort() or expect an illegal instruction to do anything useful.  It's something which should be exposed in stable Rust somehow, but I don't know if anyone is working on stabilizing it.</p>\n\n<p>You don't need to use <code>#![feature(libc)]</code> to get libc; you should use the version posted on crates.io instead (or you can declare the functions you need by hand).</p>\n"}, {"tags": [], "owner": {"reputation": 440, "user_id": 1161194, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/d967e4b6e03b82fa3481af69e70d4315?s=128&d=identicon&r=PG", "display_name": "HLorenzi", "link": "https://stackoverflow.com/users/1161194/hlorenzi"}, "is_accepted": false, "score": 4, "last_activity_date": 1466597212, "creation_date": 1466597212, "answer_id": 37967553, "question_id": 37929165, "link": "https://stackoverflow.com/questions/37929165/rust-and-c-linking-problems-with-minimal-program-and-no-std/37967553#37967553", "title": "Rust and C linking problems with minimal program and no_std", "body": "<p>So, the solution, from the accepted answer, was:</p>\n\n<p><strong>main.c</strong></p>\n\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint sum(int, int);\n\nvoid panic(const char* filename_unterminated, int filename_size, int line_num)\n{\n    printf(\"Panic! At line %d, file \", line_num);\n\n    for (int i = 0; i &lt; filename_size; i++)\n        printf(\"%c\", filename_unterminated[i]);\n\n    abort();\n}\n\nint main()\n{\n    // Sum as u8 will overflow to test panicking.\n    printf(\"Sum is %d.\\n\", sum(0xff, 3));\n    return 0;\n}\n</code></pre>\n\n<p><strong>sum.rs</strong></p>\n\n<pre><code>#![no_std]\n#![feature(lang_items, libc)]\nextern crate libc;\n\nextern \"C\"\n{\n    fn panic(\n        filename_unterminated: *const libc::c_char,\n        filename_size: libc::c_int,\n        line_num: libc::c_int) -&gt; !;\n}\n\n#[lang=\"panic_fmt\"]\nextern fn panic_fmt(_: ::core::fmt::Arguments, filename: &amp;'static str, line_num: u32) -&gt; !\n{\n    unsafe { panic(filename.as_ptr() as _, filename.len() as _, line_num as _); }\n}\n\n#[no_mangle]\npub extern \"C\" fn sum(x: libc::c_int, y: libc::c_int) -&gt; libc::c_int\n{\n    // Convert to u8 to test overflow panicking.\n    ((x as u8) + (y as u8)) as _\n}\n</code></pre>\n\n<p>And compiling with:</p>\n\n<pre><code>rustc --crate-type=staticlib -C panic=abort sum.rs\ngcc -c main.c\ngcc main.o -L . -l sum -o program.exe\n</code></pre>\n\n<p>Now everything works, and I have a panic handler in C that shows where the error occurred!</p>\n"}, {"tags": [], "owner": {"reputation": 38, "user_id": 15215257, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GoZkT.jpg?s=128&g=1", "display_name": "ojej", "link": "https://stackoverflow.com/users/15215257/ojej"}, "is_accepted": false, "score": 0, "last_activity_date": 1614102831, "creation_date": 1614102831, "answer_id": 66338494, "question_id": 37929165, "link": "https://stackoverflow.com/questions/37929165/rust-and-c-linking-problems-with-minimal-program-and-no-std/66338494#66338494", "title": "Rust and C linking problems with minimal program and no_std", "body": "<pre><code>rustc --crate-type=staticlib -C panic=abort src/sum.rs\nerror[E0658]: language items are subject to change\n  --&gt; src/sum.rs:13:1\n   |\n13 | #[lang=&quot;panic_fmt&quot;]\n   | ^^^^^^^^^^^^^^^^^^^\n\nerror[E0522]: definition of an unknown language item: `panic_fmt`\n  --&gt; src/sum.rs:13:1\n   |\n13 | #[lang=&quot;panic_fmt&quot;]\n   | ^^^^^^^^^^^^^^^^^^^ definition of unknown language item `panic_fmt`\n\nerror: `#[panic_handler]` function required, but not found\n</code></pre>\n<hr />\n<p>this is for HLorenzi fedback , your code not working but I cant send You a comment</p>\n"}], "owner": {"reputation": 440, "user_id": 1161194, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/d967e4b6e03b82fa3481af69e70d4315?s=128&d=identicon&r=PG", "display_name": "HLorenzi", "link": "https://stackoverflow.com/users/1161194/hlorenzi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3214, "favorite_count": 1, "accepted_answer_id": 37934581, "answer_count": 3, "score": 5, "last_activity_date": 1614102831, "creation_date": 1466446500, "last_edit_date": 1466596929, "question_id": 37929165, "link": "https://stackoverflow.com/questions/37929165/rust-and-c-linking-problems-with-minimal-program-and-no-std", "title": "Rust and C linking problems with minimal program and no_std", "body": "<p>I'm trying to build a minimal program in C that calls Rust functions, preferably compiled with <code>#![no_std]</code>, in Windows, using GCC 6.1.0 and <code>rustc 1.11.0-nightly (bb4a79b08 2016-06-15) x86_64-pc-windows-gnu</code>. Here's what I tried first:</p>\n\n<p><strong>main.c</strong></p>\n\n<pre><code>#include &lt;stdio.h&gt;\n\nint sum(int, int);\n\nint main()\n{\n    printf(\"Sum is %d.\\n\", sum(2, 3));\n    return 0;\n}\n</code></pre>\n\n<p><strong>sum.rs</strong></p>\n\n<pre><code>#![no_std]\n#![feature(libc)]\nextern crate libc;\n\n#[no_mangle]\npub extern \"C\" fn sum(x: libc::c_int, y: libc::c_int) -&gt; libc::c_int\n{\n    x + y\n}\n</code></pre>\n\n<p>Then I tried running:</p>\n\n<pre><code>rustc --crate-type=staticlib --emit=obj sum.rs\n</code></pre>\n\n<p>But got:</p>\n\n<pre><code>error: language item required, but not found: `panic_fmt`\nerror: language item required, but not found: `eh_personality`\nerror: language item required, but not found: `eh_unwind_resume`\nerror: aborting due to 3 previous errors\n</code></pre>\n\n<p>OK, so some of those errors are related to panic unwinding. I found out about a Rust compiler setting to remove unwinding support, <code>-C panic=abort</code>. Using that, the errors about <code>eh_personality</code> and <code>eh_unwind_resume</code> disappeared, but Rust still required the <code>panic_fmt</code> function. So I found its signature at <a href=\"https://doc.rust-lang.org/core/panicking/fn.panic_fmt.html\" rel=\"noreferrer\">the Rust docs</a>, then I added that to the file:</p>\n\n<p><strong>sum.rs</strong></p>\n\n<pre><code>#![no_std]\n#![feature(lang_items, libc)]\nextern crate libc;\n\n#[lang = \"panic_fmt\"]\npub fn panic_fmt(_fmt: core::fmt::Arguments, _file_line: &amp;(&amp;'static str, u32)) -&gt; !\n    { loop { } }\n\n#[no_mangle]\npub extern \"C\" fn sum(x: libc::c_int, y: libc::c_int) -&gt; libc::c_int\n{\n    x + y\n}\n</code></pre>\n\n<p>Then, I tried building the whole program again:</p>\n\n<pre><code>rustc --crate-type=staticlib --emit=obj -C panic=abort sum.rs\ngcc -c main.c\ngcc sum.o main.o -o program.exe\n</code></pre>\n\n<p>But got:</p>\n\n<pre><code>sum.o:(.text+0x3e): undefined reference to `core::panicking::panic::h907815f47e914305'\ncollect2.exe: error: ld returned 1 exit status\n</code></pre>\n\n<p>The panic function reference is probably from a overflow check in the addition at <code>sum()</code>. That's all fine and desirable. According to <a href=\"https://doc.rust-lang.org/core/panicking/index.html\" rel=\"noreferrer\">this page</a>, I need to define my own panic function to work with libcore. But I can't find instructions on how to do so: the function for which I am supposed to provide a definition is called <code>panic_impl</code> in the docs, however the linker is complaining about <code>panic::h907815f47e914305</code>, whatever that's supposed to be.</p>\n\n<p>Using <code>objdump</code>, I was able to find the missing function's name, and hacked that into C:</p>\n\n<p><strong>main.c</strong></p>\n\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint sum(int, int);\n\nvoid _ZN4core9panicking5panic17h907815f47e914305E()\n{\n    printf(\"Panic!\\n\");\n    abort();\n}\n\nint main()\n{\n    printf(\"Sum is %d.\\n\", sum(2, 3));\n    return 0;\n}\n</code></pre>\n\n<p>Now, the whole program compiles and links successfully, and even works correctly.</p>\n\n<p>If I then try using arrays in Rust, another kind of panic function (for bounds checks) is generated, so I need to provide a definition for that too. Whenever I try something more complex in Rust, new errors arise. And, by the way, <code>panic_fmt</code> seems to never be called, even when a panic does happen.</p>\n\n<p>Anyways, this all seems very unreliable, and contradicts every information I could find via Google on the matter. There's <a href=\"https://www.reddit.com/r/rust/comments/3kjjhz/linker_error_while_crosscompiling_with_no_std/\" rel=\"noreferrer\">this</a>, but I tried to follow the instructions to no avail.</p>\n\n<p>It seems such a simple and fundamental thing, but I can't get it to work the right way. Perhaps it's a Rust nightly bug? But I need <code>libc</code> and <code>lang_items</code>. How can I generate a Rust object file/static library without unwinding or panic support? It should probably just execute an illegal processor instruction when it wants to panic, or call a panic function I can safely define in C.</p>\n"}, {"tags": ["rust", "package-managers", "rust-cargo"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1466445999, "post_id": 37928591, "comment_id": 63308728, "body": "<code>multirust update</code>. Or take a look at Rustup, but I don&#39;t yet have any experience with that."}, {"owner": {"reputation": 178, "user_id": 5483301, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/RmIZk.jpg?s=128&g=1", "display_name": "Isan Rivkin", "link": "https://stackoverflow.com/users/5483301/isan-rivkin"}, "edited": false, "score": 1, "creation_date": 1541766108, "post_id": 37928591, "comment_id": 93338021, "body": "<code>multirust</code> is deprecated, use <a href=\"https://github.com/rust-lang-nursery/rustup.rs\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/rustup.rs</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 70, "last_activity_date": 1533399980, "last_edit_date": 1533399980, "creation_date": 1466445056, "answer_id": 37928782, "question_id": 37928591, "link": "https://stackoverflow.com/questions/37928591/is-there-a-command-to-update-cargo-to-the-latest-official-release/37928782#37928782", "title": "Is there a command to update Cargo to the latest official release?", "body": "<p>You should update <code>rustc</code> and <code>cargo</code> based on how you installed it. If you used rustup, a <code>rustup update</code> should suffice. If you used a package manager or a binary installer, check those sources for an update.</p>\n\n<p><code>rustc</code> and <code>cargo</code> are shipped together, but that doesn't mean that their versions need to match. In fact, they <em>do not</em> match until Rust 1.26.0, when <a href=\"https://github.com/rust-lang/cargo/commit/cc971ee517353e33428f33ccf329a6a42c2d7e33\" rel=\"noreferrer\">the Cargo binary was changed to print the Rust version</a>.</p>\n\n<p>I have the same versions of <code>rustc</code> and <code>cargo</code> that you do; those are the ones that correspond to the Rust 1.9 release. There's nothing to worry about.</p>\n\n<hr>\n\n<p>If you <em>really</em> want to, you can <a href=\"https://github.com/rust-lang/cargo#installing-cargo\" rel=\"noreferrer\">download a nightly version of Cargo</a> or <a href=\"https://github.com/rust-lang/cargo#compiling-from-source\" rel=\"noreferrer\">compile your own</a>. As long as your version exists in your <code>PATH</code> before the older one, it will be used.</p>\n\n<p>I used to do this with my local Rust builds in order to have a version of Cargo at all, although <a href=\"http://rustup.rs/\" rel=\"noreferrer\">rustup</a> now automatically uses the <code>cargo</code> from the most recent stable version when there isn't one available in the current toolchain, which is nice.</p>\n"}, {"tags": [], "owner": {"reputation": 40442, "user_id": 15985, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/fb915f0b3a0a397891f4fd6dab6c2ac8?s=128&d=identicon&r=PG", "display_name": "Thomas Bratt", "link": "https://stackoverflow.com/users/15985/thomas-bratt"}, "is_accepted": false, "score": 45, "last_activity_date": 1533403887, "last_edit_date": 1533403887, "creation_date": 1533399220, "answer_id": 51687419, "question_id": 37928591, "link": "https://stackoverflow.com/questions/37928591/is-there-a-command-to-update-cargo-to-the-latest-official-release/51687419#51687419", "title": "Is there a command to update Cargo to the latest official release?", "body": "<p>TL;DR version: <code>rustup</code> will update both Rust and Cargo:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc --version\nrustc 1.27.2 (58cc626de 2018-07-18)\n$ cargo --version\ncargo 1.27.0 (1e95190e5 2018-05-27)\n\n$ rustup update stable\ninfo: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\ninfo: latest update on 2018-08-02, rust version 1.28.0 (9634041f0 2018-07-30)\ninfo: downloading component 'rustc'\ninfo: downloading component 'rust-std'\ninfo: downloading component 'cargo'\ninfo: downloading component 'rust-docs'\ninfo: removing component 'rustc'\ninfo: removing component 'rust-std'\ninfo: removing component 'cargo'\ninfo: removing component 'rust-docs'\ninfo: installing component 'rustc'\ninfo: installing component 'rust-std'\ninfo: installing component 'cargo'\ninfo: installing component 'rust-docs'\n\n$ rustc --version\nrustc 1.28.0 (9634041f0 2018-07-30)\n$ cargo --version\ncargo 1.28.0 (96a2c7d16 2018-07-13)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3381, "user_id": 701589, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/3135ed8ab2f59a3d651d785a574fe279?s=128&d=identicon&r=PG", "display_name": "Pahlevi Fikri Auliya", "link": "https://stackoverflow.com/users/701589/pahlevi-fikri-auliya"}, "is_accepted": false, "score": 2, "last_activity_date": 1605491116, "last_edit_date": 1605491116, "creation_date": 1605481412, "answer_id": 64850697, "question_id": 37928591, "link": "https://stackoverflow.com/questions/37928591/is-there-a-command-to-update-cargo-to-the-latest-official-release/64850697#64850697", "title": "Is there a command to update Cargo to the latest official release?", "body": "<p>You also need to change the default:</p>\n<pre class=\"lang-none prettyprint-override\"><code>&gt; rustc --version\nrustc 1.41.0 (5e1a79984 2020-01-27)\n\n&gt; rustup update stable\n\n&gt; rustc --version\nrustc 1.41.0 (5e1a79984 2020-01-27)\n\n&gt; rustup default stable-x86_64-apple-darwin\n\n&gt; rustc --version\nrustc 1.47.0 (18bf6b4f0 2020-10-07)\n</code></pre>\n"}], "owner": {"reputation": 2379, "user_id": 5045375, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/17ed0af705e0449fe49b74d8814a8ce2?s=128&d=identicon&r=PG", "display_name": "Filip Allberg", "link": "https://stackoverflow.com/users/5045375/filip-allberg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 19085, "favorite_count": 3, "accepted_answer_id": 37928782, "answer_count": 3, "score": 52, "last_activity_date": 1605491116, "creation_date": 1466444293, "last_edit_date": 1533400013, "question_id": 37928591, "link": "https://stackoverflow.com/questions/37928591/is-there-a-command-to-update-cargo-to-the-latest-official-release", "title": "Is there a command to update Cargo to the latest official release?", "body": "<p>I seem to have diverging versions of <code>rustc</code> and <code>cargo</code> (I think), </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc -V\nrustc 1.9.0 (e4e8b6668 2016-05-18)\n$ cargo -V\ncargo 0.10.0-nightly (10ddd7d 2016-04-08)\n</code></pre>\n\n<p>Is there a command akin to </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>pip install --upgrade pip \n</code></pre>\n\n<p>for upgrading <code>cargo</code>? I.e. something like</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo install --upgrade cargo\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466437443, "post_id": 37926546, "comment_id": 63303829, "body": "I&#39;d like to point that in this specific case, you should be able to write <code>process((x, y, pixel): (u32, u32, &amp;mut X))</code>. The outer <code>&amp;mut</code> (on both sides) is useless here."}, {"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466438281, "post_id": 37926546, "comment_id": 63304393, "body": "Does not compile without it due to type mismatch: <code>src\\main.rs:72:33: 72:34 note: expected type (u32, u32, &amp;mut image::Luma&lt;u8&gt;) src\\main.rs:72:33: 72:34 note:    found type &amp;mut (u32, u32, &amp;mut _)</code>  I also can&#39;t deference at the call site because <code>cannot move out of borrowed content</code>. Would work if tuple third element wasn&#39;t a borrow."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466441418, "post_id": 37926546, "comment_id": 63306328, "body": "Damned... that a sticky situation you found yourself in!"}, {"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466442898, "post_id": 37926546, "comment_id": 63307137, "body": "Just tried to use <a href=\"https://github.com/PistonDevelopers/image\" rel=\"nofollow noreferrer\">github.com/PistonDevelopers/image</a> with their example 6.2 (drawing Julia fractal) and extract calculation to separate function. ... The more I fall, the more I learn. Anyways, thanks for help!"}], "answers": [{"tags": [], "owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "is_accepted": false, "score": 0, "last_activity_date": 1466438383, "last_edit_date": 1466438383, "creation_date": 1466437296, "answer_id": 37926547, "question_id": 37926546, "link": "https://stackoverflow.com/questions/37926546/how-to-destructure-to-reference-to-value-instead-of-reference-to-borrow/37926547#37926547", "title": "How to destructure to reference to value instead of reference to borrow?", "body": "<pre><code>fn process(&amp;mut (x,y, &amp;mut ref mut pixel): &amp;mut (u32,u32,&amp;mut image::Luma&lt;u8&gt;)) {\n</code></pre>\n\n<p>This pattern <code>&amp;mut (x,y, &amp;mut ref mut pixel)</code> makes the <code>pixel</code> mutable reference to borrowed value. </p>\n\n<p><code>&amp;mut</code> in <code>&amp;mut ref mut pixel</code> unwraps the value from the borrow before <code>ref mut</code> makes the <code>pixel</code> reference to it.</p>\n\n<p>I found this solution after looking here: <a href=\"http://rustbyexample.com/flow_control/match/destructuring/destructure_pointers.html\" rel=\"nofollow\">http://rustbyexample.com/flow_control/match/destructuring/destructure_pointers.html</a></p>\n"}], "owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 656, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1466438383, "creation_date": 1466437296, "question_id": 37926546, "link": "https://stackoverflow.com/questions/37926546/how-to-destructure-to-reference-to-value-instead-of-reference-to-borrow", "title": "How to destructure to reference to value instead of reference to borrow?", "body": "<p>How to rewrite what follows to have it all in one line, in function signature:</p>\n\n<pre><code>fn process(tup: &amp;mut (u32,u32,&amp;mut image::Luma&lt;u8&gt;)) {\n  let &amp;mut (x,y, _) = tup;\n  let ref mut pixel = *tup.2;\n</code></pre>\n\n<p>I got as far as:</p>\n\n<pre><code>fn process(&amp;mut (x,y, ref mut pixel): &amp;mut (u32,u32,&amp;mut image::Luma&lt;u8&gt;)) {\n</code></pre>\n\n<p>but that's not exact equivalent because I no longer can do:</p>\n\n<pre><code>*pixel = image::Luma([i as u8]);\n</code></pre>\n\n<p>inside the function, that I could do when I had temporary <code>tup</code> binding.</p>\n\n<p>Fails with:</p>\n\n<pre><code>src\\main.rs:43:14: 43:36 note: expected type `&amp;mut image::Luma&lt;u8&gt;`\nsrc\\main.rs:43:14: 43:36 note:    found type `image::Luma&lt;u8&gt;`\n</code></pre>\n\n<p>I also tried:</p>\n\n<pre><code>process(&amp;mut (x, y, pixel): &amp;mut (u32,u32,&amp;mut image::Luma&lt;u8&gt;))\n</code></pre>\n\n<p>but this fails with:</p>\n\n<pre><code>src\\main.rs:23:12: 23:29 error: cannot move out of borrowed content [E0507]\nsrc\\main.rs:23 fn process(&amp;mut (x,y, pixel): &amp;mut (u32,u32,&amp;mut image::Luma&lt;u8&gt;)) {\n                          ^~~~~~~~~~~~~~~~~\nsrc\\main.rs:23 fn process(&amp;mut (x,y, pixel): &amp;mut (u32,u32,&amp;mut image::Luma&lt;u8&gt;)) {\n                                     ^~~~~\n</code></pre>\n\n<p>Basically what I need is pattern that can destructure reference to borrowed value from a borrow.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466436725, "post_id": 37925198, "comment_id": 63303284, "body": "@Shepmaster Sorry. I&#39;ll trim down the question. And create new one for &quot;bonus content&quot; with self-response since I already got it."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466436814, "post_id": 37925198, "comment_id": 63303348, "body": "You really do not need the leading <code>&amp;mut</code> here, I assure you. You are complicating the signature way too much :x Just dereference at the call site, your tuple is <code>Copy</code> anyway."}], "answers": [{"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 4, "last_activity_date": 1466433961, "creation_date": 1466433961, "answer_id": 37925446, "question_id": 37925198, "link": "https://stackoverflow.com/questions/37925198/what-does-mean-in-type-errors-in-rust/37925446#37925446", "title": "What does _ mean in type errors in Rust?", "body": "<p>The <code>_</code> is just a placeholder that could mean anything, and helps to clarify the error message.</p>\n\n<p>In this case, it's saying it was expecting an <code>image::Luma&lt;u8&gt;</code>, but it actually found a mutable reference (<code>&amp;mut</code>) to <em>something</em>.  It doesn't matter what that something is; it <code>&amp;mut &lt;something&gt;</code> can never be matched with <code>image::Luma&lt;i&gt;</code>.</p>\n\n<p>If instead it said <code>...found type &amp;mut (u32, u32, &amp;mut T: SomeTrait)</code> or similar, I think it would be harder to zoom in to the immediate problem.</p>\n\n<p>You can't pass a reference to a function that expects an copied (or moved) full object instead.</p>\n"}, {"comments": [{"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466434759, "post_id": 37925519, "comment_id": 63301927, "body": "Can you try to answer bonus question? How to avoid <code>*tup.2</code> and put it all in function signature?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466434924, "post_id": 37925519, "comment_id": 63302042, "body": "@KamilSzot: <code>process(&amp;mut (x, y, pixel): &amp;mut (u32,u32,&amp;mut image::Luma&lt;u8&gt;))</code> I would expect. It&#39;s a pattern matching game."}, {"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466435118, "post_id": 37925519, "comment_id": 63302153, "body": "Tried that but &quot;cannot move out of borrowed content&quot;."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466435225, "post_id": 37925519, "comment_id": 63302227, "body": "@KamilSzot: Ah... why do you have that <code>&amp;mut</code> in front by the way? It&#39;s unused here. Shouldn&#39;t the signature be <code>process((x, y, pixel): (u32, u32, &amp;mut image::Luma&lt;u8&gt;))</code> ?"}, {"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466436009, "post_id": 37925519, "comment_id": 63302810, "body": "I need it. Without it, rust complains about mismatch between (_, _, _) and &amp;mut (u32, u32, &amp;mut image::Luma&lt;u8&gt;)"}, {"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466436112, "post_id": 37925519, "comment_id": 63302878, "body": "Basically what I need is pattern that can destructure reference to borrowed value from a borrow. I could do <code>process(&amp;mut (x,y, ref mut pixel): &amp;mut (u32,u32,&amp;mut image::Luma&lt;u8&gt;))</code> but then I had to do <code>**pixel = image::Luma([i as u8]);</code> instead of <code>*pixel = image::Luma([i as u8]);</code>"}, {"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466436232, "post_id": 37925519, "comment_id": 63302965, "body": "I tried to cram <code>*</code> somewhere into the signature but rust doesn&#39;t seem to like it."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466436608, "post_id": 37925519, "comment_id": 63303209, "body": "@KamilSzot: Can you not dereference at the call site? =&gt; <code>process(*my_tuple)</code> instead of <code>process(my_tuple)</code> and then all worries go away!"}, {"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466436648, "post_id": 37925519, "comment_id": 63303234, "body": "Hah! Got it! <code>fn process(&amp;mut (x,y, &amp;mut ref mut pixel): &amp;mut (u32,u32,&amp;mut image::Luma&lt;u8&gt;)) {</code>"}, {"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466437650, "post_id": 37925519, "comment_id": 63303968, "body": "Seems good but when trying to dereference at the call site I&#39;m getting &quot;cannot move out of borrowed content&quot; there."}, {"owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "edited": false, "score": 0, "creation_date": 1466437703, "post_id": 37925519, "comment_id": 63304002, "body": "I moved my &quot;bonus question&quot; there: <a href=\"http://stackoverflow.com/questions/37926546/how-to-destructure-to-reference-to-value-instead-of-reference-to-borrow\" title=\"how to destructure to reference to value instead of reference to borrow\">stackoverflow.com/questions/37926546/&hellip;</a>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1466436411, "last_edit_date": 1466436411, "creation_date": 1466434185, "answer_id": 37925519, "question_id": 37925198, "link": "https://stackoverflow.com/questions/37925198/what-does-mean-in-type-errors-in-rust/37925519#37925519", "title": "What does _ mean in type errors in Rust?", "body": "<p>In Rust, the <code>_</code> identifier is used when the name does not matter. This occurs in a few situations:</p>\n\n<ul>\n<li><code>let _ = ...;</code> is used to ignore the result of an expression (only necessary when said result is marked with the <code>#[must_use]</code> attribute)</li>\n<li>In types, <code>_</code> is used to <em>elide</em> types (either because you prefer to let the compiler infer it or because the compiler judges it does not matter)</li>\n</ul>\n\n<p>Thus, in your case, the compiler has elided the type because it does not matter, so that you can focus on the specific reason of the error. It may be confusing, at first, but once used to it it's actually helpful, especially when types are hairy (very large).</p>\n\n<hr>\n\n<p>The error is simple: you are mistaking references and values.</p>\n\n<p>Your original signature expects: <code>&amp;(u32, u32, Type)</code> but you pass <code>&amp;mut (u32, u32, &amp;mut Type)</code>.</p>\n\n<p>The difference in mutability does not matter (in this direction), however a <code>&amp;mut Type</code> and a <code>Type</code> have very different memory structure and are not interchangeable.</p>\n"}], "owner": {"reputation": 15352, "user_id": 166921, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2af8cc3459a9a18e4376aaf0f8151bf5?s=128&d=identicon&r=PG", "display_name": "Kamil Szot", "link": "https://stackoverflow.com/users/166921/kamil-szot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1429, "favorite_count": 1, "accepted_answer_id": 37925446, "answer_count": 2, "score": 4, "last_activity_date": 1466437167, "creation_date": 1466433231, "last_edit_date": 1466437167, "question_id": 37925198, "link": "https://stackoverflow.com/questions/37925198/what-does-mean-in-type-errors-in-rust", "title": "What does _ mean in type errors in Rust?", "body": "<p>I received this error:</p>\n\n<pre><code>error: mismatched types [E0308]\n                         process(s);\n                                 ^\nhelp: run `rustc --explain E0308` to see a detailed explanation\nnote: expected type `&amp;(u32, u32, image::Luma&lt;u8&gt;)`\nnote:    found type `&amp;mut (u32, u32, &amp;mut _)`\n</code></pre>\n\n<p>but I do not understand what the <code>_</code> means.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1466425787, "post_id": 37921497, "comment_id": 63295314, "body": "It is generally best to present a <a href=\"http://stackoverflow.com/help/mcve\">MCVE</a> (Minimal Complete Verifiable Example). There seems to be a lot of code in the excerpt you present that does not contribute to the error, by removing it you would (1) learn yourself better where the error is located and (2) make it more obvious to would-be answerers. Finally, once sufficiently reduced, it would be a prime candidate for including directly within the question: links are a supplement, they should NEVER be necessary."}, {"owner": {"reputation": 1, "user_id": 6262222, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4e81102f97084d69b87301918b98b8e?s=128&d=identicon&r=PG&f=1", "display_name": "Wotan", "link": "https://stackoverflow.com/users/6262222/wotan"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466464230, "post_id": 37921497, "comment_id": 63316801, "body": "Thank you for helping me fix my post. The problem is clearly in these two lines, at 14 and 39, I have no idea if it is a wrong type, if Piston changed with updates and now the syntax is different or whatever."}], "answers": [{"tags": [], "owner": {"reputation": 61, "user_id": 3920439, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e188dbadbd868a4b49e7d553e3fa6649?s=128&d=identicon&r=PG&f=1", "display_name": "ThePianoDentist", "link": "https://stackoverflow.com/users/3920439/thepianodentist"}, "is_accepted": false, "score": 0, "last_activity_date": 1467581553, "last_edit_date": 1467581553, "creation_date": 1467580992, "answer_id": 38174455, "question_id": 37921497, "link": "https://stackoverflow.com/questions/37921497/error-with-trait-bound-on-gfx-coreresources/38174455#38174455", "title": "Error with trait bound on gfx_core::Resources", "body": "<p>I was getting an identical compile error on very similar code and setting</p>\n\n<pre><code>gfx_device_gl = \"=0.9.0\"\n</code></pre>\n\n<p>in Cargo.toml caused it to stop happening for me. Previously, I was using <code>0.11.0</code>.</p>\n\n<p>After changing this, I get other (I believe separate/independent) compilation errors, but perhaps this solves your predicament.</p>\n"}], "owner": {"reputation": 1, "user_id": 6262222, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4e81102f97084d69b87301918b98b8e?s=128&d=identicon&r=PG&f=1", "display_name": "Wotan", "link": "https://stackoverflow.com/users/6262222/wotan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 190, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1467581553, "creation_date": 1466422414, "last_edit_date": 1466427206, "question_id": 37921497, "link": "https://stackoverflow.com/questions/37921497/error-with-trait-bound-on-gfx-coreresources", "title": "Error with trait bound on gfx_core::Resources", "body": "<p>I have a problem with this code:</p>\n\n<pre><code>extern crate piston_window;\nextern crate find_folder;\nextern crate gfx_graphics;\nextern crate gfx;\nextern crate gfx_device_gl;\n\nuse piston_window::*;\nuse gfx_device_gl::{Resources, Output, CommandBuffer};\nuse gfx_graphics::GfxGraphics;\n\nstruct Object {\n    x: f64,\n    y: f64,\n    sprite: Option&lt;Texture&lt;Resources&gt;&gt;,\n}\n\nimpl Object {\n    fn new() -&gt; Object {\n        Object {\n            x: 0.0,\n            y: 0.0,\n            sprite: None,\n        }\n    }\n    fn mov(&amp;mut self, x: f64, y: f64) {\n        self.x = x;\n        self.y = y;\n    }\n    fn render(&amp;self,\n              g: &amp;mut GfxGraphics&lt;Resources, CommandBuffer&lt;Resources&gt;, Output&gt;,\n              view: math::Matrix2d) {\n        let square = rectangle::square(0.0, 0.0, 100.0);\n        let red = [1.0, 0.0, 0.0, 1.0];\n        match self.sprite {\n            None =&gt; {\n                rectangle(red,\n                          square,\n                          view.trans(self.x, self.y).trans(-50.0, -50.0),\n                          g);\n            }\n            Some(ref sprite) =&gt; {\n                image(sprite, view.trans(self.x, self.y).trans(-50.0, -50.0), g);\n            }\n        }\n    }\n    fn setSprite(&amp;mut self, sprite: Texture&lt;Resources&gt;) {\n        self.sprite = Some(sprite);\n    }\n}\n\nstruct Game {\n    position: f64,\n    one: bool,\n    two: bool,\n    three: bool,\n    four: bool,\n    five: bool,\n    six: bool,\n    seven: bool,\n    eight: bool,\n    nine: bool,\n    player: Object,\n}\nimpl Game {\n    fn new() -&gt; Game {\n        Game {\n            rotation: 0.0,\n            player: Object::new(),\n            one: false,\n            two: false,\n            three: false,\n            four: false,\n            five: false,\n            six: false,\n            seven: false,\n            eight: false,\n            nine: false,\n        }\n    }\n    fn on_load(&amp;mut self, w: &amp;PistonWindow) {\n        let assets = find_folder::Search::ParentsThenKids(3, 3) //Cerca la cartella assets\n        .for_folder(\"assets\").unwrap();\n        let tris = assets.join(\"x.png\");\n        let tris = Texture::from_path(&amp;mut *w.factory, &amp;tris, Flip::None, &amp;TextureSettings::new())\n            .unwrap();\n        self.player.setSprite(tris);\n    }\n    fn on_update(&amp;mut self, upd: UpdateArgs) {\n        self.position += 3.0 * upd.dt;\n        if self.one {\n            self.player.mov(100.0, 100.0);\n        }\n        if self.two {\n            self.player.mov(100.0, 200.0);\n        }\n        if self.three {\n            self.player.mov(100.0, 300.0);\n        }\n        if self.four {\n            self.player.mov(200.0, 100.0);\n        }\n        if self.five {\n            self.player.mov(300.0, 100.0);\n        }\n        if self.six {\n            self.player.mov(200.0, 200.0);\n        }\n        if self.seven {\n            self.player.mov(200.0, 300.0);\n        }\n        if self.eight {\n            self.player.mov(300.0, 200.0);\n        }\n        if self.nine {\n            self.player.mov(300.0, 300.0);\n        }\n    }\n\n    fn on_draw(&amp;mut self, ren: RenderArgs, e: PistonWindow) {\n        e.draw_2d(|c, g| {\n            clear([0.0, 0.0, 0.0], g);\n            let center = c.transf((ren.width / 2) as f64, (ren.eight / 2) as f64);\n            self.player.render(g, center);\n        });\n    }\n\n    fn on_input(&amp;mut self, inp: Input) {\n        match inp {\n            Input::Press(but) =&gt; {\n                match but {\n                    Button::Keyboard(Key::D1) =&gt; {\n                        self.one = true;\n                    }\n                    Button::Keyboard(Key::D2) =&gt; {\n                        self.two = true;\n                    }\n                    Button::Keyboard(Key::D3) =&gt; {\n                        self.three = true;\n                    }\n                    Button::Keyboard(Key::D4) =&gt; {\n                        self.four = true;\n                    }\n                    Button::Keyboard(Key::D5) =&gt; {\n                        self.five = true;\n                    }\n                    Button::Keyboard(Key::D6) =&gt; {\n                        self.six = true;\n                    }\n                    Button::Keyboard(Key::D7) =&gt; {\n                        self.seven = true;\n                    }\n                    Button::Keyboard(Key::D8) =&gt; {\n                        self.eight = true;\n                    }\n                    Button::Keyboard(Key::D9) =&gt; {\n                        self.nine = true;\n                    }\n                    _ =&gt; {}\n                }\n            }\n        }\n    }\n}\n\nfn main() {\n\n    let title = \"Tris\"; //Titolo della finestra\n    let mut window: PistonWindow = WindowSettings::new(title, [800, 600]) //Crea la finestra\n        .exit_on_esc(true)\n        .build()\n        .unwrap_or_else(|e| { panic!(\"Failed to build PistonWindow: {}\", e) });\n\n    let mut game = Game::new();\n    game.on_load(&amp;window);\n\n    let assets = find_folder::Search::ParentsThenKids(3, 3) //Cerca la cartella assets\n        .for_folder(\"assets\").unwrap();\n    let tris = assets.join(\"tris.png\");\n    let tris = Texture::from_path(&amp;mut window.factory,\n                                  &amp;tris,\n                                  Flip::None,\n                                  &amp;TextureSettings::new())\n        .unwrap();\n\n    let x = assets.join(\"x.png\");\n    let x = Texture::from_path(&amp;mut window.factory, &amp;x, Flip::None, &amp;TextureSettings::new())\n        .unwrap();\n\n    let o = assets.join(\"o.png\");\n    let o = Texture::from_path(&amp;mut window.factory, &amp;o, Flip::None, &amp;TextureSettings::new())\n        .unwrap();\n\n\n    while let Some(e) = window.next() {\n        // Inizia il ciclo e disegna la roba sotto\n        window.draw_2d(&amp;e, |c, g| {\n            clear([0.0, 0.0, 0.0, 0.0], g);\n            image(&amp;tris, c.transform, g);\n        });\n\n        match e.event {\n            Some(Event::Update(upd)) =&gt; {\n                game.on_update(upd);\n            }\n            Some(Event::Render(ren)) =&gt; {\n                game.on_draw(ren, e);\n            }\n            Some(Event::Input(inp)) =&gt; {\n                game.on_input(inp);\n            }\n            _ =&gt; {}\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=aaf7bae8313c7116a1ffd5eb6c6a3a05&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">(Playground)</a></p>\n\n<p>When I try to compile it, it says the error: </p>\n\n<blockquote>\n<pre><code>the trait bound `gfx_device_gl::Resources: gfx_core::Resources` is not\nsatisfied [E0277]\n     src/main.rs:14 sprite: Option&lt;Texture&lt;Resources&gt;&gt;,\n</code></pre>\n</blockquote>\n\n<p>And the second error: </p>\n\n<blockquote>\n<pre><code>error: the trait bound `gfx_device_gl::Resources: gfx_core::Resources`\nis not satisfied [E0277]\n    src/main.rs:39     fn setSprite(&amp;mut self, sprite: Texture&lt;Resources&gt;) {\n    src/main.rs:40         self.sprite = Some(sprite);\n    src/main.rs:41     }\n</code></pre>\n</blockquote>\n\n<p>How should I fix it? I looked online but found nothing about it. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1466414577, "post_id": 37918670, "comment_id": 63288457, "body": "If you&#39;re on Unix,I think you can use <code>to_raw_fd()</code> to get the file descriptor you want, and <code>from_raw_fd()</code> to construct a <code>Stdio</code> to give to <code>Command</code>."}, {"owner": {"reputation": 10672, "user_id": 321731, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/88e60659e997d36af3ff348b3251e1a6?s=128&d=identicon&r=PG", "display_name": "tshepang", "link": "https://stackoverflow.com/users/321731/tshepang"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1466497021, "post_id": 37918670, "comment_id": 63327148, "body": "Looked at how that would work, and found meself in a maze"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1466510153, "post_id": 37918670, "comment_id": 63335936, "body": "Looking more closely, I agree I don&#39;t think it&#39;s directly supported.  A brute-force way would be to use the shell (ie install of spawing <code>my_prog foo</code>, spawn <code>sh -c &#39;my_prog foo 2&gt;&amp;1&#39;</code>, though with some care for required quoting."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471437033, "post_id": 38989553, "comment_id": 65344870, "body": "This answer only works on UNIX-like systems and is not cross-platform. Note the <b>unix</b> in the type name: <code>std::os::unix::io::FromRawFd</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1471437192, "post_id": 38989553, "comment_id": 65344979, "body": "It would also be good to show a <b>complete</b> example where stderr and stdout are interleaved."}, {"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471470665, "post_id": 38989553, "comment_id": 65365332, "body": "I don&#39;t see anything aggressive about &quot;what&#39;s the source of confusion&quot;. I was just honestly asking. And yes, this solution is unix only. Maybe one could write a crate that abstracts this away for other platforms."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1471473949, "post_id": 38989553, "comment_id": 65366473, "body": "I believe you that it wasn&#39;t intended as aggressive, but I wanted you to know that it could be construed as such. I&#39;d encourage you to highlight that the answer is UNIX-only when you add the example of it working!"}], "tags": [], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "is_accepted": false, "score": -1, "last_activity_date": 1471436908, "last_edit_date": 1471436908, "creation_date": 1471415488, "answer_id": 38989553, "question_id": 37918670, "link": "https://stackoverflow.com/questions/37918670/how-to-interleave-stderr-and-stdin-to-a-stdprocesscommand/38989553#38989553", "title": "How to interleave stderr and stdin to a std::process::Command?", "body": "<p>What's the source of confusion? You can create a <code>Stdio</code> object with <a href=\"https://doc.rust-lang.org/stable/std/os/unix/io/trait.FromRawFd.html\" rel=\"nofollow\"><code>FromRawFd::from_raw_fd</code></a>, giving it a file descriptor to use as <a href=\"https://doc.rust-lang.org/stable/std/process/struct.Stdio.html\" rel=\"nofollow\"><code>Stdio</code></a> implements the trait.</p>\n"}], "owner": {"reputation": 10672, "user_id": 321731, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/88e60659e997d36af3ff348b3251e1a6?s=128&d=identicon&r=PG", "display_name": "tshepang", "link": "https://stackoverflow.com/users/321731/tshepang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 220, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1471437133, "creation_date": 1466414061, "last_edit_date": 1471437133, "question_id": 37918670, "link": "https://stackoverflow.com/questions/37918670/how-to-interleave-stderr-and-stdin-to-a-stdprocesscommand", "title": "How to interleave stderr and stdin to a std::process::Command?", "body": "<p>Looking at <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow\">the API</a>, it doesn't look like interleaving (redirecting stdout to stderr in real time, or the other way around) is supported. How would I do it if needed?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1466432253, "post_id": 37914373, "comment_id": 63300120, "body": "See this discussion <a href=\"https://internals.rust-lang.org/t/parameterisation-over-mutability/235\" rel=\"nofollow noreferrer\">internals.rust-lang.org/t/parameterisation-over-mutability/2&zwnj;&#8203;35</a>,"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466425980, "post_id": 37914879, "comment_id": 63295428, "body": "Do you feel that this code is actually better? I wonder what the amount of repetition would need to be before I was like &quot;yeah, this makes it easier to understand&quot; ^_^"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466426283, "post_id": 37914879, "comment_id": 63295648, "body": "@Shepmaster Well, that <i>is</i> the issue.  If anyone comes up with a terser solution, I&#39;d love to see it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466426646, "post_id": 37914879, "comment_id": 63295886, "body": "What are the chances of someone outdoing you, the Master of Macros? ;-)"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466426684, "post_id": 37914879, "comment_id": 63295912, "body": "@Shepmaster Probably around about the same time Duke Nukem Forever comes out.  ... wait, hang on..."}, {"owner": {"reputation": 278, "user_id": 304635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/503aa4a09bb07b3cd37cbe24b629177c?s=128&d=identicon&r=PG", "display_name": "phooky", "link": "https://stackoverflow.com/users/304635/phooky"}, "edited": false, "score": 0, "creation_date": 1466436977, "post_id": 37914879, "comment_id": 63303467, "body": "The macro does look a little goofy, but the more I think about this the more I can see that a macro of some kind really is the right solution here. Thanks!"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1466398830, "creation_date": 1466398830, "answer_id": 37914879, "question_id": 37914373, "link": "https://stackoverflow.com/questions/37914373/how-to-avoid-redundant-code-when-implementing-index-and-indexmut-in-rust/37914879#37914879", "title": "How to avoid redundant code when implementing Index and IndexMut in Rust", "body": "<p>Unfortunately, this cuts across a few things Rust really isn't good at right now.  The cleanest solution I could come up with was this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! as_expr {\n    ($e:expr) =&gt; { $e };\n}\n\nmacro_rules! borrow_imm { ($e:expr) =&gt; { &amp;$e } }\nmacro_rules! borrow_mut { ($e:expr) =&gt; { &amp;mut $e } }\n\nmacro_rules! impl_index {\n    (\n        &lt;$idx_ty:ty&gt; for $ty:ty,\n        ($idx:ident) -&gt; $out_ty:ty,\n        $($body:tt)*\n    ) =&gt; {\n        impl ::std::ops::Index&lt;$idx_ty&gt; for $ty {\n            type Output = $out_ty;\n            fn index(&amp;self, $idx: $idx_ty) -&gt; &amp;$out_ty {\n                macro_rules! index_expr { $($body)* }\n                index_expr!(self, borrow_imm)\n            }\n        }\n\n        impl ::std::ops::IndexMut&lt;$idx_ty&gt; for $ty {\n            fn index_mut(&amp;mut self, $idx: $idx_ty) -&gt; &amp;mut $out_ty {\n                macro_rules! index_expr { $($body)* }\n                index_expr!(self, borrow_mut)\n            }\n        }\n    };\n}\n\nenum IndexType { A, B }\n\nstruct Indexable { a: u8, b: u8 }\n\nimpl_index! {\n    &lt;IndexType&gt; for Indexable,\n    (idx) -&gt; u8,\n    ($this:expr, $borrow:ident) =&gt; {\n        match idx {\n            IndexType::A =&gt; $borrow!($this.a),\n            IndexType::B =&gt; $borrow!($this.b),\n        }\n    }\n}\n\nfn main() {\n    let mut x = Indexable { a: 1, b: 2 };\n    x[IndexType::A] = 3;\n    println!(\"x {{ a: {}, b: {} }}\", x[IndexType::A], x[IndexType::B]);\n}\n</code></pre>\n\n<p>The short version is: we turn the body of <code>index</code>/<code>index_mut</code> into a macro so that we can substitute the name of a <em>different</em> macro that, given an expression, expands to <em>either</em> <code>&amp;expr</code> or <code>&amp;mut expr</code>.  We <em>also</em> have to re-capture the <code>self</code> parameter (using a different name) because <code>self</code> is <em>really weird</em> in Rust, and I gave up trying to make it work nicely.</p>\n"}], "owner": {"reputation": 278, "user_id": 304635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/503aa4a09bb07b3cd37cbe24b629177c?s=128&d=identicon&r=PG", "display_name": "phooky", "link": "https://stackoverflow.com/users/304635/phooky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 346, "favorite_count": 1, "accepted_answer_id": 37914879, "answer_count": 1, "score": 4, "last_activity_date": 1466426730, "creation_date": 1466394485, "last_edit_date": 1466426730, "question_id": 37914373, "link": "https://stackoverflow.com/questions/37914373/how-to-avoid-redundant-code-when-implementing-index-and-indexmut-in-rust", "title": "How to avoid redundant code when implementing Index and IndexMut in Rust", "body": "<p>At the moment, implementing the <code>std::ops::IndexMut</code> trait on a type in Rust requires that I also implement the <code>std::ops::Index</code> trait as well. The bodies of these implementations end up being virtually identical. For example:</p>\n\n<pre><code>use std::ops::{Index, IndexMut};\n\nenum IndexType {\n    A,\n    B,\n}\n\nstruct Indexable {\n    a: u8,\n    b: u8,\n}\n\nimpl Index&lt;IndexType&gt; for Indexable {\n    type Output = u8;\n    fn index&lt;'a&gt;(&amp;'a self, idx: IndexType) -&gt; &amp;'a u8 {\n        match idx {\n            IndexType::A =&gt; &amp;self.a,\n            IndexType::B =&gt; &amp;self.b,\n        }\n    }\n}\n\nimpl IndexMut&lt;IndexType&gt; for Indexable {\n    fn index_mut&lt;'a&gt;(&amp;'a mut self, idx: IndexType) -&gt; &amp;'a mut u8 {\n        match idx {\n            IndexType::A =&gt; &amp;mut self.a,\n            IndexType::B =&gt; &amp;mut self.b,\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>This works, and obviously for trivial types this isn't a serious problem, but for more complex types with more interesting indexing this quickly becomes laborious and error-prone. I'm scratching my head trying to find a way to unify this code, but nothing is jumping out at me, and yet I feel there has to/should be a way to do this without essentially having to copy and paste. Any suggestions? What am I missing?</p>\n"}, {"tags": ["qt", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1466375527, "post_id": 37912309, "comment_id": 63276880, "body": "Did you install Qt on your system? The <code>qmlrs</code> crate is just a binding, the library still needs to be installed."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466377412, "post_id": 37912309, "comment_id": 63277203, "body": "Did you follow the directions in the error message? <i>Perhaps you should add ...</i>"}], "answers": [{"tags": [], "owner": {"reputation": 1778, "user_id": 117220, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/6c5b9841f23e69b08f121b06df6ed1c8?s=128&d=identicon&r=PG", "display_name": "Petr Gladkikh", "link": "https://stackoverflow.com/users/117220/petr-gladkikh"}, "is_accepted": true, "score": 1, "last_activity_date": 1526817937, "creation_date": 1526817937, "answer_id": 50434667, "question_id": 37912309, "link": "https://stackoverflow.com/questions/37912309/failed-to-run-custom-build-command-for-qmlrs/50434667#50434667", "title": "Failed to run custom build command for qmlrs", "body": "<p>You should install a Qt's <code>-dev</code> package that provides the file. <a href=\"https://askubuntu.com/questions/374755/what-package-do-i-need-to-build-a-qt-5-cmake-application/724308#724308\">Here's a hint</a> how you can find relevant package using apt-file (in case you are using Debian-derived distribution).\nIn your case the error message says\n<code>Perhaps you should add the directory containing Qt5Qml.pc</code>, so:</p>\n\n<pre><code>$ sudo apt install apt-file &amp;&amp; sudo apt update\n$ apt-file search Qt5Qml.pc\n&gt;&gt;&gt; qtdeclarative5-dev: /usr/lib/x86_64-linux-gnu/pkgconfig/Qt5Qml.pc\n$ sudo apt install qtdeclarative5-dev \n</code></pre>\n"}], "owner": {"reputation": 1417, "user_id": 2430555, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/OenB4.jpg?s=128&g=1", "display_name": "Pedro Paulo Amorim", "link": "https://stackoverflow.com/users/2430555/pedro-paulo-amorim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 273, "favorite_count": 0, "accepted_answer_id": 50434667, "answer_count": 1, "score": 2, "last_activity_date": 1526817937, "creation_date": 1466373933, "last_edit_date": 1466377508, "question_id": 37912309, "link": "https://stackoverflow.com/questions/37912309/failed-to-run-custom-build-command-for-qmlrs", "title": "Failed to run custom build command for qmlrs", "body": "<p>I'm trying to use the qmlrs Rust bindings to Qt, but I cannot compile. I've installed all dependencies.</p>\n\n<ul>\n<li>Rust 1.9.0</li>\n<li>Cargo 0.10.0-nightly (10ddd7d 2016-04-08)</li>\n</ul>\n\n<p>Cargo build log:</p>\n\n<pre><code>error: failed to run custom build command for `qmlrs v0.1.1`\n\nProcess didn't exit successfully: `/home/pedro/Documents/repositories\n/rust-sample/target/debug/build/qmlrs-e7d90e9b9c603e6f/build-script-\nbuild` (exit code: 101)\n\n--- stdout\n\ncargo:rustc-link-lib=static=qmlrswrapper\n\ncargo:rustc-link-lib=dylib=stdc++\n\ncargo:rustc-link-search=native=/home/pedro/.cargo/registry/src/github.com-\n88ac128001ac3a9a/qmlrs-0.1.1/ext/libqmlrswrapper/build\n\n\n--- stderr\n\nthread '&lt;main&gt;' panicked at 'called `Result::unwrap()` on an `Err` value: \n\"`\\\"pkg-config\\\" \\\"--libs\\\" \\\"--cflags\\\" \\\"Qt5Core Qt5Gui Qt5Qml \nQt5Quick\\\"` did not exit successfully: exit code: 1\\n--- stdout\\nPackage \nQt5Qml was not found in the pkg-config search path.\\nPerhaps you should \nadd the directory containing `Qt5Qml.pc\\'\\nto the PKG_CONFIG_PATH \nenvironment variable\\nNo package \\'Qt5Qml\\' found\\nPackage Qt5Quick was \nnot found in the pkg-config search path.\\nPerhaps you should add the \ndirectory containing `Qt5Quick.pc\\'\\nto the PKG_CONFIG_PATH environment \nvariable\\nNo package \\'Qt5Quick\\' found\\n\"', ../src/libcore/result.rs:746\n\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n"}, {"tags": ["closures", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466361671, "post_id": 37910514, "comment_id": 63273082, "body": "Short answer: pass the closure inline instead of storing it in a variable, there is a difference in how things are inferred. Potential duplicate of <a href=\"http://stackoverflow.com/q/36415348/155423\">stackoverflow.com/q/36415348/155423</a>. See also <a href=\"http://stackoverflow.com/q/37528394/155423\">stackoverflow.com/q/37528394/155423</a>"}, {"owner": {"reputation": 603, "user_id": 2625346, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ee31fca82dd2895bc5eb68ead5f973e?s=128&d=identicon&r=PG", "display_name": "Ivan Baidakou", "link": "https://stackoverflow.com/users/2625346/ivan-baidakou"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466367938, "post_id": 37910514, "comment_id": 63274884, "body": "Thank you!  Could you, please, provide some link to documentation? I would like to have an long answer, if it is possible.  Anyway, you advice works"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466369255, "post_id": 37910514, "comment_id": 63275240, "body": "All the documentation I know about I&#39;ve added to the linked duplicate :-)"}], "owner": {"reputation": 603, "user_id": 2625346, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ee31fca82dd2895bc5eb68ead5f973e?s=128&d=identicon&r=PG", "display_name": "Ivan Baidakou", "link": "https://stackoverflow.com/users/2625346/ivan-baidakou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1466369267, "answer_count": 0, "score": 0, "last_activity_date": 1466361583, "creation_date": 1466361199, "last_edit_date": 1466361583, "question_id": 37910514, "link": "https://stackoverflow.com/questions/37910514/expected-concrete-lifetime-found-bound-lifetime-parameter-when-storing-a-closur", "closed_reason": "Duplicate", "title": "Expected concrete lifetime, found bound lifetime parameter when storing a closure", "body": "<p>I would like to store a callback/closure, but when I try the following reduced code:</p>\n\n<pre><code>trait Stream&lt;F&gt; {\n    fn set_cb(&amp;mut self, f: F)\n        where F: Fn(&amp;Stream&lt;F&gt;);\n}\n\npub struct SomeStream&lt;F&gt; {\n    cb: Option&lt;F&gt;,\n}\n\nimpl&lt;F&gt; Stream&lt;F&gt; for SomeStream&lt;F&gt; {\n    fn set_cb(&amp;mut self, f: F)\n        where F: Fn(&amp;Stream&lt;F&gt;)\n    {\n        self.cb = Some(f)\n    }\n}\n\nfn main() {\n    let ss = SomeStream { cb: None };\n    let cb = |stream| {};\n    ss.set_cb(cb);\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre><code>error: type mismatch resolving `for&lt;'r&gt; &lt;[closure] as core::ops::FnOnce&lt;(&amp;'r Stream&lt;[closure]&gt; + 'r,)&gt;&gt;::Output == ()`:\n expected bound lifetime parameter ,\n    found concrete lifetime [E0271]\n         ss.set_cb(cb);\n            ^~~~~~\nhelp: see the detailed explanation for E0271\n\nerror: type mismatch: the type `[closure]` implements the trait `core::ops::Fn&lt;(_,)&gt;`, but the trait `for&lt;'r&gt; core::ops::Fn&lt;(&amp;'r Stream&lt;[closure]&gt; + 'r,)&gt;` is required (expected concrete lifetime, found bound lifetime parameter ) [E0281]\n         ss.set_cb(cb);\n            ^~~~~~\n</code></pre>\n\n<p>I didn't specify any lifetime parameters. What's wrong here? Should I wrap the closure in a <code>Box</code>? </p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 2, "creation_date": 1466412424, "post_id": 37906012, "comment_id": 63287159, "body": "This algorithm isn&#39;t correct; it only removes sets which are subsets of <i>earlier</i> sets in the vector.  Example: <a href=\"https://play.rust-lang.org/?gist=88e20f4386f3d5df3fe57fe3a1372dfa&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466412571, "post_id": 37906012, "comment_id": 63287237, "body": "Note: preserving order and avoid reallocations can be achieved by building a temporary (and pushing in order), then swap it with the original. It&#39;s unclear what&#39;s the tipping point though."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1466413776, "post_id": 37906012, "comment_id": 63288023, "body": "Is preserving the order a requirement here?  If not, I would sort the vector by size first, so that you can avoid having to do the subset check both ways around (and remove the right one)."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1466421158, "post_id": 37906012, "comment_id": 63292443, "body": "@ChrisEmerson Thanks! I won&#39;t fix my code in the question, but rather add a note that it&#39;s not correct. But great idea to fix it :)"}], "answers": [{"tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 2, "last_activity_date": 1466343496, "last_edit_date": 1466343496, "creation_date": 1466337910, "answer_id": 37907035, "question_id": 37906012, "link": "https://stackoverflow.com/questions/37906012/best-way-to-remove-elements-of-vec-depending-on-other-elements-of-the-same-vec/37907035#37907035", "title": "Best way to remove elements of Vec depending on other elements of the same Vec", "body": "<p>You can use a <code>while</code> loop instead of the <code>for</code>: </p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let arr: &amp;[&amp;[u8]] = &amp;[\n        &amp;[3],\n        &amp;[1,2,3],\n        &amp;[1,3],\n        &amp;[1,4],\n        &amp;[2,3]\n    ];\n\n    let mut v:Vec&lt;HashSet&lt;u8&gt;&gt; = arr.iter()\n        .map(|x| x.iter().cloned().collect())\n        .collect();\n\n    let mut pos = 0;\n    while pos &lt; v.len() {\n        let is_sub = v[pos+1..].iter().any(|x| v[pos].is_subset(x)) \n            || v[..pos].iter().any(|x| v[pos].is_subset(x));\n\n        if is_sub {\n            v.swap_remove(pos);\n        } else {\n            pos+=1;\n        }\n    }\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>There are no additional allocations.</p>\n\n<hr>\n\n<p>To avoid using <code>remove</code> and <code>swap_remove</code>, you can change the type of vector to <code>Vec&lt;Option&lt;HashSet&lt;u8&gt;&gt;&gt;</code>:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let arr: &amp;[&amp;[u8]] = &amp;[\n        &amp;[3],\n        &amp;[1,2,3],\n        &amp;[1,3],\n        &amp;[1,4],\n        &amp;[2,3]\n    ];\n\n    let mut v:Vec&lt;Option&lt;HashSet&lt;u8&gt;&gt;&gt; = arr.iter()\n        .map(|x| Some(x.iter().cloned().collect()))\n        .collect();\n\n    for pos in 0..v.len(){\n        let is_sub = match v[pos].as_ref() {\n            Some(chk) =&gt; \n                v[..pos].iter().flat_map(|x| x).any(|x| chk.is_subset(x)) \n                ||  v[pos+1..].iter().flat_map(|x| x).any(|x| chk.is_subset(x)),\n            None =&gt; false,\n        };\n\n        if is_sub { v[pos]=None };//Replace with None instead remove\n\n    }\n    println!(\"{:?}\", v);//[None, Some({3, 2, 1}), None, Some({1, 4}), None]\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1466344164, "post_id": 37907797, "comment_id": 63267837, "body": "Trusting that retain traverses the elements in order is not really an option :/ The second idea with setting the object inside the vector to a special value and iterating over it with a range-based loop is interesting. And at the sidenote: yes, it&#39;s not just a toy example (which is actually pretty performance critical) and I&#39;m already using <code>BitSet</code> :) Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1466345032, "post_id": 37907797, "comment_id": 63268088, "body": "@LukasKalbertodt <a href=\"http://doc.rust-lang.org/collections/vec/struct.Vec.html#method.retain\" rel=\"nofollow noreferrer\"><code>retain</code> says</a>: <i>This method operates in place and preserves the order of the retained elements.</i> I don&#39;t think that would be allowed to change."}, {"owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466347930, "post_id": 37907797, "comment_id": 63269008, "body": "@Shepmaster In my interpretation, that sentence is about the order after retaining, not about the order of accessing elements. However I can&#39;t imagine efficient implementation which would check the elements in a different order."}], "tags": [], "owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "is_accepted": false, "score": 1, "last_activity_date": 1466343224, "creation_date": 1466343224, "answer_id": 37907797, "question_id": 37906012, "link": "https://stackoverflow.com/questions/37906012/best-way-to-remove-elements-of-vec-depending-on-other-elements-of-the-same-vec/37907797#37907797", "title": "Best way to remove elements of Vec depending on other elements of the same Vec", "body": "<blockquote>\n  <ul>\n  <li>I need an additional vector with additional allocations</li>\n  </ul>\n</blockquote>\n\n<p>I wouldn't worry about that allocation, since the memory and runtime footprint of that allocation will be really small compared to the rest of your algorithm.</p>\n\n<blockquote>\n  <ul>\n  <li>Maybe there are more efficient ways than calling <code>swap_remove</code> often.</li>\n  <li>If I need to preserve order, I can't use <code>swap_remove,</code> but have to use <code>remove</code> which is slow</li>\n  </ul>\n</blockquote>\n\n<p>I'd change <code>to_delete</code> from <code>Vec&lt;usize&gt;</code> to <code>Vec&lt;bool&gt;</code> and just mark whether a particular hashmap should be removed. You can then use the <a href=\"https://static.rust-lang.org/doc/master/collections/vec/struct.Vec.html#method.retain\" rel=\"nofollow\"><code>Vec::retain</code></a>, which conditionaly removes elements while preserving order. Unfortunately, this function doesn't pass the index to the closure, so we have to create a workaround (<a href=\"https://play.rust-lang.org/?gist=078d9d53075671503838aca3c2e2d895&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">playground</a>):</p>\n\n<pre><code>let mut to_delete = vec![false; v.len()];\nfor (i, set_a) in v.iter().enumerate().rev() {\n    for set_b in &amp;v[..i] {\n        if set_a.is_subset(&amp;set_b) {\n            to_delete[i] = true;\n        }\n    }\n}\n\n{\n    // This assumes that retain checks the elements in the order.\n    let mut i = 0;\n    v.retain(|_| {\n        let ret = !to_delete[i];\n        i += 1;\n        ret\n    });\n}\n</code></pre>\n\n<p>If your hashmap has a special value which can never occur under normal conditions, you can use it to mark a hashmap as \"to delete\", and then check that condition in <code>retain</code> (it would require changing the outer loop from iterator-based to range-based though).</p>\n\n<hr>\n\n<p>Sidenote (if that <code>HashSet&lt;u8&gt;</code> is not just a toy example): More eficient way to store and compare sets of small integers would be to use a <a href=\"https://crates.io/crates/bit-set\" rel=\"nofollow\">bitset</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 3333, "user_id": 1948982, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/289f9cfd5d29538b0dbab544c63805e6?s=128&d=identicon&r=PG", "display_name": "michael_j_ward", "link": "https://stackoverflow.com/users/1948982/michael-j-ward"}, "edited": false, "score": 0, "creation_date": 1614319293, "post_id": 37908096, "comment_id": 117354406, "body": "If the predicate is commutative, the inner loop could start at <code>j</code>, correct? And if so could we encode that into Rust&#39;s type system so that it automatically picks the more efficient impl when appropriate?"}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 13, "last_activity_date": 1466363307, "last_edit_date": 1466363307, "creation_date": 1466345268, "answer_id": 37908096, "question_id": 37906012, "link": "https://stackoverflow.com/questions/37906012/best-way-to-remove-elements-of-vec-depending-on-other-elements-of-the-same-vec/37908096#37908096", "title": "Best way to remove elements of Vec depending on other elements of the same Vec", "body": "<p>Here is a solution that does not make additional allocations and preserves the order:</p>\n\n<pre><code>fn product_retain&lt;T, F&gt;(v: &amp;mut Vec&lt;T&gt;, mut pred: F)\n    where F: FnMut(&amp;T, &amp;T) -&gt; bool\n{\n    let mut j = 0;\n    for i in 0..v.len() {\n        // invariants:\n        // items v[0..j] will be kept\n        // items v[j..i] will be removed\n        if (0..j).chain(i + 1..v.len()).all(|a| pred(&amp;v[i], &amp;v[a])) {\n            v.swap(i, j);\n            j += 1;\n        }\n    }\n    v.truncate(j);\n}\n\nfn main() {\n    // test with a simpler example\n    // unique elements\n    let mut v = vec![1, 2, 3];\n    product_retain(&amp;mut v, |a, b| a != b);\n    assert_eq!(vec![1, 2, 3], v);\n\n    let mut v = vec![1, 3, 2, 4, 5, 1, 2, 4];\n    product_retain(&amp;mut v, |a, b| a != b);\n    assert_eq!(vec![3, 5, 1, 2, 4], v);\n}\n</code></pre>\n\n<p>This is a kind of partition algorithm. The elements in the first partition will be kept and in the second partition will be removed. </p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3228, "favorite_count": 2, "accepted_answer_id": 37908096, "answer_count": 3, "score": 5, "last_activity_date": 1466421194, "creation_date": 1466330485, "last_edit_date": 1466421194, "question_id": 37906012, "link": "https://stackoverflow.com/questions/37906012/best-way-to-remove-elements-of-vec-depending-on-other-elements-of-the-same-vec", "title": "Best way to remove elements of Vec depending on other elements of the same Vec", "body": "<p>I have a vector of sets and I want to remove all sets that are subsets of other sets in the vector. Example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a = {0, 3, 5}\nb = {0, 5}\nc = {0, 2, 3}\n</code></pre>\n\n<p>In this case I would like to remove <code>b</code>, because it's a subset of <code>a</code>. I'm fine with using a \"dumb\" n\u00b2 algorithm. </p>\n\n<p>Sadly, it's pretty tricky to get it working with the borrow checker. The best I've come up with is (<a href=\"https://play.rust-lang.org/?gist=0342ccaaf04d23b41bea73f2f6ae9eb9&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Playground</a>):</p>\n\n<pre><code>let mut v: Vec&lt;HashSet&lt;u8&gt;&gt; = vec![];\n\nlet mut to_delete = Vec::new();\nfor (i, set_a) in v.iter().enumerate().rev() {\n    for set_b in &amp;v[..i] {\n        if set_a.is_subset(&amp;set_b) {\n            to_delete.push(i);\n            break;\n        }\n    }\n}\n\nfor i in to_delete {\n    v.swap_remove(i);\n}\n</code></pre>\n\n<p>(<strong>note</strong>: the code above is not correct! See comments for further details)</p>\n\n<p>I see a few disadvantages:</p>\n\n<ul>\n<li>I need an additional vector with additional allocations</li>\n<li>Maybe there are more efficient ways than calling <code>swap_remove</code> often</li>\n<li>If I need to preserve order, I can't use <code>swap_remove</code>, but have to use <code>remove</code> which is slow</li>\n</ul>\n\n<p><strong>Is there a better way to do this?</strong> I'm not just asking about my use case, but about the general case as it's described in the title.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 129, "user_id": 6037727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cca27c93999c1377e690482c67e2cc5a?s=128&d=identicon&r=PG&f=1", "display_name": "Brian", "link": "https://stackoverflow.com/users/6037727/brian"}, "edited": false, "score": 0, "creation_date": 1467048716, "post_id": 37905212, "comment_id": 63558683, "body": "The newtype pattern seems unfinished in current Rust--while there are a few crates that attempt to get around its limitations, but as it stands it was a hassle to try and implement and didn&#39;t make the code any simpler. What I ended up doing was changing the <code>my_from</code> method to <code>from_sdl</code>. Naming the method <code>from_sdl</code> is in line with the standard library&#39;s <code>CStr::from_bytes</code> method."}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": false, "score": 2, "last_activity_date": 1466323695, "creation_date": 1466323695, "answer_id": 37905212, "question_id": 37904628, "link": "https://stackoverflow.com/questions/37904628/implement-stdconvertfrom-on-type-from-another-crate/37905212#37905212", "title": "Implement std::convert::From on type from another crate", "body": "<p>Better define your own rectangle type that wraps an externally defined rectangle, and use the standard <code>From</code> trait. </p>\n\n<p>This is one possible use of the <a href=\"https://doc.rust-lang.org/style/features/types/newtype.html\" rel=\"nofollow\">newtype</a> pattern.</p>\n"}], "owner": {"reputation": 129, "user_id": 6037727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cca27c93999c1377e690482c67e2cc5a?s=128&d=identicon&r=PG&f=1", "display_name": "Brian", "link": "https://stackoverflow.com/users/6037727/brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 409, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1466346173, "creation_date": 1466318468, "last_edit_date": 1466346173, "question_id": 37904628, "link": "https://stackoverflow.com/questions/37904628/implement-stdconvertfrom-on-type-from-another-crate", "title": "Implement std::convert::From on type from another crate", "body": "<p>I have an external <code>geometry</code> crate that defines a rectangle struct made of floats and an external <code>sdl2</code> crate that defines a rectangle struct made of integers.</p>\n\n<p>The following code is how I would expect to convert a <code>geometry::Rect</code> to an <code>sdl2::SdlRect</code> using the <code>std::convert::From</code> trait:</p>\n\n<pre><code>extern crate geometry;\nextern crate sdl2;\n\nfn main() {\n    let geo_rect = geometry::Rect::default();\n    let sdl_rect = sdl2::SdlRect::from(geo_rect);\n}\n\nimpl From&lt;geometry::Rect&gt; for sdl2::SdlRect {\n    fn from (rect: geometry::Rect) -&gt; sdl2::SdlRect {\n        sdl2::SdlRect {\n            x: rect.x as i32,\n            y: rect.y as i32,\n            w: rect.w as i32,\n            h: rect.h as i32,\n        }\n    }\n}\n</code></pre>\n\n<p>Unfortunately, this doesn't compile because either the trait I'm implementing or the struct it's being implemented for must come from the current crate. The only solution I've found that works is to define a <code>MyFrom</code> trait that mirrors the functionality of the <code>std::convert::From</code> trait:</p>\n\n<pre><code>extern crate geometry;\nextern crate sdl2;\n\nfn main() {\n    let geo_rect = geometry::Rect::default();\n    let sdl_rect = sdl2::SdlRect::my_from(geo_rect);\n}\n\npub trait MyFrom&lt;T&gt; {\n    fn my_from(T) -&gt; Self;\n}\n\nimpl MyFrom&lt;geometry::Rect&gt; for sdl2::SdlRect {\n    fn my_from (rect: geometry::Rect) -&gt; sdl2::SdlRect {\n        sdl2::SdlRect {\n            x: rect.x as i32,\n            y: rect.y as i32,\n            w: rect.w as i32,\n            h: rect.h as i32,\n        }\n    }\n}\n</code></pre>\n\n<p>I'm not particularly happy with this solution because knowing when to call <code>my_from</code> instead of <code>from</code> will get confusing down the line. Is there another way for me to solve this using more idiomatic Rust?</p>\n"}, {"tags": ["rust", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 6484586, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6eb34fab549d8fbd36d1a16fd8fa230?s=128&d=identicon&r=PG&f=1", "display_name": "J. Jerk", "link": "https://stackoverflow.com/users/6484586/j-jerk"}, "edited": false, "score": 0, "creation_date": 1466330435, "post_id": 37905140, "comment_id": 63264335, "body": "Thanks. I can not understand, why lifetime in rust ends with brackets { }, I think, lifetime should end then this variable uses last time."}, {"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "reply_to_user": {"reputation": 13, "user_id": 6484586, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6eb34fab549d8fbd36d1a16fd8fa230?s=128&d=identicon&r=PG&f=1", "display_name": "J. Jerk", "link": "https://stackoverflow.com/users/6484586/j-jerk"}, "edited": false, "score": 0, "creation_date": 1466331394, "post_id": 37905140, "comment_id": 63264564, "body": "@J.Jerk lifetime is a time limits of a variable which begins from allocation and ends with deallocation. Deallocation process takes place when the variable goes out of its scope. <a href=\"https://doc.rust-lang.org/book/lifetimes.html#thinking-in-scopes\" rel=\"nofollow noreferrer\">Read more</a>"}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "reply_to_user": {"reputation": 13, "user_id": 6484586, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6eb34fab549d8fbd36d1a16fd8fa230?s=128&d=identicon&r=PG&f=1", "display_name": "J. Jerk", "link": "https://stackoverflow.com/users/6484586/j-jerk"}, "edited": false, "score": 0, "creation_date": 1466333389, "post_id": 37905140, "comment_id": 63265049, "body": "@J.Jerk This is not lifetime issue. Borrow checker thinks that <code>p</code> is mutably borrowed by itself here: <code>p=&amp;mut p[0].c</code>. After that <code>p</code> is locked, you can&#39;t do anything  anymore with it. Replacing <code>p</code> with temporary variable allows to avoid self-locking."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466412076, "post_id": 37905140, "comment_id": 63286962, "body": "It&#39;s when I see such work-arounds that I realize the compiler could benefit from some tweaking on lifetimes :D"}], "tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": true, "score": 3, "last_activity_date": 1466345765, "last_edit_date": 1466345765, "creation_date": 1466323081, "answer_id": 37905140, "question_id": 37904071, "link": "https://stackoverflow.com/questions/37904071/how-to-make-mutable-pointer-to-field-of-node-of-tree-and-mutate-it/37905140#37905140", "title": "How to make mutable pointer to field of node of tree and mutate it?", "body": "<p>You need a temporary variable to calm down the borrow checker:</p>\n\n<pre><code>while p.len() &gt; 0 {\n    let t = p;\n    p = &amp;mut t[0].c;\n}\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>while p.len() &gt; 0 {\n    p = &amp;mut {p}[0].c;\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 6484586, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6eb34fab549d8fbd36d1a16fd8fa230?s=128&d=identicon&r=PG&f=1", "display_name": "J. Jerk", "link": "https://stackoverflow.com/users/6484586/j-jerk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 294, "favorite_count": 0, "closed_date": 1520887459, "accepted_answer_id": 37905140, "answer_count": 1, "score": 1, "last_activity_date": 1466345765, "creation_date": 1466312336, "last_edit_date": 1466345711, "question_id": 37904071, "link": "https://stackoverflow.com/questions/37904071/how-to-make-mutable-pointer-to-field-of-node-of-tree-and-mutate-it", "closed_reason": "Duplicate", "title": "How to make mutable pointer to field of node of tree and mutate it?", "body": "<p>I want to find some node in the tree and I need a pointer to the container of nodes: <code>&amp;mut Vec&lt;Node&gt;</code></p>\n\n<pre><code>struct Node {\n    c: Vec&lt;Node&gt;,\n    v: i32,\n}\n\nimpl Node {\n    pub fn new(u: i32, n: Node) -&gt; Node {\n        let mut no = Node {\n            c: Vec::new(),\n            v: u,\n        };\n\n        no.c.push(n);\n\n        no\n    }\n}\n\nfn main() {\n    let mut a = Node::new(1,\n        Node::new(2,\n        Node::new(3,\n        Node::new(4,\n        Node::new(5,\n        Node {\n            c: Vec::new(),\n            v: 6,\n        })))));\n\n    let mut p: &amp;mut Vec&lt;Node&gt; = &amp;mut a.c;\n\n    while p.len() &gt; 0 {\n        p = &amp;mut p[0].c;\n    }\n\n    p.push(Node {\n        c: Vec::new(),\n        v: 7,\n    });\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466301899, "post_id": 37903254, "comment_id": 63259602, "body": "Duplicate of <a href=\"http://stackoverflow.com/q/27874987/155423\">stackoverflow.com/q/27874987/155423</a> \u2014 replace <code>Show</code> with <code>Debug</code>."}, {"owner": {"reputation": 110, "user_id": 3605357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fd3d9e6191581a5cbd93527a56408b2?s=128&d=identicon&r=PG&f=1", "display_name": "Powersource", "link": "https://stackoverflow.com/users/3605357/powersource"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466302310, "post_id": 37903254, "comment_id": 63259652, "body": "Thanks for the formatting :) I looked at that question before but that only solves formatting the output of <code>derive(Show)</code>. I couldn&#39;t get the compiler to accept the <code>derive</code> annotation in the first place. And I believe that error was only a symptom of trying to backspace until stuff worked. I believe the real errors that need solving are the errors relating to <code>phase</code>. E: Ok, trying Debug."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1466302862, "post_id": 37903254, "comment_id": 63259716, "body": "FYI, you are going to be in for a world of hurt trying to update something from so far before Rust 1.0. At a quick look, I see <code>deriving</code> =&gt; <code>derive</code>, <code>int</code> =&gt; <code>isize</code>, <code>~</code> =&gt; <code>Box</code>, the removed <code>priv</code> keyword. The biggest scary thing is the checked-in compiled Rust library and the dynamic library. I can&#39;t imagine any way that will be usable."}, {"owner": {"reputation": 110, "user_id": 3605357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fd3d9e6191581a5cbd93527a56408b2?s=128&d=identicon&r=PG&f=1", "display_name": "Powersource", "link": "https://stackoverflow.com/users/3605357/powersource"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466303690, "post_id": 37903254, "comment_id": 63259819, "body": "I have managed to fix <code>Box</code> and <code>priv</code> so far. Well, the compiler doesn&#39;t complain anymore but I imagine there might be a whole bunch of bugs waiting for me once I manage to get it to run. The errors in this post are gone though now, the next step seems to be to fix missing crates (why did he have to make his own build system?). But yes, this might be where I commit and bail, it is exhausting to say the least."}], "answers": [{"comments": [{"owner": {"reputation": 110, "user_id": 3605357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fd3d9e6191581a5cbd93527a56408b2?s=128&d=identicon&r=PG&f=1", "display_name": "Powersource", "link": "https://stackoverflow.com/users/3605357/powersource"}, "edited": false, "score": 0, "creation_date": 1466464058, "post_id": 37903477, "comment_id": 63316761, "body": "Wow, now I see that I tried derive(Show), I thought it was derive(Display) that I had tried. And I also see that the answer in the other question specified that Display couldn&#39;t even be derived so I was completely off in my reading comprehension."}], "tags": [], "owner": {"reputation": 110, "user_id": 3605357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fd3d9e6191581a5cbd93527a56408b2?s=128&d=identicon&r=PG&f=1", "display_name": "Powersource", "link": "https://stackoverflow.com/users/3605357/powersource"}, "is_accepted": true, "score": 2, "last_activity_date": 1466303973, "creation_date": 1466303973, "answer_id": 37903477, "question_id": 37903254, "link": "https://stackoverflow.com/questions/37903254/troubles-deriving-show-when-updating-very-old-code/37903477#37903477", "title": "Troubles deriving Show when updating very old code", "body": "<p>I simply had to use <code>derive(Debug)</code> instead of <code>deriving(Show)</code>. The compiler doesn't complain anymore (about this at least) but if stuff works as intended is another question.</p>\n"}], "owner": {"reputation": 110, "user_id": 3605357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9fd3d9e6191581a5cbd93527a56408b2?s=128&d=identicon&r=PG&f=1", "display_name": "Powersource", "link": "https://stackoverflow.com/users/3605357/powersource"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "closed_date": 1466304023, "accepted_answer_id": 37903477, "answer_count": 1, "score": 0, "last_activity_date": 1466303973, "creation_date": 1466301143, "last_edit_date": 1466302333, "question_id": 37903254, "link": "https://stackoverflow.com/questions/37903254/troubles-deriving-show-when-updating-very-old-code", "closed_reason": "Duplicate", "title": "Troubles deriving Show when updating very old code", "body": "<p>I am trying to revive a project that was last modified 2 years ago and it has plenty of deprecated syntax. <a href=\"https://github.com/bollu/equinox/blob/37dbc1705012e7e4859426e77e51113967eedf19/src/main.rs\" rel=\"nofollow\">The original unmodified code in context</a>.</p>\n\n<p>I removed the <code>feature</code> and <code>phase</code> lines and changed all occurrences of <code>deriving</code> to <code>derive</code>; <a href=\"https://bpaste.net/show/a9ff2699b2bb\" rel=\"nofollow\">see after my modifications</a>. I have also modified other files but they are the same kinds of modifications as in this file. </p>\n\n<p>I'm running Rust 1.9 on Arch.</p>\n\n<p>The compiler output. Note that this isn't cargo (as far as I can tell) but it supposedly worked once upon a time:  </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>me@pc[equinox/bin]% make tests\nrustc   ../src/main.rs -L ../lib/ --test -o equinox-tests\n../src/engine/math.rs:244:10: 244:14 error: `#[derive]` for custom traits is not stable enough for use and is subject to change (see issue #29644)\n../src/engine/math.rs:244 #[derive(Show)]\n                                   ^~~~\nerror: aborting due to previous error\nmake: *** [makefile:8: tests] Error 101\nme@pc[equinox/bin]%\n</code></pre>\n\n<p>Which didn't sound too bad until I read this from Reddit (can't link any more):</p>\n\n<blockquote>\n  <p>The idea is that there is an external tool that removes the <code>derive</code> attributes and replaces them with generated code. If the Rust compiler itself is seeing those attributes, it means that you've missed a step.</p>\n</blockquote>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 5158, "user_id": 1829930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d00937426fde9e00fe46a57043c00eeb?s=128&d=identicon&r=PG", "display_name": "Robin Krahl", "link": "https://stackoverflow.com/users/1829930/robin-krahl"}, "is_accepted": true, "score": 4, "last_activity_date": 1518704605, "last_edit_date": 1518704605, "creation_date": 1466277455, "answer_id": 37900761, "question_id": 37900513, "link": "https://stackoverflow.com/questions/37900513/is-there-an-exhaustive-list-of-standard-attributes/37900761#37900761", "title": "Is there an exhaustive list of standard attributes?", "body": "<p>Yes, the <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"nofollow noreferrer\">Rust reference</a> contains a list of attributes (though it might not be up to date).</p>\n\n<p>Quoting from the <a href=\"https://doc.rust-lang.org/book/attributes.html\" rel=\"nofollow noreferrer\">Rust book section on attributes</a> you linked:</p>\n\n<blockquote>\n  <p>There is a full list of attributes <a href=\"https://doc.rust-lang.org/reference/attributes.html\" rel=\"nofollow noreferrer\">in the reference</a>. Currently, you are \n  not allowed to create your own attributes, the Rust compiler defines them.</p>\n</blockquote>\n"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 424, "favorite_count": 2, "accepted_answer_id": 37900761, "answer_count": 1, "score": 3, "last_activity_date": 1518706234, "creation_date": 1466275869, "last_edit_date": 1518706234, "question_id": 37900513, "link": "https://stackoverflow.com/questions/37900513/is-there-an-exhaustive-list-of-standard-attributes", "title": "Is there an exhaustive list of standard attributes?", "body": "<p>I'm looking for an exhaustive list of <a href=\"https://doc.rust-lang.org/book/first-edition/attributes.html\" rel=\"nofollow noreferrer\">attributes</a> that are available by default: without any external crates or experimental features enabled.</p>\n\n<p>Does such a list exist?</p>\n"}, {"tags": ["recursion", "optimization", "rust", "stack-overflow"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 2, "creation_date": 1466272382, "post_id": 37899893, "comment_id": 63252995, "body": "Sticking to recursion is nonsensical here. The calls are tail recursive, so it&#39;s trivial to make functions iterative, and then you have the guarantee that they use constant stack space, rather than relying on TCO (which is not guaranteed and indeed seems to not happen in this case). Writing everything in recursion doesn&#39;t mesh well with Rust and insisting on recursion over iteration will get you nothing but headaches."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466275061, "post_id": 37899893, "comment_id": 63253792, "body": "The answer to &quot;how to increase the stack size&quot; is going to already exist on SO somewhere; it&#39;s the same stack as a C program so you can use <code>ulimit</code> or whatever is appropriate for your OS."}], "answers": [{"tags": [], "owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "is_accepted": false, "score": 1, "last_activity_date": 1466300509, "creation_date": 1466300509, "answer_id": 37903207, "question_id": 37899893, "link": "https://stackoverflow.com/questions/37899893/is-there-a-way-to-optimize-this-code-so-it-doesnt-overflow-the-stack/37903207#37903207", "title": "Is there a way to optimize this code so it doesn&#39;t overflow the stack?", "body": "<p>If you really don't want the iterative version:</p>\n\n<p>First, make sure that you compile with optimizations (<code>rustc -O</code> or <code>cargo --release</code>). Without it there's no chance for TCO in Rust. Your <code>divisors</code> function is tail-recursive, but it seems that moving this <code>Vec</code> up and down the recursion stack is confusing enough for LLVM to miss that fact. We can help the compiler a little, by using just a reference here:</p>\n\n<pre><code>fn divisors(i: u64, n: u64, mut div: Vec&lt;u64&gt;) -&gt; Vec&lt;u64&gt; {\n    divisors_(i, n, &amp;mut div);\n    div\n}\n\nfn divisors_(i: u64, n: u64, div: &amp;mut Vec&lt;u64&gt;) {\n    if i * i &gt; n {\n    } else {\n        if n % i == 0 {\n            div.push(i);\n            div.push(n / i);\n        }\n        divisors_(i + 2, n, div)\n    }\n}\n</code></pre>\n\n<p>On my machine that changes make the code no longer segfault.</p>\n\n<hr>\n\n<p>If you want to increase the stack size anyway, you should run your function in a separate thread with increased stack size (using <a href=\"https://static.rust-lang.org/doc/master/std/thread/struct.Builder.html#method.stack_size\" rel=\"nofollow\"><code>std::thread::Builder::stack_size</code></a>)</p>\n\n<hr>\n\n<p>Rust has reserved the <code>become</code> keyword for guaranteed tail recursion,\nso maybe in the future you'll just need to add one keyword to your code to make it work.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1466346056, "post_id": 37905504, "comment_id": 63268420, "body": "This is a good set of optimizations, which really is the point of Project Euler. However, the reluctance of OP to change programming styles means that at best this simply delays the problem to a larger number."}], "tags": [], "owner": {"reputation": 21, "user_id": 3852589, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rTH0z.png?s=128&g=1", "display_name": "Peter Scholtens", "link": "https://stackoverflow.com/users/3852589/peter-scholtens"}, "is_accepted": false, "score": 2, "last_activity_date": 1466345977, "last_edit_date": 1466345977, "creation_date": 1466326494, "answer_id": 37905504, "question_id": 37899893, "link": "https://stackoverflow.com/questions/37899893/is-there-a-way-to-optimize-this-code-so-it-doesnt-overflow-the-stack/37905504#37905504", "title": "Is there a way to optimize this code so it doesn&#39;t overflow the stack?", "body": "<p>A vector containing 600 * 10<sup>9</sup> <code>u64</code>s means you'll need 4.8 terabytes of RAM or swapspace.</p>\n\n<p>I'm sure you don't need that for this problem, you're missing some knowledge of math here: scanning till the square root of the 600851475143 will be sufficient. You may also speed up the program by using the <a href=\"https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\" rel=\"nofollow\">Sieve of Eratosthenes</a>.</p>\n\n<p>Project Euler is nice to sharpen your math skills, but it doesn't help you with any programming language in particular. For learning Rust I started with <a href=\"http://exercism.io/languages/rust\" rel=\"nofollow\">Exercism</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1505221639, "post_id": 46166507, "comment_id": 79316688, "body": "I&#39;d probably write it <a href=\"https://play.rust-lang.org/?gist=d900d2e001cd1e38a31ebdc727341c2d&amp;version=stable\" rel=\"nofollow noreferrer\">like this</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1505245027, "post_id": 46166507, "comment_id": 79331024, "body": "Are you sure there are no large composite numbers for which <code>(n as f64).sqrt() as i64</code> is smaller than the actual square root of <code>n</code>? (I couldn&#39;t find any, just curious if it&#39;s provable)"}], "tags": [], "owner": {"reputation": 431, "user_id": 4330906, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bzUqv.jpg?s=128&g=1", "display_name": "Frank Kair", "link": "https://stackoverflow.com/users/4330906/frank-kair"}, "is_accepted": false, "score": 2, "last_activity_date": 1505221175, "last_edit_date": 1505221175, "creation_date": 1505179553, "answer_id": 46166507, "question_id": 37899893, "link": "https://stackoverflow.com/questions/37899893/is-there-a-way-to-optimize-this-code-so-it-doesnt-overflow-the-stack/46166507#46166507", "title": "Is there a way to optimize this code so it doesn&#39;t overflow the stack?", "body": "<p>Performing some optimizations, such as going just up to the square root of the number when checking for its factors and for whether it's a prime, I've got:</p>\n\n<pre><code>fn is_prime(n: i64) -&gt; bool {\n    let float_input = n as f64;\n    let upper_bound = float_input.sqrt() as i64;\n\n    for x in 2..upper_bound + 1 {\n        if n % x == 0 {\n            return false;\n        }\n    }\n    return true;\n}\n\nfn get_factors(n: i64) -&gt; Vec&lt;i64&gt; {\n    let mut factors: Vec&lt;i64&gt; = Vec::new();\n\n    let float_input = n as f64;\n    let upper_bound = float_input.sqrt() as i64;\n\n    for x in 1..upper_bound + 1 {\n        if n % x == 0 {\n            factors.push(x);\n            factors.push(n / x);\n        }\n    }\n    factors\n}\n\nfn get_prime_factors(n: i64) -&gt; Vec&lt;i64&gt; {\n    get_factors(n)\n        .into_iter()\n        .filter(|&amp;x| is_prime(x))\n        .collect::&lt;Vec&lt;i64&gt;&gt;()\n}\n\nfn main() {\n    if let Some(max) = get_prime_factors(600851475143).iter().max() {\n        println!(\"{:?}\", max);\n    }\n}\n</code></pre>\n\n<p>On my machine, this code runs very fast with no overflow.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./problem003  0.03s user 0.00s system 90% cpu 0.037 total\n</code></pre>\n"}], "owner": {"reputation": 6596, "user_id": 5021321, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/29f10a1b457e63d44e3a221e89e32c17?s=128&d=identicon&r=PG", "display_name": "Eli Sadoff", "link": "https://stackoverflow.com/users/5021321/eli-sadoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1505221175, "creation_date": 1466271750, "last_edit_date": 1466274670, "question_id": 37899893, "link": "https://stackoverflow.com/questions/37899893/is-there-a-way-to-optimize-this-code-so-it-doesnt-overflow-the-stack", "title": "Is there a way to optimize this code so it doesn&#39;t overflow the stack?", "body": "<p>I am working on the third Project Euler problem:</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", p3());\n}\n\nfn p3() -&gt; u64 {\n    let divs = divisors(1, 600851475143, vec![]);\n    let mut max = 0;\n    for x in divs {\n        if prime(x, 0, false) &amp;&amp; x &gt; max {\n            max = x\n        }\n    }\n    max\n}\n\nfn divisors(i: u64, n: u64, div: Vec&lt;u64&gt;) -&gt; Vec&lt;u64&gt; {\n    let mut temp = div;\n    if i * i &gt; n {\n        temp\n    } else {\n        if n % i == 0 {\n            temp.push(i);\n            temp.push(n / i);\n        }\n        divisors(i + 2, n, temp)\n    }\n}\n\nfn prime(n: u64, i: u64, skip: bool) -&gt; bool {\n    if !skip {\n        if n == 2 || n == 3 {\n            true\n        } else if n % 3 == 0 || n % 2 == 0 {\n            false\n        } else {\n            prime(n, 5, true)\n        }\n    } else {\n        if i * i &gt; n {\n            true\n        } else if n % i == 0 || n % (i + 2) == 0 {\n            false\n        } else {\n            prime(n, i + 6, true)\n        }\n    }\n}\n</code></pre>\n\n<p>The value <code>600851475143</code> is the value that is at some point causing it to overflow. If I replace that with any value that is in the 10<sup>10</sup> order of magnitude or less, it returns an answer. While keeping it as a recursive solution, is there any way to either:</p>\n\n<ol>\n<li>Increase the stack size?</li>\n<li>Optimize my code so it doesn't return a <code>fatal runtime: stack overflow</code> error?</li>\n</ol>\n\n<p>I know this can be done iteratively, but I'd prefer to not do that.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": false, "score": 3, "last_activity_date": 1466270232, "last_edit_date": 1466270232, "creation_date": 1466254691, "answer_id": 37897227, "question_id": 37897082, "link": "https://stackoverflow.com/questions/37897082/iterate-over-byte-vector-and-save-pointers-to-strings/37897227#37897227", "title": "Iterate over byte vector and save pointers to strings", "body": "<p>Here's how I would do this (with support for ignoring a fixed number of extra data like you want):</p>\n\n<pre><code>fn main() {\n    const DATA_LEN: usize = 3;\n    let bytes = b\"abc\\0zzzefg\\0zzzhij\\0zzz\".to_vec();\n    let mut strs = Vec::new();\n    for (i, chunk) in bytes.split(|&amp;b| b == b'\\0').enumerate() {\n        // The first chunk doesn't have the extra data at the start.\n        let skip = if i == 0 {\n            0\n        } else {\n            DATA_LEN\n        };\n        strs.push(std::str::from_utf8(&amp;chunk[skip..]).unwrap());\n    }\n    // Remove the last str. If the data is valid, it should be empty as the last\n    // chunk only contains extra data.\n    strs.pop();\n    for str in strs {\n        println!(\"{}\", str);\n    }\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>abc\nefg\nhij\n</code></pre>\n\n<p>The only heap allocation (after <code>bytes</code>) here is <code>strs</code>, which will use about <code>2 words * number of strs</code> of heap memory.</p>\n\n<p>Edit: More functional version (no <code>mut</code>!), but this would also skip all 0 sized strings:</p>\n\n<pre><code>fn main() {\n    const DATA_LEN: usize = 3;\n    let bytes = b\"abc\\0zzzefg\\0zzzhij\\0zzz\".to_vec();\n    let strs = bytes.split(|&amp;b| b == b'\\0')\n        .enumerate()\n        .flat_map(|(i, chunk)| {\n            // The first chunk doesn't have the extra data at the start.\n            let skip = if i == 0 {\n                0\n            } else {\n                DATA_LEN\n            };\n            if skip == chunk.len() {\n                None\n            } else {\n                Some(std::str::from_utf8(&amp;chunk[skip..]).unwrap())\n            }\n        })\n        .collect::&lt;Vec&lt;&amp;str&gt;&gt;();\n    for str in strs {\n        println!(\"{}\", str);\n    }\n}\n</code></pre>\n\n<p>I would use this if your data will not have empty strings. This should run just as fast as the previous one.</p>\n"}, {"comments": [{"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1466255711, "post_id": 37897282, "comment_id": 63247994, "body": "Thanks, I have been using rust only last two days, so I need not &quot;code review&quot;, but  &quot;code rewrite&quot;, as you demonstrate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 1, "creation_date": 1466255990, "post_id": 37897282, "comment_id": 63248081, "body": "@user1034749 check out the <a href=\"http://codereview.stackexchange.com/questions/tagged/rust\">code reviews for Rust</a>; many of them have the same amount of &quot;check out this standard library function or crate you didn&#39;t know about&quot; or &quot;you are allocating too much memory here&quot;. The code reviews over there are very thorough, and often involve rewriting large chunks. Code review isn&#39;t limited to &quot;are my variable names good&quot;."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1466255389, "last_edit_date": 1489680227, "creation_date": 1466255088, "answer_id": 37897282, "question_id": 37897082, "link": "https://stackoverflow.com/questions/37897082/iterate-over-byte-vector-and-save-pointers-to-strings/37897282#37897282", "title": "Iterate over byte vector and save pointers to strings", "body": "<p>This is more of a question for <a href=\"https://codereview.meta.stackexchange.com/questions/5777/a-guide-to-code-review-for-stack-overflow-users\">Code Review</a>, as your code works but you are looking for a better solution.</p>\n\n<p>The only allocation you need is for the vector to hold the strings. Beyond that, you can use the input slice as the backing memory.</p>\n\n<pre><code>const PADDING_LENGTH: usize = 1;\n\nuse std::str;\n\nfn main() {\n    let cnt = b\"abc\\0\\x01efg\\0\\x01\";\n\n    let mut a = cnt as &amp;[u8];\n    let mut words = vec![];\n\n    while let Some(idx) = a.iter().position(|&amp;x| x == b'\\0') {\n        let (head, tail) = a.split_at(idx);\n        let word = str::from_utf8(head).expect(\"Invalid UTF-8\");\n        words.push(word);\n\n        // +1 to skip over the NUL\n        if tail.len() &gt; PADDING_LENGTH + 1 {\n            a = &amp;tail[PADDING_LENGTH + 1..];\n        } else {\n            break;\n        }\n    }\n\n    assert_eq!(words, [\"abc\", \"efg\"]);\n}\n</code></pre>\n\n<p>There's no need to convert the input slice to a <code>Vec</code>, but the better way of doing it would be <a href=\"http://doc.rust-lang.org/std/primitive.slice.html#method.to_vec%60\" rel=\"nofollow noreferrer\"><code>to_vec</code></a>:</p>\n\n<pre><code>fn main() {\n    let cnt = b\"abc\\0efg\\0\";\n    let mut cnt_vec = Vec::&lt;u8&gt;::new();\n    for ch in cnt {\n        cnt_vec.push(*ch);\n    }\n\n    let cnt_vec_better = cnt.to_vec();\n    assert_eq!(cnt_vec, cnt_vec_better)\n}\n</code></pre>\n\n<p>It's better to use <code>b'0'</code> to indicate a single-byte literal; it's the mirror of <code>b\"\"</code> for multi-byte literals.</p>\n"}, {"comments": [{"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1466269851, "post_id": 37899588, "comment_id": 63252224, "body": "what if <code>fixed length packed data</code> between utf-8 strings contains b&#39;\\0&#39;?"}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "reply_to_user": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 1, "creation_date": 1466270639, "post_id": 37899588, "comment_id": 63252506, "body": "Everything goes wrong. I had not foreseen this case"}], "tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 3, "last_activity_date": 1466274780, "last_edit_date": 1466274780, "creation_date": 1466269722, "answer_id": 37899588, "question_id": 37897082, "link": "https://stackoverflow.com/questions/37897082/iterate-over-byte-vector-and-save-pointers-to-strings/37899588#37899588", "title": "Iterate over byte vector and save pointers to strings", "body": "<p>You can implement your own iterator:</p>\n\n<pre><code>struct DataSplitter&lt;'d&gt; {\n    data: &amp;'d [u8],\n    pos: usize,\n    dlen: usize,\n}\n\nimpl&lt;'d&gt; DataSplitter&lt;'d&gt; {\n    fn new(data: &amp;'d [u8], dlen: usize) -&gt; DataSplitter {\n        DataSplitter {\n            data: data,\n            pos: 0,\n            dlen: dlen,\n        }\n    }\n}\n\nimpl&lt;'d&gt; Iterator for DataSplitter&lt;'d&gt; {\n    type Item = &amp;'d [u8];\n\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'d [u8]&gt; {\n        if self.pos &lt; self.data.len() {\n            if let Some(zpos) = self.data[self.pos..].iter().position(|&amp;x| x == 0) {\n                // zero found. prepare slice\n                let res = &amp;self.data[self.pos..self.pos + zpos];\n                // move current position\n                self.pos += zpos + self.dlen + 1;\n                Some(res)\n            } else {\n                // No more zeros found. Return all bytes\n                let res = &amp;self.data[self.pos..];\n                self.pos = self.data.len();\n                Some(res)//You can return None if you want skip it\n            }\n        } else {\n            None\n        }\n    }\n}\n\nfn main() {\n    const DLEN: usize = 2;\n    let bytes: Vec&lt;u8&gt; = b\"abc\\0\\x01\\0zxc\\0\\t\\x02fgh\\0\\x01\\n\".to_vec();\n\n    let res = DataSplitter::new(&amp;bytes, DLEN)\n        .map(|s| std::str::from_utf8(s))\n        .collect::&lt;Result&lt;Vec&lt;_&gt;, _&gt;&gt;()\n        .expect(\"UTF8 error\");\n\n    println!(\"{:?}\", res);//[\"abc\", \"zxc\", \"fgh\"]\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 759, "user_id": 1176628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff2296d70542d30deb6fd858c29c5960?s=128&d=identicon&r=PG", "display_name": "krdln", "link": "https://stackoverflow.com/users/1176628/krdln"}, "is_accepted": false, "score": 1, "last_activity_date": 1466301260, "last_edit_date": 1466301260, "creation_date": 1466299335, "answer_id": 37903123, "question_id": 37897082, "link": "https://stackoverflow.com/questions/37897082/iterate-over-byte-vector-and-save-pointers-to-strings/37903123#37903123", "title": "Iterate over byte vector and save pointers to strings", "body": "<p>You can also use the regex crate:</p>\n\n<pre><code>extern crate regex;\n\nfn main() {\n    let data = b\"abc\\0123456789xfu\\nhd\\0123456789x\";\n    let re = regex::bytes::Regex::new(r\"(?s)(.*?)\\0.{10}\").unwrap();\n    let v: Vec&lt;&amp;str&gt; = re.captures_iter(data)\n        .map(|captures| std::str::from_utf8(captures.at(1).unwrap()).unwrap())\n        .collect();\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>The <code>s</code> flag is quite important here, without it the <code>.</code> won't match newline and consecutive strings might end up being not consecutive.</p>\n\n<p>If you care about performance of this code, please note that each <code>Captures</code> will allocate a <code>Vec</code>. You can get rid of this allocation by using <code>find_iter</code> instead and slicing the last 11 bytes off manually.</p>\n"}, {"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": false, "score": 1, "last_activity_date": 1466434896, "creation_date": 1466434896, "answer_id": 37925770, "question_id": 37897082, "link": "https://stackoverflow.com/questions/37897082/iterate-over-byte-vector-and-save-pointers-to-strings/37925770#37925770", "title": "Iterate over byte vector and save pointers to strings", "body": "<blockquote>\n  <p>Is it possible to write the main algorithm in fewer lines of code? In the real world I have 10 bytes between strings; I plan to use <code>Iterator::nth</code>.</p>\n</blockquote>\n\n<p>Here is another option:</p>\n\n<pre><code>fn main() {\n    let bytes = b\"abc\\0???efg\\0???hij\\0\".to_vec();\n    let mut v = Vec::new();\n    let mut chunks = bytes.split(|&amp;b| b == b'\\0');\n    if let Some(first) = chunks.next().map(from_utf8_unwrap) {\n        v.push(first);\n        v.extend(chunks.map(skip_data).map(from_utf8_unwrap));\n        v.pop(); // discard the last string\n    }\n    assert_eq!(vec![\"abc\", \"efg\", \"hij\"], v);\n}\n\nconst PADDING: usize = 3;\n\nfn skip_data(s: &amp;[u8]) -&gt; &amp;[u8] {\n    &amp;s[std::cmp::min(s.len(), PADDING)..]\n}\n\nfn from_utf8_unwrap(s: &amp;[u8]) -&gt; &amp;str {\n    std::str::from_utf8(s).unwrap()\n}\n</code></pre>\n"}], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1502, "favorite_count": 0, "answer_count": 5, "score": 0, "last_activity_date": 1466434896, "creation_date": 1466253720, "last_edit_date": 1466254179, "question_id": 37897082, "link": "https://stackoverflow.com/questions/37897082/iterate-over-byte-vector-and-save-pointers-to-strings", "title": "Iterate over byte vector and save pointers to strings", "body": "<p>I have a <code>Vec&lt;u8&gt;</code> which contains UTF-8 strings that are separated by <code>'\\0' as u8</code>. Fixed length binary packed data is placed after each string, like this:</p>\n\n<p><code>b\"abc\\0\" 10_bytes_of_data b\"ufhd\\0\" 10_bytes_data</code>,</p>\n\n<p>I want to parse such a <code>Vec&lt;u8&gt;</code> and fill a <code>Vec&lt;&amp;str&gt;</code>. To simplify things I replace <code>10_bytes_of_data</code> with <code>0_bytes_of_data</code>:</p>\n\n<pre><code>let cnt = b\"abc\\0efg\\0\";\nlet mut cnt_vec = Vec::&lt;u8&gt;::new();\nfor ch in cnt {\n    cnt_vec.push(*ch);\n}\nlet mut str_start_it = cnt_vec.iter();\nlet mut strings = Vec::&lt;&amp;str&gt;::new();\nlet mut cur_it = cnt_vec.iter();\nlet mut counter: usize = 0;\nloop {\n    match cur_it.next() {\n        Some(ch) =&gt; {\n            if *ch == 0u8 {\n                {\n                    let slice = str_start_it.as_slice();\n                    let s = std::str::from_utf8(&amp;slice[0..counter]).unwrap();\n                    strings.push(s);\n                }\n                str_start_it = cur_it.clone();\n                counter = 0;\n            } else {\n                counter += 1;\n            }\n        }\n        None =&gt; {\n            break;\n        }\n    }\n}\n\nfor s in strings {\n    println!(\"s {}\", s);\n}\n</code></pre>\n\n<p>and I have several questions:</p>\n\n<ol>\n<li><p>Is there any simpler way to convert <code>cnt</code> to <code>cnt_vec</code>?</p></li>\n<li><p>Is it possible to write the main algorithm in fewer lines of code? In the real world I have 10 bytes between strings; I plan to use <code>Iterator::nth</code>.</p></li>\n<li><p>Is there any unnecessary heap allocation in my code? I want to have heap allocations only in <code>cnt_vec</code> and <code>strings</code>, maybe some lines except <code>push</code> allocate memory on the heap? </p></li>\n</ol>\n"}, {"tags": ["rust", "upcasting", "subtyping"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 8, "creation_date": 1466237984, "post_id": 37894776, "comment_id": 63243361, "body": "Rust doesn&#39;t even have classes. It uses a trait-based system for runtime polymorphism. Could you add an example of what exactly you want (maybe with working code written in C++)? Then we could tell you how one would write it in Rust :)"}, {"owner": {"reputation": 121, "user_id": 930519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6bdf258416b7626ce5de49953f428fa5?s=128&d=identicon&r=PG", "display_name": "eugene2k", "link": "https://stackoverflow.com/users/930519/eugene2k"}, "edited": false, "score": 0, "creation_date": 1466357839, "post_id": 37894776, "comment_id": 63272021, "body": "Edited the original post to be clearer."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1466408244, "post_id": 37894776, "comment_id": 63284858, "body": "As a C++ programmer, I feel the need to point out that the guideline is <b>Prefer Composition Over Inheritance</b> and your example is generally thought of as an anti-pattern. Inheritance should only be used to override behavior (aka, <code>virtual</code> functions), inheriting from non-polymorphic classes is generally a mistake (mixes two concept: is-a relationship and code re-use). Fortunately, Rust having the benefit of hindsight, there&#39;s no inheritance in Rust :)"}, {"owner": {"reputation": 121, "user_id": 930519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6bdf258416b7626ce5de49953f428fa5?s=128&d=identicon&r=PG", "display_name": "eugene2k", "link": "https://stackoverflow.com/users/930519/eugene2k"}, "edited": false, "score": 0, "creation_date": 1466448166, "post_id": 37894776, "comment_id": 63309916, "body": "I strongly disagree with the statement that inheritance should only be used to override behavior of virtual functions. Inheritance (or subtyping) allows the user of the derived class to call methods of the base class, without the need to implement an extra function in the derived class."}], "answers": [{"comments": [{"owner": {"reputation": 121, "user_id": 930519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6bdf258416b7626ce5de49953f428fa5?s=128&d=identicon&r=PG", "display_name": "eugene2k", "link": "https://stackoverflow.com/users/930519/eugene2k"}, "edited": false, "score": 0, "creation_date": 1466447529, "post_id": 37910125, "comment_id": 63309533, "body": "It&#39;s possible to simplify this, when you have more than a couple derived classes. If you write a generic <code>struct Base&lt;T&gt;</code> and add a <code>derived: T</code> to it, you don&#39;t have to write <code>base: Base</code> in each of the derived structs you wish to implement. You can then add impls for your derived structs using <code>impl Base&lt;Derived&gt;</code>. I&#39;m doing exactly that. The problem is what happens when you have a hundred derived structs? From my understanding for each Derived struct the compiler will generate a new function, that does the same thing."}, {"owner": {"reputation": 121, "user_id": 930519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6bdf258416b7626ce5de49953f428fa5?s=128&d=identicon&r=PG", "display_name": "eugene2k", "link": "https://stackoverflow.com/users/930519/eugene2k"}, "edited": false, "score": 0, "creation_date": 1466448926, "post_id": 37910125, "comment_id": 63310373, "body": "I clarified the post again. Hope it makes more sense now."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1536623923, "last_edit_date": 1536623923, "creation_date": 1466358595, "answer_id": 37910125, "question_id": 37894776, "link": "https://stackoverflow.com/questions/37894776/class-subtyping-in-rust/37910125#37910125", "title": "Class subtyping in Rust", "body": "<p>Use composition instead of inheritance.</p>\n\n<pre><code>struct Base {\n    x: u8,\n    y: u8,\n}\n\nimpl Base {\n    fn foo(&amp;mut self, x: u8, y: u8) {\n        self.x = x;\n        self.y = y;\n    }\n}\n\nstruct Derived {\n    base: Base,\n}\n\nimpl Derived {\n    fn foo(&amp;mut self, x: u8, y: u8) {\n        self.base.foo(x, y);\n    }\n}\n\nfn main() {\n    let mut d = Derived { base: Base { x: 1, y: 3 } };\n    d.foo(5, 6);\n}\n</code></pre>\n\n<p>Rust <em>could</em> do a better job of making composition as easy on the keyboard as inheritance though. There is <a href=\"https://github.com/rust-lang/rfcs/pull/1406\" rel=\"nofollow noreferrer\">a RFC</a> aiming to provide something better, as well as previous discussions <a href=\"https://github.com/rust-lang/rfcs/issues/292\" rel=\"nofollow noreferrer\">1</a>, <a href=\"https://internals.rust-lang.org/t/syntactic-sugar-for-delegation-of-implementation/2633\" rel=\"nofollow noreferrer\">2</a>.</p>\n\n<blockquote>\n  <p>I think doing an <code>impl&lt;T&gt; for Base&lt;T&gt;</code> will produce a ton of copies of the same function, so composition isn't really an option.</p>\n</blockquote>\n\n<p>I'm not sure what this syntax is trying to show as <code>Base</code> doesn't have a generic type. It is true that generic types are <em>monomorphized</em> for each concrete set of type parameters, but I don't see / know how that's any different from C++. I think that the Rust version will be slightly lighter-weight as you can't upcast from a <code>Derived</code> to a <code>Base</code> so the compiler doesn't have to maintain those invariants.</p>\n\n<p>All of this assumes that there is some code to reuse. In many cases, you are better off programming to an interface, which is represented with <a href=\"http://doc.rust-lang.org/stable/book/traits.html\" rel=\"nofollow noreferrer\"><em>traits</em></a> in Rust. You can combine the two approaches \u2014 extract small reusable bits of code as components, bundle them together into aggregates, and implement traits for the aggregate types.</p>\n"}, {"tags": [], "owner": {"reputation": 121, "user_id": 930519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6bdf258416b7626ce5de49953f428fa5?s=128&d=identicon&r=PG", "display_name": "eugene2k", "link": "https://stackoverflow.com/users/930519/eugene2k"}, "is_accepted": false, "score": 0, "last_activity_date": 1466774517, "last_edit_date": 1466774517, "creation_date": 1466759843, "answer_id": 38009758, "question_id": 37894776, "link": "https://stackoverflow.com/questions/37894776/class-subtyping-in-rust/38009758#38009758", "title": "Class subtyping in Rust", "body": "<p>I guess the answer is that there is no subtyping in Rust yet. The kinds of problems subtyping solves can't always be solved by composition, generics or traits. The issue is <a href=\"https://github.com/rust-lang/rfcs/issues/349\" rel=\"nofollow\">known to the devs</a> and there have been solutions offered, but nothing has been decided yet.</p>\n"}], "owner": {"reputation": 121, "user_id": 930519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6bdf258416b7626ce5de49953f428fa5?s=128&d=identicon&r=PG", "display_name": "eugene2k", "link": "https://stackoverflow.com/users/930519/eugene2k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 870, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1536623923, "creation_date": 1466237340, "last_edit_date": 1466450679, "question_id": 37894776, "link": "https://stackoverflow.com/questions/37894776/class-subtyping-in-rust", "title": "Class subtyping in Rust", "body": "<p>C++ allows class subtyping, which is really convenient because you can use functions implemented for the base class with the derived class. Rust doesn't appear to have anything like that. The feature seems to have been available at some point, but has been removed since. Is this not possible in Rust? If so, are there any plans to have this feature?</p>\n\n<p>What I want to do is define a struct that inherits from another struct, which in C++ would look like:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>struct Base {\n    int x;\n    int y;\n    void foo(int x, int y) { this-&gt;x = x; this-&gt;y = y; }\n}\n\nstruct Derived: public Base {\n    ...\n}\n\nvoid main() {\n    Derived d;\n    d.foo();\n}\n</code></pre>\n\n<p>The way I see it, in Rust you have to write something like this in order to make the same functionality available for all 'derived' structs:</p>\n\n<pre><code>struct Base&lt;T&gt; {\n     x: i32,\n     y: i32,\n     derived: T\n}\nimpl&lt;T&gt; Base&lt;T&gt; {\n    fn foo(&amp;mut self, x: i32, y: i32) {\n         self.x = x;\n         self.y = y;\n    }\n}\n</code></pre>\n\n<p>I think doing an <code>impl&lt;T&gt; for Base&lt;T&gt;</code> will produce a ton of copies of the same function, so composition isn't really an option. </p>\n\n<p>I should probably point out that the implementation above was chosen for the simple reason that it allows a safer version of upcasting, which I need to do anyway.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1466251906, "post_id": 37895010, "comment_id": 63246923, "body": "I&#39;m pretty sure the &quot;disadvantages&quot; cancel each other out (deliberately). You know where the function is defined because presumably you&#39;ve have to think about which trait to include. My biggest annoyance with the trait is that you have to type it out twice (once for the trait, once for the impl)."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 2, "last_activity_date": 1466239355, "creation_date": 1466239355, "answer_id": 37895010, "question_id": 37894470, "link": "https://stackoverflow.com/questions/37894470/is-it-recommended-to-use-traits-to-implement-utility-functions-for-structs-in-ex/37895010#37895010", "title": "Is it recommended to use traits to implement utility functions for structs in external crate?", "body": "<p>(<em>Disclaimer</em>: I am not entirely sure about this. If this answer receives enough\u2122 upvotes, I will delete this disclaimer)</p>\n\n<hr>\n\n<p>Good question! I have already seen both solution in the wild and would say that both are valid to use. Or in other words: neither of the two solutions are considered bad.</p>\n\n<p>However, I'd say that <strong>using the <code>Ext</code>-trait approach is often a slightly better choice</strong> due to these advantages:</p>\n\n<ul>\n<li>Many operations feel way more natural to call \"on an object\" (with dot-notation) than to call a function with both objects.</li>\n<li>Chaining multiple calls looks nice in code because it fits our left-to-right way of reading, whereas with the function-approach the code is harder to read: <code>f(f(a, f(d, e)), c)</code>.</li>\n<li>If the user prefers the plain-function style, he can also use it that way with <code>Trait::func(self_object, arg)</code>.</li>\n</ul>\n\n<p>But of course there are some disadvantages (you already mentioned one):</p>\n\n<ul>\n<li>It's harder for the user to understand where the helper-function is defined.</li>\n<li>The user needs to have the trait in scope (read: <code>use</code> the trait).</li>\n</ul>\n"}], "owner": {"reputation": 1140, "user_id": 3767132, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/209b800d202fee00fdbaaa5ab063b46d?s=128&d=identicon&r=PG&f=1", "display_name": "sunnyone", "link": "https://stackoverflow.com/users/3767132/sunnyone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 756, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1466239355, "creation_date": 1466234962, "last_edit_date": 1466238538, "question_id": 37894470, "link": "https://stackoverflow.com/questions/37894470/is-it-recommended-to-use-traits-to-implement-utility-functions-for-structs-in-ex", "title": "Is it recommended to use traits to implement utility functions for structs in external crate?", "body": "<p>I want to implement a simple utility/helper function in Rust. The function just concatenates the path in a struct (from an external crate) and the argument passed. Is it more idiomatic to implement the helper-function as a normal function or as function of a custom trait?</p>\n\n<p>The implementation of the trait-based approach:</p>\n\n<pre><code>use std::path::{Path, PathBuf};\n\npub trait RepositoryExt {\n    fn get_full_path(&amp;self, path_in_repository: &amp;Path) -&gt; PathBuf;\n}\n\nimpl RepositoryExt for othercrate::Repository {\n    // othercrate::Repository's workdir() returns its path\n    fn get_full_path(&amp;self, path_in_repository: &amp;Path) -&gt; PathBuf {\n        self.workdir().join(path_in_repository)\n    }\n}\n</code></pre>\n\n<p>With just a function:</p>\n\n<pre><code>pub fn get_repository_full_path(repo: othercrate::Repository,\n                                path_in_repository: &amp;Path) -&gt; PathBuf {\n    repo.workdir().join(path_in_repository)\n}\n</code></pre>\n\n<p>The trait-based approach shortens the code when using the helper-function, but I'm worried that it may introduce difficulty to understand where it's defined.</p>\n\n<p>Though both implementations should work, I want to know which is the recommended way in Rust.</p>\n"}, {"tags": ["c", "gcc", "linker", "rust"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user539810"}, "edited": false, "score": 3, "creation_date": 1466206303, "post_id": 37891559, "comment_id": 63237896, "body": "Things to check: 1. Does your GCC default to 64-bit or 32-bit (try adding <code>-m32</code> or <code>-m64</code> explicitly)? 2. Does your Rust compiler target 64-bit or 32-bit? 3. <a href=\"https://www.rust-lang.org/downloads.html#win-foot\" rel=\"nofollow noreferrer\">Does your installed Rust compiler use the GNU ABI or the MS ABI</a>?"}], "answers": [{"comments": [{"owner": {"reputation": 440, "user_id": 1161194, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/d967e4b6e03b82fa3481af69e70d4315?s=128&d=identicon&r=PG", "display_name": "HLorenzi", "link": "https://stackoverflow.com/users/1161194/hlorenzi"}, "edited": false, "score": 0, "creation_date": 1466292339, "post_id": 37892384, "comment_id": 63257998, "body": "It seems the problem was GCC being outdated. I&#39;ve switched to a 6.1.0 build I found at <a href=\"https://nuwen.net/mingw.html\" rel=\"nofollow noreferrer\">nuwen.net/mingw.html</a>, and now everything just works! MinGW still hasn&#39;t updated its GCC version; is it still mantained? On that note, what port of GCC are you using on Windows?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1466212631, "creation_date": 1466212631, "answer_id": 37892384, "question_id": 37891559, "link": "https://stackoverflow.com/questions/37891559/rusts-o-file-format-not-recognized-by-gcc/37892384#37892384", "title": "Rust&#39;s .o file format not recognized by GCC", "body": "<p>Works fine for me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc test.rs --emit=obj\n$ gcc -c main.c\n$ file test.o\ntest.o: 80386 COFF executable not stripped - version 30821\n$ file main.o\nmain.o: 80386 COFF executable not stripped - version 30821\n$ gcc test.o main.o -o awesome\n$ file awesome.exe\nawesome.exe: PE32 executable (console) Intel 80386, for MS Windows\n\n$ ./awesome.exe\nHello, world!\nNumber is 42.\n\n$ rustc --version --verbose\nrustc 1.9.0 (e4e8b6668 2016-05-18)\nbinary: rustc\ncommit-hash: e4e8b666850a763fdf1c3c2c142856ab51e32779\ncommit-date: 2016-05-18\nhost: i686-pc-windows-gnu\nrelease: 1.9.0\n$ gcc --version\ngcc (GCC) 5.3.0\n</code></pre>\n"}], "owner": {"reputation": 440, "user_id": 1161194, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/d967e4b6e03b82fa3481af69e70d4315?s=128&d=identicon&r=PG", "display_name": "HLorenzi", "link": "https://stackoverflow.com/users/1161194/hlorenzi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4116, "favorite_count": 1, "accepted_answer_id": 37892384, "answer_count": 1, "score": 1, "last_activity_date": 1466212631, "creation_date": 1466204978, "last_edit_date": 1466210781, "question_id": 37891559, "link": "https://stackoverflow.com/questions/37891559/rusts-o-file-format-not-recognized-by-gcc", "title": "Rust&#39;s .o file format not recognized by GCC", "body": "<p>I'm trying to build a simple application in C that calls Rust functions, in Windows, using MinGW with GCC 4.9.3 and Rust 1.9.0 stable. Here's the source code:</p>\n\n<p><strong>test.rs</strong></p>\n\n<pre><code>#![crate_type = \"staticlib\"]\n\n#[no_mangle]\npub extern \"C\" fn get_number() -&gt; isize {\n    42 as isize\n}\n</code></pre>\n\n<p><strong>main.c</strong></p>\n\n<pre><code>#include &lt;stdio.h&gt;\n\nint get_number();\n\nint main()\n{\n    printf(\"Hello, world!\\n\");\n    printf(\"Number is %d.\\n\", get_number());\n    return 0;\n}\n</code></pre>\n\n<p>Now, I know I should use C-compatible types in Rust and whatnot. But before going into program correctness, there's a problem in that Rust seems to be generating object files that GCC doesn't understand. Here's what I'm trying:</p>\n\n<pre><code>rustc --emit obj test.rs\ngcc -c main.c\ngcc -static-libgcc test.o main.o -lmingw32 -o test.exe\n</code></pre>\n\n<p>But the linker command terminates with:</p>\n\n<pre><code>test.o: file not recognized: File format not recognized\ncollect2.exe: error: ld returned 1 exit status\n</code></pre>\n\n<p>I've searched for Rust compiler directives that would change output format, but I couldn't find any. I've read Rust's FFI docs, but it doesn't mention anything like this. Usually, information is about calling C from Rust. Asking Rust to generate ASM files and assembling with GCC's <code>as</code> doesn't work, due to incompatible syntax, apparently.</p>\n\n<p>Is this a compatibility issue with the Windows version of Rust/GCC? Is there anything I can do to generate compatible object files from Rust? Or rather, what kind of output should I ask Rust to generate to make this possible? I'm also interested in calling Rust code from C on a variety of gaming console SDKs. What kind of setup would I need to maximize compatibility with other linkers?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 4, "last_activity_date": 1466205423, "last_edit_date": 1466205423, "creation_date": 1466205012, "answer_id": 37891567, "question_id": 37891266, "link": "https://stackoverflow.com/questions/37891266/the-most-simple-way-to-implement-a-class-factory/37891567#37891567", "title": "The most simple way to implement a class factory?", "body": "<p>You should use <code>Box</code>. <code>Box</code> allows you to store a <a href=\"https://doc.rust-lang.org/book/trait-objects.html\" rel=\"nofollow\">trait object</a> making all methods call dynamic dispatched. Using a <code>enum</code> would require adding a new variant for each <code>DeriveX</code> and a <code>match</code> for each method implementation.</p>\n\n<p>Here is an example (<a href=\"https://play.rust-lang.org/?gist=2876e20af898c6cdac564681e6d9a8a4&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Playground</a>):</p>\n\n<pre><code>fn main() {\n    // 1, 2, .. is decided in runtime\n    let main = Main::new(1);\n    main.call();\n    let main = Main::new(2);\n    main.call();\n}\n\nstruct Main {\n    methods: Box&lt;Base&gt;,\n}\n\nimpl Main {\n    fn new(num: usize) -&gt; Main {\n        let methods: Box&lt;Base&gt; = match num {\n            1 =&gt; Box::new(Derive1 { field1: 1 }),\n            2 =&gt; Box::new(Derive2 { field2: 2 }),\n            _ =&gt; panic!(),\n        };\n        Main { methods: methods }\n    }\n\n    fn call(&amp;self) {\n        self.methods.foo();\n    }\n}\n\ntrait Base {\n    fn foo(&amp;self) -&gt; i32;\n}\n\nstruct Derive1 {\n    field1: u8,\n}\n\nstruct Derive2 {\n    field2: u16,\n}\n\nimpl Base for Derive1 {\n    fn foo(&amp;self) -&gt; i32 {\n        println!(\"Derive1: {}\", self.field1);\n        self.field1 as i32\n    }\n}\n\nimpl Base for Derive2 {\n    fn foo(&amp;self) -&gt; i32 {\n        println!(\"Derive2: {}\", self.field2);\n        self.field2 as i32\n    }\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Derive1: 1\nDerive2: 2\n</code></pre>\n"}], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 0, "accepted_answer_id": 37891567, "answer_count": 1, "score": 2, "last_activity_date": 1466210710, "creation_date": 1466202665, "last_edit_date": 1466210710, "question_id": 37891266, "link": "https://stackoverflow.com/questions/37891266/the-most-simple-way-to-implement-a-class-factory", "title": "The most simple way to implement a class factory?", "body": "<p>I have an interface:</p>\n\n<pre><code>trait Base {\n    fn foo(&amp;self) -&gt; i32;\n}\n</code></pre>\n\n<p>and its implementation for two different structs:</p>\n\n<pre><code>struct Derive1 {\n    field1 : u8,\n}\n\nstruct Derive2 {\n    field2 : u16,\n}\n\nimpl Base for Derive1 {\n    fn foo(&amp;self) -&gt; i32 {\n        println!(\"Derive1: {}\", self.field1);\n        self.field1 as i32\n    }\n}\n\nimpl Base for Derive2 {\n    fn foo(&amp;self) -&gt; i32 {\n        println!(\"Derive2: {}\", self.field2);\n        self.field2 as i32\n    }\n}\n</code></pre>\n\n<p>at runtime, depending on external conditions, I want create\n<code>Derive1</code> or <code>Derive2</code> and then use <code>trait</code> corresponding to <code>struct</code>,\nwhat should I use to hold <code>struct</code>?</p>\n\n<p>To make it clear, for example I have:</p>\n\n<pre><code>struct Main&lt;'a&gt; {\n    methods: &amp;'a Base\n}\n\nimpl &lt;'a&gt; Main &lt;'a&gt; {\n    /*\n    fn new(external_condition: bool) -&gt; Main&lt;'a&gt; {\n\n    }*/\n    fn call(&amp;self) {\n        self.methods.foo();\n    }\n}\n</code></pre>\n\n<p>How can I implement <code>Main::new</code>, and how I should hold <code>Derive1</code> or <code>Derive2</code> in <code>Main</code>? Should I use <code>enum</code> or <code>Box</code>?</p>\n\n<p>In the future, I may have <code>Derive3</code> and <code>Derive4</code>, so it would be good\nto reduce number of places where <code>DeriveX</code> is mentioned.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1039, "user_id": 4386643, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b1407b4e2426e7d10d76859de4a9c2a5?s=128&d=identicon&r=PG&f=1", "display_name": "MakotoE", "link": "https://stackoverflow.com/users/4386643/makotoe"}, "edited": false, "score": 3, "creation_date": 1595528282, "post_id": 37890739, "comment_id": 111514250, "body": "The difference between <code>ok_or</code> and <code>ok_or_else</code>: &quot;Arguments passed to <code>ok_or</code> are eagerly evaluated; if you are passing the result of a function call, it is recommended to use <code>ok_or_else</code>, which is lazily evaluated.&quot;"}, {"owner": {"reputation": 15683, "user_id": 46571, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/79eede5b02caa81db17f34026b24a734?s=128&d=identicon&r=PG", "display_name": "pyon", "link": "https://stackoverflow.com/users/46571/pyon"}, "reply_to_user": {"reputation": 1039, "user_id": 4386643, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b1407b4e2426e7d10d76859de4a9c2a5?s=128&d=identicon&r=PG&f=1", "display_name": "MakotoE", "link": "https://stackoverflow.com/users/4386643/makotoe"}, "edited": false, "score": 0, "creation_date": 1595538905, "post_id": 37890739, "comment_id": 111518826, "body": "@MakotoE: Sure. I only used <code>ok_or()</code> because the passed argument is a constant."}], "tags": [], "owner": {"reputation": 15683, "user_id": 46571, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/79eede5b02caa81db17f34026b24a734?s=128&d=identicon&r=PG", "display_name": "pyon", "link": "https://stackoverflow.com/users/46571/pyon"}, "is_accepted": true, "score": 63, "last_activity_date": 1549844256, "last_edit_date": 1549844256, "creation_date": 1466199555, "answer_id": 37890739, "question_id": 37890405, "link": "https://stackoverflow.com/questions/37890405/is-there-a-way-to-simplify-converting-an-option-into-a-result-without-a-macro/37890739#37890739", "title": "Is there a way to simplify converting an Option into a Result without a macro?", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or\" rel=\"noreferrer\"><code>ok_or</code></a> and <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or_else\" rel=\"noreferrer\"><code>ok_or_else</code></a> methods convert <code>Option</code>s to <code>Result</code>s, and the <code>?</code> operator automates the boilerplate associated with early <code>Err</code> returns. </p>\n\n<p>You could do something like:</p>\n\n<pre><code>fn new() -&gt; Result&lt;Boo, String&gt; {\n    let item1 = section.get(\"item1\").ok_or(\"no item1\")?;\n    let item2 = section.get(\"item2\").ok_or(\"no item2\")?;\n    // whatever processing...\n    Ok(final_result)\n}\n</code></pre>\n"}], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 13745, "favorite_count": 1, "accepted_answer_id": 37890739, "answer_count": 1, "score": 36, "last_activity_date": 1549844399, "creation_date": 1466197794, "last_edit_date": 1549844399, "question_id": 37890405, "link": "https://stackoverflow.com/questions/37890405/is-there-a-way-to-simplify-converting-an-option-into-a-result-without-a-macro", "title": "Is there a way to simplify converting an Option into a Result without a macro?", "body": "<p>I have something like this (the real function is <code>Ini::Section::get</code> from <a href=\"https://github.com/zonyitoo/rust-ini\" rel=\"noreferrer\">rust-ini</a>):</p>\n\n<pre><code>impl Foo {\n    pub fn get&lt;K&gt;(&amp;'a mut self, key: &amp;K) -&gt; Option&lt;&amp;'a str&gt;\n    where\n        K: Hash + Eq,\n    {\n        // ...\n    }\n}\n</code></pre>\n\n<p>I have to call it several times:</p>\n\n<pre><code>fn new() -&gt; Result&lt;Boo, String&gt; {\n    let item1 = match section.get(\"item1\") {\n        None =&gt; return Result::Err(\"no item1\".to_string()),\n        Some(v) =&gt; v,\n    };\n    let item2 = match section.get(\"item2\") {\n        None =&gt; return Result::Err(\"no item2\".to_string()),\n        Some(v) =&gt; v,\n    };\n}\n</code></pre>\n\n<p>To remove code bloat, I can write a macro like this:</p>\n\n<pre><code>macro_rules! try_ini_get {\n    ($e:expr) =&gt; {\n        match $e {\n            Some(s) =&gt; s,\n            None =&gt; return Result::Err(\"no ini item\".to_string()),\n        }\n    }\n}\n</code></pre>\n\n<p>Is there any way to remove the code duplication without this macro implementation?</p>\n"}, {"tags": ["string", "char", "rust"], "comments": [{"owner": {"reputation": 389, "user_id": 5464210, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/59d9acb97d2975758f1edf80ad1f4840?s=128&d=identicon&r=PG&f=1", "display_name": "unskilledidiot", "link": "https://stackoverflow.com/users/5464210/unskilledidiot"}, "edited": false, "score": 0, "creation_date": 1466196007, "post_id": 37889337, "comment_id": 63234580, "body": "Thanks for your reply. Maybe i got horribly confused somewhere. Chronium&#39;s answer is perfect however."}], "answers": [{"tags": [], "owner": {"reputation": 576, "user_id": 3095091, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90ba23961eb7931a4fb1d8178f1c0913?s=128&d=identicon&r=PG", "display_name": "Chronium", "link": "https://stackoverflow.com/users/3095091/chronium"}, "is_accepted": true, "score": 41, "last_activity_date": 1614288128, "last_edit_date": 1614288128, "creation_date": 1466194467, "answer_id": 37889710, "question_id": 37889337, "link": "https://stackoverflow.com/questions/37889337/how-to-concatenate-a-char-onto-a-string-in-rust/37889710#37889710", "title": "How to concatenate a char onto a string in Rust?", "body": "<p>Using <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.push\" rel=\"nofollow noreferrer\"><code>String::push</code></a> method is the easiest method:</p>\n<pre><code>let mut a_string = String::from(&quot;Hello World&quot;);\na_string.push('!');\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 80945, "user_id": 1002260, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5ec9c21c8d54825b04def7a41998d18d?s=128&d=identicon&r=PG", "display_name": "Steven Penny", "link": "https://stackoverflow.com/users/1002260/steven-penny"}, "is_accepted": false, "score": 0, "last_activity_date": 1614287324, "creation_date": 1614287324, "answer_id": 66376453, "question_id": 37889337, "link": "https://stackoverflow.com/questions/37889337/how-to-concatenate-a-char-onto-a-string-in-rust/66376453#66376453", "title": "How to concatenate a char onto a string in Rust?", "body": "<p>You can also use <code>format!</code>:</p>\n<pre><code>fn main() {\n   let s = String::from(&quot;March&quot;);\n   // example 1\n   let s1 = format!(&quot;{}!&quot;, s);\n   // example 2\n   let s2 = format!(&quot;{}{}&quot;, s, '!');\n   // print\n   println!(&quot;{} {}&quot;, s1, s2);\n}\n</code></pre>\n<p><a href=\"https://doc.rust-lang.org/std/macro.format.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/macro.format.html</a></p>\n"}], "owner": {"reputation": 389, "user_id": 5464210, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/59d9acb97d2975758f1edf80ad1f4840?s=128&d=identicon&r=PG&f=1", "display_name": "unskilledidiot", "link": "https://stackoverflow.com/users/5464210/unskilledidiot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 13136, "favorite_count": 1, "accepted_answer_id": 37889710, "answer_count": 2, "score": 25, "last_activity_date": 1614288128, "creation_date": 1466192929, "last_edit_date": 1466210559, "question_id": 37889337, "link": "https://stackoverflow.com/questions/37889337/how-to-concatenate-a-char-onto-a-string-in-rust", "title": "How to concatenate a char onto a string in Rust?", "body": "<p>I have tried using the <code>to_string</code> method on the char but this returns a <code>&amp;str</code> when I need a <code>String</code>.</p>\n"}, {"tags": ["regex", "escaping", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 40086, "user_id": 499581, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1ba2cebc4582467916f2ddd6128447f4?s=128&d=identicon&r=PG", "display_name": "l&#39;L&#39;l", "link": "https://stackoverflow.com/users/499581/lll"}, "edited": false, "score": 0, "creation_date": 1466192368, "post_id": 37889091, "comment_id": 63232853, "body": "Maybe try doing <code>r#&quot;somestring&quot;#</code> ..."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1466210905, "last_edit_date": 1466210905, "creation_date": 1466210371, "answer_id": 37892183, "question_id": 37889091, "link": "https://stackoverflow.com/questions/37889091/how-to-set-input-as-raw-string-in-rust/37892183#37892183", "title": "How to set input as raw string in Rust?", "body": "<blockquote>\n  <p>Rust automatically escapes the input</p>\n</blockquote>\n\n<p>No, it doesn't. That would be a very strange decision for a systems language. Here's the <a href=\"/help/mcve\">MCVE</a> that I constructed:</p>\n\n<pre><code>extern crate regex;\n\nuse std::io;\nuse regex::Regex;\n\nstatic TEXT: &amp;'static str = \"Twas the best of times\";\n\nfn main() {\n    let mut search_keyword = String::new();\n    io::stdin().read_line(&amp;mut search_keyword).unwrap();\n    println!(\"You are searching: {:?}\", search_keyword);\n\n    let regex = Regex::new(search_keyword.trim()).unwrap();\n\n    let matched = regex.is_match(TEXT);\n    println!(\"Contains search term: {:?}\", matched);\n}\n</code></pre>\n\n<p>And an example of it running:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n     Running `target/debug/searcher`\nTw.s\nYou are searching: \"Tw.s\\n\"\nContains search term: true\n</code></pre>\n\n<p>Perhaps the usage of the debugging format string (<code>{:?}</code>) is confusing? That formats using the <a href=\"http://doc.rust-lang.org/std/fmt/trait.Debug.html\" rel=\"nofollow\"><code>Debug</code></a> trait, which escapes non-ASCII characters in strings.</p>\n"}], "owner": {"reputation": 215, "user_id": 3551861, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/rCIQP.jpg?s=128&g=1", "display_name": "tommyip", "link": "https://stackoverflow.com/users/3551861/tommyip"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 985, "favorite_count": 0, "accepted_answer_id": 37892183, "answer_count": 1, "score": -1, "last_activity_date": 1466210905, "creation_date": 1466191871, "last_edit_date": 1466209981, "question_id": 37889091, "link": "https://stackoverflow.com/questions/37889091/how-to-set-input-as-raw-string-in-rust", "title": "How to set input as raw string in Rust?", "body": "<p>How can I let Rust interpret a text input as a raw literal string? I am trying to make a <code>Regex</code> search function where I take a regex input and use it to search through some text:</p>\n\n<pre><code>...\n\nfn main() {\n    // Initiate file to search through\n    let text_path = Path::new(\"test.txt\");\n    let mut text_file = File::open(text_path).unwrap();\n    let mut text = String::new();\n    text_file.read_to_string(&amp;mut text);\n\n    // Search keyword\n    let mut search_keyword = String::new();\n\n    // Display filename and ask user for Regex\n    print!(\"Search (regex) in file[{path}]: \", path=text_path.display());\n    io::stdout().flush().ok();\n\n    // Get search keyword\n    io::stdin().read_line(&amp;mut search_keyword).unwrap();\n    println!(\"You are searching: {:?}\", search_keyword);\n\n    let search = to_regex(&amp;search_keyword.trim()).is_match(&amp;text);\n\n    println!(\"Contains search term: {:?}\", search);\n}\n\nfn to_regex(keyword: &amp;str) -&gt; Regex {\n    Regex::new(keyword).unwrap()\n}\n</code></pre>\n\n<p>Rust automatically escapes the input so I cannot use it for <code>Regex</code>. I know you can do this for a string:</p>\n\n<pre><code>r\"Some text here with with escaping characters: \\ \"\n</code></pre>\n\n<p>But how can I use that with a variable?</p>\n"}, {"tags": ["string", "rust"], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 29, "last_activity_date": 1466360323, "last_edit_date": 1466360323, "creation_date": 1466189729, "answer_id": 37888550, "question_id": 37888042, "link": "https://stackoverflow.com/questions/37888042/remove-single-trailing-newline-from-string-without-cloning/37888550#37888550", "title": "Remove single trailing newline from String without cloning", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/stable/std/string/struct.String.html#method.pop\" rel=\"noreferrer\"><code>String::pop</code></a> or <a href=\"https://doc.rust-lang.org/stable/std/string/struct.String.html#method.truncate\" rel=\"noreferrer\"><code>String::truncate</code></a>:</p>\n\n<pre><code>fn main() {\n    let mut s = \"hello\\n\".to_string();\n    s.pop();\n    assert_eq!(\"hello\", &amp;s);\n\n    let mut s = \"hello\\n\".to_string();\n    let len = s.len();\n    s.truncate(len - 1);\n    assert_eq!(\"hello\", &amp;s);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 12689, "user_id": 92584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/46984253e3b3814bfa71b95f1f971224?s=128&d=identicon&r=PG", "display_name": "Robert", "link": "https://stackoverflow.com/users/92584/robert"}, "edited": false, "score": 7, "creation_date": 1544208900, "post_id": 47370879, "comment_id": 94208293, "body": "&quot;If someone&#39;s password has trailing whitespace this should be preserved.&quot; However trim_right() will trim spaces too."}, {"owner": {"reputation": 193, "user_id": 1175508, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69c57074b55952dc562fc8161ae25ca1?s=128&d=identicon&r=PG", "display_name": "Sander", "link": "https://stackoverflow.com/users/1175508/sander"}, "reply_to_user": {"reputation": 12689, "user_id": 92584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/46984253e3b3814bfa71b95f1f971224?s=128&d=identicon&r=PG", "display_name": "Robert", "link": "https://stackoverflow.com/users/92584/robert"}, "edited": false, "score": 0, "creation_date": 1567870533, "post_id": 47370879, "comment_id": 102098808, "body": "True. A better solution would be to pattern match on the last two characters/bytes and determine the truncation index. But that won&#39;t remove multiple newlines. The requirements aren&#39;t clear enough to decide on that."}], "tags": [], "owner": {"reputation": 193, "user_id": 1175508, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69c57074b55952dc562fc8161ae25ca1?s=128&d=identicon&r=PG", "display_name": "Sander", "link": "https://stackoverflow.com/users/1175508/sander"}, "is_accepted": false, "score": 9, "last_activity_date": 1511038066, "creation_date": 1511038066, "answer_id": 47370879, "question_id": 37888042, "link": "https://stackoverflow.com/questions/37888042/remove-single-trailing-newline-from-string-without-cloning/47370879#47370879", "title": "Remove single trailing newline from String without cloning", "body": "<p>A more generic solution than the accepted one, that works with any kind of line ending:</p>\n\n<p>\n</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut s = \"hello\\r\\n\".to_string();\n    let len_withoutcrlf = s.trim_right().len();\n    s.truncate(len_withoutcrlf);\n    assert_eq!(\"hello\", &amp;s);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 187, "user_id": 2887274, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f5fb5ef8fb04cf06c49f03a9ad35f5e?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew S", "link": "https://stackoverflow.com/users/2887274/matthew-s"}, "edited": false, "score": 0, "creation_date": 1584071301, "post_id": 55041833, "comment_id": 107330030, "body": "Kind of annoying that we have to do this instead of it being baked into the language.. but I guess it does allow for OS optimization? I&#39;m pretty new to all of this stuff."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 187, "user_id": 2887274, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f5fb5ef8fb04cf06c49f03a9ad35f5e?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew S", "link": "https://stackoverflow.com/users/2887274/matthew-s"}, "edited": false, "score": 0, "creation_date": 1584092446, "post_id": 55041833, "comment_id": 107335910, "body": "If you want to iterate over the lines of a file or buffer, you can use <code>BufRead::lines</code>, which will <a href=\"https://doc.rust-lang.org/1.42.0/src/std/io/mod.rs.html#2397-2402\" rel=\"nofollow noreferrer\">trim the newline characters for you</a>. So the most common case is indeed covered by the standard library."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 20, "last_activity_date": 1551955371, "creation_date": 1551955371, "answer_id": 55041833, "question_id": 37888042, "link": "https://stackoverflow.com/questions/37888042/remove-single-trailing-newline-from-string-without-cloning/55041833#55041833", "title": "Remove single trailing newline from String without cloning", "body": "<p>A cross-platform way of stripping a single trailing newline without reallocating the string is this:</p>\n\n<pre><code>fn trim_newline(s: &amp;mut String) {\n    if s.ends_with('\\n') {\n        s.pop();\n        if s.ends_with('\\r') {\n            s.pop();\n        }\n    }\n}\n</code></pre>\n\n<p>This will strip either <code>\"\\n\"</code> or <code>\"\\r\\n\"</code> from the end of the string, but no additional whitespace.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 14899112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7487be79cd6dbd491ebf8cfa2192d025?s=128&d=identicon&r=PG&f=1", "display_name": "cuelindar", "link": "https://stackoverflow.com/users/14899112/cuelindar"}, "is_accepted": false, "score": 0, "last_activity_date": 1609129778, "last_edit_date": 1609129778, "creation_date": 1609129300, "answer_id": 65472979, "question_id": 37888042, "link": "https://stackoverflow.com/questions/37888042/remove-single-trailing-newline-from-string-without-cloning/65472979#65472979", "title": "Remove single trailing newline from String without cloning", "body": "<p>Edit: I just realized that the OP was looking to <em>not</em> make a copy of the string... so just making a note that this does in fact copy the string.  :(</p>\n<p>I'm a Rust newbie, so I don't know when this function was introduced, but consider using the <code>String::lines</code> method. It looks like it should work cross-platform in a reliable way and in my local development, appeared to behave as the OP was looking for.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io::stdin;\n\nfn main() {\n    println!(&quot;Enter a line of text:&quot;);\n    let mut buf = String::new();\n    stdin().read_line(&amp;mut buf).expect(&quot;Failed to read input.&quot;);\n    let my_str = buf.lines()\n        .next().expect(&quot;Could not read entry.&quot;);\n    println!(&quot;You entered: [{}]&quot;, my_str);\n}\n</code></pre>\n<p>Reference: <a href=\"https://doc.rust-lang.org/stable/std/string/struct.String.html#method.lines\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/stable/std/string/struct.String.html#method.lines</a></p>\n"}, {"tags": [], "owner": {"reputation": 24109, "user_id": 775954, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9f5a87db35489d2958945f35b457f1ee?s=128&d=identicon&r=PG", "display_name": "Matthias Braun", "link": "https://stackoverflow.com/users/775954/matthias-braun"}, "is_accepted": false, "score": 2, "last_activity_date": 1615037654, "last_edit_date": 1615037654, "creation_date": 1614445828, "answer_id": 66401342, "question_id": 37888042, "link": "https://stackoverflow.com/questions/37888042/remove-single-trailing-newline-from-string-without-cloning/66401342#66401342", "title": "Remove single trailing newline from String without cloning", "body": "<h1>with <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.strip_suffix\" rel=\"nofollow noreferrer\"><code>strip_suffix</code></a></h1>\n<p>This will remove one trailing <code>\\r\\n</code> or <code>\\n</code>:</p>\n<pre><code>fn strip_trailing_newline(input: &amp;str) -&gt; &amp;str {\n    return input.strip_suffix(&quot;\\r\\n&quot;)\n           .or(input.strip_suffix(&quot;\\n&quot;))\n           .unwrap_or(&amp;input);\n}\n</code></pre>\n<p>Some tests:</p>\n<pre><code>#[test]\nfn strip_newline_works(){\n    assert_eq!(strip_trailing_newline(&quot;Test0\\r\\n\\r\\n&quot;), &quot;Test0\\r\\n&quot;);\n    assert_eq!(strip_trailing_newline(&quot;Test1\\r\\n&quot;), &quot;Test1&quot;);\n    assert_eq!(strip_trailing_newline(&quot;Test2\\n&quot;), &quot;Test2&quot;);\n    assert_eq!(strip_trailing_newline(&quot;Test3&quot;), &quot;Test3&quot;);\n}\n</code></pre>\n"}], "owner": {"reputation": 1906, "user_id": 38820, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a572775f003705896160fa44c4d26291?s=128&d=identicon&r=PG", "display_name": "Wes", "link": "https://stackoverflow.com/users/38820/wes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 20899, "favorite_count": 1, "accepted_answer_id": 37888550, "answer_count": 5, "score": 27, "last_activity_date": 1615037654, "creation_date": 1466187900, "last_edit_date": 1567416123, "question_id": 37888042, "link": "https://stackoverflow.com/questions/37888042/remove-single-trailing-newline-from-string-without-cloning", "title": "Remove single trailing newline from String without cloning", "body": "<p>I have written a function to prompt for input and return the result. In this version the returned string includes a trailing newline from the user. I would like to return the input with that newline (and just that newline) removed:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn read_with_prompt(prompt: &amp;str) -&gt; io::Result&lt;String&gt; {\n    let stdout = io::stdout();\n    let reader = io::stdin();\n    let mut input = String::new();\n    print!(\"{}\", prompt);\n    stdout.lock().flush().unwrap();\n    reader.read_line(&amp;mut input)?;\n\n    // TODO: Remove trailing newline if present\n    Ok(input)\n}\n</code></pre>\n\n<p>The reason for only removing the single trailing newline is that this function will also be used to prompt for a password (with appropriate use of <a href=\"https://crates.io/crates/termios\" rel=\"noreferrer\">termios</a> to stop echoing) and if someone's password has trailing whitespace this should be preserved.</p>\n\n<p>After much fussing about how to actually remove a single newline at the end of a string I ended up using <code>trim_right_matches</code>. However that returns a <code>&amp;str</code>. I tried using <code>Cow</code> to deal with this but the error still says that the <code>input</code> variable doesn't live long enough.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn read_with_prompt&lt;'a&gt;(prompt: &amp;str) -&gt; io::Result&lt;Cow&lt;'a, str&gt;&gt; {\n    let stdout = io::stdout();\n    let reader = io::stdin();\n    let mut input = String::new();\n    print!(\"{}\", prompt);\n    stdout.lock().flush().unwrap();\n    reader.read_line(&amp;mut input)?;\n\n    let mut trimmed = false;\n    Ok(Cow::Borrowed(input.trim_right_matches(|c| {\n        if !trimmed &amp;&amp; c == '\\n' {\n            trimmed = true;\n            true\n        }\n        else {\n            false\n        }\n    })))\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing local variable `input`\n  --&gt; src/lib.rs:13:5\n   |\n13 |       Ok(Cow::Borrowed(input.trim_right_matches(|c| {\n   |       ^                ----- `input` is borrowed here\n   |  _____|\n   | |\n14 | |         if !trimmed &amp;&amp; c == '\\n' {\n15 | |             trimmed = true;\n16 | |             true\n...  |\n20 | |         }\n21 | |     })))\n   | |________^ returns a value referencing data owned by the current function\n</code></pre>\n\n<p>Based on <a href=\"https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str\">previous questions along these lines</a> it seems this is not possible. Is the only option to allocate a new string that has the trailing newline removed? It seems there should be a way to trim the string without copying it (in C you'd just replace the <code>'\\n'</code> with <code>'\\0'</code>).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 4, "creation_date": 1466181629, "post_id": 37886379, "comment_id": 63227591, "body": "Note that your <code>match</code> block is almost exactly the same thing as just using <code>try!</code>."}], "answers": [{"comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 2, "creation_date": 1466181610, "post_id": 37886407, "comment_id": 63227579, "body": "This operator is referred to as <a href=\"https://twitter.com/steveklabnik/status/659034597062262784\" rel=\"nofollow noreferrer\">turbo fish</a> for those who wonder like I did."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 8, "last_activity_date": 1466182361, "last_edit_date": 1466182361, "creation_date": 1466181402, "answer_id": 37886407, "question_id": 37886379, "link": "https://stackoverflow.com/questions/37886379/pass-none-into-a-function-that-accepts-option/37886407#37886407", "title": "Pass None into a function that accepts Option", "body": "<p>You could specify the type of the <code>T</code> in the type <code>Option&lt;T&gt;</code> for this <code>None</code> with:</p>\n\n<pre><code>let section = ifo_cfg.section(None::&lt;String&gt;).unwrap();\n//                                ^^^^^^^^^^ forces the type to be Option&lt;String&gt;\n</code></pre>\n\n<p>Alternatively, you could specify the type <code>S</code> of the method <code>section</code>:</p>\n\n<pre><code>let section = ifo_cfg.section::&lt;String&gt;(None).unwrap();\n//                           ^^^^^^^^^^ forces S = String\n</code></pre>\n\n<p>You can also look up <a href=\"https://doc.rust-lang.org/error-index.html#E0282\" rel=\"noreferrer\">E0282's explanation</a>, although it might not really answer your question at this time :)</p>\n\n<hr>\n\n<p>The syntax <code>::&lt;T,U,V&gt;</code> is sometimes called <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.parse\" rel=\"noreferrer\">the turbofish</a>. Some very generic methods like <code>String::parse()</code> and <code>Iterator::collect()</code> can return almost anything, and type inference does not have enough information to find the actual type. The <code>::&lt;T,U,V&gt;</code> allow the human to tell the compiler what generic parameter should be substituted. From <code>parse()</code>'s reference:</p>\n\n<blockquote>\n  <p>Because <code>parse()</code> is so general, it can cause problems with type inference. As such, <code>parse()</code> is one of the few times you'll see the syntax affectionately known as the 'turbofish': <code>::&lt;&gt;</code>. <strong>This helps the inference algorithm understand specifically which type you're trying to parse into.</strong></p>\n</blockquote>\n"}], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 840, "favorite_count": 1, "accepted_answer_id": 37886407, "answer_count": 1, "score": 4, "last_activity_date": 1466406612, "creation_date": 1466181310, "last_edit_date": 1466406612, "question_id": 37886379, "link": "https://stackoverflow.com/questions/37886379/pass-none-into-a-function-that-accepts-option", "title": "Pass None into a function that accepts Option", "body": "<p><a href=\"https://github.com/zonyitoo/rust-ini\" rel=\"nofollow\">rust-ini</a> has a function:</p>\n\n<pre><code>pub fn section&lt;'a, S&gt;(&amp;'a self, name: Option&lt;S&gt;) -&gt; Option&lt;&amp;'a Properties&gt;\n    where S: Into&lt;String&gt;\n</code></pre>\n\n<p>I want to read a file without sections, so I call it like this:</p>\n\n<pre><code>let ifo_cfg = match Ini::load_from_file(\"conf.ini\") {\n    Result::Ok(cfg) =&gt; cfg,\n    Result::Err(err) =&gt; return Result::Err(err.msg),\n};\nlet section = ifo_cfg.section(None).unwrap();\n</code></pre>\n\n<p>But it gives a compile error:</p>\n\n<blockquote>\n  <p>unable to infer enough type information about <code>_</code>; type annotations or\n  generic parameter binding required [E0282]</p>\n</blockquote>\n\n<p>I can fix it like this:</p>\n\n<pre><code>let none: Option&lt;String&gt; = None;\nlet section = ifo_cfg.section(none).unwrap();\n</code></pre>\n\n<p>How can fix this without the additional line with <code>none</code>?</p>\n"}, {"tags": ["c", "rust", "ffi", "dpdk"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1466171510, "post_id": 37882978, "comment_id": 63221379, "body": "Tricky. As you surmise, the problem of <code>static</code> function is that they are not supposed to be used outside the current compilation unit and therefore even if not inlined their symbols can be private (and inaccessible outside the library)."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466172055, "post_id": 37883449, "comment_id": 63221768, "body": "Do you think that the function call overhead/lack of inlining might negatively impact performance compared to rewriting the functions in <code>unsafe</code> Rust instead?"}, {"owner": {"reputation": 103, "user_id": 6479554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e872b3f2f74039a9aa807bd2a36af1?s=128&d=identicon&r=PG&f=1", "display_name": "kentonspr", "link": "https://stackoverflow.com/users/6479554/kentonspr"}, "edited": false, "score": 0, "creation_date": 1466172142, "post_id": 37883449, "comment_id": 63221833, "body": "This makes sense. I had though about writing the stub library like you had mentioned, but didn&#39;t know if that was the &quot;correct&quot; way to do it. Still learning."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466172158, "post_id": 37883449, "comment_id": 63221843, "body": "@MatthieuM., this naturally depends very heavily on how such functions are used. If they are called very rarely, which I expect is actually the case of functions like <code>core_count()</code>, there shouldn&#39;t be any noticeable impact."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466172262, "post_id": 37883449, "comment_id": 63221911, "body": "@MatthieuM., I also see that these functions, at least some of them, invoke other C macros, so I think that some shim will still likely be needed to expand these macros correctly, even if you reimplement them in Rust."}, {"owner": {"reputation": 103, "user_id": 6479554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e872b3f2f74039a9aa807bd2a36af1?s=128&d=identicon&r=PG&f=1", "display_name": "kentonspr", "link": "https://stackoverflow.com/users/6479554/kentonspr"}, "edited": false, "score": 0, "creation_date": 1466178233, "post_id": 37883449, "comment_id": 63225747, "body": "Thanks a bunch Vladimir, I was able to put together a simple stub file library and it all works now. I appreciate the response!"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 7, "last_activity_date": 1466172094, "last_edit_date": 1495541786, "creation_date": 1466171708, "answer_id": 37883449, "question_id": 37882978, "link": "https://stackoverflow.com/questions/37882978/accessing-static-c-functions-in-dpdk-from-rust-ffi/37883449#37883449", "title": "Accessing static C functions in DPDK from Rust FFI", "body": "<p>As you can see if you open the respective header file, these functions are declared directly there. This means that these functions will be included in <em>every</em> <code>.c</code>/<code>.cpp</code> file which includes this header, but since they are <code>static</code>, the linker won't create a symbol for them, so they are not actually present in the compiled version of the library. <a href=\"https://stackoverflow.com/questions/3956694/when-to-put-static-function-definitions-in-header-files-in-c\">Here</a> it is described why this may be needed, but unfortunately such design is not very FFI-friendly.</p>\n\n<p>What you can do is to create a stub C library which contains exactly the same functions which delegate to the static functions from the header but which are not themselves static. Like this:</p>\n\n<pre><code>#include &lt;rte_lcore.h&gt;\n\nunsigned my_rte_lcore_count(void) {\n    return rte_lcore_count();\n}\n\n// and so forth for every function you need\n</code></pre>\n\n<p>Then you can compile this stub file into a static library, using either a custom-written Makefile or a <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow noreferrer\">Cargo build script</a>, and link the final program to it. Then, naturally, you should write these functions in your <code>extern</code> block, not the original ones:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern {\n    fn my_rte_lcore_count() -&gt; libc::c_uint;\n}\n</code></pre>\n\n<p>I don't think there is any easier and more correct way.</p>\n\n<p><strong>Update:</strong> oh, I didn't notice your last sentence in the question. Yes, you're right, writing such a shim would be the correct way to do it.</p>\n"}], "owner": {"reputation": 103, "user_id": 6479554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e872b3f2f74039a9aa807bd2a36af1?s=128&d=identicon&r=PG&f=1", "display_name": "kentonspr", "link": "https://stackoverflow.com/users/6479554/kentonspr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 576, "favorite_count": 1, "accepted_answer_id": 37883449, "answer_count": 1, "score": 4, "last_activity_date": 1466209457, "creation_date": 1466170440, "last_edit_date": 1466209457, "question_id": 37882978, "link": "https://stackoverflow.com/questions/37882978/accessing-static-c-functions-in-dpdk-from-rust-ffi", "title": "Accessing static C functions in DPDK from Rust FFI", "body": "<p>I'm a fairly novice programmer and I'm running into a problem that I think I understand but don't know how to fix. I'm attempting to use the Rust FFI to interact with <a href=\"http://dpdk.org/\" rel=\"nofollow\">Intel's DPDK</a> which is all in C. My first attempt at this is recreating the helloworld example app. </p>\n\n<p>I'm reaching a compilation error that I think is due to functions from DPDK being static and not directly available from the library. My FFI interface is here:</p>\n\n<pre><code>use libc::{c_uint, c_int, c_void, c_char};\n\npub type LcoreFunctionT =\n    extern \"C\" fn(arg1: *mut c_void) -&gt; c_int;\n\nextern {\n    pub fn rte_eal_init(argc: c_int,\n                        argv: *mut *mut c_char) -&gt; c_int;\n    pub fn rte_eal_remote_launch(f: *mut LcoreFunctionT,\n                                    arg: *mut c_void,\n                                    slave_id: c_uint) -&gt; c_int;\n    pub fn rte_eal_mp_wait_lcore() -&gt; ();\n    pub fn rte_lcore_id() -&gt; c_uint;\n    pub fn rte_get_next_lcore(i: c_uint,\n                                skip_master: c_int,\n                                wrap: c_int) -&gt; c_uint;\n}\n</code></pre>\n\n<p>I've also got a library referencing this and wrapping the functions:</p>\n\n<pre><code>extern crate libc;\n\nuse libc::{c_uint, c_int, c_char, c_void};\nuse std::ffi::CString;\nuse std::ptr;\n\nmod ffi_rte_eal;\n\npub fn dpdk_rte_eal_init(argc: i32, argv: Vec&lt;String&gt;) -&gt; i32 {\n    let mut args: Vec&lt;*mut c_char&gt; =\n        argv.iter().map(|x| CString::new(x.clone()).unwrap().into_raw()).collect();\n    let retc: c_int = unsafe {ffi_rte_eal::rte_eal_init(argc as c_int, args.as_mut_ptr())};\n    let ret: i32 = retc as i32;\n    ret\n}\n\npub fn dpdk_rte_eal_remote_launch(f: extern \"C\" fn(*mut c_void) -&gt; i32,\n                                    slave_id: u32 ) -&gt; i32 {\n    let mut fc: ffi_rte_eal::LcoreFunctionT = f;\n    let retc: c_int = unsafe {ffi_rte_eal::rte_eal_remote_launch(&amp;mut fc,\n                                                                ptr::null_mut() as *mut c_void,\n                                                                slave_id as c_uint)};\n    let ret: i32 = retc as i32;\n    ret\n}\n\npub fn dpdk_rte_eal_mp_wait_lcore() -&gt; (){\n    unsafe {\n        ffi_rte_eal::rte_eal_mp_wait_lcore();\n    }\n}\n\npub fn dpdk_rte_lcore_id() -&gt; u32 {\n    let retc: c_uint = unsafe {ffi_rte_eal::rte_lcore_id()};\n    let ret: u32 = retc as u32;\n    ret\n}\n\npub fn dpdk_rte_get_next_lcore(i: u32,\n                                skip_master: i32,\n                                wrap: i32) -&gt; u32 {\n    let retc: c_uint = unsafe {ffi_rte_eal::rte_get_next_lcore(i as c_uint,\n                                                               skip_master as c_int,\n                                                               wrap as c_int)};\n    let ret: u32 = retc as u32;\n    ret\n}\n</code></pre>\n\n<p>And a build.rs file for linking the libraries - </p>\n\n<pre><code>//build.rs\n\nfn main() {\n    println!(\"cargo:rustc-link-lib=static=rte_eal\");\n    println!(\"cargo:rustc-link-search=native=/usr/local/lib\");\n    println!(\"cargo:rustc-link-lib=static=rte_mempool\");\n    println!(\"cargo:rustc-link-search=native=/usr/local/lib\");\n    println!(\"cargo:rustc-link-lib=static=rte_ring\");\n    println!(\"cargo:rustc-link-search=native=/usr/local/lib\");\n}\n</code></pre>\n\n<p>When I attempt to compile my own application against the FFI interface, I keep getting errors about undefined references to <code>rte_lcore_id</code> and <code>rte_get_next_lcore</code>. According to the DPDK's API documentation, those functions are part of the librte_eal library, but are <a href=\"http://dpdk.org/doc/api/rte__lcore_8h.html\" rel=\"nofollow\">defined in rte_lcore.h as static functions</a>. I'm assuming that these being static functions I will not be able to see them from Rust.</p>\n\n<p>In the helloworld example app that is bundled with DPDK they are importing rte_lcore.h directly. I take it this is why they can access these functions without just referencing librte_eal?</p>\n\n<p>Is there a method to access this in Rust or would there have to be something like a shim in C that let me wrap those functions and make them available via FFI?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1466170802, "post_id": 37882982, "comment_id": 63220943, "body": "Isn&#39;t a <code>Cell</code> sufficient since pointers are <code>Copy</code> (although you have to use <code>set</code>). A <code>RefCell</code> introduces run-time checking which seems unnecessary here."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 2, "last_activity_date": 1466170834, "last_edit_date": 1466170834, "creation_date": 1466170443, "answer_id": 37882982, "question_id": 37882516, "link": "https://stackoverflow.com/questions/37882516/assigning-mut-to-a-localkey/37882982#37882982", "title": "Assigning *mut to a LocalKey", "body": "<p>You have to use <code>Cell</code> (similar to the <a href=\"https://doc.rust-lang.org/stable/std/thread/struct.LocalKey.html#examples\" rel=\"nofollow\">examples</a>):</p>\n\n<pre><code>use std::ptr;\nuse std::cell::Cell;\n\nstruct Foo;\n\nthread_local!(static F: Cell&lt;*mut Foo&gt; = Cell::new(ptr::null_mut()));\n\nfn main() {\n    // let mut foo = Foo;\n    F.with(|f| {\n        f.set(ptr::null_mut());\n        // Don't do this, you can generate a use after free if foo is dropped\n        // f.set(&amp;mut foo);\n    });\n}\n</code></pre>\n\n<p>In the examples <code>RefCell</code> is used, but as <code>*mut</code> implements <code>Copy</code>, using <code>Cell</code> is <a href=\"https://doc.rust-lang.org/book/choosing-your-guarantees.html\" rel=\"nofollow\">sufficient</a>.</p>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 37882982, "answer_count": 1, "score": 1, "last_activity_date": 1466209383, "creation_date": 1466169215, "last_edit_date": 1466209383, "question_id": 37882516, "link": "https://stackoverflow.com/questions/37882516/assigning-mut-to-a-localkey", "title": "Assigning *mut to a LocalKey", "body": "<pre><code>use std::thread;\nuse std::ptr::null_mut;\n\nstruct Foo;\n\nthread_local!(static F: *mut Foo = std::ptr::null_mut());\n\nfn main() {\n    let foo = Foo;\n    F.with(|f|{\n        f = std::ptr::null_mut();\n        //f = foo as *mut Foo;\n    });\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>src/main.rs:234:13: 234:33 error: mismatched types [E0308]\nsrc/main.rs:234         f = std::ptr::null_mut();\n                            ^~~~~~~~~~~~~~~~~~~~\nsrc/main.rs:234:13: 234:33 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/main.rs:234:13: 234:33 note: expected type `&amp;*mut Foo`\nsrc/main.rs:234:13: 234:33 note:    found type `*mut _`\n</code></pre>\n\n<p><code>with</code> is defined as </p>\n\n<pre><code>fn with&lt;F, R&gt;(&amp;'static self, f: F) -&gt; R \nwhere F: FnOnce(&amp;T) -&gt; R\n</code></pre>\n\n<p>How would I assign a new <code>*mut</code> to <code>f</code> inside <code>with</code>? </p>\n\n<pre><code>use std::thread;\nuse std::ptr::null_mut;\nuse std::cell::*;\n\n#[derive(Debug)]\nstruct Foo{\n    i: i32\n}\n\nthread_local!(static F: Cell&lt;*mut Foo&gt; = Cell::new(std::ptr::null_mut()));\n\nfn main() {\n    let mut foo = Foo{i : 42};\n    let foop = &amp;mut foo as *mut Foo;\n    F.with(|f|{\n        let mut f1 = f.get();\n        println!(\"{:?}\", f1);\n        f1 = foop;\n    });\n    F.with(|f|{\n        println!(\"{:?}\", f.get());\n    });\n}\n</code></pre>\n\n<p>I am now using a <code>Cell</code> to get around the compile error but the problem is that the following prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0x0\n0x0\n</code></pre>\n\n<p>Which means that I am not assigning a new mutable pointer to the thread local variable <code>F</code>.</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 4, "creation_date": 1466170221, "post_id": 37882846, "comment_id": 63220513, "body": "No: <code>bob.buy_car(&amp;civic)</code> overwrites the <code>car</code> field. So the borrow checker is &quot;wrong&quot;... although I think it&#39;s right for it to be so simple."}, {"owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1466170602, "post_id": 37882846, "comment_id": 63220803, "body": "Ah. Yes of course, you are right. Must have overlooked that."}, {"owner": {"reputation": 22726, "user_id": 544621, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f0be786869c99d345f60209f98dd7b64?s=128&d=identicon&r=PG", "display_name": "hamstergene", "link": "https://stackoverflow.com/users/544621/hamstergene"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1466172359, "post_id": 37882846, "comment_id": 63221973, "body": "@MatthieuM. My understanding is that borrow checker does not look inside methods, it only sees the declarations. Think about using a method from compiled library, with no source code available, for example."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 22726, "user_id": 544621, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f0be786869c99d345f60209f98dd7b64?s=128&d=identicon&r=PG", "display_name": "hamstergene", "link": "https://stackoverflow.com/users/544621/hamstergene"}, "edited": false, "score": 3, "creation_date": 1466172797, "post_id": 37882846, "comment_id": 63222282, "body": "@hamstergene: your understanding is more or less correct. The borrow checker peeks inside <code>enum</code>/<code>struct</code> (to infer whether they borrow/own) does not peek inside functions and only use their signature. There are two benefits to this simplicity: a well-defined boundary (you can change the internals of a function without breaking the analysis) and a relative simplicity of implementation (simulating all the code paths of a function would be... hellish?). Still, we could imagine some supplementary syntax to indicate replacement semantics and such... I don&#39;t think it&#39;s worth it (too rare a case)."}], "tags": [], "owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "is_accepted": false, "score": 4, "last_activity_date": 1466170072, "creation_date": 1466170072, "answer_id": 37882846, "question_id": 37882477, "link": "https://stackoverflow.com/questions/37882477/how-to-tell-the-rust-compiler-that-a-borrow-has-ended/37882846#37882846", "title": "How to tell the Rust compiler that a borrow has ended?", "body": "<p>The \"Rust way\" to tell the borrow-checker that a borrow ended is to introduce a new scope:</p>\n\n<pre><code>fn main() {\n    let civic = Car{model: \"Honda Civic\".to_string()};\n    let mut ghibli = Car{model: \"Maserati Ghibli\".to_string()};\n    {\n        let mut bob = Person::new();\n\n        bob.buy_car(&amp;ghibli);\n\n        bob.buy_car(&amp;civic);\n    }\n    let anything = &amp;mut ghibli;\n}\n</code></pre>\n\n<p>What you have to realize though, is that in your example, (and probably in most cases anyway) the borrow-checker was right.</p>\n\n<p><code>Bob</code> borrowed a reference to <code>ghibli</code>. It is still present at the end of the main method in his <code>car</code> field.</p>\n"}, {"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 2, "last_activity_date": 1466172176, "creation_date": 1466172176, "answer_id": 37883616, "question_id": 37882477, "link": "https://stackoverflow.com/questions/37882477/how-to-tell-the-rust-compiler-that-a-borrow-has-ended/37883616#37883616", "title": "How to tell the Rust compiler that a borrow has ended?", "body": "<p>This is a case where the static borrow rules don't work, since there's dynamic behaviour going on that you can't tell the compiler about.</p>\n\n<p>You need to use <code>Rc&lt;T&gt;</code>, which can do the borrowing checks at runtime; or if you need mutable access then <code>Rc&lt;Cell&lt;T&gt;&gt;</code> or <code>Rc&lt;RefCell&lt;T&gt;&gt;</code>.  Then as long as you access it in a dynamically safe way, all will be well.</p>\n"}], "owner": {"reputation": 81, "user_id": 6474252, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64b70ab9025555ad71bf5ded4db04e5e?s=128&d=identicon&r=PG&f=1", "display_name": "jokeydokey", "link": "https://stackoverflow.com/users/6474252/jokeydokey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 0, "accepted_answer_id": 37883616, "answer_count": 2, "score": 4, "last_activity_date": 1466209592, "creation_date": 1466169100, "last_edit_date": 1466209592, "question_id": 37882477, "link": "https://stackoverflow.com/questions/37882477/how-to-tell-the-rust-compiler-that-a-borrow-has-ended", "title": "How to tell the Rust compiler that a borrow has ended?", "body": "<p>While <a href=\"https://mobiarch.wordpress.com/2015/07/08/understanding-lifetime-in-rust-part-ii-3/\" rel=\"nofollow\">checking out tutorials</a> about Rust, I came across a problem with the borrow checker. The following code doesn't compile:</p>\n\n<pre><code>struct Car {\n    model: String,\n}\n\nstruct Person&lt;'a&gt; {\n    car: Option&lt;&amp;'a Car&gt;,\n}\n\nimpl&lt;'a&gt; Person&lt;'a&gt; {\n    fn new() -&gt; Person&lt;'a&gt; {\n        Person { car: None }\n    }\n\n    fn buy_car(&amp;mut self, c: &amp;'a Car) {\n        // how to say that Person don't borrow the old car any longer?\n        self.car = Some(c);\n    }\n}\n\nfn main() {\n    let civic = Car { model: \"Honda Civic\".to_string() };\n    let mut ghibli = Car { model: \"Maserati Ghibli\".to_string() };\n    let mut bob = Person::new();\n\n    bob.buy_car(&amp;ghibli);\n\n    bob.buy_car(&amp;civic);\n\n    // error: cannot borrow `ghibli` as mutable because it is also borrowed as immutable\n    let anything = &amp;mut ghibli;\n}\n</code></pre>\n\n<p>I understand that because of it's lexical nature Rust's borrow checker can't recognize that the borrow of <code>ghibli</code> has already ended.</p>\n\n<p>But I would really like to know how to solve this problem the Rust way? Do I have to use <code>Rc&lt;T&gt;</code> or <code>Box&lt;T&gt;</code> in some way?</p>\n"}, {"tags": ["rust", "slice", "trait-objects"], "answers": [{"comments": [{"owner": {"reputation": 216, "user_id": 1227578, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/78b22a7920971251a32c84562e4f04d0?s=128&d=identicon&r=PG", "display_name": "Mikhail Cheshkov", "link": "https://stackoverflow.com/users/1227578/mikhail-cheshkov"}, "edited": false, "score": 0, "creation_date": 1466166964, "post_id": 37881443, "comment_id": 63218401, "body": "Thanks! But error message is just strange then. Compiler says &quot;the trait <code>std::io::Read</code> is not implemented for the type <code>[u8]</code>&quot; when it&#39;s actually not implemented for <code>&amp; mut [u8]</code>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 216, "user_id": 1227578, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/78b22a7920971251a32c84562e4f04d0?s=128&d=identicon&r=PG", "display_name": "Mikhail Cheshkov", "link": "https://stackoverflow.com/users/1227578/mikhail-cheshkov"}, "edited": false, "score": 1, "creation_date": 1466167420, "post_id": 37881443, "comment_id": 63218676, "body": "@MikhailCheshkov That&#39;s probably because there is a blanked <code>Read</code> implementation for <code>&amp;mut T</code> where <code>T: Read</code>."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 6, "last_activity_date": 1466166035, "creation_date": 1466166035, "answer_id": 37881443, "question_id": 37881254, "link": "https://stackoverflow.com/questions/37881254/create-read-trait-object-from-u8-slice/37881443#37881443", "title": "Create Read trait object from u8 slice", "body": "<p>As the error message tells you, there's a <code>Read</code> impl for <code>&amp;[u8]</code>. There's no reason to have a <code>Read</code> impl for <code>&amp;mut[u8]</code>, so you can just remove some of the <code>mut</code>'s in your code:</p>\n\n<pre><code>// no need for `mut arr`, because `Read` does not modify memory\nlet arr: [u8; 4] = [1, 2, 3, 4];\n// `slice` needs to be `mut`, because `Read` will\n// actually make the slice smaller with every step\nlet mut slice: &amp;[u8] = &amp;arr;\nlet mut read: &amp;mut std::io::Read = &amp;mut slice;\n</code></pre>\n"}], "owner": {"reputation": 216, "user_id": 1227578, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/78b22a7920971251a32c84562e4f04d0?s=128&d=identicon&r=PG", "display_name": "Mikhail Cheshkov", "link": "https://stackoverflow.com/users/1227578/mikhail-cheshkov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 748, "favorite_count": 0, "accepted_answer_id": 37881443, "answer_count": 1, "score": 0, "last_activity_date": 1466209305, "creation_date": 1466165443, "last_edit_date": 1466209305, "question_id": 37881254, "link": "https://stackoverflow.com/questions/37881254/create-read-trait-object-from-u8-slice", "title": "Create Read trait object from u8 slice", "body": "<p>I'm trying to create a <code>Read</code> trait object from a <code>u8</code> slice, to use in <code>murmur3</code> crate, like this</p>\n\n<pre><code>fn main() {\n    let mut arr: [u8; 4] = [1, 2, 3, 4];\n    let mut slice: &amp;mut [u8] = &amp;mut arr;\n    let mut read: &amp;mut std::io::Read = &amp;mut slice;\n}\n</code></pre>\n\n<p>But I get</p>\n\n<pre><code>&lt;anon&gt;:4:42: 4:53 error: the trait `std::io::Read` is not implemented for the type `[u8]` [E0277]\n&lt;anon&gt;:4     let mut read : &amp; mut std::io::Read = &amp; mut slice;\n                                                  ^~~~~~~~~~~\n&lt;anon&gt;:4:42: 4:53 help: see the detailed explanation for E0277\n&lt;anon&gt;:4:42: 4:53 help: the following implementations were found:\n&lt;anon&gt;:4:42: 4:53 help:   &lt;&amp;'a [u8] as std::io::Read&gt;\n&lt;anon&gt;:4:42: 4:53 note: required for the cast to the object type `std::io::Read`\nerror: aborting due to previous error\n</code></pre>\n\n<p>What's wrong with this code?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 51244, "user_id": 952747, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/86ebf3cf751f63acb38e763f7104a318?s=128&d=identicon&r=PG&f=1", "display_name": "masoud", "link": "https://stackoverflow.com/users/952747/masoud"}, "edited": false, "score": 0, "creation_date": 1466155477, "post_id": 37877587, "comment_id": 63210818, "body": ".. but I&#39;ve thought Rust has <i>return type inference</i> since many new languages have. Why it doesn&#39;t infer the return type of <code>new</code> from the line I wrote?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 51244, "user_id": 952747, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/86ebf3cf751f63acb38e763f7104a318?s=128&d=identicon&r=PG&f=1", "display_name": "masoud", "link": "https://stackoverflow.com/users/952747/masoud"}, "edited": false, "score": 5, "creation_date": 1466155954, "post_id": 37877587, "comment_id": 63211131, "body": "@deepmax: Rust has type inference <i>within a function</i>, but requires functions signatures to be explicit. Even if it did, however, it would conclude that <code>new</code> should return <code>()</code> because of the semi-colon. The type of <code>Source { look: &#39;\\0&#39; }</code> is <code>Source</code>, but the type of <code>Source { look: &#39;\\0&#39; };</code> (with semicolon) is <code>()</code>."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 8, "last_activity_date": 1466154732, "creation_date": 1466154732, "answer_id": 37877587, "question_id": 37877402, "link": "https://stackoverflow.com/questions/37877402/no-method-field-name-found/37877587#37877587", "title": "No method/field name found", "body": "<p><code>Source::new</code> has no return type specified, and thus returns <code>()</code> (the empty tuple, also called unit).</p>\n\n<p>As a result, <code>src</code> has type <code>()</code>, which does not have a <code>get_char</code> method, which is what the error message is telling you.</p>\n\n<p>So, first things first, let's set a proper signature for <code>new</code>: <code>fn new() -&gt; Source</code>. Now we get:</p>\n\n<pre><code>error: not all control paths return a value [E0269]\n     fn new() -&gt; Source {\n         Source {look: '\\0'};\n     }\n</code></pre>\n\n<p>This is caused because Rust is an expression language, nearly everything is an expression, unless a semicolon is used to transform the expression into a statement. You can write <code>new</code> either:</p>\n\n<pre><code>fn new() -&gt; Source { \n    return Source { look: '\\0' };\n}\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>fn new() -&gt; Source {\n    Source { look: '\\0' }  // look Ma, no semi-colon!\n}\n</code></pre>\n\n<p>The latter being the more idiomatic in Rust.</p>\n\n<p>So, let's do that, now we get:</p>\n\n<pre><code>error: cannot borrow immutable local variable `src` as mutable\n    src.get_char();\n    ^~~\n</code></pre>\n\n<p>Which is because <code>src</code> is declared immutable (the default), for it to be mutable you need to use <code>let mut src</code>.</p>\n\n<p>And now it all works!</p>\n\n<hr>\n\n<p>Final code:</p>\n\n<pre><code>use std::io::Read;\n\nstruct Source {\n    look: char\n}\n\nimpl Source {\n    fn new() -&gt; Source {\n        Source {look: '\\0'}\n    }\n\n    fn get_char(&amp;mut self) {\n        self.look = 'a';\n    }\n}\n\nfn main() {\n    let mut src = Source::new();\n    src.get_char();\n\n    println!(\"{}\", src.look);\n}\n</code></pre>\n\n<p><em>Note: there is a warning because <code>std::io::Read</code> is unused, but I assume you plan to use it.</em></p>\n"}], "owner": {"reputation": 51244, "user_id": 952747, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/86ebf3cf751f63acb38e763f7104a318?s=128&d=identicon&r=PG&f=1", "display_name": "masoud", "link": "https://stackoverflow.com/users/952747/masoud"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 525, "favorite_count": 0, "accepted_answer_id": 37877587, "answer_count": 1, "score": 2, "last_activity_date": 1466209181, "creation_date": 1466154260, "last_edit_date": 1466209181, "question_id": 37877402, "link": "https://stackoverflow.com/questions/37877402/no-method-field-name-found", "title": "No method/field name found", "body": "<p>I'm trying to apply some OOP but I'm facing a problem.</p>\n\n<pre><code>use std::io::Read;\n\nstruct Source {\n    look: char\n}\n\nimpl Source {\n    fn new() {\n        Source {look: '\\0'};\n    }\n\n    fn get_char(&amp;mut self) {\n        self.look = 'a';\n    }\n}\n\n\nfn main() {\n    let src = Source::new();\n    src.get_char();\n\n    println!(\"{}\", src.look);\n}\n</code></pre>\n\n<p>Compiler reports these errors, for <code>src.get_char();</code>:</p>\n\n<blockquote>\n  <p>error: no method named <code>get_char</code> found for type <code>()</code> in the current\n  scope</p>\n</blockquote>\n\n<p>and for <code>println!(\"{}\", src.look);</code>:</p>\n\n<blockquote>\n  <p>attempted access of field <code>look</code> on type <code>()</code>, but no field with that\n  name was found</p>\n</blockquote>\n\n<p>I can't find out what I've missed.</p>\n"}, {"tags": ["rust", "constants", "immutability"], "answers": [{"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": false, "score": 3, "last_activity_date": 1466154591, "creation_date": 1466154591, "answer_id": 37877533, "question_id": 37877381, "link": "https://stackoverflow.com/questions/37877381/what-is-the-difference-between-immutable-and-const-variables-in-rust/37877533#37877533", "title": "What is the difference between immutable and const variables in Rust?", "body": "<p><code>const</code> is for compile-time constants with everything that entails. For example, you can create a fixed-sized array whose size is a <code>const</code>, but you can't do that with a <code>let</code> binding. Of course, this also means that you can put far, far more things into a <code>let</code> binding than into a <code>const</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 24, "last_activity_date": 1466154974, "creation_date": 1466154974, "answer_id": 37877665, "question_id": 37877381, "link": "https://stackoverflow.com/questions/37877381/what-is-the-difference-between-immutable-and-const-variables-in-rust/37877665#37877665", "title": "What is the difference between immutable and const variables in Rust?", "body": "<p><code>const</code> is not for variables; it's for constant values which may not be stored anywhere; they're effectively an alias for a literal value.</p>\n\n<p>Non-<code>mut</code> <code>let</code> declares an actual variable which is created at runtime, can be moved (and no longer accessible), and even have interior mutability (if it contains <code>Cell</code> members, for example) in some cases.</p>\n"}, {"comments": [{"owner": {"reputation": 119, "user_id": 12207627, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76c553d759e43dddcb0eca20c17f48a8?s=128&d=identicon&r=PG&f=1", "display_name": "nomad", "link": "https://stackoverflow.com/users/12207627/nomad"}, "edited": false, "score": 4, "creation_date": 1593179574, "post_id": 37878082, "comment_id": 110697258, "body": "The conventional term is &quot;shadowed&quot; (in the place of &quot;redefined&quot;)."}], "tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 4, "last_activity_date": 1466156041, "creation_date": 1466156041, "answer_id": 37878082, "question_id": 37877381, "link": "https://stackoverflow.com/questions/37877381/what-is-the-difference-between-immutable-and-const-variables-in-rust/37878082#37878082", "title": "What is the difference between immutable and const variables in Rust?", "body": "<p>Constants can not be redefined:</p>\n\n<pre><code>let x = 10u32;\nconst Y:u32 = 20u32;\n\nlet x = 11u32;\n//error: duplicate definition of value `Y` [E0428]\n//const Y:u32 = 21u32;\n\nprintln!(\"x={} Y={}\",x,Y); //x=11 Y=20\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 6992, "user_id": 495157, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/UFMPn.png?s=128&g=1", "display_name": "JGFMK", "link": "https://stackoverflow.com/users/495157/jgfmk"}, "edited": false, "score": 0, "creation_date": 1598725022, "post_id": 37881340, "comment_id": 112554996, "body": "<a href=\"https://doc.rust-lang.org/std/primitive.pointer.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.pointer.html</a> - here is the raw pointer usage It also gets a mention here.. <a href=\"https://doc.rust-lang.org/1.30.0/book/2018-edition/ch19-01-unsafe-rust.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.30.0/book/2018-edition/&hellip;</a> - but that isn&#39;t so easy to follow."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 51, "last_activity_date": 1518981182, "last_edit_date": 1518981182, "creation_date": 1466165719, "answer_id": 37881340, "question_id": 37877381, "link": "https://stackoverflow.com/questions/37877381/what-is-the-difference-between-immutable-and-const-variables-in-rust/37881340#37881340", "title": "What is the difference between immutable and const variables in Rust?", "body": "<p><code>const</code>, in Rust, is short for <em>constant</em> and is related to <em>compile-time evaluation</em>. It shows up:</p>\n\n<ul>\n<li>when declaring constants: <code>const FOO: usize = 3;</code></li>\n<li>when declaring compile-time evaluable functions: <code>const fn foo() -&gt; &amp;'static str</code></li>\n</ul>\n\n<p>These kinds of values can be used as generic parameters: <code>[u8; FOO]</code>. For now this is limited to array size, but there is talk, plans, and hope to extend it further in the future.</p>\n\n<p>By contrast, a <code>let</code> binding is about a run-time computed value.</p>\n\n<p>Note that despite <code>mut</code> being used because the concept of mutability is well-known, Rust actually lies here. <code>&amp;T</code> and <code>&amp;mut T</code> are about aliasing, not mutability:</p>\n\n<ul>\n<li><code>&amp;T</code>: shared reference</li>\n<li><code>&amp;mut T</code>: unique reference</li>\n</ul>\n\n<p>Most notably, some types feature <em>interior mutability</em> and can be mutated via <code>&amp;T</code> (shared references): <code>Cell</code>, <code>RefCell</code>, <code>Mutex</code>, etc.</p>\n\n<hr>\n\n<p><em>Note: there is an alternative use of <code>mut</code> and <code>const</code> with raw pointers (<code>*mut T</code> and <code>*const T</code>) which is not discussed here.</em></p>\n"}, {"tags": [], "owner": {"reputation": 41, "user_id": 11392661, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa792417d32ea3c5254b2a47da664684?s=128&d=identicon&r=PG&f=1", "display_name": "Lillo", "link": "https://stackoverflow.com/users/11392661/lillo"}, "is_accepted": false, "score": 4, "last_activity_date": 1571626709, "creation_date": 1571626709, "answer_id": 58479244, "question_id": 37877381, "link": "https://stackoverflow.com/questions/37877381/what-is-the-difference-between-immutable-and-const-variables-in-rust/58479244#58479244", "title": "What is the difference between immutable and const variables in Rust?", "body": "<p>Additionally, we can't make global items using <em>let</em>, but it's possible by using <em>const</em>. Here is an example. </p>\n\n<pre><code>const LENGTH:usize = 4;\n\nfn main() {\n    let arr:[i32; LENGTH] = [10,20,30,40];\n\n    for i in 0..LENGTH{\n        println!(\"{}\", arr[i])\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>for more information about the usages of <em>const</em>, <em>static</em>, and <em>let</em>:\n<a href=\"https://doc.rust-lang.org/1.1.0/book/const-and-static.html\" rel=\"nofollow noreferrer\"><code>const</code> and <code>static</code></a></p>\n\n<p>The story is a little bit longer.</p>\n"}, {"tags": [], "owner": {"reputation": 2964, "user_id": 7134134, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fzCCW.jpg?s=128&g=1", "display_name": "snnsnn", "link": "https://stackoverflow.com/users/7134134/snnsnn"}, "is_accepted": false, "score": 5, "last_activity_date": 1602145470, "last_edit_date": 1602145470, "creation_date": 1601966424, "answer_id": 64220569, "question_id": 37877381, "link": "https://stackoverflow.com/questions/37877381/what-is-the-difference-between-immutable-and-const-variables-in-rust/64220569#64220569", "title": "What is the difference between immutable and const variables in Rust?", "body": "<p>A <code>const</code> does not represent a memory location but a value. <code>const</code> values are directly inlined at usage location. Any temporary objects that are created during expression evaluation are accessible only by the compiler during compile time. Can be scoped globally. Can not reference runtime items. Must be type annotated.</p>\n<p>Let values represent a memory location. Immutability for <code>let</code> binding is a compiler enforced thing can be changed with <code>mut</code> modifier. It is runtime construct. Always locally scopped. Their types can be inferred by the compiler.</p>\n<p>For completeness, a <code>static</code> also represents a memory location like let but any references to the same static are actually a reference to the same memory location. Static are, well, statics. They are compiled into executable and accessible for the entire lifetime of the running program. Can be scoped globally. Can reference other statics. Must be type annotated.</p>\n"}], "owner": {"reputation": 2165, "user_id": 5460216, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/v3Z3y.png?s=128&g=1", "display_name": "7_R3X", "link": "https://stackoverflow.com/users/5460216/7-r3x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11429, "favorite_count": 10, "accepted_answer_id": 37881340, "answer_count": 6, "score": 64, "last_activity_date": 1602145470, "creation_date": 1466154187, "last_edit_date": 1518980365, "question_id": 37877381, "link": "https://stackoverflow.com/questions/37877381/what-is-the-difference-between-immutable-and-const-variables-in-rust", "title": "What is the difference between immutable and const variables in Rust?", "body": "<p>I learned that if a variable is not explicitly declared mutable using <code>mut</code>, it becomes immutable (it cannot be changed after declaration). Then why do we have the <code>const</code> keyword in Rust? Aren't they same? If not, how do they differ?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1466146089, "post_id": 37873597, "comment_id": 63205334, "body": "This.. its coersion happening. Perhaps promote your edit into the main answer?"}, {"owner": {"reputation": 151, "user_id": 2239513, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/00ad2453593455c6de770fca5ddbfd3d?s=128&d=identicon&r=PG", "display_name": "Tatsuya Kawano", "link": "https://stackoverflow.com/users/2239513/tatsuya-kawano"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1466152819, "post_id": 37873597, "comment_id": 63209060, "body": "Thank you for the suggestion. I promoted my edit (with some extra modifications for clarity) into the main answer."}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1466159291, "post_id": 37873597, "comment_id": 63213354, "body": "The book says &quot;A trait is object-safe if both of these are true: 1) trait does not require that <code>Self: Sized</code>; 2) all of its methods are object-safe&quot;.   However only reference to <code>Sized</code> value can be casted to trait object"}, {"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 0, "creation_date": 1466179038, "post_id": 37873597, "comment_id": 63226196, "body": "I would add to this answer (from my reading after getting help from everyone) that <code>str</code> is really just a wrapper for <code>[u8]</code>, who&#39;s size cannot be known at compile time. Thus, the &quot;fat&quot; reference."}], "tags": [], "owner": {"reputation": 151, "user_id": 2239513, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/00ad2453593455c6de770fca5ddbfd3d?s=128&d=identicon&r=PG", "display_name": "Tatsuya Kawano", "link": "https://stackoverflow.com/users/2239513/tatsuya-kawano"}, "is_accepted": false, "score": 5, "last_activity_date": 1466152669, "last_edit_date": 1466152669, "creation_date": 1466140496, "answer_id": 37873597, "question_id": 37872932, "link": "https://stackoverflow.com/questions/37872932/why-does-rust-not-recognize-that-a-variable-is-a-str/37873597#37873597", "title": "Why does Rust not recognize that a variable is a &amp;str?", "body": "<p>(Promoted my edits to the main answer)</p>\n\n<p>When you write <code>fn display(x: &amp;Display)</code>, the function takes a value that can be coerced into a <a href=\"https://doc.rust-lang.org/std/raw/struct.TraitObject.html\" rel=\"nofollow\">trait object</a> by dereferencing it. Also Rust function requires the value size of the parameter <code>x</code> to be known at the compile time.</p>\n\n<p>When <code>&amp;34</code> (<code>&amp;u32</code> type) is dereferenced and coerced into trait object, it becomes <code>u32</code> and its size can be determined.</p>\n\n<p>When <code>&amp;str</code> is dereferenced, it becomes <code>str</code> and its size cannot be determined as the length of a string can be anything.</p>\n\n<p>By adding <code>&amp;</code> to <code>&amp;str</code> (<code>&amp;&amp;str</code>), it is dereferenced back to <code>&amp;str</code>, which is a pointer and its size can be determined. I believe this is why the compiler only accepts <code>display(&amp;s)</code> in your code.</p>\n"}, {"comments": [{"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1466156455, "post_id": 37874472, "comment_id": 63211473, "body": "<code>Display</code> implemented for <code>str</code>, not for <code>&amp;str</code>. <a href=\"http://doc.rust-lang.org/src/core/up/src/libcore/fmt/mod.rs.html#1371-1375\" rel=\"nofollow noreferrer\">doc.rust-lang.org/src/core/up/src/libcore/fmt/&hellip;</a>"}], "tags": [], "owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "is_accepted": false, "score": 1, "last_activity_date": 1466144422, "creation_date": 1466144422, "answer_id": 37874472, "question_id": 37872932, "link": "https://stackoverflow.com/questions/37872932/why-does-rust-not-recognize-that-a-variable-is-a-str/37874472#37874472", "title": "Why does Rust not recognize that a variable is a &amp;str?", "body": "<blockquote>\n  <p>By changing display(s) to display(&amp;s) it works again.</p>\n</blockquote>\n\n<p>It all goes down to <code>&amp;str: Display (+ Sized)</code> and <code>str: !Display</code> (this is just a notation)</p>\n\n<ul>\n<li><code>display(s)</code> expects <code>s: &amp;Display</code>, => <code>&amp;str: &amp;Display</code> which is false.</li>\n<li><code>display(&amp;s)</code> expects <code>&amp;s: &amp;Display</code> => <code>&amp;(&amp;str) : &amp;Display</code> which is true as <code>&amp;str: Display</code></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 1, "creation_date": 1466178338, "post_id": 37879326, "comment_id": 63225812, "body": "Why does <code>display(&amp;s)</code> work though? I guess that is a referene to the &quot;fat&quot; reference? Are there other types that are &quot;fat&quot; referenes, or is <code>&amp;str</code> special somehow?"}, {"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 1, "creation_date": 1466178412, "post_id": 37879326, "comment_id": 63225853, "body": "I guess I don&#39;t understand why <code>str</code> isn&#39;t just a struct with the data and the length, instead of <code>&amp;str</code>? Then <code>&amp;str</code> would no longer be a fat pointer and we wouldn&#39;t have this problem!"}, {"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 1, "creation_date": 1466178782, "post_id": 37879326, "comment_id": 63226054, "body": "I looked up fat pointers and this was a pretty good reference: <a href=\"https://www.reddit.com/r/rust/comments/38tv6n/when_is_a_reference_not_a_pointer/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/38tv6n/&hellip;</a> I&#39;ll keep investigating..."}, {"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 1, "creation_date": 1466178939, "post_id": 37879326, "comment_id": 63226140, "body": "this was also a good reference: <a href=\"http://stackoverflow.com/questions/31949579/understanding-pointer-types-in-rust\" title=\"understanding pointer types in rust\">stackoverflow.com/questions/31949579/&hellip;</a>"}], "tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": true, "score": 7, "last_activity_date": 1466242869, "last_edit_date": 1466242869, "creation_date": 1466159503, "answer_id": 37879326, "question_id": 37872932, "link": "https://stackoverflow.com/questions/37872932/why-does-rust-not-recognize-that-a-variable-is-a-str/37879326#37879326", "title": "Why does Rust not recognize that a variable is a &amp;str?", "body": "<p>You are requesting that <code>&amp;str</code> should be coerced to <code>&amp;Display</code> (a reference to trait object), which seems to make sense since the type <code>str</code> implements <code>Display</code>.</p>\n\n<p>Yet as of Rust 1.9 (and no current plans of changing this), the conversion to a trait object is only possible for <code>&amp;T</code> to <code>&amp;Trait</code> if the type <code>T</code> is \u201c<code>Sized</code>\u201d.</p>\n\n<p>The reason is the implementation. A trait object like <code>&amp;Display</code> consists of two fields, one pointer to the data, and one pointer to the table of trait methods (vtable). This representation is only possible for values whose references are \u201cthin\u201d which are exactly the types <code>where T: Sized</code>. A <code>&amp;str</code> is a \u201cfat\u201d reference, it has a pointer and a length, and so a <code>str</code> can not be a trait object's data.</p>\n\n<hr>\n\n<blockquote>\n  <p>Why does display(&amp;s) work though? I guess that is a referene to the \"fat\" reference?</p>\n</blockquote>\n\n<p>Yes, exactly. A <code>&amp;&amp;str</code>, is a \u201dthin\u201d reference that points to the variable with the <code>&amp;str</code> value. So it can be converted to <code>&amp;Display</code>.</p>\n"}], "owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "accepted_answer_id": 37879326, "answer_count": 3, "score": 6, "last_activity_date": 1466242869, "creation_date": 1466136175, "last_edit_date": 1466209234, "question_id": 37872932, "link": "https://stackoverflow.com/questions/37872932/why-does-rust-not-recognize-that-a-variable-is-a-str", "title": "Why does Rust not recognize that a variable is a &amp;str?", "body": "<p>The below code compiles and runs fine:</p>\n\n<pre><code>use std::fmt::Display;\n\nfn display(x: &amp;str) {\n    println!(\"{}\", x);\n}\n\nfn main() {\n    let s: &amp;str = \"hi there\";\n    display(s);\n}\n</code></pre>\n\n<p>However, if you change the <code>display</code> function to be</p>\n\n<pre><code>fn display(x: &amp;Display)\n</code></pre>\n\n<p>It gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src/main.rs:9:13: 9:14 error: the trait `core::marker::Sized` is not implemented for the type `str` [E0277]\nsrc/main.rs:9     display(s);\n</code></pre>\n\n<p>By changing <code>display(s)</code> to <code>display(&amp;s)</code> it works again.</p>\n\n<p>What is going on here? Clearly the type is <code>&amp;str</code>, but when <code>&amp;Display</code> is the input argument it doesn't recognize that. </p>\n\n<p>Note: <code>&amp;34</code> also works as an argument just fine. Is this because <code>Display</code> is actually implemented for <code>&amp;str</code> and not <code>str</code>?</p>\n"}, {"tags": ["generics", "rust", "function-pointers", "traits", "type-alias"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1466151941, "post_id": 37871267, "comment_id": 63208553, "body": "This doesn&#39;t seem to be possible, as the error says.  Experimenting with <code>Fn(T)</code> as well didn&#39;t get me anywhere."}], "answers": [{"tags": [], "owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "is_accepted": true, "score": 3, "last_activity_date": 1466446444, "creation_date": 1466446444, "answer_id": 37929158, "question_id": 37871267, "link": "https://stackoverflow.com/questions/37871267/is-it-possible-to-create-a-type-alias-that-has-trait-bounds-on-a-generic-type-fo/37929158#37929158", "title": "Is it possible to create a type alias that has trait bounds on a generic type for a function?", "body": "<p>At this time, it does not seem to be possible and no workarounds exist.</p>\n"}, {"tags": [], "owner": {"reputation": 31, "user_id": 12740460, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mB3QmBpMpCTskdq-bPmRx4YunhOJ_yF6Khjl1Cr=k-s128", "display_name": "Cameron Dart", "link": "https://stackoverflow.com/users/12740460/cameron-dart"}, "is_accepted": false, "score": 3, "last_activity_date": 1604277448, "creation_date": 1604277448, "answer_id": 64638420, "question_id": 37871267, "link": "https://stackoverflow.com/questions/37871267/is-it-possible-to-create-a-type-alias-that-has-trait-bounds-on-a-generic-type-fo/64638420#64638420", "title": "Is it possible to create a type alias that has trait bounds on a generic type for a function?", "body": "<p>For anyone still curious about this as of Rust 1.47.0 it is still not possible but it looks like you get a nice little warning message with a description and suggested alternative.\ne.g.</p>\n<pre><code>pub type PublishQueue&lt;T: From&lt;Message&gt;&gt; = (tokio::sync::mpsc::Sender&lt;T&gt;);\n</code></pre>\n<p>yields</p>\n<pre><code>note: `#[warn(type_alias_bounds)]` on by default\nhelp: the bound will not be checked when the type alias is used, and should be removed\n|\n| pub type PublishQueue&lt;T&gt; = sync::mpsc::Sender&lt;T&gt;;\n|\n</code></pre>\n"}], "owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3267, "favorite_count": 0, "accepted_answer_id": 37929158, "answer_count": 2, "score": 5, "last_activity_date": 1604277448, "creation_date": 1466122487, "last_edit_date": 1546128918, "question_id": 37871267, "link": "https://stackoverflow.com/questions/37871267/is-it-possible-to-create-a-type-alias-that-has-trait-bounds-on-a-generic-type-fo", "title": "Is it possible to create a type alias that has trait bounds on a generic type for a function?", "body": "<p>This code:</p>\n\n<pre><code>pub type Foo&lt;T: Read&gt; = fn(bar: T);\n</code></pre>\n\n<p>yields <a href=\"https://doc.rust-lang.org/1.25.0/error-index.html#E0122\" rel=\"noreferrer\">error E0122</a> (in newer versions of Rust, it is only a warning):</p>\n\n<blockquote>\n  <p>An attempt was made to add a generic constraint to a type alias. This\n  constraint is entirely ignored. For backwards compatibility, Rust\n  still allows this with a warning. Consider the example below:</p>\n\n<pre><code>trait Foo {}\n\ntype MyType&lt;R: Foo&gt; = (R, ());\n\nfn main() {\n    let t: MyType&lt;u32&gt;;\n}\n</code></pre>\n  \n  <p>We're able to declare a variable of type <code>MyType&lt;u32&gt;</code>, despite the fact\n  that <code>u32</code> does not implement <code>Foo</code>. As a result, one should avoid using\n  generic constraints in concert with type aliases.</p>\n</blockquote>\n\n<p>Is it possible to create a type alias that contains trait requirements on a function pointer? Obviously the compiler is telling me no for types, but didn't know if there was another option for functions that I wasn't thinking of.</p>\n"}, {"tags": ["rust", "simd"], "comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 3, "creation_date": 1466120258, "post_id": 37870455, "comment_id": 63198690, "body": "Hint: a SIMD vector is usually not a good choice for representing a single x,y,z coordinate vector.  You usually end up needing a lot of horizontal operations if you try to use SIMD that way.  See the <a href=\"https://deplinenoise.wordpress.com/2015/03/06/slides-simd-at-insomniac-games-gdc-2015/\" rel=\"nofollow noreferrer\">these slides from a talk</a>, and other links in the <a href=\"http://stackoverflow.com/tags/sse/info\">sse tag wiki</a>.  As far as SIMD in Rust, IDK."}, {"owner": {"reputation": 13, "user_id": 4109107, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-KK_hmMw5ZAk/AAAAAAAAAAI/AAAAAAAAAMg/Ef5SIu1pHw0/photo.jpg?sz=128", "display_name": "Alexander Antoshuk", "link": "https://stackoverflow.com/users/4109107/alexander-antoshuk"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1466154013, "post_id": 37870455, "comment_id": 63209802, "body": "Thanks for interesting papers. So the simd classes is not good idea at all?"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1466155022, "post_id": 37870455, "comment_id": 63210501, "body": "It depends what you use it for.  SIMD is great if you can arrange your data so you can load a vector of 4 <code>x</code> values, another vector of 4 <code>y</code> values, etc.  Then you can do operations on 4 vectors at once.  If you can&#39;t do they, you <i>might</i> be able to still get some minor benefit, or a big benefit but only for a few functions."}], "owner": {"reputation": 13, "user_id": 4109107, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-KK_hmMw5ZAk/AAAAAAAAAAI/AAAAAAAAAMg/Ef5SIu1pHw0/photo.jpg?sz=128", "display_name": "Alexander Antoshuk", "link": "https://stackoverflow.com/users/4109107/alexander-antoshuk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 191, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1466129289, "creation_date": 1466116446, "last_edit_date": 1466129289, "question_id": 37870455, "link": "https://stackoverflow.com/questions/37870455/how-to-implement-basic-simd-operations-on-a-custom-struct-in-rust", "title": "How to implement basic SIMD operations on a custom struct in Rust?", "body": "<p>I have a struct:</p>\n\n<pre><code>#[repr(simd)]\nstruct Vec4 {\n    x:f32, y:f32, z:f32, w:f32\n}\n</code></pre>\n\n<p>How do I implement basic SIMD operations like <code>+</code>, <code>-</code>, <code>*</code> and <code>/</code> on it?</p>\n\n<p>Am I limited to using only the predefined types like <code>f32x4</code> from the experimental <code>simd</code> crate?</p>\n"}, {"tags": ["json", "rust", "deserialization", "serde"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1466121466, "post_id": 37870428, "comment_id": 63198968, "body": "What should happen when you get an empty string instead of a <code>u64</code>? Do you want to set the field to <code>0</code>? to <code>None</code>? something else?"}, {"owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1466122099, "post_id": 37870428, "comment_id": 63199094, "body": "@FrancisGagn&#233; I think it would be <code>0</code>."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 9, "last_activity_date": 1533773916, "last_edit_date": 1533773916, "creation_date": 1466123632, "answer_id": 37871403, "question_id": 37870428, "link": "https://stackoverflow.com/questions/37870428/convert-two-types-into-a-single-type-with-serde/37871403#37871403", "title": "Convert two types into a single type with Serde", "body": "<p>Serde supports an interesting selection of <a href=\"https://serde.rs/attributes.html\" rel=\"nofollow noreferrer\">attributes</a> that can be used to customize the serialization or deserialization for a type while still using the derived implementation for the most part.</p>\n\n<p>In your case, you need to be able to decode a field that can be specified as one of multiple types, and you don't need information from other fields to decide how to decode the problematic fields. The <code>#[serde(deserialize_with=\"$path\")]</code> annotation is well suited to solve your problem.</p>\n\n<p>We need to define a function that will decode either an empty string or an integer value into an <code>u64</code>. We can use the same function for both fields, since we need the same behavior. This function will use a custom <a href=\"https://docs.rs/serde/1.0.15/serde/de/trait.Visitor.html\" rel=\"nofollow noreferrer\"><code>Visitor</code></a> to be able to handle both strings and integers. It's a bit long, but it makes you appreciate all the work that Serde is doing for you!</p>\n\n<pre><code>extern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\nuse serde::Deserializer;\nuse serde::de::{self, Unexpected};\nuse std::fmt;\n\n#[derive(Clone, Debug, Deserialize)]\nstruct WebResponse {\n    foo: Vec&lt;Foo&gt;,\n}\n\n#[derive(Clone, Debug, Deserialize)]\nstruct Foo {\n    points: Points,\n}\n\n#[derive(Clone, Debug, Deserialize)]\nstruct Points {\n    #[serde(deserialize_with = \"deserialize_u64_or_empty_string\")]\n    x: u64,\n    #[serde(deserialize_with = \"deserialize_u64_or_empty_string\")]\n    y: u64,\n    name: String,\n}\n\nstruct DeserializeU64OrEmptyStringVisitor;\n\nimpl&lt;'de&gt; de::Visitor&lt;'de&gt; for DeserializeU64OrEmptyStringVisitor {\n    type Value = u64;\n\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"an integer or a string\")\n    }\n\n    fn visit_u64&lt;E&gt;(self, v: u64) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        Ok(v)\n    }\n\n    fn visit_str&lt;E&gt;(self, v: &amp;str) -&gt; Result&lt;Self::Value, E&gt;\n    where\n        E: de::Error,\n    {\n        if v == \"\" {\n            Ok(0)\n        } else {\n            Err(E::invalid_value(Unexpected::Str(v), &amp;self))\n        }\n    }\n}\n\nfn deserialize_u64_or_empty_string&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;u64, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    deserializer.deserialize_any(DeserializeU64OrEmptyStringVisitor)\n}\n\nfn main() {\n    let value = serde_json::from_str::&lt;WebResponse&gt;(\n        r#\"{\n        \"foo\": [\n            {\n                \"points\": {\n                    \"x\": \"\",\n                    \"y\": \"\",\n                    \"name\": \"\"\n                }\n            },\n            {\n                \"points\": {\n                    \"x\": 78,\n                    \"y\": 92,\n                    \"name\": \"bar\"\n                }\n            }\n        ]\n    }\"#,\n    );\n    println!(\"{:?}\", value);\n}\n</code></pre>\n\n<hr>\n\n<p><code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nserde = \"1.0.15\"\nserde_json = \"1.0.4\"\nserde_derive = \"1.0.15\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1617669157, "creation_date": 1617669157, "answer_id": 66961340, "question_id": 37870428, "link": "https://stackoverflow.com/questions/37870428/convert-two-types-into-a-single-type-with-serde/66961340#66961340", "title": "Convert two types into a single type with Serde", "body": "<p>In <code>str_or_u64</code>, we use an <a href=\"https://serde.rs/enum-representations.html#untagged\" rel=\"nofollow noreferrer\"><em>untagged enum</em></a> to represent either a string or a number. We can then deserialize the field into that enum and convert it to a number.</p>\n<p>We annotate the two fileds in <code>Points</code> using <a href=\"https://serde.rs/field-attrs.html#deserialize_with\" rel=\"nofollow noreferrer\"><code>deserialize_with</code></a> to tell it to use our special conversion:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::{Deserialize, Deserializer}; // 1.0.124\nuse serde_json; // 1.0.64\n\n#[derive(Debug, Deserialize)]\nstruct WebResponse {\n    foo: Vec&lt;Foo&gt;,\n}\n\n#[derive(Debug, Deserialize)]\nstruct Foo {\n    points: Points,\n}\n\n#[derive(Debug, Deserialize)]\nstruct Points {\n    #[serde(deserialize_with = &quot;str_or_u64&quot;)]\n    x: u64,\n    #[serde(deserialize_with = &quot;str_or_u64&quot;)]\n    y: u64,\n    name: String,\n}\n\nfn str_or_u64&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;u64, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    #[derive(Deserialize)]\n    #[serde(untagged)]\n    enum StrOrU64&lt;'a&gt; {\n        Str(&amp;'a str),\n        U64(u64),\n    }\n\n    Ok(match StrOrU64::deserialize(deserializer)? {\n        StrOrU64::Str(v) =&gt; v.parse().unwrap_or(0), // Ignoring parsing errors\n        StrOrU64::U64(v) =&gt; v,\n    })\n}\n\nfn main() {\n    let input = r#&quot;{\n        &quot;foo&quot;:[\n            {\n                &quot;points&quot;:{\n                    &quot;x&quot;:&quot;&quot;,\n                    &quot;y&quot;:&quot;&quot;,\n                    &quot;name&quot;:&quot;&quot;\n                }\n            },\n            {\n                &quot;points&quot;:{\n                    &quot;x&quot;:78,\n                    &quot;y&quot;:92,\n                    &quot;name&quot;:&quot;bar&quot;\n                }\n            }\n        ]\n    }&quot;#;\n\n    dbg!(serde_json::from_str::&lt;WebResponse&gt;(input));\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/46753955/155423\">How to transform fields during deserialization using Serde?</a></li>\n</ul>\n"}], "owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1544, "favorite_count": 3, "accepted_answer_id": 37871403, "answer_count": 2, "score": 6, "last_activity_date": 1617669157, "creation_date": 1466116282, "last_edit_date": 1509406091, "question_id": 37870428, "link": "https://stackoverflow.com/questions/37870428/convert-two-types-into-a-single-type-with-serde", "title": "Convert two types into a single type with Serde", "body": "<p>I'm writing for a program that hooks into a web service which sends back JSON.</p>\n\n<p>When a certain property isn't there it provides a empty object, with all its fields as empty strings instead of excluding the value. When the property exists, some of the properties are <code>u64</code>. How can I have it so Serde handles this case?</p>\n\n<h2>Rust Structs</h2>\n\n<pre><code>#[derive(Clone, Debug, Deserialize)]\nstruct WebResponse {\n    foo: Vec&lt;Foo&gt;,\n}\n\n#[derive(Clone, Debug, Deserialize)]\nstruct Foo {\n    points: Points,\n}\n\n#[derive(Clone, Debug, Deserialize)]\nstruct Points {\n    x: u64,\n    y: u64,\n    name: String,\n}\n</code></pre>\n\n<h2>Example JSON</h2>\n\n<pre><code>{\n    \"foo\":[\n        {\n            \"points\":{\n                \"x\":\"\",\n                \"y\":\"\",\n                \"name\":\"\"\n            }\n        },\n        {\n            \"points\":{\n                \"x\":78,\n                \"y\":92,\n                \"name\":\"bar\"\n            }\n        }\n    ]\n}\n</code></pre>\n"}, {"tags": ["rust", "integer-overflow"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1466087439, "post_id": 37860831, "comment_id": 63181489, "body": "My guess is that it&#39;s covering the C feature where shifting by more than the bit size is UB, but left shift is considered more of a bit manipulation operation than an arithmetic one, so it&#39;s not counted as arithmetic overflow.  But I agree it&#39;s not necessarily the only obvious choice."}], "answers": [{"tags": [], "owner": {"reputation": 52741, "user_id": 555045, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/182d0ce855c8324a596648c04643e8f9?s=128&d=identicon&r=PG", "display_name": "nicomp", "link": "https://stackoverflow.com/users/555045/nicomp"}, "is_accepted": true, "score": 5, "last_activity_date": 1466090670, "last_edit_date": 1466090670, "creation_date": 1466084276, "answer_id": 37860945, "question_id": 37860831, "link": "https://stackoverflow.com/questions/37860831/why-does-128u8-checked-shl1-return-some0/37860945#37860945", "title": "Why does `128u8.checked_shl(1)` return `Some(0)`?", "body": "<p>Because it checks only the shift amount. From the <a href=\"http://doc.rust-lang.org/std/primitive.u8.html#method.checked_shl\" rel=\"nofollow\">docs</a>,</p>\n\n<blockquote>\n  <p><code>None</code> if <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>.</p>\n</blockquote>\n\n<p>So by design it lets you shift out bits, it just doesn't let you use invalid shift amounts (or, it lets you, but you get <code>None</code>).</p>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 37860945, "answer_count": 1, "score": 1, "last_activity_date": 1466090670, "creation_date": 1466083953, "question_id": 37860831, "link": "https://stackoverflow.com/questions/37860831/why-does-128u8-checked-shl1-return-some0", "title": "Why does `128u8.checked_shl(1)` return `Some(0)`?", "body": "<p>I was under the impression that the <code>.checked_*(_)</code> methods of the integral types were there to help avoid overflow. However, the <code>.checked_shl(u32)</code> method happily shifts out the last bit of the example above.</p>\n\n<p>Is my impression wrong? What is that method <em>for</em>?</p>\n\n<p>(Also wanted to add that to avoid overflow on shifts, one can check if <code>((~0) &gt;&gt; rhs) &gt;= self</code> at least for unsigned types)</p>\n"}, {"tags": ["rust", "undefined-behavior"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1466049821, "post_id": 37849625, "comment_id": 63158423, "body": "I would say it is undefined behaviour.. because, <a href=\"https://play.rust-lang.org/?gist=955afc169e787677819339fc14c853a9&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">it doesn&#39;t work on the playground</a>. Also, changing between Debug and Release also changes the output on the playground. Even more interestingly, <a href=\"https://play.rust-lang.org/?gist=89a044547d99d2cc93bbc179302ff8ba&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">printing it within the unsafe block makes it work on the playground consistently</a>."}, {"owner": {"reputation": 137, "user_id": 6472567, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a673e0546f4d934abb47ca4278ba3816?s=128&d=identicon&r=PG&f=1", "display_name": "Novus", "link": "https://stackoverflow.com/users/6472567/novus"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1466079270, "post_id": 37849625, "comment_id": 63175047, "body": "Well isn&#39;t that odd? I was using the playground last night and it wouldn&#39;t crash but now it does. Thanks for the comment Simon."}, {"owner": {"reputation": 137, "user_id": 6472567, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a673e0546f4d934abb47ca4278ba3816?s=128&d=identicon&r=PG&f=1", "display_name": "Novus", "link": "https://stackoverflow.com/users/6472567/novus"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1466106738, "post_id": 37849625, "comment_id": 63193245, "body": "Out of curiosity, what browser do you use with the playground? I feel like I am getting odd behavior using Firefox."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1466113101, "post_id": 37849625, "comment_id": 63196368, "body": "I used Chrome. More weight added to the undefined behaviour conclusion :)"}], "answers": [{"comments": [{"owner": {"reputation": 137, "user_id": 6472567, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a673e0546f4d934abb47ca4278ba3816?s=128&d=identicon&r=PG&f=1", "display_name": "Novus", "link": "https://stackoverflow.com/users/6472567/novus"}, "edited": false, "score": 0, "creation_date": 1466072800, "post_id": 37849721, "comment_id": 63170852, "body": "Thank you very much Francis! I was pretty sure it was undefined behavior (definitely would be in C) but given my inexperience with Rust I just wanted to double check."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 6, "last_activity_date": 1525721244, "last_edit_date": 1525721244, "creation_date": 1466049987, "answer_id": 37849721, "question_id": 37849625, "link": "https://stackoverflow.com/questions/37849625/why-isnt-it-undefined-behavior-to-use-ptrread-on-a-dropped-box/37849721#37849721", "title": "Why isn&#39;t it undefined behavior to use ptr::read() on a dropped Box?", "body": "<p>\"Undefined Behavior\" includes \"it appears to work correctly\". The worst mistake you can make when it comes to Undefined Behavior is interpreting a correct result as an absence of Undefined Behavior.</p>\n\n<p>It <em>doesn't</em> work for me, by the way (and the value changes on every run).</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n     Running `target/debug/so-ub`\nThe value of y is -500126584\n</code></pre>\n"}], "owner": {"reputation": 137, "user_id": 6472567, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a673e0546f4d934abb47ca4278ba3816?s=128&d=identicon&r=PG&f=1", "display_name": "Novus", "link": "https://stackoverflow.com/users/6472567/novus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 37849721, "answer_count": 1, "score": 0, "last_activity_date": 1525721244, "creation_date": 1466049258, "last_edit_date": 1525721223, "question_id": 37849625, "link": "https://stackoverflow.com/questions/37849625/why-isnt-it-undefined-behavior-to-use-ptrread-on-a-dropped-box", "title": "Why isn&#39;t it undefined behavior to use ptr::read() on a dropped Box?", "body": "<p>I was testing some of Rust's unsafe functionality, mostly the <code>std::ptr</code> functions, to see the ways I could cause undefined behavior (just out of curiosity). In the example below I use <code>std::ptr::read()</code> to move the address stored in <code>x</code> into <code>y</code> without uninitializing <code>x</code>.</p>\n\n<p>After the read I thought I had two pointers to the same location on the heap. I was under the impression that when I left the block where <code>x</code> is defined that <code>x</code>'s destructor would be run causing <code>y</code> to point to freed memory. However, when I go and print the value of <code>*y</code>, it still prints the correct value of 10. I read the documentation but can't seem to figure out why this isn't UB. If anyone could clarify this for me, I would really appreciate.</p>\n\n<p>PS. I come from a C background, so an explanation with respect to C might make it a tad easier to understand what is actually going on. </p>\n\n<pre><code>fn main() {\n    let mut y: Box&lt;i32&gt;;\n\n    {\n        let x: Box&lt;i32&gt; = Box::new(10 as i32);\n        unsafe {\n            y = ptr::read(&amp;x);\n        }\n    }\n    // I thought the destructor (free) would be called here on x\n    // making y point to invalid memory\n    // However, the following call to println! still works\n    println!(\"The value of y is {}\", *y);\n}\n</code></pre>\n"}, {"tags": ["rust", "compiler-warnings", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 2, "last_activity_date": 1466044593, "creation_date": 1466044593, "answer_id": 37848976, "question_id": 37848816, "link": "https://stackoverflow.com/questions/37848816/cargo-test-warns-for-unused-code-after-saving-file/37848976#37848976", "title": "Cargo test warns for unused code after saving file", "body": "<p>Using <code>cargo test --verbose</code> will give you some answers.</p>\n\n<p>Firstly <code>cargo test</code> will compile everything for the <code>lib</code> with <code>--crate-type lib</code>. This is what is causing your warning. <code>greet::greet</code> is not actually called in your library code. </p>\n\n<p>Next, <code>cargo test</code> will run <code>rustc --crate-type lib --test</code> against the library as a separate step. This one <em>does</em> call <code>greet::greet</code>, and so you get no warning.</p>\n\n<p>Now, if you touch the files again and change the test to this:</p>\n\n<pre><code>assert_eq!(\"Hello, world!\", \"Hello, world!\");\n</code></pre>\n\n<p>You'll note you get two warnings of the same thing ... because both steps don't reference the <code>greet::greet</code> function (the library doesn't call it.. and the tests don't call it).</p>\n\n<p>I think this is a valid warning and is what you want: The warning is saying you have a method that isn't called in your library code.. even if a test calls it. I think, in a larger codebase, you would want to be warned and clean up your tests that are now testing functions that aren't used in the main codebase.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1466048714, "last_edit_date": 1495540370, "creation_date": 1466048398, "answer_id": 37849505, "question_id": 37848816, "link": "https://stackoverflow.com/questions/37848816/cargo-test-warns-for-unused-code-after-saving-file/37849505#37849505", "title": "Cargo test warns for unused code after saving file", "body": "<p>Check the output closely:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo test\n   Compiling hello v0.1.0 (file:///F:/workspace/hello_rust)\n     Running target\\debug\\hello-111b9369d8889475.exe\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo test\n     Running target\\debug\\hello-111b9369d8889475.exe\n</code></pre>\n\n<p>When you execute <code>cargo test</code> the second time, nothing has changed with your code. Because nothing has changed, the code doesn't need to be recompiled.</p>\n\n<p>Compiler warnings like unused functions are only generated when the compiler runs. If the compiler doesn't run, there won't be any warnings.</p>\n\n<p>Changing the code will trigger a recompilation.</p>\n\n<hr>\n\n<p>The followup question is, why does it think the function is unused? <a href=\"https://stackoverflow.com/a/37848976/155423\">Simon Whitehead's answer</a> covers that. Even though the function is marked <code>pub</code>, the <strong>module</strong> it's in is not public. That means it's impossible to call the function outside of the library. Since there are no calls to it inside the library, it's unused.</p>\n"}], "owner": {"reputation": 832, "user_id": 114932, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e1fa03c8349d59ac061cdc9c7039da1c?s=128&d=identicon&r=PG", "display_name": "Alexandros Katechis", "link": "https://stackoverflow.com/users/114932/alexandros-katechis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 431, "favorite_count": 0, "accepted_answer_id": 37848976, "answer_count": 2, "score": 2, "last_activity_date": 1466048714, "creation_date": 1466043467, "last_edit_date": 1466048557, "question_id": 37848816, "link": "https://stackoverflow.com/questions/37848816/cargo-test-warns-for-unused-code-after-saving-file", "title": "Cargo test warns for unused code after saving file", "body": "<p>I'm starting to grasp Rust modules, but I have the following in a crate's <code>src</code> directory. If I make a small modification (add some whitespace or rename the test function), save and then immediately run <code>cargo test</code> I get a warning for an unused function, but if I wait a few seconds, and run it again, it runs with no warnings.</p>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>mod greet;\n\n#[test]\npub fn it_greets_the_world_correctly() {\n    assert_eq!(\"Hello, world!\", greet::greet(\"world\"));\n}\n</code></pre>\n\n<p><strong>greet.rs</strong></p>\n\n<pre><code>pub fn greet(name: &amp;str) -&gt; String {\n    format!(\"Hello, {}!\", name)\n}\n</code></pre>\n\n<p>But when I run <code>cargo test</code> I get the following:</p>\n\n<pre><code>$ cargo test\n   Compiling hello v0.1.0 (file:///F:/workspace/hello_rust)\nsrc\\greet.rs:1:1: 3:2 warning: function is never used: `greet`, #[warn(dead_code)] on by default\nsrc\\greet.rs:1 pub fn greet (name: &amp;str) -&gt; String {\nsrc\\greet.rs:2   format!(\"Hello, {}!\", name)\nsrc\\greet.rs:3 }\n     Running target\\debug\\hello-111b9369d8889475.exe\n\nrunning 1 test\ntest it_greets_the_world_correctly ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n\n   Doc-tests hello\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured\n</code></pre>\n\n<p>and then a few seconds later...</p>\n\n<pre><code>$ cargo test\n     Running target\\debug\\hello-111b9369d8889475.exe\n\nrunning 1 test\ntest it_greets_the_world_correctly ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n\n   Doc-tests hello\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured\n</code></pre>\n\n<p>I'm not interested in suppressing the warning, I'm curious as to how Rust can possibly think the function is not being used when it's obviously called, since the test passes in both runs of the test.</p>\n"}]