[{"tags": ["rust", "rayon"], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1575531478, "post_id": 59187045, "comment_id": 104599838, "body": "For the &quot;most idiomatic&quot; version, you probably wouldn&#39;t pass <code>start</code> and <code>end</code> as parameters since the caller can always do <code>search_max (slice[start..end])</code> herself if she doesn&#39;t want to search the whole slice."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1575535398, "post_id": 59187045, "comment_id": 104601495, "body": "Or accept <a href=\"https://doc.rust-lang.org/std/ops/trait.RangeBounds.html\" rel=\"nofollow noreferrer\"><code>impl RangeBounds</code></a>"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1575589197, "post_id": 59187045, "comment_id": 104627472, "body": "@Jmb I wanted to preserve the caller side for the most part; personally I&#39;d not have this function like so, as though parallelism seems a bit too much for a simple max/min implementation."}], "tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 2, "last_activity_date": 1575510401, "creation_date": 1575510401, "answer_id": 59187045, "question_id": 59185549, "link": "https://stackoverflow.com/questions/59185549/how-can-i-change-a-function-to-run-in-parallel-with-rayon/59187045#59187045", "title": "How can I change a function to run in parallel with Rayon?", "body": "<p>You've currently got what's called imperative code; it cannot be directly changed into parallel without going through a functional style:</p>\n\n<pre><code>pub fn search_max(array: &amp;[f32], start: i32, end: i32) -&gt; f32 {\n    let sub_array: &amp;[f32] = &amp;array[start as usize..end as usize];\n    *sub_array.iter().max().unwrap()\n}\n</code></pre>\n\n<p>We use the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.max\" rel=\"nofollow noreferrer\"><code>max</code></a> method to get the maximum value produced by the iterator. This <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fc47db0f98ced8a5b5081e416dddff40\" rel=\"nofollow noreferrer\">does not work</a> since <code>f32</code> cannot be guaranteed to order nicely. \nWe'll use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.max_by\" rel=\"nofollow noreferrer\"><code>max_by</code></a> instead with a closure:</p>\n\n<pre><code>pub fn search_max(array: &amp;[f32], start: i32, end: i32) -&gt; f32 {\n    let sub_array: &amp;[f32] = &amp;array[start as usize..end as usize];\n\n    *    // This results in &amp;f32, so we must dereference it\n    sub_array.iter() // Create the iterator over references to the items\n    .max_by(\n        |x, y| x.partial_cmp(y).unwrap() // https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\n    ).unwrap() // There could possibly be no items! So we get an `Option&lt;&amp;f32&gt;` instead.\n}\n</code></pre>\n\n<p>For the most part, <code>rayon</code>'s <a href=\"https://docs.rs/rayon/1.2.1/rayon/iter/trait.ParallelIterator.html\" rel=\"nofollow noreferrer\"><code>ParallelIterator</code></a> is a drop in replacement for a regular iterator, so anywhere we see <code>.iter</code> we change to <code>.par_iter</code>:</p>\n\n<pre><code>use rayon::prelude::*;\n\npub fn search_max(array: &amp;[f32], start: i32, end: i32) -&gt; f32 {\n    let sub_array: &amp;[f32] = &amp;array[start as usize..end as usize];\n    *sub_array.par_iter().max_by(|x, y| x.partial_cmp(y).unwrap()).unwrap()\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=69a0028bad60c016bce0c12ed5cd4fbd\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>If you're looking for the most idiomatic version of this:</p>\n\n<pre><code>pub fn search_max(slice: &amp;'_ [f32], start: usize, end: usize) -&gt; f32 {\n    *slice[start..end].par_iter().reduce(\n        || &amp;slice[start], // This is an iterator over &amp;'_ f32\n        |a, b| if a &gt; b { a } else { b },\n    )\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a986a7d0b846abf302ef22134adf7027\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 19, "user_id": 12086666, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Qum7eroTq2E/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdp8EdVV7FAlxCf_EUOeFwern_3KQ/photo.jpg?sz=128", "display_name": "mm mm", "link": "https://stackoverflow.com/users/12086666/mm-mm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1575510401, "creation_date": 1575498682, "question_id": 59185549, "link": "https://stackoverflow.com/questions/59185549/how-can-i-change-a-function-to-run-in-parallel-with-rayon", "title": "How can I change a function to run in parallel with Rayon?", "body": "<p>I have a function, that gets an array, start index and end index. I want to return the largest element of this array. Sequentially it works fine. But I don't know how to convert it to work in prallel. So can you show me how to do it. I've been trying Rayon's for_each() but always got some errors. How would converted function look like?</p>\n\n<pre><code>pub fn search_max(array: &amp;[f32], start: i32, end: i32)-&gt; f32 {\n    let mut maximum: f32 = A[p as usize];\n    let iter: usize = start as usize + 1;\n    for iter in iter..end as usize{\n        if maximum &lt; array[iter] {\n            maximum = array[iter];\n        }\n    }   \n    maximum\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575492250, "post_id": 59184043, "comment_id": 104589205, "body": "Welcome to Stack Overflow! We like very focused questions, here; having multiple questions in one post is usually not a good idea because it can be ambiguous what the main focus is. Please read <a href=\"https://stackoverflow.com/questions/how-to-ask\">How to Ask</a>, and consider trimming this one down to something more focused, preferably with a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>: something like &quot;How can I create an <code>Option&lt;Box&lt;T&gt;&gt;</code> from a <code>T</code>?&quot;"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575492329, "post_id": 59184043, "comment_id": 104589241, "body": "The answer to the title question is: <code>Some(Box::new(value))</code>, but it looks like you figured that out already -- what don&#39;t you understand? (edit: oh, didn&#39;t realize it was mistyped once -- was that the main problem?)"}, {"owner": {"reputation": 888, "user_id": 2585333, "user_type": "registered", "accept_rate": 45, "profile_image": "https://i.stack.imgur.com/CIWzd.png?s=128&g=1", "display_name": "Sameer Puri", "link": "https://stackoverflow.com/users/2585333/sameer-puri"}, "edited": false, "score": 1, "creation_date": 1575492330, "post_id": 59184043, "comment_id": 104589242, "body": "Hi madteam, looks like you accidentally did <code>Box:new()</code> insteaed of <code>Box::new()</code>. After that, it gets you a lot closer to compiling."}, {"owner": {"reputation": 888, "user_id": 2585333, "user_type": "registered", "accept_rate": 45, "profile_image": "https://i.stack.imgur.com/CIWzd.png?s=128&g=1", "display_name": "Sameer Puri", "link": "https://stackoverflow.com/users/2585333/sameer-puri"}, "edited": false, "score": 1, "creation_date": 1575493022, "post_id": 59184043, "comment_id": 104589512, "body": "I see you&#39;re trying to create a KpiMethod tree-like structure. Unfortunately, trees, doubly-linked lists and other similar structures are <a href=\"https://rcoh.me/posts/rust-linked-list-basically-impossible/\" rel=\"nofollow noreferrer\">non-trivial to implement</a> in Rust due to <a href=\"https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">ownership concepts</a> which you can read up on. You could use a library implementing a tree structure like <a href=\"https://crates.io/crates/id_tree\" rel=\"nofollow noreferrer\">id_tree</a>."}, {"owner": {"reputation": 21, "user_id": 12481591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/81e9b7763d1377d4e578d2070b0626de?s=128&d=identicon&r=PG&f=1", "display_name": "madteam", "link": "https://stackoverflow.com/users/12481591/madteam"}, "edited": false, "score": 1, "creation_date": 1575493456, "post_id": 59184043, "comment_id": 104589678, "body": "Thank all of you, I fix some errors and change the post to focus one problem. Yes I read similar structure isn&#39;t easy to implement in Rust. The concept of only one ownership is complicated when you come from Poo world. So I need help from Rust expert ..."}, {"owner": {"reputation": 21, "user_id": 12481591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/81e9b7763d1377d4e578d2070b0626de?s=128&d=identicon&r=PG&f=1", "display_name": "madteam", "link": "https://stackoverflow.com/users/12481591/madteam"}, "reply_to_user": {"reputation": 888, "user_id": 2585333, "user_type": "registered", "accept_rate": 45, "profile_image": "https://i.stack.imgur.com/CIWzd.png?s=128&g=1", "display_name": "Sameer Puri", "link": "https://stackoverflow.com/users/2585333/sameer-puri"}, "edited": false, "score": 1, "creation_date": 1575494308, "post_id": 59184043, "comment_id": 104589953, "body": "@SameerPuri : Thanks for id_tree, I will try."}, {"owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "edited": false, "score": 1, "creation_date": 1575525847, "post_id": 59184043, "comment_id": 104597842, "body": "I think that what you want to do is impossible in safe Rust. <code>Box</code>es own their contents, but a <code>&amp;mut self</code> (mutable reference) does not - the reference is borrowing whatever it points to.  You could come up with some other sort of API that uses e.g. <code>Rc&lt;T&gt;</code>, <code>TypedArena&lt;T&gt;</code> or similar."}], "owner": {"reputation": 21, "user_id": 12481591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/81e9b7763d1377d4e578d2070b0626de?s=128&d=identicon&r=PG&f=1", "display_name": "madteam", "link": "https://stackoverflow.com/users/12481591/madteam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 175, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1575493325, "creation_date": 1575490561, "last_edit_date": 1575493325, "question_id": 59184043, "link": "https://stackoverflow.com/questions/59184043/rust-first-step-how-to-create-a-optionboxt-from-mut-self", "title": "Rust first step, how to create a Option&lt;Box&lt;T&gt;&gt; from &amp;mut self?", "body": "<p>I'm learning Rust for a few days and honestly some concepts are really difficult to understand and apply. I started to rewrite a small part of a component in order to compare the legendary speed of Rust and learn by a concrete project. It's a component to measure time and monitor the program during the execution. It will be a dynamic library used by another program.  </p>\n\n<p>My question :</p>\n\n<p>1) How to create an <code>Option&lt;Box&lt;T&gt;&gt;</code> from &amp;mut self ? (fn add_son)   </p>\n\n<pre><code>extern crate winapi;\nextern crate user32;\nextern crate kernel32;\n\n\nstruct KpiMethod{\n    element : String,\n    line : u32,\n    nb_occ : u32,\n    counter_start : i64,\n    counter_end : i64,\n    total_time: i64,\n    kpi_fils : Vec&lt;KpiMethod&gt;,\n    kpi_father : Option&lt;Box&lt;KpiMethod&gt;&gt;\n}\n\nimpl KpiMethod {\n\n    pub fn new(_element: String, _line: u32, _father: Option&lt;Box&lt;KpiMethod&gt;&gt;) -&gt; KpiMethod {\n        KpiMethod{\n            element : _element,\n            line : _line,\n            nb_occ : 1,\n            counter_start : get_counter(),\n            counter_end : 0,\n            total_time: 0,\n            kpi_fils : Vec::new(),\n            kpi_father : _father\n        }\n    }\n\n    pub fn add_son(&amp;mut self, _element: String, _line: u32) -&gt; KpiMethod{\n        //How create a Option&lt;Box&lt;KpiMethod&gt;&gt; of an existing KpiMethod (self) ?\n        let mut kpimet = KpiMethod::new(_element, _line, Some(Box::new(self)));\n        //Do I need a mutable self to push ?\n        self.kpi_fils.push(kpimet);\n        kpimet\n    }\n\n    pub fn find_son(&amp;mut self, _element: String, _line: u32) -&gt; Option&lt;&amp;KpiMethod&gt; {\n\n        //which is the good and speed method to find a son with key (element,line) ?\n        for elem in self.kpi_fils.iter_mut() {\n            if elem.element == _element &amp;&amp; elem.line == _line {\n                //why do I put a return here to fix error ?\n                return Some(elem)\n            }\n        }\n\n        None\n    }\n\n}\n\npub struct KpiAgent{\n    kpi_Method : Vec&lt;KpiMethod&gt;,\n    current_Method : Option&lt;Box&lt;KpiMethod&gt;&gt;,\n    counter_start : i64,\n    counter_end : i64,\n    date_start : String,\n    date_end : String,\n    auto_consommation : u64,\n\n}\n\nimpl KpiAgent {\n\n    pub fn new() -&gt; KpiAgent {\n        KpiAgent{\n            kpi_Method: Vec::new(),\n            current_Method: None,\n            counter_start: 0,\n            counter_end: 0,\n            date_start: String::from(\"\"),\n            date_end: String::from(\"\"),\n            auto_consommation: 0\n        }\n    }\n\n    pub fn method_start(&amp;mut self, element: String, line: u32){\n\n        match self.current_Method {\n            None =&gt; {\n                self.current_Method = Some(Box::new(KpiMethod::new(element, line, None)));\n                if self.counter_start == 0 {\n                    self.counter_start = get_counter();\n                }\n            },\n            Some(method) =&gt; {\n                let metfils = method.find_son(element, line);\n                match metfils {\n                    None =&gt; {\n                        self.current_Method = Some(Box::new(method.add_son(element, line)));\n                    },\n                    Some(son) =&gt; {\n                        son.nb_occ += 1;\n                        son.counter_start = get_counter();\n                    }\n                }\n            },\n        }\n    }\n\n    pub fn method_end(&amp;mut self, element: String, line: u32){\n        match self.current_Method{\n            Some(met) =&gt; {\n                met.counter_end = get_counter();\n                self.counter_end = met.counter_end;\n                met.total_time += met.counter_end - met.counter_start;\n                self.current_Method = met.kpi_father; \n            }\n        }\n    }\n}\n\npub fn get_counter() -&gt; i64 {\n    let mut counter: i64 = 0;\n    unsafe{\n        kernel32::QueryPerformanceCounter(&amp;mut counter);\n    }\n    counter\n}\n\n\npub fn main() {\n\n    let mut met = KpiMethod::new(\"1c\".to_string(), 1, None);\n    met.add_son(\"2c\".to_string(),2);\n    met.add_son(\"3c\".to_string(),3);\n    met.add_son(\"4c\".to_string(),4);\n    let _toto = met.find_son(\"3c\".to_string(),3);\n    match _toto{\n        None =&gt; println!(\"Not found\"),\n        Some(x) =&gt; println!(\"{}\",x.element),\n    }\n\n    let mut agent = KpiAgent::new();\n    agent.method_start(\"test\".to_string(),2);\n    agent.method_end(\"test\".to_string(),10);\n\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575491422, "post_id": 59183570, "comment_id": 104588888, "body": "Ok, I don&#39;t understand the issue exactly and the playground has an older version of nom, but one thing leaps out at me: you have <code>Fn(&amp;&#39;a str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;</code> but <code>verify</code> returns <code>impl Fn(I) -&gt; IResult&lt;I, O1, E&gt;</code>; that is, the <code>I</code> that the function accepts has to be the same as the first type argument of the <code>IResult</code> it returns. If you make one of them <code>&amp;&#39;a str</code> the other one can&#39;t be just <code>&amp;str</code> because that means they aren&#39;t the same type anymore."}, {"owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575497472, "post_id": 59183570, "comment_id": 104590955, "body": "I don&#39;t have to include <code>&#39;a</code> because of lifetime elision.  The <code>&#39;a</code> lifetime is assumed for the other <code>&amp;str</code> types."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575497761, "post_id": 59183570, "comment_id": 104591038, "body": "Are you sure? As I understand it, an elided lifetime is never assumed to be the same as an explicit one."}, {"owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575497901, "post_id": 59183570, "comment_id": 104591067, "body": "From the rustnomicon section on lifetime elision (<a href=\"https://doc.rust-lang.org/nomicon/lifetime-elision.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nomicon/lifetime-elision.html</a>): &quot;If there is exactly one input lifetime position (elided or not), that lifetime is assigned to all elided output lifetimes.&quot;"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575498618, "post_id": 59183570, "comment_id": 104591279, "body": "Oh, I was wrong about that. So... why did you decide to annotate the lifetime on the argument and not on the outputs? If it doesn&#39;t matter whether it&#39;s elided or not, eliding it some places but not others just seems confusing. Maybe it&#39;s just me."}, {"owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575498937, "post_id": 59183570, "comment_id": 104591383, "body": "It seems to be required on the input.  I get a compiler error if I remove it.  I also don&#39;t want to include extra syntax if I don&#39;t need it.  Rust code is already syntax-heavy enough."}], "answers": [{"comments": [{"owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "edited": false, "score": 1, "creation_date": 1575517413, "post_id": 59186648, "comment_id": 104595597, "body": "Yeah, I had the impression that the lifetime parameter <code>&#39;a</code> in <code>str_token&lt;&#39;a&gt;</code> is &quot;bound&quot; at the call site of <code>str_token</code> even though my intuition is that it should be bound at the call site of the <i>return value</i> of <code>str_token</code>.  So it&#39;s like you say where the lifetime of <code>input</code> doesn&#39;t outlive the lifetime of <code>parser_1</code>.  I guess then the <code>nom</code> library would have to return <code>impl for&lt;&#39;b&gt; Fn(..)</code> traits in order for this to work?  And I suppose they don&#39;t do that because they just return <code>impl Fn(I)</code> and the generic parameter <code>I</code> doesn&#39;t expect a lifetime parameter."}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 2, "last_activity_date": 1575507364, "last_edit_date": 1575507364, "creation_date": 1575507023, "answer_id": 59186648, "question_id": 59183570, "link": "https://stackoverflow.com/questions/59183570/confusing-lifetime-issues-when-returning-impl-fn/59186648#59186648", "title": "Confusing lifetime issues when returning `impl Fn`", "body": "<p>When you have a function/struct/trait with a lifetime like <code>&lt;'a&gt;</code>, it implies that any reference marked as <code>'a</code> must outlive the function/struct/trait. Outliving means (among other things) that the thing that has been referenced must have already existed before the function was called/struct was created/item implementing the trait has been created. The reference can't be created later, because it'd mean its lifetime started later than required.</p>\n\n<p>In your case, <code>str_token&lt;'a&gt;</code> means the string marked by <code>&amp;'a str</code> must have been created and already exist before <code>str_token</code> function was called.</p>\n\n<p>Your code violates the requirement that you have:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code> let parser_1 = str_token::&lt;VerboseError&lt;_&gt;&gt;(\"foo\".into());\n let input = &amp;string[..];\n</code></pre>\n\n<p>because <code>parser_1</code> has been created before the <code>input</code>, but the lifetime annotation on it allows it to be used only with strings <em>crated before the parser</em>.</p>\n\n<p>If you swap order of these lines, it should work.</p>\n\n<p><code>for&lt;'b&gt; impl Fn(&amp;'b str)</code> would be more flexible, because it means a lifetime is defined \"on the fly\" for whatever you use this function with, so any lifetime would work. But the library you're working with apparently requires the less flexible method, perhaps for a good reason that isn't directly related to your usage.</p>\n\n<p>Here's a minimal test case:</p>\n\n<pre><code>fn parser&lt;'a&gt;() -&gt; impl Fn(&amp;'a str) -&gt; &amp;str {\n    |a| a\n}\n\nfn main() {\n    let s1 = String::new();\n    let p = parser();\n    let s2 = String::new();\n    p(&amp;s1);\n    //p(&amp;s2);\n}\n</code></pre>\n"}], "owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 59186648, "answer_count": 1, "score": 1, "last_activity_date": 1575507364, "creation_date": 1575488558, "last_edit_date": 1575497766, "question_id": 59183570, "link": "https://stackoverflow.com/questions/59183570/confusing-lifetime-issues-when-returning-impl-fn", "title": "Confusing lifetime issues when returning `impl Fn`", "body": "<p>I have been trying to understand some lifetime conflicts relating to a function I've written that returns <code>impl Fn</code>.  Let's start at the beginning.  I have the following code file that won't compile:</p>\n\n<pre><code>use nom::bytes::complete::is_not;\nuse nom::character::complete::multispace0;\nuse nom::combinator::verify;\nuse nom::error::{\n    ParseError,\n    VerboseError,\n};\nuse nom::sequence::terminated;\nuse nom::IResult;\n\nfn one_token&lt;'a, E&gt;(input: &amp;'a str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;\nwhere\n    E: ParseError&lt;&amp;'a str&gt;,\n{\n    terminated(is_not(\" \\t\\r\\n\"), multispace0)(input)\n}\n\nfn str_token&lt;'a, E&gt;(expected_string: String) -&gt; impl Fn(&amp;'a str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;\nwhere\n    E: ParseError&lt;&amp;'a str&gt;,\n{\n    verify(one_token, move |actual_string| {\n        actual_string == expected_string\n    })\n}\n\nfn main() {\n    let parser_1 = str_token::&lt;VerboseError&lt;_&gt;&gt;(\"foo\".into());\n    let string = \"foo bar\".to_string();\n    let input = &amp;string[..];\n    let parser_2 = str_token::&lt;VerboseError&lt;_&gt;&gt;(\"foo\".into());\n\n    println!(\"{:?} {:?}\", parser_1(input), parser_2(input),);\n}\n</code></pre>\n\n<p>I get this error message:</p>\n\n<pre><code>error[E0597]: `string` does not live long enough\n  --&gt; src/main.rs:30:18\n   |\n30 |     let input = &amp;string[..];\n   |                  ^^^^^^ borrowed value does not live long enough\n...\n34 | }\n   | -\n   | |\n   | `string` dropped here while still borrowed\n   | borrow might be used here, when `parser_1` is dropped and runs the destructor for type `impl std::ops::Fn&lt;(&amp;str,)&gt;`\n   |\n   = note: values in a scope are dropped in the opposite order they are defined\n</code></pre>\n\n<p>It appears that the returned <code>impl Fn</code> assigned to <code>parser_1</code> only works for values whose lifetimes are at least as long as the <code>parser_1</code> variable.  This violates my expectation that <code>parser_1</code> would work with a variable of any lifetime.  I initially suspected that this might have been due to some interaction between the lifetime parameter <code>'a</code> on <code>str_token</code> and the error type parameter <code>E</code>.  So I just made the error type explicit:</p>\n\n<pre><code>fn one_token(input: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str, VerboseError&lt;&amp;str&gt;&gt; {\n    terminated(is_not(\" \\t\\r\\n\"), multispace0)(input)\n}\n\nfn str_token&lt;'a&gt;(\n    expected_string: String,\n) -&gt; impl Fn(&amp;'a str) -&gt; IResult&lt;&amp;str, &amp;str, VerboseError&lt;&amp;str&gt;&gt; {\n    verify(one_token, move |actual_string| {\n        actual_string == expected_string\n    })\n}\n</code></pre>\n\n<p>This didn't fix the problem.  It causes the exact same compilation error.  So then I tried modifying <code>str_token</code> to use higher-rank trait bounds:</p>\n\n<pre><code>fn str_token(\n    expected_string: String,\n) -&gt; impl for&lt;'a&gt; Fn(&amp;'a str) -&gt; IResult&lt;&amp;str, &amp;str, VerboseError&lt;&amp;str&gt;&gt; {\n    verify(one_token, move |actual_string| {\n        actual_string == expected_string\n    })\n}\n</code></pre>\n\n<p>But then I get this error:</p>\n\n<pre><code>error[E0277]: expected a `std::ops::Fn&lt;(&amp;'a str,)&gt;` closure, found `impl std::ops::Fn&lt;(&amp;str,)&gt;`\n  --&gt; src/main.rs:14:6\n   |\n14 | ) -&gt; impl for&lt;'a&gt; Fn(&amp;'a str) -&gt; IResult&lt;&amp;str, &amp;str, VerboseError&lt;&amp;str&gt;&gt; {\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected an `Fn&lt;(&amp;'a str,)&gt;` closure, found `impl std::ops::Fn&lt;(&amp;str,)&gt;`\n   |\n   = help: the trait `for&lt;'a&gt; std::ops::Fn&lt;(&amp;'a str,)&gt;` is not implemented for `impl std::ops::Fn&lt;(&amp;str,)&gt;`\n   = note: the return type of a function must have a statically known size\n\nerror[E0271]: type mismatch resolving `for&lt;'a&gt; &lt;impl std::ops::Fn&lt;(&amp;str,)&gt; as std::ops::FnOnce&lt;(&amp;'a str,)&gt;&gt;::Output == std::result::Result&lt;(&amp;'a str, &amp;'a str), nom::internal::Err&lt;nom::error::VerboseError&lt;&amp;'a s\ntr&gt;&gt;&gt;`\n  --&gt; src/main.rs:14:6\n   |\n14 | ) -&gt; impl for&lt;'a&gt; Fn(&amp;'a str) -&gt; IResult&lt;&amp;str, &amp;str, VerboseError&lt;&amp;str&gt;&gt; {\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bound lifetime parameter 'a, found concrete lifetime\n   |\n   = note: the return type of a function must have a statically known size\n</code></pre>\n\n<p>And, frankly, I have basically no idea how to interpret that.  Can anyone comment on what's going on here?  Why would the lifetime of a returned <code>impl Fn</code> be bound to the lifetime of the factory function that produced it even when its behavior doesn't actually depend on that lifetime?  How can I fix this problem and still use an <code>impl Fn</code> return value?  Why aren't HRTBs working when it seems like the perfect application of them?  I'm pretty lost here.</p>\n\n<p>By the way, I'm using the nom parsing library found here: <a href=\"https://github.com/Geal/nom/\" rel=\"nofollow noreferrer\">https://github.com/Geal/nom/</a></p>\n\n<p>Also, the code for the <code>verify</code> function is here: <a href=\"https://github.com/Geal/nom/blob/851706460a9311f7bbae8e9b7ee497c7188df0a3/src/combinator/mod.rs#L459\" rel=\"nofollow noreferrer\">https://github.com/Geal/nom/blob/851706460a9311f7bbae8e9b7ee497c7188df0a3/src/combinator/mod.rs#L459</a></p>\n\n<p>And if anyone wants to play around with a cargo project containing all these examples, there's one here: <a href=\"https://github.com/davesque/nom-test/\" rel=\"nofollow noreferrer\">https://github.com/davesque/nom-test/</a></p>\n\n<p>You can clone it, checkout the <code>first-version</code>, <code>no-error-parameter</code>, or <code>higher-rank-trait-bounds</code> tags, and invoke <code>cargo run</code>.</p>\n\n<p><em>Note</em>:</p>\n\n<p>I asked a similar question recently here: <a href=\"https://stackoverflow.com/questions/59168144/how-to-use-higher-rank-trait-bounds-to-make-a-returned-impl-fn-more-generic/59170333#59170333\">How to use higher-rank trait bounds to make a returned impl Fn more generic?</a></p>\n\n<p>However, I eventually decided this question wasn't specific enough to what I was actually trying to do.  Someone had already answered it, so I didn't want to make a big edit and cause the answer to become confusing and apparently unrelated to my question.</p>\n"}, {"tags": ["rust", "gdb", "embedded", "panic"], "comments": [{"owner": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 1, "creation_date": 1575450392, "post_id": 59172174, "comment_id": 104566921, "body": "Are you using concurrency / threading?  When you do that, the exception handler switched to the system stack, so the stack of the interrupted thread will no longer be visible.  That is true in C and C++ too, but perhaps in that case you were not using threading? <a href=\"https://developer.arm.com/docs/dui0553/a/the-cortex-m4-processor/exception-model/exception-entry-and-return\" rel=\"nofollow noreferrer\">developer.arm.com/docs/dui0553/a/the-cortex-m4-processor/&hellip;</a>"}, {"owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "reply_to_user": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 0, "creation_date": 1575451017, "post_id": 59172174, "comment_id": 104567240, "body": "@Clifford No, only the msp is used and the psp is left at 0 at all time"}, {"owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "reply_to_user": {"reputation": 76010, "user_id": 168986, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/MqorX.jpg?s=128&g=1", "display_name": "Clifford", "link": "https://stackoverflow.com/users/168986/clifford"}, "edited": false, "score": 0, "creation_date": 1575452233, "post_id": 59172174, "comment_id": 104567902, "body": "I&#39;ve fixed the problem that caused the panic now, but searching where it happened took way longer than should be necessary... It turns out I forgot a check somewhere"}], "answers": [{"comments": [{"owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "edited": false, "score": 1, "creation_date": 1575453207, "post_id": 59172958, "comment_id": 104568467, "body": "I see how that would help in a normal environment. But I&#39;m running this embedded and that only compiles if a custom panic handler is present. These settings have no effect, sadly. <a href=\"https://rust-embedded.github.io/book/start/panicking.html\" rel=\"nofollow noreferrer\">rust-embedded.github.io/book/start/panicking.html</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "edited": false, "score": 1, "creation_date": 1575453448, "post_id": 59172958, "comment_id": 104568608, "body": "@Geoxion In that case, you should set a break point at the beginning of your custom panic handler. Gdb can only show you the backtrace if you allow it to take a look before the stack has been unwound."}, {"owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "edited": false, "score": 0, "creation_date": 1575453661, "post_id": 59172958, "comment_id": 104568753, "body": "Well, that&#39;s the point. If I break in the handler, be it at the start or the end, I don&#39;t get a nice stack. Something has happened to it before the handler is called."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "edited": false, "score": 0, "creation_date": 1575453708, "post_id": 59172958, "comment_id": 104568784, "body": "@Geoxion The page you linked says you should put a breakpoint on <code>rust_begin_unwind</code>. Is that what you did?"}, {"owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "edited": false, "score": 0, "creation_date": 1575454372, "post_id": 59172958, "comment_id": 104569191, "body": "Yes. Though if I do it through the cli, I get a different call stack. On top is the <code>rust_begin_unwind</code> and after that an infinite amount of <code>core::panicking::panic_fmt</code>. After a little bit of digging in that I now know that if I put a breakpoint on <code>core::result::unwrap_failed</code>, I do still get the full callstack. Gonna look in the source code now to see what happens in between."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 1, "last_activity_date": 1575452594, "creation_date": 1575452594, "answer_id": 59172958, "question_id": 59172174, "link": "https://stackoverflow.com/questions/59172174/rust-embedded-panic-destroys-stack/59172958#59172958", "title": "Rust Embedded panic destroys stack", "body": "<p>The easiest solution is to set the panic handler to call <code>abort()</code> instead of unwinding the stack. This can be done by adding this to your <code>Cargo.toml</code></p>\n\n<pre><code>[profile.dev]\npanic = \"abort\"\n\n[profile.release]\npanic = \"abort\"\n</code></pre>\n\n<p>With this setting, the panic handler will immediately call <code>abort()</code>, so gdb can still see the whole backtrace.</p>\n\n<p>If you just want to print the stack trace, you can also set the environment variable <code>RUST_BACKTRACE=1</code>.</p>\n"}], "owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 387, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1575453705, "creation_date": 1575449681, "last_edit_date": 1575453705, "question_id": 59172174, "link": "https://stackoverflow.com/questions/59172174/rust-embedded-panic-destroys-stack", "title": "Rust Embedded panic destroys stack", "body": "<p>I'm using Rust on a Cortex-M4 and using gdb with openocd to debug it.</p>\n\n<p>From C(++) I'm used to looking at the call stack when an exception (like a hardfault) happens. It's really helpful to see which line caused the exception.</p>\n\n<p>However, in Rust, when a panic happens, the call stack is almost empty. Why does this happen?</p>\n\n<p>Is there a way to make Rust preserve the stack (only for the debugger, I don't need to print it)? Or can I insert a breakpoint somewhere where the call stack hasn't been destroyed yet?</p>\n\n<p>Right now I have an unwrap somewhere that panics, but I can't find where unless I step through a whole lot of code.</p>\n\n<hr>\n\n<p><strong>EDIT</strong>: This is the stack trace I do get in the panic handler:</p>\n\n<pre><code>i stack\n#0  rust_begin_unwind (info=0x2001f810) at src\\main.rs:122\n#1  0x080219dc in cortex_m::itm::write_fmt (port=0x2001f820, args=...) at C:\\Users\\d.dokter\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.6.1\\src/itm.rs:128\n#2  0x2001f894 in ?? ()\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\n</code></pre>\n\n<p>It's also weird that the write_fmt function is on the stack as that is being called inside the handler to log the panic. I find that 0x2001f894 address very suspicious as well, because that's a RAM address.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1575448031, "post_id": 59171127, "comment_id": 104565753, "body": "Read the messages: <code>note: please ensure that VS 2013, VS 2015 or VS 2017 was installed with the Visual C++ option</code>"}], "answers": [{"tags": [], "owner": {"reputation": 93, "user_id": 10960543, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2HzwlE_ed1Q/AAAAAAAAAAI/AAAAAAAAC94/cRKOwCvFKkw/photo.jpg?sz=128", "display_name": "Pawan Bisht", "link": "https://stackoverflow.com/users/10960543/pawan-bisht"}, "is_accepted": false, "score": 0, "last_activity_date": 1575458514, "creation_date": 1575458514, "answer_id": 59174881, "question_id": 59171127, "link": "https://stackoverflow.com/questions/59171127/link-exe-not-found-error-while-running-on-windows-system-for-rust-program-is-vi/59174881#59174881", "title": "link.exe not found error while running on windows system for rust program, is Visual C++ mandatory for Cargo?", "body": "<p>Yes, you have to install VC+ build tools so that rustc should be able to autodetect the helper files. Or you can go with the VS 2013 or 2015(for autodetection).\nFor more information please refer <a href=\"https://users.rust-lang.org/t/problems-with-installing-rust-on-window\" rel=\"nofollow noreferrer\">this</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 14811, "user_id": 4574281, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/gSI2p.png?s=128&g=1", "display_name": "WasiF", "link": "https://stackoverflow.com/users/4574281/wasif"}, "edited": false, "score": 0, "creation_date": 1579604643, "post_id": 59177761, "comment_id": 105813502, "body": "this fixed the issue, thanks :). I was using VS Code"}, {"owner": {"reputation": 4631, "user_id": 763026, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/AxQR4.png?s=128&g=1", "display_name": "Angshuman Agarwal", "link": "https://stackoverflow.com/users/763026/angshuman-agarwal"}, "edited": false, "score": 0, "creation_date": 1611077479, "post_id": 59177761, "comment_id": 116332417, "body": "Isn&#39;t this a workaround ? Shouldn&#39;t we use Windows C++ via Visual Studio with C++ enabled ?"}, {"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "reply_to_user": {"reputation": 4631, "user_id": 763026, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/AxQR4.png?s=128&g=1", "display_name": "Angshuman Agarwal", "link": "https://stackoverflow.com/users/763026/angshuman-agarwal"}, "edited": false, "score": 0, "creation_date": 1611159876, "post_id": 59177761, "comment_id": 116363098, "body": "@AngshumanAgarwal What do you call &quot;Windows C++&quot;? To answer the question, this answer provides a definite statement saying that MSVC++ is necessary to use the msvc Rust toolchain, but provides an alternative solution if not possible. In that regard, yes, the second part of the answer is a workaround."}], "tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": false, "score": 5, "last_activity_date": 1575468028, "creation_date": 1575468028, "answer_id": 59177761, "question_id": 59171127, "link": "https://stackoverflow.com/questions/59171127/link-exe-not-found-error-while-running-on-windows-system-for-rust-program-is-vi/59177761#59177761", "title": "link.exe not found error while running on windows system for rust program, is Visual C++ mandatory for Cargo?", "body": "<p>There are two existing Rust toolchain families provided for Windows:</p>\n\n<ul>\n<li>msvc</li>\n<li>gnu</li>\n</ul>\n\n<p><strong>msvc</strong> is the default, and as you realized, depends on a recent Visual C++ installation.</p>\n\n<p><strong>gnu</strong> on the other hand depends on GNU/MinGW-w64. It can be installed and made the default toolchain using:</p>\n\n<pre><code>$ rustup default stable-x86_64-pc-windows-gnu\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 10562888, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-bN4vNWn2Mo8/AAAAAAAAAAI/AAAAAAAAIK4/YqvpKc0qWXo/photo.jpg?sz=128", "display_name": "pari kannappan", "link": "https://stackoverflow.com/users/10562888/pari-kannappan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1365, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1575468028, "creation_date": 1575445312, "question_id": 59171127, "link": "https://stackoverflow.com/questions/59171127/link-exe-not-found-error-while-running-on-windows-system-for-rust-program-is-vi", "title": "link.exe not found error while running on windows system for rust program, is Visual C++ mandatory for Cargo?", "body": "<p>I am getting  link.exe not found issue , is there anything more i have to install?</p>\n\n<blockquote>\n  <p>PS C:\\Users\\parik> cargo new test2\n       Created binary (application) <code>test2</code> project PS C:\\Users\\parik> cargo build error: could not find <code>Cargo.toml</code> in <code>C:\\Users\\parik</code> or\n  any parent directory PS C:\\Users\\parik> cd test2 PS\n  C:\\Users\\parik\\test2> cargo build    Compiling test2 v0.1.0\n  (C:\\Users\\parik\\test2) error: linker <code>link.exe</code> not found   |   =\n  note: The system cannot find the file specified. (os error 2)</p>\n  \n  <p>note: the msvc targets depend on the msvc linker but <code>link.exe</code> was\n  not found</p>\n  \n  <p>note: please ensure that VS 2013, VS 2015 or VS 2017 was installed\n  with the Visual C++ option</p>\n  \n  <p>error: aborting due to previous error</p>\n  \n  <p>error: Could not compile <code>test2</code>.</p>\n</blockquote>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 2, "creation_date": 1575443024, "post_id": 59170011, "comment_id": 104563686, "body": "What is the <code>Regex</code> you&#39;re using? I&#39;ve tried to do this directly with <code>regex::Regex</code> and got the same error - <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c2a3394f6e3b8c54e8c6d1ee80a9d845\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1575455409, "post_id": 59170011, "comment_id": 104569797, "body": "There are two questions in one, here: please choose whether to ask about <code>const Regex</code> or to ask about macro-literals. The title says one thing, but the bulk of the questions says another... If you have two separate questions, please simply ask two separate questions."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575459963, "post_id": 59171002, "comment_id": 104572139, "body": "Or with <a href=\"https://docs.rs/once_cell/1.2.0/once_cell/unsync/struct.Lazy.html\" rel=\"nofollow noreferrer\"><code>once_cell</code></a>"}, {"owner": {"reputation": 888, "user_id": 2585333, "user_type": "registered", "accept_rate": 45, "profile_image": "https://i.stack.imgur.com/CIWzd.png?s=128&g=1", "display_name": "Sameer Puri", "link": "https://stackoverflow.com/users/2585333/sameer-puri"}, "edited": false, "score": 1, "creation_date": 1575493343, "post_id": 59171002, "comment_id": 104589634, "body": "There&#39;s an issues on <a href=\"https://github.com/rust-lang/regex/issues/607\" rel=\"nofollow noreferrer\">rust regex GitHub</a> for it. Recently <a href=\"https://github.com/rust-lang/rust/pull/50233\" rel=\"nofollow noreferrer\">String::new() and Vec::new() became const</a> so it might be more doable now."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 3, "last_activity_date": 1575530665, "last_edit_date": 1575530665, "creation_date": 1575444827, "answer_id": 59171002, "question_id": 59170011, "link": "https://stackoverflow.com/questions/59170011/why-the-result-of-regexnew-cannot-be-assigned-to-a-constant/59171002#59171002", "title": "Why the result of `Regex::new` cannot be assigned to a constant?", "body": "<p>This has nothing to do with macros: you get the same error if you write the code directly (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=41fcd47adf1267f168e20b1594e515bd\" rel=\"nofollow noreferrer\">playground</a>). The problem here is that calling <code>Regex::new</code> is <em>not</em> a literal (1) and cannot be evaluated at compile-time (<a href=\"https://github.com/rust-lang/regex/issues/607\" rel=\"nofollow noreferrer\">yet?</a>). You will need to use something like the <a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\"><code>lazy_static</code></a> crate to ensure that <code>Regex::new</code> is called at run-time to compile the regular expression:</p>\n\n<pre><code>use regex::Regex;\nuse lazy_static::lazy_static;\n\nlazy_static!{\n   pub static ref FOO_REGEX: Regex = Regex::new(r\"foo.*\").unwrap();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=00d0e7aed3667cca6769445cca0e4397\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p><strong>(1)</strong> Quoting from <a href=\"https://stackoverflow.com/a/30481077/5397009\">this answer</a>:</p>\n\n<blockquote>\n  <p>A literal is a value written <em>as-is</em> in the code: <code>true</code>, <code>1</code>, <code>\"hello\"</code>; the result of an expression [like <code>Regex::new</code>] <em>cannot</em> be a literal (by definition). The resulting types may look similar (or even be identical) but types are irrelevant here.</p>\n</blockquote>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "anon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1575530665, "creation_date": 1575440469, "last_edit_date": 1575445488, "question_id": 59170011, "link": "https://stackoverflow.com/questions/59170011/why-the-result-of-regexnew-cannot-be-assigned-to-a-constant", "title": "Why the result of `Regex::new` cannot be assigned to a constant?", "body": "<p>I have many repeated constants in the form of:</p>\n\n<pre><code>pub const FOO_REGEX: Regex = Regex::new(r\"foo.*\").unwrap();\npub const BAR_REGEX: Regex = Regex::new(r\"bar.*\").unwrap();\n</code></pre>\n\n<p>I'd like to simply this by using a <code>macro_rules!</code> macro.</p>\n\n<p>I tried:</p>\n\n<pre><code>macro_rules! pattern {\n    ($value:literal) =&gt; {\n        Regex::new($value).unwrap()\n    }\n}\n\npub const FOO_REGEX: Regex = pattern!(r\"foo.*\");\n</code></pre>\n\n<p>But the compiler complains with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n  --&gt; lib.rs:7:9\n   |\n7  |         Regex::new($value).unwrap()\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n...\n11 | pub const FOO_REGEX: Regex = pattern!(r\"foo.*\");\n   |                              ------------------ in this macro invocation\n</code></pre>\n\n<p>Per <a href=\"https://doc.rust-lang.org/rust-by-example/macros/designators.html\" rel=\"nofollow noreferrer\">this guide</a> I tried many of the available designators options, like <code>expr</code>, <code>ident</code>, but I'm still not able to get macro to compile.</p>\n\n<p>Why does the <code>literal</code> designator not work for this macro expression?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1373, "user_id": 7016666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3451e33e5888626bf933f5c6884ab53?s=128&d=identicon&r=PG&f=1", "display_name": "apatniv", "link": "https://stackoverflow.com/users/7016666/apatniv"}, "is_accepted": false, "score": 1, "last_activity_date": 1575436433, "creation_date": 1575436433, "answer_id": 59169331, "question_id": 59168481, "link": "https://stackoverflow.com/questions/59168481/parseinterror-when-parsing-text-file-with-comma-delimited-data/59169331#59169331", "title": "ParseIntError when parsing text file with comma-delimited data?", "body": "<p>You answered yourself. <code>read_to_string</code> doesn't add a newline arbitrarily. The resulting string contains a newline only if underlying file contains a newline. </p>\n\n<p>To examine how many newlines are present in the <code>data.txt</code>, do this</p>\n\n<pre><code>cat -t -e data.txt\n# you will see meta characters at the end of each line.\n</code></pre>\n"}], "owner": {"reputation": 59, "user_id": 3280864, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/82bd371e5e09461ef7a8b98521c002b4?s=128&d=identicon&r=PG&f=1", "display_name": "hmobrienv", "link": "https://stackoverflow.com/users/3280864/hmobrienv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1575436433, "creation_date": 1575429548, "last_edit_date": 1575429956, "question_id": 59168481, "link": "https://stackoverflow.com/questions/59168481/parseinterror-when-parsing-text-file-with-comma-delimited-data", "title": "ParseIntError when parsing text file with comma-delimited data?", "body": "<p>I'm having issues parsing comma delimited data in rust. Any ideas?</p>\n\n<p>Text file is as follows,</p>\n\n<blockquote>\n  <p>1,2,3,4,5,6</p>\n</blockquote>\n\n<p>I try to parse this with the following which fails.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let contents: String = fs::read_to_string(\"data.txt\").expect(\"Unable to open file\");\n    let opcodes: Vec&lt;i32&gt; = contents.split(\",\").map(|x| x.parse::&lt;i32&gt;().unwrap()).collect();\n</code></pre>\n\n<p>I've modified the above to print <code>x</code> for each parse and it seems the result from split looks like it's being used in map as [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"\"]. </p>\n\n<p><strong>Solution:</strong> </p>\n\n<p>It appears <code>read_to_string</code> added a trailing newline. Adding a call to <code>trim</code> to before <code>split</code> fixes the issue.</p>\n\n<pre><code>let opcodes: Vec&lt;i32&gt; = contents.trim().split(\",\").map(|x| x.parse::&lt;i32&gt;().unwrap()).collect();\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "edited": false, "score": 0, "creation_date": 1575485499, "post_id": 59170333, "comment_id": 104586527, "body": "It&#39;s not just this example where I&#39;ve encountered a need for HRTBs.  And I do understand lifetimes to some extent but, frankly, the feature and all its nuances are not very well documented at all.  For example, I&#39;ve gathered that a lifetime variable specified as a generic type parameter on a function is generally bound at the call site of the function.  However, the binding behavior also seems to depend on the first variable in a function&#39;s parameters or return values that uses the lifetime."}, {"owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "edited": false, "score": 0, "creation_date": 1575485588, "post_id": 59170333, "comment_id": 104586568, "body": "For example, for <code>str_token</code>, I don&#39;t know if the lifetime parameter is bound at the call site of <code>str_token</code> or at the call site of the returned <code>impl Fn</code>.  It makes more sense to me that it would be bound at the call site of the returned <code>impl Fn</code>, but where&#39;s the documentation clarifying that this is in fact what happens?"}, {"owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "edited": false, "score": 0, "creation_date": 1575485688, "post_id": 59170333, "comment_id": 104586609, "body": "Also, those examples you gave won&#39;t work for a couple of reasons.  Firstly, the <code>nom</code> library defines parsers generically as functions which always accept one parameter that is the input to be parsed.  So <code>str_token</code> as you define it can&#39;t be used with <code>nom</code>.  Also, I want my parsers to allow the caller to specify the error type with turbofish syntax at the call site of the parser.  This is the idiomatic pattern recommended by the authors of the <code>nom</code> library and I&#39;d like to stick to it.  This necessitates the error type parameter and also the explicit lifetime on the input type that it wraps."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 2, "last_activity_date": 1575442287, "last_edit_date": 1575442287, "creation_date": 1575441966, "answer_id": 59170333, "question_id": 59168144, "link": "https://stackoverflow.com/questions/59168144/how-to-use-higher-rank-trait-bounds-to-make-a-returned-impl-fn-more-generic/59170333#59170333", "title": "How to use higher-rank trait bounds to make a returned impl Fn more generic?", "body": "<p>The error message is indeed less than ideal. That's because not all difficulties of the <a href=\"https://rust-lang.github.io/rustc-guide/traits/hrtb.html#basic-matching-and-placeholder-leaks\" rel=\"nofollow noreferrer\">leak check step</a> of handling the hrtb lifetimes have been ironed out yet. Niko has been working on <a href=\"https://github.com/rust-lang/rust/pull/65232\" rel=\"nofollow noreferrer\">it</a> though.</p>\n\n<p>If you turn off the leak check by pass <code>+nightly -Zno-leak-check</code> flag, you'll get a saner error message:</p>\n\n<pre><code>error: implementation of `std::ops::FnOnce` is not general enough\n   --&gt; src/main.rs:27:6\n    |\n27  |   ) -&gt; impl for&lt;'b&gt; Fn(&amp;'b str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ implementation of `std::ops::FnOnce` is not general enough\n    |\n    = note: `impl std::ops::Fn&lt;(&amp;str,)&gt;` must implement `std::ops::FnOnce&lt;(&amp;str,)&gt;`\n    = note: ...but `std::ops::FnOnce&lt;(&amp;'b str,)&gt;` is actually implemented for the type `impl std::ops::Fn&lt;(&amp;str,)&gt;`\n</code></pre>\n\n<p>Now, why does the compiler complain about <code>FnOnce</code> when you actually return <code>Fn</code>? This is me speculating but it should be reasonable. <code>FnOnce</code> is a super-trait to <code>Fn</code>, <code>rustc</code> is saying the code doesn't even satisfy the super-trait there's no way it could satisfy the more restrained trait itself.</p>\n\n<p>This finally makes sense now. Consider the fact that <a href=\"https://docs.rs/nom/5.0.1/nom/combinator/fn.verify.html\" rel=\"nofollow noreferrer\"><code>verify</code></a> is defined as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn verify&lt;I: Clone, O1, O2, E: ParseError&lt;I&gt;, F, G&gt;(\n    first: F, \n    second: G\n) -&gt; impl Fn(I) -&gt; IResult&lt;I, O1, E&gt; where\n    F: Fn(I) -&gt; IResult&lt;I, O1, E&gt;,\n    G: Fn(&amp;O2) -&gt; bool,\n    O1: Borrow&lt;O2&gt;,\n    O2: ?Sized,\n</code></pre>\n\n<p>By asking it to be:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl for&lt;'b&gt; Fn(&amp;'b str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;\nwhere\n    E: ParseError&lt;&amp;'a str&gt;,\n</code></pre>\n\n<p>you're asking <code>forall&lt;'b&gt; 'b = 'a</code> which simply isn't possible.</p>\n\n<hr>\n\n<p>Understanding how lifetimes work in Rust is very helpful and almost mandatory. When writing your own code though, it is better to skip them whenever possible. The lifetime elide rules are there to help you do exactly that. One certainly doesn't reach for hrtb lifetimes voluntarily :D</p>\n\n<p>For example, the more idiomatic way to write your <code>one_token</code> and <code>str_token</code> functions could be:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn one_token(input: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt;\n{\n    let res = terminated(is_not(\" \\t\\r\\n\"), multispace0)(input)?;\n\n    Ok(res)\n}\n\nfn str_token(input: &amp;str, expected_string: String) -&gt; IResult&lt;&amp;str, &amp;str&gt;\n{\n    let res = verify(one_token, |actual_string| {\n        actual_string == expected_string\n    })(input)?;\n\n    Ok(res)\n}\n</code></pre>\n"}], "owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 194, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1575488629, "creation_date": 1575426811, "last_edit_date": 1575488629, "question_id": 59168144, "link": "https://stackoverflow.com/questions/59168144/how-to-use-higher-rank-trait-bounds-to-make-a-returned-impl-fn-more-generic", "title": "How to use higher-rank trait bounds to make a returned impl Fn more generic?", "body": "<p>I ran across Rust's higher-rank trait bounds recently and thought I could use them to make some functions in a parser I'm writing more generic.  However, a modification I've made is giving me an error message that I can't make heads or tails of.</p>\n\n<p>Here's what I've got right now that works:</p>\n\n<pre><code>use nom::bytes::complete::is_not;\nuse nom::character::complete::multispace0;\nuse nom::combinator::verify;\nuse nom::error::{\n    ParseError,\n    VerboseError,\n};\nuse nom::sequence::terminated;\nuse nom::IResult;\n\nfn one_token&lt;'a, E&gt;(input: &amp;'a str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;\nwhere\n    E: ParseError&lt;&amp;'a str&gt;,\n{\n    terminated(is_not(\" \\t\\r\\n\"), multispace0)(input)\n}\n\nfn str_token&lt;'a, E&gt;(expected_string: String) -&gt; impl Fn(&amp;'a str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;\nwhere\n    E: ParseError&lt;&amp;'a str&gt;,\n{\n    verify(one_token, move |actual_string| {\n        actual_string == expected_string\n    })\n}\n</code></pre>\n\n<p>This compiles.  However, my intuitions tell me that it's not necessarily great that the <code>impl Fn</code> I'm returning from <code>str_token</code> is bound by a lifetime parameter on <code>str_token</code>.  I believe having it that way could unnecessarily restrict the usefulness of the <code>impl Fn</code> trait that gets returned.  So I thought I could modify it to return an <code>impl Fn</code> that works for any lifetime <code>'b</code>, regardless of what the lifetime of the factory function <code>str_token_hrtb</code> is:</p>\n\n<pre><code>fn str_token_hrtb&lt;'a, E&gt;(\n    expected_string: String,\n) -&gt; impl for&lt;'b&gt; Fn(&amp;'b str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;\nwhere\n    E: ParseError&lt;&amp;'a str&gt;,\n{\n    verify(one_token, move |actual_string| {\n        actual_string == expected_string\n    })\n}\n</code></pre>\n\n<p>Now, the compiler is giving me these errors:</p>\n\n<pre><code>error[E0277]: expected a `std::ops::Fn&lt;(&amp;'b str,)&gt;` closure, found `impl std::ops::Fn&lt;(&amp;str,)&gt;`\n  --&gt; src/main.rs:29:6\n   |\n29 | ) -&gt; impl for&lt;'b&gt; Fn(&amp;'b str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected an `Fn&lt;(&amp;'b str,)&gt;` closure, found `impl std::ops::Fn&lt;(&amp;str,)&gt;`\n   |\n   = help: the trait `for&lt;'b&gt; std::ops::Fn&lt;(&amp;'b str,)&gt;` is not implemented for `impl std::ops::Fn&lt;(&amp;str,)&gt;`\n   = note: the return type of a function must have a statically known size\n\nerror[E0271]: type mismatch resolving `for&lt;'b&gt; &lt;impl std::ops::Fn&lt;(&amp;str,)&gt; as std::ops::FnOnce&lt;(&amp;'b str,)&gt;&gt;::Output == std::result::Result&lt;(&amp;'b str, &amp;'b str), nom::internal::Err&lt;E&gt;&gt;`\n  --&gt; src/main.rs:29:6\n   |\n29 | ) -&gt; impl for&lt;'b&gt; Fn(&amp;'b str) -&gt; IResult&lt;&amp;str, &amp;str, E&gt;\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bound lifetime parameter 'b, found concrete lifetime\n   |\n   = note: the return type of a function must have a statically known size\n</code></pre>\n\n<p>I don't understand how to read this.  Is it saying that the trait <code>for&lt;'b&gt; std::ops::...</code> is not implemented for the return value of <code>verify</code>?  If so, why not?  And why wouldn't the same issue exist for <code>str_token</code>?  Also, I can't find any way to interpret the second <code>type mismatch</code> error message.</p>\n\n<p>Can anyone give some insight on what I'm doing wrong here and what the compiler is trying to tell me?</p>\n\n<p><em>Update</em>:</p>\n\n<p>I'm using the nom parsing library found here: <a href=\"https://github.com/Geal/nom/\" rel=\"nofollow noreferrer\">https://github.com/Geal/nom/</a></p>\n\n<p>Also, the code for the <code>verify</code> function is here: <a href=\"https://github.com/Geal/nom/blob/851706460a9311f7bbae8e9b7ee497c7188df0a3/src/combinator/mod.rs#L459\" rel=\"nofollow noreferrer\">https://github.com/Geal/nom/blob/851706460a9311f7bbae8e9b7ee497c7188df0a3/src/combinator/mod.rs#L459</a></p>\n\n<p><em>Another Update</em>:</p>\n\n<p>Decided to close this since I realized I may not have asked questions that were specific enough.</p>\n"}, {"tags": ["rust", "serde", "serde-json"], "answers": [{"comments": [{"owner": {"reputation": 24144, "user_id": 236136, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/0e19db7587af9b97db7aa2db7d1eb909?s=128&d=identicon&r=PG", "display_name": "CaseyB", "link": "https://stackoverflow.com/users/236136/caseyb"}, "edited": false, "score": 1, "creation_date": 1575484405, "post_id": 59167858, "comment_id": 104586093, "body": "I needed <code>lowercase</code> but this is indeed the fix! Thank you!"}], "tags": [], "owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "is_accepted": true, "score": 10, "last_activity_date": 1612198383, "last_edit_date": 1612198383, "creation_date": 1575424258, "answer_id": 59167858, "question_id": 59167416, "link": "https://stackoverflow.com/questions/59167416/how-can-i-deserialize-an-enum-when-the-case-doesnt-match/59167858#59167858", "title": "How can I deserialize an enum when the case doesn&#39;t match?", "body": "<p>You just need to put <a href=\"https://serde.rs/container-attrs.html#rename_all\" rel=\"nofollow noreferrer\"><code>#[serde(rename_all = &quot;snake_case&quot;)]</code></a> before the enum definition.</p>\n<p>Other possible values are <code>lowercase</code>, <code>UPPERCASE</code>, <code>PascalCase</code>, <code>camelCase</code>, <code>snake_case</code>, <code>SCREAMING_SNAKE_CASE</code>, <code>kebab-case</code>, and <code>SCREAMING-KEBAB-CASE</code>.</p>\n"}], "owner": {"reputation": 24144, "user_id": 236136, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/0e19db7587af9b97db7aa2db7d1eb909?s=128&d=identicon&r=PG", "display_name": "CaseyB", "link": "https://stackoverflow.com/users/236136/caseyb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 830, "favorite_count": 0, "accepted_answer_id": 59167858, "answer_count": 1, "score": 5, "last_activity_date": 1612198383, "creation_date": 1575419868, "last_edit_date": 1588711349, "question_id": 59167416, "link": "https://stackoverflow.com/questions/59167416/how-can-i-deserialize-an-enum-when-the-case-doesnt-match", "title": "How can I deserialize an enum when the case doesn&#39;t match?", "body": "<p>I have a JSON structure that looks like this:</p>\n\n<pre><code>{ \"type\": \"suite\", \"event\": \"started\", \"test_count\": 1 }\n</code></pre>\n\n<p>I want to deserialize into these structs:</p>\n\n<pre><code>#[derive(Debug, Deserialize)]\nenum ResultType {\n    Suite,\n    Test,\n}\n\n#[derive(Debug, Deserialize)]\nenum ResultEvent {\n    Started,\n    Failed,\n    Ok,\n}\n\n#[derive(Debug, Deserialize)]\nstruct JsonResult {\n    #[serde(rename(deserialize = \"type\"))]\n    test_type: ResultType,\n    event: ResultEvent,\n    test_count: Option&lt;u32&gt;,\n}\n</code></pre>\n\n<p>I can't find a way to make serde_json use the correct case. I keep getting these errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error(\"unknown variant `suite`, expected `Suite` or `Test`\", line: 1, column: 17)\n</code></pre>\n\n<p>If I change the case of the enum values to all lowercase or all uppercase it works, but I'd like to be able to use PascalCase.</p>\n"}, {"tags": ["string", "rust", "iterator"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 2, "creation_date": 1575417625, "post_id": 59167123, "comment_id": 104557730, "body": "By characters, do you mean bytes? For characters, you need to know what the encoding is."}, {"owner": {"reputation": 75, "user_id": 11535110, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ddecb0a2956f90109dbc6e9e827cb2c?s=128&d=identicon&r=PG&f=1", "display_name": "Kied Llaentenn", "link": "https://stackoverflow.com/users/11535110/kied-llaentenn"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1575417767, "post_id": 59167123, "comment_id": 104557770, "body": "no, characters. basically, the file I&#39;m processing is a pseudo-binary file, which contains a number of integers stored as characters. Some of them are above the 255 value, meaning that they get stored in more than one byte while the rest are only 1 byte in length. I don&#39;t want to have to figure out which byte belongs to which integer, which is what I&#39;d have to do if I used a <code>&amp;[u8]</code> instead of an <code>OsString</code>."}, {"owner": {"reputation": 75, "user_id": 11535110, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ddecb0a2956f90109dbc6e9e827cb2c?s=128&d=identicon&r=PG&f=1", "display_name": "Kied Llaentenn", "link": "https://stackoverflow.com/users/11535110/kied-llaentenn"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1575417901, "post_id": 59167123, "comment_id": 104557799, "body": "Ry: saw you edited comment just now. Do you think it would be better to process this as a byte array? Because this file is mostly UTF-8 <i>except</i> for various metadata which may or may not be valid Unicode."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1575418195, "post_id": 59167123, "comment_id": 104557859, "body": "Yes, that does sound better."}, {"owner": {"reputation": 75, "user_id": 11535110, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ddecb0a2956f90109dbc6e9e827cb2c?s=128&d=identicon&r=PG&f=1", "display_name": "Kied Llaentenn", "link": "https://stackoverflow.com/users/11535110/kied-llaentenn"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1575418523, "post_id": 59167123, "comment_id": 104557924, "body": "Ok, maybe I&#39;ll try that instead, using a fixed data type (u16) instead of two (u8 and u16), so each integer will be stored in exactly two bytes."}, {"owner": {"reputation": 75, "user_id": 11535110, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ddecb0a2956f90109dbc6e9e827cb2c?s=128&d=identicon&r=PG&f=1", "display_name": "Kied Llaentenn", "link": "https://stackoverflow.com/users/11535110/kied-llaentenn"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1575418553, "post_id": 59167123, "comment_id": 104557929, "body": "Still, I&#39;d like this question to be answered. Searching in the documentation yielded no results for this."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1575424448, "post_id": 59167123, "comment_id": 104559130, "body": "Try slicing the <code>OsString</code>, where you think you&#39;ll have valid characters to get an <a href=\"https://doc.rust-lang.org/std/ffi/struct.OsStr.html\" rel=\"nofollow noreferrer\"><code>OsStr</code></a>, and then try to get an <a href=\"https://doc.rust-lang.org/std/ffi/struct.OsStr.html#method.to_str\" rel=\"nofollow noreferrer\"><code>&amp;str</code></a>. Note that the last step of validating unicode is an <code>O(n)</code> operation."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1575457074, "post_id": 59167123, "comment_id": 104570685, "body": "It seems that your question could be an X/Y problem; what you really want to know is how to iterate over code points, where the source strings are inconsistently encoded? If so, you could find WTF8 useful: <a href=\"https://docs.rs/wtf8/0.0.3/wtf8/\" rel=\"nofollow noreferrer\">docs.rs/wtf8/0.0.3/wtf8</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575467808, "post_id": 59167123, "comment_id": 104576573, "body": "Do you agree that this can be rephrased to ask about bytes instead of characters? Because obviously there&#39;s no way to define &quot;characters&quot; for a string with no consistent encoding. Or what do you mean by <i>I&#39;d like this question to be answered</i>?"}], "answers": [{"comments": [{"owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "edited": false, "score": 1, "creation_date": 1575510954, "post_id": 59175522, "comment_id": 104594298, "body": "This probably won&#39;t work for the OP&#39;s use case, because &quot;the string(s) I&#39;m processing comes from a file, which may or may not contain valid UTF-8.&quot; invalid UTF-8 would cause <code>string.into_string().unwrap()</code> to panic."}], "tags": [], "owner": {"reputation": 93, "user_id": 10960543, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2HzwlE_ed1Q/AAAAAAAAAAI/AAAAAAAAC94/cRKOwCvFKkw/photo.jpg?sz=128", "display_name": "Pawan Bisht", "link": "https://stackoverflow.com/users/10960543/pawan-bisht"}, "is_accepted": true, "score": 0, "last_activity_date": 1575460668, "creation_date": 1575460668, "answer_id": 59175522, "question_id": 59167123, "link": "https://stackoverflow.com/questions/59167123/iterate-over-osstring-characters/59175522#59175522", "title": "Iterate over OsString characters", "body": "<p>Try this: </p>\n\n<pre><code>pub fn ostring_to_chars(string: OsString) {\n    let data = string.into_string().unwrap();\n    for char in data.chars() {\n        println!(\"{}\", char);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 75, "user_id": 11535110, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ddecb0a2956f90109dbc6e9e827cb2c?s=128&d=identicon&r=PG&f=1", "display_name": "Kied Llaentenn", "link": "https://stackoverflow.com/users/11535110/kied-llaentenn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 59175522, "answer_count": 1, "score": 1, "last_activity_date": 1575688373, "creation_date": 1575417577, "last_edit_date": 1575688373, "question_id": 59167123, "link": "https://stackoverflow.com/questions/59167123/iterate-over-osstring-characters", "title": "Iterate over OsString characters", "body": "<p>With <code>String</code>, we have the <code>.chars()</code> method to retrieve an iterator over that variable's characters.</p>\n\n<p>How can I do the same thing with <code>OsString</code>? E.g.</p>\n\n<pre><code>use std::vec::Vec;\nuse std::ffi::OsString;\n\npub fn ostring_to_chars(string: OsString) {\n    string.chars().collect::&lt;Vec&lt;OsString&gt;&gt;();\n}\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575425409, "post_id": 59164687, "comment_id": 104559331, "body": "&quot;Can&#39;t the borrow just live as long as the closure?&quot; obviously not <code>point</code> life will end at the end of your function so you can&#39;t borrow it for more than the scope of your function."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575425760, "post_id": 59164687, "comment_id": 104559408, "body": "just do that <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f9f95a588dc2f2712db0a9a1a9a18cc9\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575425983, "post_id": 59164687, "comment_id": 104559475, "body": "@Stargateur, thanks but <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f9f95a588dc2f2712db0a9a1a9a18cc9\" rel=\"nofollow noreferrer\">your version</a> doesn&#39;t  produce the right output.  Rather than chaining the &quot;steps&quot; together to wind up at (3, 0) it starts from (0, 0) at the beginning of each &quot;step&quot; and finishes at (2, 0)."}, {"owner": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575426126, "post_id": 59164687, "comment_id": 104559507, "body": "Over on reddit, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f9f95a588dc2f2712db0a9a1a9a18cc9\" rel=\"nofollow noreferrer\">clair_resurgent explained what&#39;s wrong in detail</a>.  I need to meditate on it a bit..."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575426333, "post_id": 59164687, "comment_id": 104559574, "body": "I didn&#39;t really look if output was the same ^^&#39;, also you fail your last link but I bet the explanation is hard, that why I tried to not answer :p when you post the same question on several platform it&#39;s good to indicate it in the question. also if you begin rust never forget, KISS, try to reproduce feature of python is not the way to go (in first) if you want python use python. Well, generator are totally ok for Rust but do it at hand can be very hard."}], "answers": [{"comments": [{"owner": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "edited": false, "score": 0, "creation_date": 1575484850, "post_id": 59169056, "comment_id": 104586274, "body": "I&#39;m starting to think that my fundamental issue was trying to rely on side-effects (mutable state) while also using the more functional <code>flat_map()</code>.  For fun, I started to work on a functional approach that would use <code>flat_map</code> and <code>fold</code> to create something like <code>[|p| step(p), |p| step(step(p)), |p| step(step(step(p)))]</code> which you could evaluate by calling each function with <code>p = Point::new(0, 0)</code>.  If I can figure out the  types, I&#39;ll post it."}, {"owner": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "edited": false, "score": 0, "creation_date": 1575485119, "post_id": 59169056, "comment_id": 104586370, "body": "The crux of your solution seems to be keeping a copy of the latest <code>Point</code> emitted by the <code>StepTracer</code>.  Then the <code>MultiStepTracer</code> can create a new <code>StepTracer</code> iterators using the latest point.  I&#39;d like to explore whether it&#39;s possible to build a version of your <code>MultiStepTracer</code> that takes advantage of the original <code>trace_step()</code> function, probably by keeping the copy of the latest <code>Point</code> in the <code>MultiStepTracer</code> rather than in the <code>StepTracer</code>."}, {"owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "reply_to_user": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "edited": false, "score": 0, "creation_date": 1575511079, "post_id": 59169056, "comment_id": 104594320, "body": "Iterators are implemented with <code>fn next(&amp;mut self) -&gt; ...</code> so I sadly don&#39;t think that would be possible. You can&#39;t have <code>&amp;mut self</code> passed to <code>next()</code> while at the same time storing <code>&amp;mut self.field</code> somewhere. However what would work is if <code>MultiStepTracer</code> owned the point rather than mutably borrowing it. I don&#39;t really understand what you mean by the functional example, example code would be nice. This gets even more complex when you consider whether or not you want to copy anything or store data on the heap."}, {"owner": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "edited": false, "score": 0, "creation_date": 1575517400, "post_id": 59169056, "comment_id": 104595595, "body": "FWIW, I posted a functional version."}], "tags": [], "owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "is_accepted": true, "score": 1, "last_activity_date": 1575434457, "creation_date": 1575434457, "answer_id": 59169056, "question_id": 59164687, "link": "https://stackoverflow.com/questions/59164687/rust-error-cannot-infer-an-appropriate-lifetime-for-borrow-expression-when-att/59169056#59169056", "title": "Rust error &quot;cannot infer an appropriate lifetime for borrow expression&quot; when attempting to mutate state inside a closure returning an Iterator", "body": "<p>The problem is that Rust is very strict about copying mutable references. This is a problem because when you return the iterator inside <code>flat_map</code>, that iterator has to have a mutable (sole) reference to the point, but <code>flat_map</code> isn't robust enough to give the iterator back to you, and therefore Rust can't prove that the last iterator doesn't still reference the point by the time the closure is called again. Once generators are stabilized, this will be trivial to do properly. In the meantime, it is still possible, but <strong><em>MUCH</em></strong> harder than I expected, you need to manually implement the <code>Iterator</code> trait. Here you go:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dbdc89bb9e4aa94c85262bcc4d3dcd9d\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::iter::{ExactSizeIterator, FusedIterator};\n\n#[derive(Clone, Copy, Debug, Eq, PartialEq)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nimpl Point {\n    fn new(x: i32, y: i32) -&gt; Point {\n        Self { x, y }\n    }\n}\n\n#[derive(Debug)]\nstruct StepTracer&lt;'a&gt; {\n    point: &amp;'a mut Point,\n    len: u8,\n}\n\nimpl&lt;'a&gt; StepTracer&lt;'a&gt; {\n    fn new(point: &amp;'a mut Point, len: u8) -&gt; Self {\n        Self { point, len }\n    }\n\n    fn into_inner(self) -&gt; &amp;'a mut Point {\n        self.point\n    }\n}\n\nimpl&lt;'a&gt; Iterator for StepTracer&lt;'a&gt; {\n    type Item = Point;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.len == 0 {\n            None\n        } else {\n            self.len -= 1;\n            self.point.x += 1;\n            Some(*self.point)\n        }\n    }\n\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        (self.len as usize, Some(self.len as usize))\n    }\n}\n\nimpl FusedIterator for StepTracer&lt;'_&gt; {}\nimpl ExactSizeIterator for StepTracer&lt;'_&gt; {}\n\n// You may also want to consider implementing DoubleEndedIterator\n// Additional traits: https://doc.rust-lang.org/std/iter/index.html#traits\n\nenum MultiStepTracerState&lt;'a&gt; {\n    First(&amp;'a mut Point),\n    Second(&amp;'a mut Point),\n    Tracer(StepTracer&lt;'a&gt;),\n    Done,\n}\n\n/// Intention is that this produces points along a path defined by multiple\n/// steps. Simplified.\nstruct MultiStepTracer&lt;'a, I: Iterator&lt;Item = u8&gt;&gt; {\n    steps: I,\n    state: MultiStepTracerState&lt;'a&gt;,\n}\n\nimpl&lt;'a, I: Iterator&lt;Item = u8&gt;&gt; MultiStepTracer&lt;'a, I&gt; {\n    fn new(point: &amp;'a mut Point, steps: I) -&gt; Self {\n        Self {\n            steps,\n            state: MultiStepTracerState::First(point),\n        }\n    }\n}\n\nimpl&lt;I: Iterator&lt;Item = u8&gt;&gt; Iterator for MultiStepTracer&lt;'_, I&gt; {\n    type Item = Point;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        loop {\n            let mut temp_state = MultiStepTracerState::Done;\n            std::mem::swap(&amp;mut self.state, &amp;mut temp_state);\n            let point_ref = match temp_state {\n                MultiStepTracerState::First(point) =&gt; {\n                    let result = *point;\n                    self.state = MultiStepTracerState::Second(point);\n                    return Some(result);\n                }\n                MultiStepTracerState::Second(point) =&gt; point,\n                MultiStepTracerState::Tracer(mut tracer) =&gt; {\n                    if let Some(result) = tracer.next() {\n                        self.state = MultiStepTracerState::Tracer(tracer);\n                        return Some(result);\n                    } else {\n                        tracer.into_inner()\n                    }\n                }\n                MultiStepTracerState::Done =&gt; {\n                    return None;\n                }\n            };\n\n            if let Some(len) = self.steps.next() {\n                self.state = MultiStepTracerState::Tracer(StepTracer::new(point_ref, len));\n            } else {\n                self.state = MultiStepTracerState::Done;\n                return None;\n            }\n        }\n    }\n}\n\nimpl&lt;I: Iterator&lt;Item = u8&gt;&gt; FusedIterator for MultiStepTracer&lt;'_, I&gt; {}\n\nfn main() {\n    let mut point: Point = Point::new(0, 0);\n    let points: Vec&lt;Point&gt; = StepTracer::new(&amp;mut point, 3).collect();\n\n    // Outputs: [Point { x: 1, y: 0 }, Point { x: 2, y: 0 }, Point { x: 3, y: 0 }]\n    println!(\"{:?}\", points);\n\n    // Should trace the first from (0, 0) to (1, 0) and then trace the second step\n    // from (1, 0) to (2, 0) to (3, 0).\n    let points: Vec&lt;Point&gt; =\n        MultiStepTracer::new(&amp;mut Point::new(0, 0), [1, 2].iter().copied()).collect();\n    println!(\"{:?}\", points);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "is_accepted": false, "score": 1, "last_activity_date": 1575516771, "last_edit_date": 1575516771, "creation_date": 1575516395, "answer_id": 59187777, "question_id": 59164687, "link": "https://stackoverflow.com/questions/59164687/rust-error-cannot-infer-an-appropriate-lifetime-for-borrow-expression-when-att/59187777#59187777", "title": "Rust error &quot;cannot infer an appropriate lifetime for borrow expression&quot; when attempting to mutate state inside a closure returning an Iterator", "body": "<p>The original question asked for an Iterator of points along some path defined by run lengths and the answer below does not provide an Iterator.  The accepted answer above still deserves all credit for being the best answer to the original question.</p>\n\n<p>The code below achieves essentially the same result by ditching the mutable state and fully embracing the functional approach struggling to break through the via <code>flat_map</code> in the original question's mess of code.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6d54f26eaaa07bbca19d61eecb15d016\" rel=\"nofollow noreferrer\">Run on the Rust playground.</a></p>\n\n<p>Code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Copy, Debug, Eq, PartialEq)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nimpl Point {\n    fn new(x: i32, y: i32) -&gt; Point {\n        Self { x, y }\n    }\n}\n\nfn main() {\n    let origin: Point = Point::new(0, 0);\n    let lengths: Vec&lt;u16&gt; = vec![1, 2];\n\n    // Function that returns the next point after \"taking a step\"\n    fn step(p: Point) -&gt; Point {\n         Point {x: p.x + 1, y: p.y }\n    };\n\n    /*****************************************\n     * ORIGINAL EXAMPLE: Collect all points along the path\n     *****************************************/\n\n    // The crux of this version of the answer is to create all of the steps we \n    // intend to take for each length.  Steps will be an iterator that is \n    // something like: [|x| step(x), |x| step(x), |x| step(x)]\n    let steps = lengths.iter().flat_map(|num_steps: &amp;u16| (0..*num_steps).map(|_| |x| step(x)) );\n\n    // `fold` lets us chain steps one after the other.  Unfortunately, this\n    // doesn't give us an iterator, so it's not a good answer to the original \n    // question.\n    let path_points: Vec&lt;Point&gt; = steps.fold(vec![origin], |mut acc, f| {\n        acc.push(f(*acc.last().unwrap()));\n        acc\n    }).split_off(1);  // split_off gets rid of the initial \"origin\" point at (0, 0)\n    println!(\"Path for original example: {:?}\", path_points);\n\n    /*****************************************\n     * BONUS EXAMPLE: Get just the endpoint\n     *****************************************/\n\n    // Same as above\n    let steps = lengths.iter().flat_map(|num_steps: &amp;u16| (0..*num_steps).map(|_| |x| step(x)) );\n\n    // Note that this has the same space-saving benefits of the iterator \n    // solution, but it requires the user to do more work in general having to\n    // think about how to write the folding function\n    let end_point: Point = steps.fold(origin, |acc, f| {\n        f(acc)\n    });\n    println!(\"End point for bonus example: {:?}\", end_point);\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>Path for original example: [Point { x: 1, y: 0 }, Point { x: 2, y: 0 }, Point { x: 3, y: 0 }]\nEnd point for bonus example: Point { x: 3, y: 0 }\n</code></pre>\n"}], "owner": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 323, "favorite_count": 1, "accepted_answer_id": 59169056, "answer_count": 2, "score": 2, "last_activity_date": 1575516771, "creation_date": 1575404186, "question_id": 59164687, "link": "https://stackoverflow.com/questions/59164687/rust-error-cannot-infer-an-appropriate-lifetime-for-borrow-expression-when-att", "title": "Rust error &quot;cannot infer an appropriate lifetime for borrow expression&quot; when attempting to mutate state inside a closure returning an Iterator", "body": "<p>I'm trying to learn Rust and have encountered a lifetime-related problem while trying to emulate nested Python generators.  The problem is with  the lifetime of a value mutated by a closure, as reported by the compiler.  The crux of the code is flat_mapping a closure that calls a function that mutates a value supplied from the outer-scope in its returned Iterator.  See line 39 in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1f50daa8cca607736302a3f5d9e74f0a\" rel=\"nofollow noreferrer\">Rust playground example</a>.</p>\n\n<p>The code here is a simplified, trivial version of the original program.  Since my ultimate goal is to learn more about Rust, I'd appreciate some insight even more than a fix for my code!</p>\n\n<p>For example, one \"solution\" is the commented-out code on line 44.  It \"works\" but it misses the point by always allocating a <code>Vec</code> that contains all points on the trace even if the user only wants to check the first Point on a trace.</p>\n\n<p>I think the problem has something to do with how the mutable borrow to <code>point</code> lives on in the Iterator that <code>trace_steps</code> returns.  I have tried far too many variations to list here, from passing in the <code>point</code> that is mutated from <code>main</code> (more similar to how <code>trace_step</code> works) to attempts at blindly using <code>Rc&lt;RefCell&lt;Point&gt;&gt;</code> when I started to get desperate.</p>\n\n<p>Below is the code copied from the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1f50daa8cca607736302a3f5d9e74f0a\" rel=\"nofollow noreferrer\">Rust Playground</a> is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Eq, PartialEq)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nimpl Point {\n    fn new(x: i32, y: i32) -&gt; Point {\n        Point { x, y }\n    }\n}\n\n// Intention is that this is like a Python generator.  Normally the \"step\" would\n// be a struct with a direction and a length but this is a simplified version.\nfn trace_step&lt;'a&gt;(point: &amp;'a mut Point, step: u8) -&gt; impl Iterator&lt;Item = Point&gt; + 'a {\n    let mut len = step;\n    std::iter::from_fn(move || {\n        if len == 0 {\n            None\n        } else {\n            len -= 1;\n            point.x += 1;\n            Some(Point { ..*point })\n        }\n    })\n}\n\n// FIXME: See compiler error!!!\n// Compiler cannot infer an appropriate lifetime for the borrow &amp;mut point.\n// Can't the borrow just live as long as the closure?\n//\n// Intention is that this produces points along a path defined by multiple\n// steps.  Simplified.\nfn trace_steps(steps: Vec&lt;u8&gt;) -&gt; impl Iterator&lt;Item = Point&gt; {\n    let mut point: Point = Point::new(0, 0);\n\n    // FIXME: This doesn't work.\n    let f = |x: &amp;u8| trace_step(&amp;mut point, *x);\n    steps.iter().flat_map(f)\n\n    // This works, but we don't want to commit to allocating the space for all\n    // points if the user only needs to, for example, count the number of points.\n    /*\n    let mut ret: Vec&lt;Point&gt; = Vec::new();\n    for step in steps {\n        ret.extend(trace_step(&amp;mut point, step));\n    }\n    ret.into_iter()\n    */\n}\n\nfn main() {\n    let mut point: Point = Point::new(0, 0);\n    let points: Vec&lt;Point&gt; = trace_step(&amp;mut point, 3).collect();\n\n    // Outputs: [Point { x: 1, y: 0 }, Point { x: 2, y: 0 }, Point { x: 3, y: 0 }]\n    println!(\"{:?}\", points);\n\n    // Should trace the first from (0, 0) to (1, 0) and then trace the second step\n    // from (1, 0) to (2, 0) to (3, 0).\n    let points: Vec&lt;Point&gt; = trace_steps(vec![1, 2]).collect();\n    println!(\"{:?}\", points);\n}\n</code></pre>\n\n<p>And the error when this is run in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1f50daa8cca607736302a3f5d9e74f0a\" rel=\"nofollow noreferrer\">Rust Playground</a> is:</p>\n\n<pre><code>   Compiling playground v0.0.1 (/playground)\nerror[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:38:33\n   |\n38 |     let f = |x: &amp;u8| trace_step(&amp;mut point, *x);\n   |                                 ^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime '_ as defined on the body at 38:13...\n  --&gt; src/main.rs:38:13\n   |\n38 |     let f = |x: &amp;u8| trace_step(&amp;mut point, *x);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...so that closure can access `point`\n  --&gt; src/main.rs:38:33\n   |\n38 |     let f = |x: &amp;u8| trace_step(&amp;mut point, *x);\n   |                                 ^^^^^^^^^^\nnote: but, the lifetime must be valid for the destruction scope surrounding expression at 34:63...\n  --&gt; src/main.rs:34:63\n   |\n34 |   fn trace_steps(steps: Vec&lt;u8&gt;) -&gt; impl Iterator&lt;Item = Point&gt; {\n   |  _______________________________________________________________^\n35 | |     let mut point: Point = Point::new(0, 0);\n36 | |     \n37 | |     // FIXME: This doesn't work.\n...  |\n49 | |     */\n50 | | }\n   | |_^\nnote: ...so that references are valid when the destructor runs\n  --&gt; src/main.rs:34:63\n   |\n34 |   fn trace_steps(steps: Vec&lt;u8&gt;) -&gt; impl Iterator&lt;Item = Point&gt; {\n   |  _______________________________________________________________^\n35 | |     let mut point: Point = Point::new(0, 0);\n36 | |     \n37 | |     // FIXME: This doesn't work.\n...  |\n49 | |     */\n50 | | }\n   | |_^\n\nerror: aborting due to previous error\n\nerror: could not compile `playground`.\n</code></pre>\n"}, {"tags": ["arrays", "rust"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575410379, "post_id": 59164913, "comment_id": 104555802, "body": "what language have an array that can grow or shrink ?"}, {"owner": {"reputation": 29, "user_id": 12393165, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBJIMdkncGW-8SH_F7rJk9VmmMRkJpYzw2sXuIJwQ=k-s128", "display_name": "Taimoor", "link": "https://stackoverflow.com/users/12393165/taimoor"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575432290, "post_id": 59164913, "comment_id": 104560778, "body": "I don&#39;t know much about other languages but Python has arrays called &quot;lists&quot; which can grow and shrink."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1575432718, "post_id": 59164913, "comment_id": 104560884, "body": "so not array, list is list not array"}, {"owner": {"reputation": 29, "user_id": 12393165, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBJIMdkncGW-8SH_F7rJk9VmmMRkJpYzw2sXuIJwQ=k-s128", "display_name": "Taimoor", "link": "https://stackoverflow.com/users/12393165/taimoor"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575434678, "post_id": 59164913, "comment_id": 104561318, "body": "Arrays in JavaScript can grow and shrink but they are typically similar to lists in Python i.e. they can hold different data types while Rust arrays are homogenous. I think Dynamic arrays are typical feature of interpreted languages unlike compiled languages where size and data type should be known at compile time"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575441944, "post_id": 59164913, "comment_id": 104563311, "body": "yeah javascript is... well, actually when you push something on an array in javascript you create a new array, in javascript all is const, anyway you get my point, array often mean &quot;fixed size&quot; because that how thing are since 50 years, that why a lot of other lang use name like vector, list to represent contiguous element. Also, this is very important in language like C where array are something very precise and a lot of poeple still wrongly use the word array. So I would say &quot;like other programming languages array in Rust cannot grow or shrink&quot; :p"}, {"owner": {"reputation": 29, "user_id": 12393165, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBJIMdkncGW-8SH_F7rJk9VmmMRkJpYzw2sXuIJwQ=k-s128", "display_name": "Taimoor", "link": "https://stackoverflow.com/users/12393165/taimoor"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575459314, "post_id": 59164913, "comment_id": 104571804, "body": "thanks for correcting, it helped me to recall some lessons\ud83d\ude0a"}, {"owner": {"reputation": 2531, "user_id": 1555662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7046fb9264a333e4c8ac89180f7fed20?s=128&d=identicon&r=PG", "display_name": "olivecoder", "link": "https://stackoverflow.com/users/1555662/olivecoder"}, "edited": false, "score": 1, "creation_date": 1594987076, "post_id": 59164913, "comment_id": 111326223, "body": "Q: &quot;what language have an array that can grow or shrink ?&quot;  A: python: <a href=\"https://docs.python.org/2.7/library/array.html\" rel=\"nofollow noreferrer\">docs.python.org/2.7/library/array.html</a>"}], "tags": [], "owner": {"reputation": 29, "user_id": 12393165, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBJIMdkncGW-8SH_F7rJk9VmmMRkJpYzw2sXuIJwQ=k-s128", "display_name": "Taimoor", "link": "https://stackoverflow.com/users/12393165/taimoor"}, "is_accepted": false, "score": 1, "last_activity_date": 1575442553, "last_edit_date": 1575442553, "creation_date": 1575405263, "answer_id": 59164913, "question_id": 59164456, "link": "https://stackoverflow.com/questions/59164456/how-to-return-an-array-in-rust-function/59164913#59164913", "title": "How to return an array in Rust function", "body": "<p>First like other programming languages array in Rust cannot grow or shrink. You can either use a vector.</p>\n\n<pre><code>let v : Vec&lt;i32&gt; = Vec::new();\n</code></pre>\n\n<p>you can use .push() function to push values in vector.</p>\n"}, {"tags": [], "owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "is_accepted": false, "score": 10, "last_activity_date": 1617320870, "last_edit_date": 1617320870, "creation_date": 1575460781, "answer_id": 59175553, "question_id": 59164456, "link": "https://stackoverflow.com/questions/59164456/how-to-return-an-array-in-rust-function/59175553#59175553", "title": "How to return an array in Rust function", "body": "<blockquote>\n<p>I want to create a function in Rust that generates an Array of x size with random values</p>\n</blockquote>\n<p>The type <code>[f64]</code> is a slice, not an array. An array needs a length, like <code>[f64; 25]</code>.</p>\n<p>Rust's <code>Vec</code> is probably better than a array or slice for this job, unless you're using some sort of foreign function interface (FFI), or a Rust API requires an array (it probably requires <code>Deref&lt;Target = [T]&gt;</code>, basically generic over all array-like types including Vec and arrays). <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\"><code>Vec</code></a> is analogous to C++'s <a href=\"https://en.cppreference.com/w/cpp/container/vector\" rel=\"nofollow noreferrer\"><code>std::vector</code></a>, and Java's <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html\" rel=\"nofollow noreferrer\"><code>ArrayList</code></a>.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use rand::prelude::*;\n\nfn generate_vec(len: usize) -&gt; Vec&lt;f64&gt; {\n    let mut rng = rand::thread_rng();\n    let mut vec = Vec::with_capacity(len);\n    for _ in 0..len {\n        vec.push(rng.gen::&lt;f64&gt;() * 100.);\n    }\n    return vec;\n}\n\nfn main() {\n    let generated_vec = generate_vec(10);\n    println!(&quot;{:?}&quot;, generated_vec);\n}\n\n</code></pre>\n<p>I made some style changes[1]. If you <strong>really</strong> want an array, read on.</p>\n<p>If you know the size of the array at compile time, you can use an array. But if it is too big to fit on the stack, you'll get a stack overflow.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use rand::prelude::*;\n\nconst CONST_LEN: usize = 10;\n\nfn generate_array() -&gt; [f64; CONST_LEN] {\n    let mut rng = rand::thread_rng();\n    let mut arr = [0.; CONST_LEN];\n    for item in arr.iter_mut() {\n        *item = rng.gen::&lt;f64&gt;() * 100.;\n    }\n    arr\n}\n\nfn main() {\n    let generated_array = generate_array();\n    println!(&quot;{:?}&quot;, generated_array);\n}\n</code></pre>\n<p>If you don't know the length at compile time, or it is too big to fit on the stack, the closest you can get to an array is <code>Box&lt;[T]&gt;</code> (Box of slice of T) using <code>into_boxed_slice()</code>.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use rand::prelude::*;\n\nfn generate_array(len: usize) -&gt; Box&lt;[f64]&gt; {\n    let mut rng = rand::thread_rng();\n    let mut vec = Vec::with_capacity(len);\n    for _ in 0..len {\n        vec.push(rng.gen::&lt;f64&gt;() * 100.);\n    }\n    vec.into_boxed_slice()\n}\n\nfn main() {\n    let generated_array = generate_array(10);\n    println!(&quot;{:?}&quot;, generated_array);\n}\n\n</code></pre>\n<p>[1] words in function names separated with underscores instead of camelCase, moved <code>println</code> to <code>main()</code> and changed the type of len to <code>usize</code>, since this is how arrays are typically indexed in rust.</p>\n"}, {"tags": [], "owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "is_accepted": false, "score": 0, "last_activity_date": 1591845220, "creation_date": 1591845220, "answer_id": 62316430, "question_id": 59164456, "link": "https://stackoverflow.com/questions/59164456/how-to-return-an-array-in-rust-function/62316430#62316430", "title": "How to return an array in Rust function", "body": "<p>Adapting your function, and still returning an array, requires specifying the number of elements in the return type i.e. <code>fn generateArray()-&gt;[f64; 100]</code>. The rust type system accounts for the size of an array, so <code>[f64; 100]</code> (an array of length 100 containing <code>f64</code>s) is a different type from <code>[f64; 99]</code>. Specifying the array's length in the function makes is less reusable, as it always returns the same size array.</p>\n\n<p>If you simply must create stack-allocated arrays full of random floats, you could use a macro, but this limits you to array sizes known at compile time (<code>constexpr</code> in C++ lingo, <code>const</code> in Rust lingo). I consider this macro approach slightly unidiomatic rust. The macro could look like</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rand::prelude::*;\n\nmacro_rules! make_array {\n    ($size:literal) =&gt; {{\n        let mut rng = rand::thread_rng();\n        let mut arr = [0_f64; $size];\n        for item in arr.iter_mut() {\n            *item = rng.gen::&lt;f64&gt;()*100.;\n        }\n        arr\n    }}\n}\n\nfn main() {\n    let arr = make_array!(32);\n    println!(\"{:?}\", arr);\n    let arr = make_array!(16);\n    println!(\"{:?}\", arr);\n}\n</code></pre>\n\n<p>This is more reusable than the modified function, as you can specify different numbers of elements.</p>\n"}], "owner": {"reputation": 193, "user_id": 10330767, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wp-gWrY7MHM/AAAAAAAAAAI/AAAAAAAAAAc/OKAJPoTHw3M/photo.jpg?sz=128", "display_name": "Mateusz Piwowarski", "link": "https://stackoverflow.com/users/10330767/mateusz-piwowarski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6731, "favorite_count": 1, "answer_count": 3, "score": 6, "last_activity_date": 1617320870, "creation_date": 1575403074, "last_edit_date": 1575466744, "question_id": 59164456, "link": "https://stackoverflow.com/questions/59164456/how-to-return-an-array-in-rust-function", "title": "How to return an array in Rust function", "body": "<p>I wanted to create a function in Rust that generates an Array of x size with random values. I would like to ask how to return an array in Rust function and it would be nice if you can check if the rest of my code is ok. I am sorry for my basic question but I am a beginner. </p>\n\n<pre><code>use rand::prelude::*;\n\nfn generateArray(howManyValues: u32)-&gt;[f64]\n{\n    let mut rng = rand::thread_rng();\n    let array: [f64, howManyValues];\n    for i in 0..howManyValues\n    {\n        array[i] = rng.gen()*100;\n    }\n\n    println!(\"{:?}\", array);\n    return array;\n}\n\nfn main() {\n    generateArray(10);\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1575399138, "post_id": 59163361, "comment_id": 104551234, "body": "It would be more idiomatic to use <code>.copied()</code> instead of <code>.map(|x| *x)</code>, unless you are using a slightly old version of Rust, which doesn&#39;t have the method."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1575399227, "post_id": 59163361, "comment_id": 104551276, "body": "See this <b>VERY SIMILAR</b> question: <a href=\"https://stackoverflow.com/questions/59156305/in-rust-how-do-i-create-a-hashset-from-the-keys-of-a-hashmap\" title=\"in rust how do i create a hashset from the keys of a hashmap\">stackoverflow.com/questions/59156305/&hellip;</a>"}], "owner": {"reputation": 309, "user_id": 5567817, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e546330d9d1e879b77caceb096f55282?s=128&d=identicon&r=PG&f=1", "display_name": "Iniesta8", "link": "https://stackoverflow.com/users/5567817/iniesta8"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 68, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1575400422, "creation_date": 1575398179, "last_edit_date": 1575400422, "question_id": 59163361, "link": "https://stackoverflow.com/questions/59163361/idiomatically-dereference-map-keys", "title": "Idiomatically dereference map keys", "body": "<p>I'd like to get two <code>HashSet</code>s out of the keys of two <code>HashMap</code>s in Rust. My code looks like the following:</p>\n\n<pre><code>let mut wire1_map: HashMap&lt;(i32, i32), u32&gt; = HashMap::new();\nget_route(&amp;mut wire1_map, &amp;wire1);\nlet mut wire2_map: HashMap&lt;(i32, i32), u32&gt; = HashMap::new();\nget_route(&amp;mut wire2_map, &amp;wire2);\n\nlet wire1_set: HashSet&lt;(i32, i32)&gt; = wire1_map.keys().map(|x| *x).collect();\nlet wire2_set: HashSet&lt;(i32, i32)&gt; = wire2_map.keys().map(|x| *x).collect();\n\nlet is = wire1_set.intersection(&amp;wire2_set);\nlet m_dist = is.map(|ele| calc_distance((0, 0), *ele)).min().unwrap();\n</code></pre>\n\n<p>I want to get <code>HashSet</code>s to use <code>intersection()</code>.</p>\n\n<p>The code runs, but my questions are:</p>\n\n<ul>\n<li>In general, is this idiomatic Rust code?</li>\n<li>Is there an easier (more idiomatic) way to dereference each key of a map?</li>\n</ul>\n"}, {"tags": ["string", "rust", "calculator", "arithmetic-expressions"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1575398267, "post_id": 59163108, "comment_id": 104550900, "body": "Welcome to Stack Overflow! This doesn&#39;t (I don&#39;t think) directly answer your question, but you may want to look at the <a href=\"https://en.wikipedia.org/wiki/Shunting-yard_algorithm\" rel=\"nofollow noreferrer\">shunting-yard algorithm</a> for parsing arithmetic expressions like <code>3 + 1</code>."}, {"owner": {"reputation": 29, "user_id": 12393165, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBJIMdkncGW-8SH_F7rJk9VmmMRkJpYzw2sXuIJwQ=k-s128", "display_name": "Taimoor", "link": "https://stackoverflow.com/users/12393165/taimoor"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575399342, "post_id": 59163108, "comment_id": 104551325, "body": "thanks that really helped to make a logic for the problem."}], "answers": [{"tags": [], "owner": {"reputation": 39, "user_id": 12752597, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-_xu7GHVzZQg/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcIbvBlBHbMYAuJQmeM3pVNQYnXzw/photo.jpg?sz=128", "display_name": "omrihhh", "link": "https://stackoverflow.com/users/12752597/omrihhh"}, "is_accepted": false, "score": 2, "last_activity_date": 1590575896, "creation_date": 1590575896, "answer_id": 62041124, "question_id": 59163108, "link": "https://stackoverflow.com/questions/59163108/how-to-evaluate-string-as-expression-to-perform-arithmetic-operations-on-string/62041124#62041124", "title": "How to evaluate String as expression to perform arithmetic operations on String in Rust, so that when user type 3 + 1 on console it gives 4", "body": "<p>you can use a crate named meval and just pass the string to the <code>eval_str</code> function </p>\n\n<pre><code>use meval::eval_str;\n\nfn main() {\n    let r = meval::eval_str(\"1 + 2\").unwrap();\n    println!(\"1 + 2 = {}\", r);\n}\n</code></pre>\n"}], "owner": {"reputation": 29, "user_id": 12393165, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBJIMdkncGW-8SH_F7rJk9VmmMRkJpYzw2sXuIJwQ=k-s128", "display_name": "Taimoor", "link": "https://stackoverflow.com/users/12393165/taimoor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 362, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1590583904, "creation_date": 1575397002, "last_edit_date": 1575398767, "question_id": 59163108, "link": "https://stackoverflow.com/questions/59163108/how-to-evaluate-string-as-expression-to-perform-arithmetic-operations-on-string", "title": "How to evaluate String as expression to perform arithmetic operations on String in Rust, so that when user type 3 + 1 on console it gives 4", "body": "<p>I was trying to make a calculator in the Rust programming language. The calculator performs basic arithmetic operations like add, sutract, exponent etc. The challenging part for me is that the user input is a <code>String</code> and I want the calculator to be intelligent enough so that when the user types 3 + 1 on console it will return 4 or 2^3 = 8. I can parse the <code>String</code> into an integer or any other data type, but how can I convert \"+\" into the arithmetic operator?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1575442694, "post_id": 59158908, "comment_id": 104563567, "body": "So there is no difference in its import right now, isn&#39;t it?"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1575443275, "post_id": 59158908, "comment_id": 104563780, "body": "@dronte7 nope, apart from the fact one is unstable."}, {"owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1575443748, "post_id": 59158908, "comment_id": 104563957, "body": "they both are immediately turns into a Future with ot without acquiring of some surround variables. except for being unstable async closure is the same as async block with acquiring of external variables, isn&#39;t it?"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1575443922, "post_id": 59158908, "comment_id": 104564034, "body": "@dronte7 they both return a Future <i>when</i> being called. As far as capturing variables, they are the same as well. That&#39;s what closure stands for, async or not."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 5, "creation_date": 1575448676, "post_id": 59158908, "comment_id": 104566057, "body": "I think capturing variables is quite different in both cases. <code>async move || ...</code> will move variables from the enclosing block into the closure, while <code>|| async move {...}</code> will move variables from the closure into the async block. if you want to move them from the enclosing block into the async block, I reckon you need to use <code>move || async move {...}</code> for now."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575460983, "post_id": 59158908, "comment_id": 104572674, "body": "@SvenMarnach at first i was thinking the same but it doesn&#39;t work with that way, please <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=5df35babf7e698fcc0a9baca955bd991\" rel=\"nofollow noreferrer\">check this</a>. You don&#39;t need to add extra move to the plain closure literal which evaluates async block. It should use the reference of <code>global_string</code> in the example but it just moves."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1575464390, "post_id": 59158908, "comment_id": 104574552, "body": "@&#214;merErden This is rather surprising. I&#39;ll look into thhis once I&#39;ve got a bit of time."}, {"owner": {"reputation": 391, "user_id": 4136745, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b512049cfc6af771dedfa13926801de9?s=128&d=identicon&r=PG&f=1", "display_name": "sify", "link": "https://stackoverflow.com/users/4136745/sify"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1613978346, "post_id": 59158908, "comment_id": 117232643, "body": "@&#214;merErden I&#39;m very confused now. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=39d4788895e68db6c43a893d9e8e8856\" rel=\"nofollow noreferrer\">See this</a> which supports @SvenMarnach &#39;s opinion, you need to add <code>move</code> before <code>||</code>."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 391, "user_id": 4136745, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b512049cfc6af771dedfa13926801de9?s=128&d=identicon&r=PG&f=1", "display_name": "sify", "link": "https://stackoverflow.com/users/4136745/sify"}, "edited": false, "score": 0, "creation_date": 1614063214, "post_id": 59158908, "comment_id": 117262649, "body": "@sify the difference is, in your code you are moving the owner of the reference, not the owner of the vec."}, {"owner": {"reputation": 391, "user_id": 4136745, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b512049cfc6af771dedfa13926801de9?s=128&d=identicon&r=PG&f=1", "display_name": "sify", "link": "https://stackoverflow.com/users/4136745/sify"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1615284094, "post_id": 59158908, "comment_id": 117637400, "body": "@&#214;merErden So in my case the variables are copied rather than moved. Then why can&#39;t I use a single move to achieve this effect?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 391, "user_id": 4136745, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b512049cfc6af771dedfa13926801de9?s=128&d=identicon&r=PG&f=1", "display_name": "sify", "link": "https://stackoverflow.com/users/4136745/sify"}, "edited": false, "score": 0, "creation_date": 1615300967, "post_id": 59158908, "comment_id": 117644780, "body": "@sify you can, I&#39;ve just shared an example that points <code>async move || ...</code> and <code>|| async move {...}</code> both captures from the same scope."}, {"owner": {"reputation": 391, "user_id": 4136745, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b512049cfc6af771dedfa13926801de9?s=128&d=identicon&r=PG&f=1", "display_name": "sify", "link": "https://stackoverflow.com/users/4136745/sify"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1615342869, "post_id": 59158908, "comment_id": 117659756, "body": "@&#214;merErden I checked and <code>async move || ...</code> works on nightly channel with <code>async_closure</code> feature, but <code>|| async move {...}</code> doesn&#39;t work. Your example uses <code>|| async move {...}</code>, you don&#39;t need <code>async_closure</code> feature and it works on stable channel. But for me <code>|| async move {...}</code> doesn&#39;t works, the variables <code>v</code> and <code>i</code> are referenced by the closure but not copied, it must be <code>move || async move{...}</code>"}, {"owner": {"reputation": 10595, "user_id": 325320, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/23bc4a16f6a4bac91accd76c8078cd35?s=128&d=identicon&r=PG", "display_name": "Mr.Wang from Next Door", "link": "https://stackoverflow.com/users/325320/mr-wang-from-next-door"}, "edited": false, "score": 0, "creation_date": 1617275099, "post_id": 59158908, "comment_id": 118262036, "body": "The code within  <code>async</code> block does not start till I <code>await</code> the future, right?"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 14, "last_activity_date": 1575383127, "last_edit_date": 1592644375, "creation_date": 1575381934, "answer_id": 59158908, "question_id": 59156473, "link": "https://stackoverflow.com/questions/59156473/what-is-the-difference-between-async-move-and-async-move/59158908#59158908", "title": "What is the difference between `|_| async move {}` and `async move |_| {}`", "body": "<p>One is the async block (a closure with async block as its body to be precise), while the other is async closure. Per <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2394-async_await.md\" rel=\"noreferrer\">async/await RFC</a>:</p>\n<blockquote>\n<p><code>async ||</code> closures</p>\n<p>In addition to functions, async can also be applied to closures. Like an async function, an async closure has a return type of <code>impl Future&lt;Output = T&gt;</code>, rather than <code>T</code>.</p>\n</blockquote>\n<p>On the other hand:</p>\n<blockquote>\n<p><code>async</code> blocks</p>\n<p>You can create a future directly as an expression using an <code>async</code> block. This form is almost equivalent to an immediately-invoked <code>async</code> closure:</p>\n<pre><code> async { /* body */ }\n\n // is equivalent to\n\n (async || { /* body */ })()\n</code></pre>\n<p>except that control-flow constructs like <code>return</code>, <code>break</code> and <code>continue</code> are not allowed within body.</p>\n</blockquote>\n<p>The <code>move</code> keyword here is to denote that the async closure and block are to capture ownership of the variables they close over.</p>\n<p>And apparently, async closure is still deemed to be unstable. It has <a href=\"https://github.com/rust-lang/rust/issues/62290\" rel=\"noreferrer\">this tracking issue</a>.</p>\n"}], "owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7022, "favorite_count": 3, "accepted_answer_id": 59158908, "answer_count": 1, "score": 20, "last_activity_date": 1604941214, "creation_date": 1575373874, "question_id": 59156473, "link": "https://stackoverflow.com/questions/59156473/what-is-the-difference-between-async-move-and-async-move", "title": "What is the difference between `|_| async move {}` and `async move |_| {}`", "body": "<p>Let's consider the following examples:</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>use futures::executor::block_on;\nuse futures::future::{FutureExt, TryFutureExt};\n\n\nasync fn fut1() -&gt; Result&lt;String, u32&gt; {\n  Ok(\"ok\".to_string())\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n    match block_on(fut1().and_then(|x| async move { Ok(format!(\"{} is \\\"ok\\\"\", x)) })) {\n      Ok(s) =&gt; println!(\"{}\", s),\n      Err(u) =&gt; println!(\"{}\", u)\n    };\n}\n\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[dependencies]\nfutures = \"^0.3\"\n</code></pre>\n\n<p>I'm asking about the expression <code>|x| async move {}</code> instead of <code>async move |x| {}</code>. The latter is more obvious, but it runs into the compilation error:</p>\n\n<pre><code>error[E0658]: async closures are unstable\n</code></pre>\n\n<p>Then I wonder, what is the difference between <code>async move || {}</code> and <code>|| async move {}</code>. They both seems to be closures for using the <code>move</code> keyword.</p>\n\n<pre><code>$ rustc --version\nrustc 1.39.0 (4560ea788 2019-11-04)\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1575374686, "post_id": 59156305, "comment_id": 104537538, "body": "Are you looking for an efficient solution, or for a simple solution?"}, {"owner": {"reputation": 4673, "user_id": 319584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5d1e6ccdfaf2fb28512d5b1025c6852?s=128&d=identicon&r=PG", "display_name": "Marijn van Vliet", "link": "https://stackoverflow.com/users/319584/marijn-van-vliet"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1575451605, "post_id": 59156305, "comment_id": 104567552, "body": "I&#39;m trying to learn more about the language, so I&#39;d love both an elegant but maybe slow solution and an example of a fast solution."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 5, "last_activity_date": 1575375044, "creation_date": 1575375044, "answer_id": 59156836, "question_id": 59156305, "link": "https://stackoverflow.com/questions/59156305/in-rust-how-do-i-create-a-hashset-from-the-keys-of-a-hashmap/59156836#59156836", "title": "In Rust, how do I create a HashSet from the keys of a HashMap?", "body": "<p>You just need to collect into the <code>HashSet</code>:</p>\n\n<pre><code>let set1: HashSet&lt;i64&gt; = map1.keys().copied().collect(); \nlet set2: HashSet&lt;i64&gt; = map2.keys().copied().collect();\n</code></pre>\n\n<p>Using <code>copied()</code> will dereference the keys and copy them, since you want a <code>HashSet&lt;i64&gt;</code> not a <code>HashSet&lt;&amp;i64&gt;</code></p>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1575376773, "post_id": 59156843, "comment_id": 104538747, "body": "<i>&quot;lots of allocations&quot;</i> - only two extra allocations. <code>HashMap::keys()</code> returns an <code>ExactSizeIterator</code>, so the collector can allocate the <code>HashSet</code> in one step."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1575377547, "post_id": 59156843, "comment_id": 104539185, "body": "@PeterHall: Rephrased, it&#39;s not the number the problem, it&#39;s the size of them."}, {"owner": {"reputation": 4673, "user_id": 319584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5d1e6ccdfaf2fb28512d5b1025c6852?s=128&d=identicon&r=PG", "display_name": "Marijn van Vliet", "link": "https://stackoverflow.com/users/319584/marijn-van-vliet"}, "edited": false, "score": 0, "creation_date": 1575451783, "post_id": 59156843, "comment_id": 104567633, "body": "What does <code>&amp;&#39;a K</code> stand for? Some sort of reference to an item of type <code>K</code>?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 4673, "user_id": 319584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5d1e6ccdfaf2fb28512d5b1025c6852?s=128&d=identicon&r=PG", "display_name": "Marijn van Vliet", "link": "https://stackoverflow.com/users/319584/marijn-van-vliet"}, "edited": false, "score": 1, "creation_date": 1575454888, "post_id": 59156843, "comment_id": 104569492, "body": "@MarijnvanVliet: Yes, an immutable reference to a key of the hash map."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 10, "last_activity_date": 1575377531, "last_edit_date": 1592644375, "creation_date": 1575375068, "answer_id": 59156843, "question_id": 59156305, "link": "https://stackoverflow.com/questions/59156305/in-rust-how-do-i-create-a-hashset-from-the-keys-of-a-hashmap/59156843#59156843", "title": "In Rust, how do I create a HashSet from the keys of a HashMap?", "body": "<h3>The simple solution</h3>\n<p>Your code only needs a few tweaks to actually compile (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c28515af943ccd2a084d634bf4e48dd5\" rel=\"noreferrer\">see Playground</a>):</p>\n<pre><code>use std::collections::{HashSet, HashMap};\n\nfn main() {\n    let mut map1 = HashMap::new();\n    let mut map2 = HashMap::new();\n\n    // Add some values into the HashMaps for demonstration\n    map1.insert(1, 10);\n    map1.insert(5, 50);\n    map2.insert(3, 30);\n    map2.insert(5, 50);\n\n    let set1: HashSet&lt;i64&gt; = map1.keys().cloned().collect();\n    let set2: HashSet&lt;i64&gt; = map2.keys().cloned().collect();\n\n    let set3 = set1.intersection(&amp;set2);\n    println!(&quot;{:?}&quot;, set3);\n}\n</code></pre>\n<p>In particular, note <code>map1.keys().cloned().collect()</code>:</p>\n<ul>\n<li><code>HashMap&lt;K, V&gt;::keys()</code> returns an <code>Iterator&lt;Item = &amp;'a K&gt;</code>,</li>\n<li><code>.cloned()</code> transforms that to an <code>Iterator&lt;Item = K&gt;</code>,</li>\n<li><code>.collect()</code> builds a collection from that, since <code>HashSet</code> implements the <code>FromIterator</code> trait.</li>\n</ul>\n<p>However, this is not very efficient:</p>\n<ul>\n<li>Complexity wise: <code>O(map1.size() + map2.size())</code>.</li>\n<li>Memory wise: potentially large allocations.</li>\n</ul>\n<h3>The efficient solution</h3>\n<p>Implement <code>intersection</code> directly on the keys of <code>HashMap</code>.</p>\n"}], "owner": {"reputation": 4673, "user_id": 319584, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5d1e6ccdfaf2fb28512d5b1025c6852?s=128&d=identicon&r=PG", "display_name": "Marijn van Vliet", "link": "https://stackoverflow.com/users/319584/marijn-van-vliet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1786, "favorite_count": 0, "accepted_answer_id": 59156843, "answer_count": 2, "score": 7, "last_activity_date": 1575377531, "creation_date": 1575373258, "last_edit_date": 1575375086, "question_id": 59156305, "link": "https://stackoverflow.com/questions/59156305/in-rust-how-do-i-create-a-hashset-from-the-keys-of-a-hashmap", "title": "In Rust, how do I create a HashSet from the keys of a HashMap?", "body": "<p>I have two <code>HashMap</code>s and want to compute the intersection of the keys. Is it possible to construct a <code>HashSet</code> out of whatever <code>HashMap::keys()</code> returns? For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::{HashSet, HashMap};\n\nfn main() {\n    let mut map1: HashMap&lt;i64, i64&gt; = HashMap::new();\n    let mut map2: HashMap&lt;i64, i64&gt; = HashMap::new();\n\n    // Add some values into the HashMaps for demonstration\n    map1.insert(1, 10);\n    map1.insert(5, 50);\n    map2.insert(3, 30);\n    map2.insert(5, 50);\n\n    let set1: HashSet&lt;i64&gt; = HashSet::from(map1.keys());  // How to do this?\n    let set2: HashSet&lt;i64&gt; = HashSet::from(map2.keys());  // How to do this?\n\n    let set3 = set1.intersection(&amp;set2); // What I'm looking to accomplish\n    // set3 should contain [5], as this is the one key shared by the two HashMaps\n}\n</code></pre>\n"}, {"tags": ["rust", "hashmap"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1575334688, "post_id": 59148656, "comment_id": 104523074, "body": "What is the point of step 2 in this process? Is it necessary?"}, {"owner": {"reputation": 570, "user_id": 2780630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57f6fdc404f5a270e608f3df85f40dfb?s=128&d=identicon&r=PG&f=1", "display_name": "DanielV", "link": "https://stackoverflow.com/users/2780630/danielv"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1575335139, "post_id": 59148656, "comment_id": 104523181, "body": "It isn&#39;t totally necessary, but since the computation will itself look at the hashtable, a temp value allows me check that I&#39;m not trying to read that value while computing it."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575335356, "post_id": 59148656, "comment_id": 104523225, "body": "6. ??? 7. profit. no seriously what you want don&#39;t make sense please give an example some code that show what you want !"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1575337549, "post_id": 59148656, "comment_id": 104523688, "body": "Ah okay. If your computation has to look at the table, but I don&#39;t think this is possible as-is. You can absolutely look up a key, and create it if it isn&#39;t found, but only if Rust can guarantee that the table hasn&#39;t changed, which it can&#39;t do if you need to access the table during computation."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1575344580, "post_id": 59148656, "comment_id": 104525123, "body": "FYI, just looking at your code now. Your code is unsound and could crash. I don&#39;t believe it is possible to use the index trait for what you want to do, because the index trait requires a reference into your hashmap, but you want to simultaneously mutate the hashmap as items are indexed."}], "answers": [{"comments": [{"owner": {"reputation": 570, "user_id": 2780630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57f6fdc404f5a270e608f3df85f40dfb?s=128&d=identicon&r=PG&f=1", "display_name": "DanielV", "link": "https://stackoverflow.com/users/2780630/danielv"}, "edited": false, "score": 0, "creation_date": 1575387981, "post_id": 59150275, "comment_id": 104545804, "body": "Ack, I should have realized Rust Hashmap doesn&#39;t guarantee data doesn&#39;t move, I even watched a C++ lecture where they mentioned that.  I think I&#39;m going to use Out : copy.  I only used a &amp;Out because the index trait forced that.  I&#39;m going to think about converting my input to requiring Into&lt;usize&gt; and store things in a Box&lt;&gt; instead, so I don&#39;t have so much overhead.  Thanks a ton."}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 4, "last_activity_date": 1575367607, "last_edit_date": 1575367607, "creation_date": 1575348082, "answer_id": 59150275, "question_id": 59148656, "link": "https://stackoverflow.com/questions/59148656/is-it-possible-to-perform-one-get-and-two-inserts-on-a-hashmap-with-only-one/59150275#59150275", "title": "Is it possible to perform one `get` and two `insert`s on a HashMap with only one lookup?", "body": "<blockquote>\n  <p>I'd like to do this with only 1 hash/lookup. Is that possible? </p>\n</blockquote>\n\n<p>It is not possible with a single hash lookup because Rust has no way to know whether the calculation itself might try to change the structure of your <code>SaveCall</code> object. If your callback didn't accept <code>self</code> as a parameter, then it would be possible, but not with the API as you want it.</p>\n\n<blockquote>\n  <p>Is it possible to do it with 2?</p>\n</blockquote>\n\n<p>It is possible with 2 using <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.entry\" rel=\"nofollow noreferrer\"><code>HashMap::entry</code></a>, which lets you search for a key in the map, and modify the location and inspect whether or not it had a value, without having to recompute the hash.</p>\n\n<p>You can use this to compute the hash once when you initially query the table and either return or insert <code>None</code>, and then you can insert normally when you have the final result.</p>\n\n<p>This takes us to your code itself. It is not possible to use the <code>std::ops::Index</code> trait to do what you want. Your example code has tried to get around this with <code>UnsafeCell</code>, but your unsafe code violates the requirements that unsafe code must adhere to.</p>\n\n<p>The short version is that the <code>Index</code> trait returns a reference. You specifically want to mutate the map by inserting entries as you access them, that means that the HashMap must grow and reallocate space for its values as it does so. If you have to re-allocate, it means that there is no way for the references returned by the <code>index</code> to remain valid, since they were referencing to the memory that was re-allocated.</p>\n\n<p>Where does that leave you?</p>\n\n<ol>\n<li>You need to stop using the <code>Index</code> trait, and instead implement a method on your <code>SavedCall</code> type that does not return a reference.</li>\n<li>You need to decide what you want to return instead. If you want to return <code>Out</code> directly, then <code>Out</code> needs to explicitly be a <code>Copy</code> type. If you want to support non-Copy types, then you'd potentially need to return an <code>Rc</code> or an <code>Arc</code>.</li>\n</ol>\n\n<p>For example</p>\n\n<pre><code>impl&lt;'a, In: std::cmp::Eq + std::hash::Hash + Copy, Out&gt; SaveCall&lt;'a, In, Out&gt; {\n    fn get(&amp;self, input: In) -&gt; Rc&lt;Out&gt; {\n</code></pre>\n\n<p>or</p>\n\n<pre><code>impl&lt;'a, In: std::cmp::Eq + std::hash::Hash + Copy, Out: Copy&gt; SaveCall&lt;'a, In, Out&gt; {\n    fn get(&amp;self, input: In) -&gt; Out {\n</code></pre>\n\n<p>Here's a more complete version built on your example code <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dd13e63c491600d5c1a0d33b38261fc7\" rel=\"nofollow noreferrer\">on the Rust playground</a>. This uses Rc to best demonstrate the example, but you can trim it down if <code>Out: Copy</code> is fine.</p>\n"}], "owner": {"reputation": 570, "user_id": 2780630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57f6fdc404f5a270e608f3df85f40dfb?s=128&d=identicon&r=PG&f=1", "display_name": "DanielV", "link": "https://stackoverflow.com/users/2780630/danielv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 190, "favorite_count": 0, "accepted_answer_id": 59150275, "answer_count": 1, "score": 2, "last_activity_date": 1585705644, "creation_date": 1575333531, "last_edit_date": 1585705644, "question_id": 59148656, "link": "https://stackoverflow.com/questions/59148656/is-it-possible-to-perform-one-get-and-two-inserts-on-a-hashmap-with-only-one", "title": "Is it possible to perform one `get` and two `insert`s on a HashMap with only one lookup?", "body": "<p>I have an application where I need to:</p>\n\n<ol>\n<li>Lookup a value in a hash table and return it if it exists</li>\n<li>If it didn't exist, store a temp value</li>\n<li>Compute a new value using the other values in the table</li>\n<li>Store the new value into the hash table</li>\n<li>Return the new value</li>\n</ol>\n\n<p>I'd like to do this with only 1 hash/lookup.  Is that possible?  Is it possible to do it with 2?</p>\n\n<hr>\n\n<p>I'm computing Fibonacci to show the purpose. The function that would be nice to optimize from 3 lookups to 1 lookup is the <code>index()</code> function: </p>\n\n<pre><code>// Written by beefucurry\n\nuse std::collections::HashMap;\n\nuse std::cell::UnsafeCell;\n\nfn main() {\n    let fib = SaveCall::&lt;u32, u32&gt;::new(|k, fib_| {\n        if k &lt; 2 {\n            return k;\n        } else {\n            return fib_[k - 1] + fib_[k - 2];\n        }\n    });\n\n    for k in (0..30).rev() {\n        println!(\"fib[{}] = {}\", k, fib[k]);\n    }\n}\n\npub struct SaveCall&lt;'a, In: std::cmp::Eq + std::hash::Hash + Copy, Out&gt; {\n    cache: UnsafeCell&lt;HashMap&lt;In, Option&lt;Out&gt;&gt;&gt;,\n    f: Box&lt;dyn Fn(In, &amp;SaveCall&lt;'a, In, Out&gt;) -&gt; Out + 'a&gt;,\n}\nimpl&lt;'a, In: std::cmp::Eq + std::hash::Hash + Copy, Out&gt; SaveCall&lt;'a, In, Out&gt; {\n    pub fn new(f: impl Fn(In, &amp;Self) -&gt; Out + 'a) -&gt; Self {\n        Self {\n            cache: UnsafeCell::new(HashMap::new()),\n            f: Box::new(f),\n        }\n    }\n}\n\nimpl&lt;'a, In: std::cmp::Eq + std::hash::Hash + Copy, Out&gt; std::ops::Index&lt;In&gt;\n    for SaveCall&lt;'a, In, Out&gt;\n{\n    type Output = Out;\n    fn index&lt;'b&gt;(&amp;'b self, input: In) -&gt; &amp;'b Self::Output {\n        unsafe {\n            //println!(\"~~Looking up {:?}\", input);\n            let cache = self.cache.get();\n            let saved = (*cache).get(&amp;input);\n            if saved.is_some() {\n                //println!(\"~~Found {:?}\", input);\n                let z = saved.unwrap().as_ref();\n                if z.is_some() {\n                    return z.unwrap();\n                } else {\n                    panic!(\"Attempted to compute a value based on itself\");\n                }\n            }\n            (*cache).insert(input, None);\n            //println!(\"~~Computing {:?}\", input);\n            let output: Out = (self.f)(input, self);\n            //println!(\"~~Writing to cache {:?}\", input);\n            (*cache).insert(input, Some(output));\n            let output_ref = (*cache).get(&amp;input).unwrap().as_ref().unwrap();\n            output_ref\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5dc26bdd4273d7d897e61ab0d9909aa5\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575329421, "post_id": 59147821, "comment_id": 104521969, "body": "<i>In a mainish module (main.rs, lib.rs, or subdir/mod.rs), you need to write <code>mod a;</code> for all other modules that you want to use in your whole project (or in the subdir). In any other module, you need to write <code>use a;</code> or <code>use a::foo;</code></i> You need <b>both</b> <code>mod bar;</code> <b>and</b> <code>use bar;</code> (actually <code>crate::bar</code> here)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575329804, "post_id": 59147821, "comment_id": 104522069, "body": "See also <a href=\"https://stackoverflow.com/questions/30677258/how-do-i-import-from-a-sibling-module\">How do I import from a sibling module?</a>"}, {"owner": {"reputation": 191, "user_id": 9643557, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fhqXU.png?s=128&g=1", "display_name": "Robin", "link": "https://stackoverflow.com/users/9643557/robin"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575335945, "post_id": 59147821, "comment_id": 104523361, "body": "Oh, thanks. Why didn&#39;t you create a &quot;real&quot; answer so I could have selected it to flag this question as answered?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575376185, "post_id": 59147821, "comment_id": 104538405, "body": "I was on mobile and didn&#39;t have the time to dedicate to a good answer. Also, I was pretty sure this had already been answered here, and I prefer to link questions together rather than write new answers. I found <a href=\"https://stackoverflow.com/q/46829539/3650362\">How to include files from same directory in a module using Cargo/Rust?</a> and <a href=\"https://stackoverflow.com/q/55868434/3650362\">Why can&#39;t I import module from different file in same directory?</a> (which was marked as a duplicate of one of the ones you linked, but also has an answer of its own)."}], "owner": {"reputation": 191, "user_id": 9643557, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fhqXU.png?s=128&g=1", "display_name": "Robin", "link": "https://stackoverflow.com/users/9643557/robin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 193, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1576068174, "creation_date": 1575327272, "last_edit_date": 1576068174, "question_id": 59147821, "link": "https://stackoverflow.com/questions/59147821/how-to-include-file-from-another-file-in-the-same-directory-of-the-same-project", "title": "How to include file from another file in the same directory of the same project?", "body": "<p>I started a new project in rust (it's my first project in rust, but my first programming language). I added a few functions, types and unit test in <code>main.rs</code>. Then I wanted to move it in two new files <code>foo.rs</code> and <code>bar.rs</code>.</p>\n\n<p><strong>How do I import/include/use <code>bar.rs</code> from <code>foo.rs</code>?</strong></p>\n\n<hr>\n\n<p>I already read:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/book/ch07-05-separating-modules-into-different-files.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch07-05-separating-modules-into-different-files.html</a></li>\n<li><a href=\"https://stackoverflow.com/questions/26224947/how-do-i-do-a-basic-import-include-of-a-function-from-one-module-to-another-in-r\">How do I do a basic import/include of a function from one module to another in Rust 2015?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/22596920/split-a-module-across-several-files\">Split a module across several files</a></li>\n<li><a href=\"https://stackoverflow.com/questions/26388861/how-to-include-module-from-another-file-from-the-same-project\">How to include module from another file from the same project?</a></li>\n<li><a href=\"https://doc.rust-lang.org/stable/rust-by-example/mod.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/stable/rust-by-example/mod.html</a></li>\n</ul>\n\n<p>Neither have the following structure</p>\n\n<pre><code>src/\n|-- main.rs\n|-- foo.rs\n|-- bar.rs\n</code></pre>\n\n<p>Where <code>foo.rs</code> is trying to use the content of <code>bar.rs</code>.</p>\n\n<hr>\n\n<p>If I try to use a type <code>Bar</code> declared in <code>bar.rs</code> directly from <code>foo.rs</code>, I get:</p>\n\n<pre><code>error[E0433]: failed to resolve: use of undeclared type or module `Bar`\n  --&gt; src/foo.rs\n</code></pre>\n\n<hr>\n\n<p>If I add <code>mod bar</code> at the beginning of <code>foo.rs</code> isn't any better:</p>\n\n<pre><code>error[E0583]: file not found for module `bar`\n --&gt; src/foo.rs\n  |\n1 | mod bar;\n  |     ^^^\n  |\n  = help: name the file either foo/bar.rs or foo/bar/mod.rs inside the directory \"src\"\n</code></pre>\n\n<hr>\n\n<p>And finally (but I wasn't expecting this one to work), with <code>use bar;</code> in <code>foo.rs</code>:</p>\n\n<pre><code>error[E0432]: unresolved import `bar`\n --&gt; src/foo.rs\n  |\n1 | use bar;\n  |     ^^^ no `grammar` external crate\n</code></pre>\n"}, {"tags": ["memory", "rust", "ffi"], "answers": [{"tags": [], "owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "is_accepted": true, "score": 7, "last_activity_date": 1575385435, "last_edit_date": 1575385435, "creation_date": 1575319691, "answer_id": 59146440, "question_id": 59146268, "link": "https://stackoverflow.com/questions/59146268/rust-invalid-pointer-with-boxfrom-raw-boxinto-raw-round-trip/59146440#59146440", "title": "Rust invalid pointer with Box::from_raw() Box::into_raw() round trip", "body": "<p>You end up creating a double pointer here:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Handle {\n    pub fn from&lt;T&gt;(obj: T) -&gt; Self {\n        let boxed = Box::new(obj);\n        let mut ptr = Box::into_raw(boxed);\n        Self::from_ptr_mut(&amp;mut ptr)\n    }\n\n    pub fn from_ptr_mut&lt;T&gt;(ptr: &amp;mut T) -&gt; Self {\n        Self(ptr as *mut T as usize)\n    }\n    ...\n}\n\n</code></pre>\n\n<p><code>Box::into_raw</code> returns a pointer, but then you take a mutable reference to that pointer, and store that address as a <code>usize</code>. You should just be using the <code>*mut T</code> as returned by <code>Box::into_raw</code>.</p>\n\n<p>The reason that the non-working code with the double pointer compiles is that your <code>from&lt;T&gt;</code> and your <code>from_ptr_mut&lt;T&gt;</code> can take entirely different <code>T</code> parameters. If we consider the type <code>T</code> passed to <code>from&lt;T&gt;</code> to be a concrete type, then in this case you're calling <code>from_ptr_mut&lt;U&gt;</code> (where <code>U</code> is <code>*mut T</code>) with an argument of type <code>&amp;mut *mut T</code>.</p>\n\n<p>It should look like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Handle {\n    pub fn from&lt;T&gt;(obj: T) -&gt; Self {\n        let boxed = Box::new(obj);\n        let ptr = Box::into_raw(boxed);\n        Self::from_ptr_mut(ptr)\n    }\n\n    pub fn from_ptr_mut&lt;T&gt;(ptr: *mut T) -&gt; Self {\n        Self(ptr as usize)\n    }\n    ...\n}\n\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3074946142a2eaec1808ac8544b94c4e\" rel=\"nofollow noreferrer\">Working example in the playground.</a></p>\n\n<hr>\n\n<p>Even though we are in the realm of <code>unsafe</code> you can have the compiler do some of the work for you by making the parameter <code>T</code> be bound to your <code>Handle</code> struct. This way you will be statically prevented from loading a different type than was stored.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8a6d84f0ac122081354c104aa05fbfdd\" rel=\"nofollow noreferrer\">Playground example where Handle includes a PhantomData.</a></p>\n\n<p>In this second example you don't have to tell the compiler which item you're retrieving a la <code>a.to_box::&lt;Crashes&gt;()</code>, which is good because you  can't introduce undefined behavior by specifying the wrong type.</p>\n"}], "owner": {"reputation": 416, "user_id": 1846108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f3497d26ddf271df5c71f39d0111724a?s=128&d=identicon&r=PG", "display_name": "Pruthvikar", "link": "https://stackoverflow.com/users/1846108/pruthvikar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 437, "favorite_count": 0, "accepted_answer_id": 59146440, "answer_count": 1, "score": 4, "last_activity_date": 1575385435, "creation_date": 1575318775, "question_id": 59146268, "link": "https://stackoverflow.com/questions/59146268/rust-invalid-pointer-with-boxfrom-raw-boxinto-raw-round-trip", "title": "Rust invalid pointer with Box::from_raw() Box::into_raw() round trip", "body": "<p>I'm banging my head against this supposedly simple usage of Box whilst trying to create some FFI helper code.</p>\n\n<p>The sample here seems to give an error of <code>free(): invalid pointer</code> when used with a struct that has a field. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Handle(usize);\n\nimpl Handle {\n    pub fn from&lt;T&gt;(obj: T) -&gt; Self {\n        let boxed = Box::new(obj);\n        let mut ptr = Box::into_raw(boxed);\n        Self::from_ptr_mut(&amp;mut ptr)\n    }\n\n    pub fn from_ptr_mut&lt;T&gt;(ptr: &amp;mut T) -&gt; Self {\n        Self(ptr as *mut T as usize)\n    }\n\n    pub fn to_box&lt;T&gt;(self) -&gt; Box&lt;T&gt; {\n        let obj: *mut T = self.to_ptr_mut();\n        unsafe { Box::from_raw(obj) }\n    }\n\n    pub fn to_ptr_mut&lt;T&gt;(self) -&gt; *mut T {\n        self.0 as *mut T\n    }\n}\n\n#[allow(dead_code)]\nstruct Crashes { value: u64 }\n\nimpl Drop for Crashes {\n    fn drop(&amp;mut self) {\n        println!(\"Crashes dropped\");\n    }\n}\n\nfn crashes() {\n    let t = Crashes { value: 12 };\n    let a = Handle::from(t);\n    let b = a.to_box::&lt;Crashes&gt;();\n    drop(b);\n}\n\nstruct Works;\n\nimpl Drop for Works {\n    fn drop(&amp;mut self) {\n        println!(\"Works dropped\");\n    }\n}\n\nfn works() {\n    let t = Works;\n    let a = Handle::from(t);\n    let b = a.to_box::&lt;Works&gt;();\n    drop(b);\n}\n\nfn main() {\n    works();\n    crashes();\n}\n</code></pre>\n\n<p>You can paste this into <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/</a> and see how it throws aborts with the error <code>free(): invalid pointer</code></p>\n\n<p>The drop function seems to be called at the appropriate time, but the pointer seems to be somehow invalid</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1575316254, "post_id": 59145661, "comment_id": 104517487, "body": "Learning Rust with Advent of Code? Welcome to StackOverflow, and thanks for the great question!"}, {"owner": {"reputation": 163, "user_id": 12470204, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-pXUuJ2SG7O0/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbAeS0GmNpL9tuxZ8ccP0QUhX0bVsg/mo/photo.jpg?sz=128", "display_name": "Lucas Boucke", "link": "https://stackoverflow.com/users/12470204/lucas-boucke"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575317617, "post_id": 59145661, "comment_id": 104518022, "body": "Precisely ; ) This is my 3rd year of doing it (2x Haskell before that) ~&gt; thought to give Rust a whirl since I&#39;ve started to be more interested in low level stuff"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575362741, "post_id": 59145661, "comment_id": 104530785, "body": "@LucasBoucke That&#39;s funny, I usually use Rust for my project, but I write this AoC in Haskell. They both are great languages in their domain."}], "answers": [{"comments": [{"owner": {"reputation": 163, "user_id": 12470204, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-pXUuJ2SG7O0/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbAeS0GmNpL9tuxZ8ccP0QUhX0bVsg/mo/photo.jpg?sz=128", "display_name": "Lucas Boucke", "link": "https://stackoverflow.com/users/12470204/lucas-boucke"}, "edited": false, "score": 0, "creation_date": 1575318639, "post_id": 59146116, "comment_id": 104518418, "body": "Woah! There&#39;s a lot going on here! Thanks for taking the time to explain! (interestingly those kinds of &quot;quirks&quot; make a language more interesting to me...).  Could you maybe also give a hint as to why <code>*v.index_mut(*v.index_mut(1)) = 999;</code> fails with &quot;cannot borrow v as mutable more than once&quot; ~&gt; shouldn&#39;t the compiler be, as with <code>*v.index_mut(*v.index(1)) = 999;</code> able to figure out that the inner borrow is no longer needed?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 163, "user_id": 12470204, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-pXUuJ2SG7O0/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbAeS0GmNpL9tuxZ8ccP0QUhX0bVsg/mo/photo.jpg?sz=128", "display_name": "Lucas Boucke", "link": "https://stackoverflow.com/users/12470204/lucas-boucke"}, "edited": false, "score": 0, "creation_date": 1575318769, "post_id": 59146116, "comment_id": 104518456, "body": "@LucasBoucke Rust does have a few quirks that are sometimes a bit inconvenient, but in most cases the solution is rather simple, as in this case. The code is still quite readable, just a tiny bit <i>different</i> than what you originally had, so in practice it&#39;s not a big deal."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 163, "user_id": 12470204, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-pXUuJ2SG7O0/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbAeS0GmNpL9tuxZ8ccP0QUhX0bVsg/mo/photo.jpg?sz=128", "display_name": "Lucas Boucke", "link": "https://stackoverflow.com/users/12470204/lucas-boucke"}, "edited": false, "score": 0, "creation_date": 1575321900, "post_id": 59146116, "comment_id": 104519643, "body": "@LucasBoucke Sorry, I didn&#39;t see your edit until now. The result of <code>*v.index(1)</code> is the <i>value</i> stored at that index, and that value does not require to keep the borrow of <code>v</code> alive. The result of <code>*v.index_mut(1)</code>, on the other hand, is a <i>mutable place expression</i> that could theoretically be assigned to, so it does keep the borrow alive. On the surface, it should be possible to teach the borrow checker that a place expression in value expression context can be treated as a value expression, so it&#39;s possible this will compile in some future version of Rust."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575380792, "post_id": 59146116, "comment_id": 104541241, "body": "How about an RFC to desugar this to: <code>{ let index = *Index::index(&amp;v, 1); let value = 999; *IndexMut::index_mut(&amp;mut v, index) = value; }</code>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575406858, "post_id": 59146116, "comment_id": 104554447, "body": "@FrenchBoiethios I&#39;ve got no idea how you&#39;d formalize that, and I&#39;m sure it&#39;s never gooing to fly. If you want to address this, the only way I see is by improvements to the borrow checker, e.g. making it detect that the mutable borrow can start at a later time, since it&#39;s not really needed that early. (This particular idea probably doesn&#39;t work either.)"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 16, "last_activity_date": 1586248476, "last_edit_date": 1586248476, "creation_date": 1575318112, "answer_id": 59146116, "question_id": 59145661, "link": "https://stackoverflow.com/questions/59145661/what-does-cannot-borrow-as-immutable-because-it-is-also-borrowed-as-mutable-me/59146116#59146116", "title": "What does &quot;cannot borrow as immutable because it is also borrowed as mutable&quot; mean in an nested array index?", "body": "<p>The desugared version is slightly different than what you have. The line</p>\n\n<pre><code>v[v[1]] = 999;\n</code></pre>\n\n<p>actually desugars to</p>\n\n<pre><code>*IndexMut::index_mut(&amp;mut v, *Index::index(&amp;v, 1)) = 999;\n</code></pre>\n\n<p>This results in the same error message, but the annotations give a hint as to what's happening:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `v` as immutable because it is also borrowed as mutable\n --&gt; src/main.rs:7:48\n  |\n7 |     *IndexMut::index_mut(&amp;mut v, *Index::index(&amp;v, 1)) = 999;\n  |      ------------------- ------                ^^ immutable borrow occurs here\n  |      |                   |\n  |      |                   mutable borrow occurs here\n  |      mutable borrow later used by call\n</code></pre>\n\n<p>The important difference to your desugared version is the evaluation order. The arguments of a function call are evaluated left to right in the order listed, before actually making the function call. In this case this means that first <code>&amp;mut v</code> is evaluated, mutably borrowing <code>v</code>. Next, <code>Index::index(&amp;v, 1)</code> should be evaluated, but this is not possible \u2013 <code>v</code> is already mutably borrowed. Finally, the compiler shows that the mutable reference is still needed for the function call to <code>index_mut()</code>, so the mutable reference is still alive when the shared reference is attempted.</p>\n\n<p>The version that actually compiles has a slightly different evaluation order.</p>\n\n<pre><code>*v.index_mut(*v.index(1)) = 999;\n</code></pre>\n\n<p>First, the function arguments to the method calls are evaluated left to right, i.e. <code>*v.index(1)</code> is evaluated first. This results in a <code>usize</code>, and the temporary shared borrow of <code>v</code> can be released again. Then, the receiver of <code>index_mut()</code> is evaluated, i.e. <code>v</code> is mutably borrowed. This works fine, since the shared borrow has already been finalised, and the whole expression passes the borrow checker.</p>\n\n<p>Note that the version that compiles only does so since the introduction of \"non-lexical lifetimes\". In earlier versions of Rust, the shared borrow would live until the end of the expression and result in a similar error.</p>\n\n<p>The cleanest solution in my opinion is to use a temporary variable:</p>\n\n<pre><code>let i = v[1];\nv[i] = 999;\n</code></pre>\n"}], "owner": {"reputation": 163, "user_id": 12470204, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-pXUuJ2SG7O0/AAAAAAAAAAI/AAAAAAAAAAA/ABtNlbAeS0GmNpL9tuxZ8ccP0QUhX0bVsg/mo/photo.jpg?sz=128", "display_name": "Lucas Boucke", "link": "https://stackoverflow.com/users/12470204/lucas-boucke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1712, "favorite_count": 2, "accepted_answer_id": 59146116, "answer_count": 1, "score": 16, "last_activity_date": 1586248476, "creation_date": 1575315784, "last_edit_date": 1581353364, "question_id": 59145661, "link": "https://stackoverflow.com/questions/59145661/what-does-cannot-borrow-as-immutable-because-it-is-also-borrowed-as-mutable-me", "title": "What does &quot;cannot borrow as immutable because it is also borrowed as mutable&quot; mean in an nested array index?", "body": "<p>What does the error mean in this case:</p>\n\n<pre><code>fn main() {\n    let mut v: Vec&lt;usize&gt; = vec![1, 2, 3, 4, 5];\n    v[v[1]] = 999;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `v` as immutable because it is also borrowed as mutable\n --&gt; src/main.rs:3:7\n  |\n3 |     v[v[1]] = 999;\n  |     --^----\n  |     | |\n  |     | immutable borrow occurs here\n  |     mutable borrow occurs here\n  |     mutable borrow later used here\n</code></pre>\n\n<p>I found that indexing is implemented via the <code>Index</code> and <code>IndexMut</code> traits and that <code>v[1]</code> is syntactic sugar for <code>*v.index(1)</code>. Equipped with this knowledge, I tried to run the following code:</p>\n\n<pre><code>use std::ops::{Index, IndexMut};\n\nfn main() {\n    let mut v: Vec&lt;usize&gt; = vec![1, 2, 3, 4, 5];\n    *v.index_mut(*v.index(1)) = 999;\n}\n</code></pre>\n\n<p>To my surprise, this works flawlessly! Why doesn't the first snippet work, but the second one does? The way I understand the documentation, they should be equivalent, but this obviously isn't the case.</p>\n"}, {"tags": ["types", "enums", "constructor", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575320558, "post_id": 59145518, "comment_id": 104519117, "body": "<i>to extract the value of the list if the type of the value is not known</i> And what are you going to do with it, if you don&#39;t know the type?"}, {"owner": {"reputation": 167, "user_id": 6670993, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07ec09df4f372b78690cfa98729f3330?s=128&d=identicon&r=PG&f=1", "display_name": "Sanhu Li", "link": "https://stackoverflow.com/users/6670993/sanhu-li"}, "edited": false, "score": 0, "creation_date": 1575358867, "post_id": 59145518, "comment_id": 104529285, "body": "I don&#39;t quite understand your question. So if in C++, do you know the type before you cast the value? If so, you still need code like <code>if (type == &quot;i64&quot;) {do_i64_op();} else if (type == &quot;f64&quot;) {do_f64_op();} else {do_else()}</code>, so you can def a rust function like <code>impl Entry { fn get_value(&amp;self) -&gt; Value {self.value}}</code>, and when you use it, you do <code>match value { ... } </code>"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1575358931, "creation_date": 1575358931, "answer_id": 59152263, "question_id": 59145518, "link": "https://stackoverflow.com/questions/59145518/strongly-typed-enum-as-union-in-rust-how-to-determine-type-of-value-and-retriev/59152263#59152263", "title": "Strongly typed enum as union in rust: How to determine type of value and retrieve it; How to do &quot;constructors&quot;", "body": "<p>Don't think in terms of <code>get/set</code> methods (which would be a bad idea in C++ too btw). Instead, manipulate the <code>enum</code> directly, which allows you to extract the type and value in a single step:</p>\n\n<pre><code>match entry.value {\n   Value::Int (i)   =&gt; process_int_value (i),\n   Value::Float (f) =&gt; process_float_value (f),\n   Value::Str (s)   =&gt; process_string_value (s),\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 167, "user_id": 6670993, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07ec09df4f372b78690cfa98729f3330?s=128&d=identicon&r=PG&f=1", "display_name": "Sanhu Li", "link": "https://stackoverflow.com/users/6670993/sanhu-li"}, "is_accepted": false, "score": 1, "last_activity_date": 1575362034, "last_edit_date": 1575362034, "creation_date": 1575361203, "answer_id": 59152758, "question_id": 59145518, "link": "https://stackoverflow.com/questions/59145518/strongly-typed-enum-as-union-in-rust-how-to-determine-type-of-value-and-retriev/59152758#59152758", "title": "Strongly typed enum as union in rust: How to determine type of value and retrieve it; How to do &quot;constructors&quot;", "body": "<p>Yes, like @Jmb's answer and my comment, I didn't quite sure why you need to do typecasting.</p>\n\n<p>But in case you need some common operation on all data types I would suggest to create a trait (which should be an alternative to C++ interface).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::LinkedList;\nuse std::fmt::Display;\n\n#[derive(Debug)]\nstruct Value&lt;T&gt; {\n    timestamp:i64,\n    value: T,\n}\n\ntrait Entry {\n    fn print_out(&amp;self);\n    fn get_timestamp(&amp;self) -&gt; i64;\n}\n\nimpl&lt;T: Display&gt; Entry for Value&lt;T&gt; {\n    fn print_out(&amp;self) {\n        println!(\"{}\", self.value);\n    }\n\n    fn get_timestamp(&amp;self) -&gt; i64 {\n        self.timestamp\n    }\n}\n\nstruct VersionList {\n    name: String,\n    entries: LinkedList&lt;Box&lt;dyn Entry&gt;&gt;\n}\n\nimpl VersionList {\n    pub fn new() -&gt; Self {\n        VersionList { name: \"test\".to_owned(), entries: LinkedList::&lt;Box&lt;dyn Entry&gt;&gt;::new() }\n    }\n\n    pub fn put&lt;T: Display + 'static&gt;(&amp;mut self, value: Value&lt;T&gt;) {\n        self.entries.push_back(Box::new(value));\n    }\n}\n\nfn main() {\n    let mut list = VersionList::new();\n    list.put(Value {timestamp: 3, value: \"abc\".to_owned()});\n    list.put(Value {timestamp: 1, value: 1});\n    list.put(Value {timestamp: 2, value: 1.5});\n    let iter = list.entries.iter();\n    for ent in iter {\n        ent.print_out();\n    }\n\n    println!(\"{}\", \"=\".repeat(80));\n\n    let mut vec = list.entries.iter().collect::&lt;Vec&lt;_&gt;&gt;();\n    vec.sort_by(|a, b| a.get_timestamp().cmp(&amp;b.get_timestamp()));\n    for ent in vec.iter() {\n        ent.print_out();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 9270256, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sum1N.png?s=128&g=1", "display_name": "Solipsus", "link": "https://stackoverflow.com/users/9270256/solipsus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 519, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1575362034, "creation_date": 1575315046, "question_id": 59145518, "link": "https://stackoverflow.com/questions/59145518/strongly-typed-enum-as-union-in-rust-how-to-determine-type-of-value-and-retriev", "title": "Strongly typed enum as union in rust: How to determine type of value and retrieve it; How to do &quot;constructors&quot;", "body": "<p>typed community,\nComing from C++ I'm looking for a solution to store values of different types in a struct in Rust.\nThe overall idea is to have a priority queue stored in a Hashmap and index by name of the queue, allowing to add entries and sorted by timestamp. Those entries should be able to hold a value field of a previously defined type.\nThe use case is to be able to version control the value and annotate the value through additional fields if required.</p>\n\n<p>In C++ I would do that via inheritance from a defined interface and a list which stores pointers to that struct, or through a void pointer and type indicating enum field.</p>\n\n<p>So far I found out that Rust uses a typed enum for that. My problem is how \"typecasting\" works (and as I understand there might actually be a different paradigm in Rust than in C++ in terms of memory safety, since the ways I would do it in C++ would require RTTI or type-casting).\nWhat would be the proper way to do this in Rust?</p>\n\n<p>Example:</p>\n\n<pre><code>enum Value {\n    Int(i64),\n    Float(f64),\n    Str(String),\n}\n\nstruct Entry {\n    timestamp:i64,\n    value: Value,\n}\n\nstruct VersionList {\n    name: String,\n    entries: LinkedList&lt;Entry&gt;\n}\n</code></pre>\n\n<p>The question now is what is the paradigm in Rust to extract the value of the list if the type of the value is not known.\nOne way is to create one method for each value type and have a match expression in there, returning the value with the correct type if it matches, or otherwise returning None. However, this means that always all methods would need to be called until one of them does return an actual value instead of None, which produces a lot of code.</p>\n\n<p>Example:</p>\n\n<pre><code>impl Entry {\npub fn get_i64(&amp;self) -&gt; Option&lt;i64&gt; {\n    match &amp;self.value {\n        Value::Int(i) =&gt; Some(*i),\n            _ =&gt; None\n    }\n}\n</code></pre>\n\n<p>Also, I realized that Rust has no notion of constructors. So to create the value I created a function to write to the correct field. Is there a different way of doing this in Rust?</p>\n\n<pre><code>impl Entry {\n\n    fn new_int(value: i64, timestamp: i64, user_id: String) -&gt; Entry {\n        //pub fn new(value: i64, timestamp: i64, user_id: String) -&gt; Property {\n        Entry {\n            timestamp: timestamp,\n            value: Value::Int(value),\n        }\n    }\n\n    fn new_str(value: String, timestamp: i64, user_id: String) -&gt; Entry {\n        Entry {\n            timestamp: timestamp,\n            value: Value::Str(value),\n        }\n    }\n...\n}\n</code></pre>\n\n<p>Thank you for your help.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575313654, "post_id": 59145033, "comment_id": 104516450, "body": "because sum need output type, you can add A + B and have C you are not force to have A + A =&gt; A"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1575315686, "post_id": 59145033, "comment_id": 104517234, "body": "This is a <a href=\"https://stackoverflow.com/questions/56872714/iter-sum-stops-working-as-soon-as-i-add-further-operation\">rather</a> <a href=\"https://stackoverflow.com/questions/48653052/type-must-be-known-in-this-context-when-using-iteratorsum\">frequently</a> <a href=\"https://stackoverflow.com/questions/51283403/cannot-infer-type-for-b-for-filter-map-sum\">asked</a> <a href=\"https://stackoverflow.com/questions/56123213/why-cant-the-rust-compiler-infer-the-type-when-calling-parse\">question</a>."}], "owner": {"reputation": 245138, "user_id": 2069064, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/e4V2X.jpg?s=128&g=1", "display_name": "Barry", "link": "https://stackoverflow.com/users/2069064/barry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 71, "favorite_count": 0, "closed_date": 1575316074, "answer_count": 0, "score": 0, "last_activity_date": 1575312697, "creation_date": 1575312697, "question_id": 59145033, "link": "https://stackoverflow.com/questions/59145033/type-annotation-needed-despite-having-enough-information", "closed_reason": "Duplicate", "title": "type annotation needed despite having enough information", "body": "<p>I thought I'd take the opportunity of Advent of Code to finally try to learn Rust. When I attempted to implement the solution for Day 1, I initially tried:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io::{self, BufRead};\n\nfn main() {\n    let tot = io::stdin().lock().lines()\n        .map(|l| l.unwrap())\n        .map(|s| s.parse::&lt;i32&gt;().unwrap())\n        .map(|i| i / 3 - 2)\n        .sum();\n    println!(\"{}\", tot);\n}\n</code></pre>\n\n<p>But this failed with the error:</p>\n\n<pre><code>error[E0282]: type annotations needed\n --&gt; src/main.rs:4:9\n  |\n4 |     let tot = io::stdin().lock().lines()\n  |         ^^^ consider giving `tot` a type\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Changing the declartion to <code>let tot:i32 = [...]</code> compiled and succeeded. </p>\n\n<p>But <em>why</em> do I need the type annotation there? I'm just summing a range of <code>i32</code>s, shouldn't that just give me an <code>i32</code> by default? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1575305992, "post_id": 59143418, "comment_id": 104513300, "body": "I don&#39;t think that such a type exist, but I&#39;m not sure that it is a good idea: weak vs rc allows to model an ownership relation. For example, a parent owns a child (<code>Rc&lt;Child&gt;</code>) while the child points to its owner: <code>Weak&lt;Parent&gt;</code>. Being unable to distinguish this fundamental difference can be confusing."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1575307822, "post_id": 59143817, "comment_id": 104514044, "body": "The OP&#39;s question (IIUC) is: is there such an abstraction in the std. Writing such an enum by hand can require a lot of boilerplate."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575311605, "post_id": 59143817, "comment_id": 104515626, "body": "@FrenchBoiethios std doesn&#39;t provide anything like that."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1575307298, "creation_date": 1575307298, "answer_id": 59143817, "question_id": 59143418, "link": "https://stackoverflow.com/questions/59143418/how-can-i-denote-a-field-that-can-be-either-rct-or-weakt/59143817#59143817", "title": "How can I denote a field that can be either Rc&lt;T&gt; or Weak&lt;T&gt;", "body": "<blockquote>\n  <p>Is there any idiomatic way in Rust how to do this, other than to create a custom enum?</p>\n</blockquote>\n\n<p>Just like most other \"either this or that\" choices in Rust, an <code>enum</code> <em><strong>is</strong></em> the idiomatic way.</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1575388933, "post_id": 59146311, "comment_id": 104546378, "body": "Since <code>get()</code> will always imply memory writes (increment/decrement the counter), it could be valuable to provide an in-place <code>apply(f: FnOnce(Option&lt;&amp;T&gt;) -&gt; R) -&gt; R</code> method which would not need to perform those writes in the <code>Strong</code> case. The trait bound will require <code>for&lt;&#39;a&gt;</code>."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": false, "score": 2, "last_activity_date": 1575318978, "creation_date": 1575318978, "answer_id": 59146311, "question_id": 59143418, "link": "https://stackoverflow.com/questions/59143418/how-can-i-denote-a-field-that-can-be-either-rct-or-weakt/59146311#59146311", "title": "How can I denote a field that can be either Rc&lt;T&gt; or Weak&lt;T&gt;", "body": "<p>An Peter's answer suggested, there is is no such abstraction in the stdlib. You can define a small enum to handle both cases:</p>\n\n<pre><code>use std::rc::{Rc, Weak};\n\nenum MaybeStrong&lt;T&gt; {\n    Strong(Rc&lt;T&gt;),\n    Weak(Weak&lt;T&gt;),\n}\n\nimpl&lt;T&gt; MaybeStrong&lt;T&gt; {\n    fn get(&amp;self) -&gt; Option&lt;Rc&lt;T&gt;&gt; {\n        match self {\n            MaybeStrong::Strong(t) =&gt; Some(Rc::clone(t)),\n            MaybeStrong::Weak(w) =&gt; w.upgrade(),\n        }\n    }\n}\n\nstruct Foo&lt;T&gt; {\n    bar: MaybeStrong&lt;T&gt;\n}\n\nimpl&lt;T&gt; Foo&lt;T&gt; {\n    fn from_weak(inner: Weak&lt;T&gt;) -&gt; Self {\n        Self { bar: MaybeStrong::Weak(inner) }\n    }\n\n    fn from_strong(inner: Rc&lt;T&gt;) -&gt; Self {\n        Self { bar: MaybeStrong::Strong(inner) }\n    }\n\n    fn say(&amp;self) where T: std::fmt::Debug {\n        println!(\"{:?}\", self.bar.get())\n    }\n}\n\nfn main() {\n    let inner = Rc::new(\"foo!\");\n    Foo::from_weak(Rc::downgrade(&amp;inner)).say();\n    Foo::from_strong(inner).say();\n}\n</code></pre>\n\n<p><code>self.bar()</code> will always return a <code>Some</code> if it was created from a strong pointer and return <code>None</code> in case it's a <code>Weak</code> and it's dangling. Notice that due to the fact that <code>get()</code> needs to create an owned <code>Rc</code> first, the method can't return a <code>&amp;T</code> (including <code>Option&lt;&amp;T&gt;</code>) because that <code>&amp;T</code> could be dangling. This also means that all users of <code>bar()</code> will own one strong count on the inner value while processing, making it safe to use in any case.</p>\n"}, {"comments": [{"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1575417635, "post_id": 59149386, "comment_id": 104557733, "body": "@MatthieuM. I didn&#39;t think either would be in the playgrounds list of crates - but it turns out it is. So I&#39;ve fixed up the code (was one minor bug) and linked to a complete exampled. Thanks."}], "tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": false, "score": 2, "last_activity_date": 1575417551, "last_edit_date": 1575417551, "creation_date": 1575340177, "answer_id": 59149386, "question_id": 59143418, "link": "https://stackoverflow.com/questions/59143418/how-can-i-denote-a-field-that-can-be-either-rct-or-weakt/59149386#59149386", "title": "How can I denote a field that can be either Rc&lt;T&gt; or Weak&lt;T&gt;", "body": "<p>This kind of construct is often called \"Either\" and there's a crate that looks like it can address some of the usual use-cases: <a href=\"https://docs.rs/either/1.5.3/either/\" rel=\"nofollow noreferrer\">https://docs.rs/either/1.5.3/either/</a></p>\n\n<p>Then you could write</p>\n\n<pre><code>struct Foo&lt;T&gt; {\n    bar: Either&lt;Weak&lt;T&gt;, Rc&lt;T&gt;&gt;\n}\n</code></pre>\n\n<p>Then an example function to get an <code>Option&lt;Rc&lt;T&gt;&gt;</code> might be:</p>\n\n<pre><code>impl &lt;T&gt; Foo&lt;T&gt; {\n  fn get_rc(self) -&gt; Option&lt;Rc&lt;T&gt;&gt; {\n     self.bar\n       .map_left( |weak| weak.upgrade() )\n       .map_right( |v| Some(v) )\n       .into_inner()\n  }\n}\n</code></pre>\n\n<p>Then it can be used like this:</p>\n\n<pre><code>fn main() {\n    let x = Rc::new(1);\n    let f_direct = Foo{ bar:Either::Right(x.clone()) };\n    println!(\"f_direct.get_rc() = {:?}\", f_direct.get_rc());\n    let f_weak = Foo{ bar:Either::Left(Rc::downgrade(&amp;x)) };\n    println!(\"f_weak.get_rc() = {:?}\", f_weak.get_rc());\n}\n</code></pre>\n\n<p>Link to complete example in the playground:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c20faaa46277550e16a3d3b24f3d1750\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c20faaa46277550e16a3d3b24f3d1750</a></p>\n"}], "owner": {"reputation": 33, "user_id": 11951191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/195f69ea205c8840a4645f2ae48d445a?s=128&d=identicon&r=PG&f=1", "display_name": "cripplejayb", "link": "https://stackoverflow.com/users/11951191/cripplejayb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1575417551, "creation_date": 1575305642, "question_id": 59143418, "link": "https://stackoverflow.com/questions/59143418/how-can-i-denote-a-field-that-can-be-either-rct-or-weakt", "title": "How can I denote a field that can be either Rc&lt;T&gt; or Weak&lt;T&gt;", "body": "<p>I'd like to have a field in struct like this:</p>\n\n<pre><code>struct Foo&lt;T&gt; {\n    bar: Smart&lt;T&gt;\n}\n</code></pre>\n\n<p>where bar could be either <code>Rc&lt;T</code> or <code>Weak&lt;T&gt;</code>, depending on the \"ownership relationships\" between different instances of Foo. Is there any idiomatic way in Rust how to do this, other than to create a custom enum?</p>\n"}, {"tags": ["generics", "functional-programming", "rust", "type-inference", "recursive-datastructures"], "answers": [{"comments": [{"owner": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "edited": false, "score": 0, "creation_date": 1575305109, "post_id": 59142183, "comment_id": 104512888, "body": "Thank you soy much! It works. Unfortunatelly as you say, I cannot use any map function, I&#39;ll read about GADT in Rust. I don&#39;t understand why G is equal to <code>()</code> and then you use the <code>where</code>, but I will finish the book and I hope the explanation is there. Thank you again"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "edited": false, "score": 0, "creation_date": 1575306132, "post_id": 59142183, "comment_id": 104513365, "body": "<code>new_data</code> creates an <code>Rdd</code> with dummy parameters <code>G</code> and <code>H</code>: that&#39;s why I wrote that this solution is useful only when you won&#39;t user the <code>Map</code> variant after that."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1575305113, "last_edit_date": 1575305113, "creation_date": 1575300986, "answer_id": 59142183, "question_id": 59141825, "link": "https://stackoverflow.com/questions/59141825/can-not-infer-type-of-generic-function-in-recursive-enums-in-rust/59142183#59142183", "title": "Can not infer type of generic function in recursive enums in Rust", "body": "<p>The compiler needs to know all the generic parameters since you could update the value to <code>Rdd::Map</code>, and thus it wants to know its size.</p>\n\n<p>In this situation, I would create my own constructor with dummy default generic parameters:</p>\n\n<pre><code>enum Rdd&lt;T, G = fn(&amp;T) -&gt; (), H = ()&gt;\nwhere\n    G: (Fn(&amp;T) -&gt; H),\n{\n    Data(Vec&lt;T&gt;),\n    Map(G, Box&lt;Rdd&lt;T, G, H&gt;&gt;)\n}\n\nimpl&lt;T&gt; Rdd&lt;T, fn(&amp;T), ()&gt; { // for example\n    fn new_data(data: Vec&lt;T&gt;) -&gt; Self {\n        Rdd::Data(data)\n    }\n}\n\nfn main() {\n    let mut v1: Vec&lt;u32&gt; = vec![1, 2, 3, 4, 5, 6];\n    let rdd_1 = Rdd::new_data(v1);\n}\n</code></pre>\n\n<p>Note that you cannot update your <code>rdd_1</code> with any <code>Map</code> you want.</p>\n"}], "owner": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "accepted_answer_id": 59142183, "answer_count": 1, "score": 1, "last_activity_date": 1575305113, "creation_date": 1575299794, "last_edit_date": 1575300736, "question_id": 59141825, "link": "https://stackoverflow.com/questions/59141825/can-not-infer-type-of-generic-function-in-recursive-enums-in-rust", "title": "Can not infer type of generic function in recursive enums in Rust", "body": "<p>I'm working with recursive enums in Rust. I have the following code:</p>\n\n<pre><code>enum Rdd&lt;T, G, H&gt;\nwhere\n    G: (Fn(&amp;T) -&gt; H),\n{\n    Data(Vec&lt;T&gt;),\n    Map(G, Box&lt;Rdd&lt;T, G, H&gt;&gt;)\n}\n\nfn main() {\n    let mut v1: Vec&lt;u32&gt; = vec![1, 2, 3, 4, 5, 6];\n    let rdd_1 = Rdd::Data(v1); // It does not work\n}\n</code></pre>\n\n<p>When I try to compile It throws:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>let rdd_1 = Rdd::Data(v1); // It does not work\n^^^^^^^^^ cannot infer type for `G`\n\nconsider giving `rdd_1` the explicit type `Rdd&lt;u32, G, H&gt;`, where the type parameter `G` is specified\n</code></pre>\n\n<p>Why should I provide a type for <code>G</code> parameter as It's not needed for the <code>Rdd::Data</code> enum? How could I solve this problem?</p>\n\n<p>Thanks in advance</p>\n"}, {"tags": ["generics", "rust"], "answers": [{"tags": [], "owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "is_accepted": false, "score": 3, "last_activity_date": 1575300000, "creation_date": 1575300000, "answer_id": 59141885, "question_id": 59140724, "link": "https://stackoverflow.com/questions/59140724/what-is-the-difference-between-traitt-and-traitt/59141885#59141885", "title": "What is the difference between Trait::&lt;T&gt; and &lt;Trait&lt;T&gt;&gt;?", "body": "<p><code>SomeTrait::&lt;T&gt;::method()</code> and <code>&lt;SomeTrait&lt;T&gt;&gt;::method()</code> are the same thing in Rust.</p>\n\n<p>Just a style choice.</p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 5, "last_activity_date": 1575300286, "creation_date": 1575300286, "answer_id": 59141986, "question_id": 59140724, "link": "https://stackoverflow.com/questions/59140724/what-is-the-difference-between-traitt-and-traitt/59141986#59141986", "title": "What is the difference between Trait::&lt;T&gt; and &lt;Trait&lt;T&gt;&gt;?", "body": "<p>The C++ syntax cannot be used because it is an ambiguous syntax in Rust: in <code>SomeTrait&lt;T&gt;::method()</code>, is the first <code>&lt;</code> a lesser-than operator, or the beginning of a generic parameters list?</p>\n\n<p>The two methods you refer to are used to disambiguate this:</p>\n\n<ul>\n<li><code>&lt;SomeTrait&lt;T&gt;&gt;</code> is called the <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html#fully-qualified-syntax-for-disambiguation-calling-methods-with-the-same-name\" rel=\"noreferrer\">fully qualified syntax</a></li>\n<li><code>SomeTrait::&lt;T&gt;</code> is called the turbofish notation (unofficial name).</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1575390577, "creation_date": 1575390577, "answer_id": 59161449, "question_id": 59140724, "link": "https://stackoverflow.com/questions/59140724/what-is-the-difference-between-traitt-and-traitt/59161449#59161449", "title": "What is the difference between Trait::&lt;T&gt; and &lt;Trait&lt;T&gt;&gt;?", "body": "<h3>The C++ syntax is ambiguous</h3>\n\n<p>One of the greatest challenge in parsing C++ is the ability to distinguish the use of <code>&lt;</code> as either the less-than operator or the beginning of a template-parameter list.</p>\n\n<p>Most of the times, the compiler hides the complexity from you by \"cheating\", with the C++ parser performing symbol look-up to identify whether whatever is on the left of <code>&lt;</code> is a template struct/method or not.</p>\n\n<p>And in some cases this complexity surfaces up; in templates, where the kind of a symbol is unclear, the <code>template</code> keyword must be used to distinguish:</p>\n\n<pre><code>foo.template get&lt;T&gt;()\n</code></pre>\n\n<h3>Rust syntax leans toward LL(1)</h3>\n\n<p>With the benefit of hindsight, this is one hack that the Rust developers were very keen to avoid.</p>\n\n<p>Therefore, the same expression in Rust will read: <code>foo.get::&lt;T&gt;()</code>.</p>\n\n<p>And for consistency, the same syntax is applied to types <code>Foo::&lt;T&gt;::method()</code>.</p>\n"}], "owner": {"reputation": 18513, "user_id": 36537, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/05e8bace9f460f632af6b699a80408e9?s=128&d=identicon&r=PG", "display_name": "Phil H", "link": "https://stackoverflow.com/users/36537/phil-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 1, "accepted_answer_id": 59141986, "answer_count": 3, "score": 5, "last_activity_date": 1575390577, "creation_date": 1575296075, "last_edit_date": 1575298080, "question_id": 59140724, "link": "https://stackoverflow.com/questions/59140724/what-is-the-difference-between-traitt-and-traitt", "title": "What is the difference between Trait::&lt;T&gt; and &lt;Trait&lt;T&gt;&gt;?", "body": "<p>I have a type whose method I can access through</p>\n\n<pre><code>SomeTrait::&lt;T&gt;::method()\n</code></pre>\n\n<p>But I don't understand the difference between that and</p>\n\n<pre><code>&lt;SomeTrait&lt;T&gt;&gt;::method()\n</code></pre>\n\n<p>In C++ I would expect this:</p>\n\n<pre><code>SomeTrait&lt;T&gt;::method()\n</code></pre>\n\n<p>Are these two different? They both seem to be calling the <code>&lt;T&gt;</code> specialisation of <code>method</code> on <code>SomeTrait</code>.</p>\n"}, {"tags": ["visual-studio-code", "rust"], "answers": [{"tags": [], "owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "is_accepted": true, "score": 3, "last_activity_date": 1575279019, "creation_date": 1575279019, "answer_id": 59135947, "question_id": 59135678, "link": "https://stackoverflow.com/questions/59135678/complete-rust-plugin-install-for-vs-code-via-command-line/59135947#59135947", "title": "Complete Rust plugin install for VS Code via command line", "body": "<p>RLS is not a VSCode extension. You can install it via <code>rustup</code> (I'd say before installing VSCode extension): <code>rustup component add rls rust-analysis rust-src</code></p>\n\n<p>More on RLS <a href=\"https://github.com/rust-lang/rls\" rel=\"nofollow noreferrer\">here</a></p>\n"}], "owner": {"reputation": 9560, "user_id": 2023370, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4840a671d94ce5df0818cce059cab62b?s=128&d=identicon&r=PG&f=1", "display_name": "user2023370", "link": "https://stackoverflow.com/users/2023370/user2023370"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "accepted_answer_id": 59135947, "answer_count": 1, "score": 2, "last_activity_date": 1575286880, "creation_date": 1575277956, "last_edit_date": 1575286880, "question_id": 59135678, "link": "https://stackoverflow.com/questions/59135678/complete-rust-plugin-install-for-vs-code-via-command-line", "title": "Complete Rust plugin install for VS Code via command line", "body": "<p>I'd like for my students to program Rust from within VS Code under Windows 10. I hope to provide the IT department with a set of scriptable commands to set this up on each machine.</p>\n\n<p>I have installed Rustup. I also execute the following to install the \"Rust (rls)\" plugin:</p>\n\n<pre><code>code --install-extension rust-lang.rust\n</code></pre>\n\n<p>When I then open VS Code, I receive a popup message at the bottom right:</p>\n\n<pre><code>RLS not installed. Install?\n</code></pre>\n\n<p>If I select \"Yes\" everything goes well. What I would prefer, is for this step to have been completed earlier via the command line (as above with <code>--install-extension</code>). Is this possible? Am I missing another extension? Can this be installed via the command line?</p>\n"}, {"tags": ["generics", "multidimensional-array", "rust", "operator-overloading"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575258124, "post_id": 59132240, "comment_id": 104492652, "body": "one thing is always wonderful is when you click on a link and it&#39;s working, so I click on the doc link, hopefully to understand better the problem and here my surprise when I don&#39;t find anywhere any lines that are a little close to what you copy. so here a <a href=\"https://www.youtube.com/watch?v=oHg5SJYRHA0\" rel=\"nofollow noreferrer\">link</a> to the solution"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575258473, "post_id": 59132240, "comment_id": 104492713, "body": "on a more serious comment try to add: <code>for&lt;&#39;a&gt; &amp;&#39;a ArrayBase&lt;T, D&gt;: Mul&lt;Output=ArrayBase&lt;T, D&gt;&gt;,</code> in your <code>where</code> clause and do <code>array: &amp;self.array * &amp;other.array,</code>"}, {"owner": {"reputation": 2389, "user_id": 9453926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3faa500658bbb2d2e88c5463a75c32e1?s=128&d=identicon&r=PG&f=1", "display_name": "politinsa", "link": "https://stackoverflow.com/users/9453926/politinsa"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575290861, "post_id": 59132240, "comment_id": 104505313, "body": "I could&#39;t put an anchor to the #div section cause I don&#39;t find thr Div operator for ArrayBase on ArrayBase..."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575310424, "post_id": 59132240, "comment_id": 104515116, "body": "<a href=\"https://docs.rs/ndarray/0.13.0/ndarray/struct.ArrayBase.html#impl-Div%3CB%3E\" rel=\"nofollow noreferrer\">docs.rs/ndarray/0.13.0/ndarray/&hellip;</a> ? still didn&#39;t find the code of your example and now you talk about div but in your question you talk about mul you making less and less sense"}, {"owner": {"reputation": 2389, "user_id": 9453926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3faa500658bbb2d2e88c5463a75c32e1?s=128&d=identicon&r=PG&f=1", "display_name": "politinsa", "link": "https://stackoverflow.com/users/9453926/politinsa"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575312014, "post_id": 59132240, "comment_id": 104515809, "body": "Sorry about this, I&#39;m trying both mul and div so the problem is strictly the same and I mingled them for my comment. Could you please provide a complete answer so I could accept it?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575312373, "post_id": 59132240, "comment_id": 104515962, "body": "feel free to make your own answer ^^"}], "owner": {"reputation": 2389, "user_id": 9453926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3faa500658bbb2d2e88c5463a75c32e1?s=128&d=identicon&r=PG&f=1", "display_name": "politinsa", "link": "https://stackoverflow.com/users/9453926/politinsa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 83, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1575323332, "creation_date": 1575256648, "last_edit_date": 1575323332, "question_id": 59132240, "link": "https://stackoverflow.com/questions/59132240/operator-overloading-on-struct-with-generic-type-fields-ndarray", "title": "Operator overloading on struct with generic type fields (ndarray)", "body": "<p>I'm trying to make my struct encapsulating the <code>ArrayBase</code> struct of the <a href=\"https://crates.io/crates/ndarray\" rel=\"nofollow noreferrer\">ndarray</a> crate.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Mul;\nextern crate ndarray;\nuse ndarray::{ArrayBase, RawData};\n\npub struct MyArr&lt;T, D&gt;\nwhere\n    T: RawData,\n{\n    array: ArrayBase&lt;T, D&gt;,\n}\n\nimpl&lt;T, D&gt; Mul&lt;&amp;MyArr&lt;T, D&gt;&gt; for &amp;MyArr&lt;T, D&gt;\nwhere\n    T: RawData,\n{\n    type Output = MyArr&lt;T, D&gt;;\n\n    fn mul(self, other: &amp;MyArr&lt;T, D&gt;) -&gt; MyArr&lt;T, D&gt; {\n        MyArr {\n            array: self.array * other.array,\n        }\n    }\n}\n\n</code></pre>\n\n<p>But the compiler tells me </p>\n\n<pre><code>error[E0369]: binary operation `*` cannot be applied to type `my_crate::ndarray::ArrayBase&lt;T, D&gt;`  \n   |\n82 |             array: self.array * other.array,\n   |                    ---------- ^ ----------- my_crate::ndarray::ArrayBase&lt;T, D&gt;\n   |                    |\n   |                    my_crate::ndarray::ArrayBase&lt;T, D&gt;\n   |\n   = note: an implementation of `std::ops::Mul` might be missing for `my_crate::ndarray::ArrayBase&lt;T, D&gt;`\n</code></pre>\n\n<p>However, according to the doc and to my experiment, <code>ArrayBase</code> operator <code>*</code> <strong>is overloaded</strong>:  </p>\n\n<pre><code>let a: ArrayBase&lt;_, _&gt; = Array::linspace(1.0, 10.0, 10);\nlet b: ArrayBase&lt;_, _&gt; = Array::linspace(1.0, 10.0, 10);\nprintln!(\"{}\", a * b);\n// Compilation succeed and it prints [1.0, 4.0, ..., 100.0]\n</code></pre>\n\n<p>I couldn't find in <a href=\"https://docs.rs/ndarray/0.13.0/ndarray/struct.ArrayBase.html\" rel=\"nofollow noreferrer\">the doc</a> the\n<code>Mul&lt;ArrayBase&gt; for ArrayBase</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575247530, "post_id": 59131291, "comment_id": 104490772, "body": "1. this is not idiomatic rust 2. the compiler tell you why 3.you need to use a <code>usize</code> to index a vector"}, {"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575248646, "post_id": 59131291, "comment_id": 104490936, "body": "@Stargateur, I understand the error message, but didn&#39;t know how to put it in code. could you help, please."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1575249449, "post_id": 59131291, "comment_id": 104491071, "body": "Is there any reason you&#39;re not doing a <code>for</code> loop? <code>for s in &amp;v { print!(&quot;{}&quot;, s); }</code>"}, {"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1575252148, "post_id": 59131291, "comment_id": 104491529, "body": "@loganfsmyth I have cut down my code to make it simple to post it here. I have a for loop with enumerate inside this loop. If I use a for loop like the way you mentioned how do I make the outercount variable step to the next element in the vector?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1575253823, "post_id": 59131291, "comment_id": 104491801, "body": "Sorry, I don&#39;t understand what structure you&#39;re describing."}, {"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "edited": false, "score": 0, "creation_date": 1575255029, "post_id": 59131291, "comment_id": 104492035, "body": "Totally fine loganfsmyth, The below answer worked. Thanks to Psidom."}], "answers": [{"tags": [], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "is_accepted": true, "score": 2, "last_activity_date": 1575249774, "creation_date": 1575249774, "answer_id": 59131537, "question_id": 59131291, "link": "https://stackoverflow.com/questions/59131291/having-trouble-accessing-elements-of-a-vector-inside-loop/59131537#59131537", "title": "Having trouble accessing elements of a vector inside loop", "body": "<p>As the error message suggests, index needs to be <code>usize</code> instead of <code>i32</code>:</p>\n\n<pre><code>let v = vec![1,4,2,4,1,8];\nlet mut outercount: usize = 0;    // declare outercount as usize instead of i32\nloop {\n    let s = v[outercount];        // need to declare variable here\n    println!(\"{}\", s);\n    outercount += 1;\n    if outercount == v.len() { break; }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1575292356, "post_id": 59135536, "comment_id": 104506056, "body": "I would prefer <code>for n in &amp;v { println!(&quot;{}&quot;, n); }</code>. It is more readily understood and equally idiomatic."}, {"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "edited": false, "score": 0, "creation_date": 1575331454, "post_id": 59135536, "comment_id": 104522460, "body": "Thanks @matiu , all your answers they do really help. Appreciate it."}, {"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575331494, "post_id": 59135536, "comment_id": 104522470, "body": "Thanks @trentcl. Learned about a few ways to implement the same logic."}], "tags": [], "owner": {"reputation": 6434, "user_id": 602340, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/c813559e4994a45eb8eedca722399fa0?s=128&d=identicon&r=PG", "display_name": "matiu", "link": "https://stackoverflow.com/users/602340/matiu"}, "is_accepted": false, "score": 3, "last_activity_date": 1575277498, "creation_date": 1575277498, "answer_id": 59135536, "question_id": 59131291, "link": "https://stackoverflow.com/questions/59131291/having-trouble-accessing-elements-of-a-vector-inside-loop/59135536#59135536", "title": "Having trouble accessing elements of a vector inside loop", "body": "<p>I know this may not actually help your code @Sumchans, but I'm compelled to write a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4243a28662453ca53c1c40344ebe26b4\" rel=\"nofollow noreferrer\">more idiomatic</a> version. I hope that it helps someone:</p>\n\n<pre><code>fn main() {\n   let v = vec![1,4,2,4,1,8];\n   v.iter().for_each(|n| println!(\"{}\", n));\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "edited": false, "score": 0, "creation_date": 1575419685, "post_id": 59164385, "comment_id": 104558170, "body": "This would definitely help.  Thanks @Taimoor."}, {"owner": {"reputation": 29, "user_id": 12393165, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBJIMdkncGW-8SH_F7rJk9VmmMRkJpYzw2sXuIJwQ=k-s128", "display_name": "Taimoor", "link": "https://stackoverflow.com/users/12393165/taimoor"}, "reply_to_user": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "edited": false, "score": 0, "creation_date": 1575431115, "post_id": 59164385, "comment_id": 104560576, "body": "Its  always pleasure to help fellow developers."}], "tags": [], "owner": {"reputation": 29, "user_id": 12393165, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBJIMdkncGW-8SH_F7rJk9VmmMRkJpYzw2sXuIJwQ=k-s128", "display_name": "Taimoor", "link": "https://stackoverflow.com/users/12393165/taimoor"}, "is_accepted": false, "score": 1, "last_activity_date": 1575405514, "last_edit_date": 1575405514, "creation_date": 1575402708, "answer_id": 59164385, "question_id": 59131291, "link": "https://stackoverflow.com/questions/59131291/having-trouble-accessing-elements-of-a-vector-inside-loop/59164385#59164385", "title": "Having trouble accessing elements of a vector inside loop", "body": "<p>I faced the similar problem few days ago but in a different manner when I was trying to make my bubble sort program in rust. I hope you got your answer as I can see. I think the way you wanted to print a vector is syntactically incorrect, here is an example of printing a vector in a loop. Hope this would help you.</p>\n\n<pre><code>fn main(){\nlet v = vec![1,3,5,7,9]; \nfor i in v.iter(){ //also for i in &amp;v \n  println!(\"{:?}\",i);\n }\n}\n</code></pre>\n\n<p>Also you can use </p>\n\n<pre><code>let outercount = v[0]; //rust will automatically infer this as [i32]\n</code></pre>\n"}], "owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 59131537, "answer_count": 3, "score": 0, "last_activity_date": 1575405514, "creation_date": 1575246738, "last_edit_date": 1575272063, "question_id": 59131291, "link": "https://stackoverflow.com/questions/59131291/having-trouble-accessing-elements-of-a-vector-inside-loop", "title": "Having trouble accessing elements of a vector inside loop", "body": "<p>I am trying to print the elements of a vector through the println! inside a loop.</p>\n\n<p>This is the error I get, cant figure out what I am doing wrong. Please advise!</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the type `[i32]` cannot be indexed by `i32`\n   |\n21 |         s = v[outercount];\n   |             ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `std::slice::SliceIndex&lt;[i32]&gt;` is not implemented for `i32`\n   = note: required because of the requirements on the impl of `std::ops::Index&lt;i32&gt;` for `std::vec::Vec&lt;i32&gt;`\n</code></pre>\n\n<pre><code>let v = vec![1,4,2,4,1,8];\nlet mut outercount:i32 = 0;\nloop {\n    outercount += 1;\n    s = v[outercount];\n    println!(\"{}\", s);\n    if outercount == (v.len() - 1) as i32 { break; }\n}\n</code></pre>\n"}, {"tags": ["windows", "rust", "backtrace"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1575272261, "post_id": 59131262, "comment_id": 104496395, "body": "Note that according to the message, you have two panics: one in your code, then one in the standard library when it tries to handle the first one \u2192 this second panic is probably the reason why you can&#39;t get a backtrace."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1575272376, "post_id": 59131262, "comment_id": 104496450, "body": "What hardware are you using? Does a simple &quot;hello world&quot; (e.g. <code>cargo new foo; cd foo; cargo run</code>) work?"}, {"owner": {"reputation": 83, "user_id": 5157811, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/--PKWgahSWNg/AAAAAAAAAAI/AAAAAAAAAGc/R67XuC9gONE/photo.jpg?sz=128", "display_name": "LeBorgne", "link": "https://stackoverflow.com/users/5157811/leborgne"}, "edited": false, "score": 2, "creation_date": 1582311380, "post_id": 59131262, "comment_id": 106747136, "body": "Just in case: if you are using bash, you can use: <code>export RUST_BACKTRACE=1</code>. According to <a href=\"https://www.reddit.com/r/rust/comments/7h24y5/how_do_i_run_cargo_test_with_rust_backtrace1_on/\" rel=\"nofollow noreferrer\">this reddit comment</a>, if you&#39;re using cmd, it&#39;s: <code>set RUST_BACKTRACE=1</code>; if you&#39;re using powershell, it&#39;s <code>$Env:RUST_BACKTRACE=1</code>"}, {"owner": {"reputation": 604, "user_id": 540761, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0afdadc2029bb39daa3e49d90fcabe52?s=128&d=identicon&r=PG", "display_name": "synek317", "link": "https://stackoverflow.com/users/540761/synek317"}, "reply_to_user": {"reputation": 83, "user_id": 5157811, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/--PKWgahSWNg/AAAAAAAAAAI/AAAAAAAAAGc/R67XuC9gONE/photo.jpg?sz=128", "display_name": "LeBorgne", "link": "https://stackoverflow.com/users/5157811/leborgne"}, "edited": false, "score": 0, "creation_date": 1616002127, "post_id": 59131262, "comment_id": 117869312, "body": "@LeBorgne please note that in the link you provided, the OP&#39;s question says &quot;and just using set RUST_BACKTRACE=1 does not help&quot;"}], "answers": [{"tags": [], "owner": {"reputation": 567, "user_id": 1111660, "user_type": "registered", "profile_image": "https://graph.facebook.com/824556066/picture?type=large", "display_name": "Dante", "link": "https://stackoverflow.com/users/1111660/dante"}, "is_accepted": false, "score": 0, "last_activity_date": 1582505291, "creation_date": 1582505291, "answer_id": 60368319, "question_id": 59131262, "link": "https://stackoverflow.com/questions/59131262/rust-backtrace-on-windows/60368319#60368319", "title": "Rust Backtrace on windows?", "body": "<p>Thank you for those attempting to help.</p>\n\n<p>A colleague of mine was able to tackle down the panic issues.</p>\n\n<p>Regarding backtrace, it was solved by changing the toolchain to <code>...-windows-gnu</code></p>\n"}], "owner": {"reputation": 567, "user_id": 1111660, "user_type": "registered", "profile_image": "https://graph.facebook.com/824556066/picture?type=large", "display_name": "Dante", "link": "https://stackoverflow.com/users/1111660/dante"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1766, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1582505291, "creation_date": 1575246444, "question_id": 59131262, "link": "https://stackoverflow.com/questions/59131262/rust-backtrace-on-windows", "title": "Rust Backtrace on windows?", "body": "<p>I am trying to run my project <a href=\"https://github.com/comit-network/create-comit-app/\" rel=\"nofollow noreferrer\">https://github.com/comit-network/create-comit-app/</a> (master branch) on windows (I usually code on unix systems).</p>\n\n<p>It panics but I am not able to get a backtrace despite settings <code>RUST_BACKTRACE=1</code> or even <code>RUST_BACKTRACE=full</code>.</p>\n\n<p>I am compiling and running on the same machine. </p>\n\n<p>Here is what I get:</p>\n\n<pre><code>C:/Users/dante/.cargo/bin/cargo.exe run --color=always --package create-comit-app --bin create-comit-app --no-default-features -- start-env\n   Compiling create-comit-app v0.5.0 (C:\\Users\\dante\\src\\create-comit-app)\n    Finished dev [unoptimized + debuginfo] target(s) in 25.36s\n     Running `target\\debug\\create-comit-app.exe start-env`\nPanic received, cleaning up...Panic received, cleaning up...thread panicked while processing panic. aborting.\nerror: process didn't exit successfully: `target\\debug\\create-comit-app.exe start-env` (exit code: 0xc000001d, STATUS_ILLEGAL_INSTRUCTION)\n\nProcess finished with exit code -1073741795 (0xC000001D)\n</code></pre>\n\n<p>After some research it seems that it should be possible to get a BACKTRACE on windows?</p>\n\n<p>I am coding and running on the same machine:</p>\n\n<pre><code>Rust: 1.39.0\n&gt;rustc --version\nrustc 1.39.0 (4560ea788 2019-11-04)\n&gt;rustup toolchain list\nstable-x86_64-pc-windows-msvc (default)\nnightly-2019-04-30-x86_64-pc-windows-msvc\n1.35.0-x86_64-pc-windows-msvc\n1.37.0-x86_64-pc-windows-msvc\n1.38.0-x86_64-pc-windows-msvc\n1.39.0-x86_64-pc-windows-msvc\n</code></pre>\n\n<p>Also it looks like I cannot debug with <code>-msvc</code> toolchain and can only debug with <code>-gnu</code>. Trying to install the gnu chain now.</p>\n\n<p>Anyone with windows experience in Rust? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1575262298, "post_id": 59130942, "comment_id": 104493460, "body": "A <code>if let Err(e) = test1() { return Err(e);}</code> will work."}, {"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1575263562, "post_id": 59130942, "comment_id": 104493716, "body": "It seems that upcasting trait objects is a problem, see <a href=\"https://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting\" title=\"why doesnt rust support trait object upcasting\">stackoverflow.com/questions/28632968/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 2880, "user_id": 1658328, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/ad0dd54bf3ca15b434e10db088fb2bc6?s=128&d=identicon&r=PG", "display_name": "peku33", "link": "https://stackoverflow.com/users/1658328/peku33"}, "is_accepted": false, "score": 0, "last_activity_date": 1575381345, "creation_date": 1575381345, "answer_id": 59158723, "question_id": 59130942, "link": "https://stackoverflow.com/questions/59130942/how-to-convert-boxdyn-error-sync-send-to-boxdyn-error/59158723#59158723", "title": "How to convert Box&lt;dyn Error + Sync + Send&gt; to Box&lt;dyn Error&gt;", "body": "<p>The question how to convert between those two types is still open.</p>\n\n<p>For now I switched to <a href=\"https://crates.io/crates/failure\" rel=\"nofollow noreferrer\">https://crates.io/crates/failure</a> crate for error handling in which <code>Error</code> type replaces <code>Box&lt;dyn Error + Sync + Send&gt;</code>, also making it easy to create custom and string (even formatted) errors.</p>\n"}], "owner": {"reputation": 2880, "user_id": 1658328, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/ad0dd54bf3ca15b434e10db088fb2bc6?s=128&d=identicon&r=PG", "display_name": "peku33", "link": "https://stackoverflow.com/users/1658328/peku33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1267, "favorite_count": 2, "answer_count": 1, "score": 6, "last_activity_date": 1575381345, "creation_date": 1575242680, "question_id": 59130942, "link": "https://stackoverflow.com/questions/59130942/how-to-convert-boxdyn-error-sync-send-to-boxdyn-error", "title": "How to convert Box&lt;dyn Error + Sync + Send&gt; to Box&lt;dyn Error&gt;", "body": "<p>In my program some actions are performed on secondary thread and their results: <code>Result&lt;(), Box&lt;dyn Error&gt;&gt;</code> are sent back to primary thread. This is pretty reasonable for errors to have <code>Send</code> requirement, so the actual type is <code>Result&lt;(), Box&lt;dyn Error + Send&gt;&gt;</code>. I also added <code>Sync</code> to be able to use <code>Box</code> <code>from</code> method (which is implemented for plain or Sync + Send only). But after result is settled on single thread I want to drop this requirement.</p>\n\n<p>Example:</p>\n\n<pre><code>use std::error::Error;\n\nfn test1() -&gt; Result&lt;(), Box&lt;dyn Error + Sync + Send&gt;&gt; {\n    return Err(\"test1\".into());\n}\nfn test2() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    test1()?;\n    return Ok(());\n}\nfn main() {\n    let test2_result = test2();\n    println!(\"test2_result: {:#?}\", test2_result);\n}\n</code></pre>\n\n<p>In the end I actually end with:</p>\n\n<pre><code>   Compiling playground v0.0.1 (/playground)\nerror[E0277]: the size for values of type `dyn std::error::Error + std::marker::Send + std::marker::Sync` cannot be known at compilation time\n --&gt; src/main.rs:7:12\n  |\n7 |     test1()?;\n  |            ^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `dyn std::error::Error + std::marker::Send + std::marker::Sync`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = note: required because of the requirements on the impl of `std::error::Error` for `std::boxed::Box&lt;dyn std::error::Error + std::marker::Send + std::marker::Sync&gt;`\n  = note: required because of the requirements on the impl of `std::convert::From&lt;std::boxed::Box&lt;dyn std::error::Error + std::marker::Send + std::marker::Sync&gt;&gt;` for `std::boxed::Box&lt;dyn std::error::Error&gt;`\n  = note: required by `std::convert::From::from`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `playground`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>It seems those types are not compatible.</p>\n\n<p>So how can I convert (for example in <code>test2</code>) <code>Result&lt;(), Box&lt;dyn Error + Send&gt;&gt;</code> to <code>Result&lt;(), Box&lt;dyn Error&gt;&gt;</code>?</p>\n\n<p>I know this can be done by creating a wrapper, but I don't want to add next level of indirection.</p>\n"}, {"tags": ["types", "rust", "petgraph"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1575229879, "creation_date": 1575229879, "answer_id": 59129362, "question_id": 59129150, "link": "https://stackoverflow.com/questions/59129150/in-rust-what-types-are-included-in-a-types-namespace/59129362#59129362", "title": "In rust; what types are included in a type&#39;s Namespace?", "body": "<p><code>astar</code> has a bound <code>G: IntoEdges + Visitable</code> where <code>Visitable</code> is defined as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Visitable: GraphBase { \u2026 }\n</code></pre>\n\n<p>and <code>GraphBase</code> is defined as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait GraphBase {\n    type EdgeId: Copy + PartialEq;\n    type NodeId: Copy + PartialEq;\n}\n</code></pre>\n\n<p>This is what allows <code>astar</code> to use <code>G::NodeId</code>. Essentially you have this:</p>\n\n<pre><code>struct Graph;\n\ntrait GraphBase {\n    type Type;\n}\n\ntrait Visitable: GraphBase {}\n\nimpl GraphBase for Graph {\n    type Type = u8;\n}\n\nimpl Visitable for Graph {}\n\nfn foo&lt;G: Visitable&gt;(_: G, _: G::Type) {}\n\nfn main() {\n    foo(Graph, 42);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=737d67ca87953469d7a28f6106649e89\" rel=\"nofollow noreferrer\">Permalink to the playground</a>)</p>\n"}], "owner": {"reputation": 2304, "user_id": 2126889, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/ZLkKF.jpg?s=128&g=1", "display_name": "timthelion", "link": "https://stackoverflow.com/users/2126889/timthelion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 59129362, "answer_count": 1, "score": 2, "last_activity_date": 1580252338, "creation_date": 1575228525, "last_edit_date": 1580252338, "question_id": 59129150, "link": "https://stackoverflow.com/questions/59129150/in-rust-what-types-are-included-in-a-types-namespace", "title": "In rust; what types are included in a type&#39;s Namespace?", "body": "<p>I'm studying the source to the <a href=\"https://github.com/petgraph/petgraph\" rel=\"nofollow noreferrer\">petgraph</a> library, and I cannot find out where the type <code>Graph::NodeId</code> comes from.</p>\n\n<p>I can see that the function <a href=\"https://docs.rs/petgraph/0.4.13/petgraph/algo/fn.astar.html\" rel=\"nofollow noreferrer\"><code>astar</code></a> accepts a type <code>G</code> (which can be a <a href=\"https://docs.rs/petgraph/0.4.13/petgraph/graph/struct.Graph.html\" rel=\"nofollow noreferrer\"><code>Graph</code></a>). <code>astar</code> expects there to be a type <code>NodeId</code> in <code>G</code>'s namespace.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn astar&lt;G, F, H, K, IsGoal&gt;(\n    graph: G, \n    start: G::NodeId, \n    is_goal: IsGoal, \n    edge_cost: F, \n    estimate_cost: H\n) -&gt; Option&lt;(K, Vec&lt;G::NodeId&gt;)&gt; where\n    G: IntoEdges + Visitable,\n    IsGoal: FnMut(G::NodeId) -&gt; bool,\n    G::NodeId: Eq + Hash,\n    F: FnMut(G::EdgeRef) -&gt; K,\n    H: FnMut(G::NodeId) -&gt; K,\n    K: Measure + Copy, \n</code></pre>\n\n<p>I can see that <a href=\"https://docs.rs/petgraph/0.4.13/src/petgraph/graph_impl/mod.rs.html#325-329\" rel=\"nofollow noreferrer\"><code>Graph</code></a> is defined as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Graph&lt;N, E, Ty = Directed, Ix = DefaultIx&gt; {\n    nodes: Vec&lt;Node&lt;N, Ix&gt;&gt;,\n    edges: Vec&lt;Edge&lt;E, Ix&gt;&gt;,\n    ty: PhantomData&lt;Ty&gt;,\n}\n</code></pre>\n\n<p>I don't however, see where the type <code>NodeId</code> comes from. The only place I see it defined in the source code is in the trait implementation <a href=\"https://docs.rs/petgraph/0.4.13/src/petgraph/graph_impl/mod.rs.html#1962\" rel=\"nofollow noreferrer\"><code>EdgeRef for EdgeReference</code></a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a, Ix, E&gt; EdgeRef for EdgeReference&lt;'a, E, Ix&gt;\n    where Ix: IndexType,\n{\n    type NodeId = NodeIndex&lt;Ix&gt;;\n    type EdgeId = EdgeIndex&lt;Ix&gt;;\n    type Weight = E;\n\n    fn source(&amp;self) -&gt; Self::NodeId { self.node[0] }\n    fn target(&amp;self) -&gt; Self::NodeId { self.node[1] }\n    fn weight(&amp;self) -&gt; &amp;E { self.weight }\n    fn id(&amp;self) -&gt; Self::EdgeId { self.index }\n}\n</code></pre>\n\n<p>But I don't understand how that type would get into scope under <code>Graph</code>.</p>\n"}, {"tags": ["io", "rust", "embedded", "rust-no-std"], "comments": [{"owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "edited": false, "score": 0, "creation_date": 1575278949, "post_id": 59127668, "comment_id": 104499146, "body": "Async requires some sort of runtime. In std environments, that runtime can be made &#39;easily&#39; with the std libraries. no_std however is not as unified as it can mean all the different microcontrollers, microprocessors, OS&#39;s as well as webassembly. So it really depends on what you actually want to support."}, {"owner": {"reputation": 25156, "user_id": 230461, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/202ecb437d8bbd442d093a3a35c67a04?s=128&d=identicon&r=PG", "display_name": "dflemstr", "link": "https://stackoverflow.com/users/230461/dflemstr"}, "reply_to_user": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "edited": false, "score": 0, "creation_date": 1575398769, "post_id": 59127668, "comment_id": 104551098, "body": "@Geoxion I&#39;m assuming that it should be possible to implement some sort of <code>AsyncWrite</code> API that is not tied to a specific executor.  For executors it already seems like there are a few good examples (e.g. for cortex-m, droneos and embrio)"}, {"owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "edited": false, "score": 1, "creation_date": 1575410549, "post_id": 59127668, "comment_id": 104555862, "body": "Cortex-m isn&#39;t really an executor... But I see what you mean. What you could do is use the future trait. Then any executor that supports async await will be compatible with it. The standard future trait is also available for libcore"}, {"owner": {"reputation": 25156, "user_id": 230461, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/202ecb437d8bbd442d093a3a35c67a04?s=128&d=identicon&r=PG", "display_name": "dflemstr", "link": "https://stackoverflow.com/users/230461/dflemstr"}, "reply_to_user": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "edited": false, "score": 0, "creation_date": 1576268403, "post_id": 59127668, "comment_id": 104857955, "body": "@Geoxion that was one of the options I listed above, that <code>futures::io</code> is actually not available on <code>no_std</code>.  Yes, <code>core::future</code> and <code>futures</code> in general is available but not the IO specific bits."}], "owner": {"reputation": 25156, "user_id": 230461, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/202ecb437d8bbd442d093a3a35c67a04?s=128&d=identicon&r=PG", "display_name": "dflemstr", "link": "https://stackoverflow.com/users/230461/dflemstr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 179, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1575218541, "creation_date": 1575218541, "question_id": 59127668, "link": "https://stackoverflow.com/questions/59127668/how-do-i-most-idiomatically-write-an-async-io-library-in-rust-for-no-std-platfor", "title": "How do I most idiomatically write an async IO library in Rust for no_std platforms?", "body": "<p>I'm building a library to be used on a <code>no_std</code> platform which allows you to do some common network-related IO, such as making HTTP requests or reading from/writing to Websockets.</p>\n\n<p>Now, I would like this library to be a well-behaved citizen so that it can be easily included in other <code>no_std</code> applications.  I hence want to package the library by implementing reasonable traits etc.  The library would allow me to not have to use <code>alloc</code>, so supporting non-<code>alloc</code> <code>no_std</code> would be ideal.</p>\n\n<p>These are the options I have looked at:</p>\n\n<ul>\n<li><code>embedded_hal</code> and <code>nb</code>: These crates are really low level (no generic traits like <code>Read</code> and <code>Write</code> or anything higher level) and the async model doesn't seem to be compatible with <code>async/await</code></li>\n<li><code>genio</code>/<code>core_io</code>/...: These don't support async IO at all.</li>\n<li><code>embrio</code>: Seems interesting but it seems like using it would tie me to one specific environment, making the library less portable.</li>\n<li><code>tokio</code> v0.2.x: I would love to use it but there is no <code>no_std</code> support at all.</li>\n<li><code>futures::io</code> v0.3.x: Again, would love to use it but there is no <code>no_std</code> support.</li>\n</ul>\n\n<p>Which async IO abstraction should I use in a no_std environment?  If there is no good option right now, which one should I bet on/help out with for the future?</p>\n"}, {"tags": ["debugging", "rust", "linker", "llvm"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1575215034, "post_id": 59126946, "comment_id": 104482518, "body": "This might be relevant: <a href=\"http://blog.llvm.org/2019/09/closing-gap-cross-language-lto-between.html\" rel=\"nofollow noreferrer\">cross-language LTO</a> is known to crash LLVM linker via its plugin mechanism if not being handled carefully."}, {"owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1575217370, "post_id": 59126946, "comment_id": 104483213, "body": "Any tips on disabling thin-lto/lto? I added this section to my Cargo.toml:  [profile.dev] lto = false codegen-units = 1 . and things are still failing with a segfault."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1575217744, "post_id": 59126946, "comment_id": 104483311, "body": "Add <code>lto = false</code> to <code>[profile.dev]</code> and/or <code>[profile.release]</code> should do it."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1575218091, "post_id": 59126946, "comment_id": 104483399, "body": "This <a href=\"https://doc.rust-lang.org/rustc/linker-plugin-lto.html\" rel=\"nofollow noreferrer\"><code>rustc</code> guide</a> may also help."}], "owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 369, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1575213914, "creation_date": 1575213914, "question_id": 59126946, "link": "https://stackoverflow.com/questions/59126946/rust-llvm-linker-rust-lld-segfaults", "title": "Rust LLVM linker (rust-lld) segfaults", "body": "<p>I want to try out the LLVM linker to see if it will speed things up for me. I have worked out how to help lld find all the system libraries but it sounds like there's something wrong when build scripts (which I guess are compiled and executed?) not finding those libraries.</p>\n\n<p>I am using the rustlang/rust:nightly container (freshly pulled today). The container is booted like this:</p>\n\n<pre><code>docker run --name=rust --workdir=/datascience-web --rm -it -p 8000:8000 -v $(shell pwd):/datascience-web -v $(shell pwd)/../../samuel-rs:/samuel-rs -v $(shell pwd)/target/linux-env-cargo-git:/usr/local/cargo/git -v $(shell pwd)/target/linux-env-cargo-registry:/usr/local/cargo/registry rustlang/rust:nightly bash\n</code></pre>\n\n<p>Then from inside the container, I got to <code>/code</code> and run:</p>\n\n<pre><code>RUSTFLAGS='-C linker=rust-lld -L /usr/lib/x86_64-linux-gnu -L /usr/lib/gcc/x86_64-linux-gnu/8' cargo build\n   Compiling libc v0.2.65\n   Compiling proc-macro2 v1.0.6\n   Compiling byteorder v1.3.2\n   Compiling log v0.4.8\n   Compiling syn v1.0.5\n   Compiling semver v0.9.0\nerror: failed to run custom build command for `byteorder v1.3.2`\n\nCaused by:\n  process didn't exit successfully: `/code/target/debug/build/byteorder-ce648015d7f0b8ef/build-script-build` (signal: 11, SIGSEGV: invalid memory reference)\nwarning: build failed, waiting for other jobs to finish...\nerror: failed to run custom build command for `libc v0.2.65`\n\nCaused by:\n  process didn't exit successfully: `/code/target/debug/build/libc-00921b43cd2fe1bc/build-script-build` (signal: 11, SIGSEGV: invalid memory reference)\nwarning: build failed, waiting for other jobs to finish...\nerror: failed to run custom build command for `proc-macro2 v1.0.6`\n\nCaused by:\n  process didn't exit successfully: `/code/target/debug/build/proc-macro2-12e6e3f6412e607e/build-script-build` (signal: 11, SIGSEGV: invalid memory reference)\nwarning: build failed, waiting for other jobs to finish...\nerror: failed to run custom build command for `log v0.4.8`\n\nCaused by:\n  process didn't exit successfully: `/code/target/debug/build/log-f937be6d994db414/build-script-build` (signal: 11, SIGSEGV: invalid memory reference)\nwarning: build failed, waiting for other jobs to finish...\nerror: failed to run custom build command for `syn v1.0.5`\n\nCaused by:\n  process didn't exit successfully: `/code/target/debug/build/syn-38e19eef1c830c5c/build-script-build` (signal: 11, SIGSEGV: invalid memory reference)\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\nmake: *** [Makefile:36: build-linux-lld] Error 101\n</code></pre>\n\n<p>It looks like those build-script-build things should be good to go:</p>\n\n<pre><code># file /code/target/debug/build/syn-38e19eef1c830c5c/build-script-build\n/code/target/debug/build/syn-38e19eef1c830c5c/build-script-build: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, with debug_info, not stripped\n# root@59255e7d6349:/code# ldd /code/target/debug/build/syn-38e19eef1c830c5c/build-script-build\n    linux-vdso.so.1 (0x00007ffffc9de000)\n    libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fe303b87000)\n    librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007fe303b7d000)\n    libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fe303b5c000)\n    libgcc_s.so.1 =&gt; /usr/lib/gcc/x86_64-linux-gnu/8/libgcc_s.so.1 (0x00007fe303b42000)\n    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fe303981000)\n    libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007fe3037fe000)\n    libutil.so.1 =&gt; /lib/x86_64-linux-gnu/libutil.so.1 (0x00007fe3037f7000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007fe303b9d000)\n# /code/target/debug/build/syn-38e19eef1c830c5c/build-script-build\nSegmentation fault # :( \n</code></pre>\n\n<p>I installed gdb in to the rustlang/rust:nightly container with <code>apt update; apt install -y rust-gdb</code>. Hopefully that helps with demangling rust symbols.</p>\n\n<pre><code># rust-gdb /datascience-web/target/debug/build/log-f937be6d994db414/build-script-build\nGNU gdb (Debian 8.2.1-2+b3) 8.2.1\nCopyright (C) 2018 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType \"show copying\" and \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\nFind the GDB manual and other documentation resources online at:\n    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.\n\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from /datascience-web/target/debug/build/log-f937be6d994db414/build-script-build...done.\n(gdb) run\nStarting program: /datascience-web/target/debug/build/log-f937be6d994db414/build-script-build\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000000000000000 in ?? ()\n(gdb) bt\n#0  0x0000000000000000 in ?? ()\n#1  0x00007ffff7ffc01b in std::sys::unix::mutex::Mutex::lock () at src/libstd/sys/unix/mutex.rs:55\n#2  std::sys_common::mutex::Mutex::raw_lock () at src/libstd/sys_common/mutex.rs:36\n#3  std::sys_common::mutex::Mutex::lock () at src/libstd/sys_common/mutex.rs:42\n#4  std::sys::unix::args::imp::really_init () at src/libstd/sys/unix/args.rs:76\n#5  std::sys::unix::args::imp::ARGV_INIT_ARRAY::init_wrapper () at src/libstd/sys/unix/args.rs:103\n</code></pre>\n\n<p>anyone know what's wrong with those <code>build-script-build</code> files? What purpose do they have and why would they now blow up?</p>\n"}, {"tags": ["rust", "async-await", "rust-tokio", "reqwest"], "answers": [{"comments": [{"owner": {"reputation": 2005, "user_id": 5922857, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/ilXse.png?s=128&g=1", "display_name": "semanser", "link": "https://stackoverflow.com/users/5922857/semanser"}, "edited": false, "score": 0, "creation_date": 1575206466, "post_id": 59125650, "comment_id": 104480234, "body": "Thansk a lot, it helped! In my case, the working combination of <code>tokio</code> and <code>reqwest</code> are <code>reqwest = &quot;0.10.0-alpha.2&quot;</code> and <code>tokio = { version = &quot;0.2.0-alpha.6&quot; }</code>"}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 5, "last_activity_date": 1575204536, "creation_date": 1575204536, "answer_id": 59125650, "question_id": 59125573, "link": "https://stackoverflow.com/questions/59125573/the-trait-stdfuturefuture-is-not-implemented-for-stdresultresultreqw/59125650#59125650", "title": "The trait `std::future::Future` is not implemented for `std::result::Result&lt;reqwest::Response, reqwest::Error&gt;`", "body": "<p>Same problem as <a href=\"https://stackoverflow.com/q/59101974/2722968\">here</a>, just in reverse. You are using <code>reqwest-0.9</code>, which is using the blocking interface by default. Update to <code>reqwest-0.10</code> to get the async interface.</p>\n\n<p>If you can't update to <code>reqwest-0.10</code>, the async interface in <code>reqwest-0.9</code> is in <code>reqwest::async</code>. E.g. <code>reqwest::async::Client::new(...)</code>.</p>\n"}], "owner": {"reputation": 2005, "user_id": 5922857, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/ilXse.png?s=128&g=1", "display_name": "semanser", "link": "https://stackoverflow.com/users/5922857/semanser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1544, "favorite_count": 0, "accepted_answer_id": 59125650, "answer_count": 1, "score": 3, "last_activity_date": 1575532256, "creation_date": 1575203968, "last_edit_date": 1575532256, "question_id": 59125573, "link": "https://stackoverflow.com/questions/59125573/the-trait-stdfuturefuture-is-not-implemented-for-stdresultresultreqw", "title": "The trait `std::future::Future` is not implemented for `std::result::Result&lt;reqwest::Response, reqwest::Error&gt;`", "body": "<p>I'm trying to run basic <code>reqwest</code> <a href=\"https://github.com/seanmonstar/reqwest/blob/master/examples/simple.rs\" rel=\"nofollow noreferrer\">example</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate reqwest;\nextern crate tokio;\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), reqwest::Error&gt; {\n    let res = reqwest::Client::new()\n        .get(\"https://hyper.rs\")\n        .send()\n        .await?;\n\n    println!(\"Status: {}\", res.status());\n\n    let body = res.text().await?;\n\n    println!(\"Body:\\n\\n{}\", body);\n\n    Ok(())\n}\n</code></pre>\n\n<p>Error that I'm getting:</p>\n\n<pre><code>   --&gt; src/main.rs:6:15\n    |\n6   |       let res = reqwest::Client::new()\n    |  _______________^\n7   | |         .get(\"https://hyper.rs\")\n8   | |         .send()\n9   | |         .await?;\n    | |______________^ the trait `std::future::Future` is not implemented for `std::result::Result&lt;reqwest::Response, reqwest::Error&gt;`\n</code></pre>\n\n<p>Rust version: <code>rustc 1.39.0 (4560ea788 2019-11-04)</code></p>\n\n<p>Library versions:</p>\n\n<pre><code>reqwest = \"0.9.22\"\ntokio = { version = \"0.2.0-alpha.6\", features = [\"full\"] }\n</code></pre>\n\n<p>Does anybody know what is wrong here?</p>\n"}, {"tags": ["rust", "move", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": false, "score": 13, "last_activity_date": 1610743922, "last_edit_date": 1610743922, "creation_date": 1575186893, "answer_id": 59123630, "question_id": 59123462, "link": "https://stackoverflow.com/questions/59123462/why-is-iterating-over-a-collection-via-for-loop-considered-a-move-in-rust/59123630#59123630", "title": "Why is iterating over a collection via `for` loop considered a &quot;move&quot; in Rust?", "body": "<p>As <a href=\"https://doc.rust-lang.org/reference/expressions/loop-expr.html#iterator-loops\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/reference/expressions/loop-expr.html#iterator-loops</a> says,</p>\n<blockquote>\n<p>A <code>for</code> expression is a syntactic construct for looping over elements provided by an implementation of <code>std::iter::IntoIterator</code>.</p>\n</blockquote>\n<p><code>Vec</code> <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.into_iter-2\" rel=\"nofollow noreferrer\">implements <code>IntoIterator</code></a>, allowing you to own a <code>Vec</code> instance\u2019s elements by consuming it:</p>\n<blockquote>\n<p>Creates a consuming iterator, that is, one that moves each value out of the vector (from start to end). The vector cannot be used after calling this.</p>\n</blockquote>\n<p>(As the error message notes, the way to fix this is to loop over <code>&amp;v</code> instead of <code>v</code>, borrowing its elements instead of owning them. You can loop <code>for &amp;i in &amp;v</code> to maintain the type of <code>i</code>.)</p>\n<p>It might seem unnecessary at a high level for you to own the elements of <code>v</code>, since they\u2019re copyable, but there\u2019s no special implementation allowing that information to be used here. <code>IntoIterator.into_iter()</code> takes <code>self</code>, meaning a for loop always consumes the value being iterated over.</p>\n"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1627, "favorite_count": 0, "answer_count": 1, "score": 7, "last_activity_date": 1610743922, "creation_date": 1575185247, "last_edit_date": 1575190514, "question_id": 59123462, "link": "https://stackoverflow.com/questions/59123462/why-is-iterating-over-a-collection-via-for-loop-considered-a-move-in-rust", "title": "Why is iterating over a collection via `for` loop considered a &quot;move&quot; in Rust?", "body": "<p>I have the below Rust program.</p>\n\n<pre><code>fn main() {\n    let v = vec![100, 32, 57];\n    for i in v {\n        println!(\"{}\", i);\n    }\n\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>When I run it, I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: borrow of moved value: `v`\n --&gt; src\\main.rs:7:22\n  |\n2 |     let v = vec![100, 32, 57];\n  |         - move occurs because `v` has type `std::vec::Vec&lt;i32&gt;`, which does not implement the `Copy` trait\n3 |     for i in v {\n  |              -\n  |              |\n  |              value moved here\n  |              help: consider borrowing to avoid moving into the for loop: `&amp;v`\n...\n7 |     println!(\"{:?}\", v);\n  |                      ^ value borrowed here after move\n</code></pre>\n\n<p>The error states that there is a <em>move</em> happened at <code>for i in v</code>. But I'm just using the same variable <code>v</code> defined by <code>let v = vec![100, 32, 57]</code>. It's not something like <code>let v2 = v; for i in v2 ...</code>, which moved the value from <code>v</code> to <code>v2</code>. Could anyone help to explain a little bit?</p>\n"}, {"tags": ["arrays", "rust", "constants", "compile-time"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 2, "creation_date": 1575165568, "post_id": 59121887, "comment_id": 104473376, "body": "Have you considered a build script? <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#case-study-code-generation\" rel=\"nofollow noreferrer\">doc.rust-lang.org/cargo/reference/&hellip;</a>"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1575177088, "post_id": 59121887, "comment_id": 104474824, "body": "Currently you wouldn&#39;t even be able to run this in nightly, or any time soon for that matter, <a href=\"https://doc.rust-lang.org/std/primitive.f64.html\" rel=\"nofollow noreferrer\">no <code>f64</code> functions are <code>const fn</code></a> because <a href=\"https://users.rust-lang.org/t/why-is-f64-powf-not-a-const-fn/31093/2?u=optimisticpeach\" rel=\"nofollow noreferrer\">it can vary between platforms</a>. I&#39;d personally include a file of some sort, or maybe make a proc-macro which can accept dynamic expressions and eval them at compile time."}, {"owner": {"reputation": 2003, "user_id": 457586, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/8fced1b618d6b8a714c598d3f8f7d9fe?s=128&d=identicon&r=PG", "display_name": "dynamitereed", "link": "https://stackoverflow.com/users/457586/dynamitereed"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1575182406, "post_id": 59121887, "comment_id": 104475544, "body": "@OptimisticPeach Could you please give me a small example of a proc-macro that could evaluate dynamic expressions at compile time?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1575197061, "post_id": 59121887, "comment_id": 104478176, "body": "A build scripts would be dramatically easier than a proc macro for this usecase."}, {"owner": {"reputation": 2003, "user_id": 457586, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/8fced1b618d6b8a714c598d3f8f7d9fe?s=128&d=identicon&r=PG", "display_name": "dynamitereed", "link": "https://stackoverflow.com/users/457586/dynamitereed"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1575230988, "post_id": 59121887, "comment_id": 104486853, "body": "@loganfsmyth If you want the credit, please add your build script suggestion as an answer. Yours is what I ended up using."}], "answers": [{"comments": [{"owner": {"reputation": 2003, "user_id": 457586, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/8fced1b618d6b8a714c598d3f8f7d9fe?s=128&d=identicon&r=PG", "display_name": "dynamitereed", "link": "https://stackoverflow.com/users/457586/dynamitereed"}, "edited": false, "score": 0, "creation_date": 1575250255, "post_id": 59127820, "comment_id": 104491210, "body": "This is a completely reasonable and sensible solution and it&#39;s probably what most people want. However, I&#39;m weird and I&#39;ve chosen not to use any crates in my project so I&#39;ve chosen the cargo build file feature instead. But I gave you an upvote because your answer is what a sane person should do."}, {"owner": {"reputation": 1122, "user_id": 1934177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6347ac3692509d85e8c6bc3fcf3ca7f?s=128&d=identicon&r=PG", "display_name": "Mathieu Amiot", "link": "https://stackoverflow.com/users/1934177/mathieu-amiot"}, "reply_to_user": {"reputation": 2003, "user_id": 457586, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/8fced1b618d6b8a714c598d3f8f7d9fe?s=128&d=identicon&r=PG", "display_name": "dynamitereed", "link": "https://stackoverflow.com/users/457586/dynamitereed"}, "edited": false, "score": 0, "creation_date": 1578681923, "post_id": 59127820, "comment_id": 105531436, "body": "@dynamitereed Thanks! To be completely honest I&#39;ve thought about the build.rs solution since I&#39;m an optimization maniac, but for a 65-sized sin table, I thought it was a bit overkill. If your size was way bigger though it would make perfect sense to have it as a build step, to prevent a computation on first access."}], "tags": [], "owner": {"reputation": 1122, "user_id": 1934177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6347ac3692509d85e8c6bc3fcf3ca7f?s=128&d=identicon&r=PG", "display_name": "Mathieu Amiot", "link": "https://stackoverflow.com/users/1934177/mathieu-amiot"}, "is_accepted": false, "score": 4, "last_activity_date": 1575219469, "creation_date": 1575219469, "answer_id": 59127820, "question_id": 59121887, "link": "https://stackoverflow.com/questions/59121887/in-rust-can-i-instantiate-my-const-array-without-hard-coding-in-the-values-com/59127820#59127820", "title": "In Rust, can I instantiate my const array without hard-coding in the values? Compile-time evaluation?", "body": "<p>As of now on Rust Stable, this is not possible to do (you need const fn expressions for this to work at compile time).</p>\n\n<p>But fortunately there's an \"in-between\" solution for this use case (that I have as well quite frequently), which is the <code>lazy_static</code> macro.</p>\n\n<p>Basically it's a lazy-evaluated runtime expression that is computed on first access only.</p>\n\n<p><a href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/\" rel=\"nofollow noreferrer\">https://docs.rs/lazy_static/1.4.0/lazy_static/</a></p>\n\n<p>Your code would look this way using this macro:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use lazy_static::lazy_static;\n\nconst SINE_TABLE_SIZE: usize = 65;\nlazy_static! {\n    pub static ref SINE_TABLE: [u32; SINE_TABLE_SIZE] = {\n        let mut table = [0_u32; SINE_TABLE_SIZE];\n        for i in 0..SINE_TABLE_SIZE {\n            table[i] = ((i as f64).sin().abs() * 2.0f64.powf(32.)).floor() as u32;\n        }\n\n        table\n    };\n}\n</code></pre>\n\n<p>Rust Playground sample link: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=61146c5f7de2c9ee1cbcd724dd1a730f\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=61146c5f7de2c9ee1cbcd724dd1a730f</a></p>\n\n<p>Disclaimer: I'm not the author of lazy_static nor I am related to them in any way.</p>\n"}, {"tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 3, "last_activity_date": 1575247792, "creation_date": 1575247792, "answer_id": 59131366, "question_id": 59121887, "link": "https://stackoverflow.com/questions/59121887/in-rust-can-i-instantiate-my-const-array-without-hard-coding-in-the-values-com/59131366#59131366", "title": "In Rust, can I instantiate my const array without hard-coding in the values? Compile-time evaluation?", "body": "<p>Cargo supports <code>build.rs</code> files that are compiled and run before the overall compilation. For you, the easiest option would be to use this to generate the table that you would like to use.</p>\n\n<p>The Rust docs have an example for <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#case-study-code-generation\" rel=\"nofollow noreferrer\">code generation using this method</a>, so if you take your code and use it to generate the array, you should be good to go. You can put <code>build = \"build.rs\"</code> in your <code>Cargo.toml</code> and have <code>build.rs</code> be:</p>\n\n<pre><code>use std::io::{Result, Write};\n\nfn main() -&gt; Result&lt;()&gt; {\n  let out_dir = env::var(\"OUT_DIR\").unwrap();\n  let dest_path = Path::new(&amp;out_dir).join(\"sin_abs_const.rs\");\n  let mut f = File::create(&amp;dest_path).unwrap();\n\n  write!(f, \"const T: [u32; 65] = [\\n\")?;\n  for i in 0..64 {\n    write!(f, \"  {},\\n\", ((i as f64).sin().abs() * 2.0_f64.powf(32.0)).floor() as u32)?;\n  }\n  write!(f, \"];\\n\")?;\n\n  Ok(())\n}\n</code></pre>\n\n<p>then you can load that built file.</p>\n"}], "owner": {"reputation": 2003, "user_id": 457586, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/8fced1b618d6b8a714c598d3f8f7d9fe?s=128&d=identicon&r=PG", "display_name": "dynamitereed", "link": "https://stackoverflow.com/users/457586/dynamitereed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1130, "favorite_count": 0, "accepted_answer_id": 59131366, "answer_count": 2, "score": 7, "last_activity_date": 1575247792, "creation_date": 1575164986, "question_id": 59121887, "link": "https://stackoverflow.com/questions/59121887/in-rust-can-i-instantiate-my-const-array-without-hard-coding-in-the-values-com", "title": "In Rust, can I instantiate my const array without hard-coding in the values? Compile-time evaluation?", "body": "<p>I'm trying to instantiate an array in Rust.  Here's one way I could do it at runtime:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut t = [0_u32; 65];\nfor i in 0..t.len() {\n    t[i] = ((i as f64).sin().abs() * 2.0_f64.powf(32.0)).floor() as u32;\n}\n</code></pre>\n\n<p>However, since I'm never going to change the values of this array and I'm going to use the values a lot, I thought this might be a good opportunity to explore the cool stuff going on with the <code>const</code> compile-time evaluation work being done in Rust.  I could make it compute the array at compile time and just store the results in the program data so it's ready to go immediately at runtime.</p>\n\n<p>My first step was to create the constant array.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const T: [u32; 65] = [0; 65];\n</code></pre>\n\n<p>Well, this is no good.  I've already instantiated it with all zeros.  That's not right.  Next, I thought maybe I should make a constant function that could instantiate the array.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const fn sine_table() -&gt; [u32; 65] {\n    let mut t = [0_u32; 65];\n    let mut i = 0;\n\n\n    loop {\n        if i &gt; 65 {\n            break;\n        }\n\n        // Do the math...\n    }\n\n    t\n}\n</code></pre>\n\n<p>And here's where I got stuck.  From what I've read, loops inside constant functions are still only on nightly, and I'm trying to stick with stable Rust for the time being to avoid surprises later on.  So, where does this leave me?  What can I do currently in stable and what's coming down the pipeline in nightly, RFCs, etc.?  My next thought was to investigate macros, but I'm not comfortable enough to go down that rabbit hole just yet without knowing if it'll be fruitful.  My ultimate goal is to make this array a constant without having to type in 65 values by hand.</p>\n"}, {"tags": ["rust", "mutable", "borrowing"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 2, "creation_date": 1575163187, "post_id": 59121748, "comment_id": 104473029, "body": "The signature of <a href=\"https://doc.rust-lang.org/stable/std/string/struct.String.html#method.clear\" rel=\"nofollow noreferrer\"><code>String::clear</code></a> is <code>pub fn clear(&amp;mut self)</code>. That is a mutable borrow right there."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575163760, "post_id": 59121748, "comment_id": 104473136, "body": "<code>let word = first_word(&amp;s);</code> word exist only because <code>first_word</code> borrow <code>s</code>"}, {"owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1575164043, "post_id": 59121748, "comment_id": 104473181, "body": "@edwardw Thanks for the reply. I think that should be the reason."}, {"owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1575164266, "post_id": 59121748, "comment_id": 104473212, "body": "@edwardw Could you make it an answer so that I can choose it as the correct answer?"}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 3, "last_activity_date": 1575201241, "last_edit_date": 1575201241, "creation_date": 1575165247, "answer_id": 59121904, "question_id": 59121748, "link": "https://stackoverflow.com/questions/59121748/why-rust-mutable-borrow-occurs-here/59121904#59121904", "title": "Why Rust mutable borrow occurs here?", "body": "<blockquote>\n  <p>The statement s.clear() is using s directly, where does the borrow come from?</p>\n</blockquote>\n\n<p>A method's first parameter is always <code>self</code>, which represents the instance of the struct the method is being called on. If one doesn't want to take ownership, and just reads data in the struct but not writes to it, then one can choose <code>&amp;self</code>. If on the other hand, one wants to change the instance that is called method on, then one would choose <code>&amp;mut self</code>. Last but not the least, <code>self</code> takes the ownership and usually is transformed into something else.</p>\n\n<p>Here, the <a href=\"https://doc.rust-lang.org/stable/std/string/struct.String.html#method.clear\" rel=\"nofollow noreferrer\"><code>String::clear</code></a> is defined as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn clear(&amp;mut self)\n</code></pre>\n\n<p>It is a mutable borrow. If calling <code>clear</code> method another way, you can clearly see why:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let word = first_word(&amp;s);\nString::clear(&amp;mut s);\nprintln!(\"the first word is: {}\", word);\n</code></pre>\n"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1445, "favorite_count": 0, "accepted_answer_id": 59121904, "answer_count": 1, "score": 1, "last_activity_date": 1575201241, "creation_date": 1575162918, "question_id": 59121748, "link": "https://stackoverflow.com/questions/59121748/why-rust-mutable-borrow-occurs-here", "title": "Why Rust mutable borrow occurs here?", "body": "<p>I'm learning Rust and the below code comes from the online book <em>The Rust Programming Language</em>.</p>\n\n<pre><code>fn main() {\n    let mut s = String::from(\"hello world\");\n\n    let word = first_word(&amp;s);\n\n    s.clear(); // error!\n\n    println!(\"the first word is: {}\", word);\n}\n\n\nfn first_word(s: &amp;String) -&gt; &amp;str {\n    let bytes = s.as_bytes();\n\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        if item == b' ' {\n            return &amp;s[0..i];\n        }\n    }\n\n    &amp;s[..]\n}\n</code></pre>\n\n<p>When I run it, I get this:</p>\n\n<pre><code>C:/Users/administrator/.cargo/bin/cargo.exe run --color=always --package rust2 --bin rust2\n   Compiling rust2 v0.1.0 (C:\\my_projects\\rust2)\nerror[E0502]: cannot borrow `s` as mutable because it is also borrowed as immutable\n --&gt; src\\main.rs:6:5\n  |\n4 |     let word = first_word(&amp;s);\n  |                           -- immutable borrow occurs here\n5 | \n6 |     s.clear(); // error!\n  |     ^^^^^^^^^ mutable borrow occurs here\n7 | \n8 |     println!(\"the first word is: {}\", word);\n  |                                       ---- immutable borrow later used here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0502`.\nerror: could not compile `rust2`.\n\nTo learn more, run the command again with --verbose.\n\nProcess finished with exit code 101\n</code></pre>\n\n<p>But as I understand, <code>s</code> is just a mutable <code>String</code> object. <code>s.clear()</code> is simply invoking a method on the object and this generates a <strong>mutable borrow</strong> error? A mutable borrow is something like <code>let mut a = &amp;mut s</code>. The statement <code>s.clear()</code> is using <code>s</code> directly, where does the <em>borrow</em> come from?</p>\n"}, {"tags": ["string", "rust", "char", "type-conversion", "lifetime"], "comments": [{"owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "edited": false, "score": 0, "creation_date": 1575160643, "post_id": 59121473, "comment_id": 104472658, "body": "Why would you need <code>&amp;str</code> as the key? <code>char</code> seems to be a far more natural choice."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575161684, "post_id": 59121473, "comment_id": 104472814, "body": "what you said don&#39;t make any sense, what do you really want ?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user9363390"}, "reply_to_user": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "edited": false, "score": 0, "creation_date": 1575198115, "post_id": 59121473, "comment_id": 104478415, "body": "@Psidom because keys are not single characters but words"}, {"owner": {"user_type": "does_not_exist", "display_name": "user9363390"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575198243, "post_id": 59121473, "comment_id": 104478447, "body": "@Stargateur I tried to clarify the question. Check it out again and tell me what you don&#39;t understand"}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": -1, "last_activity_date": 1575198847, "last_edit_date": 1575198847, "creation_date": 1575198032, "answer_id": 59124867, "question_id": 59121473, "link": "https://stackoverflow.com/questions/59121473/use-char-as-str-in-hashmap/59124867#59124867", "title": "Use char as &amp;str in HashMap", "body": "<p>I would separate the map into two:</p>\n\n<ul>\n<li>One is <code>char -&gt; Vec&lt;&amp;str&gt;</code>. It maps letters to a list of words.</li>\n<li><p>The second one would be <code>&amp;str -&gt; Vec&lt;char&gt;</code>, but I do not know if you really need it: Why not just iterate over the <code>chars</code> of a <code>&amp;str</code> directly?</p>\n\n<p>Storing a <code>Vec&lt;char&gt;</code> essentially just doubles the amount of memory you use, unless the <code>Vec&lt;char&gt;</code> is e.g. sorted in a particular order (which may or may not be necessary).</p></li>\n</ul>\n\n<p>If you <em>really want</em> to keep them in one map, I think it is easier to have a <code>HashMap&lt;String, Vec&lt;String&gt;&gt;</code>.</p>\n\n<p>The problem seems to be that <code>chars</code> gives you one <code>char</code> after another, but what you actually want is a <code>&amp;str</code> after another, where each <code>&amp;str</code> actually encompasses a single character. I did not find anything like that in the docs for <code>&amp;str</code>, but maybe there is something somewhere that iterates like this.</p>\n\n<p>You could work-around it using <code>matches</code>:</p>\n\n<pre><code>let words = vec![\"ab\", \"bc\", \"abc\"];\nlet mut map: HashMap&lt;&amp;str, Vec&lt;&amp;str&gt;&gt; = HashMap::new();\nfor word in words.iter() {\n    for letter in word.matches(|_| true) { // iterates over &amp;str's that encompass one single character\n        map.entry(letter).or_default().push(word);\n        map.entry(word).or_default().push(letter);\n    }\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9363390"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 59124867, "answer_count": 1, "score": 1, "last_activity_date": 1575198847, "creation_date": 1575159333, "last_edit_date": 1575198017, "question_id": 59121473, "link": "https://stackoverflow.com/questions/59121473/use-char-as-str-in-hashmap", "title": "Use char as &amp;str in HashMap", "body": "<p>I want to create a <code>HashMap</code> which maps words \u2014 a <code>Vec</code> of <code>&amp;str</code> \u2014 and letters of those words each to another. For example, <code>vec![\"ab\", \"b\", \"abc\"]</code> will be converted to the following <code>HashMap</code></p>\n\n<pre><code>{\n    // Letters are keys, words which contain the keys are values\n    \"a\" =&gt; [\"ab\", \"abc\"],\n    \"b\" =&gt; [\"ab\", \"bc\", \"abc\"],\n    \"c\" =&gt; [\"bc\", \"abc\"],\n    // Words are keys, letters which are in the words are values\n    \"ab\" =&gt; [\"a\", \"b\"],\n    \"abc\" =&gt; [\"a\", \"b\", \"c\"],\n}\n</code></pre>\n\n<p>I tried this code [<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9f6b06ebc1c24362d7caba20056e2b7e\" rel=\"nofollow noreferrer\">playground</a>]:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let words = vec![\"ab\", \"bc\", \"abc\"];\nlet mut map: HashMap&lt;&amp;str, Vec&lt;&amp;str&gt;&gt; = HashMap::new();\nfor word in words.iter() {\n    for letter in word.chars() {\n        map.entry(letter).or_default().push(word);\n        map.entry(word).or_default().push(letter);\n    }\n}\n</code></pre>\n\n<p>but there is a problem: <code>letter</code> is of type <code>char</code> but I need a <code>&amp;str</code> because <code>map</code> accepts only <code>&amp;str</code>s as keys. I also tried to convert <code>letter</code> to a <code>&amp;str</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for word in words.iter() {\n    for letter in word.chars() {\n        let letter = letter.to_string()\n        // no changes\n</code></pre>\n\n<p>but this code creates a new <code>String</code> which has a smaller lifetime than <code>map</code>'s one. In other words, <code>letter</code> is dropped after the nested <code>for</code> loop but and I get compiler error.</p>\n\n<p>How can I use a <code>char</code> in <code>HashMap</code> which accepts only <code>&amp;str</code>s as keys?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575146272, "post_id": 59119779, "comment_id": 104469725, "body": "Temporary lifetimes are <a href=\"https://doc.rust-lang.org/stable/reference/expressions.html#temporary-lifetimes\" rel=\"nofollow noreferrer\">specified to some extent in the Rust reference</a>. The reference isn&#39;t completely clear on this particular case, but judging from the behaviour of the compiler it looks like the temporary returned by <code>format!()</code> lives until the end of the <i>block</i> in the first case, while it lives until the end of the <code>push_str()</code> call in the second case. The &quot;block&quot; in the first case is just the &quot;then&quot; branch of the if-expression."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575146374, "post_id": 59119779, "comment_id": 104469753, "body": "The wording in the reference makes it sound like the temporary should live longer in the first case, though: &quot;the tail expression of a block is considered part of the statement that encloses the block&quot;"}, {"owner": {"reputation": 21, "user_id": 12461643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/333f6e8a98f6de785007dd39b52302dc?s=128&d=identicon&r=PG&f=1", "display_name": "slyngbaek", "link": "https://stackoverflow.com/users/12461643/slyngbaek"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575146827, "post_id": 59119779, "comment_id": 104469880, "body": "Okay, that makes sense...  But then why does this work:     <code>new_string.push_str(         {&amp;format!(&quot;{}&quot;,&quot;ay&quot;)}     );</code>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575147421, "post_id": 59119779, "comment_id": 104470024, "body": "I think the reference is a bit too vague to fully understand temporary lifetimes. I found a fuller explanation <a href=\"https://github.com/rust-lang/rust-memory-model/issues/17\" rel=\"nofollow noreferrer\">in this issue</a>. The &quot;arena tree&quot; explained there indeed seems to be fully in line with the observed behaviour in all cases you mention."}], "answers": [{"tags": [], "owner": {"reputation": 374, "user_id": 8037600, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39fcec89edd3b823e4c0a0912d2854df?s=128&d=identicon&r=PG&f=1", "display_name": "Nemo", "link": "https://stackoverflow.com/users/8037600/nemo"}, "is_accepted": false, "score": 1, "last_activity_date": 1575200208, "creation_date": 1575200208, "answer_id": 59125114, "question_id": 59119779, "link": "https://stackoverflow.com/questions/59119779/temporary-value-is-freed-inconsistency/59125114#59125114", "title": "Temporary value is freed inconsistency", "body": "<p><code>format!</code> returns a <code>String</code> (without <code>&amp;</code>) and therefore gives you ownership to what it returns. You could say that the current block owns it. It is then dropped at the end of the current block.</p>\n\n<p>In </p>\n\n<pre><code>let mut new_string = String::from(\"test\");\nnew_string.push_str(\n    if true { &amp;format!(\"{}\",\"ay\") } else { \"ay\" }\n);\n</code></pre>\n\n<p>this is <code>{ &amp;format!(\"{}\",\"ay\") }</code>. At <code>}</code> the value is dropped, before <code>push_str</code> could use it. </p>\n\n<p>In </p>\n\n<pre><code>let mut new_string = String::from(\"test\");\nnew_string.push_str(\n    &amp;format!(\"{}\",\"ay\")\n);\n</code></pre>\n\n<p>it lives long enough.</p>\n\n<p><code>new_string.push_str( {&amp;format!(\"{}\",\"ay\")} );</code> works because the curly braces are optimized away.  </p>\n\n<pre><code>new_string.push_str( {\n    let t = &amp;format!(\"{}\",\"ay\");\n    t\n} );\n</code></pre>\n\n<p>does not work.</p>\n"}], "owner": {"reputation": 21, "user_id": 12461643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/333f6e8a98f6de785007dd39b52302dc?s=128&d=identicon&r=PG&f=1", "display_name": "slyngbaek", "link": "https://stackoverflow.com/users/12461643/slyngbaek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1575200208, "creation_date": 1575144236, "question_id": 59119779, "link": "https://stackoverflow.com/questions/59119779/temporary-value-is-freed-inconsistency", "title": "Temporary value is freed inconsistency", "body": "<p>Why does this generate a \"temporary value is freed\" error:</p>\n\n<pre><code>    let mut new_string = String::from(\"test\");\n    new_string.push_str(\n        if true { &amp;format!(\"{}\",\"ay\") } else { \"ay\" }\n    );\n</code></pre>\n\n<p>When this is valid:</p>\n\n<pre><code>    let mut new_string = String::from(\"test\");\n    new_string.push_str(\n        &amp;format!(\"{}\",\"ay\")\n    );\n</code></pre>\n\n<p>Playground <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ed5870ce0ff6e9992b380d4ee636127b\" rel=\"nofollow noreferrer\">Link</a></p>\n"}, {"tags": ["multithreading", "rust", "synchronization", "thread-safety", "rwlock"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1575152539, "post_id": 59118792, "comment_id": 104471139, "body": "From a quick look, I&#39;d guess you should wrap the <code>RwLock</code> in an <code>Arc</code>, and send a reference to the lock rather then the lock guard. (I.e. use <code>Arc&lt;RwLock&lt;MyBuffer&gt;&gt;</code> as the item type in your slice.)"}, {"owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575235596, "post_id": 59118792, "comment_id": 104488136, "body": "@SvenMarnach That&#39;s a good idea, but the problem is that now writers can race for the lock while it&#39;s sitting in the mpsc queue."}, {"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575264627, "post_id": 59118792, "comment_id": 104493996, "body": "The race should be prevented by <code>RwLock</code>. Or why do you think that <code>Box&lt;...&gt;</code> is better thant <code>Arc&lt;...&gt;</code>. @Sven Marnach: I suppose you mean <code>Arc&lt;[RwLock&lt;MyBuffer&gt;]&gt;</code>?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1575279328, "post_id": 59118792, "comment_id": 104499340, "body": "@CoronA No, I meant what I said. The thread tries to return a reference to a specific item in the slice, so we need an <code>Arc</code> for each item."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575279448, "post_id": 59118792, "comment_id": 104499406, "body": "@Coder-256 You&#39;ll probably have to come up with a separate mechanism to prevent that, like moving the items that have already been processed out of the slice. I don&#39;t have enough context to make a good suggestion here."}, {"owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "edited": false, "score": 0, "creation_date": 1575285305, "post_id": 59118792, "comment_id": 104502502, "body": "First, thank you both for helping. I am trying to implement triple buffering. The goal is to have one thread that repeatedly writes data into one of three buffers, then passes a read lock back to the main thread, and alternates writing to the two remaining buffers so that the main thread can easily access the most recently updated buffer. I created a workaround by sending the <code>RwLock</code> for the most recent buffer then leaving it up to the main thread to actually lock it; however, I want to avoid unlocking/relocking and manually updating."}, {"owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "edited": false, "score": 0, "creation_date": 1575308295, "post_id": 59118792, "comment_id": 104514230, "body": "Also I should mention that in my particular case I am using <code>Box::leak</code> to get a <code>&amp;&#39;static [RwLock]</code> reference since I use the buffers during the whole program and it&#39;s more efficient this way, but otherwise you would be right, I would need an <code>Arc</code> in order to access the <code>RwLock</code> from 2 threads at a time. I write a reference to the freshest <code>RwLock</code> into a mutex (but I will probably switch to an atomic pointer for performance since I&#39;m using the static lifetime anyway)."}], "owner": {"reputation": 3931, "user_id": 3398839, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5186a4aea9a9044d734cd373e6ba835b?s=128&d=identicon&r=PG&f=1", "display_name": "Coder-256", "link": "https://stackoverflow.com/users/3398839/coder-256"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 142, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1575136642, "creation_date": 1575136642, "question_id": 59118792, "link": "https://stackoverflow.com/questions/59118792/rust-sending-a-parking-lotrwlockreadguard", "title": "Rust: Sending a parking_lot::RwLockReadGuard", "body": "<p>Here is the simplified code I am trying to write:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use parking_lot::RwLock;\n\nlet buffers: Box&lt;[RwLock&lt;MyBuffer&gt;]&gt; = Box::new([ ... ]);\nlet (sender, receiver) = std::sync::mpsc::channel();\n\nthread::spawn(move || {\n    let guard = buffers[ ... ].write().unwrap();\n    expensive_computation(&amp;mut *guard);\n    sender.send(guard.downgrade()).unwrap();\n});\n\nfor message in receiver.iter() {\n    // Handle the message\n}\n</code></pre>\n\n<p>However, <a href=\"https://github.com/Amanieu/parking_lot/issues/139\" rel=\"nofollow noreferrer\"><code>RwLockReadGuard</code> is not <code>Send</code></a>, so this code does not compile.</p>\n\n<p>How should I solve the problem of sending a <code>RwLockReadGuard</code> across the thread boundary?</p>\n"}, {"tags": ["generics", "struct", "rust"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1575139784, "post_id": 59118605, "comment_id": 104468184, "body": "To summarize the reason and solution: Just because the object itself (<code>Character&lt;T&gt;</code>) should implement <code>Display</code>, it doesn&#39;t mean that the <code>T</code> does too, so if you only make <code>Character&lt;T&gt; where T: Display</code> implement `Display, you have no error."}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 3, "last_activity_date": 1575137386, "last_edit_date": 1575137386, "creation_date": 1575136384, "answer_id": 59118751, "question_id": 59118605, "link": "https://stackoverflow.com/questions/59118605/unable-to-implement-fmtdisplay-for-a-struct-with-a-generic-type/59118751#59118751", "title": "Unable to implement fmt::Display for a struct with a generic type", "body": "<pre><code>use std::fmt;\n\nimpl&lt;T&gt; fmt::Display for Character&lt;T&gt;\nwhere\n    T: fmt::Display,\n{\n    // Display trait for Player\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"[{}] {} (Lv {})\", self.class, self.name, self.level)\n    }\n}\n</code></pre>\n\n<ul>\n<li><code>impl&lt;T&gt;</code> states that the following is an implementation for something generic (just as <code>Character</code>)</li>\n<li><code>where T: std::fmt::Display</code> requires that <code>T</code> implements <code>Display</code>. This is needed because you want to <code>write</code> <code>self.class</code>, which is of type <code>T</code></li>\n</ul>\n"}], "owner": {"reputation": 23, "user_id": 12461217, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a1d6d54f930de20670ad7da4afed71f9?s=128&d=identicon&r=PG&f=1", "display_name": "ddmin", "link": "https://stackoverflow.com/users/12461217/ddmin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 492, "favorite_count": 0, "accepted_answer_id": 59118751, "answer_count": 1, "score": 2, "last_activity_date": 1575137386, "creation_date": 1575135324, "question_id": 59118605, "link": "https://stackoverflow.com/questions/59118605/unable-to-implement-fmtdisplay-for-a-struct-with-a-generic-type", "title": "Unable to implement fmt::Display for a struct with a generic type", "body": "<p>I have a struct Character which takes in a generic type T. I am unable to figure out how to implement the fmt::Display trait for Character. This is what I tried:</p>\n\n<pre><code>pub struct Character&lt;T&gt; {\n    pub name: String,\n    pub level: u32,\n    pub class: T,\n    pub attack: i32,\n    pub defense: i32,\n    pub speed: i32,\n}\n\nimpl fmt::Display for Character&lt;T&gt; {\n    // Display trait for Player\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"[{}] {} (Lv {})\", self.class, self.name, self.level)\n    }\n}\n</code></pre>\n\n<p>The error states that T cannot be found in the scope in the line <code>impl fmt::Display for Character&lt;T&gt;</code></p>\n\n<p>I've tried searching for how you would do this, but I couldn't figure it out.</p>\n"}, {"tags": ["rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 1, "last_activity_date": 1575136544, "creation_date": 1575136544, "answer_id": 59118774, "question_id": 59118291, "link": "https://stackoverflow.com/questions/59118291/specifying-error-type-for-the-result-returned-in-the-context-of-sinkext-with/59118774#59118774", "title": "Specifying Error type for the Result returned (in the context of SinkExt.with)", "body": "<p>You can use the turbofish to explicitly specify types:</p>\n\n<p><code>sink.with::&lt;_,_,_/*E*/MyCustomErrorTypeOrSomethingSimilar&gt;(|b: Bytes| {...})</code>.</p>\n"}], "owner": {"reputation": 2454, "user_id": 600094, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9c9e931f6c213bfa05ce149126858e83?s=128&d=identicon&r=PG", "display_name": "aav", "link": "https://stackoverflow.com/users/600094/aav"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 59118774, "answer_count": 1, "score": 0, "last_activity_date": 1575136544, "creation_date": 1575132825, "question_id": 59118291, "link": "https://stackoverflow.com/questions/59118291/specifying-error-type-for-the-result-returned-in-the-context-of-sinkext-with", "title": "Specifying Error type for the Result returned (in the context of SinkExt.with)", "body": "<p>I'm trying to use <strong>SinkExt.with</strong> to transform packet bytes, before sending. This a minimal code snippet:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let (mut sink, stream) = codec::Framed::new(serial, codec::ProtocolCodec::new()).split();\n\nlet sink = sink.with(|input: Bytes| {\n    // transform input\n    future::ready(Ok(input))\n});\n</code></pre>\n\n<p>Unfortunately, the compiler (1.39.0) complains:</p>\n\n<pre><code>error[E0698]: type inside `async` object must be known in this context\n  --&gt; src/main.rs:68:25\n   |\n68 |         let sink = sink.with(|b: Bytes| {\n   |                         ^^^^ cannot infer type for `E`\n   |\n\n</code></pre>\n\n<p>I can understand, that it lacks the type of a possible error (E) for the <strong>Result</strong> I'm returning. My problem is that I cannot understand how to properly specify it. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1548, "user_id": 5475140, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Vk846.jpg?s=128&g=1", "display_name": "Abdul Rehman", "link": "https://stackoverflow.com/users/5475140/abdul-rehman"}, "edited": false, "score": 1, "creation_date": 1575132762, "post_id": 59117951, "comment_id": 104466472, "body": "You might want to look at this <a href=\"https://stackoverflow.com/questions/54237610/is-there-a-way-to-make-an-immutable-reference-mutable\" title=\"is there a way to make an immutable reference mutable\">stackoverflow.com/questions/54237610/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575158868, "post_id": 59117951, "comment_id": 104472385, "body": "because it&#39;s UB, UB is UB, because we decide it&#39;s UB."}], "answers": [{"comments": [{"owner": {"reputation": 2376, "user_id": 2979958, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/0837352343df3dd5f20807418f7321ef?s=128&d=identicon&r=PG&f=1", "display_name": "Kapichu", "link": "https://stackoverflow.com/users/2979958/kapichu"}, "edited": false, "score": 0, "creation_date": 1575138916, "post_id": 59118818, "comment_id": 104467973, "body": "Thanks! But what if I make sure that I don&#39;t violate this assumption and only obtain a mutable reference when there are no other references to that place of memory?"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 2376, "user_id": 2979958, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/0837352343df3dd5f20807418f7321ef?s=128&d=identicon&r=PG&f=1", "display_name": "Kapichu", "link": "https://stackoverflow.com/users/2979958/kapichu"}, "edited": false, "score": 0, "creation_date": 1575140055, "post_id": 59118818, "comment_id": 104468262, "body": "@Kapichu That&#39;s the magic of UB, in the compiler&#39;s eyes, if it <i>could</i> happen, it can totally take advantage of it. For example, another example of UB which is easier to explain: Owning a <code>T</code> where your value is uninitialized and <b>yet</b> you still have a name for it is UB, even if you don&#39;t use it. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dc49e195300ee8fd0854737cf7948c82\" rel=\"nofollow noreferrer\">This</a> even though we <code>forget</code> the value, is still UB. In other words, if the compiler sees you broke its contract it will eat your lunch and your kitchen sink."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 2376, "user_id": 2979958, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/0837352343df3dd5f20807418f7321ef?s=128&d=identicon&r=PG&f=1", "display_name": "Kapichu", "link": "https://stackoverflow.com/users/2979958/kapichu"}, "edited": false, "score": 0, "creation_date": 1575140334, "post_id": 59118818, "comment_id": 104468325, "body": "@Kapichu take a look at <a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/behavior-considered-undefined.ht&zwnj;&#8203;ml</a> for some more information on that."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1575226292, "last_edit_date": 1575226292, "creation_date": 1575136794, "answer_id": 59118818, "question_id": 59117951, "link": "https://stackoverflow.com/questions/59117951/why-is-transmuting-t-to-mut-t-undefined-behaviour/59118818#59118818", "title": "Why is transmuting &amp;T to &amp;mut T Undefined Behaviour?", "body": "<p>The Rust optimiser makes the assumption that <code>&amp;mut T</code> references are unique. For example, it might deduce that a particular piece of memory can be reused because a mutable reference to that memory exists but is never accessed again.</p>\n\n<p>However, if you transmute a <code>&amp;T</code> to a <code>&amp;mut T</code> then you are able to create multiple mutable references to the same data. If the compiler makes this assumption, you could end up dereferencing a value that has been overwritten with something else.</p>\n\n<p>This is just one example of how the compiler <em>might</em> make use of the assumption that mutable references are unique. In fact, the compiler is free to use this information in any way it sees fit \u2014 which could (and likely will) change from version to version.</p>\n\n<p>Even if you <em>think</em> you have guaranteed that the reference isn't aliased, you can't always guarantee that users of your code won't create more references. Even if you think you can be sure of that, the existence of references is extremely subtle and it's very easy to miss one. For example when you call a method that takes <code>&amp;self</code>, that's a reference.</p>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1575225349, "post_id": 59120630, "comment_id": 104485424, "body": "<i>Currently</i> Rust doesn&#39;t give the <code>noalias</code> hint <a href=\"https://github.com/rust-lang/rust/issues/54878\" rel=\"nofollow noreferrer\">due to LLVM bugs</a>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1575229294, "post_id": 59120630, "comment_id": 104486433, "body": "Since I&#39;m aware of this bug, but don&#39;t know its full scope, I tried <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=729fe7dbe29e32f243b0d0b785da6279\" rel=\"nofollow noreferrer\">some example code on the playground</a> before posting this answer, and found that the current stable version of Rust does emit <code>noalias</code> for a reference to an integer (select the &quot;LLVM IR&quot; action to see it). I did not investigate any further, since it&#39;s not very relevant for this question in what cases Rust currently disables the attribute \u2013 it will eventually be re-enabled it anyway."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 4, "last_activity_date": 1575151127, "creation_date": 1575151127, "answer_id": 59120630, "question_id": 59117951, "link": "https://stackoverflow.com/questions/59117951/why-is-transmuting-t-to-mut-t-undefined-behaviour/59120630#59120630", "title": "Why is transmuting &amp;T to &amp;mut T Undefined Behaviour?", "body": "<p>The Rust compiler annotates <code>&amp;T</code> function parameters with the LLVM <code>noalias</code> and <code>readonly</code> attributes (provided that <code>T</code> does not contain any <code>UnsafeCell</code> parts). The <code>noalias</code> attribute tells LLVM that the memory behind this pointer may only be written to through <em>this</em> pointer (and not through any through other pointers), and the <code>readonly</code> attribute tells LLVM that it can't be written to through this pointer (but possibly other pointers). In combination, the two attributes allow the LLVM optimiser to assume the memory is not changed at all during the execution of this function, and the code can be optimised based on this assumption. The optimiser may reorder instructions or remove code in a way that is only safe to do if you actually stick to this contract.</p>\n\n<p>Another way the conversion can lead to undefined behaviour is for statics: immutable statics without <code>UnsafeCell</code>s will be placed into read-only memory, so if you actually write to them, your code will segfault.</p>\n\n<p>For parameters with <code>UnsafeCell</code>s the compiler does not emit the <code>readonly</code> attribute, and statics containing an <code>UnsafeCell</code> are placed into writable memory.</p>\n"}], "owner": {"reputation": 2376, "user_id": 2979958, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/0837352343df3dd5f20807418f7321ef?s=128&d=identicon&r=PG&f=1", "display_name": "Kapichu", "link": "https://stackoverflow.com/users/2979958/kapichu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1575226292, "creation_date": 1575130271, "question_id": 59117951, "link": "https://stackoverflow.com/questions/59117951/why-is-transmuting-t-to-mut-t-undefined-behaviour", "title": "Why is transmuting &amp;T to &amp;mut T Undefined Behaviour?", "body": "<p>I want to reinterpret an immutable reference to a mutable reference (in an unsafe block) and be responsible for the safety checks on my own, yet it appears I cannot use <code>mem::transmute()</code> to do so.</p>\n\n<pre><code>let map_of_vecs: HashMap&lt;usize, Vec&lt;_&gt;&gt; = ...;\nlet vec = map_of_vecs[2];\n/// obtain a mutable reference to vec here\n</code></pre>\n\n<ul>\n<li>I do not want to wrap the <code>Vec</code>s into <code>Cell</code>s because that would affect all other areas of code that use <code>map_of_vecs</code> and I only need mutability in one line.</li>\n<li>I do not have mutable access to <code>map_of_vecs</code></li>\n</ul>\n"}, {"tags": ["rust", "lifetime", "borrow-checker", "lifetime-scoping"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1575122699, "post_id": 59116374, "comment_id": 104463800, "body": "Why are you using a <code>&amp;str</code> for <code>id</code>? If it&#39;s a reference, then the ID needs to be owned by something else, but your code specifically creates a struct from a strong and then discards the string, so nothing would own the ID. Can <code>id</code> be a <code>String</code> instead?"}, {"owner": {"reputation": 374, "user_id": 8037600, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39fcec89edd3b823e4c0a0912d2854df?s=128&d=identicon&r=PG&f=1", "display_name": "Nemo", "link": "https://stackoverflow.com/users/8037600/nemo"}, "edited": false, "score": 0, "creation_date": 1575200981, "post_id": 59116374, "comment_id": 104478981, "body": "Could you paste a working playground link (without dependencies to tungstenite)?"}], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 1, "last_activity_date": 1575205096, "last_edit_date": 1575205096, "creation_date": 1575204249, "answer_id": 59125617, "question_id": 59116374, "link": "https://stackoverflow.com/questions/59116374/in-rust-how-to-push-an-object-with-a-lifetime-into-a-vector/59125617#59125617", "title": "In Rust, how to push an object with a lifetime into a vector?", "body": "<p>Look at <code>serde_json::from_str</code> carefully:</p>\n\n<pre><code>pub fn from_str&lt;'a, T&gt;(s: &amp;'a str) -&gt; Result&lt;T&gt; \nwhere\n    T: Deserialize&lt;'a&gt;, \n</code></pre>\n\n<p>This says that the <code>T</code> which is deserialized shares the same lifetime as the input <code>s</code>. This <em>allows</em> for zero-copy deserialization, which is what you get in <code>MyType</code>, where <code>id</code> is a reference to a string slice. This binds the lifetime of <code>MyType</code> to the lifetime of <code>&amp;resp_raw</code>, which is local to <code>fn example()</code>. This will not work.</p>\n\n<p>The problem can't be solved by giving <code>buff</code> the lifetime-parameter you've given it. The <code>example</code>-function owns the buffer that <code>MyType</code> point into. Allowing <code>MyType</code> to \"escape\" into the <code>Vec</code> would allow a dangling reference to be created, as the buffer is destroyed once <code>example</code> returns.</p>\n\n<p>Change <code>MyType</code> to satisify <code>DeserializeOwned</code>, that is, take no lifetime parameter. You'll need a <code>String</code> or a (to safe a little memory) a <code>Box&lt;str&gt;</code> instead of a <code>&amp;str</code>.</p>\n"}], "owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 304, "favorite_count": 0, "accepted_answer_id": 59125617, "answer_count": 1, "score": 0, "last_activity_date": 1575205096, "creation_date": 1575118471, "question_id": 59116374, "link": "https://stackoverflow.com/questions/59116374/in-rust-how-to-push-an-object-with-a-lifetime-into-a-vector", "title": "In Rust, how to push an object with a lifetime into a vector?", "body": "<p>I've got code somewhat like the following, which attempts to read from a websocket, parse the JSON result into a struct, and push that struct onto a <code>Vec</code> buffer. The code however fails to compile, because the struct has a lifetime, and the borrow checker complains that the JSON string does not live long enough.</p>\n\n<pre><code>use serde::{Deserialize, Serialize};\nuse tungstenite::client::AutoStream;\nuse tungstenite::protocol::WebSocket;\n\n#[derive(Serialize, Deserialize, Debug, Clone)]\nstruct MyType&lt;'a&gt; {\n    id: &amp;'a str,\n    count: i64,\n}\n\nfn example&lt;'a&gt;(\n    conn: &amp;mut WebSocket&lt;AutoStream&gt;,\n    buff: &amp;'a mut Vec&lt;MyType&lt;'a&gt;&gt;,\n) -&gt; Option&lt;Box&lt;dyn std::error::Error&gt;&gt; {\n    match conn.read_message() {\n        Err(err) =&gt; Some(err.into()),\n        Ok(msg) =&gt; {\n            let resp_raw = msg.to_string();\n            let resp_parsed: Result&lt;MyType&lt;'a&gt;, _&gt; = serde_json::from_str(&amp;resp_raw);\n            match resp_parsed {\n                Err(err) =&gt; Some(err.into()),\n                Ok(resp) =&gt; {\n                    buff.push(resp.clone());\n                    None\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The exact error is that <code>borrowed value [&amp;resp_raw] does not live long enough</code>.</p>\n\n<p>I'm wondering how I should restructure this code to satisfy the borrow checker; what is the correct way to push a struct with a lifetime onto the <code>Vec</code> param?</p>\n\n<p>Or is it the case that the <code>&amp;'a str</code> parsed into <code>MyType</code> actually still retains a reference to the original JSON string, so there's no way to safely do this?</p>\n"}, {"tags": ["rust", "clap", "structopt"], "answers": [{"tags": [], "owner": {"reputation": 75, "user_id": 1327915, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/81edba310fe046610483755c1bd72368?s=128&d=identicon&r=PG", "display_name": "ticky", "link": "https://stackoverflow.com/users/1327915/ticky"}, "is_accepted": false, "score": 0, "last_activity_date": 1586647069, "creation_date": 1586647069, "answer_id": 61164893, "question_id": 59115832, "link": "https://stackoverflow.com/questions/59115832/how-to-attach-possible-values-to-a-struct-with-structopt/61164893#61164893", "title": "How to attach possible_values to a struct with structopt?", "body": "<p><code>clap</code>\u2019s <code>possible_values</code> is exposed as a field option, as shown in <a href=\"https://github.com/TeXitoi/structopt/blob/ed160ae8796ea10edb15a360f1e392c4d18dbdb3/examples/enum_in_args.rs\" rel=\"nofollow noreferrer\">this <code>structopt</code> example</a>:</p>\n\n<pre><code>//! How to use `arg_enum!` with `StructOpt`.\n\nuse clap::arg_enum;\nuse structopt::StructOpt;\n\narg_enum! {\n    #[derive(Debug)]\n    enum Baz {\n        Foo,\n        Bar,\n        FooBar\n    }\n}\n\n#[derive(StructOpt, Debug)]\nstruct Opt {\n    /// Important argument.\n    #[structopt(possible_values = &amp;Baz::variants(), case_insensitive = true)]\n    i: Baz,\n}\n\nfn main() {\n    let opt = Opt::from_args();\n    println!(\"{:?}\", opt);\n}\n</code></pre>\n\n<p>Notably, this is making use of <code>case_insensitive</code> as well, to allow any case of those variants to be accepted.</p>\n\n<p>If you want more granular control, you could omit <code>case_insensitive</code> and instead implement the variants yourself:</p>\n\n<pre><code>use structopt::StructOpt;\n\n#[derive(Debug)]\nenum Baz {\n    Foo,\n    Bar,\n    FooBar\n}\n\nimpl Baz {\n    fn variants() -&gt; [&amp;'static str; 3] {\n        [\"foo\", \"bar\", \"foo-bar\"]\n    }\n}\n\n#[derive(StructOpt, Debug)]\nstruct Opt {\n    /// Important argument.\n    #[structopt(possible_values = &amp;Baz::variants())]\n    i: Baz,\n}\n\nfn main() {\n    let opt = Opt::from_args();\n    println!(\"{:?}\", opt);\n}\n</code></pre>\n\n<p>Finally, you could also use a string array in the same manner.</p>\n"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 323, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1586647069, "creation_date": 1575114218, "question_id": 59115832, "link": "https://stackoverflow.com/questions/59115832/how-to-attach-possible-values-to-a-struct-with-structopt", "title": "How to attach possible_values to a struct with structopt?", "body": "<p><a href=\"https://docs.rs/clap/2.33.0/clap/\" rel=\"nofollow noreferrer\"><code>clap</code></a> allows you to provide list of accepted values using <a href=\"https://kbknapp.github.io/clap-rs/clap/struct.Arg.html#method.possible_values\" rel=\"nofollow noreferrer\"><code>possible_values</code></a> like this.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mode_vals = [\"fast\", \"slow\"];\n.possible_values(&amp;mode_vals)\n</code></pre>\n\n<p>How to do this with <a href=\"https://docs.rs/structopt/0.3.5/structopt/\" rel=\"nofollow noreferrer\"><code>structopt</code></a>?</p>\n"}, {"tags": ["rust", "thrust", "rust-cargo", "wasm-bindgen"], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1575136836, "creation_date": 1575136836, "answer_id": 59118827, "question_id": 59115760, "link": "https://stackoverflow.com/questions/59115760/how-can-i-implement-an-external-trait-on-an-internal-trait-in-rust/59118827#59118827", "title": "how can I implement an external trait on an internal trait in Rust?", "body": "<p>You can require that anything that <code>impl</code>s <code>Summary</code> must also <code>impl</code> <code>std::fmt::Debug</code> as follows:</p>\n\n<pre><code>pub trait Summary : std::fmt::Debug { // Summary requires Debug\n    fn summarize(&amp;self) -&gt; String;\n}\n</code></pre>\n\n<p>If you do not want to tie <code>Debug</code> to <code>Summary</code> you can always introduce another trait subsuming the other two:</p>\n\n<pre><code>pub trait DebuggableSummary : Summary + std::fmt::Display {}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 12387786, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9d35e85f63999685c19221890979f4a?s=128&d=identicon&r=PG&f=1", "display_name": "Areeb Sid", "link": "https://stackoverflow.com/users/12387786/areeb-sid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1576342178, "creation_date": 1575113660, "last_edit_date": 1576342178, "question_id": 59115760, "link": "https://stackoverflow.com/questions/59115760/how-can-i-implement-an-external-trait-on-an-internal-trait-in-rust", "title": "how can I implement an external trait on an internal trait in Rust?", "body": "<p>I want to print the instance of <strong>Tweet</strong> datatype in main function, but the summary trait don't implement the debug trait. Is there any way to implement a trait on trait or any work around.\nuncommentating the second line and commentating the first line would work because String type implements the Display trait.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Tweet {\n    name: String,\n}\n\npub trait Summary {\n    fn summarize(&amp;self) -&gt; String;\n}\n\nimpl Summary for Tweet {\n    fn summarize(&amp;self) -&gt; String {\n        format!(\"@{}\", &amp;self.name)\n    }\n}\n\nfn summarizeable(x: String) -&gt; impl Summary {\n    Tweet { name: x }\n}\n\nfn main() {\n    //1.\n    println!(\"{:#?}\", summarizeable(String::from(\"Alex\")));\n    //2.println!(\"{}\",summarizeable(String::from(\"Alex\")).summarize());\n}\n</code></pre>\n\n<blockquote>\n  <p>error[E0277]: <code>impl Summary</code> doesn't implement <code>std::fmt::Debug</code>   -->\n  src/main.rs:26:29    | 26 |     /<em>1.</em>/\n  println!(\"{:#?}\",summarizeable(String::from(\"Alex\")));    |<br>\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ <code>\n  impl Summary</code> cannot be\n  formatted using <code>{:?}</code> because it doesn't implement <code>std::fmt::Debug</code>  |    = help: the trait <code>std::fmt::Debug</code> is not implemented for <code>impl Summary</code>    = note: required by <code>std::fmt::Debug::fmt</code></p>\n  \n  <p>error: aborting due to previous error</p>\n  \n  <p>For more information about this error, try <code>rustc --explain E0277</code>.\n  error: Could not compile <code>p1</code>.</p>\n  \n  <p>To learn more, run the command again with --verbose.</p>\n</blockquote>\n"}, {"tags": ["rust", "iterator", "declarative"], "answers": [{"tags": [], "owner": {"reputation": 4970, "user_id": 1726797, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a76b9e0b9a393201d9897082bf70bf07?s=128&d=identicon&r=PG", "display_name": "nnnmmm", "link": "https://stackoverflow.com/users/1726797/nnnmmm"}, "is_accepted": true, "score": 1, "last_activity_date": 1575111463, "last_edit_date": 1575111463, "creation_date": 1575110609, "answer_id": 59115359, "question_id": 59115305, "link": "https://stackoverflow.com/questions/59115305/how-do-i-avoid-allocations-in-iteratorflat-map/59115359#59115359", "title": "How do I avoid allocations in Iterator::flat_map?", "body": "<p>You can use an <a href=\"https://docs.rs/arrayvec/0.5.1/arrayvec/struct.ArrayVec.html\" rel=\"nofollow noreferrer\"><code>ArrayVec</code></a> for this.</p>\n\n<pre><code>let v = vec![1, 2, 3];\nlet new_v: Vec&lt;_&gt; = v.iter()\n    .flat_map(|&amp;x| ArrayVec::from([x, x * x]))\n    .collect();\n</code></pre>\n\n<p>Making arrays be by-value iterators, so that you wouldn't need <code>ArrayVec</code> has been discussed, see <a href=\"https://github.com/rust-lang/rust/issues/25725\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/25725</a> and the linked PRs.</p>\n"}, {"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": false, "score": 1, "last_activity_date": 1575143598, "creation_date": 1575143598, "answer_id": 59119705, "question_id": 59115305, "link": "https://stackoverflow.com/questions/59115305/how-do-i-avoid-allocations-in-iteratorflat-map/59119705#59119705", "title": "How do I avoid allocations in Iterator::flat_map?", "body": "<p>If your iterator is small and you don't want any external dependencies, a short iterator can be constructed from <a href=\"https://doc.rust-lang.org/stable/std/iter/fn.once.html\" rel=\"nofollow noreferrer\"><code>std::iter::once</code></a> and <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.chain\" rel=\"nofollow noreferrer\"><code>std::iter::Iterator::chain</code></a>. For example,</p>\n\n<pre><code>use std::iter;\n\nlet v = vec![1, 2, 3];\nlet new_v: Vec&lt;_&gt; = v\n    .iter()\n    .flat_map(|&amp;x| iter::once(x).chain(iter::once(x * x)))\n    .collect();\nprintln!(\"{:?}\", new_v);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e429f28f6f086d7d0d964ef2f3493705\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>This could be made into a macro, though be aware that using this for too many elements may cause the recursion limit to be reached. If you're making an iterator for more than a few dozen elements, it's probably not too bad to have an allocation. If you really need the slight increase in performance, nnnmmm's solution is probably better.</p>\n\n<pre><code>macro_rules! small_iter {\n    () =&gt; { std::iter::empty() };\n    ($x: expr) =&gt; {\n        std::iter::once($x)\n    };\n    ($x: expr, $($y: tt)*) =&gt; {\n        std::iter::once($x).chain(small_iter!($($y)*))\n    };\n}\n\nfn main() {\n    let v = vec![1, 2, 3];\n    let new_v: Vec&lt;_&gt; = v\n        .iter()\n        .flat_map(|&amp;x| small_iter!(x, x * x))\n        .collect();\n    println!(\"{:?}\", new_v);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fe3aae0efa58097d02989c94b041e30b\" rel=\"nofollow noreferrer\">(playground)</a></p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1617448526, "post_id": 66924755, "comment_id": 118309196, "body": "To be clear, the &quot;this&quot; that may be deprecated is creation with the <code>new</code> function, not <code>array::IntoIter</code> itself. If arrays ever do get <code>IntoIterator</code>, you&#39;ll be able to just write <code>flat_map(|&amp;x| [x, x * x])</code>."}], "tags": [], "owner": {"reputation": 650, "user_id": 1376941, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/6b368d290fc872ee616794d15bcf8f7f?s=128&d=identicon&r=PG", "display_name": "Cheezey", "link": "https://stackoverflow.com/users/1376941/cheezey"}, "is_accepted": false, "score": 1, "last_activity_date": 1617394559, "creation_date": 1617394559, "answer_id": 66924755, "question_id": 59115305, "link": "https://stackoverflow.com/questions/59115305/how-do-i-avoid-allocations-in-iteratorflat-map/66924755#66924755", "title": "How do I avoid allocations in Iterator::flat_map?", "body": "<p>As of version 1.51.0, the struct <code>core::array::IntoIter</code> has been stabilized. You can use it like this:</p>\n<pre><code>use core::array;\n\nlet v = vec![1, 2, 3];\nlet new_v: Vec&lt;_&gt; = v.iter()\n    .flat_map(|&amp;x| array::IntoIter::new([x, x * x]))\n    .collect();\n</code></pre>\n<p>The documentation warns that this may be deprecated in the future when <code>IntoIterator</code> is implemented for arrays, but currently it's the easiest way to do this.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9363390"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 543, "favorite_count": 0, "accepted_answer_id": 59115359, "answer_count": 3, "score": 1, "last_activity_date": 1617394559, "creation_date": 1575110146, "last_edit_date": 1596049595, "question_id": 59115305, "link": "https://stackoverflow.com/questions/59115305/how-do-i-avoid-allocations-in-iteratorflat-map", "title": "How do I avoid allocations in Iterator::flat_map?", "body": "<p>I have a <code>Vec</code> of integers and I want to create a new <code>Vec</code> which contains those integers and squares of those integers. I could do this imperatively:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let v = vec![1, 2, 3];\nlet mut new_v = Vec::new(); // new instead of with_capacity for simplicity sake.\nfor &amp;x in v.iter() {\n    new_v.push(x);\n    new_v.push(x * x);\n}\nprintln!(&quot;{:?}&quot;, new_v);\n</code></pre>\n<p>but I want to use iterators. I came up with this code:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let v = vec![1, 2, 3];\nlet new_v: Vec&lt;_&gt; = v.iter()\n    .flat_map(|&amp;x| vec![x, x * x])\n    .collect();\nprintln!(&quot;{:?}&quot;, new_v);\n</code></pre>\n<p>but it allocates an intermediate <code>Vec</code> in the <code>flat_map</code> function.</p>\n<p>How to use <code>flat_map</code> without allocations?</p>\n"}, {"tags": ["regex", "rust"], "comments": [{"owner": {"reputation": 14672, "user_id": 8967612, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EEhyd.png?s=128&g=1", "display_name": "41686d6564", "link": "https://stackoverflow.com/users/8967612/41686d6564"}, "edited": false, "score": 1, "creation_date": 1575101568, "post_id": 59114330, "comment_id": 104459316, "body": "I don&#39;t know Rust so I can&#39;t help you with the second part but if you can use Lookaheads, <a href=\"https://regex101.com/r/qlmuKu/1\" rel=\"nofollow noreferrer\">one regex pattern</a> would do the job: <code>^(?!.*(?:ab|cd|pq|xy))(?=.*[aeiou])(?=.*([a-z])\\1).+$</code>."}, {"owner": {"reputation": 927, "user_id": 2057275, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d48d0d144141bbc2e797b5a2f734836d?s=128&d=identicon&r=PG", "display_name": "raindev", "link": "https://stackoverflow.com/users/2057275/raindev"}, "edited": false, "score": 1, "creation_date": 1575104334, "post_id": 59114330, "comment_id": 104459802, "body": "Do you <i>need</i> to use a regex? It seems the rules can be reduced to list of sequences that should be contained and list of sequences that should not."}, {"owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "reply_to_user": {"reputation": 927, "user_id": 2057275, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d48d0d144141bbc2e797b5a2f734836d?s=128&d=identicon&r=PG", "display_name": "raindev", "link": "https://stackoverflow.com/users/2057275/raindev"}, "edited": false, "score": 0, "creation_date": 1575147068, "post_id": 59114330, "comment_id": 104469941, "body": "@raindev How will you express rule 3 in the question in your list o sequences?"}, {"owner": {"reputation": 927, "user_id": 2057275, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d48d0d144141bbc2e797b5a2f734836d?s=128&d=identicon&r=PG", "display_name": "raindev", "link": "https://stackoverflow.com/users/2057275/raindev"}, "edited": false, "score": 0, "creation_date": 1575147279, "post_id": 59114330, "comment_id": 104469991, "body": "@HossainAdnan You can include pairs of all the letters in the alphabet into the list of sequences that should be contained."}, {"owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "reply_to_user": {"reputation": 927, "user_id": 2057275, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d48d0d144141bbc2e797b5a2f734836d?s=128&d=identicon&r=PG", "display_name": "raindev", "link": "https://stackoverflow.com/users/2057275/raindev"}, "edited": false, "score": 0, "creation_date": 1575181383, "post_id": 59114330, "comment_id": 104475396, "body": "@raindev you\u2019re not serious are you? And there\u2019s no guarantee that the letters are ASCII only too."}, {"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1575267348, "post_id": 59114330, "comment_id": 104494810, "body": "You use backreferences (rule 3) and lookaround (rule 1), so this set of regular expressions will not be compiled. Besides the three rules seem not to be best fit by regular expressions (even if they were compilable). If you just want to get a working set of regular expressions to work than call <code>unwrap()</code> on the result of <code>RegexSet::new</code> to get the compiled RegexSet and use the filter expression <code>regexp.matches(line).iter().count() == 3</code> (all three rules must match)."}], "answers": [{"tags": [], "owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "is_accepted": true, "score": 1, "last_activity_date": 1575468307, "creation_date": 1575468307, "answer_id": 59177862, "question_id": 59114330, "link": "https://stackoverflow.com/questions/59114330/filter-strings-with-regex/59177862#59177862", "title": "Filter strings with regex", "body": "<p>If you're looking to use a single regex, then doing this via the <code>regex</code> crate (which, by design, and as documented, does not support look-around or backreferences) is probably not possible. You could use a <code>RegexSet</code>, but implementing your third rule would require using a regex that lists every repetition of a Unicode letter. This would not be as bad if you were okay limiting this to ASCII, but your comments suggest this isn't acceptable.</p>\n\n<p>So I think your practical options here are to either use a library that supports fancier regex features (such as <a href=\"https://crates.io/crates/fancy-regex\" rel=\"nofollow noreferrer\"><code>fancy-regex</code></a> for a pure Rust library, or <a href=\"https://crates.io/crates/pcre2\" rel=\"nofollow noreferrer\"><code>pcre2</code></a> if you're okay using a C library), or writing just a bit more code:</p>\n\n<pre><code>use regex::Regex;\n\nfn main() {\n    let corpus = \"\\\nbaz\nab\ncwm\nfoobar\nquux\nfoo pq bar\n\";\n\n    let blacklist = Regex::new(r\"ab|cd|pq|xy\").unwrap();\n    let vowels = Regex::new(r\"[aeiouy]\").unwrap();\n    let it = corpus\n        .lines()\n        .filter(|line| !blacklist.is_match(line))\n        .filter(|line| vowels.is_match(line))\n        .filter(|line| repeated_letter(line));\n    for line in it {\n        println!(\"{}\", line);\n    }\n}\n\nfn repeated_letter(line: &amp;str) -&gt; bool {\n    let mut prev = None;\n    for ch in line.chars() {\n        if prev.map_or(false, |prev| prev == ch) {\n            return true;\n        }\n        prev = Some(ch);\n    }\n    false\n}\n</code></pre>\n\n<p>Playground link: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c0928793474af1f9c0180c1ac8fd2d47\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c0928793474af1f9c0180c1ac8fd2d47</a></p>\n"}], "owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 0, "accepted_answer_id": 59177862, "answer_count": 1, "score": 0, "last_activity_date": 1575468307, "creation_date": 1575100496, "question_id": 59114330, "link": "https://stackoverflow.com/questions/59114330/filter-strings-with-regex", "title": "Filter strings with regex", "body": "<p>I need to filter (select) strings that follow certain rules, print them and count the number filtered strings. The input is a big string and I need to apply the following rules on each line:</p>\n\n<ol>\n<li>line must not contain any of <code>ab</code>, <code>cd</code>, <code>pq</code>, or <code>xy</code></li>\n<li>line must contain any of the vowels</li>\n<li>line must contain a letter that repeats itself, like <code>aa</code>, <code>ff</code>, <code>yy</code> etc</li>\n</ol>\n\n<p>I'm using the <code>regex</code> crate and it provides <a href=\"https://docs.rs/regex/1.3.1/regex/struct.RegexSet.html\" rel=\"nofollow noreferrer\"><code>regex::RegexSet</code></a> so I can combine multiple rules. The rules I added are as follows</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let regexp = regex::RegexSet::new(&amp;[\n        r\"^((?!ab|cd|pq|xy).)*\",         // rule 1\n        r\"((.)\\1{9,}).*\",                // rule 3\n        r\"(\\b[aeiyou]+\\b).*\",            // rule 2\n    ])\n</code></pre>\n\n<p>But I don't know how to use these rules to filter the lines and  iterate over them.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn p1(lines: &amp;str) -&gt; u32 {\n    lines\n      .split_whitespace().filter(|line| { /* regex filter goes here */ })\n      .map(|line| println!(\"{}\", line))\n      .count() as u32\n}\n</code></pre>\n\n<p>Also the compiler says that the crate doesn't support look-around, including look-ahead and look-behind.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 0, "last_activity_date": 1575093501, "creation_date": 1575093501, "answer_id": 59113634, "question_id": 59113136, "link": "https://stackoverflow.com/questions/59113136/why-can-i-convert-to-another-reference-struct-without-error/59113634#59113634", "title": "Why can I convert to another reference struct without error?", "body": "<p>Compiler usually doesn't allow any unsafe code to be written outside <code>unsafe</code> blocks, but there are known <a href=\"https://github.com/rust-lang/rust/labels/I-unsound%20%F0%9F%92%A5?page=2&amp;q=is%3Aopen+label%3A%22I-unsound+%F0%9F%92%A5%22\" rel=\"nofollow noreferrer\">soundness issues</a> in the compiler and language itself. Some crates and especially standard library rely on <code>unsafe</code> implementations under the hood, to provide safe abstractions.</p>\n\n<p>You are not 100% protected, like in any language, but practically you can be sure that if safe rust program compiles than it will work without undefined behavior.</p>\n\n<p>Your code is perfectly safe, because it compiled without errors.</p>\n\n<p>Core problem that this part of code tries to solve is method call ambiguity.</p>\n\n<pre><code>                    (&amp;span as  &amp;rcdom::Node).text();\n                    (&amp;span as  &amp;Handle).text()\n</code></pre>\n\n<p>Consider if I change it to <code>span.text()</code>. What method compiler should call? <code>Handle::text</code>? <code>rcdom::Node::text</code>? Rust compiler doesn't have rules to deside what to call in this particular case.</p>\n\n<p>We have two options. First is to use <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html#fully-qualified-syntax-for-disambiguation-calling-methods-with-the-same-name\" rel=\"nofollow noreferrer\">fully-qualified syntax</a></p>\n\n<pre><code>rcdom::Node::text(&amp;span);\nHandle::text(&amp;span)\n</code></pre>\n\n<p>Actually it's suggested by <code>rustc</code>. </p>\n\n<pre><code>error[E0034]: multiple applicable items in scope\n  --&gt; src/main.rs:20:5\n   |\n20 |     A::test();\n   |     ^^^^^^^ multiple `test` found\n   |\nnote: candidate #1 is defined in an impl of the trait `Trait1` for the type `A`\n  --&gt; src/main.rs:12:5\n   |\n12 |     fn test() {}\n   |     ^^^^^^^^^\n   = help: to disambiguate the method call, write `Trait1::test(...)` instead\nnote: candidate #2 is defined in an impl of the trait `Trait2` for the type `A`\n  --&gt; src/main.rs:16:5\n   |\n16 |     fn test() {}\n   |     ^^^^^^^^^\n   = help: to disambiguate the method call, write `Trait2::test(...)` instead\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e1ea447633fe4d9fcf3b8fe911a5376c\" rel=\"nofollow noreferrer\">(Playground link)</a></p>\n\n<p>Second is to cast types around. Cast from <code>&amp;A</code> to <code>&amp;dyn TraitN</code>. (More about <a href=\"https://stackoverflow.com/questions/50650070/what-does-dyn-mean-in-a-type\"><code>dyn</code> keyword for trait objects</a>) is always safe is <code>A</code> implements trait <code>TraitN</code>.</p>\n\n<p>Trait objects are unsized, it means that compiler can't understand how much memory it should allocate for particular trait object, because it can be implemented by many types and exists solely with its implementers. Size can vary between different types implementing trait.</p>\n\n<p>Because of that you can't cast <code>A</code> directly. Even when compiler knows that trait object will always be <code>A</code> in this case, trait objects are unsized by their nature.</p>\n\n<pre><code>\nerror[E0620]: cast to unsized type: `A` as `dyn Trait1`\n  --&gt; src/main.rs:20:5\n   |\n20 |     (A as Trait1).test()\n   |     ^^^^^^^^^^^^^\n   |\nhelp: consider using a box or reference as appropriate\n  --&gt; src/main.rs:20:6\n   |\n20 |     (A as Trait1).test()\n   |      ^\n</code></pre>\n\n<p>You can borrow reference to <code>A</code> so you will get reference which size is fixed and cast it to a <code>&amp;dyn TraitN</code> which size is also fixed (because it's reference to). So you get out object with type <code>&amp;dyn TraitN</code> which method call can be easily made, without ambiguities. </p>\n\n<pre><code>    let a: &amp;dyn Trait1 = &amp;A as &amp;dyn Trait1;\n    a.test()\n</code></pre>\n\n<p>You are essentially erasing type of <code>A</code>, treating memory to which it points as a trait. </p>\n"}], "owner": {"reputation": 3221, "user_id": 2245634, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/OHoy2.jpg?s=128&g=1", "display_name": "Amit\u0101bha", "link": "https://stackoverflow.com/users/2245634/amit%c4%81bha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 59113634, "answer_count": 1, "score": 0, "last_activity_date": 1575096976, "creation_date": 1575087075, "last_edit_date": 1575096976, "question_id": 59113136, "link": "https://stackoverflow.com/questions/59113136/why-can-i-convert-to-another-reference-struct-without-error", "title": "Why can I convert to another reference struct without error?", "body": "<p>I wrote a example,and run without compiler error</p>\n\n<pre><code>use std::collections::HashSet;\nuse std::error::Error;\n\nuse html5ever::rcdom;\nuse html5ever::rcdom::Handle;\nuse reqwest;\nuse soup::{prelude, QueryBuilder};\nuse soup::prelude::*;\n\nuse testquestion::testtrait::Test;\n\nfn main() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let resp = reqwest::get(\"https://docs.rs/soup/0.1.0/soup/\")?;\n    let soup = Soup::from_reader(resp)?;\n    let result = soup\n        .tag(\"section\")\n        .attr(\"id\", \"main\")\n        .find()\n        .and_then(|section:Handle| -&gt; Option&lt;String&gt; {\n            section\n                .tag(\"span\")\n                .attr(\"class\", \"in-band\")\n                .find()\n                .map(|span:Handle| -&gt; String {\n                    (&amp;span as  &amp;rcdom::Node).text();\n                    (&amp;span as  &amp;Handle).text()\n                }\n                )\n        });\n    assert_eq!(result, Some(\"Crate soup\".to_string()));\n    Ok(())\n}\n</code></pre>\n\n<p>but I'm confused about </p>\n\n<pre><code> (&amp;span as  &amp;rcdom::Node).text();\n (&amp;span as  &amp;Handle).text()\n</code></pre>\n\n<p>trait NodeExt have text method,and struct Node and Handle implement it.\nbut why can I convert reference of struct handle to other reference (handle and node) without compiler error?\nis it safe? I'm complete novice in rust.</p>\n\n<pre><code>pub trait NodeExt: Sized {\n /// Retrieves the text value of this element, as well as it's child elements\n    fn text(&amp;self) -&gt; String {\n        let node = self.get_node();\n        let mut result = vec![];\n        extract_text(node, &amp;mut result);\n        result.join(\"\")\n    }\n}\n\nimpl&lt;'node&gt; NodeExt for &amp;'node rcdom::Node {\n    #[inline(always)]\n    fn get_node(&amp;self) -&gt; &amp;rcdom::Node {\n        self\n    }\n}\n\nimpl NodeExt for Handle {\n    #[inline(always)]\n    fn get_node(&amp;self) -&gt; &amp;rcdom::Node {\n        &amp;*self\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "avl-tree"], "comments": [{"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1575106585, "post_id": 59111975, "comment_id": 104460256, "body": "There is a logic problem in your code: <code>let current_tree = ...</code> creates a new local variable. Yet the algorithm could only work if <code>current_tree</code> is reassigned in the loop. If you initialize <code>current_tree</code> as <code>mut</code> and remove the <code>let</code> at the reassignments, then the compile errors will show up. Yet this was the easy part."}], "answers": [{"tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": false, "score": 2, "last_activity_date": 1575095576, "creation_date": 1575095576, "answer_id": 59113812, "question_id": 59111975, "link": "https://stackoverflow.com/questions/59111975/rust-implement-avl-tree-and-error-thread-main-panicked-at-already-borrowed/59113812#59113812", "title": "Rust: Implement AVL Tree and error: thread &#39;main&#39; panicked at &#39;already borrowed: BorrowMutError&#39;", "body": "<p>Manually implementing data structures such as linked list, tree, graph are not task for novices, because of memory safety rules in language. I suggest you to read <a href=\"https://rust-unofficial.github.io/too-many-lists/index.html\" rel=\"nofollow noreferrer\">Too Many Linked Lists</a> tutorial, which discusses how to implement safe and unsafe linked lists in Rust right way. </p>\n\n<p>Also read about <a href=\"https://en.wikipedia.org/wiki/Variable_shadowing\" rel=\"nofollow noreferrer\">name shadowing</a>.\nYour error is that inside a cycle you try to borrow mutable something which is already borrowed as immutable.</p>\n\n<pre><code>let node_key = &amp;current_node.borrow().key; // Borrow as immutable\n\nmatch node_key.cmp(&amp;value) {\n    Ordering::Less =&gt; { let current_tree = &amp;mut current_node.borrow_mut().right; }, // Create a binding which will be immediately deleted and borrow as mutable.\n</code></pre>\n\n<p>And I recommend you to read <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">Rust book</a> to learn rust.</p>\n"}, {"comments": [{"owner": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "edited": false, "score": 0, "creation_date": 1575254879, "post_id": 59115971, "comment_id": 104492000, "body": "thanks for your detailed response. If I understand you correct, <code>Treeset::root</code> will just creates a new <code>Option&lt;Rc&lt;RefCell&lt;TreeNode&lt;T&gt;&gt;&gt;&gt;</code> ? What does <code>current_node.child(value)</code> do? Its type is <code>Rc&lt;RefCell&lt;TreeNode&lt;T&gt;&gt;&gt;</code>. How to implement this function for <code>Rc</code>?"}, {"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "reply_to_user": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "edited": false, "score": 0, "creation_date": 1575261082, "post_id": 59115971, "comment_id": 104493210, "body": "You are right. The original implementation did not set the parent. That means, that <code>child(parent:Rc&lt;RefCell&lt;TreeNode&lt;T&gt;&gt;&gt;, value:T)</code> would be a proper signature. The rest is syntactical sugar - I added it now."}, {"owner": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "edited": false, "score": 0, "creation_date": 1575311717, "post_id": 59115971, "comment_id": 104515671, "body": "I tried this, and the code runs without stopping. There might be a circular reference somewhere."}, {"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "reply_to_user": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "edited": false, "score": 0, "creation_date": 1575315970, "post_id": 59115971, "comment_id": 104517349, "body": "The problem is your <code>println!(&quot;Tree: {:#?}&quot;, &amp;new_avl_tree);</code>. You will have to implement <code>Display</code> or <code>Debug</code> and exclude <code>the parent field from been displayed. Otherwise </code>parent` produces the circular reference (as you observe it)."}], "tags": [], "owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "is_accepted": false, "score": 2, "last_activity_date": 1575260612, "last_edit_date": 1575260612, "creation_date": 1575115344, "answer_id": 59115971, "question_id": 59111975, "link": "https://stackoverflow.com/questions/59111975/rust-implement-avl-tree-and-error-thread-main-panicked-at-already-borrowed/59115971#59115971", "title": "Rust: Implement AVL Tree and error: thread &#39;main&#39; panicked at &#39;already borrowed: BorrowMutError&#39;", "body": "<p>First let us correct your algorithm. The following lines are incorrect:</p>\n\n<pre><code>let current_tree = &amp;mut current_node.borrow_mut().right;\n...\nlet current_tree = &amp;mut current_node.borrow_mut().left;\n</code></pre>\n\n<p>Both do not reassign a value to <code>current_tree</code> but create a new (unused) one (@Inline refers to it as Name shadowing). Remove the <code>let</code> and make <code>current_tree</code> <code>mut</code>.</p>\n\n<p>Now we get a compiler error <code>temporary value dropped while borrowed</code>. Probably the compiler error message did mislead you. It tells you to use <code>let</code> to increase the lifetime, and this would be right if you used the result in the same scope, but no let can increase the lifetime beyond the scope.</p>\n\n<p>The problem is that you cannot pass out a reference to a value owned by a loop (as <code>current_node.borrow_mut.right</code>). So it would be better to use <code>current_tree</code> as owned variable. Sadly this means that many clever tricks in your code will not work any more.</p>\n\n<p>Another problem in the code is the multiple borrow problem (your original runtime warning is about this). You cannot call <code>borrow()</code> and <code>borrow_mut()</code> on the same <code>RefCell</code> without panic(that is the purpose of <code>RefCell</code>).</p>\n\n<p>So after finding the problems in your code, I got interested in how I would write the code. And now that it is written, I thought it would be fair to share it:\n    fn insert(&amp;mut self, value: T) -> bool {\n      if let None = self.root {\n        self.root = TreeSet::root(value);\n        return true;\n      }\n      let mut current_tree = self.root.clone();</p>\n\n<pre><code>  while let Some(current_node) = current_tree {\n    let mut borrowed_node = current_node.borrow_mut();\n    match borrowed_node.key.cmp(&amp;value) {\n      Ordering::Less =&gt; {\n        if let Some(next_node) = &amp;borrowed_node.right {\n          current_tree = Some(next_node.clone());\n        } else {\n          borrowed_node.right = current_node.child(value);\n          return true;\n        }\n      }\n      Ordering::Equal =&gt; {\n        return false;\n      }\n      Ordering::Greater =&gt; {\n        if let Some(next_node) = &amp;borrowed_node.left {\n          current_tree = Some(next_node.clone());\n        } else {\n          borrowed_node.left = current_node.child(value);\n          return true;\n        }\n      }\n    };\n  }\n  true\n}\n\n//...\n\ntrait NewChild&lt;T: Ord&gt; {\n  fn child(&amp;self, value: T) -&gt; AVLTree&lt;T&gt;;\n}\nimpl&lt;T: Ord&gt; NewChild&lt;T&gt; for Rc&lt;RefCell&lt;TreeNode&lt;T&gt;&gt;&gt; {\n  fn child(&amp;self, value: T) -&gt; AVLTree&lt;T&gt; {\n    Some(Rc::new(RefCell::new(TreeNode {\n      key: value,\n      left: None,\n      right: None,\n      parent: Some(self.clone()),\n    })))\n  }\n}\n</code></pre>\n\n<p>One will have to write the two methods <code>child(value:T)</code> and <code>root(value:T)</code> to make this compile.</p>\n"}], "owner": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 441, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1575260612, "creation_date": 1575070393, "last_edit_date": 1592644375, "question_id": 59111975, "link": "https://stackoverflow.com/questions/59111975/rust-implement-avl-tree-and-error-thread-main-panicked-at-already-borrowed", "title": "Rust: Implement AVL Tree and error: thread &#39;main&#39; panicked at &#39;already borrowed: BorrowMutError&#39;", "body": "<p>I have the following tree structure:</p>\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\nuse std::cmp;\nuse std::cmp::Ordering;\n\ntype AVLTree&lt;T&gt; = Option&lt;Rc&lt;RefCell&lt;TreeNode&lt;T&gt;&gt;&gt;&gt;;\n\n#[derive(Debug, PartialEq, Clone)]\nstruct TreeSet&lt;T: Ord&gt; {\n    root: AVLTree&lt;T&gt;,\n}\n\nimpl&lt;T: Ord&gt; TreeSet&lt;T&gt; {\n    fn new() -&gt; Self {\n        Self { \n            root: None \n        }\n    }\n\n    fn insert(&amp;mut self, value: T) -&gt; bool {\n        let current_tree = &amp;mut self.root;\n\n        while let Some(current_node) = current_tree {\n\n            let node_key = &amp;current_node.borrow().key;\n          \n            match node_key.cmp(&amp;value) {\n                Ordering::Less =&gt; { let current_tree = &amp;mut current_node.borrow_mut().right; },\n                Ordering::Equal =&gt; {\n                    return false;\n                }\n                Ordering::Greater =&gt; { let current_tree = &amp;mut current_node.borrow_mut().left; },\n            }\n        }\n\n        *current_tree = Some(Rc::new(RefCell::new(TreeNode {\n            key: value,\n            left: None,\n            right: None,\n            parent: None\n        })));\n\n        true\n    }\n\n}\n\n\n#[derive(Clone, Debug, PartialEq)]\nstruct TreeNode&lt;T: Ord&gt; {\n    pub key: T,\n    pub parent: AVLTree&lt;T&gt;,\n    left: AVLTree&lt;T&gt;,\n    right: AVLTree&lt;T&gt;,\n}\n\n\nfn main() {\n    let mut new_avl_tree: TreeSet&lt;u32&gt; = TreeSet::new();\n    new_avl_tree.insert(3);\n    new_avl_tree.insert(5);\n    println!(&quot;Tree: {:#?}&quot;, &amp;new_avl_tree);\n}\n</code></pre>\n<p>Building with <code>cargo build</code> is fine, but when I run <code>cargo run</code>, I got the below error:</p>\n<blockquote>\n<p>thread 'main' panicked at 'already borrowed: BorrowMutError', src\\libcore\\result.rs:1165:5</p>\n<p>note: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace. error: process didn't</p>\n<p>exit successfully: <code>target\\debug\\avl-tree.exe</code> (exit code: 101)</p>\n</blockquote>\n<p>If i just call <code>insert(3)</code>, it will be fine and my tree gets printed correctly. However, if I <code>insert(5)</code> after <code>insert(3)</code>, I will get that error.</p>\n<p>How do I fix that?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1575061251, "post_id": 59110601, "comment_id": 104452977, "body": "Related (or possibly a duplicate): <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\" title=\"why cant i store a value and a reference to that value in the same struct\">stackoverflow.com/questions/32300132/&hellip;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575064853, "post_id": 59110601, "comment_id": 104453874, "body": "The problem with a question like this is you&#39;re basically asking for software architecture advice, but have abstracted away all the problem-specific details like data dependencies and access patterns which would inform the decision, and architecture doesn&#39;t work that way. Sure, any of the approaches you mentioned might be an appropriate way to replace garbage collected pointers in <i>some</i> programs, but none of them will be appropriate for <i>every</i> program."}, {"owner": {"reputation": 305, "user_id": 1098457, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5a8564eea47da1f719b1fbbd778dc74f?s=128&d=identicon&r=PG", "display_name": "Peter", "link": "https://stackoverflow.com/users/1098457/peter"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575070475, "post_id": 59110601, "comment_id": 104455001, "body": "@trentcl is there a better place to ask this question? I guess what I&#39;d like to find is an outline of the different design patterns Rust users use for this kind of situation. StackOverflow is probably not appropriate since you&#39;re right, it is more of an architecture question. And as Sven Marnach pointed out there are probably plenty of duplicates here."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1575070878, "post_id": 59110601, "comment_id": 104455054, "body": "@Peter, you&#39;d be welcome to ask and discuss this in <a href=\"https://www.reddit.com/r/rust/\" rel=\"nofollow noreferrer\">reddit.com/r/rust</a>"}, {"owner": {"reputation": 305, "user_id": 1098457, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5a8564eea47da1f719b1fbbd778dc74f?s=128&d=identicon&r=PG", "display_name": "Peter", "link": "https://stackoverflow.com/users/1098457/peter"}, "edited": false, "score": 0, "creation_date": 1575079852, "post_id": 59110601, "comment_id": 104456267, "body": "Thanks @ArtemGr--looks like <a href=\"https://www.reddit.com/r/rust/comments/e31tan/how_much_different_is_rust_exactly_from_classic/\" rel=\"nofollow noreferrer\">this</a> is a similar question to what I&#39;m after."}, {"owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "edited": false, "score": 0, "creation_date": 1575095920, "post_id": 59110601, "comment_id": 104458342, "body": "Do you really need <code>RefCell</code> when using <code>Rc</code>? Do you modify resources inside <code>production_cost</code>? It&#39;s actually the way to solve such lifetime issues in C++ and in Rust too."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 3, "creation_date": 1575104706, "post_id": 59110601, "comment_id": 104459878, "body": "In C++ you use <code>*</code>, not <code>&amp;</code>, so what makes you think that in Rust you can get away with using <code>&amp;</code>? Their use is pretty much identical. Either use <code>*mut Resource</code> if you want to manage that yourself, or use Rc&lt;RefCell&lt;Resource&gt;&gt; which will panic if you mess up. Yeah, wrong access of <code>*mut</code> might segfault, but it&#39;s not a guarantee."}, {"owner": {"reputation": 379, "user_id": 818006, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Vt77B.jpg?s=128&g=1", "display_name": "Boss Man", "link": "https://stackoverflow.com/users/818006/boss-man"}, "edited": false, "score": 0, "creation_date": 1603841927, "post_id": 59110601, "comment_id": 114163825, "body": "@Peter Im learning lifetimes too and Im at a point where Im doing self references and learned that they are wrong and then I stumbled on this post where you said <code>A Vec&lt;Resource&gt; of this form is impractical (impossible?) to build</code>. You said that because two <code>Resource&lt;&#39;a&gt;</code>s cannot be built at same time and hence they cannot have same lifetime aka <code>&#39;a</code>??"}], "owner": {"reputation": 305, "user_id": 1098457, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5a8564eea47da1f719b1fbbd778dc74f?s=128&d=identicon&r=PG", "display_name": "Peter", "link": "https://stackoverflow.com/users/1098457/peter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2637, "favorite_count": 3, "answer_count": 0, "score": 8, "last_activity_date": 1575059031, "creation_date": 1575059031, "question_id": 59110601, "link": "https://stackoverflow.com/questions/59110601/alternatives-for-self-referential-structs-in-rust", "title": "Alternatives for self-referential structs in Rust?", "body": "<p>There are tons of questions about self-referential structs in Rust here, and I think I've read them all, but I'm still having trouble wrapping my head around things. What kind of design patterns exist for dealing with self-referential structs in Rust? I'll lay out my thinking so that others can tell me where I'm going wrong (I have a feeling it's at the beginning).</p>\n\n<p>When I'm learning a new language I try to implement the same game, and for Rust I'm running into this problem: we have resources, some of which can be made from other resources. (Let's say they form a DAG.)</p>\n\n<p>My naive attempt to model it is this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Resource {\n  name: String,\n  production_cost: HashMap&lt;&amp;Resource, i32&gt;,\n  // other data\n}\n</code></pre>\n\n<p>We need a lifetime annotation for the reference, so it becomes <code>Resource&lt;'a&gt;</code> with a <code>HashMap&lt;&amp;'a Resource, i32&gt;</code>.</p>\n\n<p>A <code>Vec&lt;Resource&gt;</code> of this form is impractical (impossible?) to build, so another attempt would be to go up a level:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Resource {\n  name: String,\n  // other data\n}\n\nstruct ResourceConfig {\n  resources: Vec&lt;Resource&gt;,\n  resource_costs: HashMap&lt;&amp;Resource, HashMap&lt;&amp;Resource, i32&gt;&gt;,\n}\n</code></pre>\n\n<p>I can't figure out a way to construct one of these, either. The next two options I can come up with are:</p>\n\n<ol>\n<li>Wrap everything in RefCell/Rc's (or Arc/Mutexes). This seems to require way too much typing, not to mention the reference counting performance overhead (which I'm sure is trivial in my case).</li>\n<li>Pass around indices to a master vector.</li>\n</ol>\n\n<p>So the end result (2) looks like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type RIndex = usize;\ntype ResourceSet = HashMap&lt;RIndex, i32&gt;;\n\nstruct Resource {\n  name: String,\n  // other data\n}\n\nstruct ResourceConfig {\n  resources: Vec&lt;Resource&gt;,\n  resource_costs: HashMap&lt;RIndex, ResourceSet&gt;,\n}\n</code></pre>\n\n<p>And the rest of the code just passes around a bunch of <code>RIndex</code>'es (and holds on to a <code>&amp;ResourceConfig</code> reference to do the conversion). I can upgrade <code>RIndex</code> from a type alias to a newtype for type safety at the cost of keystrokes (probably worth it?), but in the end I feel like I'm just doing my own pointer management--instead of worrying about invalid/null pointers I'm worrying about getting a <code>RIndex</code> out of range.</p>\n\n<p>What am I missing here? (Unsafe code?)</p>\n\n<p>In C++, I would do something like:</p>\n\n<pre class=\"lang-c++ prettyprint-override\"><code>class Resource {\n  std::string name;\n  std::unordered_map&lt;Resource*, int&gt; production_cost;\n  // Probably wrap the unordered_map in its own class, maybe with a Resource reference, etc.\n}\n</code></pre>\n\n<p>(Sure, I'd lose the lifetime guarantees but the resources would all live in the same object somewhere so it wouldn't really be hard to make work.)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575294798, "post_id": 59109453, "comment_id": 104507423, "body": "I voted to close this question because, like <a href=\"https://stackoverflow.com/questions/59095896/are-there-any-available-examples-of-the-use-of-the-crate-boolean-expression-in\">your last question</a>, it contains a lot of questions, which makes it hard to answer. It&#39;s basically a request for a tutorial, which is off-topic for SO, and it doesn&#39;t demonstrate research that would help an answerer know what you were having trouble with (I don&#39;t mean that you <i>did no research</i>, only that the question doesn&#39;t <i>show</i> what research you did)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575294919, "post_id": 59109453, "comment_id": 104507481, "body": "Since nobody linked you to it before, the <a href=\"https://stackoverflow.com/help/on-topic\">help center</a> and <a href=\"https://stackoverflow.com/questions/how-to-ask\">How to Ask</a> contain a lot of helpful advice that will prevent future questions from being closed. Some questions just aren&#39;t a good fit for SO; that doesn&#39;t mean they&#39;re bad questions, but they just don&#39;t fit well in the Q&amp;A format. We&#39;ll see if enough other people agree with me that this one should be closed, but anyway, I hope this helps you find the answers you need in the future."}], "answers": [{"tags": [], "owner": {"reputation": 341, "user_id": 4232861, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/F0ayV.jpg?s=128&g=1", "display_name": "dogwood", "link": "https://stackoverflow.com/users/4232861/dogwood"}, "is_accepted": false, "score": 2, "last_activity_date": 1575225790, "last_edit_date": 1575225790, "creation_date": 1575184902, "answer_id": 59123423, "question_id": 59109453, "link": "https://stackoverflow.com/questions/59109453/how-do-i-use-the-rust-crate-boolean-expression-to-implement-a-simple-logic-cir/59123423#59123423", "title": "How do I use the Rust crate &#39;boolean_expression&#39; to implement a simple logic circuit?", "body": "<p>The author of Rust crate \"boolean_expression\" has provided the following answer as a 'main.rs' file.</p>\n\n<pre><code>// Add this line to dependencies:  boolean_expression = \"0.3.9\"\n// for example, add the line under dependencies in Cargo.toml\n\n\nuse boolean_expression::*;\n\nfn main() {\n    let mut bdd = BDD::new();\n\n    // Build the circuit. The arguments passed to 'bdd.terminal()'\n    // can be any type, as long as they are all the same type (the \n    // 'BDD' type is polymorphic on its labels); here, we use strings.\n    let a = bdd.terminal(\"A\");\n    let b = bdd.terminal(\"B\");\n    let c = bdd.terminal(\"C\");\n    let d = bdd.and(a, b);\n    let e = bdd.or(c, d);\n\n    // Can 'e' be true at all? It should be.\n    assert!(bdd.sat(e));\n\n    // Print the expression equivalent of 'e'.\n    println!(\"e = {:?}\", bdd.to_expr(e));\n\n    // Determine a satisfying assignment of [a, b, c] to let `e` be TRUE.\n    // `sat` is an Option&lt;HashMap&lt;T, bool&gt;&gt;:\n    //   - if `None`, then there is no satisfying assignment.\n    //       (We already checked for this case above.)\n    //   - if `Some(hashmap)`, then the hashmap gives a mapping from\n    //       values of type T (here, the strings we used above) to\n    //       boolean values.\n    let sat = bdd.sat_one(e);\n    match sat {\n        None =&gt; panic!(\"Shouldn't happen!\"),\n        Some(vars) =&gt; {\n            for (var, value) in &amp;vars {\n                println!(\"Satisfying assignment: var {} = {}\", var, value);\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 341, "user_id": 4232861, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/F0ayV.jpg?s=128&g=1", "display_name": "dogwood", "link": "https://stackoverflow.com/users/4232861/dogwood"}, "is_accepted": false, "score": 0, "last_activity_date": 1575332509, "last_edit_date": 1575332509, "creation_date": 1575259549, "answer_id": 59132525, "question_id": 59109453, "link": "https://stackoverflow.com/questions/59109453/how-do-i-use-the-rust-crate-boolean-expression-to-implement-a-simple-logic-cir/59132525#59132525", "title": "How do I use the Rust crate &#39;boolean_expression&#39; to implement a simple logic circuit?", "body": "<p>Here is a way to use the boolean_expression function bdd.from_expr().</p>\n\n<pre><code>let f = bdd.to_expr(e);     // create a usable expression\nlet g = bdd.from_expr(&amp;f);  // include the '&amp;' borrow symbol\n\nprintln!(\"f is {:?}\", f);   // print the expression\n\n</code></pre>\n\n<p>where e is a bdd, f is an expression that is printable, and g is a bdd.</p>\n"}], "owner": {"reputation": 341, "user_id": 4232861, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/F0ayV.jpg?s=128&g=1", "display_name": "dogwood", "link": "https://stackoverflow.com/users/4232861/dogwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 198, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1575332509, "creation_date": 1575051308, "last_edit_date": 1575151272, "question_id": 59109453, "link": "https://stackoverflow.com/questions/59109453/how-do-i-use-the-rust-crate-boolean-expression-to-implement-a-simple-logic-cir", "title": "How do I use the Rust crate &#39;boolean_expression&#39; to implement a simple logic circuit?", "body": "<p>I would like to use the Rust crate 'boolean_expression' to implement a simple digital logic circuit. For example, suppose we have a simple circuit consisting of two 2-input logic gates, a total of three binary input signals, A, B, and C, and one binary output signal, E.</p>\n\n<p>Let a first gate be a 2-input AND gate having input signals A and B and an output signal D. Let a second gate be a 2-input OR gate having inputs C and D and output E.</p>\n\n<pre><code>Circuit input signals: A, B, C\nCircuit output signal: E\n\nLogic gate equations:\nD = A &amp;&amp; B\nE = C || D\nwhere '&amp;&amp;' is the Boolean 'AND' and '||' is the Boolean 'OR'\n\n</code></pre>\n\n<p>Let us further suppose that we wish to implement a model of this circuit using reduced ordered binary decision diagrams (BDDs). In one common (Python, for example) implementation of a BDD package I'd define A, B, and C as Boolean variables with some sort of command such as 'let A = BDD.var' or something of that sort. I'd write the gate equations shown above as Boolean expressions. I'd apply some fixed Boolean values (True, False, possibly Don't_Care) to inputs A, B, C, or I'd simply ask \"What combinations of the inputs A, B, and C define the output E?\"</p>\n\n<p>Now, my question is, using the teachings of the Rust crate 'boolean_expression', how do I do that? How do I define input A as a Boolean variable? How do I define my two gates? How do I examine the output signal E to determine what combinations of the inputs A, B, and C define the output E? In short, what do I type--specifically--to use the features of the Rust crate 'boolean_expression'? If you can show me what to type--all of it--I can take it from there. Thank you.</p>\n\n<p>And, of course, the actual circuit I plan to implement is far more complex than this simple example.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1575041990, "post_id": 59107406, "comment_id": 104446791, "body": "Won&#39;t this code work as written?"}, {"owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1575044993, "post_id": 59107406, "comment_id": 104448059, "body": "@Cerberus On the second line in the code, I put a comment where the ID is supposed to go. It works if I put a number in there, but I&#39;d like that to be part of the configuration"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1575058300, "post_id": 59107406, "comment_id": 104452221, "body": "Features can only be turned on or off, and you can&#39;t pass in a parameter using them. You could use an environment variable, though, if you really want to."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1575062059, "post_id": 59107406, "comment_id": 104453190, "body": "Do you want to run the <i>compiler</i> in the embedded environment, or are you cross-compiling from your development machine? If the latter, it doesn&#39;t really matter whether your target platform supports environment variables, since you are only using them at compile time."}, {"owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575273409, "post_id": 59107406, "comment_id": 104496836, "body": "@SvenMarnach You are right: <a href=\"https://doc.rust-lang.org/std/macro.env.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/macro.env.html</a> The env! macro is at compile time. I thought it was at runtime. Thanks!"}], "owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 71, "favorite_count": 0, "closed_date": 1582053013, "answer_count": 0, "score": 2, "last_activity_date": 1575040812, "creation_date": 1575040812, "question_id": 59107406, "link": "https://stackoverflow.com/questions/59107406/can-rust-cargo-features-contain-a-value", "closed_reason": "Duplicate", "title": "Can Rust cargo features contain a value?", "body": "<p>I have a program that has two slight variations. I've added a feature in in Cargo.toml like this:</p>\n\n<pre><code>[features]\nanchor = []\n</code></pre>\n\n<p>In my program, every anchor app has an ID. I know environment variables are the way to go normally, but I'm not sure they work in embedded environments...</p>\n\n<p>Is it possible to embed a value in the feature that can be read by the code?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if cfg!(feature = \"anchor\") {\n    runner.add_program(AnchorProgram::new(/* anchor ID */));\n}\nelse {\n    runner.add_program(MasterProgram::new());\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 12452957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sqlK7.png?s=128&g=1", "display_name": "mayabyte", "link": "https://stackoverflow.com/users/12452957/mayabyte"}, "edited": false, "score": 0, "creation_date": 1575023554, "post_id": 59102920, "comment_id": 104438277, "body": "Actually, is there a way to do this when the closure is already stored in a variable? E.g. <code>let l = |x| x &lt; 10; let s = lambda_and_text!(l);</code>? This would make my code much neater but isn&#39;t strictly necessary to solve the underlying problem"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 23, "user_id": 12452957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sqlK7.png?s=128&g=1", "display_name": "mayabyte", "link": "https://stackoverflow.com/users/12452957/mayabyte"}, "edited": false, "score": 0, "creation_date": 1575024445, "post_id": 59102920, "comment_id": 104438663, "body": "No, this relies on the <code>stringify!</code> macro, which can&#39;t get a string out of variables. It only gives a string of whatever is passed to it as-it."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1575024484, "last_edit_date": 1575024484, "creation_date": 1575022824, "answer_id": 59102920, "question_id": 59102596, "link": "https://stackoverflow.com/questions/59102596/how-to-print-the-text-of-functions-variable-names-closures-etc-at-runtime/59102920#59102920", "title": "How to print the text of functions, variable names, closures, etc. at runtime?", "body": "<p>While the original code is not normally preserved in the binary in Rust, you can indeed build this using a macro:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct LambdaAndText(fn(i32) -&gt; bool, &amp;'static str);\n\nimpl LambdaAndText {\n    fn call(&amp;self, arg: i32) {\n        assert!((self.0)(arg), \"Abc condiditon failed: {}\", self.1);\n    }\n}\n\nmacro_rules! lambda_and_text {\n    (|$p:pat| $e:expr) =&gt; {\n        LambdaAndText(|$p| $e, stringify!($e))\n    };\n}\n\nfn main() {\n    let l = lambda_and_text!(|x| x &lt; 10);\n\n    l.call(5);\n    l.call(42);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fcbe842a6bd08d1338022359e4062234\" rel=\"nofollow noreferrer\">This prints <code>thread 'main' panicked at 'Abc condiditon failed: x &lt; 10', src/main.rs:5:9</code> as expected</a>.</p>\n"}], "owner": {"reputation": 23, "user_id": 12452957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sqlK7.png?s=128&g=1", "display_name": "mayabyte", "link": "https://stackoverflow.com/users/12452957/mayabyte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 59102920, "answer_count": 1, "score": 2, "last_activity_date": 1575035647, "creation_date": 1575021633, "last_edit_date": 1575035647, "question_id": 59102596, "link": "https://stackoverflow.com/questions/59102596/how-to-print-the-text-of-functions-variable-names-closures-etc-at-runtime", "title": "How to print the text of functions, variable names, closures, etc. at runtime?", "body": "<p>Let's say I have a struct as follows:</p>\n\n<pre><code>struct Abc {\n  a: i32,\n  b: fn(i32) -&gt; bool\n}\n</code></pre>\n\n<p>where <code>a</code> is just a stored value and <code>b</code> is a user-supplied closure that checks some condition upon <code>a</code>. If the condition evaluates to false at some point, I want to <code>panic!</code> and print some debug information about what went wrong.</p>\n\n<p>For example, if I set <code>b</code> to be <code>|x| x &lt; 10</code>, it's fairly easy to assert upon result of <code>b(a)</code>, but if the assertion fails the output looks something like:</p>\n\n<pre><code>panicked at 'assertion failed: (self.b)(self.a)'\n</code></pre>\n\n<p>which isn't very helpful. What I'd like to be able to print is something like:</p>\n\n<pre><code>panicked at 'Abc condiditon failed: x &lt; 10'\n</code></pre>\n\n<hr>\n\n<p>Basically, is there some way to get the 'text' of some code for debug message purposes? Getting it just as a string is enough, I don't need anything easily parseable. I suspect it'll involve some macro trickery if it's possible at all, but I wouldn't know where to begin.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 1750, "user_id": 11640763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tS29l.png?s=128&g=1", "display_name": "stud3nt", "link": "https://stackoverflow.com/users/11640763/stud3nt"}, "edited": false, "score": 1, "creation_date": 1575020096, "post_id": 59102067, "comment_id": 104436555, "body": "Welcome to StackOverflow @AbhiSingh, please read the <a href=\"https://stackoverflow.com/help/how-to-ask\">guide</a> on how to ask good question and edit your with required details."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575021164, "post_id": 59102067, "comment_id": 104437091, "body": "You seem to be running the wrong linker. Maybe <a href=\"https://github.com/rust-lang/cargo/issues/3687\" rel=\"nofollow noreferrer\">this issue on Github</a> helps?"}], "answers": [{"tags": [], "owner": {"reputation": 66, "user_id": 12457514, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GxMIF.png?s=128&g=1", "display_name": "Phi12ip", "link": "https://stackoverflow.com/users/12457514/phi12ip"}, "is_accepted": false, "score": 0, "last_activity_date": 1575044414, "creation_date": 1575044414, "answer_id": 59108203, "question_id": 59102067, "link": "https://stackoverflow.com/questions/59102067/why-im-getting-this-error-in-rust-while-running-cargo-in-terminal/59108203#59108203", "title": "why i&#39;m getting this error in rust? while running cargo in terminal", "body": "<p>Windows doesn't come with the tools you need out of the box. </p>\n\n<p>One way to get the tools is to download Visual Studio and make sure you check the box for C/C++ Development.</p>\n\n<p>Please do some searching around next time before you ask a new question. I'm pretty sure this is a common starting problem on Windows (having come across it myself)</p>\n"}], "owner": {"reputation": 1, "user_id": 11333991, "user_type": "registered", "profile_image": "https://graph.facebook.com/2230494677014203/picture?type=large", "display_name": "Abhi Singh", "link": "https://stackoverflow.com/users/11333991/abhi-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1575044414, "creation_date": 1575019582, "last_edit_date": 1575019704, "question_id": 59102067, "link": "https://stackoverflow.com/questions/59102067/why-im-getting-this-error-in-rust-while-running-cargo-in-terminal", "title": "why i&#39;m getting this error in rust? while running cargo in terminal", "body": "<pre><code>error: linking with `link.exe` failed: exit code: 1\n  |\n  = note: \"link.exe\" \"/NOLOGO\" \"/NXCOMPAT\" \"/LIBPATH:C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\" \"F:\\\\rust\\\\target\\\\debug\\\\deps\\\\rust-62f257c00b684def.15picq4yh55pcpvu.rcgu.o\" \"F:\\\\rust\\\\target\\\\debug\\\\deps\\\\rust-62f257c00b684def.4a6f0gpq6tahn2qf.rcgu.o\" \"F:\\\\rust\\\\target\\\\debug\\\\deps\\\\rust-62f257c00b684def.4t2qllwq7vgsjzz0.rcgu.o\" \"F:\\\\rust\\\\target\\\\debug\\\\deps\\\\rust-62f257c00b684def.4zhitfql72c5zw8t.rcgu.o\" \"F:\\\\rust\\\\target\\\\debug\\\\deps\\\\rust-62f257c00b684def.63vl4u1eiyxg147.rcgu.o\" \"F:\\\\rust\\\\target\\\\debug\\\\deps\\\\rust-62f257c00b684def.aln6nw8r8p9cjoc.rcgu.o\" \"/OUT:F:\\\\rust\\\\target\\\\debug\\\\deps\\\\rust-62f257c00b684def.exe\" \"F:\\\\rust\\\\target\\\\debug\\\\deps\\\\rust-62f257c00b684def.5nv92ivk74xr163.rcgu.o\" \"/OPT:REF,NOICF\" \"/DEBUG\" \"/NATVIS:C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\etc\\\\intrinsic.natvis\" \"/NATVIS:C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\etc\\\\liballoc.natvis\" \"/NATVIS:C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\etc\\\\libcore.natvis\" \"/LIBPATH:F:\\\\rust\\\\target\\\\debug\\\\deps\" \"/LIBPATH:C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libstd-f3cd9033b21bfd69.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libpanic_unwind-7177cc63e2247a71.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libhashbrown-dc4f9fa6045181bb.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\librustc_std_workspace_alloc-b42f2443bfe541d3.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libbacktrace-727167d019576e4a.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\librustc_demangle-b116c11df52ba1e2.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libunwind-d4c5a28b76348d5c.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libcfg_if-79bcbf9ce75fa48d.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\liblibc-c9478dd7b586b8cc.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\liballoc-c80eff7d74f3988c.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\librustc_std_workspace_core-fd0f5d5cd3b3863d.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libcore-49f9f21b6d32d457.rlib\" \"C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\\\\libcompiler_builtins-b32ee8ba444e5f7c.rlib\" \"advapi32.lib\" \"ws2_32.lib\" \"userenv.lib\" \"msvcrt.lib\"\n  = note: /usr/bin/link: extra operand \u2018/LIBPATH:C:\\\\Users\\\\Grandpa\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\x86_64-pc-windows-msvc\\\\lib\u2019\n          Try '/usr/bin/link --help' for more information.\n\n\nerror: aborting due to previous error\n\nerror: could not compile `rust`.\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1575020442, "post_id": 59101974, "comment_id": 104436708, "body": "The help message seems a little bit messed up. Also please read it, the solution is right there: <code>help: items from traits can only be used if the trait is in scope</code> <code>help: the following trait is implemented but not in scope, perhaps add a use for it: use soup::handle_ext::HandleExt;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 5, "last_activity_date": 1604586339, "last_edit_date": 1604586339, "creation_date": 1575028826, "answer_id": 59104387, "question_id": 59101974, "link": "https://stackoverflow.com/questions/59101974/the-trait-stdopstry-is-not-implemented-for-impl/59104387#59104387", "title": "the trait std::ops::Try is not implemented for impl", "body": "<p>The example is using <code>reqwest-0.9</code> (check <code>soup</code>'s manifest), which in turn is using the older blocking interface by default.</p>\n<p>You are using <code>reqwest-0.10</code>, which uses the async interface by default. This is why you get a <code>Future</code> in <code>reqwest::get(...)</code>, which in fact does not impl <code>Try</code>.</p>\n<p>Either use <code>reqwest-0.9</code> in your dependencies, use <code>reqwest::blocking::get()</code> or <code>request::get(...).await?</code> with all the async-bells and -whistles.</p>\n"}], "owner": {"reputation": 3221, "user_id": 2245634, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/OHoy2.jpg?s=128&g=1", "display_name": "Amit\u0101bha", "link": "https://stackoverflow.com/users/2245634/amit%c4%81bha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2351, "favorite_count": 0, "accepted_answer_id": 59104387, "answer_count": 1, "score": 2, "last_activity_date": 1604586339, "creation_date": 1575019136, "last_edit_date": 1575026112, "question_id": 59101974, "link": "https://stackoverflow.com/questions/59101974/the-trait-stdopstry-is-not-implemented-for-impl", "title": "the trait std::ops::Try is not implemented for impl", "body": "<p>I cloned <a href=\"https://gitlab.com/pwoolcoc/soup\" rel=\"nofollow noreferrer\">https://gitlab.com/pwoolcoc/soup</a> and ran the example file. Everything is ok, but when I create a new project with the same file as the example file, I encounter an error.\nthe code is:</p>\n\n<pre><code>use std::collections::HashSet;\nuse std::fmt::Error;\nuse soup::Soup;\nuse reqwest;\nfn main() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let resp = reqwest::get(\"https://docs.rs/soup/0.1.0/soup/\")?;\n    let soup = Soup::from_reader(resp)?;\n    let result = soup\n        .tag(\"section\")\n        .attr(\"id\", \"main\")\n        .find()\n        .and_then(|section| {\n            section\n                .tag(\"span\")\n                .attr(\"class\", \"in-band\")\n                .find()\n                .map(|span| span.text())\n        });\n    assert_eq!(result, Some(\"Crate soup\".to_string()));\n    Ok(())\n}\n</code></pre>\n\n<p>cargo file</p>\n\n<pre><code>[package]\nname = \"testquestion\"\nversion = \"0.1.0\"\nauthors = [\"wangyiran\"]\nedition = \"2018\"\n\n[dependencies]\nsoup = \"0.3\"\nreqwest =  { version = \"0.10.0-alpha.2\", features = [\"blocking\"] }\n</code></pre>\n\n<p>the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n   --&gt; src\\main.rs:6:16\n   | 6 |     let resp = reqwest::get(\"https://docs.rs/soup/0.1.0/soup/\")?;\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the `?` operator cannot be applied to type `impl std::future::Future`\n   |   = help: the trait `std::ops::Try` is not implemented for `impl std::future::Future`\n       = note: required by `std::ops::Try::into_result`\n\nerror[E0277]: `?` couldn't convert the error to `std::boxed::Box&lt;std::fmt::Error&gt;`\n   --&gt; src\\main.rs:7:39\n   | 7 |    let soup = Soup::from_reader(resp)?;\n   |                                          ^ the trait `std::convert::From&lt;std::io::Error&gt;` is not implemented for `std::boxed::Box&lt;std::fmt::Error&gt;`\n   |   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n       = help: the following implementations were found:\n            &lt;std::boxed::Box&lt;(dyn std::error::Error + 'a)&gt; as std::convert::From&lt;E&gt;&gt;\n            &lt;std::boxed::Box&lt;(dyn std::error::Error + 'static)&gt; as std::convert::From&lt;&amp;str&gt;&gt;\n            &lt;std::boxed::Box&lt;(dyn std::error::Error + 'static)&gt; as std::convert::From&lt;std::borrow::Cow&lt;'a, str&gt;&gt;&gt;\n            &lt;std::boxed::Box&lt;(dyn std::error::Error + 'static)&gt; as std::convert::From&lt;std::string::String&gt;&gt;\n          and 16 others   = note: required by `std::convert::From::from`\n\nerror[E0599]: no method named `tag` found for type `std::rc::Rc&lt;markup5ever::rcdom::Node&gt;` in the current scope\n   --&gt; src\\main.rs:14:18\n    | 14 |                 .tag(\"span\")\n    |                       ^^^ method not found in `std::rc::Rc&lt;markup5ever::rcdom::Node&gt;`\n    |   = help: items from traits can only be used if the trait is in scope \n        = help: the following trait is implemented but not in scope, perhaps add a `use` for it:\n    | 1  | use soup::handle_ext::HandleExt;\n    |\n</code></pre>\n"}, {"tags": ["multithreading", "rust", "thread-safety", "buffer"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1575010955, "post_id": 59099298, "comment_id": 104432761, "body": "Have you considered not implementing yourself and instead using something like <a href=\"https://docs.rs/crossbeam/0.3.2/crossbeam/sync/chase_lev/index.html\" rel=\"nofollow noreferrer\">docs.rs/crossbeam/0.3.2/crossbeam/sync/chase_lev/index.html</a> ? Not sure if that&#39;s applicable to your case, but API-wise it sounds like what you&#39;d want."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1575012883, "post_id": 59099298, "comment_id": 104433420, "body": "Side note: prefer using <code>Arc::clone()</code> over <code>arc.clone()</code>, so as to prevent confusion over whether you are cloning the vector or the Arc."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1575013004, "post_id": 59099298, "comment_id": 104433468, "body": "Also, s2 is now a value not a pointer, so writing it has no effect. You probably wanted to dereference s2 as <code>*s2 = 6;</code> not on the line above."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 1, "creation_date": 1575013182, "post_id": 59099298, "comment_id": 104433518, "body": "Regarding your error, you didn&#39;t need to get_mut on the vector at all. Locking a mutex doesn&#39;t require &amp;mut."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 1, "creation_date": 1575013286, "post_id": 59099298, "comment_id": 104433548, "body": "Regarding your question: your code doesn&#39;t seem to resemble anything about ring buffers. By &quot;periodically read from the ring buffer&quot;, do you mean it just <i>reads</i>, or does it <i>poll</i> (hence remove) something from the ring buffer? Please clarify."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1575018233, "post_id": 59099298, "comment_id": 104435658, "body": "First good step would be to get rid of a Vec by extracting a raw pointer from it and managing synchronization yourself. If you aren&#39;t willing to do that, you won&#39;t gain anything, whether that is knowledge or performance, and you might aswell just be using a crate that already did it for you. It&#39;s very easy to synchronize writing to a ring buffer using nothing but a single atomic index, reading out of it takes more thought, but it&#39;s doable."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1575024710, "post_id": 59099298, "comment_id": 104438783, "body": "In more recent releases of the <code>crossbeam</code> crate, <a href=\"https://docs.rs/crossbeam/0.7.3/crossbeam/queue/struct.ArrayQueue.html\" rel=\"nofollow noreferrer\"><code>ArrayQueue</code></a> provides a lock-free ring buffer."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575894803, "post_id": 59105632, "comment_id": 104707748, "body": "If you have multiple readers accessing the same location you&#39;re also trying to write to, <code>RwLock</code> can starve the writer because the reads may overlap. It&#39;s not quite as simple as &quot;use <code>RwLock</code> when you have multiple readers&quot;. Otherwise, good answer."}], "tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 1, "last_activity_date": 1575867251, "last_edit_date": 1575867251, "creation_date": 1575033727, "answer_id": 59105632, "question_id": 59099298, "link": "https://stackoverflow.com/questions/59099298/rust-writing-to-indices-of-a-vector-across-multiple-threads/59105632#59105632", "title": "Rust - writing to indices of a vector across multiple threads", "body": "<p>First, I would recommend you to use <code>std::sync::RwLock</code>, because it allows multiple readers to read data simultaneously. </p>\n\n<p>Second, spawning threads can lead to performance bottlenecks in your code. Try to use thread pool.</p>\n\n<p>Of course, the exact choice will vary depending on the result of benchmarks, but those are general recommendations.</p>\n\n<p>Your code is mostly correct, except one crucial part. You are using <code>Mutex</code> which implements <a href=\"https://doc.rust-lang.org/book/ch15-05-interior-mutability.html\" rel=\"nofollow noreferrer\">interior mutability</a> pattern and also provides thread-safety.</p>\n\n<p>Interior mutability moves compiletime checks of <code>XOR</code> borrowing rule (either N immutable borrows or just one mutable) to the run-time. So, <code>Mutex</code> ensures that any time there exists only one reader or only one writer. </p>\n\n<p>When you try to get mutable reference from <code>vec</code>, like this</p>\n\n<pre><code>vec.get_mut(..)\n</code></pre>\n\n<p>You are essentially ignoring benefits provided by interior mutability. Compiler can't guarantee that <code>XOR</code> rule is not broken, because you borrow <code>vec</code> as mutable.</p>\n\n<p>Obvious solution is to borrow <code>vec</code> as immutable and using <code>Mutex</code> to safeguard against race condition and don't utilize compiler borrowing rules.</p>\n\n<pre><code>let mut s2 = vec\n    .get(2) // Get immutable reference to second item\n    .unwrap() // Ensure that it exists\n    .lock() // Lock mutex. \n    .unwrap(); // Ensure mutex isn't poisoned.\n\n// s2 is now `std::sync::MutexGuard&lt;i32&gt;`, which implements `std::ops::DerefMut`, \n// so it can get us mutable reference to data.\n*s2 = 7;\n\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 9930733, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pw9Ws.png?s=128&g=1", "display_name": "seanybaggins", "link": "https://stackoverflow.com/users/9930733/seanybaggins"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1320, "favorite_count": 0, "accepted_answer_id": 59105632, "answer_count": 1, "score": 0, "last_activity_date": 1575867251, "creation_date": 1575006189, "last_edit_date": 1575012040, "question_id": 59099298, "link": "https://stackoverflow.com/questions/59099298/rust-writing-to-indices-of-a-vector-across-multiple-threads", "title": "Rust - writing to indices of a vector across multiple threads", "body": "<p>I have a circular ring buffer (implemented as a vector) where I want one thread to periodically write to the ring buffer and another to periodically read from the ring buffer. Is it possible to create a vector that can be read and written at the same time so long as threads accessing the vector are not at the same index?</p>\n\n<p>What I am hoping to achieve:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n\n    let vec = Arc::new(vec![Mutex::new(1), Mutex::new(2),Mutex::new(3)]);\n\n    {\n        let vec = vec.clone();\n        thread::spawn(move|| {\n            let mut s2 = *vec.get_mut(2).unwrap().lock().unwrap();\n            s2 = 7;\n        });\n    }\n\n    println!(\"{}\", vec[2].lock().unwrap());\n}\n</code></pre>\n\n<p>Compiler output is:</p>\n\n<pre><code>Compiling playground v0.0.1 (/playground)\nwarning: variable `s2` is assigned to, but never used\n  --&gt; src/main.rs:12:21\n   |\n12 |             let mut s2 = *vec.get_mut(2).unwrap().lock().unwrap();\n   |                     ^^\n   |\n   = note: `#[warn(unused_variables)]` on by default\n   = note: consider using `_s2` instead\n\nwarning: value assigned to `s2` is never read\n  --&gt; src/main.rs:13:13\n   |\n13 |             s2 = 7;\n   |             ^^\n   |\n   = note: `#[warn(unused_assignments)]` on by default\n   = help: maybe it is overwritten before being read?\n\nerror[E0596]: cannot borrow data in an `Arc` as mutable\n  --&gt; src/main.rs:12:27\n   |\n12 |             let mut s2 = *vec.get_mut(2).unwrap().lock().unwrap();\n   |                           ^^^ cannot borrow as mutable\n   |\n   = help: trait `DerefMut` is required to modify through a dereference, but it is not implemented for `std::sync::Arc&lt;std::vec::Vec&lt;std::sync::Mutex&lt;i32&gt;&gt;&gt;`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0596`.\nerror: could not compile `playground`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>Foiled by the rust type system trying to prevent a race condition :(</p>\n\n<p>What I don't want</p>\n\n<ul>\n<li>An implementation that involves having the lock scope including the vector.</li>\n<li>An atomic read and write to the vector is not an option since the vector will contain images.</li>\n</ul>\n\n<p>Link to playground:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5b5efe91bdd45c658d11f1cefb16045e\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5b5efe91bdd45c658d11f1cefb16045e</a></p>\n"}, {"tags": ["python", "rust", "match"], "comments": [{"owner": {"reputation": 15290, "user_id": 1913824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7793dc1a1117c0583651f716630e2403?s=128&d=identicon&r=PG", "display_name": "Andrea Corbellini", "link": "https://stackoverflow.com/users/1913824/andrea-corbellini"}, "edited": false, "score": 1, "creation_date": 1575004877, "post_id": 59098889, "comment_id": 104431084, "body": "The simplest answer is: no"}, {"owner": {"reputation": 1714, "user_id": 7404323, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jYEFn.png?s=128&g=1", "display_name": "sailfish009", "link": "https://stackoverflow.com/users/7404323/sailfish009"}, "reply_to_user": {"reputation": 15290, "user_id": 1913824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7793dc1a1117c0583651f716630e2403?s=128&d=identicon&r=PG", "display_name": "Andrea Corbellini", "link": "https://stackoverflow.com/users/1913824/andrea-corbellini"}, "edited": false, "score": 0, "creation_date": 1575004967, "post_id": 59098889, "comment_id": 104431105, "body": "@AndreaCorbellini yes, i know. but still want. waiting for python hacker.."}, {"owner": {"reputation": 15290, "user_id": 1913824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7793dc1a1117c0583651f716630e2403?s=128&d=identicon&r=PG", "display_name": "Andrea Corbellini", "link": "https://stackoverflow.com/users/1913824/andrea-corbellini"}, "edited": false, "score": 1, "creation_date": 1575005615, "post_id": 59098889, "comment_id": 104431264, "body": "This is not a feature request site :) You may want to send a proposal to the Python-Ideas mailing list, but please note that this feature has been discussed many times, e.g.: <a href=\"https://mail.python.org/pipermail/python-ideas/2018-May/050283.html\" rel=\"nofollow noreferrer\">mail.python.org/pipermail/python-ideas/2018-May/050283.html</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1608, "user_id": 1576254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Jq33n.png?s=128&g=1", "display_name": "ikamen", "link": "https://stackoverflow.com/users/1576254/ikamen"}, "edited": false, "score": 2, "creation_date": 1575015765, "post_id": 59099603, "comment_id": 104434533, "body": "apparently it&#39;s difficult to be the first person to wish for something - somebody already has done it :) Good find @sailfish009, I thought at first it&#39;s not available."}], "tags": [], "owner": {"reputation": 1714, "user_id": 7404323, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jYEFn.png?s=128&g=1", "display_name": "sailfish009", "link": "https://stackoverflow.com/users/7404323/sailfish009"}, "is_accepted": false, "score": 3, "last_activity_date": 1593007018, "last_edit_date": 1593007018, "creation_date": 1575008119, "answer_id": 59099603, "question_id": 59098889, "link": "https://stackoverflow.com/questions/59098889/can-i-use-rusts-match-in-python/59099603#59099603", "title": "can i use rust&#39;s match in python?", "body": "<p>Thanks for the hint, Andrea Corbellini.</p>\n<p>i found that solution, there is <a href=\"https://pypi.org/project/pampy/\" rel=\"nofollow noreferrer\">pampy</a></p>\n<pre><code>from pampy import match, _\n\ndef func(x):\n    return match(x,\n          1, &quot;One!&quot;,\n          # 2 | 3 | 5 | 7 | 11, &quot;This is a prime&quot;,     # not work\n          # 2 or 3 or 5 or 7 or 11, &quot;This is a prime&quot;, # not work\n          2, &quot;This is a prime&quot;,\n          _, &quot;Ain't special&quot;\n    )\n\nif __name__ == '__main__':\n    print(&quot;1: {}&quot;.format(func(1)))\n    print(&quot;2: {}&quot;.format(func(2)))\n    print(&quot;3: {}&quot;.format(func(3)))\n    print(&quot;5: {}&quot;.format(func(5)))\n    print(&quot;7: {}&quot;.format(func(7)))\n    print(&quot;nothing: {}&quot;.format(func(&quot;nothing&quot;)))\n</code></pre>\n<p>--</p>\n<p>EDIT: Now (2020/06), there is official draft for match <a href=\"https://www.python.org/dev/peps/pep-0622/\" rel=\"nofollow noreferrer\">PEP 622</a></p>\n"}], "owner": {"reputation": 1714, "user_id": 7404323, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jYEFn.png?s=128&g=1", "display_name": "sailfish009", "link": "https://stackoverflow.com/users/7404323/sailfish009"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 369, "favorite_count": 1, "closed_date": 1575093537, "answer_count": 1, "score": -3, "last_activity_date": 1593007018, "creation_date": 1575002663, "last_edit_date": 1575003858, "question_id": 59098889, "link": "https://stackoverflow.com/questions/59098889/can-i-use-rusts-match-in-python", "closed_reason": "Not suitable for this site", "title": "can i use rust&#39;s match in python?", "body": "<p>i want to use rust match in python3,</p>\n\n<p>instead of if...elif statement.</p>\n\n<p><a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/match.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/rust-by-example/flow_control/match.html</a></p>\n\n<pre><code>fn main() {\n    let number = 13;\n    // TODO ^ Try different values for `number`\n\n    println!(\"Tell me about {}\", number);\n    match number {\n        // Match a single value\n        1 =&gt; println!(\"One!\"),\n        // Match several values\n        2 | 3 | 5 | 7 | 11 =&gt; println!(\"This is a prime\"),\n        // Match an inclusive range\n        13...19 =&gt; println!(\"A teen\"),\n        // Handle the rest of cases\n        _ =&gt; println!(\"Ain't special\"),\n    }\n\n    let boolean = true;\n    // Match is an expression too\n    let binary = match boolean {\n        // The arms of a match must cover all the possible values\n        false =&gt; 0,\n        true =&gt; 1,\n        // TODO ^ Try commenting out one of these arms\n    };\n\n    println!(\"{} -&gt; {}\", boolean, binary);\n}\n</code></pre>\n"}, {"tags": ["rust", "artificial-intelligence"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1575012982, "post_id": 59098389, "comment_id": 104433462, "body": "Any kind of optimization algorithm should work: gradient descent, simplex, \u2026"}, {"owner": {"reputation": 11, "user_id": 9487636, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e14db5322e6ea9035c258d3a76ee881?s=128&d=identicon&r=PG&f=1", "display_name": "Cobey Hollier", "link": "https://stackoverflow.com/users/9487636/cobey-hollier"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1575047551, "post_id": 59098389, "comment_id": 104449048, "body": "Thank you @Jmb for your reply. My issue here is that I don&#39;t know how to apply linear regression to my situation. I assume I would use the same scoring function for the entire game and then tune the values based on whether I won or lost that game. However, what would my dependant variable be, the score the function creates or an assigned value from me winning or losing the game? Since I don&#39;t have a labeled dataset, I don&#39;t know what the loss was for the scoring function after each turn. My only measure of success is me either winning or loosing that game."}], "owner": {"reputation": 11, "user_id": 9487636, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e14db5322e6ea9035c258d3a76ee881?s=128&d=identicon&r=PG&f=1", "display_name": "Cobey Hollier", "link": "https://stackoverflow.com/users/9487636/cobey-hollier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1574997786, "creation_date": 1574997786, "question_id": 59098389, "link": "https://stackoverflow.com/questions/59098389/tuning-parameters-to-optimize-score-without-cnn", "title": "Tuning Parameters to Optimize Score without CNN", "body": "<p>I am trying to create an Agent in Rust that uses a scoring function to determine the best move on a 2D uniform cost grid. The specifics of the game aren't very relevant, other than knowing that each turn you can choose to make one of 4 moves (up, down, left or right) and you are competing against other AIs who are playing on the same board. Currently the AI makes \"branches\" of possible paths it could make into the future using several different simple algorithms such as using A* to find enemies or food. Several characteristics are saved as the future simulations run including the number of enemies we killed on that branch, amount of food we ate and how long the future branch lasted before we died. </p>\n\n<p>Once we are ready to make our move, we give each future predicting branch a score and go in the direction with the highest average score. This score is essentially a sum of each characteristic mentioned previously multiplied by a constant. For example the score may be <code>30 * number of food eaten + 100 * number of enemies killed</code>. However, the number 30 and 100 were chosen almost at random through experimentation. If the snake died from not eating food then I increase the score multiplier for eating food for example. However, there are 10 different characteristics each with their own weight. Figuring out the relationship between them all manually is both time consuming and doesn't easily converge onto the optimal strategy.</p>\n\n<p>Here in lies my issue. I would like to find a way to \"train\" the values for the AI through a process sort of like Q-Learning. There is a very clear terminal condition when you win or lose which helps. My currently idea is creating a table with 100 possible values of each parameter, then play 100 games with each combination and record the win rate. However, this would take <code>(1000 choose 10) * 100</code> games or <code>2.6E25</code> games. It seems like there should be a smarted way to eliminate bad combinations using some form of loss minimization. If anybody has suggestions on tuning these parameters without a neural network, it would be greatly appreciated.</p>\n"}, {"tags": ["function", "rust", "return-type"], "comments": [{"owner": {"reputation": 1714, "user_id": 7404323, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jYEFn.png?s=128&g=1", "display_name": "sailfish009", "link": "https://stackoverflow.com/users/7404323/sailfish009"}, "edited": false, "score": 0, "creation_date": 1574992932, "post_id": 59097840, "comment_id": 104429037, "body": "btw, in rust, try to use match rather than if..else if."}, {"owner": {"user_type": "does_not_exist", "display_name": "user9050166"}, "reply_to_user": {"reputation": 1714, "user_id": 7404323, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/jYEFn.png?s=128&g=1", "display_name": "sailfish009", "link": "https://stackoverflow.com/users/7404323/sailfish009"}, "edited": false, "score": 0, "creation_date": 1574993042, "post_id": 59097840, "comment_id": 104429060, "body": "@sailfish009 Well it&#39;s true that it&#39;s more powerful, but, here he has a limited set of outcomes, so <code>match</code> is probably overkill"}], "answers": [{"comments": [{"owner": {"reputation": 8643, "user_id": 1718554, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/n3jD1.jpg?s=128&g=1", "display_name": "Luke Joshua Park", "link": "https://stackoverflow.com/users/1718554/luke-joshua-park"}, "edited": false, "score": 0, "creation_date": 1574993139, "post_id": 59097892, "comment_id": 104429074, "body": "I don&#39;t think this answer describes the problem/solution that clearly - isn&#39;t it because the &quot;if else set&quot; isn&#39;t the last thing in the function?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user9050166"}, "reply_to_user": {"reputation": 8643, "user_id": 1718554, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/n3jD1.jpg?s=128&g=1", "display_name": "Luke Joshua Park", "link": "https://stackoverflow.com/users/1718554/luke-joshua-park"}, "edited": false, "score": 0, "creation_date": 1574993224, "post_id": 59097892, "comment_id": 104429094, "body": "@LukeJoshuaPark He is trying to return from the if-else block. And yes you&#39;re right, I&#39;ve updated my answer"}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user9050166"}, "is_accepted": false, "score": 1, "last_activity_date": 1574995516, "last_edit_date": 1574995516, "creation_date": 1574992386, "answer_id": 59097892, "question_id": 59097840, "link": "https://stackoverflow.com/questions/59097840/understanding-rusts-function-return-type/59097892#59097892", "title": "Understanding Rust&#39;s function return type", "body": "<p>You are trying to return from an if-else block which takes <code>()</code> as return. You can explicitly specify the returns, i.e:</p>\n\n<pre><code>fn fibo(x: i32) -&gt; i32 {\n    if x == 0 {\n        return 0;\n    }\n    else if x == 1 {\n        return 1;\n    }\n\n    fibo(x-1) + fibo(x-2)    \n}\n</code></pre>\n\n<p><strong>Edit:</strong> Improving clarity, what you've done is you've tried to return from an if-else block which cannot take any value, so if you have to give a return to the function, you'll have to explicitly state <code>return 0;</code> or whatever.\n<strong>Edit:</strong> Here, your code doesn't work since your if-else block isn't the last thing in the function.\nFor example, this would work flawlessly:</p>\n\n<pre><code>fn some_func(val: u8) -&gt; u8 {\n    if val == 100 {\n       0\n    }\n    else {\n        1\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 338, "user_id": 11811572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23035f8030e092e4f79c592461ed68d4?s=128&d=identicon&r=PG&f=1", "display_name": "LotB", "link": "https://stackoverflow.com/users/11811572/lotb"}, "edited": false, "score": 0, "creation_date": 1575014752, "post_id": 59098097, "comment_id": 104434132, "body": "Interesting to note: those are not exactly return, but results from the statement. While it&#39;s often similar, because rust functions themselves are statements, it does not translates into the same behavior as other languages, which would be to return the first result."}], "tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 5, "last_activity_date": 1574994720, "creation_date": 1574994720, "answer_id": 59098097, "question_id": 59097840, "link": "https://stackoverflow.com/questions/59097840/understanding-rusts-function-return-type/59098097#59098097", "title": "Understanding Rust&#39;s function return type", "body": "<p>The problem here is that you're trying to have two \"return\" statements. </p>\n\n<p>When a block's last statement lacks a semicolon, the result of the statement is the type of evaluating the entire block. In pseudo-rust, we can say the following</p>\n\n<pre><code>{\n    0\n} -&gt; usize\n</code></pre>\n\n<p>That's to say</p>\n\n<pre><code>let x = { 0 };\n</code></pre>\n\n<p>Makes a new scope for the <code>0</code>, implicitly returns it because there's no semicolon in the block, and then that becomes the type of the block. So, <code>x: usize</code>. </p>\n\n<p>So, what's going on?<br>\nYour code has <em>two</em> implicit returns:</p>\n\n<pre><code>fn fibo(x: i32) -&gt; i32 {\n    if x == 0 { // This starts a block\n        0 // First implicit return\n    }\n    else if x == 1 { // This also starts a block\n        1 // First implicit return\n    } // Therefore this entire if/else statement is an implicit return unless its output\n      // is suppressed with a semicolon.\n\n    fibo(x-1) + fibo(x-2) // Here we try to return again, which confuses rust!\n} \n</code></pre>\n\n<p>Because your <code>if/else</code> contains implicit returns and is not being assigned to a variable, it is like as if I said the following:</p>\n\n<pre><code>fn fibo(x: i32) -&gt; i32 {\n    //For the sake of explanation, let's assume x == 0\n    0 // instead of your if/else\n\n    fibo(x-1) + fibo(x-2)\n}\n</code></pre>\n\n<p>Oh no! How to fix this:</p>\n\n<pre><code>fn fibo(x: i32) -&gt; i32 {\n    if x == 0 {\n        // return 0; // This is an early return; this will break until it reaches the function\n        0 // Since this is about implicit returns I'll use them here\n    } else if x == 1 {\n        1\n    } else {\n        fibo(x - 1) + fibo(x - 2)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 359, "user_id": 8501464, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aFpwl.jpg?s=128&g=1", "display_name": "Yi\u011fit Aras Tunal\u0131", "link": "https://stackoverflow.com/users/8501464/yi%c4%9fit-aras-tunal%c4%b1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 253, "favorite_count": 0, "accepted_answer_id": 59098097, "answer_count": 2, "score": 1, "last_activity_date": 1574995516, "creation_date": 1574991642, "question_id": 59097840, "link": "https://stackoverflow.com/questions/59097840/understanding-rusts-function-return-type", "title": "Understanding Rust&#39;s function return type", "body": "<p>I am trying to get into Rust by learning it from its book. Mostly common things with interesting additions on it. I try to code some stuff to get used to it so I decided to do as the chapter says and write a quick Fibonacci function but had an error I am having problems wrapping my head around. Any rust expert who would explain to me why is this happening and the logic behind it.</p>\n\n<pre><code>fn fibo(x: i32) -&gt; i32 {\n    if x == 0 {\n        0\n    }\n    else if x == 1 {\n        1\n    }\n\n    fibo(x-1) + fibo(x-2)    \n}\n</code></pre>\n\n<p>When I try to build this code, I get the following error;</p>\n\n<pre><code>error[E0308]: mismatched types\n --&gt; src/main.rs:6:9\n  |\n6 |         0\n  |         ^ expected (), found integer\n  |\n  = note: expected type `()`\n             found type `{integer}`\n\nerror[E0308]: mismatched types\n --&gt; src/main.rs:9:9\n  |\n9 |         1\n  |         ^ expected (), found integer\n  |\n  = note: expected type `()`\n             found type `{integer}`\n</code></pre>\n\n<p>But If I change the code to the following it works fine;</p>\n\n<pre><code>fn fibo(x: i32) -&gt; i32 {\n    if x == 0 {\n        0\n    }\n    else if x == 1 {\n        1\n    }else{\n        fibo(x-1) + fibo(x-2)    \n    }\n}\n</code></pre>\n\n<p>In the Rust Language book, it is stated that the compiler checks the type of all the expressions in the if-else blocks but also states that it passes to the next line of code if there is no else statement is present. Since I stated the return type would be i32 how come the compiler can expect type \"()\" as seen in the error?</p>\n"}, {"tags": ["rust", "macros", "arguments"], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 3, "last_activity_date": 1574960076, "last_edit_date": 1574960076, "creation_date": 1574957106, "answer_id": 59092706, "question_id": 59092357, "link": "https://stackoverflow.com/questions/59092357/rust-macro-accepting-argument-with-a-colon-a-struct-which-is-inside-a-module/59092706#59092706", "title": "Rust macro accepting argument with a colon, a struct which is inside a module", "body": "<p>With a little trickery you can make it work:</p>\n\n<pre><code>mod foo {\n    pub struct Bar {\n        pub name: String\n    }\n}\n\nmacro_rules! printme {\n    ($myclass: ty) =&gt; {\n        type LocalT = $myclass;\n        let t = LocalT { name: \"abc\".to_owned() };\n        println!(\"{}\", t.name);\n    }\n}\n\nfn main() {\n    printme!(foo::Bar);\n}\n</code></pre>\n\n<ul>\n<li>accept <code>ty</code> (type) instead of <code>ident</code> (identifier)</li>\n<li>I do not know why, but I couldn't get it working without <code>LocalT</code></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 6, "last_activity_date": 1574976173, "creation_date": 1574976173, "answer_id": 59096281, "question_id": 59092357, "link": "https://stackoverflow.com/questions/59092357/rust-macro-accepting-argument-with-a-colon-a-struct-which-is-inside-a-module/59096281#59096281", "title": "Rust macro accepting argument with a colon, a struct which is inside a module", "body": "<p>When you write <code>($myclass: ident)</code> you are saying that the user must write an identifier in that place of the macro invocation. And as you noted, <code>Bar</code> is an identifier, but <code>foo::Bar</code> is not: syntactically, this kind of <em>list-of-identifiers-separated-by-double-colon</em> is called a <em>path</em>.</p>\n\n<p>You can write <code>($myclass: path)</code>, or if you want to limit that to existing types then you can write <code>($myclass: ty)</code>, as @phimuemue's answer suggested. But if you do this, it will fail when trying to use that type to build the object. That is because of how the parser work: it must parse the path and the <code>{</code> in the same token tree, but having the <code>path</code> or <code>ty</code> has broken the link with the <code>{</code>. Since this is just a parser limitation, not a semantic one, you can use a local alias as a workaround, as the other answer suggests.</p>\n\n<p>However, I would suggest to use a trait based solution if possible. I consider that to me much more idiomatic:</p>\n\n<pre><code>trait Nameable {\n    fn new(name: &amp;str) -&gt; Self;\n}\n\nmod foo {\n    pub struct Bar {\n        pub name: String\n    }\n    impl super::Nameable for Bar {\n        fn new(name: &amp;str) -&gt; Bar {\n            Bar {\n                name: name.to_string()\n            }\n        }\n    }\n}\n\nmacro_rules! printme {\n    ($myclass: ty) =&gt; {\n        let t = &lt;$myclass as Nameable&gt;::new(\"abc\");\n        println!(\"{}\", t.name);\n    }\n}\n\nfn main() {\n    printme!( foo::Bar );\n}\n</code></pre>\n\n<p>Or you can take out the ultimate tool of Rust macros: the <em>list-of-token-trees</em>, that can parse almost anything:</p>\n\n<pre><code>macro_rules! printme {\n    ($($myclass: tt)*) =&gt; {\n        let t = $($myclass)* { name: \"abc\".to_string() };\n        println!(\"{}\", t.name);\n    }\n}\n</code></pre>\n\n<p>When you invoke this macro with <code>printme!(foo::Bar)</code> it will actually parse as a list of three token-trees: <code>foo</code>, <code>::</code> and <code>Bar</code>, and then your building of the object will just work.</p>\n\n<p>The drawback (or advantage) of this method is that it will eat up all your tokens, no matter what you write into the macro, and if it fails it will emit a weird error message from inside your macro, instead of saying that your token is not valid in this macro invocation.</p>\n\n<p>For example, writing <code>printme!( foo::Bar {} )</code> with my trait-based macro gives the most helpful error:</p>\n\n<pre><code>error: no rules expected the token `{`\n  --&gt; src/main.rs:27:24\n   |\n19 | macro_rules! printme {\n   | -------------------- when calling this macro\n...\n27 |     printme!( foo::Bar {} );\n   |                        ^ no rules expected this token in macro call\n</code></pre>\n\n<p>While writing the same code with the token-tree-list macro produces a few not so helpful messages:</p>\n\n<pre><code>warning: expected `;`, found `{`\n  --&gt; src/main.rs:21:30\n   |\n21 |         let t = $($myclass)* { name: \"abc\".to_string() };\n   |                              ^\n...\n27 |     printme!( foo::Bar {} );\n   |     ------------------------ in this macro invocation\n   |\n   = note: this was erroneously allowed and will become a hard error in a future release\n\nerror: expected type, found `\"abc\"`\n  --&gt; src/main.rs:21:38\n   |\n21 |         let t = $($myclass)* { name: \"abc\".to_string() };\n   |                                    - ^^^^^ expected type\n   |                                    |\n   |                                    tried to parse a type due to this\n...\n27 |     printme!( foo::Bar {} );\n   |     ------------------------ in this macro invocation\n\nerror[E0063]: missing field `name` in initializer of `foo::Bar`\n  --&gt; src/main.rs:27:15\n   |\n27 |     printme!( foo::Bar {} );\n   |               ^^^^^^^^ missing `name`\n</code></pre>\n"}], "owner": {"reputation": 2854, "user_id": 6923555, "user_type": "registered", "accept_rate": 62, "profile_image": "https://lh3.googleusercontent.com/-N8FUb3l8l44/AAAAAAAAAAI/AAAAAAAAAio/1HlhcKxsTPo/photo.jpg?sz=128", "display_name": "rodrigocfd", "link": "https://stackoverflow.com/users/6923555/rodrigocfd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 502, "favorite_count": 1, "accepted_answer_id": 59092706, "answer_count": 2, "score": 2, "last_activity_date": 1574976173, "creation_date": 1574955927, "question_id": 59092357, "link": "https://stackoverflow.com/questions/59092357/rust-macro-accepting-argument-with-a-colon-a-struct-which-is-inside-a-module", "title": "Rust macro accepting argument with a colon, a struct which is inside a module", "body": "<p>The following code works:</p>\n\n<pre><code>pub struct Bar {\n    pub name: String\n}\n\nmacro_rules! printme {\n    ($myclass: ident) =&gt; {\n        let t = $myclass { name: \"abc\".to_owned() };\n        println!(\"{}\", t.name);\n    }\n}\n\nfn main() {\n    printme!(Bar);\n}\n</code></pre>\n\n<p>However, if <code>Bar</code> is within a module, it won't work, error is <code>no rules expected the token ::</code>:</p>\n\n<pre><code>mod foo {\n    pub struct Bar {\n        pub name: String\n    }\n}\n\nmacro_rules! printme {\n    ($myclass: ident) =&gt; {\n        let t = $myclass { name: \"abc\".to_owned() };\n        println!(\"{}\", t.name);\n    }\n}\n\nfn main() {\n    printme!(foo::Bar); // not allowed\n}\n</code></pre>\n\n<p>It only works if I use an alias:</p>\n\n<pre><code>fn main() {\n    use foo::Bar as no_colon;\n    printme!(no_colon);\n}\n</code></pre>\n\n<p>Is there a way to make it work <strong>with</strong> the colon, without the <code>use</code> alias?</p>\n"}, {"tags": ["windows", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1574954716, "post_id": 59091988, "comment_id": 104418375, "body": "I don&#39;t know much about Windows, but on Linux, this kind of shorthand is expanded by the terminal/shell. You must use another crate to read the env variables."}], "answers": [{"comments": [{"owner": {"reputation": 151, "user_id": 8533619, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8fa1d2105772fd879b1966729b7a7232?s=128&d=identicon&r=PG&f=1", "display_name": "coreyeng", "link": "https://stackoverflow.com/users/8533619/coreyeng"}, "edited": false, "score": 0, "creation_date": 1574961040, "post_id": 59093530, "comment_id": 104421369, "body": "Thanks! I was able to get it to work by replacing my original with:  ~~~ let out = Command::new(&quot;cmd&quot;)     .arg(&quot;/C&quot;)     .arg(&quot;echo %PATH%&quot;)     .spawn()     .expect(&quot;ls command failed to start&quot;); } ~~~  I wasn&#39;t realizing it was spawning a CMD prompt and not a powershell, but that wasn&#39;t the original problem anyway."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 3, "last_activity_date": 1574960469, "creation_date": 1574960469, "answer_id": 59093530, "question_id": 59091988, "link": "https://stackoverflow.com/questions/59091988/rust-stdprocess-with-special-characters/59093530#59093530", "title": "Rust std::process with special characters", "body": "<p>As the comment by French says: Spawning the process does not include the Powershell-environment, which would expand <code>%PATH%</code> to it's actual content before launching the process.</p>\n\n<p>You need to get the content of <code>PATH</code> via <code>std::env</code> yourself or lookup the Powershell documentation on how to launch a subprocess inside a powershell-session.</p>\n"}, {"tags": [], "owner": {"reputation": 5775, "user_id": 83839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d927b767c21dd35ad22bfefcb091266a?s=128&d=identicon&r=PG", "display_name": "Kevin Anderson", "link": "https://stackoverflow.com/users/83839/kevin-anderson"}, "is_accepted": false, "score": 1, "last_activity_date": 1574961042, "creation_date": 1574961042, "answer_id": 59093658, "question_id": 59091988, "link": "https://stackoverflow.com/questions/59091988/rust-stdprocess-with-special-characters/59093658#59093658", "title": "Rust std::process with special characters", "body": "<p>As others have mentioned, it's not the special characters, it's the fact that those special characters are interpreted by <em>powershell</em> before the \"echo\" program runs at all.</p>\n\n<p>Using <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/cargo/reference/environment-variables.html</a> as a reference for how to look up environment variables, try something like this:</p>\n\n<pre><code>use std::env;\n\nfn main() {\n    let cur_path = env::var(\"PATH\").unwrap();\n    println!(\"Environment is: {}\", cur_path);\n}\n</code></pre>\n\n<p>You can try this here: <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/</a></p>\n\n<p>You can then feed cur_path into your \"Command::new\" if you wish.  The trick is that powershell substitutes that argument BEFORE launching echo, which you may not have known, whereas when you execute the echo program directly, you have to do that substitution yourself.</p>\n"}], "owner": {"reputation": 151, "user_id": 8533619, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8fa1d2105772fd879b1966729b7a7232?s=128&d=identicon&r=PG&f=1", "display_name": "coreyeng", "link": "https://stackoverflow.com/users/8533619/coreyeng"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 0, "accepted_answer_id": 59093530, "answer_count": 2, "score": 0, "last_activity_date": 1574961367, "creation_date": 1574954603, "last_edit_date": 1574961367, "question_id": 59091988, "link": "https://stackoverflow.com/questions/59091988/rust-stdprocess-with-special-characters", "title": "Rust std::process with special characters", "body": "<p>I've got a very simple rust program but its not doing quite what I'd expect. Running on Windows, using a powershell prompt, I can do the following to display the <code>path</code>:</p>\n\n<pre><code>echo \"%PATH%\"\n</code></pre>\n\n<p>and I have a simple Rust program with:</p>\n\n<pre><code>Command::new(\"echo\")\n    .arg(\"%PATH%\")\n    .spawn()\n    .expect(\"ls command failed to start\");\n</code></pre>\n\n<p>The command will launch and run, but it outputs:</p>\n\n<pre><code>%PATH%\n</code></pre>\n\n<p>instead of the path contents, like I'd expect. Other commands which don't use special characters seem to work as expected, so I suspect its related to handling them but I don't see a way in Rust to make the command any more primitive than it already is.</p>\n\n<p>I've tried various formatting but it either fails to run the command or does the same.</p>\n\n<p>I also tried using <code>$env:path</code>, but this always fails to run from Rust with a <code>cannot find the path specified</code> error.</p>\n\n<p>Are there any suggestions for handling this? I could write the contents to a file and run the file instead, but running these types of commands from other languages directly works fine so I think it should work from Rust as well.</p>\n\n<p>Thanks!</p>\n\n<p>Update:</p>\n\n<p>Managed to get the expected results from by using:</p>\n\n<pre><code>let out = Command::new(\"cmd\")\n    .arg(\"/C\")\n    .arg(\"echo %PATH%\")\n    .spawn()\n    .expect(\"ls command failed to start\");\n}\n</code></pre>\n\n<p>I think the question got interpreted a bit differently, as getting the path was just an example of a larger issue I was seeing. Updating with the above solved my larger issue as well.</p>\n"}, {"tags": ["struct", "rust", "lifetime"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574953939, "post_id": 59091727, "comment_id": 104417974, "body": "What do you want to do? I&#39;m not sure that <code>AsRef</code> is the right trait to use in your situation. You maybe want <code>Borrow</code>"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574953993, "post_id": 59091727, "comment_id": 104417995, "body": "The compiler error is bad. You just need to explicitly specify lifetime parameter for your Struct <b><i>everywhere</i></b>. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8063f314cfdbb60e27e703f2a38e35be\" rel=\"nofollow noreferrer\">fn as_ref(&amp;self) -&gt; &amp;Struct<code>&lt;&#39;a&gt;</code> { ... }</a>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574954071, "post_id": 59091727, "comment_id": 104418030, "body": "@Sahsahae That&#39;s an answer, not a comment"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574954130, "post_id": 59091727, "comment_id": 104418062, "body": "One/two sentence answers are pointless, just like this comment. I&#39;d have to explain why it doesn&#39;t work otherwise, and I don&#39;t think I can do so."}], "answers": [{"tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 3, "last_activity_date": 1574960225, "creation_date": 1574960225, "answer_id": 59093475, "question_id": 59091727, "link": "https://stackoverflow.com/questions/59091727/how-to-implement-asref-for-a-struct-containing-references/59093475#59093475", "title": "How to implement AsRef for a struct containing references", "body": "<p>With <code>fn as_ref(&amp;self) -&gt; &amp;Struct</code> the compiler has to infer the (implicit) generic lifetime in the return type and fails to do so. The compiler is expecting a <code>Struct&lt;'a&gt;</code> but the signature promises a free parameter. That's why you get</p>\n\n<pre><code>      expected fn(&amp;Struct&lt;'a&gt;) -&gt; &amp;Struct&lt;'a&gt;\n         found fn(&amp;Struct&lt;'a&gt;) -&gt; &amp;Struct&lt;'_&gt;  // '_ is some anonymous lifetime,\n                                               // which needs to come from somewhere\n</code></pre>\n\n<p>The solution is to modify the signature to return <code>Struct&lt;'a&gt;</code> instead of <code>Struct</code>. Even shorter and more clear:</p>\n\n<pre><code>impl&lt;'a&gt; AsRef&lt;Struct&lt;'a&gt;&gt; for Struct&lt;'a&gt; {\n    fn as_ref(&amp;self) -&gt; &amp;Self {  // Self is Struct&lt;'a&gt;, the type for which we impl AsRef\n        self\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 615, "user_id": 770476, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/8cf9af3473871c08a5a80833a7d2824a?s=128&d=identicon&r=PG", "display_name": "fabiim", "link": "https://stackoverflow.com/users/770476/fabiim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 455, "favorite_count": 0, "accepted_answer_id": 59093475, "answer_count": 1, "score": 3, "last_activity_date": 1574960225, "creation_date": 1574953689, "question_id": 59091727, "link": "https://stackoverflow.com/questions/59091727/how-to-implement-asref-for-a-struct-containing-references", "title": "How to implement AsRef for a struct containing references", "body": "<p>If I have a struct containing a reference like so: </p>\n\n<pre><code>struct Struct&lt;'a&gt; {\n    reference: &amp;'a str\n}\n</code></pre>\n\n<p>How can I implement AsRef for the Struct? I tried this:</p>\n\n<pre><code>impl&lt;'a&gt; AsRef&lt;Struct&lt;'a&gt;&gt; for Struct&lt;'a&gt; {\n    fn as_ref(&amp;self) -&gt; &amp;Struct {\n        self\n    }\n}\n\n</code></pre>\n\n<p>but it fails to satisfy the compiler requirements: </p>\n\n<blockquote>\n  <p>cannot infer an appropriate lifetime for lifetime parameter in generic type due to conflicting requirements</p>\n</blockquote>\n"}, {"tags": ["rust", "panic", "rayon"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1574952798, "post_id": 59091329, "comment_id": 104417360, "body": "That&#39;s not how to do error handling in Rust. Check the bound before indexing the vector, or use <code>Vec::get</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574952898, "post_id": 59091329, "comment_id": 104417415, "body": "BTW, you don&#39;t need to explicit most of your types, and you don&#39;t need to collect the result if you just want the sum"}, {"owner": {"reputation": 21, "user_id": 8546126, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-LtKIrN5aGNo/AAAAAAAAAAI/AAAAAAAAPmE/pTVxGuX_5v0/photo.jpg?sz=128", "display_name": "Maria Dubyaga", "link": "https://stackoverflow.com/users/8546126/maria-dubyaga"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1574953911, "post_id": 59091329, "comment_id": 104417959, "body": "French Boiethios thank you, I&#39;m collecting the result as it&#39;s a part of what I&#39;m doing and I also need the sum,  I just simplified the code, as I need the result itself. I also can&#39;t check before as I have many tasks and tables each of them could potentially panic, and my goal is to collect the result from everything which doesn&#39;t panic. Thank you!"}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 8546126, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-LtKIrN5aGNo/AAAAAAAAAAI/AAAAAAAAPmE/pTVxGuX_5v0/photo.jpg?sz=128", "display_name": "Maria Dubyaga", "link": "https://stackoverflow.com/users/8546126/maria-dubyaga"}, "edited": false, "score": 0, "creation_date": 1574957033, "post_id": 59092338, "comment_id": 104419532, "body": "thank you! But If I don&#39;t know which of many tasks which I&#39;m running in the <code>par_iter()</code> going to panic (incorrect columns, unwrapping etc) how to get such panic to <code>None</code> ? Instead of vector I would have task which produce the result (unless some part of the code panics). Is it possible to catch any panic inside <code>par_iter</code> and move forward? thank you!"}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1574955890, "creation_date": 1574955890, "answer_id": 59092338, "question_id": 59091329, "link": "https://stackoverflow.com/questions/59091329/how-do-i-catch-a-panic-from-rayons-par-iter/59092338#59092338", "title": "How do I catch a panic from Rayon&#39;s `par_iter()`?", "body": "<p>Try using <code>get</code> (it returns <code>Some(element)</code> if there is an element at index 4, <code>None</code> otherwise):</p>\n\n<pre><code>let total = v.par_iter().map(|x| {\n    println!(\"{} vector[4] is {:?}\", &amp;x.name(), &amp;x.vector().get(4));\n    x.vector().get(4).map(|x| x.clone())\n}).collect::&lt;Vec&lt;Option&lt;i32&gt;&gt;&gt;();\n</code></pre>\n\n<p>Then, <code>total</code> will contain <code>Some(n)</code> where the respective element was present and <code>None</code> otherwise.</p>\n"}, {"comments": [{"owner": {"reputation": 1668, "user_id": 311358, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/0b2b51e4cceb4a0c1609b81815001b69?s=128&d=identicon&r=PG", "display_name": "xrl", "link": "https://stackoverflow.com/users/311358/xrl"}, "edited": false, "score": 1, "creation_date": 1575034569, "post_id": 59094117, "comment_id": 104443349, "body": "Maria, can you edit this comment a snippet of the solution code? Then you can accept it at as the answer."}], "tags": [], "owner": {"reputation": 21, "user_id": 8546126, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-LtKIrN5aGNo/AAAAAAAAAAI/AAAAAAAAPmE/pTVxGuX_5v0/photo.jpg?sz=128", "display_name": "Maria Dubyaga", "link": "https://stackoverflow.com/users/8546126/maria-dubyaga"}, "is_accepted": false, "score": 1, "last_activity_date": 1576249209, "last_edit_date": 1576249209, "creation_date": 1574963303, "answer_id": 59094117, "question_id": 59091329, "link": "https://stackoverflow.com/questions/59091329/how-do-i-catch-a-panic-from-rayons-par-iter/59094117#59094117", "title": "How do I catch a panic from Rayon&#39;s `par_iter()`?", "body": "<p>My question was <a href=\"https://users.rust-lang.org/t/rayon-catching-panic-from-par-iter/35136\" rel=\"nofollow noreferrer\">answered in the Rust User's Forum</a> using <code>::std::panic::catch_unwind()</code>:</p>\n\n<pre><code>use ::rayon::prelude::*;\n\ntrait Animal: Sync + Send {\n    fn vector(self: &amp;'_ Self) -&gt; Vec&lt;i32&gt;;\n    fn name(self: &amp;'_ Self) -&gt; String;\n}\n\nstruct Cat {\n    name: &amp;'static str,\n    vector: Vec&lt;i32&gt;,\n}\n\nimpl Animal for Cat {\n    fn vector(self: &amp;'_ Self) -&gt; Vec&lt;i32&gt; {\n        self.vector.clone()\n    }\n\n    fn name(self: &amp;'_ Self) -&gt; String {\n        self.name.to_string()\n    }\n}\n\nstruct Dog {\n    name: &amp;'static str,\n    vector: Vec&lt;i32&gt;,\n}\n\nimpl Animal for Dog {\n    fn vector(self: &amp;'_ Self) -&gt; Vec&lt;i32&gt; {\n        self.vector.clone()\n    }\n\n    fn name(self: &amp;'_ Self) -&gt; String {\n        self.name.to_string()\n    }\n}\n\nstruct Pig {\n    name: &amp;'static str,\n    vector: Vec&lt;i32&gt;,\n}\n\nimpl Animal for Pig {\n    fn vector(self: &amp;'_ Self) -&gt; Vec&lt;i32&gt; {\n        self.vector.clone()\n    }\n\n    fn name(self: &amp;'_ Self) -&gt; String {\n        self.name.to_string()\n    }\n}\n\nfn main() {\n    ::rayon::ThreadPoolBuilder::new()\n        .num_threads(2)\n        // .panic_handler(move |_: Box&lt;dyn Any + Send&gt;| println!(\"hello\"))\n        .build_global()\n        .unwrap();\n\n    match ::std::panic::catch_unwind(move || {\n        let dog: Dog = Dog {\n            name: \"Dog\",\n            vector: vec![1, 2, 3, 4, 5],\n        };\n        let cat: Cat = Cat {\n            name: \"Cat\",\n            vector: vec![1, 2, 3],\n        };\n        let pig: Pig = Pig {\n            name: \"Pig\",\n            vector: vec![1, 2, 3, 4, 5],\n        };\n        let v: Vec&lt;Box&lt;dyn Animal&gt;&gt; = vec![Box::new(cat), Box::new(dog), Box::new(pig)];\n        let total = v\n            .par_iter()\n            .map(|x| {\n                let vector_4 = x.vector()[4].clone();\n                println!(\"{} vector[4] is {:?}\", &amp;x.name(), vector_4);\n                vector_4\n            })\n            .collect::&lt;Vec&lt;(i32)&gt;&gt;();\n        let sum: i32 = total.iter().sum();\n        println!(\"sum: {}\", sum);\n    }) {\n        Ok(()) =&gt; (),\n        Err(err) =&gt; {\n            let err_msg = match (err.downcast_ref(), err.downcast_ref::&lt;String&gt;()) {\n                (Some(&amp;s), _) =&gt; s,\n                (_, Some(s)) =&gt; &amp;**s,\n                _ =&gt; \"&lt;No panic message&gt;\",\n            };\n            eprintln!(\"Rayon panicked: {}\", err_msg);\n        }\n    }\n    println!(\"This code is always reached\");\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 8546126, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-LtKIrN5aGNo/AAAAAAAAAAI/AAAAAAAAPmE/pTVxGuX_5v0/photo.jpg?sz=128", "display_name": "Maria Dubyaga", "link": "https://stackoverflow.com/users/8546126/maria-dubyaga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1576249505, "creation_date": 1574952134, "last_edit_date": 1576249505, "question_id": 59091329, "link": "https://stackoverflow.com/questions/59091329/how-do-i-catch-a-panic-from-rayons-par-iter", "title": "How do I catch a panic from Rayon&#39;s `par_iter()`?", "body": "<p>I'm trying to catch the panic from inside <code>par_iter()</code> and continue to what I have after <code>par_iter</code> block.</p>\n\n<p>If I have this, I get everything correctly and there's no panic:</p>\n\n<pre><code>let dog: Dog = Dog {\n    name: \"Dog\",\n    vector: vec![1, 2, 3, 4, 5],\n};\nlet cat: Cat = Cat {\n    name: \"Cat\",\n    vector: vec![1, 2, 3],\n};\nlet pig: Pig = Pig {\n    name: \"Pig\",\n    vector: vec![1, 2, 3, 4, 5],\n};\nlet mut v: Vec&lt;Box&lt;dyn Animal&gt;&gt; = Vec::new();\nv.push(Box::new(cat));\nv.push(Box::new(dog));\nv.push(Box::new(pig));\n\nlet total = v\n    .par_iter()\n    .map(|x| {\n        println!(\"{} vector[1] is {:?}\", &amp;x.name(), &amp;x.vector()[1]);\n        x.vector()[1].clone()\n    })\n    .collect::&lt;Vec&lt;(i32)&gt;&gt;();\n\nlet sum: i32 = total.iter().sum();\nprintln!(\"sum: {}\", sum);\n</code></pre>\n\n<p>I get the sum after <code>par_iter</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Cat vector[1] is 2\nDog vector[1] is 2\nPig vector[1] is 2\nsum: 6\n</code></pre>\n\n<p>When I try to access an index which exceeds the vector length, I still print whatever I have including the panic, but don't get to the <code>sum</code>:</p>\n\n<pre><code>let total = v\n    .par_iter()\n    .map(|x| {\n        println!(\"{} vector[4] is {:?}\", &amp;x.name(), &amp;x.vector()[4]);\n        x.vector()[4].clone()\n    })\n    .collect::&lt;Vec&lt;(i32)&gt;&gt;();\n\nlet sum: i32 = total.iter().sum();\nprintln!(\"sum: {}\", sum);\n</code></pre>\n\n<p>The result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>     Running `target/debug/playground`\nthread '&lt;unnamed&gt;' panicked at 'index out of bounds: the len is 3 but the index is 4', /rustc/4560ea788cb760f0a34127156c78e2552949f734/src/libcore/slice/mod.rs:2717:10\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nStandard Output\nDog vector[4] is 5\nPig vector[4] is 5\n</code></pre>\n\n<p>I tried to to check what I could do if I implemented a <code>panic_handler</code>:</p>\n\n<pre><code>let panic_handler = move |err: Box&lt;dyn Any + Send&gt;| {\n    println!(\"hello\");\n};\nrayon::ThreadPoolBuilder::new()\n    .num_threads(2)\n    .panic_handler(panic_handler)\n    .build_global()\n    .unwrap();\n</code></pre>\n\n<p>It doesn't work and it's not even used:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused variable: `err`\n  --&gt; src/main.rs:52:31\n   |\n52 |     let panic_handler = move |err: Box&lt;dyn Any + Send&gt;| {\n   |                               ^^^ help: consider prefixing with an underscore: `_err`\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c79f61b10331c930be9c5b4e4bce103f\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>My real problem is not about going out of bounds of the vector, it's about catching the panic from <code>par_iter</code> if I don't know it will panic or not. My goal is to collect the result and move forward with stuff which didn't panic.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574934646, "post_id": 59084816, "comment_id": 104407526, "body": "To clarify, <code>_</code> is not a special pattern. The &quot;match any other value here&quot; is done using binding pattern, and that binding is what can be the &quot;don&#39;t care about actual value&quot;, which is <code>_</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 5, "creation_date": 1574935707, "post_id": 59084816, "comment_id": 104408148, "body": "Also note that <code>y</code> results in the value being <i>moved</i> into <code>y</code>, whereas <code>_</code> means the value is simply ignored. If you want to avoid the move, you can use the pattern <code>ref y</code> to create a reference to the value instead."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574942964, "post_id": 59084816, "comment_id": 104412046, "body": "@Sahsahae <code>_</code> is kind of special, because you can&#39;t use it to bind a value, only to ignore one. But you&#39;re right, it&#39;s not special to <code>match</code>."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574943566, "post_id": 59084816, "comment_id": 104412381, "body": "I meant in terms of patterns. The asker seems to think that <code>_</code> itself means &quot;other&quot;, hence why question exists in the first place."}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": true, "score": 15, "last_activity_date": 1574941023, "last_edit_date": 1574941023, "creation_date": 1574930862, "answer_id": 59084816, "question_id": 59084670, "link": "https://stackoverflow.com/questions/59084670/how-to-access-the-matched-value-in-the-default-case-of-pattern-matching/59084816#59084816", "title": "How to access the matched value in the default case of pattern matching?", "body": "<p>Assuming you don't want to repeat the expression because it's more complex than just a variable, you can bind it to a variable:</p>\n\n<pre><code>fn func(x: i64) {\n  match &lt;some complex expression&gt; {\n    0 =&gt; println!(\"Zero\"),\n    1 =&gt; println!(\"One\"),\n    y =&gt; {\n      // you can use y here\n    }\n  };\n}\n</code></pre>\n\n<p>This also works as a default case, because a variable pattern matches everything just like <code>_</code> does.</p>\n\n<p><code>_</code> is useful exactly when you don't want to use the value.</p>\n"}], "owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 965, "favorite_count": 0, "accepted_answer_id": 59084816, "answer_count": 1, "score": 12, "last_activity_date": 1574941023, "creation_date": 1574930290, "last_edit_date": 1574932420, "question_id": 59084670, "link": "https://stackoverflow.com/questions/59084670/how-to-access-the-matched-value-in-the-default-case-of-pattern-matching", "title": "How to access the matched value in the default case of pattern matching?", "body": "<p>the question is about the default case.</p>\n\n<p>Let's consider the following code:</p>\n\n<pre><code>fn func(x: i64) {\n  match x {\n    0 =&gt; println!(\"Zero\"),\n    1 =&gt; println!(\"One\"),\n    _ =&gt; {\n      //How to get the value here not via repeating the matched expression ?\n    }\n  };\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1574927681, "post_id": 59083890, "comment_id": 104404012, "body": "<code>people.into_iter().partition(|p| p.id == first_person_id).collect()</code>?"}, {"owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1574928259, "post_id": 59083890, "comment_id": 104404272, "body": "That creates a tuple with the two vectors and doesn&#39;t drain the people vec, so the next loop will still have the original data"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574928534, "post_id": 59083890, "comment_id": 104404392, "body": "What is the actual use case of this? Your code doesn&#39;t really show what you&#39;re trying to do nor why it matters."}], "answers": [{"tags": [], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "is_accepted": true, "score": 3, "last_activity_date": 1574929288, "last_edit_date": 1574929288, "creation_date": 1574928811, "answer_id": 59084307, "question_id": 59083890, "link": "https://stackoverflow.com/questions/59083890/group-vector-of-structs-by-field/59084307#59084307", "title": "Group vector of structs by field", "body": "<p>If you are looking to group your vector by the person id, it's likely to be more efficient using a HashMap from <code>id</code> to <code>Vec&lt;Person&gt;</code>, where each <code>id</code> hold a vector of persons. And then you can loop through the HashMap and process each vector / group. This is potentially more efficient than draining <code>people</code> in each iteration, which in worst case has O(N^2) time complexity while with a HashMap the time complexity is O(N).</p>\n\n<pre><code>#![feature(drain_filter)]\nuse std::collections::HashMap;\n\n#[derive(Debug)]\nstruct Person {\n    id: u32,\n}\n\nfn main() {\n\n    let mut people = vec![];\n    let mut groups: HashMap&lt;u32, Vec&lt;Person&gt;&gt; = HashMap::new();\n\n    for p in 0..10 {\n        people.push(Person { id: p });\n    }\n\n    people.into_iter().for_each(|person| {\n        let group = groups.entry(person.id).or_insert(vec![]);\n        group.push(person);\n    });\n\n    for (_id, group) in groups {\n        println!(\"{:#?}\", group);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=6b38342b36db776571543c714d87a07c\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 571, "user_id": 521401, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b40ec693f9aaa68ad5d271ea91120f0b?s=128&d=identicon&r=PG", "display_name": "James", "link": "https://stackoverflow.com/users/521401/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 284, "favorite_count": 0, "accepted_answer_id": 59084307, "answer_count": 1, "score": 1, "last_activity_date": 1574929288, "creation_date": 1574926940, "question_id": 59083890, "link": "https://stackoverflow.com/questions/59083890/group-vector-of-structs-by-field", "title": "Group vector of structs by field", "body": "<p>I want to create a vector with all of the matching field <code>id</code> from the struct, process that new vector and then repeat the process. Basically grouping together the structs with matching field <code>id</code>.</p>\n\n<p>Is there a way to do this by not using the unstable feature <code>drain_filter</code>?</p>\n\n<pre><code>#![feature(drain_filter)]\n\n#[derive(Debug)]\nstruct Person {\n    id: u32,\n}\n\nfn main() {\n\n    let mut people = vec![];\n\n    for p in 0..10 {\n        people.push(Person { id: p });\n    }\n\n    while !people.is_empty() {\n        let first_person_id = people.first().unwrap().id;\n\n        let drained: Vec&lt;Person&gt; = people.drain_filter(|p| p.id == first_person_id).collect();\n\n        println!(\"{:#?}\", drained);\n    }\n\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=9b5ff220a22e60d55594db2a58fe315c\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust", "floating-point", "sqrt", "type-punning"], "comments": [{"owner": {"reputation": 1148, "user_id": 5067875, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SeC0a.jpg?s=128&g=1", "display_name": "Flyq", "link": "https://stackoverflow.com/users/5067875/flyq"}, "edited": false, "score": 0, "creation_date": 1574916394, "post_id": 59081890, "comment_id": 104400301, "body": "the C# Version: <a href=\"https://stackoverflow.com/questions/268853/is-it-possible-to-write-quakes-fast-invsqrt-function-in-c\">Is it possible to write Quake&#39;s fast InvSqrt() function in C#?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1574942587, "post_id": 59081890, "comment_id": 104411857, "body": "As I understand it, this code is UB in C due to violating the <a href=\"https://stackoverflow.com/questions/98650/what-is-the-strict-aliasing-rule\">strict aliasing rule</a>. The standard-blessed way to perform this kind of type punning is with a <code>union</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1574957400, "post_id": 59081890, "comment_id": 104419723, "body": "@trentcl: I don&#39;t think <code>union</code> works either. <code>memcpy</code> definitely works, though it&#39;s verbose."}, {"owner": {"reputation": 9411, "user_id": 7366707, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/EtdGg.png?s=128&g=1", "display_name": "Moira", "link": "https://stackoverflow.com/users/7366707/moira"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 14, "creation_date": 1574959384, "post_id": 59081890, "comment_id": 104420662, "body": "@MatthieuM. Type punning with unions is <a href=\"https://stackoverflow.com/a/25672839/7366707\">perfectly valid C</a>, but not valid C++."}, {"owner": {"reputation": 1148, "user_id": 5067875, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SeC0a.jpg?s=128&g=1", "display_name": "Flyq", "link": "https://stackoverflow.com/users/5067875/flyq"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1575017685, "post_id": 59081890, "comment_id": 104435398, "body": "@Bergi Threre is a logical bug, hope it won&#39;t bother you:  <a href=\"https://github.com/flyq/datastruct-algorithm/blob/f55898ada268e2525b7117ca2cb134a56494c7c2/others/fast_sqrt/sqirt/src/main.rs\" rel=\"nofollow noreferrer\">wrong code</a>"}, {"owner": {"reputation": 578, "user_id": 5670773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc0792657c4665d871ee71ad7362e05?s=128&d=identicon&r=PG&f=1", "display_name": "benrg", "link": "https://stackoverflow.com/users/5670773/benrg"}, "edited": false, "score": 4, "creation_date": 1575081356, "post_id": 59081890, "comment_id": 104456436, "body": "I suppose this question is fine from a pure-curiosity perspective, but please understand that times have changed. On x86, the <code>rsqrtss</code> and <code>rsqrtps</code> instructions, introduced with the Pentium III in 1999, are faster and more accurate than this code. ARM NEON has <code>vrsqrte</code> which is similar. And whatever calculations Quake III used this for would probably be done on the GPU these days anyway."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1575110895, "post_id": 59081890, "comment_id": 104461133, "body": "The term you&#39;re looking for is &quot;type pun&quot; float to integer."}], "answers": [{"comments": [{"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 4, "creation_date": 1574926660, "post_id": 59082048, "comment_id": 104403597, "body": "There&#39;s nothing wrong with unsafe, but there&#39;s a way to do this without explicit unsafe block, so I&#39;d suggest to rewrite this answer using <a href=\"https://doc.rust-lang.org/std/primitive.f32.html#method.to_bits\" rel=\"nofollow noreferrer\"><code>f32::to_bits</code></a> and <a href=\"https://doc.rust-lang.org/std/primitive.f32.html#method.from_bits\" rel=\"nofollow noreferrer\"><code>f32::from_bits</code></a>. It also carries the intent clearly unlike transmute, which most people probably look at as &quot;magic&quot;."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 5, "creation_date": 1574926853, "post_id": 59082048, "comment_id": 104403681, "body": "@Sahsahae I just posted an answer using the two functions you mentioned :) And I agree, <code>unsafe</code> should be avoided here, as it&#39;s not necessary."}], "tags": [], "owner": {"reputation": 748, "user_id": 5835431, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/7b4b4de71c3ae7cdc87459fc2b67833b?s=128&d=identicon&r=PG&f=1", "display_name": "Deedee Megadoodoo", "link": "https://stackoverflow.com/users/5835431/deedee-megadoodoo"}, "is_accepted": false, "score": 10, "last_activity_date": 1574917506, "creation_date": 1574917506, "answer_id": 59082048, "question_id": 59081890, "link": "https://stackoverflow.com/questions/59081890/is-it-possible-to-write-quakes-fast-invsqrt-function-in-rust/59082048#59082048", "title": "Is it possible to write Quake&#39;s fast InvSqrt() function in Rust?", "body": "<p>You may use <code>std::mem::transmute</code> to make needed conversion:</p>\n\n<pre><code>fn inv_sqrt(x: f32) -&gt; f32 {\n    let xhalf = 0.5f32 * x;\n    let mut i: i32 = unsafe { std::mem::transmute(x) };\n    i = 0x5f3759df - (i &gt;&gt; 1);\n    let mut res: f32 = unsafe { std::mem::transmute(i) };\n    res = res * (1.5f32 - xhalf * res * res);\n    res\n}\n</code></pre>\n\n<p>You can look for a live example here: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=739e26ba8147ea9ecf45eaa79a066ffd\" rel=\"noreferrer\">here</a></p>\n"}, {"comments": [{"owner": {"reputation": 26945, "user_id": 771073, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/412bf39694cbe9d1fc0374deda225b18?s=128&d=identicon&r=PG", "display_name": "Martin Bonner supports Monica", "link": "https://stackoverflow.com/users/771073/martin-bonner-supports-monica"}, "edited": false, "score": 23, "creation_date": 1574961298, "post_id": 59082210, "comment_id": 104421458, "body": "I am not in the least surprised <code>sqrt().inv()</code> is fastest.  Both sqrt and inv are single instructions these days, and go pretty fast.  Doom was written in the days when it wasn&#39;t safe to assume there was hardware floating point at all, and transcendental functions like sqrt would <i>definitely</i> have been software.  +1 for the benchmarks."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1574982920, "post_id": 59082210, "comment_id": 104427374, "body": "What surprises me is that <code>transmute</code> is apparently different from <code>to_</code> and <code>from_bits</code> -- I&#39;d expect those to be instruction-equivalent even before optimization."}, {"owner": {"reputation": 1597, "user_id": 5162810, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pDGmO.jpg?s=128&g=1", "display_name": "Graham", "link": "https://stackoverflow.com/users/5162810/graham"}, "reply_to_user": {"reputation": 26945, "user_id": 771073, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/412bf39694cbe9d1fc0374deda225b18?s=128&d=identicon&r=PG", "display_name": "Martin Bonner supports Monica", "link": "https://stackoverflow.com/users/771073/martin-bonner-supports-monica"}, "edited": false, "score": 0, "creation_date": 1575031251, "post_id": 59082210, "comment_id": 104441765, "body": "@MartinBonnersupportsMonica Just to note, that&#39;s been true for x86 for a long time, but on ARM we do need to check versions.  The Cortex-M4 only has full hardware support for single-precision floats, where the Cortex-M7 does single- and double-precision.  So a modern tablet should be fine, but little embedded things may not be.  These kind of tricks are nice to remember for those of us who still need to count RAM in bytes. :)"}, {"owner": {"reputation": 26945, "user_id": 771073, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/412bf39694cbe9d1fc0374deda225b18?s=128&d=identicon&r=PG", "display_name": "Martin Bonner supports Monica", "link": "https://stackoverflow.com/users/771073/martin-bonner-supports-monica"}, "reply_to_user": {"reputation": 1597, "user_id": 5162810, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pDGmO.jpg?s=128&g=1", "display_name": "Graham", "link": "https://stackoverflow.com/users/5162810/graham"}, "edited": false, "score": 0, "creation_date": 1575032367, "post_id": 59082210, "comment_id": 104442311, "body": "@Graham An excellent point!  (The benchmark will almost certainly have been done on a platform with hardware FP, but there are probably more installed processors out there that don&#39;t do FP than that do.)    It&#39;s a while since I hard to care about space - and then I was counting in (16-bit) words."}, {"owner": {"reputation": 159118, "user_id": 15416, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/a2b11b9662b5155aada74191fbe7cb9e?s=128&d=identicon&r=PG", "display_name": "MSalters", "link": "https://stackoverflow.com/users/15416/msalters"}, "reply_to_user": {"reputation": 1597, "user_id": 5162810, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pDGmO.jpg?s=128&g=1", "display_name": "Graham", "link": "https://stackoverflow.com/users/5162810/graham"}, "edited": false, "score": 0, "creation_date": 1575036759, "post_id": 59082210, "comment_id": 104444359, "body": "@Graham: this particular implementation is restricted to single-precision floats too, so even on an M4 it has limited value."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 159118, "user_id": 15416, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/a2b11b9662b5155aada74191fbe7cb9e?s=128&d=identicon&r=PG", "display_name": "MSalters", "link": "https://stackoverflow.com/users/15416/msalters"}, "edited": false, "score": 0, "creation_date": 1575038657, "post_id": 59082210, "comment_id": 104445200, "body": "@MSalters unless the range of double precision floats is required, this is an approximation algorithm so that I figured single precision probably makes more sense."}, {"owner": {"reputation": 578, "user_id": 5670773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc0792657c4665d871ee71ad7362e05?s=128&d=identicon&r=PG&f=1", "display_name": "benrg", "link": "https://stackoverflow.com/users/5670773/benrg"}, "reply_to_user": {"reputation": 26945, "user_id": 771073, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/412bf39694cbe9d1fc0374deda225b18?s=128&d=identicon&r=PG", "display_name": "Martin Bonner supports Monica", "link": "https://stackoverflow.com/users/771073/martin-bonner-supports-monica"}, "edited": false, "score": 0, "creation_date": 1575081594, "post_id": 59082210, "comment_id": 104456467, "body": "@MartinBonner All x86 FPUs since the original 8087 have supported a hardware <a href=\"https://www.felixcloutier.com/x86/fsqrt\" rel=\"nofollow noreferrer\"><code>fsqrt</code></a>, as well as transcendental functions like <code>fsin</code>, etc. However they were microcoded and much slower than InvSqrt would have been. Today you should use <code>rsqrtss</code> or <code>rsqrtps</code> if you need a fast approximate inverse square root."}, {"owner": {"reputation": 578, "user_id": 5670773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc0792657c4665d871ee71ad7362e05?s=128&d=identicon&r=PG&f=1", "display_name": "benrg", "link": "https://stackoverflow.com/users/5670773/benrg"}, "reply_to_user": {"reputation": 26945, "user_id": 771073, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/412bf39694cbe9d1fc0374deda225b18?s=128&d=identicon&r=PG", "display_name": "Martin Bonner supports Monica", "link": "https://stackoverflow.com/users/771073/martin-bonner-supports-monica"}, "edited": false, "score": 2, "creation_date": 1575081636, "post_id": 59082210, "comment_id": 104456474, "body": "@MartinBonner (Also, not that it matters, but sqrt isn&#39;t a <a href=\"https://en.wikipedia.org/wiki/Transcendental_function\" rel=\"nofollow noreferrer\">transcendental function</a>.)"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 26945, "user_id": 771073, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/412bf39694cbe9d1fc0374deda225b18?s=128&d=identicon&r=PG", "display_name": "Martin Bonner supports Monica", "link": "https://stackoverflow.com/users/771073/martin-bonner-supports-monica"}, "edited": false, "score": 4, "creation_date": 1575110199, "post_id": 59082210, "comment_id": 104461008, "body": "@MartinBonner: Any hardware FPU that supports division will normally also support sqrt.  IEEE &quot;basic&quot; operations (+ - * / sqrt) are required to produce a correctly-rounded result; that&#39;s why SSE provides all of those operations but not exp, sin, or whatever.  In fact, divide and sqrt typically run on the same execution unit, designed a similar way.  See <a href=\"https://stackoverflow.com/questions/54642663/how-sqrt-of-gcc-works-after-compiled-which-method-of-root-is-used-newton-rap\">HW div/sqrt unit details</a>.  Anyway, they&#39;re still not fast compared to multiply, especially in latency."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 578, "user_id": 5670773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcc0792657c4665d871ee71ad7362e05?s=128&d=identicon&r=PG&f=1", "display_name": "benrg", "link": "https://stackoverflow.com/users/5670773/benrg"}, "edited": false, "score": 0, "creation_date": 1575110318, "post_id": 59082210, "comment_id": 104461034, "body": "@benrg: <code>fsqrt</code> / <code>sqrtps</code> are not microcoded; they&#39;re IEEE Basic operations directly supported by HW as a single uop, like <code>rsqrtps</code>.  See my previous comment."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1575110602, "post_id": 59082210, "comment_id": 104461081, "body": "@edwardw was your microbenchmark measuring latency or throughput?  Modern div/sqrt units are somewhat pipelined but not fully.  (e.g. Skylake ~12 cycle latency, one per 3 cycle throughput for independent <code>float</code> inputs, or somewhat worse for <code>double</code>).  But multiple is more heavily pipelined, e.g. 4 cycle latency and 0.5 cycle reciprocal throughput (so 8 in flight simultaneously).  Your times of 1.6ns are only ~6 clock cycles at 4GHz which is unreasonably short; you&#39;re probably measuring throughput of sqrt+div averaged over a repeat loop.  Latency for HW sqrt + div is maybe better too."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1575110698, "post_id": 59082210, "comment_id": 104461096, "body": "Anyway, Skylake has significantly better pipelining for div/sqrt than previous uarches.  See <a href=\"//stackoverflow.com/a/45899202\">Floating point division vs floating point multiplication</a> for some extracts from Agner Fog&#39;s table.  If you aren&#39;t doing much other work in a loop so sqrt + div is a bottleneck, you might want to use HW fast reciprocal sqrt (instead of the quake hack) + a Newton iteration.  Especially with FMA that&#39;s good for throughput, if not latency.  <a href=\"//stackoverflow.com/q/31555260\">Fast vectorized rsqrt and reciprocal with SSE/AVX depending on precision</a>"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1575161478, "post_id": 59082210, "comment_id": 104472784, "body": "@PeterCordes it is throughput indeed. I literally wrapped the function call in a closure and fed it to an iterator as dictated by <code>criterion</code> API, which in turn took care of warmup, measurement and statistical analysis. This is the Mandalorian^H^H^H^H <code>criterion</code> way."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 39, "last_activity_date": 1575032563, "last_edit_date": 1575032563, "creation_date": 1574918594, "answer_id": 59082210, "question_id": 59081890, "link": "https://stackoverflow.com/questions/59081890/is-it-possible-to-write-quakes-fast-invsqrt-function-in-rust/59082210#59082210", "title": "Is it possible to write Quake&#39;s fast InvSqrt() function in Rust?", "body": "<p>This one is implemented with less known <code>union</code> in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>union FI {\n    f: f32,\n    i: i32,\n}\n\nfn inv_sqrt(x: f32) -&gt; f32 {\n    let mut u = FI { f: x };\n    unsafe {\n        u.i = 0x5f3759df - (u.i &gt;&gt; 1);\n        u.f * (1.5 - 0.5 * x * u.f * u.f)\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Did some micro benchmarks using <code>criterion</code> crate on a x86-64 Linux box. Surprisingly Rust's own <code>sqrt().recip()</code> is the fastest. But of course, any micro benchmark result should be taken with a grain of salt.</p>\n\n<pre><code>inv sqrt with transmute time:   [1.6605 ns 1.6638 ns 1.6679 ns]\ninv sqrt with union     time:   [1.6543 ns 1.6583 ns 1.6633 ns]\ninv sqrt with to and from bits\n                        time:   [1.7659 ns 1.7677 ns 1.7697 ns]\ninv sqrt with powf      time:   [7.1037 ns 7.1125 ns 7.1223 ns]\ninv sqrt with sqrt then recip\n                        time:   [1.5466 ns 1.5488 ns 1.5513 ns]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "edited": false, "score": 4, "creation_date": 1574950321, "post_id": 59083859, "comment_id": 104416046, "body": "According to the Intel Intrinsics Guide there is no integer shift operation that only shifts the lowest 32-bit of the 128-bit register analog to <code>addss</code> or <code>mulss</code>. But if the other 96 bits of xmm0 can be ignored then one could use the <code>psrld</code> instruction. Same goes for integer subtraction."}, {"owner": {"reputation": 963, "user_id": 4331885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/992f02cc8ab8c9ded76efe924e6a29c4?s=128&d=identicon&r=PG&f=1", "display_name": "Gloweye", "link": "https://stackoverflow.com/users/4331885/gloweye"}, "edited": false, "score": 0, "creation_date": 1574951647, "post_id": 59083859, "comment_id": 104416776, "body": "I&#39;ll admit to knowing next to nothing about rust, but isn&#39;t &quot;unsafe&quot; basically a core property of fast_inv_sqrt? With it&#39;s total disrespect for datatypes and such."}, {"owner": {"reputation": 41558, "user_id": 3204551, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/91bb06155f79d40ffecdf124deecb001?s=128&d=identicon&r=PG&f=1", "display_name": "Deduplicator", "link": "https://stackoverflow.com/users/3204551/deduplicator"}, "reply_to_user": {"reputation": 963, "user_id": 4331885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/992f02cc8ab8c9ded76efe924e6a29c4?s=128&d=identicon&r=PG&f=1", "display_name": "Gloweye", "link": "https://stackoverflow.com/users/4331885/gloweye"}, "edited": false, "score": 13, "creation_date": 1574956920, "post_id": 59083859, "comment_id": 104419471, "body": "@Gloweye It&#39;s a different type of &quot;unsafe&quot; we talk about though. A fast approximation which gets a bad value too far from the sweet spot, versus something playing fast and loose with undefined behavior."}, {"owner": {"reputation": 159118, "user_id": 15416, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/a2b11b9662b5155aada74191fbe7cb9e?s=128&d=identicon&r=PG", "display_name": "MSalters", "link": "https://stackoverflow.com/users/15416/msalters"}, "reply_to_user": {"reputation": 963, "user_id": 4331885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/992f02cc8ab8c9ded76efe924e6a29c4?s=128&d=identicon&r=PG&f=1", "display_name": "Gloweye", "link": "https://stackoverflow.com/users/4331885/gloweye"}, "edited": false, "score": 8, "creation_date": 1575036625, "post_id": 59083859, "comment_id": 104444304, "body": "@Gloweye: Mathematically, the last part of that <code>fast_inv_sqrt</code> is just one Newton-Raphson iteration step to find a better approximation of <code>inv_sqrt</code>. There&#39;s nothing unsafe about that part. The trickery is in the first part, which finds a good approximation. That works because it&#39;s doing an integer divide by 2 on the exponent part of the float, and indeed <code>sqrt(pow(0.5,x))=pow(0.5,x&#47;2)</code>"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 459, "user_id": 5444148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7jOJX.png?s=128&g=1", "display_name": "fsasm", "link": "https://stackoverflow.com/users/5444148/fsasm"}, "edited": false, "score": 1, "creation_date": 1575109872, "post_id": 59083859, "comment_id": 104460937, "body": "@fsasm: That&#39;s correct; <code>movd</code> to EAX and back is a missed optimization by current compilers.  (And yes, calling conventions pass/return scalar <code>float</code> in the low element of an XMM and allow high bits to be garbage.  But note that if it <i>was</i> zero-extended, it can easily stay that way: right shifting doesn&#39;t introduce non-zero elements and neither does subtraction from <code>_mm_set_epi32(0,0,0,0x5f3759df)</code>, i.e. a <code>movd</code> load.  You would need a <code>movdqa xmm1,xmm0</code> to copy the reg before <code>psrld</code>.  Bypass latency from FP instruction forwarding to integer and vice versa is hidden by <code>mulss</code> latency."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 93, "last_activity_date": 1575491462, "last_edit_date": 1575491462, "creation_date": 1574926831, "answer_id": 59083859, "question_id": 59081890, "link": "https://stackoverflow.com/questions/59081890/is-it-possible-to-write-quakes-fast-invsqrt-function-in-rust/59083859#59083859", "title": "Is it possible to write Quake&#39;s fast InvSqrt() function in Rust?", "body": "<blockquote>\n  <p>I don't know how to encode the float number using integer format.</p>\n</blockquote>\n\n<p>There is a function for that: <a href=\"https://doc.rust-lang.org/stable/std/primitive.f32.html#method.to_bits\" rel=\"noreferrer\"><strong><code>f32::to_bits</code></strong></a> which returns an <code>u32</code>. There is also the function for the other direction: <a href=\"https://doc.rust-lang.org/stable/std/primitive.f32.html#method.from_bits\" rel=\"noreferrer\"><strong><code>f32::from_bits</code></strong></a> which takes an <code>u32</code> as argument. These functions are preferred over <code>mem::transmute</code> as the latter is <code>unsafe</code> and tricky to use.</p>\n\n<p>With that, here is the implementation of <code>InvSqrt</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn inv_sqrt(x: f32) -&gt; f32 {\n    let i = x.to_bits();\n    let i = 0x5f3759df - (i &gt;&gt; 1);\n    let y = f32::from_bits(i);\n\n    y * (1.5 - 0.5 * x * y * y)\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b0140f3f71967d57995025859dcece13\" rel=\"noreferrer\">Playground</a>)</p>\n\n<hr>\n\n<p>This function compiles to the following assembly on x86-64:</p>\n\n<pre><code>.LCPI0_0:\n        .long   3204448256        ; f32 -0.5\n.LCPI0_1:\n        .long   1069547520        ; f32  1.5\nexample::inv_sqrt:\n        movd    eax, xmm0\n        shr     eax                   ; i &lt;&lt; 1\n        mov     ecx, 1597463007       ; 0x5f3759df\n        sub     ecx, eax              ; 0x5f3759df - ...\n        movd    xmm1, ecx\n        mulss   xmm0, dword ptr [rip + .LCPI0_0]    ; x *= 0.5\n        mulss   xmm0, xmm1                          ; x *= y\n        mulss   xmm0, xmm1                          ; x *= y\n        addss   xmm0, dword ptr [rip + .LCPI0_1]    ; x += 1.5\n        mulss   xmm0, xmm1                          ; x *= y\n        ret\n</code></pre>\n\n<p>I have not found any reference assembly (if you have, please tell me!), but it seems fairly good to me. I am just not sure why the float was moved into <code>eax</code> just to do the shift and integer subtraction. Maybe SSE registers do not support those operations?</p>\n\n<p>clang 9.0 with <code>-O3</code> compiles the C code to <a href=\"https://godbolt.org/z/3nkfep\" rel=\"noreferrer\">basically the same assembly</a>. So that's a good sign.</p>\n\n<hr>\n\n<p>It is worth pointing out that if you actually want to use this in practice: please don't. As benrg <a href=\"https://stackoverflow.com/questions/59081890/is-it-possible-to-write-quakes-fast-invsqrt-function-in-rust/59083859#comment104456436_59081890\">pointed out in the comments</a>, modern x86 CPUs have a specialized instruction for this function which is faster and more accurate than this hack. Unfortunately, <code>1.0 / x.sqrt()</code> <a href=\"https://rust.godbolt.org/z/S9REQt\" rel=\"noreferrer\">does not seem to optimize to that instruction</a>. So if you really need the speed, using <a href=\"https://doc.rust-lang.org/stable/core/arch/x86_64/fn._mm_rsqrt_ps.html\" rel=\"noreferrer\">the <code>_mm_rsqrt_ps</code> intrinsics</a> is probably the way to go. This, however, does again require <code>unsafe</code> code. I won't go into much detail in this answer, as a minority of programmers will actually need it.</p>\n"}], "owner": {"reputation": 1148, "user_id": 5067875, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SeC0a.jpg?s=128&g=1", "display_name": "Flyq", "link": "https://stackoverflow.com/users/5067875/flyq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7681, "favorite_count": 26, "answer_count": 3, "score": 106, "last_activity_date": 1575491462, "creation_date": 1574916327, "last_edit_date": 1575111027, "question_id": 59081890, "link": "https://stackoverflow.com/questions/59081890/is-it-possible-to-write-quakes-fast-invsqrt-function-in-rust", "title": "Is it possible to write Quake&#39;s fast InvSqrt() function in Rust?", "body": "<p>This is just to satisfy my own curiosity.</p>\n\n<p>Is there an implementation of this:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>float InvSqrt (float x)\n{\n   float xhalf = 0.5f*x;\n   int i = *(int*)&amp;x;\n   i = 0x5f3759df - (i&gt;&gt;1);\n   x = *(float*)&amp;i;\n   x = x*(1.5f - xhalf*x*x);\n   return x;\n}\n</code></pre>\n\n<p>in Rust? If it exists, post the code.</p>\n\n<p>I tried it and failed. I don't know how to encode the float number using integer format. Here is my attempt:</p>\n\n<pre><code>fn main() {\n    println!(\"Hello, world!\");\n    println!(\"sqrt1: {}, \",sqrt2(100f64));\n}\n\nfn sqrt1(x: f64) -&gt; f64 {\n    x.sqrt()\n}\n\nfn sqrt2(x: f64) -&gt; f64 {\n    let mut x = x;\n    let xhalf = 0.5*x;\n    let mut i = x as i64;\n    println!(\"sqrt1: {}, \", i);\n\n    i = 0x5f375a86 as i64 - (i&gt;&gt;1);\n\n    x = i as f64;\n    x = x*(1.5f64 - xhalf*x*x);\n    1.0/x\n}\n</code></pre>\n\n<p>Reference:<br>\n1. <a href=\"https://www.beyond3d.com/content/articles/8/\" rel=\"noreferrer\">Origin of Quake3's Fast InvSqrt() - Page 1</a><br>\n2. <a href=\"https://betterexplained.com/articles/understanding-quakes-fast-inverse-square-root/\" rel=\"noreferrer\">Understanding Quake\u2019s Fast Inverse Square Root</a><br>\n3. <a href=\"http://www.lomont.org/papers/2003/InvSqrt.pdf\" rel=\"noreferrer\">FAST INVERSE SQUARE ROOT.pdf</a><br>\n4. <a href=\"https://github.com/id-Software/Quake-III-Arena/blob/master/code/game/q_math.c#L552-L572\" rel=\"noreferrer\">source code: q_math.c#L552-L572</a>  </p>\n"}, {"tags": ["testing", "rust", "integration-testing"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1574950500, "creation_date": 1574950500, "answer_id": 59090848, "question_id": 59081271, "link": "https://stackoverflow.com/questions/59081271/how-to-call-test-helper-function-from-within-integration-tests/59090848#59090848", "title": "How to call test helper function from within integration tests?", "body": "<p>The <code>test</code> feature is only enabled while tests are being run on <em>that</em> crate. Integration tests are run externally to the crate, so you cannot access anything that is gated on <code>test</code>.</p>\n\n<p>In my company we have a convention to put shared test utilities in a public <code>test_utils</code> module at the top level of a crate. You <em>could</em> gate this module behind your own feature, say <code>integration_test</code>, which you always enable when running those tests, but we don't currently bother with that.</p>\n"}], "owner": {"reputation": 979, "user_id": 1554154, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OpBwW.jpg?s=128&g=1", "display_name": "rinde", "link": "https://stackoverflow.com/users/1554154/rinde"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 359, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1574950500, "creation_date": 1574911250, "question_id": 59081271, "link": "https://stackoverflow.com/questions/59081271/how-to-call-test-helper-function-from-within-integration-tests", "title": "How to call test helper function from within integration tests?", "body": "<p>I'm trying to figure out how to best organize my tests in Rust, and I'm running into the following problem. I have a test utility (<code>test_util</code>) that I define in a module and I would like to be able to use it from my unit tests as well as from my integration tests.</p>\n\n<p>Definition of <code>test_util</code> in <code>src/lib.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(test)]\npub mod test_util {\n    pub fn test_helper() {}\n}\n</code></pre>\n\n<p>I can access my helper function from my unit tests in another module, <code>src/some_module.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(test)]\npub mod test {\n    use crate::test_util::test_helper;\n\n    #[test]\n    fn test_test_helper() {\n        test_helper();\n    }\n}\n</code></pre>\n\n<p>However, when I try to use the utility from my integration test, as in <code>tests/integration_test.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use my_project::test_util::test_helper;\n\n#[test]\nfn integration_test_test_helper() {\n    test_helper();\n}\n</code></pre>\n\n<p>I get the following compiler message:</p>\n\n<pre><code>8 | use my_project::test_util::test_helper;\n  |                 ^^^^^^^^^ could not find `test_util` in `my_project`\n</code></pre>\n\n<p>Is there a good reason why it is not allowed to access test code from the project from within an integration test belonging to that <em>same</em> project? I get it that integration tests can only access the public parts of the code, but I think it would make sense to also allow access to the public parts of the unit test code. What would be a work around for this?</p>\n"}]