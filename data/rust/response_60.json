[{"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1456935976, "post_id": 35752476, "comment_id": 59178802, "body": "It is strange that a method for a completely different self type <code>Box&lt;[T]&gt;</code> can be defined in an <code>impl Vec&lt;T&gt;</code>. Is that documented somewhere? <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.into_vec\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/vec/struct.Vec.html#method.into_vec</a>"}, {"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1456936333, "post_id": 35752476, "comment_id": 59179092, "body": "@starblue As far as I see, the method used here is this one: <a href=\"http://doc.rust-lang.org/std/primitive.slice.html#method.into_vec\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.slice.html#method.into_vec</a>"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1456937324, "post_id": 35752476, "comment_id": 59179854, "body": "@Thierry Maybe, then <code>Box</code> is added to <code>Self</code> like a reference. The one on <code>Vec</code> is still strange."}], "tags": [], "owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "is_accepted": true, "score": 5, "last_activity_date": 1456935108, "creation_date": 1456935108, "answer_id": 35752476, "question_id": 35751927, "link": "https://stackoverflow.com/questions/35751927/how-to-convert-a-boxed-array-into-a-vec-in-rust/35752476#35752476", "title": "How to convert a boxed array into a Vec in Rust", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/primitive.slice.html\" rel=\"noreferrer\">documentation you link to</a> is for slices, i.e., <code>[T]</code>, while what you have is an array of length 4: <code>[T; 4]</code>.</p>\n\n<p>You can, however, simply convert those, since an array of length 4 <em>kinda is</em> a slice. This works:</p>\n\n<pre><code>let foo = Box::new([1, 2, 3, 4]);\nlet bar = (foo as Box&lt;[_]&gt;).into_vec();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 566, "user_id": 1480374, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5534b0e86f957dafe87c9b244a0face4?s=128&d=identicon&r=PG", "display_name": "fyaa", "link": "https://stackoverflow.com/users/1480374/fyaa"}, "edited": false, "score": 0, "creation_date": 1457081628, "post_id": 35757440, "comment_id": 59253335, "body": "So it is better that you are loosing the length information?"}, {"owner": {"reputation": 21316, "user_id": 526217, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/db561d0fda29a204506bdadd6b802047?s=128&d=identicon&r=PG", "display_name": "evilone", "link": "https://stackoverflow.com/users/526217/evilone"}, "reply_to_user": {"reputation": 566, "user_id": 1480374, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5534b0e86f957dafe87c9b244a0face4?s=128&d=identicon&r=PG", "display_name": "fyaa", "link": "https://stackoverflow.com/users/1480374/fyaa"}, "edited": false, "score": 0, "creation_date": 1457089335, "post_id": 35757440, "comment_id": 59258522, "body": "@fyaa I think there&#39;s no need for length information in your example when you allocating your slice. You are not losing anything. This is not a fixed-size array, but a slice."}], "tags": [], "owner": {"reputation": 21316, "user_id": 526217, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/db561d0fda29a204506bdadd6b802047?s=128&d=identicon&r=PG", "display_name": "evilone", "link": "https://stackoverflow.com/users/526217/evilone"}, "is_accepted": false, "score": 7, "last_activity_date": 1456950532, "creation_date": 1456950532, "answer_id": 35757440, "question_id": 35751927, "link": "https://stackoverflow.com/questions/35751927/how-to-convert-a-boxed-array-into-a-vec-in-rust/35757440#35757440", "title": "How to convert a boxed array into a Vec in Rust", "body": "<p>I think there's more cleaner way to do it. When you initialize <code>foo</code>, add type to it. <a href=\"http://is.gd/fiye66\" rel=\"noreferrer\">Playground</a></p>\n\n<pre><code>fn main() {\n    let foo: Box&lt;[u32]&gt; = Box::new([1, 2, 3, 4]);\n    let bar = foo.into_vec();\n\n    println!(\"{:?}\", bar);\n}\n</code></pre>\n"}], "owner": {"reputation": 566, "user_id": 1480374, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5534b0e86f957dafe87c9b244a0face4?s=128&d=identicon&r=PG", "display_name": "fyaa", "link": "https://stackoverflow.com/users/1480374/fyaa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2482, "favorite_count": 0, "accepted_answer_id": 35752476, "answer_count": 2, "score": 8, "last_activity_date": 1456963421, "creation_date": 1456933674, "last_edit_date": 1456963421, "question_id": 35751927, "link": "https://stackoverflow.com/questions/35751927/how-to-convert-a-boxed-array-into-a-vec-in-rust", "title": "How to convert a boxed array into a Vec in Rust", "body": "<p>I have a boxed array of structs and I want to consume this array and insert it into a vector.</p>\n\n<p>My current approach would be to convert the array into a vector, but the corresponding library function does not seem to work the way I expected.</p>\n\n<pre><code>let foo = Box::new([1, 2, 3, 4]);\nlet bar = foo.into_vec();\n</code></pre>\n\n<p>The compiler error states </p>\n\n<blockquote>\n  <p>no method named <code>into_vec</code> found for type <code>Box&lt;[_; 4]&gt;</code> in the current scope</p>\n</blockquote>\n\n<p>I've found specifications <a href=\"https://doc.rust-lang.org/std/primitive.slice.html\" rel=\"noreferrer\">here</a> that look like</p>\n\n<pre><code>fn into_vec(self: Box&lt;[T]&gt;) -&gt; Vec&lt;T&gt;\nConverts self into a vector without clones or allocation.\n</code></pre>\n\n<p>... but I am not quite sure how to apply it. Any suggestions?</p>\n"}, {"tags": ["rust", "coroutine", "channels"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1456889024, "creation_date": 1456889024, "answer_id": 35737905, "question_id": 35737217, "link": "https://stackoverflow.com/questions/35737217/how-to-daisy-chain-threads-using-channels-in-rust/35737905#35737905", "title": "How to daisy chain threads using channels in Rust?", "body": "<p>You don't really explain what the problem that you are having, but your code is close enough:</p>\n\n<pre><code>use std::sync::mpsc::{channel, Sender, Receiver};\nuse std::thread;\n\nfn generate_numbers(tx: Sender&lt;u8&gt;) {\n    for i in 2..100 {\n        tx.send(i).unwrap();\n    }\n}\n\nfn filter(rx: Receiver&lt;u8&gt;, tx: Sender&lt;u8&gt;, val: u8) {\n    for v in rx {\n        if v % val != 0 {\n            tx.send(v).unwrap();\n        }\n    }\n}\n\nfn main() {\n    let (base_tx, base_rx) = channel();\n    thread::spawn(move || {\n        generate_numbers(base_tx);\n    });\n\n    let mut old_rx = base_rx;\n\n    loop {\n        let num = match old_rx.recv() {\n            Ok(v) =&gt; v,\n            Err(_) =&gt; break,\n        };\n\n        println!(\"prime: {}\", num);\n\n        let (new_tx, new_rx) = channel();\n\n        thread::spawn(move || {\n            filter(old_rx, new_tx, num);\n        });\n\n        old_rx = new_rx;\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>using coroutines</p>\n</blockquote>\n\n<p><em>Danger, Danger, Will Robinson!</em> These are <strong>not</strong> coroutines; they are full-fledged threads! These are a lot more heavyweight compared to a coroutine.</p>\n\n<blockquote>\n  <p>What is the best way to deal with a situation like this where a <code>Receiver</code> needs to be handed off to a different thread?</p>\n</blockquote>\n\n<p>Just... transfer ownership of the <code>Receiver</code> to the thread?</p>\n"}], "owner": {"reputation": 1014, "user_id": 2551956, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/ba34ab655eaf76dc5486c0677aad24f9?s=128&d=identicon&r=PG", "display_name": "user234461", "link": "https://stackoverflow.com/users/2551956/user234461"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 372, "favorite_count": 1, "accepted_answer_id": 35737905, "answer_count": 1, "score": 1, "last_activity_date": 1456889024, "creation_date": 1456885026, "last_edit_date": 1456887734, "question_id": 35737217, "link": "https://stackoverflow.com/questions/35737217/how-to-daisy-chain-threads-using-channels-in-rust", "title": "How to daisy chain threads using channels in Rust?", "body": "<p>I'm trying to implement the sieve of Eratosthenes in Rust using coroutines as a learning exercise (not homework), and I can't find any reasonable way of connecting each thread to the <code>Receiver</code> and <code>Sender</code> ends of two different channels.</p>\n\n<p>The <code>Receiver</code> is involved in two distinct tasks, namely reporting the highest prime found so far, and supplying further candidate primes for the filter. This is fundamental to the algorithm.</p>\n\n<p>Here is what I would like to do but can't because the Receiver cannot be transferred between threads. Using <code>std::sync::Arc</code> does not appear to help, unsurprisingly.</p>\n\n<p><em>Please note that I do understand why this doesn't work</em></p>\n\n<pre><code>fn main() {\n    let (basetx, baserx): (Sender&lt;u32&gt;, Receiver&lt;u32&gt;) = channel();\n    let max_number = 103;\n    thread::spawn(move|| {\n        generate_natural_numbers(&amp;basetx, max_number);\n    });\n    let oldrx = &amp;baserx;\n    loop {\n        // we need the prime in this thread\n        let prime = match oldrx.recv() {\n            Ok(num) =&gt; num,\n            Err(_) =&gt; { break; 0 }\n        };\n        println!(\"{}\",prime);\n        // create (newtx, newrx) in a deliberately unspecified way\n        // now we need to pass the receiver off to the sieve thread\n        thread::spawn(move || {\n            sieve(oldrx, newtx, prime); // forwards numbers if not divisible by prime\n        });\n        oldrx = newrx;\n    }\n}\n</code></pre>\n\n<p>Equivalent working Go code:</p>\n\n<pre><code>func main() {\n        channel := make(chan int)\n        var ok bool = true;\n        var prime int = 0;\n        go generate(channel, 103)\n        for true {\n                prime, ok = &lt;- channel\n                if !ok {\n                        break;\n                }\n                new_channel := make(chan int)\n                go sieve(channel, new, prime)\n                channel = new_channel\n                fmt.Println(prime)\n        }\n}\n</code></pre>\n\n<p>What is the best way to deal with a situation like this where a <code>Receiver</code> needs to be handed off to a different thread?</p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456874766, "post_id": 35735563, "comment_id": 59145640, "body": "IIRC, some stabs have been taken at implementing one, but I think that you really can&#39;t implement many methods to parallel <code>Iterator</code>, at least with the current state of Rust."}, {"owner": {"reputation": 2987, "user_id": 549617, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/LkpMK.jpg?s=128&g=1", "display_name": "GordonBGood", "link": "https://stackoverflow.com/users/549617/gordonbgood"}, "edited": false, "score": 0, "creation_date": 1467383269, "post_id": 35735563, "comment_id": 63725415, "body": "Your alternate stream works; However,since we don&#39;t have tail recursive optimization and thus recursive functions on immutable values, we would still need to use mutability, but it would be a different kind of local mutability instead of a global one.  The trouble with this is that, while we can have iteration streams, we can&#39;t combine that with memoization as that would require two references to the same thing: the start of the stream held in memory and the current point in the stream being (lazily) evaluated.  It seems this can&#39;t be done in Rust without major changes."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": false, "score": 3, "last_activity_date": 1456874247, "creation_date": 1456874247, "answer_id": 35735563, "question_id": 35735070, "link": "https://stackoverflow.com/questions/35735070/pass-an-iterator-of-structs-to-a-function-accepting-references-in-rust/35735563#35735563", "title": "Pass an iterator of structs to a function accepting references in Rust?", "body": "<p>An iterator of references allows the consumer to keep all the references that the iterator yielded, for as long as they want (at least while the iterator itself remains alive). Obviously to support that, <em>all</em> objects to which the iterator creates references need to be in memory at the same time. There is no way around this with the iterator protocol as-is. So your best course of action is to <code>collect()</code> the iterator into a vector and create an reference iterator from that (as you do with <code>solid</code>). Unfortunately this means losing the laziness.</p>\n\n<p>There is an alternative iterator abstraction, called streaming iterator, which would support this. With streaming iterators, the consumer may only hold onto the reference <em>until it gets the next one</em>. I am not aware of any crates implementing this though, and it would be a completely different trait which no function using <code>std::iter::Iterator</code> supports. In many cases it may even be impossible to use streaming iterators, because the algorithm <em>needs</em> the freedom to reference several values at once.</p>\n"}, {"comments": [{"owner": {"reputation": 4930, "user_id": 171236, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d3b966fda9859d4bcd97c46b6a851210?s=128&d=identicon&r=PG", "display_name": "Doctor J", "link": "https://stackoverflow.com/users/171236/doctor-j"}, "edited": false, "score": 0, "creation_date": 1456881955, "post_id": 35735642, "comment_id": 59147821, "body": "If the closure returns an actual struct rather than a pointer, wouldn&#39;t that move ownership to the <code>map</code> iterator, which could then move ownership to its caller on <code>next()</code>?  Then there just needs to be an iterator adapter that takes a thing and returns a reference to it.  That doesn&#39;t seem impossible.  And, why doesn&#39;t <code>Box</code>ing work?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4930, "user_id": 171236, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d3b966fda9859d4bcd97c46b6a851210?s=128&d=identicon&r=PG", "display_name": "Doctor J", "link": "https://stackoverflow.com/users/171236/doctor-j"}, "edited": false, "score": 1, "creation_date": 1456887602, "post_id": 35735642, "comment_id": 59149482, "body": "@DoctorJ <i>Then there just needs to be an iterator adapter that takes a thing and returns a reference to it</i> \u2014 but what would hold ownership of the thing while the reference is returned? This starts to veer into <a href=\"http://stackoverflow.com/a/35735563/155423\">delnan&#39;s answer</a>; the <code>Iterator</code> trait doesn&#39;t allow you to return references to something that the iterator itself owns. Even if the trait were changed (or an alternate created), it would have a boatload of limitations. The current abstraction is more applicable (and understandable) in more contexts."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1577896262, "last_edit_date": 1577896262, "creation_date": 1456874695, "answer_id": 35735642, "question_id": 35735070, "link": "https://stackoverflow.com/questions/35735070/pass-an-iterator-of-structs-to-a-function-accepting-references-in-rust/35735642#35735642", "title": "Pass an iterator of structs to a function accepting references in Rust?", "body": "<p>Short answer: you can't.</p>\n\n<hr>\n\n<p>Longer explanation:</p>\n\n<p>Here is \"an iterator that produces new structs\":</p>\n\n<pre><code>let iterator_of_structs = (1..5).map(|value| Thing { value });\n</code></pre>\n\n<p>The main trick to figuring this out is to always ask \"who owns the data?\".</p>\n\n<p>Each time we call <code>next</code>, the closure takes ownership of an integer (via <code>value</code>) and constructs a new <code>Thing</code>. The closure returns the <code>Thing</code>, transferring ownership to the code that called <code>next</code>.</p>\n\n<p>While you are borrowing a value (a.k.a. taking a reference), the ownership of the value cannot change hands and the value must last longer than the borrow lasts.</p>\n\n<p>Let's turn to the concept of an iterator of references and ask our question: \"who owns the data?\".</p>\n\n<pre><code>map(|value| &amp;Thing { value })\n</code></pre>\n\n<p>Here, we create a <code>Thing</code> and take a reference to it. No variable owns the <code>Thing</code>, so the <strong>scope owns it</strong> and the value will be destroyed when the scope ends. The closure tries to return the reference, but that violates the axiom that borrowed items must outlive their borrows.</p>\n\n<hr>\n\n<p>So, how do you fix it? The easiest thing is to change your function to be more accepting:</p>\n\n<pre><code>use std::borrow::Borrow;\n\nstruct Thing {\n    value: u32,\n}\n\nfn consume(things: impl IntoIterator&lt;Item = impl Borrow&lt;Thing&gt;&gt;) {\n    for thing in things {\n        let thing = thing.borrow();\n        println!(\"{}\", thing.value);\n    }\n}\n\nfn main() {\n    let iterator_of_structs = (1..5).map(|value| Thing { value });\n    consume(iterator_of_structs);\n\n    let vector_of_structs: Vec&lt;_&gt; = (1..5).map(|value| Thing { value }).collect();\n    let iterator_of_references_to_structs = vector_of_structs.iter();\n    consume(iterator_of_references_to_structs);\n}\n</code></pre>\n\n<p>Here, we accept any type which can be converted into an iterator of items that allow us to borrow a reference to a <code>Thing</code>. This is implemented for any item and any reference to an item.</p>\n"}], "owner": {"reputation": 4930, "user_id": 171236, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d3b966fda9859d4bcd97c46b6a851210?s=128&d=identicon&r=PG", "display_name": "Doctor J", "link": "https://stackoverflow.com/users/171236/doctor-j"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 939, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1577896262, "creation_date": 1456872105, "last_edit_date": 1577896083, "question_id": 35735070, "link": "https://stackoverflow.com/questions/35735070/pass-an-iterator-of-structs-to-a-function-accepting-references-in-rust", "title": "Pass an iterator of structs to a function accepting references in Rust?", "body": "<p>I have a function that takes an iterator over references to structs.  Sometimes I'm iterating over a vector, which works fine, but sometimes I create an iterator that produces new structs, and I'm having trouble figuring that one out.  I get that when I create a value in a closure, it goes away when the closure does. Rust is always trying to move values out of things when I don't want it to; why doesn't it here?  </p>\n\n<pre><code>struct Thing {\n    value: u32,\n}\n\nfn consume&lt;'a, I: IntoIterator&lt;Item = &amp;'a Thing&gt;&gt;(things: I) {\n    for thing in things {\n        println!(\"{}\", thing.value);\n    }\n}\n\nfn main() {\n    let solid = vec![Thing { value: 0 }];\n    let ephemeral = (1..5).map(|i| &amp;Thing { value: i }); // Boxing Thing does not work either\n    consume(solid.iter());\n    consume(ephemeral);\n}\n</code></pre>\n\n<p>But </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return reference to temporary value\n  --&gt; src/main.rs:13:36\n   |\n13 |     let ephemeral = (1..5).map(|i| &amp;Thing { value: i }); // Boxing Thing does not work either\n   |                                    ^------------------\n   |                                    ||\n   |                                    |temporary value created here\n   |                                    returns a reference to data owned by the current function\n</code></pre>\n\n<p>I have the sense I either need to move the struct out of the closure and iterator, or store it somewhere.  But <code>Box</code>ing the struct doesn't work and returning a struct rather than a pointer doesn't type check (and I can't find the opposite of <code>.cloned()</code>).  What's the approach here?</p>\n"}, {"tags": ["graph", "rust", "lifetime", "ownership"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1456869876, "post_id": 35734306, "comment_id": 59143407, "body": "Searching on <a href=\"https://crates.io/\" rel=\"nofollow noreferrer\">crates.io</a> for &quot;arena&quot; provides many results. One such crate is <a href=\"https://crates.io/crates/typed-arena\" rel=\"nofollow noreferrer\">typed-arena</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1456869998, "post_id": 35734306, "comment_id": 59143467, "body": "<i>I can also not use something like <code>Rc</code> because the graph has cycles.</i> \u2014 not completely true; you can introduce <a href=\"http://doc.rust-lang.org/std/rc/struct.Weak.html\" rel=\"nofollow noreferrer\"><code>Weak</code></a> references when you have cyclical data. The <a href=\"http://doc.rust-lang.org/std/rc/index.html\" rel=\"nofollow noreferrer\">module-level documentation</a> has an example."}, {"owner": {"reputation": 25156, "user_id": 230461, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/202ecb437d8bbd442d093a3a35c67a04?s=128&d=identicon&r=PG", "display_name": "dflemstr", "link": "https://stackoverflow.com/users/230461/dflemstr"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1457030223, "post_id": 35734306, "comment_id": 59232010, "body": "@Shepmaster The <code>typed-arena</code> implementation lets me get borrows, but those borrows are bound to a <code>&amp;mut</code> lifetime that I can&#39;t connect to the lifetime of the arena. I&#39;ll try using weak references, though."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456925005, "post_id": 35741637, "comment_id": 59169972, "body": "<i>On 64 bits platforms, using 32 bits indices could shave off some bytes.</i> \u2014 would this entail many casts between a <code>u32</code> and <code>usize</code>?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456925349, "post_id": 35741637, "comment_id": 59170253, "body": "@Shepmaster: well, at hardware level, it will entail casts of course; at software level, however, providing the vector is properly encapsulated with access functions taking a <code>u32</code>, then you should only get one or two <code>as usize</code>."}, {"owner": {"reputation": 25156, "user_id": 230461, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/202ecb437d8bbd442d093a3a35c67a04?s=128&d=identicon&r=PG", "display_name": "dflemstr", "link": "https://stackoverflow.com/users/230461/dflemstr"}, "edited": false, "score": 0, "creation_date": 1457030281, "post_id": 35741637, "comment_id": 59232047, "body": "@MatthieuM. Could you demonstrate how <code>typed-arena</code> would let me build a graph in a way that would let me encapsulate that graph in a <code>struct</code>?"}, {"owner": {"reputation": 25156, "user_id": 230461, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/202ecb437d8bbd442d093a3a35c67a04?s=128&d=identicon&r=PG", "display_name": "dflemstr", "link": "https://stackoverflow.com/users/230461/dflemstr"}, "edited": false, "score": 0, "creation_date": 1457038793, "post_id": 35741637, "comment_id": 59237173, "body": "@MatthieuM. (I have used <code>typed-arena</code> before, but I have only gotten it to work in a single stack frame)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 25156, "user_id": 230461, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/202ecb437d8bbd442d093a3a35c67a04?s=128&d=identicon&r=PG", "display_name": "dflemstr", "link": "https://stackoverflow.com/users/230461/dflemstr"}, "edited": false, "score": 0, "creation_date": 1457075582, "post_id": 35741637, "comment_id": 59250428, "body": "@dflemstr: I suggested <code>typed-arena</code> because you were speaking about an arena, however the items created by an arena borrow said arena (because you cannot refer to the item after the arena is dead) and sibling borrowing relationships are not allowed in Rust so indeed the arena itself would not be part of the graph. I do not think this is much of an issue (as long as you have an upper-bound on the lifetime). If being part of the graph is necessary, then the <code>Vec</code> + indices solution is easier."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1456906162, "creation_date": 1456906162, "answer_id": 35741637, "question_id": 35734306, "link": "https://stackoverflow.com/questions/35734306/owned-arena-data-structure/35741637#35741637", "title": "Owned arena data structure", "body": "<p>A simple go-to solution is to use the <a href=\"https://crates.io/crates/typed-arena\" rel=\"nofollow\">typed-arena</a> crate. It contains an <code>Arena</code> type with a <code>fn alloc(&amp;self, T) -&gt; &amp;mut T</code> method.</p>\n\n<p>Another simple solution would be to use indices instead of references (and never remove from the <code>Vec</code> as this would invalidate indices). On 64 bits platforms, using 32 bits indices could shave off some bytes.</p>\n\n<p>Both solutions, however, suffer from the inability to <em>remove</em> nodes. You may stop referencing them, but they will still live in memory, and as such using them for dynamic graphs (where nodes come and go) requires a bit more work. My advice in this case is to periodically create a new clone of the graph from a fresh arena (not duplicating the unused nodes), which is akin to using a Moving Garbage Collector, if less automatic.</p>\n"}], "owner": {"reputation": 25156, "user_id": 230461, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/202ecb437d8bbd442d093a3a35c67a04?s=128&d=identicon&r=PG", "display_name": "dflemstr", "link": "https://stackoverflow.com/users/230461/dflemstr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 402, "favorite_count": 0, "closed_date": 1508105621, "accepted_answer_id": 35741637, "answer_count": 1, "score": 0, "last_activity_date": 1456906162, "creation_date": 1456869210, "last_edit_date": 1456905388, "question_id": 35734306, "link": "https://stackoverflow.com/questions/35734306/owned-arena-data-structure", "closed_reason": "Duplicate", "title": "Owned arena data structure", "body": "<p>I want to model a very large (number of nodes) graph consisting of many very large (memory-wise) nodes.  Since the nodes are so large, I would like to only store them once and pass around borrows to them, so conceptually something like this:</p>\n\n<pre><code>struct Graph&lt;'a&gt; {\n    nodes: Vec&lt;Node&lt;'a&gt;&gt;,\n}\n\nstruct Node&lt;'a&gt; {\n    edges: HashMap&lt;String, &amp;'a Node&gt;,\n    // ...lots of other data...\n}\n</code></pre>\n\n<p>Of course there is no way to construct a <code>Graph</code> like this because (a) <code>Vec</code> does not allow me to add new nodes when there are borrows to the elements, and (b) I can't tell rustc that the <code>nodes</code> vector will live for lifetime <code>'a</code>.  I can also not use something like <code>Rc</code> because the graph has cycles.</p>\n\n<p>What I would like to be able to express is an arena of sorts, which lets me allocate a lot of <code>Node</code>s, make immutable borrows to them as long as the arena lives, and use lifetime checks to ensure that I have no remaining <code>Node</code> references out when the arena is de-allocated.  Something like:</p>\n\n<pre><code>struct Graph&lt;'a&gt; {\n    nodes: Arena&lt;'a, Node&lt;'a&gt;&gt;,\n}\n\nstruct Node&lt;'a&gt; {\n    edges: HashMap&lt;String, &amp;'a Node&gt;,\n}\n\nimpl&lt;'a, A&gt; Arena&lt;'a, A&gt; {\n    fn own(&amp;self, a: A) -&gt; &amp;'a A {\n        // magic\n    }\n}\n\nimpl&lt;'a, A&gt; Drop for Arena&lt;'a, A&gt; {\n    fn drop(&amp;'a mut self) {\n        // magic\n    }\n}\n</code></pre>\n\n<p>Is this semantically possible to express in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 1, "creation_date": 1456862074, "post_id": 35732065, "comment_id": 59139028, "body": "A simple solution would be to call <code>str_vec[2].to_string()</code>."}, {"owner": {"reputation": 1835, "user_id": 963319, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/1b950873c444db9f4ae35d86563b430b?s=128&d=identicon&r=PG", "display_name": "Jenia Ivanov", "link": "https://stackoverflow.com/users/963319/jenia-ivanov"}, "reply_to_user": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 1, "creation_date": 1456862176, "post_id": 35732065, "comment_id": 59139086, "body": "amazing. I suggest to make this into an answer and then I can accept it. that way you;ll get more points"}], "answers": [{"tags": [], "owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "is_accepted": true, "score": 5, "last_activity_date": 1456862639, "last_edit_date": 1456862639, "creation_date": 1456862401, "answer_id": 35732318, "question_id": 35732065, "link": "https://stackoverflow.com/questions/35732065/mismatches-between-str-and-string/35732318#35732318", "title": "mismatches between str and string", "body": "<p>A more detailed answer than a comment:</p>\n\n<p>The reason your example fails to compile initially is because you are trying to insert a slice into a vector of Strings. Because the primitive type <code>str</code> implements the <code>ToString</code> trait, you can call the <code>to_string()</code> method to convert it to a String giving your vector the correct type.</p>\n\n<p>Another option would be <code>to_owned()</code> as illustrated in <a href=\"https://users.rust-lang.org/t/to-string-vs-to-owned-for-string-literals/1441\" rel=\"nofollow\">this</a> thread.</p>\n"}], "owner": {"reputation": 1835, "user_id": 963319, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/1b950873c444db9f4ae35d86563b430b?s=128&d=identicon&r=PG", "display_name": "Jenia Ivanov", "link": "https://stackoverflow.com/users/963319/jenia-ivanov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1163, "favorite_count": 0, "accepted_answer_id": 35732318, "answer_count": 1, "score": 1, "last_activity_date": 1456863908, "creation_date": 1456861543, "last_edit_date": 1456863908, "question_id": 35732065, "link": "https://stackoverflow.com/questions/35732065/mismatches-between-str-and-string", "title": "mismatches between str and string", "body": "<p>I this tiny program, but I can't make it run. I get type mismatches between <code>&amp;str</code> and <code>String</code> or similar errors.</p>\n\n<p>So this is the program</p>\n\n<pre><code>use std::fs::File;\nuse std::io;\nuse std::io::prelude::*;\nuse std::io::BufReader;\nuse std::collections::HashMap;\n\nfn main() {\n    let mut f = File::open(\"/home/asti/class.csv\").expect(\"Couldn't open file\");\n    let mut s = String::new();\n    let reader = BufReader::new(f);\n    let lines: Result&lt;Vec&lt;_&gt;,_&gt; = reader.lines().collect();\n\n\n    let mut class_students: HashMap&lt;String, Vec&lt;String&gt;&gt; = HashMap::new();\n    for l in lines.unwrap() {\n        let mut str_vec: Vec&lt;&amp;str&gt; = l.split(\";\").collect();\n        println!(\"{}\", str_vec[2]);\n        let e = class_students.entry(str_vec[2]).or_insert(vec![]);\n        e.push(str_vec[2]);\n    }\n\n    println!(\"{}\", class_students);\n\n\n}\n</code></pre>\n\n<p>I constantly get this error:</p>\n\n<pre><code>hello_world.rs:20:38: 20:48 error: mismatched types:\n expected `collections::string::String`,\n    found `&amp;str`\n(expected struct `collections::string::String`,\n    found &amp;-ptr) [E0308]\nhello_world.rs:20         let e = class_students.entry(str_vec[2]).or_insert(vec![]);\n                                                       ^~~~~~~~~~\n</code></pre>\n\n<p>I tried changing the line </p>\n\n<pre><code>let mut str_vec: Vec&lt;&amp;str&gt; = l.split(\";\").collect();\n</code></pre>\n\n<p>to</p>\n\n<pre><code>let mut str_vec: Vec&lt;String&gt; = l.split(\";\").collect();\n</code></pre>\n\n<p>But I got this error:</p>\n\n<pre><code>hello_world.rs:16:53: 16:60 error: the trait `core::iter::FromIterator&lt;&amp;str&gt;` is not implemented for the type `collections::vec::Vec&lt;collections::string::String&gt;` [E0277]\nhello_world.rs:16         let mut str_vec: Vec&lt;String&gt; = l.split(\";\").collect();\n</code></pre>\n\n<p>So how do I either extract <code>String</code> from <code>l</code> instead of <code>&amp;str</code>? Also, if there's a better solution let me know please as my newbiness with this technology is probably apparent to all.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 644, "user_id": 88114, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/83102d8b2b9ce057f95339de08e336d2?s=128&d=identicon&r=PG", "display_name": "eaubin", "link": "https://stackoverflow.com/users/88114/eaubin"}, "edited": false, "score": 0, "creation_date": 1456860702, "post_id": 35730819, "comment_id": 59138185, "body": "Maybe my example was too simple. In ToString trait above there&#39;s no selector for the opaque value (as opposed to x being bound in the pattern match). Could that be added?"}, {"owner": {"reputation": 644, "user_id": 88114, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/83102d8b2b9ce057f95339de08e336d2?s=128&d=identicon&r=PG", "display_name": "eaubin", "link": "https://stackoverflow.com/users/88114/eaubin"}, "edited": false, "score": 0, "creation_date": 1456860833, "post_id": 35730819, "comment_id": 59138263, "body": "Does this generalize to hiding multiple values? E.g. type t = F : &#39;x * &#39;y * (&#39;x -&gt; &#39;y) -&gt; t?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 644, "user_id": 88114, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/83102d8b2b9ce057f95339de08e336d2?s=128&d=identicon&r=PG", "display_name": "eaubin", "link": "https://stackoverflow.com/users/88114/eaubin"}, "edited": false, "score": 0, "creation_date": 1456917805, "post_id": 35730819, "comment_id": 59164890, "body": "@eaubin, I don&#39;t understand your first question. As for the second question, you can implement a trait for a tuple, so I guess it&#39;s doable too, but to a limited extent: I don&#39;t think that you will be able to put different tuple components in different positions."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 2, "last_activity_date": 1457930554, "last_edit_date": 1457930554, "creation_date": 1456857633, "answer_id": 35730819, "question_id": 35729804, "link": "https://stackoverflow.com/questions/35729804/how-can-i-use-a-rust-enum-struct-trait-or-anything-else-to-construct-a-value-c/35730819#35730819", "title": "How can I use a Rust enum, struct, trait or anything else to construct a value containing an existential type?", "body": "<p>The closest thing you can get to existential types are trait objects:</p>\n\n<pre><code>// how ToString is declared\ntrait ToString {\n    fn to_string(&amp;self) -&gt; String;\n}\n\nlet i32_str: Box&lt;ToString&gt; = Box::new(1);\nlet str_str: Box&lt;ToString&gt; = Box::new(\"foo\");\n\nfn print(value: &amp;ToString) -&gt; String {\n    value.to_string()\n}\nprint_x(&amp;i32_str);  // automatically coerced from Box&lt;ToString&gt; to &amp;ToString\nprint_x(&amp;str_str);\n</code></pre>\n\n<p>With trait objects, the actual type is erased, and the only thing that remains is the knowledge that this particular value is of some type which implements the given trait. It is very similar to existential types with type class bounds in Haskell:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Showable = Showable (forall a. Show a =&gt; a)\n</code></pre>\n\n<p>There is no way to bundle an arbitrary function with an arbitrary type, erasing it from the container signature, so you need to use a trait for it. Fortunately, traits are easy to define and implement for arbitrary types, so you can always define a trait and use a trait object. Trait objects cover almost all functionality for which existentials are usually needed in ML/Haskell.</p>\n\n<p>Moreover, in many cases you don't need to work with trait objects at all! For example, the <code>print()</code> function above should actually be written as follows:</p>\n\n<pre><code>fn print&lt;T: ToString&gt;(value: &amp;T) -&gt; String {\n    value.to_string()\n}\n</code></pre>\n\n<p>Such function is much more powerful because it works with arbitrary implementors of <code>ToString</code> trait, which include trait objects made out of <code>ToString</code> but also everything else which implements <code>ToString</code>. The only place you usually use trait objects is when you define heterogeneous data structures:</p>\n\n<pre><code>let many_to_strings: Vec&lt;Box&lt;ToString&gt;&gt; = vec![Box::new(1), Box::new(\"foo\")];\n</code></pre>\n\n<p>But, as I said above, when you consume trait objects, in most cases you don't need to specify that you need a trait object - a regular generic function would be more idiomatic.</p>\n"}], "owner": {"reputation": 644, "user_id": 88114, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/83102d8b2b9ce057f95339de08e336d2?s=128&d=identicon&r=PG", "display_name": "eaubin", "link": "https://stackoverflow.com/users/88114/eaubin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 572, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1457930554, "creation_date": 1456854390, "last_edit_date": 1456860206, "question_id": 35729804, "link": "https://stackoverflow.com/questions/35729804/how-can-i-use-a-rust-enum-struct-trait-or-anything-else-to-construct-a-value-c", "title": "How can I use a Rust enum, struct, trait or anything else to construct a value containing an existential type?", "body": "<p>What Rust construct roughly accomplishes the same thing as the following OCaml?</p>\n\n<pre class=\"lang-ml prettyprint-override\"><code>type t = F : 'x * ('x -&gt; string) -&gt; t\n\nlet int_eg = F(1, string_of_int)\nlet str_eg = F(\"foo\", fun x -&gt; x)\n\nlet print x = print_string (match x with\n  | F(x,to_str) -&gt; to_str x)\n</code></pre>\n"}, {"tags": ["json", "rust", "rustc-serialize"], "answers": [{"comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 4, "creation_date": 1456836510, "post_id": 35721021, "comment_id": 59121182, "body": "you can also use <code>as_object_mut</code> to get an <code>&amp;mut</code> if you want to modify the original json object."}], "tags": [], "owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "is_accepted": false, "score": 0, "last_activity_date": 1456829685, "creation_date": 1456829685, "answer_id": 35721021, "question_id": 35720833, "link": "https://stackoverflow.com/questions/35720833/simple-modification-of-json-object-without-serialization-gets-cannot-borrow-imm/35721021#35721021", "title": "Simple modification of JSON object without serialization gets &quot;cannot borrow immutable borrowed content as mutable&quot;", "body": "<p>Some debugging has fixed this problem for me:</p>\n\n<p>I replaced this code:</p>\n\n<pre><code>let mut myjson = tilejson_0.as_object().unwrap();\n</code></pre>\n\n<p>With this, to ensure that I had the type that I thought I had:</p>\n\n<pre><code>let mut myjson: BTreeMap&lt;String, json::Json&gt; = tilejson_0.as_object().unwrap();\n</code></pre>\n\n<p>and I got this compiler error:</p>\n\n<pre><code>src/main.rs:52:54: 52:85 error: mismatched types:\n expected `collections::btree::map::BTreeMap&lt;collections::string::String, rustc_serialize::json::Json&gt;`,\n    found `&amp;collections::btree::map::BTreeMap&lt;collections::string::String, rustc_serialize::json::Json&gt;`\n(expected struct `collections::btree::map::BTreeMap`,\n    found &amp;-ptr) [E0308]\nsrc/main.rs:52     let mut myjson: BTreeMap&lt;String, json::Json&gt;  tilejson_0.as_object().unwrap();\n</code></pre>\n\n<p>Clearly I was wrong. Rather than an <em>owned</em> <code>BTreeMap</code>, I had a reference to one, <code>&amp;BTreeMap</code>.</p>\n\n<p>The solution was to change the line to this:</p>\n\n<pre><code>let mut myjson = tilejson_0.as_object().unwrap().to_owned();\n</code></pre>\n\n<p>And everything compiled and worked (so far)</p>\n"}], "owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 215, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1457929299, "creation_date": 1456829182, "last_edit_date": 1457929299, "question_id": 35720833, "link": "https://stackoverflow.com/questions/35720833/simple-modification-of-json-object-without-serialization-gets-cannot-borrow-imm", "title": "Simple modification of JSON object without serialization gets &quot;cannot borrow immutable borrowed content as mutable&quot;", "body": "<p>I have a JSON encoded object in Rust 1.6.0. I want to decode it from JSON, change the value of one key, and convert it back to a JSON encoded string again. I don't want to write a struct to hold the data.</p>\n\n<p>I am using rustc_serialize, which mostly seems to be built around serializing structs and automatically doing that, but I just want a simple JSON modification.</p>\n\n<p><code>json_contents</code> is a <code>String</code> that has the original, encoded JSON object.</p>\n\n<pre><code>let new_value = json::Json::from_str(&amp;format!(\"[\\\"http://localhost:{}\\\"]\", port)).unwrap();\n\nlet mut myjson_0 = json::Json::from_str(&amp;json_contents).unwrap();\nlet mut myjson = tilejson_0.as_object().unwrap();\nmyjson.insert(\"mykey\".to_owned(), new_value);\nlet new_json: String = json::encode(&amp;myjson).unwrap();\n</code></pre>\n\n<p>However I get the following error:</p>\n\n<pre><code>src/main.rs:53:5: 53:13 error: cannot borrow immutable borrowed content `*myjson` as mutable\nsrc/main.rs:53     myjson.insert(\"mykey\".to_owned(), new_value);\n                   ^~~~~~\nerror: aborting due to previous error\n</code></pre>\n\n<p>How can I compile this? Is there a better, simpler, JSON Rust library I can use?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1456822445, "post_id": 35716159, "comment_id": 59112295, "body": "Possible duplicate of <a href=\"http://stackoverflow.com/questions/35432199/convert-a-char-to-upper-case\">Convert a char to upper case</a>"}, {"owner": {"reputation": 783, "user_id": 1096654, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9l8Zx.png?s=128&g=1", "display_name": "Marcel Blanck", "link": "https://stackoverflow.com/users/1096654/marcel-blanck"}, "edited": false, "score": 0, "creation_date": 1549413050, "post_id": 35716159, "comment_id": 95890926, "body": "You can easily work with is as  <code>let c_lowercase : String = c.to_lowercase().collect(); </code>or collect as  <code>Vec&lt;u8&gt;</code>. Using the non stl ArrayVec&lt;[_; 4]&gt; below looks very arcane to demonstrate simple stl functionality."}], "answers": [{"tags": [], "owner": {"reputation": 26541, "user_id": 1532460, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/dc5b338bf194a9e117af20bd9b2e4edb?s=128&d=identicon&r=PG", "display_name": "awesoon", "link": "https://stackoverflow.com/users/1532460/awesoon"}, "is_accepted": false, "score": 4, "last_activity_date": 1589144638, "last_edit_date": 1589144638, "creation_date": 1456815003, "answer_id": 35716428, "question_id": 35716159, "link": "https://stackoverflow.com/questions/35716159/what-is-the-motivation-of-rusts-tolowercase/35716428#35716428", "title": "What is the motivation of Rust&#39;s ToLowercase", "body": "<blockquote>\n  <p>which seems to be an iterator with always one element.</p>\n</blockquote>\n\n<p>Not always. There are some cases, when a single character represents a lowercase symbol, whereas uppercase symbol represented by two characters. </p>\n\n<p>Those cases covered in <a href=\"ftp://ftp.unicode.org/Public/UNIDATA/SpecialCasing.txt\" rel=\"nofollow noreferrer\"><code>SpecialCasing</code></a> Unicode documentation. Quote from the Rust documentation:</p>\n\n<blockquote>\n  <p>This performs complex unconditional mappings with no tailoring: it\n  maps one Unicode character to its lowercase equivalent according to\n  the Unicode database and the additional complex mappings\n  SpecialCasing.txt.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 3892, "user_id": 1236045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9cdfcff173a4487d2a73a29e177930ec?s=128&d=identicon&r=PG&f=1", "display_name": "Micha\u0142 Politowski", "link": "https://stackoverflow.com/users/1236045/micha%c5%82-politowski"}, "edited": false, "score": 0, "creation_date": 1457597019, "post_id": 35716552, "comment_id": 59480558, "body": "<code>&#39;\u0130&#39; U+0130 L -&gt; &#39;i&#39; U+0069 &#39;\u0307&#39; U+0307</code> looks a bit <i>odd</i>, buggy even. I guess it is a result of going through canonical decomposition?"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 31, "last_activity_date": 1456815545, "creation_date": 1456815545, "answer_id": 35716552, "question_id": 35716159, "link": "https://stackoverflow.com/questions/35716159/what-is-the-motivation-of-rusts-tolowercase/35716552#35716552", "title": "What is the motivation of Rust&#39;s ToLowercase", "body": "<blockquote>\n  <p>Wouldn't returning a char directly be far more natural and simple?</p>\n</blockquote>\n\n<p>Natural, simple, <em>and wrong.</em>  Unicode is too complicated for that to work.  The fundamental issue is that a <code>char</code> <em>is not</em> sufficient to always represent a single, logically complete \"character\", for some definitions of \"character\".</p>\n\n<blockquote>\n  <p>which seems to be an iterator with always one element.</p>\n</blockquote>\n\n<p>This can be trivially demonstrated to be wrong by running a simple program that upper- and lower-cases every valid Unicode codepoint.  The program:</p>\n\n<pre><code>/*!\nAdd the following to a `Cargo.toml` file:\n\n```cargo\n[dependencies]\narrayvec = \"0.3.15\"\n```\n*/\nextern crate arrayvec;\nuse arrayvec::ArrayVec;\n\nfn main() {\n    let mut expanded_lcs = 0;\n    let mut expanded_ucs = 0;\n\n    let usvs = (0..0xd7ff).chain(0xe000..0x10ffff)\n        .flat_map(|v| std::char::from_u32(v).into_iter());\n\n    for c in usvs {\n        let lc: ArrayVec&lt;[_; 4]&gt; = c.to_lowercase().collect();\n        let uc: ArrayVec&lt;[_; 4]&gt; = c.to_uppercase().collect();\n\n        if lc.len() != 1 {\n            expanded_lcs += 1;\n            print!(\"'{}' U+{:04X} L -&gt; \", c, c as u32);\n            for c in lc {\n                print!(\"'{}' U+{:04X} \", c, c as u32);\n            }\n            println!(\"\");\n        }\n\n        if uc.len() != 1 {\n            expanded_ucs += 1;\n            print!(\"'{}' U+{:04X} U -&gt; \", c, c as u32);\n            for c in uc {\n                print!(\"'{}' U+{:04X} \", c, c as u32);\n            }\n            println!(\"\");\n        }\n    }\n\n    println!(\"\\n-----\\n\");\n\n    println!(\"Found {} chars with expanded lowercase conversions.\", expanded_lcs);\n    println!(\"Found {} chars with expanded uppercase conversions.\", expanded_ucs);\n}\n</code></pre>\n\n<p>And its output, given a <code>rustc</code> 1.8 nightly:</p>\n\n<pre><code>'\u00df' U+00DF U -&gt; 'S' U+0053 'S' U+0053 \n'\u0130' U+0130 L -&gt; 'i' U+0069 '\u0307' U+0307 \n'\u0149' U+0149 U -&gt; '\u02bc' U+02BC 'N' U+004E \n'\u01f0' U+01F0 U -&gt; 'J' U+004A '\u030c' U+030C \n'\u0390' U+0390 U -&gt; '\u0399' U+0399 '\u0308' U+0308 '\u0301' U+0301 \n'\u03b0' U+03B0 U -&gt; '\u03a5' U+03A5 '\u0308' U+0308 '\u0301' U+0301 \n'\u0587' U+0587 U -&gt; '\u0535' U+0535 '\u0552' U+0552 \n'\u1e96' U+1E96 U -&gt; 'H' U+0048 '\u0331' U+0331 \n'\u1e97' U+1E97 U -&gt; 'T' U+0054 '\u0308' U+0308 \n'\u1e98' U+1E98 U -&gt; 'W' U+0057 '\u030a' U+030A \n'\u1e99' U+1E99 U -&gt; 'Y' U+0059 '\u030a' U+030A \n'\u1e9a' U+1E9A U -&gt; 'A' U+0041 '\u02be' U+02BE \n'\u1f50' U+1F50 U -&gt; '\u03a5' U+03A5 '\u0313' U+0313 \n'\u1f52' U+1F52 U -&gt; '\u03a5' U+03A5 '\u0313' U+0313 '\u0300' U+0300 \n'\u1f54' U+1F54 U -&gt; '\u03a5' U+03A5 '\u0313' U+0313 '\u0301' U+0301 \n'\u1f56' U+1F56 U -&gt; '\u03a5' U+03A5 '\u0313' U+0313 '\u0342' U+0342 \n'\u1f80' U+1F80 U -&gt; '\u1f08' U+1F08 '\u0399' U+0399 \n'\u1f81' U+1F81 U -&gt; '\u1f09' U+1F09 '\u0399' U+0399 \n'\u1f82' U+1F82 U -&gt; '\u1f0a' U+1F0A '\u0399' U+0399 \n'\u1f83' U+1F83 U -&gt; '\u1f0b' U+1F0B '\u0399' U+0399 \n'\u1f84' U+1F84 U -&gt; '\u1f0c' U+1F0C '\u0399' U+0399 \n'\u1f85' U+1F85 U -&gt; '\u1f0d' U+1F0D '\u0399' U+0399 \n'\u1f86' U+1F86 U -&gt; '\u1f0e' U+1F0E '\u0399' U+0399 \n'\u1f87' U+1F87 U -&gt; '\u1f0f' U+1F0F '\u0399' U+0399 \n'\u1f88' U+1F88 U -&gt; '\u1f08' U+1F08 '\u0399' U+0399 \n'\u1f89' U+1F89 U -&gt; '\u1f09' U+1F09 '\u0399' U+0399 \n'\u1f8a' U+1F8A U -&gt; '\u1f0a' U+1F0A '\u0399' U+0399 \n'\u1f8b' U+1F8B U -&gt; '\u1f0b' U+1F0B '\u0399' U+0399 \n'\u1f8c' U+1F8C U -&gt; '\u1f0c' U+1F0C '\u0399' U+0399 \n'\u1f8d' U+1F8D U -&gt; '\u1f0d' U+1F0D '\u0399' U+0399 \n'\u1f8e' U+1F8E U -&gt; '\u1f0e' U+1F0E '\u0399' U+0399 \n'\u1f8f' U+1F8F U -&gt; '\u1f0f' U+1F0F '\u0399' U+0399 \n'\u1f90' U+1F90 U -&gt; '\u1f28' U+1F28 '\u0399' U+0399 \n'\u1f91' U+1F91 U -&gt; '\u1f29' U+1F29 '\u0399' U+0399 \n'\u1f92' U+1F92 U -&gt; '\u1f2a' U+1F2A '\u0399' U+0399 \n'\u1f93' U+1F93 U -&gt; '\u1f2b' U+1F2B '\u0399' U+0399 \n'\u1f94' U+1F94 U -&gt; '\u1f2c' U+1F2C '\u0399' U+0399 \n'\u1f95' U+1F95 U -&gt; '\u1f2d' U+1F2D '\u0399' U+0399 \n'\u1f96' U+1F96 U -&gt; '\u1f2e' U+1F2E '\u0399' U+0399 \n'\u1f97' U+1F97 U -&gt; '\u1f2f' U+1F2F '\u0399' U+0399 \n'\u1f98' U+1F98 U -&gt; '\u1f28' U+1F28 '\u0399' U+0399 \n'\u1f99' U+1F99 U -&gt; '\u1f29' U+1F29 '\u0399' U+0399 \n'\u1f9a' U+1F9A U -&gt; '\u1f2a' U+1F2A '\u0399' U+0399 \n'\u1f9b' U+1F9B U -&gt; '\u1f2b' U+1F2B '\u0399' U+0399 \n'\u1f9c' U+1F9C U -&gt; '\u1f2c' U+1F2C '\u0399' U+0399 \n'\u1f9d' U+1F9D U -&gt; '\u1f2d' U+1F2D '\u0399' U+0399 \n'\u1f9e' U+1F9E U -&gt; '\u1f2e' U+1F2E '\u0399' U+0399 \n'\u1f9f' U+1F9F U -&gt; '\u1f2f' U+1F2F '\u0399' U+0399 \n'\u1fa0' U+1FA0 U -&gt; '\u1f68' U+1F68 '\u0399' U+0399 \n'\u1fa1' U+1FA1 U -&gt; '\u1f69' U+1F69 '\u0399' U+0399 \n'\u1fa2' U+1FA2 U -&gt; '\u1f6a' U+1F6A '\u0399' U+0399 \n'\u1fa3' U+1FA3 U -&gt; '\u1f6b' U+1F6B '\u0399' U+0399 \n'\u1fa4' U+1FA4 U -&gt; '\u1f6c' U+1F6C '\u0399' U+0399 \n'\u1fa5' U+1FA5 U -&gt; '\u1f6d' U+1F6D '\u0399' U+0399 \n'\u1fa6' U+1FA6 U -&gt; '\u1f6e' U+1F6E '\u0399' U+0399 \n'\u1fa7' U+1FA7 U -&gt; '\u1f6f' U+1F6F '\u0399' U+0399 \n'\u1fa8' U+1FA8 U -&gt; '\u1f68' U+1F68 '\u0399' U+0399 \n'\u1fa9' U+1FA9 U -&gt; '\u1f69' U+1F69 '\u0399' U+0399 \n'\u1faa' U+1FAA U -&gt; '\u1f6a' U+1F6A '\u0399' U+0399 \n'\u1fab' U+1FAB U -&gt; '\u1f6b' U+1F6B '\u0399' U+0399 \n'\u1fac' U+1FAC U -&gt; '\u1f6c' U+1F6C '\u0399' U+0399 \n'\u1fad' U+1FAD U -&gt; '\u1f6d' U+1F6D '\u0399' U+0399 \n'\u1fae' U+1FAE U -&gt; '\u1f6e' U+1F6E '\u0399' U+0399 \n'\u1faf' U+1FAF U -&gt; '\u1f6f' U+1F6F '\u0399' U+0399 \n'\u1fb2' U+1FB2 U -&gt; '\u1fba' U+1FBA '\u0399' U+0399 \n'\u1fb3' U+1FB3 U -&gt; '\u0391' U+0391 '\u0399' U+0399 \n'\u1fb4' U+1FB4 U -&gt; '\u0386' U+0386 '\u0399' U+0399 \n'\u1fb6' U+1FB6 U -&gt; '\u0391' U+0391 '\u0342' U+0342 \n'\u1fb7' U+1FB7 U -&gt; '\u0391' U+0391 '\u0342' U+0342 '\u0399' U+0399 \n'\u1fbc' U+1FBC U -&gt; '\u0391' U+0391 '\u0399' U+0399 \n'\u1fc2' U+1FC2 U -&gt; '\u1fca' U+1FCA '\u0399' U+0399 \n'\u1fc3' U+1FC3 U -&gt; '\u0397' U+0397 '\u0399' U+0399 \n'\u1fc4' U+1FC4 U -&gt; '\u0389' U+0389 '\u0399' U+0399 \n'\u1fc6' U+1FC6 U -&gt; '\u0397' U+0397 '\u0342' U+0342 \n'\u1fc7' U+1FC7 U -&gt; '\u0397' U+0397 '\u0342' U+0342 '\u0399' U+0399 \n'\u1fcc' U+1FCC U -&gt; '\u0397' U+0397 '\u0399' U+0399 \n'\u1fd2' U+1FD2 U -&gt; '\u0399' U+0399 '\u0308' U+0308 '\u0300' U+0300 \n'\u1fd3' U+1FD3 U -&gt; '\u0399' U+0399 '\u0308' U+0308 '\u0301' U+0301 \n'\u1fd6' U+1FD6 U -&gt; '\u0399' U+0399 '\u0342' U+0342 \n'\u1fd7' U+1FD7 U -&gt; '\u0399' U+0399 '\u0308' U+0308 '\u0342' U+0342 \n'\u1fe2' U+1FE2 U -&gt; '\u03a5' U+03A5 '\u0308' U+0308 '\u0300' U+0300 \n'\u1fe3' U+1FE3 U -&gt; '\u03a5' U+03A5 '\u0308' U+0308 '\u0301' U+0301 \n'\u1fe4' U+1FE4 U -&gt; '\u03a1' U+03A1 '\u0313' U+0313 \n'\u1fe6' U+1FE6 U -&gt; '\u03a5' U+03A5 '\u0342' U+0342 \n'\u1fe7' U+1FE7 U -&gt; '\u03a5' U+03A5 '\u0308' U+0308 '\u0342' U+0342 \n'\u1ff2' U+1FF2 U -&gt; '\u1ffa' U+1FFA '\u0399' U+0399 \n'\u1ff3' U+1FF3 U -&gt; '\u03a9' U+03A9 '\u0399' U+0399 \n'\u1ff4' U+1FF4 U -&gt; '\u038f' U+038F '\u0399' U+0399 \n'\u1ff6' U+1FF6 U -&gt; '\u03a9' U+03A9 '\u0342' U+0342 \n'\u1ff7' U+1FF7 U -&gt; '\u03a9' U+03A9 '\u0342' U+0342 '\u0399' U+0399 \n'\u1ffc' U+1FFC U -&gt; '\u03a9' U+03A9 '\u0399' U+0399 \n'\ufb00' U+FB00 U -&gt; 'F' U+0046 'F' U+0046 \n'\ufb01' U+FB01 U -&gt; 'F' U+0046 'I' U+0049 \n'\ufb02' U+FB02 U -&gt; 'F' U+0046 'L' U+004C \n'\ufb03' U+FB03 U -&gt; 'F' U+0046 'F' U+0046 'I' U+0049 \n'\ufb04' U+FB04 U -&gt; 'F' U+0046 'F' U+0046 'L' U+004C \n'\ufb05' U+FB05 U -&gt; 'S' U+0053 'T' U+0054 \n'\ufb06' U+FB06 U -&gt; 'S' U+0053 'T' U+0054 \n'\ufb13' U+FB13 U -&gt; '\u0544' U+0544 '\u0546' U+0546 \n'\ufb14' U+FB14 U -&gt; '\u0544' U+0544 '\u0535' U+0535 \n'\ufb15' U+FB15 U -&gt; '\u0544' U+0544 '\u053b' U+053B \n'\ufb16' U+FB16 U -&gt; '\u054e' U+054E '\u0546' U+0546 \n'\ufb17' U+FB17 U -&gt; '\u0544' U+0544 '\u053d' U+053D \n\n-----\n\nFound 1 chars with expanded lowercase conversions.\nFound 102 chars with expanded uppercase conversions.\n</code></pre>\n\n<p>Note that this <em>does not</em> take locale into account, which could change the output.</p>\n"}], "owner": {"reputation": 289, "user_id": 5901356, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4c666fecb5274110986882d680082cf9?s=128&d=identicon&r=PG&f=1", "display_name": "Ronald Smith", "link": "https://stackoverflow.com/users/5901356/ronald-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1134, "favorite_count": 0, "accepted_answer_id": 35716552, "answer_count": 2, "score": 10, "last_activity_date": 1589144638, "creation_date": 1456813971, "last_edit_date": 1456872882, "question_id": 35716159, "link": "https://stackoverflow.com/questions/35716159/what-is-the-motivation-of-rusts-tolowercase", "title": "What is the motivation of Rust&#39;s ToLowercase", "body": "<p>Rust's <code>char</code> has a <a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.to_lowercase\" rel=\"noreferrer\"><code>to_lowercase</code></a> function which seems to return the struct <a href=\"https://doc.rust-lang.org/std/char/struct.ToLowercase.html\" rel=\"noreferrer\"><code>ToLowercase</code></a> which seems to be an iterator with always one element. </p>\n\n<p>Wouldn't returning a <code>char</code> directly be far more natural and simple? </p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1456826657, "post_id": 35712298, "comment_id": 59114930, "body": "The compiler does not seem to insert the <code>for&lt;&#39;a&gt;</code> by itself when given a generic parameter. If you do not receive any satisfying explanation, you might want to post a link to this question on <a href=\"https://www.reddit.com/r/rust/\" rel=\"nofollow noreferrer\">reddit.com/r/rust</a> where Rust developers are more likely to hang around."}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1456831168, "post_id": 35712298, "comment_id": 59117766, "body": "My answer was obviously wrong, so I deleted it. But your comment is explaining what exactly do you mean:  &quot;I don&#39;t see why the closure needs the type parameter to live longer than it (there is no storage or anything ...). And it works for the non-generic version with HRTB, it just feels like it should be possible to make it work with the generic version.&quot; \u2013 @Vaelden"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 7, "last_activity_date": 1457929092, "creation_date": 1457929092, "answer_id": 35979459, "question_id": 35712298, "link": "https://stackoverflow.com/questions/35712298/higher-ranked-trait-bound-and-boxed-closures-lifetime-issue/35979459#35979459", "title": "Higher Ranked Trait Bound and boxed closures lifetime issue", "body": "<p>Type parameters have a lifetime bound. That lifetime bound is the shortest of all of the implementor's lifetime parameters. You omitted it on <code>generate_closure_gen</code>, so the compiler inferred it, but if we explicitly wrote it out, the function definition would look like this:</p>\n\n<pre><code>fn generate_closure_gen&lt;'a, C: 'a&gt;() -&gt; Box&lt;Fn(&amp;C)&gt; {\n    Box::new(|c: &amp;C| {})\n}\n</code></pre>\n\n<p>Making this change doesn't solve our problem, though.</p>\n\n<p>To understand why, we need to figure out what <code>C</code> is inferred to be. You call the closure with a <code>&amp;'y Parameter&lt;'x&gt;</code>, and the closure accepts <code>for&lt;'b&gt; &amp;'b C</code>, so <code>C</code> is <code>Parameter&lt;'x&gt;</code>. <code>Parameter&lt;'x&gt;</code> has a lifetime parameter, which will have an influence on the lifetime bound on <code>C</code>.</p>\n\n<p>Lifetime parameters in generic functions must be substituted with lifetimes that start before the function call. In this case, this means that the lifetime of any <code>C</code> we pass to the closure must be valid before the call to <code>generate_closure_gen</code>. That's because <code>C</code> is bound to a specific lifetime, not to any lifetime; i.e. when <code>C</code> is <code>Parameter&lt;'x&gt;</code>, the <code>'x</code> must be known in advance; we can't have a different <code>'x</code> each time we call the closure. In other words, what you'd like to have is something like this:</p>\n\n<pre><code>fn generate_closure_gen&lt;C: for&lt;'a&gt; 'a&gt;() -&gt; Box&lt;Fn(&amp;C)&gt; {\n    Box::new(|c| {})\n}\n</code></pre>\n\n<p>But unfortunately, that isn't legal as of Rust 1.7.</p>\n"}], "owner": {"reputation": 1479, "user_id": 4450817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/566922fb80a38c57d6a0db0be0f42f3b?s=128&d=identicon&r=PG&f=1", "display_name": "Vaelden", "link": "https://stackoverflow.com/users/4450817/vaelden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 480, "favorite_count": 4, "accepted_answer_id": 35979459, "answer_count": 1, "score": 8, "last_activity_date": 1457929092, "creation_date": 1456790834, "last_edit_date": 1456831648, "question_id": 35712298, "link": "https://stackoverflow.com/questions/35712298/higher-ranked-trait-bound-and-boxed-closures-lifetime-issue", "title": "Higher Ranked Trait Bound and boxed closures lifetime issue", "body": "<p>I am trying to write a function returning a boxed closure that can work on references to types with any\nlifetime. When writing a specific instance, everything works fine. But when writing a generic\nversion, I run into lifetime problems.</p>\n\n<pre><code>struct Parameter&lt;'a&gt; {\n    s: &amp;'a str,\n}\n\nfn main() {\n    let closure = generate_closure_gen();\n    let string = String::from(\"Hello World!\");\n    let parameter = Parameter { s: &amp;string }; // Error: string does not live long enough\n    closure(&amp;parameter);\n}\n\n// This one works fine\n// Desugared version for Box&lt;Fn(&amp;Parameter)&gt;\nfn generate_closure() -&gt; Box&lt;for &lt;'a, 'r&gt; Fn(&amp;'r Parameter&lt;'a&gt;)&gt; {\n    Box::new(|c: &amp;Parameter| {})\n}\n\n// This one gives lifetime errors\nfn generate_closure_gen&lt;C&gt;() -&gt; Box&lt;Fn(&amp;C)&gt; {\n    Box::new(|c: &amp;C| {})\n}\n</code></pre>\n\n<p>I don't see why the closure needs the type parameter to live longer than it (there is no storage or anything ...). And it works for the non-generic version with HRTB, it just feels like it should be possible to make it work with the generic version.<br>\nAlso, if I try to write the specific version using the generic version, I get a type error</p>\n\n<pre><code>// Desugared version for Box&lt;Fn(&amp;Parameter)&gt;\nfn generate_closure_2() -&gt; Box&lt;for &lt;'a, 'r&gt; Fn(&amp;'r Parameter&lt;'a&gt;)&gt; {\n    generate_closure_gen()\n}\n\nsrc/main.rs:22:5: 22:27 error: mismatched types:\n expected `Box&lt;for&lt;'r, 'r&gt; core::ops::Fn(&amp;'r Parameter&lt;'r&gt;) + 'static&gt;`,\n    found `Box&lt;for&lt;'r&gt; core::ops::Fn(&amp;'r _) + 'static&gt;`\n(expected concrete lifetime,\n    found bound lifetime parameter ) [E0308]\nsrc/main.rs:22     generate_closure_gen()\n                   ^~~~~~~~~~~~~~~~~~~~~~\nsrc/main.rs:22:5: 22:27 help: run `rustc --explain E0308` to see a detailed explanation\n</code></pre>\n\n<p>Any idea on how to make this work?</p>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=a87c429af45f4d4e646f&amp;version=nightly\" rel=\"noreferrer\">playpen link</a>)</p>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1456826774, "post_id": 35717914, "comment_id": 59115014, "body": "@MatthieuM. It is, which is why <code>ret.map_err(|x| x as Box&lt;Error&gt;)</code> is needed to match <code>inner_main</code>&#39;s return type."}], "tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": true, "score": 2, "last_activity_date": 1456820848, "creation_date": 1456820848, "answer_id": 35717914, "question_id": 35712226, "link": "https://stackoverflow.com/questions/35712226/how-do-i-return-an-error-from-a-scoped-threadpool-thread/35717914#35717914", "title": "How do I return an error from a scoped_threadpool thread?", "body": "<p>I don't know if it's a particularly idiomatic method, but one method that at least works is assigning to a captured variable.</p>\n\n<pre><code>let mut pool = Pool::new(2);\nlet mut ret = Ok(());\n\npool.scoped(|scope| {\n    scope.execute(|| {\n        ret = fallible_code();\n    });\n});\n\nret.map_err(|x| x as Box&lt;Error&gt;)\n</code></pre>\n\n<p>Obviously you'd need to make <code>ret</code> an <code>Option</code> or so if there is no trivial default. If the inner closure must be <code>move</code>, you'll need to make <code>ret_ref = &amp;mut ret</code> explicit.</p>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 306, "favorite_count": 0, "accepted_answer_id": 35717914, "answer_count": 1, "score": 6, "last_activity_date": 1456820848, "creation_date": 1456790454, "last_edit_date": 1456819947, "question_id": 35712226, "link": "https://stackoverflow.com/questions/35712226/how-do-i-return-an-error-from-a-scoped-threadpool-thread", "title": "How do I return an error from a scoped_threadpool thread?", "body": "<p>I have some code that uses <a href=\"https://crates.io/crates/scoped_threadpool\" rel=\"nofollow\">scoped_threadpool</a> a bit like this:</p>\n\n<pre><code>extern crate scoped_threadpool;\n\nuse scoped_threadpool::Pool;\nuse std::error::Error;\n\nfn main() {\n    inner_main().unwrap();\n}\n\nfn inner_main() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let mut pool = Pool::new(2);\n\n    pool.scoped(|scope| {\n        scope.execute(move || {\n            // This changed to become fallible\n            fallible_code();\n        });\n    });\n\n    Ok(())\n}\n\nfn fallible_code() -&gt; Result&lt;(), Box&lt;Error + Send + Sync&gt;&gt; {\n    Err(From::from(\"Failing\"))\n}\n</code></pre>\n\n<p>The <code>fallible_code</code> function recently changed to return a <code>Result</code>, and I'd like to propagate the error outside of the <code>pool.scoped</code> block. However, the signature of <a href=\"http://kimundi.github.io/scoped-threadpool-rs/scoped_threadpool/struct.Scope.html#method.execute\" rel=\"nofollow\"><code>Scope::execute</code></a> doesn't allow for a return value:</p>\n\n<pre><code>fn execute&lt;F&gt;(&amp;self, f: F) \n    where F: FnOnce() + Send + 'scope\n</code></pre>\n\n<p>I am using scoped_threadpool 0.1.7.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1456786091, "post_id": 35711044, "comment_id": 59099318, "body": "If your library and binary are that drastically different, perhaps they deserve two distinct <code>Cargo.toml</code> files? You could always put the binary in a subdirectory and use the library from the parent directory (or a released version)."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1456825884, "post_id": 35711044, "comment_id": 59114406, "body": "From the name it seems your binary is only a test, so you could put it under <code>tests</code> and use <code>dev-dependencies</code>."}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1456864491, "post_id": 35711044, "comment_id": 59140360, "body": "@starblue The name is misleading in the way that programmers normally think about tests, it&#39;s for running trials with the library on UCI test data sets and generating things like learning curves."}], "answers": [{"tags": [], "owner": {"reputation": 1845, "user_id": 716390, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/03291df3e8db07ec188e120f66624272?s=128&d=identicon&r=PG", "display_name": "kriomant", "link": "https://stackoverflow.com/users/716390/kriomant"}, "is_accepted": false, "score": 6, "last_activity_date": 1457959650, "last_edit_date": 1457959650, "creation_date": 1457950952, "answer_id": 35984896, "question_id": 35711044, "link": "https://stackoverflow.com/questions/35711044/how-can-i-specify-binary-only-dependencies/35984896#35984896", "title": "How can I specify binary-only dependencies?", "body": "<p>This is <a href=\"https://github.com/rust-lang/cargo/issues/1982\" rel=\"noreferrer\">not implemented yet in Cargo</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 71, "user_id": 12185226, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e9f928e2f1251693cb0061ba54b8bf01?s=128&d=identicon&r=PG&f=1", "display_name": "Deuchie", "link": "https://stackoverflow.com/users/12185226/deuchie"}, "edited": false, "score": 0, "creation_date": 1610103875, "post_id": 46017284, "comment_id": 116032360, "body": "The second method seems to be the best practice. We can then easily add some drafting binaries without polluting something else, and don&#39;t get the redundant pkg manifest."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 47, "last_activity_date": 1504379446, "creation_date": 1504379446, "answer_id": 46017284, "question_id": 35711044, "link": "https://stackoverflow.com/questions/35711044/how-can-i-specify-binary-only-dependencies/46017284#46017284", "title": "How can I specify binary-only dependencies?", "body": "<p>There are several ways to simulate what you want:</p>\n\n<hr>\n\n<h2>1) Turn the binaries to examples</h2>\n\n<p><a href=\"http://doc.crates.io/manifest.html#examples\" rel=\"noreferrer\">Examples</a> and tests are built with <code>dev-dependencies</code>, so you could move those dependencies into this section. The library won't depend on them.</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code># File structure\nconformal/\n    Cargo.toml\n    src/\n        lib.rs\n    examples/        # &lt;-- the `ucitest` is\n        ucitest.rs   # &lt;-- moved to here\n</code></pre>\n\n<pre class=\"lang-toml prettyprint-override\"><code># Cargo.toml\n\n[dependencies]\nkdtree = { path = \"../kdtree\" }\nrand = \"0.3\"\n\n[dev-dependencies]  # &lt;-- move the examples-only dependencies here\nserde = \"1\"\ncsv = \"0.15\"\ncrossbeam = \"0.3\"\nnum_cpus = \"1\"\n\n[lib]\nname = \"conformal\"\n\n[[example]]         # &lt;--- declare the executable\nname = \"ucitest\"    # &lt;--- as an example\n</code></pre>\n\n<p>To run the binary, use:</p>\n\n<pre><code>cargo run --example ucitest\n</code></pre>\n\n<hr>\n\n<h2>2) Optional dependencies with required features</h2>\n\n<p>Dependencies can be made <a href=\"http://doc.crates.io/manifest.html#the-features-section\" rel=\"noreferrer\">optional</a>, so other crates that depend on your <code>conformal</code> library won't need to download them.</p>\n\n<p>Starting from Rust 1.17, binaries can declare they <a href=\"http://doc.crates.io/manifest.html#the-required-features-field-optional\" rel=\"noreferrer\">require</a> certain optional features to be turned on, effectively making those libraries \"needed only for binaries\".</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code># Cargo.toml\n\n[dependencies]\nkdtree = { path = \"../kdtree\" }\nrand = \"0.3\"\n\nserde = { version = \"1\", optional = true }          # &lt;-- make \ncsv = { version = \"0.15\", optional = true }         # &lt;-- all of\ncrossbeam = { version = \"0.3\", optional = true }    # &lt;-- them\nnum_cpus = { version = \"1\", optional = true }       # &lt;-- optional\n\n[lib]\nname = \"conformal\"\n\n[features]\nbuild-binary = [\"serde\", \"csv\", \"crossbeam\", \"num_cpus\"]\n\n[[bin]]         \nname = \"ucitest\"    \nrequired-features = [\"build-binary\"]     # &lt;--\n</code></pre>\n\n<p>Note that you need to manually pass <code>--features build-binary</code> when building the binaries:</p>\n\n<pre><code>cargo run --features build-binary --bin ucitest\n</code></pre>\n\n<hr>\n\n<h2>3) Make the binaries as its own package</h2>\n\n<p>You could do whatever dependency management you like when the library and the binary are separate packages.</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code># File structure\nconformal/\n    Cargo.toml\n    src/\n        lib.rs\n    ucitest/          # &lt;-- move ucitest\n        Cargo.toml    # &lt;-- into its own\n        src/          # &lt;-- package.\n            main.rs \n</code></pre>\n\n<pre class=\"lang-toml prettyprint-override\"><code># ucitest/Cargo.toml \n\n[dependencies]\nconformal = { version = \"0.1\", path = \"../\" }   # &lt;-- explicitly depend on the library\nserde = \"1\"\ncsv = \"0.15\"\ncrossbeam = \"0.3\"\nnum_cpus = \"1\"\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1948, "user_id": 8098236, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7003b88799ae3c4d2faf4dbf20250521?s=128&d=identicon&r=PG&f=1", "display_name": "Ian Rehwinkel", "link": "https://stackoverflow.com/users/8098236/ian-rehwinkel"}, "edited": false, "score": 0, "creation_date": 1582708720, "post_id": 47113822, "comment_id": 106866800, "body": "Can <code>yourlibrary</code> share code with <code>yourbinary</code> when using workspaces?"}], "tags": [], "owner": {"reputation": 3653, "user_id": 786102, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/15fbc7eac0e190a249d7495cc9cdf156?s=128&d=identicon&r=PG", "display_name": "kralyk", "link": "https://stackoverflow.com/users/786102/kralyk"}, "is_accepted": false, "score": 15, "last_activity_date": 1509892946, "last_edit_date": 1509892946, "creation_date": 1509818441, "answer_id": 47113822, "question_id": 35711044, "link": "https://stackoverflow.com/questions/35711044/how-can-i-specify-binary-only-dependencies/47113822#47113822", "title": "How can I specify binary-only dependencies?", "body": "<p>These days this is probably best solved with workspaces [<a href=\"http://doc.crates.io/manifest.html#the-workspace-section\" rel=\"noreferrer\">1</a>, <a href=\"https://doc.rust-lang.org/book/second-edition/ch14-03-cargo-workspaces.html\" rel=\"noreferrer\">2</a>].</p>\n\n<p>The directory structure is as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>project-root\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 yourlibary\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 lib.rs\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 target\n</code></pre>\n\n<p>The top-level <code>Cargo.toml</code> file:</p>\n\n<pre><code>[package]\nname = \"yourprogram\"\nversion = \"0.1.0\"\nauthors = [\"You &lt;you@example.com&gt;\"]\n\n[workspace]\n\n[dependencies]\nyourlibrary = { path = \"yourlibrary\" }\n</code></pre>\n\n<p><code>yourlibrary</code> <code>Cargo.toml</code> file:</p>\n\n<pre><code>[package]\nname = \"yourlibrary\"\nversion = \"0.1.0\"\nauthors = [\"You &lt;you@example.com&gt;\"]\n\n[dependencies]\n</code></pre>\n\n<p>The <code>Cargo.lock</code> file as well as the <code>target</code> directory is at the project root directory and is shared by all the components in the workspace. Workspace components are inferred automatically from dependencies with locak path, but can be specified manually as well.</p>\n\n<p>Each component with its <code>Cargo.toml</code> file can still be published separately on crates.io</p>\n"}], "owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8124, "favorite_count": 6, "accepted_answer_id": 46017284, "answer_count": 3, "score": 43, "last_activity_date": 1561400617, "creation_date": 1456785093, "last_edit_date": 1561400617, "question_id": 35711044, "link": "https://stackoverflow.com/questions/35711044/how-can-i-specify-binary-only-dependencies", "title": "How can I specify binary-only dependencies?", "body": "<p>I have a crate with both a binary and a library. The library is extremely light on dependencies, while the binary requires quite a bit more to, e.g., load files or do scoped parallel things.</p>\n\n<p>Currently, I have my Cargo.toml set up like this:</p>\n\n<pre><code>[dependencies.kdtree]\npath = \"../kdtree\"\n\n[dependencies]\nrand=\"0.3.0\"\nrustc-serialize = \"0.3\"\ncsv = {git = \"https://github.com/BurntSushi/rust-csv.git\"}\ncrossbeam = \"0.2\"\nnum_cpus = \"0.2\"\n\n[lib]\nname = \"conformal\"\npath = \"src/lib.rs\"\n\n[[bin]]\nname = \"ucitest\"\npath = \"src/bin/main.rs\"\n</code></pre>\n\n<p>The only dependencies the library needs are the <code>kdtree</code> and <code>rand</code>. However, it seems like even if you only build the library, it goes and builds the binary-only dependencies anyway. I've tried using <code>features</code> and other tricks like <code>[[bin].dependencies]</code> or <code>[ucitest-dependencies]</code> (or adding a <code>dependencies= []</code> line under <code>[[bin]]</code>) that I thought might make them only build for the binary, but I can't find a way.</p>\n\n<p>These aren't enough dependencies to make this a problem, but it's bothering me. Is there a way to narrow down dependencies so they only build for specific binaries?</p>\n"}, {"tags": ["c++", "rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 784, "user_id": 553803, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ae4934509f3f81bf970dde18ffd6fad8?s=128&d=identicon&r=PG", "display_name": "xbelanch", "link": "https://stackoverflow.com/users/553803/xbelanch"}, "edited": false, "score": 0, "creation_date": 1470031078, "post_id": 35729667, "comment_id": 64762644, "body": "Any ideas of how to do the same with Mingw? Seems it happens something similar (<a href=\"https://forums.bistudio.com/topic/193084-building-extensions-on-mingw/?p=3073069\" rel=\"nofollow noreferrer\">forums.bistudio.com/topic/193084-building-extensions-on-min&zwnj;&#8203;gw/&hellip;</a>)"}, {"owner": {"reputation": 440, "user_id": 5997620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91b3e19892b5c618c3f0112224ed221b?s=128&d=identicon&r=PG&f=1", "display_name": "Victor", "link": "https://stackoverflow.com/users/5997620/victor"}, "reply_to_user": {"reputation": 784, "user_id": 553803, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ae4934509f3f81bf970dde18ffd6fad8?s=128&d=identicon&r=PG", "display_name": "xbelanch", "link": "https://stackoverflow.com/users/553803/xbelanch"}, "edited": false, "score": 0, "creation_date": 1470033290, "post_id": 35729667, "comment_id": 64763462, "body": "Sorry, I don&#39;t have an experience with MinGW."}], "tags": [], "owner": {"reputation": 440, "user_id": 5997620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91b3e19892b5c618c3f0112224ed221b?s=128&d=identicon&r=PG&f=1", "display_name": "Victor", "link": "https://stackoverflow.com/users/5997620/victor"}, "is_accepted": true, "score": 6, "last_activity_date": 1457023454, "last_edit_date": 1457023454, "creation_date": 1456853988, "answer_id": 35729667, "question_id": 35701657, "link": "https://stackoverflow.com/questions/35701657/how-to-implement-the-rvextension-function-for-an-arma-3-dll-in-rust/35729667#35729667", "title": "How to implement the RVExtension function for an ArmA 3 DLL in Rust?", "body": "<p>Thanks to @Shepmaster's advice about <a href=\"http://www.dependencywalker.com/\" rel=\"nofollow\">Dependency Walker</a>, I was able to discover that the problem was in the function's name mangling. I expected the function name would be transformed into <code>_name@X</code>, but it wasn't. <code>RVExtension</code> was exported literally, and ArmA wasn't able to find it by the name <code>_RVExtension@12</code>.</p>\n\n<p>It is strange, but it seems like the compiler version may play a part. I tried ~8 different versions, and was able to make it work only with Rust nightly 1.8 (GNU ABI) 32-bit.</p>\n\n<p>The working code is:</p>\n\n<pre><code>#![feature(libc)]\nextern crate libc;\n\nuse libc::{strncpy, size_t};\n\nuse std::os::raw::c_char;\nuse std::ffi::{CString, CStr};\nuse std::str;\n\n#[allow(non_snake_case)]\n#[no_mangle]\n/// copy the input to the output\npub extern \"stdcall\" fn _RVExtension(\n    response_ptr: *mut c_char,\n    response_size: size_t,\n    request_ptr: *const c_char,\n) {\n    // get str from arma\n    let utf8_arr: &amp;[u8] = unsafe { CStr::from_ptr(request_ptr).to_bytes() };\n    let request: &amp;str = str::from_utf8(utf8_arr).unwrap();\n\n    // send str to arma\n    let response: *const c_char = CString::new(request).unwrap().as_ptr();\n    unsafe { strncpy(response_ptr, response, response_size) };\n}\n</code></pre>\n\n<p>It is also possible to rewrite the function into:</p>\n\n<pre><code>#[export_name=\"_RVExtension\"]\npub extern \"stdcall\" fn RVExtension(\n</code></pre>\n\n<p>Some other Rust compilers may also work with:</p>\n\n<pre><code>#[export_name=\"_RVExtension@12\"]\npub extern \"stdcall\" fn RVExtension(\n</code></pre>\n\n<p>But, for example, nightly 1.8 (MSVC ABI) 32-bit with VS 2015 will not allow <code>@</code> symbol and throws an error at compilation time. The MSVC version will not add <code>@12</code> by itself.</p>\n\n<p>Other compilers may add <code>@12</code> and the function will be exported as <code>_RVExtension@12@12</code>.</p>\n\n<hr>\n\n<p>It's also worth mentioning that ArmA is 32-bit app, so it does not work with a 64-bit DLL.</p>\n"}], "owner": {"reputation": 440, "user_id": 5997620, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91b3e19892b5c618c3f0112224ed221b?s=128&d=identicon&r=PG&f=1", "display_name": "Victor", "link": "https://stackoverflow.com/users/5997620/victor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 862, "favorite_count": 1, "accepted_answer_id": 35729667, "answer_count": 1, "score": 5, "last_activity_date": 1457023454, "creation_date": 1456754844, "last_edit_date": 1456899101, "question_id": 35701657, "link": "https://stackoverflow.com/questions/35701657/how-to-implement-the-rvextension-function-for-an-arma-3-dll-in-rust", "title": "How to implement the RVExtension function for an ArmA 3 DLL in Rust?", "body": "<p>I'm trying to write a DLL extension for ArmA 3 and the <a href=\"https://community.bistudio.com/wiki/Extensions#DLL_Interface\" rel=\"nofollow\">game docs</a> say:</p>\n\n<blockquote>\n  <p>The dll is expected to contain an entry point of a form\n  _RVExtension@12, with a following C signature:</p>\n</blockquote>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>void __stdcall RVExtension(char *output, int outputSize, const char *function);\n</code></pre>\n\n<p>A part of C++ code example is:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>// ...\n\nextern \"C\" {\n    __declspec(dllexport) void __stdcall RVExtension(\n        char *output,\n        int outputSize,\n        const char *function\n    ); \n};\n\nvoid __stdcall RVExtension(\n    char *output,\n    int outputSize,\n    const char *function\n) {\n    outputSize -= 1;\n    strncpy(output,function,outputSize);\n}\n</code></pre>\n\n<p>The docs also have plenty of examples in other languages like: <a href=\"https://community.bistudio.com/wiki/Extensions#DLL_Interface\" rel=\"nofollow\">C#, D and even Pascal</a>, but those don't help me much, because I don't have  a good understanding their FFI =(.</p>\n\n<p>I'm stuck with the following Rust code:</p>\n\n<pre><code>#[no_mangle]\npub extern \"stdcall\" fn RVExtension(\n    game_output: *mut c_char,\n    output_size: c_int,\n    game_input: *const c_char\n) {\n    // ...\n}\n</code></pre>\n\n<p>But ArmA refuses to call it.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1456752702, "post_id": 35700441, "comment_id": 59077970, "body": "Remove the <code>: &amp;str</code> and it works. The <code>&amp;str</code> there doesn\u2019t mean what you think it means. I have no time to explain now, however, as I should be in bed."}, {"owner": {"reputation": 136, "user_id": 5402408, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c8e266229d4570de4fa92484ee4b643?s=128&d=identicon&r=PG&f=1", "display_name": "svat", "link": "https://stackoverflow.com/users/5402408/svat"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 1, "creation_date": 1456753198, "post_id": 35700441, "comment_id": 59078362, "body": "Actually, I meant &#39;&amp;str&#39;, because it is necessary in a bit more complex case. In any case, my question was not how to get this trivial example to work, but what are the rules here? Why does the compiler finds the conflicting requirements here?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1456825942, "post_id": 35700441, "comment_id": 59114446, "body": "@ChrisMorgan: If you have some time, it would be great if you could explain what&#39;s going on. I have a feeling it could be due to an inferred <code>for&lt;&#39;a&gt;</code> but it&#39;s not quite clear... and the lack of answer after 20 hours seems to mean I am not the only one unsure of what&#39;s going on ^^"}], "answers": [{"comments": [{"owner": {"reputation": 136, "user_id": 5402408, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c8e266229d4570de4fa92484ee4b643?s=128&d=identicon&r=PG&f=1", "display_name": "svat", "link": "https://stackoverflow.com/users/5402408/svat"}, "edited": false, "score": 0, "creation_date": 1456895729, "post_id": 35726877, "comment_id": 59151844, "body": "I am sorry if I worded my question badly, but I was interested in the <i>rules</i> for lifetime inference in closures, not how to get the code to compile. Also I tried a version with a static string: <code>id(&quot;string&quot;)</code>, and Rust still cannot infer the lifetime correctly and produce the same error. If Rust does not support lifetime inference in closures, I have no problem to specify it explicitly, but the error message said about <i>conflicting_requirements</i>, which I find very confusing."}], "tags": [], "owner": {"reputation": 1, "user_id": 6003321, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/fde2733590658901d969c89b868edf98?s=128&d=identicon&r=PG", "display_name": "master_of_rust", "link": "https://stackoverflow.com/users/6003321/master-of-rust"}, "is_accepted": false, "score": 0, "last_activity_date": 1456846968, "last_edit_date": 1456846968, "creation_date": 1456846155, "answer_id": 35726877, "question_id": 35700441, "link": "https://stackoverflow.com/questions/35700441/why-can-rust-not-infer-the-proper-lifetime-in-simple-closures-or-infers-they-ar/35726877#35726877", "title": "Why can Rust not infer the proper lifetime in simple closures, or infers they are conflicting?", "body": "<p>The closure can't infer the lifetime from the method signature. Effectively you're defining a lifetime in the method signature let's say it's implicitly <code>'a</code>, and another lifetime, implicitly <code>'b</code> in the closure.</p>\n\n<p>Match up the lifetimes and it will compile.</p>\n\n<pre><code>fn foo&lt;'a&gt;(s: &amp;'a str) {\n    let id = |x: &amp;'a str| x;\n    println!(\"{}\", id(s))\n}\n\nfn main() {\n    foo(\"string\");\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1457930415, "creation_date": 1457930415, "answer_id": 35979658, "question_id": 35700441, "link": "https://stackoverflow.com/questions/35700441/why-can-rust-not-infer-the-proper-lifetime-in-simple-closures-or-infers-they-ar/35979658#35979658", "title": "Why can Rust not infer the proper lifetime in simple closures, or infers they are conflicting?", "body": "<p>When you specify the type of a parameter or the return type in a closure, and that type is a reference, the compiler sets wrong expectations on the implicit lifetime parameter, and there's no way to define the lifetime parameter explicitly on a closure. <a href=\"https://github.com/rust-lang/rust/issues/22340\" rel=\"nofollow\">This is a known issue.</a> The workaround is to omit the parameter's type or the return type and let the compiler infer everything.</p>\n\n<pre><code>fn foo(s: &amp;str) {\n    let id = |x| x;\n    println!(\"{}\", id(s));\n}\n\nfn main() {\n    foo(\"string\");\n}\n</code></pre>\n\n<p>If you still need to give a type hint, you can do so with a <code>let</code> binding inside the closure:</p>\n\n<pre><code>fn foo(s: &amp;str) {\n    let id = |x| { let y: &amp;str = x; y };\n    println!(\"{}\", id(s));\n}\n\nfn main() {\n    foo(\"string\");\n}\n</code></pre>\n"}], "owner": {"reputation": 136, "user_id": 5402408, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c8e266229d4570de4fa92484ee4b643?s=128&d=identicon&r=PG&f=1", "display_name": "svat", "link": "https://stackoverflow.com/users/5402408/svat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 344, "favorite_count": 1, "answer_count": 2, "score": 7, "last_activity_date": 1457930415, "creation_date": 1456751416, "last_edit_date": 1456757958, "question_id": 35700441, "link": "https://stackoverflow.com/questions/35700441/why-can-rust-not-infer-the-proper-lifetime-in-simple-closures-or-infers-they-ar", "title": "Why can Rust not infer the proper lifetime in simple closures, or infers they are conflicting?", "body": "<p>I have not found any rules in the Rust documentation that would explain how lifetime elision applies to closures. Let's take a simple example:</p>\n\n<pre><code>fn foo(s: &amp;str) {\n    let id = |x: &amp;str| x;\n    println!(\"{}\", id(s));\n}\n\nfn main() {\n    foo(\"string\");\n}\n</code></pre>\n\n<p>I thought that the closure in the <code>foo</code> function would work similar to the following code:</p>\n\n<pre><code>fn foo(s: &amp;str) {\n    struct Id;  // A helper structure for closure\n    impl Id {\n        fn id(self: Self, x: &amp;str) -&gt; &amp;str { &amp;x }\n    }\n    let id = Id; // Creating a closure\n    println!(\"{}\", id.id(s));\n}\n</code></pre>\n\n<p>The latter works fine, but the former fails to compile and produces a long error message about conflicting lifetime requirements:</p>\n\n<pre><code>t3.rs:2:24: 2:25 error: cannot infer an appropriate lifetime due to conflicting requirements [E0495]\nt3.rs:2     let id = |x: &amp;str| x;\n                               ^\nt3.rs:2:24: 2:25 note: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the block at 2:23...\nt3.rs:2     let id = |x: &amp;str| x;\n                               ^\nt3.rs:2:24: 2:25 note: ...so that expression is assignable (expected `&amp;str`, found `&amp;str`)\nt3.rs:2     let id = |x: &amp;str| x;\n                               ^\n&lt;std macros&gt;:3:11: 3:36 note: but, the lifetime must be valid for the expression at 3:10...\n&lt;std macros&gt;:3 print ! ( concat ! ( $ fmt , \"\\n\" ) , $ ( $ arg ) * ) ) ;\n                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n&lt;std macros&gt;:2:25: 2:56 note: in this expansion of format_args!\n&lt;std macros&gt;:3:1: 3:54 note: in this expansion of print! (defined in &lt;std macros&gt;)\nt3.rs:3:5: 3:27 note: in this expansion of println! (defined in &lt;std macros&gt;)\n&lt;std macros&gt;:3:11: 3:36 note: ...so type `(&amp;&amp;str,)` of expression is valid during the expression\n&lt;std macros&gt;:3 print ! ( concat ! ( $ fmt , \"\\n\" ) , $ ( $ arg ) * ) ) ;\n                         ^~~~~~~~~~~~~~~~~~~~~~~~~\n&lt;std macros&gt;:2:25: 2:56 note: in this expansion of format_args!\n&lt;std macros&gt;:3:1: 3:54 note: in this expansion of print! (defined in &lt;std macros&gt;)\nt3.rs:3:5: 3:27 note: in this expansion of println! (defined in &lt;std macros&gt;)\nerror: aborting due to previous error\n</code></pre>\n\n<p>I wonder why Rust cannot infer the proper lifetime in simple closures like the one that I wrote above. Moreover, why does the compiler think that there are <em>conflicting</em> requirements for lifetime.</p>\n"}, {"tags": ["reference", "scope", "rust", "lifetime"], "comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1456730662, "post_id": 35693438, "comment_id": 59064939, "body": "oh? ok - I&#39;ll take a look and remove if question git answered there!"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1456731558, "post_id": 35693438, "comment_id": 59065287, "body": "You probably should put the vector into the struct, not only a reference."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1456733447, "post_id": 35693438, "comment_id": 59066192, "body": "can you syntactically show me what you mean?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1456735838, "post_id": 35693438, "comment_id": 59067355, "body": "@xetra11 <code>struct Canvas { width: i32, height: i32, array: Vec&lt;char&gt; }</code>, something like this."}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "closed_date": 1456735852, "answer_count": 0, "score": 1, "last_activity_date": 1520111660, "creation_date": 1456728335, "last_edit_date": 1520111660, "question_id": 35693438, "link": "https://stackoverflow.com/questions/35693438/rust-lifetime-with-a-vec-does-not-work-as-intended", "closed_reason": "Duplicate", "title": "Rust lifetime with a vec! does not work as intended", "body": "<p>I love rust and I want to master it, but I am having difficulties.</p>\n\n<p>Surely its about lifetimes. I still have a hard time getting my head around it yet. I show you some code here. There you can see a struct which holds a borrowed array.</p>\n\n<p>When creating the CTOR for that Canvas I fail in declaring the lifetime <code>'a</code> the right way.</p>\n\n<pre><code>struct Canvas&lt;'a&gt;{ \n  width: i32,\n  height: i32, \n  array: &amp;'a Vec&lt;char&gt;\n}\n\nimpl &lt;'a&gt;Canvas&lt;'a&gt;{\n  fn new(width: i32, height: i32) -&gt; Canvas&lt;'a&gt;{\n    Canvas {\n      width: width,\n      height: height,\n      array: &amp;vec!['x'; (width*height) as usize]\n  }\n}\n</code></pre>\n\n<p>Error says:</p>\n\n<blockquote>\n  <p>Reference must be valid for the lifetime 'a as defined on the block at 9:49</p>\n</blockquote>\n\n<p>I understand the problem here - but can't find any example how to do it right. I nearly put <code>'a</code> on every position possible :D</p>\n\n<h2>Edit</h2>\n\n<p>It was mentioned that I should not put the array as reference into my struct - how should it look to be right?</p>\n"}, {"tags": ["collections", "struct", "rust"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1456731302, "post_id": 35691109, "comment_id": 59065181, "body": "Why don&#39;t you use a map from <code>(x, y, z)</code> to blocks?"}], "answers": [{"comments": [{"owner": {"reputation": 792, "user_id": 4468905, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/32e2114ecffbb59e23690c0f22c13a48?s=128&d=identicon&r=PG", "display_name": "phase", "link": "https://stackoverflow.com/users/4468905/phase"}, "edited": false, "score": 0, "creation_date": 1457148530, "post_id": 35693201, "comment_id": 59288338, "body": "There doesn&#39;t seem to be a <code>iter_mut()</code> in <code>std::sync::mutex::MutexGuard&lt;&#39;_, std::collections::hash::set::HashSet&lt;Chunk&gt;&gt;</code>"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 792, "user_id": 4468905, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/32e2114ecffbb59e23690c0f22c13a48?s=128&d=identicon&r=PG", "display_name": "phase", "link": "https://stackoverflow.com/users/4468905/phase"}, "edited": false, "score": 0, "creation_date": 1457156994, "post_id": 35693201, "comment_id": 59289965, "body": "Hmm, indeed you&#39;re right. I gues that&#39;s because changing hash set items is not safe - if you change them, their hash code will also likely change, and so it won&#39;t correspond to their position inside the hash set and the item would be lost. I guess using a map from (x, y, z), as suggested by starblue, would be more correct. I&#39;ll change my answer when I will be able to."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 4, "last_activity_date": 1457174707, "last_edit_date": 1457174707, "creation_date": 1456727283, "answer_id": 35693201, "question_id": 35691109, "link": "https://stackoverflow.com/questions/35691109/cannot-assign-to-immutable-indexed-content-while-iterating/35693201#35693201", "title": "Cannot assign to immutable indexed content while iterating", "body": "<p>The original answer is incorrect - <code>HashSet</code> does not have <code>iter_mut()</code> method: changing elements of a hash table is unsafe, because their position is determined by their hash, so if a value changes, its hash also changes, but since it is modified in-place, it won't be positioned in the hash table correctly anymore, and will likely be lost.</p>\n\n<p>Therefore, the most natural approach would be to use a <code>HashMap&lt;(i32, i32, i32), Chunk&gt;</code>, as suggested by @starblue:</p>\n\n<pre><code>lazy_static! {\n    static ref CHUNKS: Mutex&lt;HashMap&lt;(i32, i32, i32), Chunk&gt;&gt; = Mutex::new(HashMap::new());\n}\n\n#[no_mangle]\npub extern fn add_chunk(cx: i32, cy: i32, cz: i32, c_blocks: [[[i32; 16]; 16]; 16]) {\n    CHUNKS.lock().unwrap().insert((cx, cy, cz), Chunk {x: cx, y: cy, z: cz, blocks: c_blocks});\n}\n\n#[no_mangle]\npub extern fn update_block(x: i32, y: i32, z: i32, id: i32) {\n    let cx: i32 = x / 16;\n    let cy: i32 = y / 16;\n    let cz: i32 = z / 16;\n\n    let guard = CHUNKS.lock().unwrap();\n    if let Some(chunk) = guard.get_mut((cx, cy, cz)) {\n        let rx: i32 = if x &gt; 0 { x % 16 } else { 16 + (x % 16) };\n        let ry: i32 = if y &gt; 0 { y % 16 } else { 16 + (y % 16) };\n        let rz: i32 = if z &gt; 0 { z % 16 } else { 16 + (z % 16) };\n\n        chunk.blocks[rx as usize][ry as usize][rz as usize] = id;\n    }\n}\n</code></pre>\n\n<p>Additionally, with a hash map you don't need to walk through the whole collection to get an item by its coordinates.</p>\n\n<p>The original answer is below.</p>\n\n<hr>\n\n<p>Your code is almost correct, you just need to use <code>iter_mut()</code> instead of <code>iter()</code>:</p>\n\n<pre><code>for c in CHUNKS.lock().unwrap().iter_mut()\n</code></pre>\n\n<p>or, alternatively:</p>\n\n<pre><code>for c in &amp;mut *CHUNKS.lock().unwrap()\n</code></pre>\n\n<p><code>iter()</code> returns an iterator which yields immutable references, so you can't modify anything through it. <code>iter_mut()</code>, on the other hand, returns an iterator yielding <em>mutable</em> references - exactly what you need.</p>\n\n<p>Also, instead of directly calling <code>iter_mut()</code>, it is more idiomatic to rely on <code>IntoIterator</code> implementations for references to collections: for example, <code>&amp;mut HashSet&lt;T&gt;</code> implements <code>IntoIterator</code> by calling <code>iter_mut()</code> on the set, so <code>for x in &amp;mut hash_set</code> is equivalent to <code>for x in hash_set.iter_mut()</code>. Additional <code>*</code> here is required because <code>unwrap()</code> returns not just the contained value, but a <code>MutexGuard</code> which derefs to whatever the mutex contains.</p>\n"}], "owner": {"reputation": 792, "user_id": 4468905, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/32e2114ecffbb59e23690c0f22c13a48?s=128&d=identicon&r=PG", "display_name": "phase", "link": "https://stackoverflow.com/users/4468905/phase"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 838, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1457174707, "creation_date": 1456713658, "last_edit_date": 1456756555, "question_id": 35691109, "link": "https://stackoverflow.com/questions/35691109/cannot-assign-to-immutable-indexed-content-while-iterating", "title": "Cannot assign to immutable indexed content while iterating", "body": "<p>I'm writing a library in Rust for a Java application and I'm trying to send data from the Java code to the Rust code. This data consists of structs called <code>Chunk</code>s which I construct on the Rust side. I'm also sending data to modify these structs, so they need to be mutable. I'm getting an error saying the <code>Chunk</code>s inside the <code>HashSet</code> are immutable, which shouldn't be the case.</p>\n\n<pre class=\"lang-Rust prettyprint-override\"><code>#[derive(Eq, PartialEq, Hash)]\nstruct Chunk {\n    x: i32,\n    y: i32,\n    z: i32,\n    blocks: [[[i32; 16]; 16]; 16],\n}\n\nlazy_static! {\n    // static mutable list (or at least it should be)\n    static ref CHUNKS: Mutex&lt;HashSet&lt;Chunk&gt;&gt; = Mutex::new(HashSet::new());\n}\n\n#[no_mangle]\npub extern fn add_chunk(cx: i32, cy: i32, cz: i32, c_blocks: [[[i32; 16]; 16]; 16]) {\n    // create Chunk and put it in the global list\n    CHUNKS.lock().unwrap().insert(Chunk {x: cx, y: cy, z: cz, blocks: c_blocks});\n}\n\n#[no_mangle]\npub extern fn update_block(x: i32, y: i32, z: i32, id: i32) {\n    let cx: i32 = x / 16;\n    let cy: i32 = y / 16;\n    let cz: i32 = z / 16;\n\n    let rx: i32 = if x &gt; 0 { x % 16 } else { 16 + (x % 16) };\n    let ry: i32 = if y &gt; 0 { y % 16 } else { 16 + (y % 16) };\n    let rz: i32 = if z &gt; 0 { z % 16 } else { 16 + (z % 16) };\n\n    for c in CHUNKS.lock().unwrap().iter() {\n        if c.x == cx &amp;&amp; c.y == cy &amp;&amp; c.z == cz {\n\n            // ERROR: cannot assign to immutable indexed content `c.blocks[..][..][..]`\n\n            c.blocks[rx as usize][ry as usize][rz as usize] = id;\n        }\n    }\n}\n</code></pre>\n\n<p>I don't know if I should be using a <code>Vec</code> or <code>HashSet</code>, I went with the latter because it seemed the easiest.</p>\n"}, {"tags": ["generics", "pattern-matching", "rust"], "answers": [{"tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": true, "score": 4, "last_activity_date": 1456699680, "last_edit_date": 1456699680, "creation_date": 1456692709, "answer_id": 35688117, "question_id": 35687565, "link": "https://stackoverflow.com/questions/35687565/can-i-create-a-match-against-a-generic-type-that-implements-pattern/35688117#35688117", "title": "Can I create a match against a generic type that implements Pattern?", "body": "<p>Matching only works with concrete types, so the answer is no. Nothing is known about the type <code>T</code> here except that we can call the methods defined in <code>Pattern</code> on it (which are for searching in a string).</p>\n"}], "owner": {"reputation": 2340, "user_id": 2250791, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e72d4f734d39c777f543025d36d4de4e?s=128&d=identicon&r=PG", "display_name": "Camden Narzt", "link": "https://stackoverflow.com/users/2250791/camden-narzt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 232, "favorite_count": 0, "accepted_answer_id": 35688117, "answer_count": 1, "score": 0, "last_activity_date": 1456699680, "creation_date": 1456689782, "question_id": 35687565, "link": "https://stackoverflow.com/questions/35687565/can-i-create-a-match-against-a-generic-type-that-implements-pattern", "title": "Can I create a match against a generic type that implements Pattern?", "body": "<p>I think this might work if I can work out the lifetime notation, am I wrong?</p>\n\n<pre><code>pub fn from&lt;T:Pattern&gt;(from: T) -&gt; Result&lt;Tag, &amp;'static str&gt; {\n    match from {\n        'A'|\"A\" =&gt; Ok(Tag::ChA),\n        'B'|\"B\" =&gt; Ok(Tag::ChB),\n        'C'|\"C\" =&gt; Ok(Tag::ChC),\n        'D'|\"D\" =&gt; Ok(Tag::ChD),\n        'T'|\"Tmpr\" =&gt; Ok(Tag::Tmpr),\n        'Y'|\"Batt\" =&gt; Ok(Tag::Batt),\n        'L'|\"Acc\" =&gt; Ok(Tag::Acc),\n        _ =&gt; Err(\"Error: unknown channel\"),\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1456689675, "post_id": 35684136, "comment_id": 59052616, "body": "Please provide working <a href=\"http://stackoverflow.com/help/mcve/\">MVCE</a> on <a href=\"https://play.rust-lang.org/?gist=4770e1f469415a3a66c4&amp;version=stable\" rel=\"nofollow noreferrer\">rust playground</a> next time. This saves a lot of time for those who will respond to your questions."}], "answers": [{"tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": true, "score": 3, "last_activity_date": 1458279601, "last_edit_date": 1458279601, "creation_date": 1456679507, "answer_id": 35685608, "question_id": 35684136, "link": "https://stackoverflow.com/questions/35684136/implement-intoiterator-for-struct-which-iterate-its-hashmap-attribute/35685608#35685608", "title": "Implement IntoIterator for struct which iterate its HashMap attribute", "body": "<p>See how <code>IntoIterator</code> implemented for <code>HashMap</code> in stdlib <a href=\"https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#1366-1422\" rel=\"nofollow\">source</a></p>\n\n<p>If you want implement <code>IntoIterator</code> for <code>ProcessList</code> you do not need references and lifetimes at all:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::collections::hash_map::IntoIter;\n\n#[derive(Eq,PartialEq,Hash)]\npub struct ProcessPtr;\n\npub struct ProcessList {\n    map: HashMap&lt;ProcessPtr, usize&gt;,\n}\n\nimpl ProcessList {\n    pub fn new() -&gt; ProcessList {\n        ProcessList {\n            map: HashMap::new(),\n        }\n    }\n\n    pub fn add(self, process: ProcessPtr, nb: usize) {\n    /* Bunch of errors here\n        match self.map.contains_key(process) {\n            true =&gt; self.map[process] += nb,\n            false =&gt; self.map.insert(process, nb),\n        };\n    */\n    }\n}\n\nimpl IntoIterator for ProcessList {\n    type Item = (ProcessPtr, usize);\n    type IntoIter = IntoIter&lt;ProcessPtr, usize&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.map.into_iter()\n    }\n}\n\nfn main(){\n}\n</code></pre>\n\n<p>Also your code contains some errors in the <code>add</code> function.</p>\n"}], "owner": {"reputation": 4863, "user_id": 2482582, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/yQkZE.jpg?s=128&g=1", "display_name": "Moebius", "link": "https://stackoverflow.com/users/2482582/moebius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 411, "favorite_count": 0, "accepted_answer_id": 35685608, "answer_count": 1, "score": 4, "last_activity_date": 1458279601, "creation_date": 1456671930, "last_edit_date": 1456699443, "question_id": 35684136, "link": "https://stackoverflow.com/questions/35684136/implement-intoiterator-for-struct-which-iterate-its-hashmap-attribute", "title": "Implement IntoIterator for struct which iterate its HashMap attribute", "body": "<p>I have a struct with an attribute of type <code>HashMap</code>. I want to implement the <code>IntoIterator</code> trait for this struct so that I can iterate its <code>HashMap</code> attribute. The problem is I run into lifetime hell:</p>\n\n<pre><code>pub struct ProcessList {\n    map: HashMap&lt;ProcessPtr, usize&gt;,\n}\n\nimpl ProcessList {\n    pub fn new() -&gt; ProcessList {\n        ProcessList {\n            map: HashMap::new(),\n        }\n    }\n\n    pub fn add(self, process: ProcessPtr, nb: usize) {\n        match self.map.contain_key(process) {\n            true =&gt; self.map[process] += nb,\n            false =&gt; self.map.insert(process, nb),\n        };\n    }\n}\n\nimpl&lt;'a&gt; IntoIterator for ProcessList {\n    type Item = (&amp;'a ProcessPtr, &amp;'a usize);\n    type IntoIter = Iter&lt;'a, ProcessPtr, usize&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.map.into_iter()\n    }\n}\n</code></pre>\n"}, {"tags": ["compilation", "compiler-errors", "iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "edited": false, "score": 0, "creation_date": 1456679309, "post_id": 35683636, "comment_id": 59048455, "body": "Can you give some examples of how to do either 1. or 2.? i&#39;m new to Rust and amn&#39;t sure how to do it."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "edited": false, "score": 1, "creation_date": 1456687666, "post_id": 35683636, "comment_id": 59051886, "body": "@Rory: I am unsure about how to do (1) in your case because I am not sure exactly how you expect the <code>XMLReader</code> to work internally sorry; (2) is straightforward however, just switch the signature to <code>fn objects(self) -&gt; ...</code> and the compiler will guide you."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1456669301, "creation_date": 1456669301, "answer_id": 35683636, "question_id": 35682546, "link": "https://stackoverflow.com/questions/35682546/implementing-an-iterator-on-itself-returned-as-a-box-compile-error-about-itera/35683636#35683636", "title": "Implementing an iterator on itself returned as a box - compile error about Iterator not impl&#39;ed, despite being impl&#39;ed", "body": "<p>The answer is both simple and annoying: you have implemented <code>Iterator</code> for <code>XMLReader&lt;R&gt;</code> and not <code>&amp;XMLReader&lt;R&gt;</code> OR you have to <code>Box</code> the value and not the reference.</p>\n\n<p>The former will not get you far, because then you will be trying to create a <code>Box</code> around a reference... there are two possibilities:</p>\n\n<ol>\n<li>Have a different type for the reader and the iterator</li>\n<li>Change the signature of <code>objects</code> to take <code>self</code> by value</li>\n</ol>\n\n<p>Then you will also have to take care to constrain <code>R</code> to ensure that it does not reference objects that could cease to live before you are done with your iteration. A <code>'static</code> bound would be simpler to start with.</p>\n"}], "owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 35683636, "answer_count": 1, "score": 0, "last_activity_date": 1457850361, "creation_date": 1456662607, "last_edit_date": 1457850361, "question_id": 35682546, "link": "https://stackoverflow.com/questions/35682546/implementing-an-iterator-on-itself-returned-as-a-box-compile-error-about-itera", "title": "Implementing an iterator on itself returned as a box - compile error about Iterator not impl&#39;ed, despite being impl&#39;ed", "body": "<p>I am trying to write a library that will read bytes (e.g. from a file), and parse out objects and return an interator over them. However I am having trouble implementing the iterator, even with a dummy version.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>use std::io::Read;\n\n// One of the objects I want to return\npub struct ObjA {\n    data: i8,\n}\n\n// There might be other kinds of objects here.\npub enum MyObj {\n    ObjA(ObjA),\n}\n\n// There will be other input formats, and I want a generic trait for \"read bytes and return MyObj's\"\npub trait ObjReader&lt;R&gt; {\n    // This should create the parser/reader from a std::io::Read source\n    fn new(R) -&gt; Self;\n\n    // This will iterate over the objects. (AFAIK this is how to return an iterator)\n    fn objects(&amp;self) -&gt; Box&lt;Iterator&lt;Item=MyObj&gt;&gt;;\n}\n\n// The data will be in XML, so here's a stupid struct that will (eventually) parse it and return objects. It obv. takes a `Read`\npub struct XMLReader&lt;R: Read&gt; {\n    inner_reader: R,\n}\n\n// The XMLReader will be an ObjReader\nimpl&lt;R: Read&gt; ObjReader&lt;R&gt; for XMLReader&lt;R&gt; {\n    fn new(reader: R) -&gt; XMLReader&lt;R&gt; {\n        XMLReader { inner_reader: reader }\n    }\n\n    // Return the iterator for the objects, I'll keep it simple and iterate over itself, rather than create a new struct\n    fn objects(&amp;self) -&gt; Box&lt;Iterator&lt;Item=MyObj&gt;&gt; {\n        Box::new(self)\n    }\n}\n\n// Make XMLReader be an iterator\nimpl&lt;R: Read&gt; Iterator for XMLReader&lt;R&gt; {\n    type Item = MyObj;\n\n    // Right now, it's always empty. This is a stub\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        None\n    }\n}\n\n// Dummy main to allow it to compile\nfn main() {\n\n}\n</code></pre>\n\n<p>And I get this error:</p>\n\n<pre><code>$ multirust run beta rustc test.rs\ntest.rs:24:13: 24:27 error: the trait `core::iter::Iterator` is not implemented for the type `&amp;XMLReader&lt;R&gt;` [E0277]\ntest.rs:24             Box::new(self)\n                       ^~~~~~~~~~~~~~\ntest.rs:24:13: 24:27 help: run `rustc --explain E0277` to see a detailed explanation\ntest.rs:24:13: 24:27 note: `&amp;XMLReader&lt;R&gt;` is not an iterator; maybe try calling `.iter()` or a similar method\ntest.rs:24:13: 24:27 note: required for the cast to the object type `core::iter::Iterator&lt;Item=MyObj&gt; + 'static`\nerror: aborting due to previous error\n</code></pre>\n\n<p>The error is how <code>XMLReader</code> doesn't iterate, but I have impl'ed Iterator for it. How can I make this work?</p>\n\n<p>I am using rust 1.7 beta from multirust. (the stable rustc segfaulted on me....)</p>\n\n<pre><code>$ multirust run beta rustc --version\nrustc 1.7.0-beta.4 (5ed7d4e31 2016-02-26)\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 2, "creation_date": 1456662291, "post_id": 35680872, "comment_id": 59042378, "body": "By the way: If it&#39;s a simple counter, one can also use one of the <code>Atomic*</code> types, change the signature to <code>greet(&amp;self, Request, Response)</code>, and increment the counter via <code>fetch_add</code>."}, {"owner": {"reputation": 42480, "user_id": 148423, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/6ed1f9b5afd258d0b73ad1eae10ac384?s=128&d=identicon&r=PG", "display_name": "Joe", "link": "https://stackoverflow.com/users/148423/joe"}, "edited": false, "score": 1, "creation_date": 1517871329, "post_id": 35680872, "comment_id": 84262777, "body": "I think this answer is out of date. Is there any chance you could update it please?"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 11, "last_activity_date": 1456652154, "creation_date": 1456652154, "answer_id": 35680872, "question_id": 35678267, "link": "https://stackoverflow.com/questions/35678267/how-to-share-mutable-state-for-a-hyper-handler/35680872#35680872", "title": "How to share mutable state for a Hyper handler?", "body": "<p>Because request handling may happen in different threads, you need to synchronize access to the global state, for which you need to use things like <a href=\"http://doc.rust-lang.org/std/sync/struct.Mutex.html\"><code>Mutex</code></a>:</p>\n\n<pre><code>let w = Mutex::new(World { count: 0 });\n\nServer::http(\"127.0.0.1:3001\").unwrap()\n    .handle(move |req: Request, res: Response| w.lock().unwrap().greet(req, res))\n    .unwrap();\n</code></pre>\n\n<p>You can find this out from the signature of <a href=\"http://hyper.rs/hyper/hyper/server/struct.Server.html#method.handle\"><code>Server::handle()</code></a>: it requires its handler to be <code>Handler + 'static</code>, and <a href=\"http://hyper.rs/hyper/hyper/server/trait.Handler.html\"><code>Handler</code></a> itself requires <code>Send + Sync</code>. Therefore, everything this closure captures must also be <code>'static + Send + Sync</code>, that is, safe to access from multiple threads. Values wrapped into a mutex usually satisfy these requirements (if they don't contain references, of course).</p>\n"}], "owner": {"reputation": 289, "user_id": 5901356, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4c666fecb5274110986882d680082cf9?s=128&d=identicon&r=PG&f=1", "display_name": "Ronald Smith", "link": "https://stackoverflow.com/users/5901356/ronald-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1080, "favorite_count": 1, "accepted_answer_id": 35680872, "answer_count": 1, "score": 4, "last_activity_date": 1456707402, "creation_date": 1456629181, "last_edit_date": 1456707402, "question_id": 35678267, "link": "https://stackoverflow.com/questions/35678267/how-to-share-mutable-state-for-a-hyper-handler", "title": "How to share mutable state for a Hyper handler?", "body": "<p>As a very simple example, I'm trying to write a webserver that simply replies</p>\n\n<blockquote>\n  <p>this page has been requested $N times</p>\n</blockquote>\n\n<p>but I'm having a lot of trouble sharing the mutable state for this to happen. Here's my best attempt:</p>\n\n<pre><code>extern crate hyper;\n\nuse hyper::Server;\nuse hyper::server::Request;\nuse hyper::server::Response;\n\nstruct World {\n    count: i64,\n}\n\nimpl World {\n    fn greet(&amp;mut self, req: Request, res: Response) {\n        self.count += 1;\n        let str: String = format!(\"this page has been requested {} times\", self.count);\n        res.send(str.as_bytes()).unwrap();\n    }\n}\n\nfn main() {\n    println!(\"Started..\");\n\n    let mut w = World { count: 0 }; \n\n    Server::http(\"127.0.0.1:3001\").unwrap()\n        .handle(move |req: Request, res: Response| w.greet(req, res) ).unwrap();\n\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "edited": false, "score": 0, "creation_date": 1456658264, "post_id": 35675385, "comment_id": 59041167, "body": "Can you write out the vector you want to build?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1456667583, "post_id": 35675385, "comment_id": 59044135, "body": "Please produce a MVCE, preferably on the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">playpen</a>. As it is, it is unclear whether the result should be a <code>Vec&lt;T&gt;</code> or <code>Vec&lt;Vec&lt;T&gt;&gt;</code>, for example."}, {"owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "edited": false, "score": 0, "creation_date": 1456677987, "post_id": 35675385, "comment_id": 59047910, "body": "<code>scan</code> produces an iterator that internally stores the state. On each call of next, a mutable reference to that state is passed to the closure. That is why you cannot move the state. It would invalidate the iterator. Maybe you are looking for <code>fold</code>? I don&#39;t understand what you&#39;re trying to achieve, and so cannot give a solution."}, {"owner": {"reputation": 199, "user_id": 5991368, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO4eJ.jpg?s=128&g=1", "display_name": "Peter Barmettler", "link": "https://stackoverflow.com/users/5991368/peter-barmettler"}, "reply_to_user": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "edited": false, "score": 0, "creation_date": 1456837396, "post_id": 35675385, "comment_id": 59121837, "body": "@A.B. Thank&#39;s for your explanation of the scan iterator, means that what I was trying to achieve with scan is impossible. I added a for loop which produces the vector I would like to produce. Any suggestion how to improve this? Using a single-entry vector just serves as example of a non-copy object."}, {"owner": {"reputation": 199, "user_id": 5991368, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO4eJ.jpg?s=128&g=1", "display_name": "Peter Barmettler", "link": "https://stackoverflow.com/users/5991368/peter-barmettler"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1456838381, "post_id": 35675385, "comment_id": 59122603, "body": "@Matthieu M.: Thank you for pointing out playpen, I created a minimal example accessible on  <a href=\"https://gist.github.com/anonymous/c7ca88d5b8906e0dbc65\" rel=\"nofollow noreferrer\">Gist</a> ."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1456843607, "post_id": 35675385, "comment_id": 59126613, "body": "@pbarmettler: It is better to have the MVCE accessible directly in the question so I edited in, and as a bonus now that I understood what you were trying to do I also answered ;) (took me some time to wrap my head around what that <code>scan</code> thing was about oO)"}], "answers": [{"comments": [{"owner": {"reputation": 199, "user_id": 5991368, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO4eJ.jpg?s=128&g=1", "display_name": "Peter Barmettler", "link": "https://stackoverflow.com/users/5991368/peter-barmettler"}, "edited": false, "score": 0, "creation_date": 1456837597, "post_id": 35683407, "comment_id": 59122018, "body": "Thank you swizard, this clarifies what is going on."}], "tags": [], "owner": {"reputation": 2156, "user_id": 4347341, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/OUTXT.jpg?s=128&g=1", "display_name": "swizard", "link": "https://stackoverflow.com/users/4347341/swizard"}, "is_accepted": false, "score": 1, "last_activity_date": 1456667881, "creation_date": 1456667881, "answer_id": 35683407, "question_id": 35675385, "link": "https://stackoverflow.com/questions/35675385/how-can-the-state-be-shared-between-the-returned-result-and-the-next-iteration-w/35683407#35683407", "title": "How can the state be shared between the returned result and the next iteration when using the scan iterator?", "body": "<p>I don't think it is possible to do it without cloning value using <code>scan</code> method. </p>\n\n<p>When you return a non-<code>Copy</code> value from the closure, you lose ownership of that value. And it's not possible to keep any reference to it, because it's new owner could move the value in memory anywhere it wants (for example, during vector resizing), and Rust is intended to protect against this kind of errors.</p>\n"}, {"comments": [{"owner": {"reputation": 199, "user_id": 5991368, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO4eJ.jpg?s=128&g=1", "display_name": "Peter Barmettler", "link": "https://stackoverflow.com/users/5991368/peter-barmettler"}, "edited": false, "score": 0, "creation_date": 1456854301, "post_id": 35724238, "comment_id": 59134377, "body": "The fact that the fold statement can be used to replace the for loop (as shown in <a href=\"https://internals.rust-lang.org/t/add-foreach-method-to-iterators-for-side-effects/1312/2\" rel=\"nofollow noreferrer\">link</a>) is clear, but I was looking for a way to pass the result of <code>previous+x</code> to the next step of the iteration. In your version you are still making a copy of <code>previous+x</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 199, "user_id": 5991368, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO4eJ.jpg?s=128&g=1", "display_name": "Peter Barmettler", "link": "https://stackoverflow.com/users/5991368/peter-barmettler"}, "edited": false, "score": 0, "creation_date": 1456860648, "post_id": 35724238, "comment_id": 59138156, "body": "@pbarmettler: But... anyway in the next step of the iteration you would be making a copy of it to be able to push it into the vector no? Would <code>(0..10).fold(Vec::with_capacity(10), |mut vec, x| { let new = if vec.is_empty() { vec![x] } else { vec![vec.back() + x] }; vec.push(new); vec });</code> work for you?"}, {"owner": {"reputation": 199, "user_id": 5991368, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO4eJ.jpg?s=128&g=1", "display_name": "Peter Barmettler", "link": "https://stackoverflow.com/users/5991368/peter-barmettler"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1456945629, "post_id": 35724238, "comment_id": 59185191, "body": "@MatthieuM.: Yes, this works. I consider this equivalent to the <code>xs.push[vec!(0)]; for x in 1..10 { let z = vec![xs.last().unwrap()[0] + x]; xs.push(z);};</code> solution stated in my question. If one does not require lazy evaluation of the iteration this is a perfectly fine solution."}], "tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": false, "score": 0, "last_activity_date": 1456838903, "creation_date": 1456838903, "answer_id": 35724238, "question_id": 35675385, "link": "https://stackoverflow.com/questions/35675385/how-can-the-state-be-shared-between-the-returned-result-and-the-next-iteration-w/35724238#35724238", "title": "How can the state be shared between the returned result and the next iteration when using the scan iterator?", "body": "<p>By chaining solution, do you mean this?</p>\n\n<pre><code>let vec = (0..10)\n    .fold((Vec::with_capacity(10), 0), |(mut vec, previous), x| {\n        vec.push(vec![previous + x]);\n        (vec, previous + x)\n    })\n    .0;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 199, "user_id": 5991368, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO4eJ.jpg?s=128&g=1", "display_name": "Peter Barmettler", "link": "https://stackoverflow.com/users/5991368/peter-barmettler"}, "edited": false, "score": 0, "creation_date": 1456856641, "post_id": 35725925, "comment_id": 59135801, "body": "Understood. I was trying to use <code>scan</code> for passing a large type and you clearly explained that this is not what it is meant for. The solution proposed in the second part of the answer looks interesting. But it is probably clearer to fill the vector using a for loop (or fold as shown in the answer of A.B.). Thanks."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 199, "user_id": 5991368, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO4eJ.jpg?s=128&g=1", "display_name": "Peter Barmettler", "link": "https://stackoverflow.com/users/5991368/peter-barmettler"}, "edited": false, "score": 0, "creation_date": 1456860453, "post_id": 35725925, "comment_id": 59138040, "body": "@pbarmettler: Actually, you can absolutely pass a large type (especially by reference), what matters is that you cannot return a <i>reference</i> to said type (or anything computed locally)."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1456843538, "creation_date": 1456843538, "answer_id": 35725925, "question_id": 35675385, "link": "https://stackoverflow.com/questions/35675385/how-can-the-state-be-shared-between-the-returned-result-and-the-next-iteration-w/35725925#35725925", "title": "How can the state be shared between the returned result and the next iteration when using the scan iterator?", "body": "<p>Let's check the definition of <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.scan\" rel=\"nofollow\"><code>scan</code></a>:</p>\n\n<blockquote>\n<pre><code>fn scan&lt;St, B, F&gt;(self, initial_state: St, f: F) -&gt; Scan&lt;Self, St, F&gt;\n    where F: FnMut(&amp;mut St, Self::Item) -&gt; Option&lt;B&gt;\n</code></pre>\n</blockquote>\n\n<p>Note that <code>B</code> is distinct from <code>St</code>. The idea of <code>scan</code> is that:</p>\n\n<ul>\n<li>you keep an accumulator of type <code>St</code></li>\n<li>at each iteration, you produce a value of type <code>B</code></li>\n</ul>\n\n<p>and indeed it is not quite suited to returning values of type <code>St</code> because you are only borrowing <code>St</code> and do not control its lifetime.</p>\n\n<p><code>scan</code> is made for you to return a brand new value each time:</p>\n\n<pre><code>let xs = (0..10).scan(0, |state, current| {\n    *state += current;\n    Some(NonCopy::new(*state))\n}).collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>and that's it!</p>\n\n<hr>\n\n<p>A note on efficiency.</p>\n\n<p>The <em>state</em> of <code>scan</code> is a sunk cost so it is best to use a cheap state (a single integer here).</p>\n\n<p>If you need a larger type <code>X</code> and wish to \"get your memory back\", then you can pass an <code>&amp;mut Option&lt;X&gt;</code> and then use <code>.take()</code> after the <code>scan</code>:</p>\n\n<pre><code>let mut x = Some(NonCopy::new(0));\n\nlet xs = (0..10).scan(&amp;mut x, |state, current| {\n    let i: &amp;mut i32 = &amp;mut state.as_mut().unwrap().value;\n    *i += current;\n    Some(NonCopy::new(*i))\n}).collect::&lt;Vec&lt;_&gt;&gt;();\n\nlet _ = x.take();\n</code></pre>\n\n<p>It's not as elegant, of course.</p>\n"}], "owner": {"reputation": 199, "user_id": 5991368, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO4eJ.jpg?s=128&g=1", "display_name": "Peter Barmettler", "link": "https://stackoverflow.com/users/5991368/peter-barmettler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 35725925, "answer_count": 3, "score": 1, "last_activity_date": 1456843924, "creation_date": 1456606791, "last_edit_date": 1456843924, "question_id": 35675385, "link": "https://stackoverflow.com/questions/35675385/how-can-the-state-be-shared-between-the-returned-result-and-the-next-iteration-w", "title": "How can the state be shared between the returned result and the next iteration when using the scan iterator?", "body": "<p>I would like to use the <code>Scan</code> iterator to construct a vector in a declarative fashion. It is clear how to achieve this by copying the intermediate state. The following expression compiles and produced the desired series:</p>\n\n<pre><code>let vec = (0..10).scan(0, |state, current| {\n    *state = *state + current;\n    Some(*state)\n}).collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>However, if I try to achieve the same behavior by moving the state instead of copying it, I get in trouble with lifetimes. For example, when working with vectors instead of integers, one cannot move the state out of the closure and reuse it in the next iteration. The expression </p>\n\n<pre><code>let vec = (0..10).map(|x| vec![x]).scan(vec![0], |state, current| {\n    *state = vec![state[0] + current[0]];\n    Some(*state)\n}).collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>fails to compile due to </p>\n\n<pre><code>error: cannot move out of borrowed content [E0507]\n     Some(*state)\n          ^~~~~~\n</code></pre>\n\n<p>see for example this <a href=\"https://gist.github.com/anonymous/c7ca88d5b8906e0dbc65\" rel=\"nofollow\">MVCE</a>.</p>\n\n<p>Borrowing the state instead of moving would also be an option:</p>\n\n<pre><code>let start = &amp;vec![0];\nlet vec = (0..10).map(|x| vec![x]).scan(start, |state, current| {\n    *state = &amp;vec![state[0] + current[0]];\n    Some(*state)\n}).collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>but this fails because the new value falls out of scope when the state is returned.</p>\n\n<pre><code>error: borrowed value does not live long enough\n*state = &amp;vec![state[0] + current[0]]\n</code></pre>\n\n<p>What I ended up doing is using the <code>for</code> loop</p>\n\n<pre><code>let xs = &amp;mut Vec::&lt;Vec&lt;i32&gt;&gt;::with_capacity(10);\nxs.push[vec!(0)];\nfor x in 1..10 {\n    let z = vec![xs.last().unwrap()[0] + x];\n    xs.push(z);\n};\n</code></pre>\n\n<p>but I wold prefer a chaining solution.</p>\n"}, {"tags": ["websocket", "rust", "chat"], "comments": [{"owner": {"reputation": 373, "user_id": 361640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a26c2ab786845a33302f62df06125e9e?s=128&d=identicon&r=PG", "display_name": "nielsle", "link": "https://stackoverflow.com/users/361640/nielsle"}, "edited": false, "score": 0, "creation_date": 1456651349, "post_id": 35673702, "comment_id": 59039348, "body": "I tried something similar and gave up. AFAICS the problem is that the receiver object doesn&#39;t have a method named <code>try_recv_message</code>. This means that when you start looking for a message the server will block until you have actually received a message.  <a href=\"https://github.com/cyderize/rust-websocket/blob/2f80d4c4889602d63cc745aa18e3fdd4ae71eb8a/src/ws/receiver.rs\" rel=\"nofollow noreferrer\">github.com/cyderize/rust-websocket/blob/&hellip;</a>  The project named rust-chat uses a different websocket library, and they work around it by using multicasting.  <a href=\"https://github.com/nbaksalyar/rust-chat/blob/master/src/main.rs\" rel=\"nofollow noreferrer\">github.com/nbaksalyar/rust-chat/blob/master/src/main.rs</a>"}, {"owner": {"reputation": 23, "user_id": 5066330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3c0a3f450379057e1b46be08b420c1b?s=128&d=identicon&r=PG&f=1", "display_name": "DropOfBlood", "link": "https://stackoverflow.com/users/5066330/dropofblood"}, "reply_to_user": {"reputation": 373, "user_id": 361640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a26c2ab786845a33302f62df06125e9e?s=128&d=identicon&r=PG", "display_name": "nielsle", "link": "https://stackoverflow.com/users/361640/nielsle"}, "edited": false, "score": 0, "creation_date": 1456662579, "post_id": 35673702, "comment_id": 59042472, "body": "Thanks! I&#39;ll look into it. But I can&#39;t believe this would be so hard with rust-websocket since even their example is using a web chat. It looked to me like they intended for the user to expand on their example since a single client chat doesn&#39;t make much sense to me."}, {"owner": {"reputation": 373, "user_id": 361640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a26c2ab786845a33302f62df06125e9e?s=128&d=identicon&r=PG", "display_name": "nielsle", "link": "https://stackoverflow.com/users/361640/nielsle"}, "edited": false, "score": 0, "creation_date": 1456679107, "post_id": 35673702, "comment_id": 59048382, "body": "It is very possible that I missed something. Please post if you find a solution."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456698728, "post_id": 35673702, "comment_id": 59056038, "body": "Include an <a href=\"/help/mcve\">MCVE</a> of your problem, emphasis on the <b>Minimal</b>. Otherwise, you are basically asking for someone to write your code for you."}, {"owner": {"reputation": 23, "user_id": 5066330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3c0a3f450379057e1b46be08b420c1b?s=128&d=identicon&r=PG&f=1", "display_name": "DropOfBlood", "link": "https://stackoverflow.com/users/5066330/dropofblood"}, "edited": false, "score": 0, "creation_date": 1456700865, "post_id": 35673702, "comment_id": 59056745, "body": "Btw nielsle I&#39;ve looked at your link and I&#39;ve read through this guy&#39;s instructions a few days ago. The first part looked very promising but the code of his second part does not work and he hasn&#39;t uploaded a complete version of it to his github either. Judging by the time between the first two parts this guide will need some time to be really finished. It&#39;s still a good read tho."}], "answers": [{"comments": [{"owner": {"reputation": 509, "user_id": 4492495, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/541d097065e9a9c44c7e0836046cc771?s=128&d=identicon&r=PG&f=1", "display_name": "mastro", "link": "https://stackoverflow.com/users/4492495/mastro"}, "edited": false, "score": 0, "creation_date": 1587639307, "post_id": 35785414, "comment_id": 108592786, "body": "isnt&#39; the loop for <code>rx.try_recv()</code> consuming 100% of your CPU ?"}], "tags": [], "owner": {"reputation": 23, "user_id": 5066330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3c0a3f450379057e1b46be08b420c1b?s=128&d=identicon&r=PG&f=1", "display_name": "DropOfBlood", "link": "https://stackoverflow.com/users/5066330/dropofblood"}, "is_accepted": true, "score": 1, "last_activity_date": 1457188494, "last_edit_date": 1457188494, "creation_date": 1457049026, "answer_id": 35785414, "question_id": 35673702, "link": "https://stackoverflow.com/questions/35673702/chat-using-rust-websocket/35785414#35785414", "title": "Chat using rust-websocket", "body": "<p>So this is not quite as straight-forward as one might think.</p>\n\n<p>Basically I used a dispatcher thread that would act like a control center for all the connected clients. So whenever a client receives a message it's sent to the dispatcher and this then distributes the message to every connected client. </p>\n\n<p>I also had to receive the messages in another thread because there is no non-blocking way to receive messages in rust-websocket. Then I ways able to just use a permanent loop that checks both for new messages received from the websocket and from the dispatcher.</p>\n\n<p>Here's how my code looked like in the end:</p>\n\n<pre><code>extern crate websocket;\n\nuse std::str;\nuse std::sync::{Arc, Mutex};\nuse std::sync::mpsc;\nuse std::thread;\n\nuse websocket::{Server, Message, Sender, Receiver};\nuse websocket::header::WebSocketProtocol;\nuse websocket::message::Type;\n\n\nfn main() {\n    let server = Server::bind(\"0.0.0.0:2794\").unwrap();\n\n    let (dispatcher_tx, dispatcher_rx) = mpsc::channel::&lt;String&gt;();\n    let client_senders: Arc&lt;Mutex&lt;Vec&lt;mpsc::Sender&lt;String&gt;&gt;&gt;&gt; = Arc::new(Mutex::new(vec![]));\n\n    // dispatcher thread\n    {\n        let client_senders = client_senders.clone();\n        thread::spawn(move || {\n            while let Ok(msg) = dispatcher_rx.recv() {\n                for sender in client_senders.lock().unwrap().iter() {\n                    sender.send(msg.clone()).unwrap();\n                }\n            }\n        });\n    }\n\n    // client threads\n    for connection in server {\n        let dispatcher = dispatcher_tx.clone();\n        let (client_tx, client_rx) = mpsc::channel();\n        client_senders.lock().unwrap().push(client_tx);\n\n        // Spawn a new thread for each connection.\n        thread::spawn(move || {\n            let request = connection.unwrap().read_request().unwrap(); // Get the request\n            let headers = request.headers.clone(); // Keep the headers so we can check them\n\n            request.validate().unwrap(); // Validate the request\n\n            let mut response = request.accept(); // Form a response\n\n            if let Some(&amp;WebSocketProtocol(ref protocols)) = headers.get() {\n                if protocols.contains(&amp;(\"rust-websocket\".to_string())) {\n                    // We have a protocol we want to use\n                    response.headers.set(WebSocketProtocol(vec![\"rust-websocket\".to_string()]));\n                }\n            }\n\n            let mut client = response.send().unwrap(); // Send the response\n\n            let ip = client.get_mut_sender()\n                .get_mut()\n                .peer_addr()\n                .unwrap();\n\n            println!(\"Connection from {}\", ip);\n\n            let message: Message = Message::text(\"SERVER: Connected.\".to_string());\n            client.send_message(&amp;message).unwrap();\n\n            let (mut sender, mut receiver) = client.split();\n\n            let(tx, rx) = mpsc::channel::&lt;Message&gt;();\n            thread::spawn(move || {\n                for message in receiver.incoming_messages() {\n                    tx.send(message.unwrap()).unwrap();\n                }\n            });\n\n            loop {\n                if let Ok(message) = rx.try_recv() {\n                    match message.opcode {\n                        Type::Close =&gt; {\n                            let message = Message::close();\n                            sender.send_message(&amp;message).unwrap();\n                            println!(\"Client {} disconnected\", ip);\n                            return;\n                        },\n                        Type::Ping =&gt; {\n                            let message = Message::pong(message.payload);\n                            sender.send_message(&amp;message).unwrap();\n                        },\n                        _ =&gt; {\n                            let payload_bytes = &amp;message.payload;\n                            let payload_string = match str::from_utf8(payload_bytes) {\n                                Ok(v) =&gt; v,\n                                Err(e) =&gt; panic!(\"Invalid UTF-8 sequence: {}\", e),\n                            };\n                            let msg_string = format!(\"MESSAGE: {}: \", payload_string);\n                            dispatcher.send(msg_string).unwrap();\n                        }\n                    }\n                }\n                if let Ok(message) = client_rx.try_recv() {\n                    let message: Message = Message::text(message);\n                    sender.send_message(&amp;message).unwrap();\n                }\n            }\n        });\n    }\n}\n</code></pre>\n\n<p><a href=\"http://pastebin.com/H9McWLrH\" rel=\"nofollow\">http://pastebin.com/H9McWLrH</a></p>\n"}], "owner": {"reputation": 23, "user_id": 5066330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3c0a3f450379057e1b46be08b420c1b?s=128&d=identicon&r=PG&f=1", "display_name": "DropOfBlood", "link": "https://stackoverflow.com/users/5066330/dropofblood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1939, "favorite_count": 0, "accepted_answer_id": 35785414, "answer_count": 1, "score": 0, "last_activity_date": 1457188494, "creation_date": 1456597747, "last_edit_date": 1456848834, "question_id": 35673702, "link": "https://stackoverflow.com/questions/35673702/chat-using-rust-websocket", "title": "Chat using rust-websocket", "body": "<p>I'm trying to use Rust-Websocket to create a simple chatroom where multiple people can talk to each other.</p>\n\n<p>I looked at the examples and the 'server.rs' and 'websockets.html' looked like a decent starting point to me. So I just tried starting it up and connecting from web. Everything works but I can only communicate with myself and not with other connections (since it sends the message back directly to <code>sender</code> and not to every connection).</p>\n\n<p>So I'm trying to get a vector with all <code>senders</code>/<code>clients</code> so I can just iterate through them and send the message to each one but this seems to be problematic. I cannot communicate the <code>sender</code> or <code>client</code> since It's not thread safe and I cannot copy any of these either.</p>\n\n<p>I'm not sure if I just don't understand the whole borrowing 100% or if it's not intended to do cross-connection communication like this. </p>\n\n<p>server.rs:<br>\n<a href=\"https://github.com/cyderize/rust-websocket/blob/master/examples/server.rs\" rel=\"nofollow\">https://github.com/cyderize/rust-websocket/blob/master/examples/server.rs</a></p>\n\n<p>websockets.html:<br>\n<a href=\"https://github.com/cyderize/rust-websocket/blob/master/examples/websockets.html\" rel=\"nofollow\">https://github.com/cyderize/rust-websocket/blob/master/examples/websockets.html</a></p>\n\n<p>I might be approaching this from the wrong direction. It might be easier to share a received message with all other threads. I thought about this a little bit but the only thing I can think of is sending a message from inside a thread to outside using <code>channels</code>. Is there any way to broadcast messages directly between the threads? All I would need to do is send a string from one thread to the other. </p>\n"}, {"tags": ["rust", "kuchiki"], "answers": [{"comments": [{"owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456593352, "post_id": 35672805, "comment_id": 59024465, "body": "I tried specifically using num_cpus and making the thread pool that size but it was <i>much</i> slower. I&#39;m not sure how to determine the optimal thread pool size in this case. When I don&#39;t use a thread pool and just spawn a thread in the loop it works okay (and is fast) too. Any other suggestions for that?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456593714, "post_id": 35672805, "comment_id": 59024614, "body": "I don&#39;t have any good suggestions, except for: measure, measure, measure. For example: are all your CPU core on full load when using <code>num_cpus</code>? You can also use twice the number of CPUs. I don&#39;t know what algorithm <code>scoped_threadpool</code> uses: maybe the work for each thread is so little that the scheduling takes most of the time... --&gt; I don&#39;t know, sorry ;)"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1456593945, "post_id": 35672805, "comment_id": 59024721, "body": "Is <code>do_stuff_with</code> I/O-heavy? Then it makes sense that N threads can&#39;t saturate N CPUs, and if you have beefy I/O connections they probably can&#39;t saturate your that either. However, if you might end up with thousands of <code>listing</code>s it&#39;ll probably still degrade performance to launch <i>that many</i> threads, so I&#39;d suggest experimenting with a (possibly large) multiple of the CPU count."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1456594049, "post_id": 35672805, "comment_id": 59024771, "body": "@LukasKalbertodt: Whether an exact count can be determined is really dependent on the implementation. A no-allocation streaming implementation would not be able to predict the count, as to get it requires fully parsing the document and storing all elements."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1456594139, "post_id": 35672805, "comment_id": 59024807, "body": "Oh and another possibility would be to <code>.collect()</code> the query result in a vector. This decreases the parallelism a bit, but memory-wise you already risk having all results in memory at once (if you keep launching one thread per listing), so that&#39;s not a concern here."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1456594461, "post_id": 35672805, "comment_id": 59024950, "body": "@MatthieuM. Oh sure, you&#39;re right. I didn&#39;t even read what <code>kuchiki</code> is about and assumed it&#39;s an SQL SELECT &gt;_&lt; (which sometimes can tell the size of the result set)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1456595607, "post_id": 35672805, "comment_id": 59025451, "body": "@LukasKalbertodt: In any case your advice is sound, the size of the thread pool should depend on available hardware, not spawning one thread per computation is the point of using a pool."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1456594634, "last_edit_date": 1456594634, "creation_date": 1456593233, "answer_id": 35672805, "question_id": 35672381, "link": "https://stackoverflow.com/questions/35672381/capture-of-moved-value-that-cannot-be-copied/35672805#35672805", "title": "Capture of moved value that cannot be copied", "body": "<p>Sadly, I <em>think</em> it's not possible the way you want to do it.</p>\n\n<p>Your <code>listings.count()</code> consumes the iterator <code>listings</code>. You can avoid this by writing <code>listings.by_ref().count()</code>, but this won't have the desired effect, since <code>count()</code> will consume all elements of the iterator, so that the next call to <code>next()</code> will always yield <code>None</code>.</p>\n\n<p>The only way to do achieve your goal is to somehow get the length of the iterator <code>listings</code> without consuming its elements. The trait <a href=\"https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html\" rel=\"nofollow\"><code>ExactSizeIterator</code></a> was built for this purpose, but it seems that <a href=\"https://simonsapin.github.io/kuchiki/kuchiki/iter/struct.Select.html\" rel=\"nofollow\"><code>kuchiki::iter::Select</code></a> doesn't implement it. Note that this may also be impossible for that kind of iterator.</p>\n\n<p><strong>Edit</strong>: As @delnan suggested, another possibility is of course to collect the iterator into a <code>Vec</code>. This has some disadvantages, but may be a good idea in your case.</p>\n\n<hr>\n\n<p>Let me also note, that you probably shouldn't create one thread for every line in the <code>SELECT</code> result set. Usually threadpools use approximately as many threads as there are CPUs. </p>\n"}], "owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 500, "favorite_count": 0, "accepted_answer_id": 35672805, "answer_count": 1, "score": 0, "last_activity_date": 1486816350, "creation_date": 1456591151, "last_edit_date": 1486816350, "question_id": 35672381, "link": "https://stackoverflow.com/questions/35672381/capture-of-moved-value-that-cannot-be-copied", "title": "Capture of moved value that cannot be copied", "body": "<p>I'm using <a href=\"https://github.com/SimonSapin/kuchiki\" rel=\"nofollow\">Kuchiki</a> to parse some HTML and making HTTP requests using <a href=\"https://github.com/hyperium/hyper\" rel=\"nofollow\">hyper</a> to concurrently operate on results through <a href=\"https://github.com/Kimundi/scoped-threadpool-rs\" rel=\"nofollow\">scoped_threadpool</a>.</p>\n\n<p>I select and iterate over listings. I decide the number of threads to allocate in the threadpool based on the number of listings:</p>\n\n<pre><code>let listings = document.select(\"table.listings\").unwrap();\nlet mut pool = Pool::new(listings.count() as u32);\npool.scoped(|scope| {\n    for listing in listings {\n        do_stuff_with(listing);\n    }\n});\n</code></pre>\n\n<p>When I try to do this I get <code>capture of moved value: listings</code>. <code>listings</code> is <code>kuchiki::iter::Select&lt;kuchiki::iter::Elements&lt;kuchiki::iter::Descendants&gt;&gt;</code>, which is non-copyable -- so I get neither an implicit clone nor an explicit <code>.clone</code>.</p>\n\n<p>Inside the pool I can just do <code>document.select(\"table.listings\")</code> again and it will work, but this seems unnecessary to me since I already used it to get the count. I don't need <code>listings</code> after the loop either.</p>\n\n<p>Is there any way for me to use a non-copyable value in a closure?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 2, "creation_date": 1456590811, "post_id": 35671985, "comment_id": 59023541, "body": "FFI to <code>kbhit()</code> and <code>getch()</code>?"}, {"owner": {"reputation": 317, "user_id": 4524649, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/70136933c6a9592e4499a93018315698?s=128&d=identicon&r=PG&f=1", "display_name": "ca1ek", "link": "https://stackoverflow.com/users/4524649/ca1ek"}, "reply_to_user": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1456592626, "post_id": 35671985, "comment_id": 59024187, "body": "@\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438\u044c do you have any good tutorials on that?"}, {"owner": {"reputation": 3039, "user_id": 2851815, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/37MCt.png?s=128&g=1", "display_name": "\u043d\u0430\u0431\u0438\u044f\u0447\u043b\u044d\u0432\u044d\u043b\u0438", "link": "https://stackoverflow.com/users/2851815/%d0%bd%d0%b0%d0%b1%d0%b8%d1%8f%d1%87%d0%bb%d1%8d%d0%b2%d1%8d%d0%bb%d0%b8"}, "edited": false, "score": 0, "creation_date": 1456594370, "post_id": 35671985, "comment_id": 59024906, "body": "The <a href=\"https://doc.rust-lang.org/book/ffi.html\" rel=\"nofollow noreferrer\">Rust Book</a> does"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1456595084, "post_id": 35671985, "comment_id": 59025231, "body": "I also found this: <a href=\"https://github.com/geofft/demo-rust-getch\" rel=\"nofollow noreferrer\">github.com/geofft/demo-rust-getch</a>  You probably don&#39;t need to do the FFI stuff by yourself. Look at the <code>nix</code> crate for example."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551446161, "post_id": 35671985, "comment_id": 96653659, "body": "See also <a href=\"https://stackoverflow.com/q/26321592/155423\">How can I read one character from stdin without having to hit enter?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 7866, "user_id": 531840, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/02a5c102e4b3adced1096222d2997e5a?s=128&d=identicon&r=PG", "display_name": "Constantin", "link": "https://stackoverflow.com/users/531840/constantin"}, "is_accepted": false, "score": 5, "last_activity_date": 1551446110, "last_edit_date": 1551446110, "creation_date": 1551416122, "answer_id": 54938160, "question_id": 35671985, "link": "https://stackoverflow.com/questions/35671985/how-do-i-get-keyboard-input-without-the-user-pressing-the-enter-key/54938160#54938160", "title": "How do I get keyboard input without the user pressing the Enter key?", "body": "<p>With the crate <a href=\"https://docs.rs/device_query/\" rel=\"noreferrer\">device_query</a> you can query the keyboard state without requiring an active window. You just need to add in your <code>Cargo.toml</code> file the dependency to this crate:</p>\n\n<pre><code>[dependencies]\ndevice_query = \"0.1.0\"\n</code></pre>\n\n<p>The usage is straightforward and similar to <code>kbhit()</code> and <code>getch()</code>. The difference is you'll receive a <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"noreferrer\"><code>Vec</code></a> of pressed keys (<a href=\"https://docs.rs/device_query/0.1.0/device_query/keymap/enum.Keycode.html\" rel=\"noreferrer\"><code>Keycode</code></a>) and this <code>Vec</code> will be empty if no key is pressed. A single call covers the functionality of both <code>kbhit()</code> and <code>getch()</code> combined.</p>\n\n<pre><code>use device_query::{DeviceQuery, DeviceState, Keycode};\n\nfn main() {\n    let device_state = DeviceState::new();\n    loop {\n        let keys: Vec&lt;Keycode&gt; = device_state.get_keys();\n        for key in keys.iter() {\n            println!(\"Pressed key: {:?}\", key);\n        }\n    }\n}\n</code></pre>\n\n<p>This program will print out all pressed keys on the console. To instead just check if any key is pressed (like with <code>kbhit()</code> only), you could use <code>is_empty()</code> on the returned <code>Vec&lt;&gt;</code> like this:</p>\n\n<pre><code>let keys: Vec&lt;Keycode&gt; = device_state.get_keys();\nif !keys.is_empty(){\n    println!(\"kbhit\");\n}\n</code></pre>\n"}], "owner": {"reputation": 317, "user_id": 4524649, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/70136933c6a9592e4499a93018315698?s=128&d=identicon&r=PG&f=1", "display_name": "ca1ek", "link": "https://stackoverflow.com/users/4524649/ca1ek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3105, "favorite_count": 1, "answer_count": 1, "score": 9, "last_activity_date": 1551446110, "creation_date": 1456589245, "last_edit_date": 1551446066, "question_id": 35671985, "link": "https://stackoverflow.com/questions/35671985/how-do-i-get-keyboard-input-without-the-user-pressing-the-enter-key", "title": "How do I get keyboard input without the user pressing the Enter key?", "body": "<p>I would use ncurses but I want it to run on Windows. In C++, I could use <code>kbhit()</code> and <code>getch()</code> from conio to first check if a character was pressed, then get it.  </p>\n\n<p>I would like something similar in Rust.</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"comments": [{"owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456580812, "post_id": 35670540, "comment_id": 59020172, "body": "Thanks for the feedback. If I am doing a lot of work in the thread and I want to separate it into a function, how can I return the thread handle from that function and join the threads later?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456581190, "post_id": 35670540, "comment_id": 59020320, "body": "@ExplosionPills I would recommend extracting the <i>work</i> that each thread does into a function, and leave the thread spawning where it is. If you insist, however, <code>std::thread::spawn</code> returns a <code>std::thread::JoinHandle&lt;T&gt;</code> where T is the return type of the closure (in your case, <code>()</code>). The analogous question for scoped-type thread pools (which I would really really recommend, they&#39;re not just simpler but usually also slightly faster) doesn&#39;t make much sense: you <i>can</i> explicitly join the threads but it already happens implicitly at the end of the scope."}, {"owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456582083, "post_id": 35670540, "comment_id": 59020603, "body": "that all makes sense. I&#39;ll look into using scoped_threadpool. Can you explain why the .join() on the thread directly is not concurrent but on the iterator element it is?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456582229, "post_id": 35670540, "comment_id": 59020655, "body": "By &quot;on the iterator element&quot; do you mean <code>scope.spawn</code>? That&#39;s concurrent because the <code>Scope::spawn</code> method only <i>stores</i> the join handle, and <code>run_in_pool</code> uses the stored handles to join all the threads after all of your code (the entire <code>|scope| { ... }</code> closure) has finished, i.e., after all threads have been launched."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 2, "creation_date": 1456584158, "post_id": 35670540, "comment_id": 59021308, "body": "<code>.join()</code> waits for the thread to finish. Since the original code waits on the thread before it continues the loop to spawn the next thread, it&#39;s not concurrent."}, {"owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456591506, "post_id": 35670540, "comment_id": 59023822, "body": "@delnan for the most part I got this working with your example except I still get <code>capture of moved value: client</code> unless I clone the client, i.e. I need the <code>Arc</code>."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456592809, "post_id": 35670540, "comment_id": 59024264, "body": "@ExplosionPills Right, I updated the code. You need <code>client</code> to be a reference, since <code>move</code> will try to capture everything by value (and you have to capture <code>num</code> by value)."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 3, "last_activity_date": 1456592767, "last_edit_date": 1456592767, "creation_date": 1456580717, "answer_id": 35670540, "question_id": 35670401, "link": "https://stackoverflow.com/questions/35670401/preferred-method-for-awaiting-concurrent-threads/35670540#35670540", "title": "Preferred method for awaiting concurrent threads", "body": "<p>Your first program <em>does not actually have any parallelism</em>. Each time you spin up a worker thread, you immediately wait for it to finish before you start the next one. This is, of course, worse than useless.</p>\n\n<p>The second way works, but there are crates that do some of the busywork for you. For example, <a href=\"https://crates.io/crates/scoped_threadpool\" rel=\"nofollow\"><code>scoped_threadpool</code></a> and <a href=\"https://crates.io/crates/crossbeam\" rel=\"nofollow\"><code>crossbeam</code></a> have thread pools that allow you to write something like (untested, may contain mistakes):</p>\n\n<pre><code>let client = &amp;Client::new();// No Arc needed\nrun_in_pool(|scope| {\n    for num in 0..10 {\n        scope.spawn(move || {\n            client.get(&amp;format!(\"http://example.com/{}\", num)).send().unwrap();\n        }\n    }\n})\n</code></pre>\n"}], "owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 35670540, "answer_count": 1, "score": 1, "last_activity_date": 1456698487, "creation_date": 1456579829, "last_edit_date": 1456698487, "question_id": 35670401, "link": "https://stackoverflow.com/questions/35670401/preferred-method-for-awaiting-concurrent-threads", "title": "Preferred method for awaiting concurrent threads", "body": "<p>I have a program that loops over HTTP responses. These don't depend on each other, so they can be done simultaneously. I am using threads to do this:</p>\n\n<pre><code>extern crate hyper;\n\nuse std::thread;\nuse std::sync::Arc;\nuse hyper::Client;\n\nfn main() {\n    let client = Arc::new(Client::new());\n    for num in 0..10 {\n        let client_helper = client.clone();\n        thread::spawn(move || {\n            client_helper.get(&amp;format!(\"http://example.com/{}\", num))\n             .send().unwrap();\n        }).join().unwrap();\n    }\n}\n</code></pre>\n\n<p>This works, but I can see other possibilities of doing this such as:</p>\n\n<pre><code>let mut threads = vec![];\n\nthreads.push(thread::spawn(move || {\n/* snip */\nfor thread in threads {\n    let _ = thread.join();\n}\n</code></pre>\n\n<p>It would also make sense to me to use a function that returns the thread handler, but I couldn't figure out how to do that ... not sure what the return type has to be.</p>\n\n<p>What is the optimal/recommended way to wait for concurrent threads in Rust?</p>\n"}, {"tags": ["rust", "nickel"], "answers": [{"tags": [], "owner": {"reputation": 1072, "user_id": 2840647, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/bbc7740efb4b280be4485f2f7c6c5742?s=128&d=identicon&r=PG&f=1", "display_name": "user2840647", "link": "https://stackoverflow.com/users/2840647/user2840647"}, "is_accepted": false, "score": 0, "last_activity_date": 1475211883, "last_edit_date": 1475211883, "creation_date": 1456616114, "answer_id": 35676827, "question_id": 35667498, "link": "https://stackoverflow.com/questions/35667498/how-do-i-parse-parameters-submitted-by-a-form-in-nickel-rs/35676827#35676827", "title": "How do I parse parameters submitted by a form in Nickel.rs?", "body": "<p>I found a solution which works for now, although I don't know if it is the \"right\" solution.</p>\n\n<pre><code>extern crate url;\nuse url::*;\n\nuse std::collections::HashMap;\n\nrouter.post(\"/login\", middleware! { |request, response|\n    let mut body = String.new();\n    request.origin.read_to_string(&amp;mut body).unwrap();\n\n    let mut data = HashMap::new();\n    for (key, value) in form_urlencoded::parse(body.as_bytes()) {\n        data.insert(key, value);\n    }\n\n     println!(\"{:?}\", data) # {'password': 'bar', 'email': 'far'}\n});\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 10672, "user_id": 321731, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/88e60659e997d36af3ff348b3251e1a6?s=128&d=identicon&r=PG", "display_name": "tshepang", "link": "https://stackoverflow.com/users/321731/tshepang"}, "is_accepted": false, "score": 0, "last_activity_date": 1475213478, "creation_date": 1475213478, "answer_id": 39784318, "question_id": 35667498, "link": "https://stackoverflow.com/questions/35667498/how-do-i-parse-parameters-submitted-by-a-form-in-nickel-rs/39784318#39784318", "title": "How do I parse parameters submitted by a form in Nickel.rs?", "body": "<p>I would do it this way:</p>\n\n<pre><code>router.post(\"/login\", middleware! { |request, response|\n    let form_body = try_with!(response, request.form_body());\n    let user = form_body.get(\"username\").unwrap_or_default();\n    let pass = form_body.get(\"password\").unwrap_or_default();\n    ...\n}\n</code></pre>\n\n<p>I wish I knew what <code>response</code> is doing in that <code>try_with!</code> though.</p>\n"}], "owner": {"reputation": 1072, "user_id": 2840647, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/bbc7740efb4b280be4485f2f7c6c5742?s=128&d=identicon&r=PG&f=1", "display_name": "user2840647", "link": "https://stackoverflow.com/users/2840647/user2840647"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 427, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1475213478, "creation_date": 1456561761, "last_edit_date": 1475211920, "question_id": 35667498, "link": "https://stackoverflow.com/questions/35667498/how-do-i-parse-parameters-submitted-by-a-form-in-nickel-rs", "title": "How do I parse parameters submitted by a form in Nickel.rs?", "body": "<p>I'm building a web application with Rust and Nickel.rs.  I have a route which submits a form with a POST request.  </p>\n\n<p>I would like to be able to use the request data (the data returned from the form), but I'm not sure how to go about it.</p>\n\n<pre><code>// This works and prints 'email=bar&amp;password=foo'\n// but how do I get the values separately?\nrouter.post(\"/login\", middleware! { |request, response|\n    let mut body = String::new();\n    request.origin.read_to_string(&amp;mut body).unwrap();\n    format!(\"{}\", body)\n});\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456699000, "post_id": 35666024, "comment_id": 59056135, "body": "Duplicate of <a href=\"http://stackoverflow.com/q/27570978/155423\">stackoverflow.com/q/27570978/155423</a> or <a href=\"http://stackoverflow.com/q/28820781/155423\">stackoverflow.com/q/28820781/155423</a>. <b>Please</b> try searching for existing questions before asking new ones."}, {"owner": {"reputation": 2485, "user_id": 15087, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/03fefcb8c50f14151d4efa9eac394e68?s=128&d=identicon&r=PG", "display_name": "Cetra", "link": "https://stackoverflow.com/users/15087/cetra"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456720027, "post_id": 35666024, "comment_id": 59061343, "body": "I did search, but no question is able to tell me how to extend a lifetime of a reference, which is really what I&#39;m asking."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456720129, "post_id": 35666024, "comment_id": 59061371, "body": "One of those answers starts with &quot;you can&#39;t&quot; which is the same answer you&#39;ll get here: &quot;it&#39;s impossible&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 928, "user_id": 5924630, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-dXM_U4iuN40/AAAAAAAAAAI/AAAAAAAAABI/cayI6h8ZfvA/photo.jpg?sz=128", "display_name": "Yasammez", "link": "https://stackoverflow.com/users/5924630/yasammez"}, "is_accepted": false, "score": 3, "last_activity_date": 1456567724, "last_edit_date": 1456567724, "creation_date": 1456558457, "answer_id": 35667048, "question_id": 35666024, "link": "https://stackoverflow.com/questions/35666024/extending-borrowed-lifetime-for-string-slice/35667048#35667048", "title": "Extending borrowed lifetime for String slice", "body": "<p><code>reader.lines()</code> returns an iterator over owned Strings. But then in your for loop you cast these to borrowed references to <code>&amp;str</code>. So when the iterator goes out of scope all your borrowed references become invalid. Consider using a <code>HashSet&lt;String&gt;</code> instead, which also is zero cost, because the Strings get <strong>moved</strong> into the HashSet and therefore aren't copied.</p>\n\n<h2>Working example</h2>\n\n<pre><code>fn build_collection_set(reader: &amp;mut BufReader&lt;File&gt;) -&gt; HashSet&lt;String&gt; {\n    let mut collection_set: HashSet&lt;String&gt; = HashSet::new();\n\n    for line in reader.lines() {\n        let line = line.unwrap();\n        if line.len() &gt; 0 {\n            collection_set.insert(line);\n        }\n    }\n    collection_set\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2485, "user_id": 15087, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/03fefcb8c50f14151d4efa9eac394e68?s=128&d=identicon&r=PG", "display_name": "Cetra", "link": "https://stackoverflow.com/users/15087/cetra"}, "edited": false, "score": 0, "creation_date": 1456720984, "post_id": 35673760, "comment_id": 59061550, "body": "So shouldn&#39;t I then be able to annotate the reference like so:     let line: &#39;a String = line.unwrap();    let a_ref : &amp;&#39;a str"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2485, "user_id": 15087, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/03fefcb8c50f14151d4efa9eac394e68?s=128&d=identicon&r=PG", "display_name": "Cetra", "link": "https://stackoverflow.com/users/15087/cetra"}, "edited": false, "score": 0, "creation_date": 1456730386, "post_id": 35673760, "comment_id": 59064827, "body": "@Cetra: You can use <code>&#39;a:</code> (a label), however only in front of a <code>while</code>, <code>for</code>, <code>loop</code> in which case it is used to be able to break from an inner loop directly to the outer loop. Otherwise, you can only introduce a lifetime name in a function signature; as I said most of the time they are intangible."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 6, "last_activity_date": 1456598003, "creation_date": 1456598003, "answer_id": 35673760, "question_id": 35666024, "link": "https://stackoverflow.com/questions/35666024/extending-borrowed-lifetime-for-string-slice/35673760#35673760", "title": "Extending borrowed lifetime for String slice", "body": "<blockquote>\n  <p>but I can't work out how to tell the borrow checker to increase the lifetime.</p>\n</blockquote>\n\n<p>It's impossible.</p>\n\n<hr>\n\n<p>The lifetime of a value, in C, C++ or Rust, is defined either:</p>\n\n<ul>\n<li>by its lexical scope, if it is bound to an automatic variable</li>\n<li>by its dynamic scope, if it is allocated on the heap</li>\n</ul>\n\n<p>You can create variables which reference this value, and if your reference lives longer than the value, then you have a dangling reference:</p>\n\n<ul>\n<li>in C and C++, you better do nothing with it</li>\n<li>in Rust, the compiler will refuse to compile your code</li>\n</ul>\n\n<p>In order to validate your program, the Rust compiler will require that you <em>annotate</em> the lifetime of your references; you will use lifetime annotations such as <code>'a</code> in <code>&amp;'a T</code> which allow naming a lifetime in order to document the relationship between the lifetime of multiple values.</p>\n\n<p>The operative word is <strong>document</strong> here: a lifetime is intangible and cannot be influenced, the lifetime annotation <code>'a</code> is just a name to allow referring to it.</p>\n\n<hr>\n\n<p>So?</p>\n\n<p>Whenever you find yourself wanting to extend the lifetime of a reference, what you should be looking at instead is extending the lifetime of the referred... or simply not use a reference but a value instead.</p>\n\n<p>In this case, a simple solution is to return <code>String</code> instead of <code>&amp;str</code>:</p>\n\n<pre><code>fn build_collection_set(reader: &amp;mut BufReader&lt;File&gt;) -&gt; HashSet&lt;String&gt; {\n    let mut collection_set = HashSet::new();\n\n    for line in reader.lines() {\n        let line = line.unwrap();\n        if line.len() &gt; 0 {\n            collection_set.insert(line);\n        }\n    }\n\n    collection_set\n}\n</code></pre>\n"}], "owner": {"reputation": 2485, "user_id": 15087, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/03fefcb8c50f14151d4efa9eac394e68?s=128&d=identicon&r=PG", "display_name": "Cetra", "link": "https://stackoverflow.com/users/15087/cetra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 836, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1456598003, "creation_date": 1456550264, "last_edit_date": 1456566291, "question_id": 35666024, "link": "https://stackoverflow.com/questions/35666024/extending-borrowed-lifetime-for-string-slice", "title": "Extending borrowed lifetime for String slice", "body": "<p>I have a function that reads in a file, and for each line adds it to a <code>HashSet</code> of type <code>&amp;str</code>, but I can't work out how to tell the borrow checker to increase the lifetime.</p>\n\n<p>Here's my function so far:</p>\n\n<pre><code>fn build_collection_set(reader: &amp;mut BufReader&lt;File&gt;) -&gt; HashSet&lt;&amp;str&gt; {\n    let mut collection_set: HashSet&lt;&amp;str&gt; = HashSet::new();\n\n    for line in reader.lines() {\n        let line = line.unwrap();\n        if line.len() &gt; 0 {\n            collection_set.insert(&amp;*line);\n        }\n    }\n\n    return collection_set;\n}\n</code></pre>\n\n<p>How do I let Rust know I want to keep it around longer?</p>\n"}, {"tags": ["group-by", "iterator", "rust"], "comments": [{"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 2, "creation_date": 1456574562, "post_id": 35665043, "comment_id": 59018088, "body": "This sounds off-topic. Do you have any <i>concrete</i> problems or are you just brainstorming? FWIW, <a href=\"http://bluss.github.io/rust-itertools/doc/itertools/trait.Itertools.html#method.group_by\" rel=\"nofollow noreferrer\">it exists</a>, <a href=\"http://bluss.github.io/rust-itertools/doc/itertools/trait.Itertools.html#method.group_by_lazy\" rel=\"nofollow noreferrer\">twice</a>."}], "owner": {"reputation": 2340, "user_id": 2250791, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e72d4f734d39c777f543025d36d4de4e?s=128&d=identicon&r=PG", "display_name": "Camden Narzt", "link": "https://stackoverflow.com/users/2250791/camden-narzt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 510, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1456699647, "creation_date": 1456540848, "last_edit_date": 1495540955, "question_id": 35665043, "link": "https://stackoverflow.com/questions/35665043/what-are-the-drawbacks-of-a-group-by-iterator-adaptor", "title": "What are the drawbacks of a group_by iterator adaptor", "body": "<p>Imagine an iterator over <code>(key,value)</code> pairs where the key isn't unique. What downsides would there be to creating an iterator adapter that splits the iterator into many \"streams\" which any subsequent adapters would operate on?</p>\n\n<p>I'm imagining something where the following pseudocode would return the 10th element for each key:</p>\n\n<pre><code>let res: HashMap&lt;key_type, value_type&gt; =\n    my_input_stream.iter()\n    .group_by(|(key, value)| key)\n    .skip(9)\n    .take(1)\n    .collect();\n</code></pre>\n\n<p>I'm aware of itertools' <code>group_by</code>, but it only works for consecutive groups. I am talking about something that would work when the groups are nonconsecutive as well. I think my idea could run into a lot of problems with the design of Rust's iterators.</p>\n\n<p>To be more concrete, the two implementations that I am considering are:</p>\n\n<ul>\n<li>an iterator that produces many iterators, somewhat akin to <code>unzip</code>.\nThis has the problem that you probably couldn't chain any more\nadapters after that point. (similar to: <a href=\"https://stackoverflow.com/questions/25586681/splitting-iteratora-b-into-iteratora-and-iteratorb\">Splitting Iterator&lt;(A,B)&gt; into Iterator&lt;A&gt; and Iterator&lt;B&gt;</a>)</li>\n<li>an iterator that you call <code>next</code> with a group key argument.\nThat would potentially have to buffer a lot of data and breaks the\nsignature of <code>next</code>.</li>\n</ul>\n"}, {"tags": ["rust", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 13, "last_activity_date": 1456538418, "creation_date": 1456538418, "answer_id": 35664816, "question_id": 35664419, "link": "https://stackoverflow.com/questions/35664419/how-do-i-duplicate-a-u8-slice/35664816#35664816", "title": "How do I duplicate a &amp;[u8] slice?", "body": "<p>First of all, you can't <code>clone</code> a <code>[T]</code> (irrespective of <code>T</code>).  Line 3 is not cloning the buffer, <em>it's cloning the pointer to it</em>.  If you change the binding to</p>\n\n<pre><code>let mut buffer_out: &amp;[u8] = buffer_in.clone();\n</code></pre>\n\n<p>you get the same error.  If you want an independent copy of a slice, you need to turn it into a <code>Vec</code> or some other owned container type; that can be done by using <code>buffer_in.to_owned()</code> (which generically goes from a borrowed kind of thing to the owned equivalent).</p>\n\n<p>Secondly, you <em>cannot</em> return a borrow to something you created in a function.  You can't.  No, really.  No, not even doing that.  Or that.  You can <em>only</em> return a borrow (like <code>&amp;[u8]</code>) if the return value is <em>directly</em> borrowed from one of your arguments.  That is not true here, so the return type <em>must</em> be <code>Vec&lt;u8&gt;</code> or something else that's owned.</p>\n\n<p>Thirdly, making a copy of the array and <em>then</em> mutating it is probably going to be inefficient.  Ideally, you want to do your modifications in as few passes as possible (whilst avoiding even <em>slower</em> things like unnecessary allocations).  You can do this using iterators.</p>\n\n<p>Fourth, there's no guarantee <code>key</code>'s value actually fits in a <code>u8</code>.  You should probably change it to take <code>key: u8</code> to make it clear to the caller what the valid range of values is.</p>\n\n<p>So, all together:</p>\n\n<pre><code>pub fn xor_buffer(buffer_in: &amp;[u8], key: u8) -&gt; Vec&lt;u8&gt; {\n    // Get an iterator of `&amp;u8`s from `buffer_in`.\n    buffer_in.iter()\n        // Replace each element with the xor'ed value.\n        .map(|byte| *byte ^ key)\n        // Collect the iterator into an owned collection.\n        .collect()\n}\n</code></pre>\n"}], "owner": {"reputation": 101, "user_id": 2069095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbccf511716eb5c866b2b9f966348b1d?s=128&d=identicon&r=PG", "display_name": "sambh", "link": "https://stackoverflow.com/users/2069095/sambh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3650, "favorite_count": 0, "accepted_answer_id": 35664816, "answer_count": 1, "score": 6, "last_activity_date": 1456538418, "creation_date": 1456534875, "question_id": 35664419, "link": "https://stackoverflow.com/questions/35664419/how-do-i-duplicate-a-u8-slice", "title": "How do I duplicate a &amp;[u8] slice?", "body": "<p>How do I copy the contents of a <code>&amp;[u8]</code> slice?</p>\n\n<p>I'm trying to write a function that takes a buffer as input and XOR's\neach byte with the given key and returns the final result.</p>\n\n<p>I don't want it to mangle the input buffer.</p>\n\n<pre><code>pub fn xor_buffer(buffer_in: &amp;[u8], key: char) -&gt; &amp;[u8] {\n\n    let mut buffer_out = buffer_in.clone();\n\n    for byte in &amp;mut buffer_out[..] {\n        *byte ^= key as u8;\n    }\n\n    buffer_out\n}\n</code></pre>\n\n<p>This code generates the following compile time error:</p>\n\n<pre><code>src/test.rs:29:22: 29:32 error: cannot borrow immutable borrowed content `*buffer_out` as mutable\nsrc/test.rs:29     for byte in &amp;mut buffer_out[..] {\n                                               ^~~~~~~~~~\n</code></pre>\n\n<p>I know I have to be doing something wrong.</p>\n\n<p>Any help would be apprecieated.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1457037823, "post_id": 35664213, "comment_id": 59236577, "body": "If it is really impossible to do in one pass, why can Java do it \u2013 their Iterators have a <code>.remove()</code> method to remove the current entry. I think it should be possible to create a similar option (perhaps via an EntryIterator that yields OccupiedEntries) in Rust&#39;s std::collection crate"}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "reply_to_user": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 1, "creation_date": 1457040101, "post_id": 35664213, "comment_id": 59237933, "body": "@llogiq the iterator stuff you can sort out, even if it&#39;s not fun. The memory semantics are much more difficult. Java sidesteps this by having everything be a pointer. Consider a tree where I have a reference to A, then I delete B and A moves, what does that reference point to now? In Java the answer is the same place on the heap. In Rust the answer is &quot;to dead memory&quot;. (This is slightly inaccurate because Java is really doing something similar to cloning an <code>Rc</code> but gets the gist across)"}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1457046665, "post_id": 35664213, "comment_id": 59241166, "body": "Yes, but our iterator can mutably borrow the BTree and use leak amplification (basically swap out the tree so if the iterator isn&#39;t dropped others will see a coherent if empty tree) to ensure dead references stay that way."}], "tags": [], "owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "is_accepted": false, "score": 2, "last_activity_date": 1457041550, "last_edit_date": 1457041550, "creation_date": 1456533318, "answer_id": 35664213, "question_id": 35663342, "link": "https://stackoverflow.com/questions/35663342/how-to-modify-partially-remove-a-range-from-a-btreemap/35664213#35664213", "title": "How to modify/partially remove a range from a BTreeMap?", "body": "<p>You need to do this in two passes, collecting the keys you want to delete, and then iterate over <strong>that</strong> list and call remove.</p>\n\n<p>Note that since while iterating over a tree you get references, you'll have to clone/copy the key because you'll have a reference to a key inside the map, which means you cannot borrow the map as mutable.</p>\n\n<p>The reason for this is largely because the memory and ordering semantics get a bit wonky while deleting entries in the middle of an iteration. It's pretty difficult to delete entries in a tree while iterating over it. This is exacerbated by it being a map, which means the keys are ordered in some way in the tree, meaning that nodes may end up rotating their children, so you may have previously visited your left child and now suddenly that's your current node, or right child. It's difficult to keep track of where you are.</p>\n\n<p>In addition, B-Tree nodes are lists of subnodes that have dynamics for when nodes need to merge and split, it's even more of a headache to do that in the middle of an iteration.</p>\n\n<p>Some of this is due to manual memory semanics. The keys and values are stored within the nodes, not on the heap, so memory is going to be bouncing all over the place and making sure it's not invalidated is non-trivial. Especially if the user was collecting references to entries in the tree elsewhere in the loop.</p>\n\n<p>Edit: And, regardless of possibility, the fact of the matter is that an iterator borrows the Map, which means you can't borrow it again to delete things. This might be different if the iterator returned something like an <code>Entry</code>, but as far as I know no iterator that does this exists.</p>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 820, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1457041550, "creation_date": 1456527899, "last_edit_date": 1456706997, "question_id": 35663342, "link": "https://stackoverflow.com/questions/35663342/how-to-modify-partially-remove-a-range-from-a-btreemap", "title": "How to modify/partially remove a range from a BTreeMap?", "body": "<p>I'm trying to build a <code>RangeSet</code> out of a <code>BTreeMap</code> (where the keys are lower bounds and the values are upper bounds). This works quite well as long as I'm only looking up stuff. However, the first mutating method has me stumped:</p>\n\n<p>If I want to <em>insert</em> a range to my set, I need to check a <code>Range</code> of my <code>BTreeMap</code> from the upper bound of the range from tail to head until the value in question is below the inserted range's lower bound, all contained ranges should be <em>removed</em> and overlapping ranges <em>merged</em>. However, even using <code>.range_mut(..)</code> which is currently unstable, I cannot find a way to <em>delete</em> an entry (because the map is still borrowed from by the range).</p>\n\n<p>Am I using the wrong tool for the job? Can I make it work anyway \u2013 and if so, how? My current solution in pseudocode (I also use my own <code>Cut</code> type because <code>Bound</code>s are not <code>Ord</code>):</p>\n\n<pre><code>fn insert(&amp;mut self, range: &amp;Range) {\n    for entry in self.map.range_mut(Cut::Unbounded, range.upper).rev() {\n         if entry.1 &lt; range.lower {\n             break;\n         } else if entry.0 &gt; range.lower {\n             delete entry\n         } else {\n             merge entry with range\n         }\n     }\n}\n</code></pre>\n"}, {"tags": ["html", "regex", "pointers", "rust"], "comments": [{"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1456501807, "post_id": 35656029, "comment_id": 58992513, "body": "Just FYI: if you want to use POSIX character classes, use them inside bracket expressions: <code>[[:alpha:]]</code>, <code>[[:space:]]</code>."}, {"owner": {"reputation": 21, "user_id": 5986863, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-3KuHgeEPsEY/AAAAAAAAAAI/AAAAAAAAAA0/ezNNt3RpXAE/photo.jpg?sz=128", "display_name": "Somang Nam", "link": "https://stackoverflow.com/users/5986863/somang-nam"}, "reply_to_user": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1456511317, "post_id": 35656029, "comment_id": 58998498, "body": "@Wiktor Stribizew thank you!"}, {"owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "edited": false, "score": 0, "creation_date": 1456518330, "post_id": 35656029, "comment_id": 59002368, "body": "Unless you only want to parse a known set of input files that have a very regular format (rather than arbitrary HTML from the web), you probably shouldn\u2019t write your own HTML parser (and <a href=\"https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454\">particularly not with regexs</a>). html5ever an HTML parser in Rust, it has thousands of lines of code to handle all kinds of edge cases. I recommend using <a href=\"https://github.com/SimonSapin/kuchiki\" rel=\"nofollow noreferrer\">Kuchiki</a> which uses html5ever for parsing and provides a tree data structure for parsed documents."}, {"owner": {"reputation": 21, "user_id": 5986863, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-3KuHgeEPsEY/AAAAAAAAAAI/AAAAAAAAAA0/ezNNt3RpXAE/photo.jpg?sz=128", "display_name": "Somang Nam", "link": "https://stackoverflow.com/users/5986863/somang-nam"}, "reply_to_user": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "edited": false, "score": 0, "creation_date": 1456524668, "post_id": 35656029, "comment_id": 59005543, "body": "@SimonSapin Thank you for your kind answer. I replied in the below comment, but I am new to Rust, and was just trying to learn things by having a small project of building my own web scraper. and I now understand the warnings of using regex for HTML parser. thank you."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1456507803, "post_id": 35656782, "comment_id": 58996461, "body": "Suggestion of HTML parser: html5ever, for example (it is the one used by Servo, right?)"}, {"owner": {"reputation": 21, "user_id": 5986863, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-3KuHgeEPsEY/AAAAAAAAAAI/AAAAAAAAAA0/ezNNt3RpXAE/photo.jpg?sz=128", "display_name": "Somang Nam", "link": "https://stackoverflow.com/users/5986863/somang-nam"}, "edited": false, "score": 0, "creation_date": 1456510806, "post_id": 35656782, "comment_id": 58998201, "body": "I am just trying to learn Rust by starting off this small project. I knew there were other existing parser."}, {"owner": {"reputation": 21, "user_id": 5986863, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-3KuHgeEPsEY/AAAAAAAAAAI/AAAAAAAAAA0/ezNNt3RpXAE/photo.jpg?sz=128", "display_name": "Somang Nam", "link": "https://stackoverflow.com/users/5986863/somang-nam"}, "edited": false, "score": 0, "creation_date": 1456511231, "post_id": 35656782, "comment_id": 58998443, "body": "@vladimir Thank you for your kind answer and description."}, {"owner": {"reputation": 21, "user_id": 5986863, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-3KuHgeEPsEY/AAAAAAAAAAI/AAAAAAAAAA0/ezNNt3RpXAE/photo.jpg?sz=128", "display_name": "Somang Nam", "link": "https://stackoverflow.com/users/5986863/somang-nam"}, "edited": false, "score": 0, "creation_date": 1456511293, "post_id": 35656782, "comment_id": 58998478, "body": "I will give up using regex, then I guess I&#39;ll have to read each character and  match &quot;&lt;&quot; to find a tag."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 2, "last_activity_date": 1456503780, "last_edit_date": 1495539916, "creation_date": 1456503780, "answer_id": 35656782, "question_id": 35656029, "link": "https://stackoverflow.com/questions/35656029/borrowed-value-does-not-live-long-enough-while-writing-an-html-parser/35656782#35656782", "title": "Borrowed value does not live long enough while writing an HTML parser", "body": "<p>To understand your problem it is useful to look at the function signature:</p>\n\n<pre><code>fn html_parser&lt;'a&gt;(html: &amp;'a str, mut tags: HashMap&lt;&amp;'a str, i32&gt;) -&gt; HashMap&lt;&amp;'a str, i32&gt;\n</code></pre>\n\n<p>From this signature we can see, roughly, that both accepted and returned hash maps may only be keyed by subslices of <code>html</code>. However, in your code you are attempting to insert a string slice completely unrelated (in lifetime sense) to <code>html</code>:</p>\n\n<pre><code>let tag = &amp;*(caps.at(0).unwrap().trim_matches('&lt;').trim_matches('&gt;').to_lowercase());\n</code></pre>\n\n<p>The first problem here (your particular error is about exactly this problem) is that you're attempting to take a slice out of a temporary <code>String</code> returned by <code>to_lowercase()</code>. This temporary string is only alive during this statement, so when the statement ends, the string is deallocated, and its references would become dangling if this was not prohibited by the compiler. So, the correct way to write this assignment is as follows:</p>\n\n<pre><code>let tag = caps.at(0).unwrap().trim_matches('&lt;').trim_matches('&gt;').to_lowercase();\nlet tag = &amp;*tag;\n</code></pre>\n\n<p>(or you can just use top <code>tag</code> and convert it to a slice when it is used)</p>\n\n<p>However, your code is not going to work even after this change. <code>to_lowercase()</code> method allocates a new <code>String</code> which is unrelated to <code>html</code> in terms of lifetime. Therefore, any slice you take out of it will have a lifetime <em>necessarily shorter</em> than <code>'a</code>. Hence it is not possible to insert such slice as a key to the map, because the data they point to may be not valid after this function returns (and in this particular case, it <em>will</em> be invalid).</p>\n\n<p>It is hard to tell what is the best way to fix this problem because it may depend on the overall architecture of your program, but the simplest way would be to create a new <code>HashMap&lt;String, i32&gt;</code> inside the function:</p>\n\n<pre><code>fn html_parser(html:&amp;str, tags: HashMap&lt;&amp;str, i32&gt;) -&gt; HashMap&lt;String, i32&gt;{\n    let mut result: HashMap&lt;String, i32&gt; = tags.iter().map(|(k, v)| (k.to_owned(), *v)).collect();\n    let re = Regex::new(\"&lt;[:alpha:]+?[\\\\d]*[:space:]*&gt;+\").unwrap();\n    for caps in re.captures_iter(html) {\n        if let Some(cap) = caps.at(0) {\n            let tag = cap\n                .trim_matches('&lt;')\n                .trim_matches('&gt;')\n                .to_lowercase();\n            let count = result.get(&amp;tag).unwrap_or(0) + 1;\n            result.insert(tag, count);\n        }       \n    }    \n    result\n}\n</code></pre>\n\n<p>I've also changed the code for it to be more idiomatic (<code>if let</code> instead of <code>if something.is_none()</code>, <code>unwrap_or()</code> instead of mutable local variables, etc.). This is a more or less direct translation of your original code.</p>\n\n<p>As for parsing HTML with regexes, I just cannot resist providing a link <a href=\"https://stackoverflow.com/a/1732454/788207\">to this answer</a>. Seriously consider using a proper HTML parser instead of relying on regexes.</p>\n"}], "owner": {"reputation": 21, "user_id": 5986863, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-3KuHgeEPsEY/AAAAAAAAAAI/AAAAAAAAAA0/ezNNt3RpXAE/photo.jpg?sz=128", "display_name": "Somang Nam", "link": "https://stackoverflow.com/users/5986863/somang-nam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1456506138, "creation_date": 1456501615, "last_edit_date": 1456506138, "question_id": 35656029, "link": "https://stackoverflow.com/questions/35656029/borrowed-value-does-not-live-long-enough-while-writing-an-html-parser", "title": "Borrowed value does not live long enough while writing an HTML parser", "body": "<p>I am very new to Rust, and trying to build a HTML parser.\nI first tried to parse the string and put it in the <code>Hashmap&lt;&amp;str, i32&gt;</code>.\nand I figured out that I have to take care of letter cases.\nso I added <code>tag.to_lowercase()</code> which creates a <code>String</code> type. From there it got my brain to panic.</p>\n\n<p>Below is my code snippet.</p>\n\n<pre><code>fn html_parser&lt;'a&gt;(html:&amp;'a str, mut tags:HashMap&lt;&amp;'a str, i32&gt;) -&gt; HashMap&lt;&amp;'a str, i32&gt;{\n\n    let re = Regex::new(\"&lt;[:alpha:]+?[\\\\d]*[:space:]*&gt;+\").unwrap();\n    let mut count;\n    for caps in re.captures_iter(html) {        \n        if !caps.at(0).is_none(){\n            let tag = &amp;*(caps.at(0).unwrap().trim_matches('&lt;').trim_matches('&gt;').to_lowercase());\n            count = 1;\n\n            if tags.contains_key(tag){\n                count = *tags.get_mut(tag).unwrap() + 1;\n            }\n            tags.insert(tag,count);\n        }       \n    }    \n    tags\n}\n</code></pre>\n\n<p>which throws this error,</p>\n\n<pre><code>src\\main.rs:58:27: 58:97 error: borrowed value does not live long enough\nsrc\\main.rs:58 let tag:&amp;'a str = &amp;*(caps.at(0).unwrap().trim_matches('&lt;').trim_matches('&gt;').to_lowercase());\n                                                         ^~~~~~~~~~~~~~~~~~~\nsrc\\main.rs:49:90: 80:2 note: reference must be valid for the lifetime 'a as defined on the block at 49:89...\nsrc\\main.rs:49 fn html_parser&lt;'a&gt;(html:&amp;'a str, mut tags:HashMap&lt;&amp;'a str, i32&gt;)-&gt; HashMap&lt;&amp;'a str, i32&gt;{\nsrc\\main.rs:58:99: 68:6 note: ...but borrowed value is only valid for the block suffix following statement 0 at 58:98\nsrc\\main.rs:58 let tag:&amp;'a str = &amp;*(caps.at(0).unwrap().trim_matches('&lt;').trim_matches('&gt;').to_lowercase());\nsrc\\main.rs:63\n           ...\nerror: aborting due to previous error\n</code></pre>\n\n<p>I read about lifetimes in Rust but still can not understand this situation.</p>\n\n<p>If anyone has a good HTML tag regex, please recommend so that I can use it.</p>\n"}, {"tags": ["rust", "hyper", "html5ever"], "answers": [{"comments": [{"owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456517552, "post_id": 35660699, "comment_id": 59001905, "body": "Can you link me more information about Kuchiki like how to implement tree traversal and specifically how to use things like &quot;open tag&quot; events to inspect tag/text contents? This is what I need to do."}, {"owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "reply_to_user": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456517868, "post_id": 35660699, "comment_id": 59002089, "body": "It looks like the <a href=\"https://simonsapin.github.io/kuchiki/kuchiki/struct.Node.html\" rel=\"nofollow noreferrer\">documentation</a> is buggy, there are more methods that don\u2019t show up there. For example, nodes have methods like <code>.descendants()</code> and <code>.inclusive_descendants()</code> that return iterators of nodes. I\u2019m not sure what you mean by &quot;open tag&quot;. Kuchiki is not event-based, you get a tree data structures once parsing is done."}, {"owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456518044, "post_id": 35660699, "comment_id": 59002204, "body": "Thanks. Too bad if it has to parse the entire document at once. I want something like <a href=\"https://github.com/fb55/htmlparser2\" rel=\"nofollow noreferrer\">htmlparser2 for node</a> where I can pipe a stream of html to the parser and respond to <code>onstarttag</code>, etc."}, {"owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "reply_to_user": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 1, "creation_date": 1456524767, "post_id": 35660699, "comment_id": 59005596, "body": "In order to be compatible with legacy web content, a conforming HTML parser needs to do all kinds of complex tree manipulation like the <a href=\"https://html.spec.whatwg.org/multipage/syntax.html#adoption-agency-algorithm\" rel=\"nofollow noreferrer\">&quot;adoption agency algorithm&quot;</a>. The only way to do that and have an event-based API is to <a href=\"https://github.com/servo/html5ever/issues/149#issuecomment-120991146\" rel=\"nofollow noreferrer\">buffer the entire document</a>, which defeats the point. I suppose you could sacrifice standards compliance, but you risk being incompatible (parsing pages differently) with other parsers like those in web browsers."}, {"owner": {"user_type": "does_not_exist", "display_name": "user1115652"}, "edited": false, "score": 0, "creation_date": 1486351168, "post_id": 35660699, "comment_id": 71292074, "body": "For example code you can run a search for <a href=\"https://github.com/search?q=extern+crate+kuchiki&amp;type=Code&amp;utf8=%E2%9C%93\" rel=\"nofollow noreferrer\">extern crate kuchiki</a> on github."}], "tags": [], "owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "is_accepted": true, "score": 8, "last_activity_date": 1456516946, "creation_date": 1456516946, "answer_id": 35660699, "question_id": 35654525, "link": "https://stackoverflow.com/questions/35654525/parsing-html-page-content-in-a-stream-with-hyper-and-html5ever/35660699#35660699", "title": "Parsing HTML page content in a stream with hyper and html5ever", "body": "<p>Sorry for the lack of tutorial-like documentation for html5ever and tendril\u2026</p>\n\n<p>Unless you\u2019re 100% sure your content is in UTF-8, use <code>from_bytes</code> rather than <code>from_utf8</code>. They return something that implements <code>TendrilSink</code> which allows you to provide the input incrementally (or not).</p>\n\n<p>The <code>std::io::Read::read_to_end</code> method takes a <code>&amp;mut Vec&lt;u8&gt;</code>, so it doesn\u2019t work with <code>TendrilSink</code>.</p>\n\n<p>At the lowest level, you can call the <code>TendrilSink::process</code> method once per <code>&amp;[u8]</code> chunk, and then call <code>TendrilSink::finish</code>.</p>\n\n<p>To avoid doing that manually, there\u2019s also the <code>TendrilSink::read_from</code> method that takes <code>&amp;mut R where R: std::io::Read</code>. Since <code>hyper::client::Response</code> implements <code>Read</code>, you can use:</p>\n\n<pre><code>parse_document(RcDom::default(), Default::default()).from_bytes().read_from(&amp;mut res)\n</code></pre>\n\n<hr>\n\n<p>To go beyond your question, <code>RcDom</code> is very minimal and mostly exists in order to test html5ever. I recommend using <a href=\"https://github.com/SimonSapin/kuchiki\">Kuchiki</a> instead. It has more features (for tree traversal, CSS Selector matching, \u2026) including optional Hyper support.</p>\n\n<p>In your <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nkuchiki = {version = \"0.3.1\", features = [\"hyper\"]}\n</code></pre>\n\n<p>In your code:</p>\n\n<pre><code>let document = kuchiki::parse_html().from_http(res).unwrap();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456517227, "post_id": 35660727, "comment_id": 59001692, "body": "Where do you actually use the <code>result</code> with the parser?"}, {"owner": {"reputation": 644, "user_id": 5326062, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh3.googleusercontent.com/-wyQqFvVdnKo/AAAAAAAAAAI/AAAAAAAAAwY/atuvPb80mWU/photo.jpg?sz=128", "display_name": "Ivan Temchenko", "link": "https://stackoverflow.com/users/5326062/ivan-temchenko"}, "reply_to_user": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "edited": false, "score": 0, "creation_date": 1456517527, "post_id": 35660727, "comment_id": 59001887, "body": "i guess in paramiter like <code>.read_from(&amp;mut result.lock())</code> as described in documentation you linked..."}], "tags": [], "owner": {"reputation": 644, "user_id": 5326062, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh3.googleusercontent.com/-wyQqFvVdnKo/AAAAAAAAAAI/AAAAAAAAAwY/atuvPb80mWU/photo.jpg?sz=128", "display_name": "Ivan Temchenko", "link": "https://stackoverflow.com/users/5326062/ivan-temchenko"}, "is_accepted": false, "score": -3, "last_activity_date": 1456517021, "creation_date": 1456517021, "answer_id": 35660727, "question_id": 35654525, "link": "https://stackoverflow.com/questions/35654525/parsing-html-page-content-in-a-stream-with-hyper-and-html5ever/35660727#35660727", "title": "Parsing HTML page content in a stream with hyper and html5ever", "body": "<p>try to add this:</p>\n\n<pre><code>let mut result: Vec&lt;u8&gt; = Vec::new();\n\nres.read_to_end(&amp;mut result);\n\nlet parse_result = parse_document(RcDom::default(), Default::default())\n    . //read parameters\n    .unwrap();\n</code></pre>\n\n<p>parameters accordint to crate documentation...</p>\n"}, {"tags": [], "owner": {"reputation": 2973, "user_id": 4759433, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/852b4ff0da6c52d5c1b915f50c14de91?s=128&d=identicon&r=PG", "display_name": "Lonami", "link": "https://stackoverflow.com/users/4759433/lonami"}, "is_accepted": false, "score": 0, "last_activity_date": 1608410787, "creation_date": 1608410787, "answer_id": 65374301, "question_id": 35654525, "link": "https://stackoverflow.com/questions/35654525/parsing-html-page-content-in-a-stream-with-hyper-and-html5ever/65374301#65374301", "title": "Parsing HTML page content in a stream with hyper and html5ever", "body": "<p>Unless I'm misunderstanding something, processing the HTML tokens is quite involved (and the names of the atom constants are unfortunately very far from perfect). This code demonstrates how to use <code>html5ever</code> version <code>0.25.1</code> to process the tokens.</p>\n<p>First, we want a <code>String</code> with the HTML body:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let body = {\n    let mut body = String::new();\n    let client = Client::new();\n\n    client.post(WEBPAGE)\n        .header(ContentType::form_url_encoded())\n        .body(BODY)\n        .send()?\n        .read_to_string(&amp;mut body);\n\n    body\n};\n</code></pre>\n<p>Second, we need to define our own <code>Sink</code>, which contains the &quot;callbacks&quot; and lets you hold any state you need. For this example, I will be detecting <code>&lt;a&gt;</code> tags and printing them back as HTML (this requires us to detect start tag, end tag, text, and finding an attribute; hopefully a complete-enough example):</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use html5ever::tendril::StrTendril;\nuse html5ever::tokenizer::{\n    BufferQueue, Tag, TagKind, Token, TokenSink, TokenSinkResult, Tokenizer,\n};\nuse html5ever::{ATOM_LOCALNAME__61 as TAG_A, ATOM_LOCALNAME__68_72_65_66 as ATTR_HREF};\n\n// Define your own `TokenSink`. This is how you keep state and your &quot;callbacks&quot; run.\nstruct Sink {\n    text: Option&lt;String&gt;,\n}\n\nimpl TokenSink for Sink {\n    type Handle = ();\n\n    fn process_token(&amp;mut self, token: Token, _line_number: u64) -&gt; TokenSinkResult&lt;()&gt; {\n        match token {\n            Token::TagToken(Tag {\n                kind: TagKind::StartTag,\n                name,\n                self_closing: _,\n                attrs,\n            }) =&gt; match name {\n                // Check tag name, attributes, and act.\n                TAG_A =&gt; {\n                    let url = attrs\n                        .into_iter()\n                        .find(|a| a.name.local == ATTR_HREF)\n                        .map(|a| a.value.to_string())\n                        .unwrap_or_else(|| &quot;&quot;.to_string());\n\n                    print!(&quot;&lt;a href=\\&quot;{}\\&quot;&gt;&quot;, url);\n                    self.text = Some(String::new());\n                }\n                _ =&gt; {}\n            },\n            Token::TagToken(Tag {\n                kind: TagKind::EndTag,\n                name,\n                self_closing: _,\n                attrs: _,\n            }) =&gt; match name {\n                TAG_A =&gt; {\n                    println!(\n                        &quot;{}&lt;/a&gt;&quot;,\n                        self.text.take().unwrap()\n                    );\n                }\n                _ =&gt; {}\n            },\n            Token::CharacterTokens(string) =&gt; {\n                if let Some(text) = self.text.as_mut() {\n                    text.push_str(&amp;string);\n                }\n            }\n            _ =&gt; {}\n        }\n        TokenSinkResult::Continue\n    }\n}\n\n\nlet sink = {\n    let sink = Sink {\n        text: None,\n    };\n\n    // Now, feed the HTML `body` string to the tokenizer.\n    // This requires a bit of setup (buffer queue, tendrils, etc.).\n    let mut input = BufferQueue::new();\n    input.push_back(StrTendril::from_slice(&amp;body).try_reinterpret().unwrap());\n    let mut tok = Tokenizer::new(sink, Default::default());\n    let _ = tok.feed(&amp;mut input);\n    tok.end();\n    tok.sink\n};\n\n// `sink` is your `Sink` after all processing was done.\nassert!(sink.text.is_none());\n</code></pre>\n"}], "owner": {"reputation": 175871, "user_id": 454533, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7715e765817254e0534f89a4092c0aa?s=128&d=identicon&r=PG", "display_name": "Explosion Pills", "link": "https://stackoverflow.com/users/454533/explosion-pills"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3472, "favorite_count": 0, "accepted_answer_id": 35660699, "answer_count": 3, "score": 13, "last_activity_date": 1608410787, "creation_date": 1456497504, "last_edit_date": 1486816197, "question_id": 35654525, "link": "https://stackoverflow.com/questions/35654525/parsing-html-page-content-in-a-stream-with-hyper-and-html5ever", "title": "Parsing HTML page content in a stream with hyper and html5ever", "body": "<p>I'm trying to parse the HTML response of an HTTP request. I'm using <a href=\"https://github.com/hyperium/hyper\">hyper</a> for the requests and <a href=\"https://github.com/servo/html5ever\">html5ever</a> for the parsing. The HTML will be pretty large and I don't need to fully parse it -- I just need to identify some data from tags so I would prefer to stream it. Conceptually I want to do something like:</p>\n\n<pre><code># bash\ncurl url | read_dom\n\n/* javascript */\nhttp.get(url).pipe(parser);\nparser.on(\"tag\", /* check tag name, attributes, and act */)\n</code></pre>\n\n<p>What I have come up with so far is:</p>\n\n<pre><code>extern crate hyper;\nextern crate html5ever;\n\nuse std::default::Default\nuse hyper::Client;\nuse html5ever::parse_document;\nuse html5ever::rcdom::{RcDom};\n\nfn main() {\n    let client = Client::new();\n\n    let res = client.post(WEBPAGE)\n        .header(ContentType::form_url_encoded())\n        .body(BODY)\n        .send()\n        .unwrap();\n\n    res.read_to_end(parse_document(RcDom::default(),\n      Default::default().from_utf8().unwrap()));\n}\n</code></pre>\n\n<p>It seems like <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.read_to_end\"><code>read_to_end</code></a> is the method I want to call on the response to read the bytes, but it is unclear to me how to pipe this to the HTML document reader ... if this is even possible.</p>\n\n<p><a href=\"http://doc.servo.org/html5ever/driver/fn.parse_document.html\">The documentation for <code>parse_document</code></a> says to use <code>from_utf8</code> or <code>from_bytes</code> if the input is in bytes (which it is).</p>\n\n<p>It seems that I need to create a sink from the response, but this is where I am stuck. It's also unclear to me how I can create events to listen for tag starting which is what I am interested in.</p>\n\n<p>I've looked at <a href=\"https://github.com/servo/html5ever/blob/master/examples/print-rcdom.rs\">this example of html5ever</a> which seems to do what I want and walks the DOM, but I can't get this example itself to run -- either it's outdated or tendril/html5ever is too new. This also seems to parse the HTML as a whole rather than as a stream, but I'm not sure.</p>\n\n<p>Is it possible to do what I want to do with the current implementation of these libraries?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 3, "creation_date": 1456491939, "post_id": 35652404, "comment_id": 58985145, "body": "I get where you&#39;re coming from, but having a right answer available is more useful than fairly selecting the best answer. You can give yourself a time limit or something, but eventually you should post your answer if no one else does."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 2, "creation_date": 1456492439, "post_id": 35652404, "comment_id": 58985433, "body": "@MatthieuM.: please answer this immediately, it can make building other answers on top of it easier. This is a good way of using Stack Overflow."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1456507524, "post_id": 35652404, "comment_id": 58996314, "body": "@ChrisMorgan: I did not expect such a massive opposition, so I posted an answer of my own... I&#39;ll let the votes decide the matter then."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1456507555, "post_id": 35652404, "comment_id": 58996339, "body": "@Cubic: Alright, done. I&#39;ll let the votes decide then."}], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 9, "last_activity_date": 1456492661, "creation_date": 1456492661, "answer_id": 35652776, "question_id": 35652404, "link": "https://stackoverflow.com/questions/35652404/is-memswaping-a-mutext-really-safe/35652776#35652776", "title": "Is `mem::swap`ing a `Mutex&lt;T&gt;` really safe?", "body": "<p><code>Mutex</code> is <code>Sync</code>, which means it's allowed for multiple threads to access the same object concurrently. Types that make the sharing of a single object across threads possible in the first place (<code>Arc</code>, but also global variables) need to make sure that the objects they share are <code>Sync</code> to ensure integrity.</p>\n\n<p>However, that doesn't avoid Rust's other aliasing rules. Specifically, only one <code>mut</code> borrow of a variable can exist at any given time, and its existence must prevent any other access to the variable. The things that make sharing possible must ensure this, as well. <code>Arc</code> does this by simply never handing out <code>mut</code> references to its pointee; you can only get non-<code>mut</code> references. This is why <code>Mutex::lock</code> takes <code>&amp;self</code>: it must be possible to call it on a non-<code>mut</code> reference. Similarly, <code>Atomic*::store</code> and all other manipulation methods take <code>&amp;self</code>. <code>static mut</code> variables, on the other hand, simply can only be accessed within unsafe code, where the programmer is responsible for upholding guarantees.</p>\n\n<p><code>mem::swap</code> needs <code>mut</code> references. When the compiler allows you to pass two <code>Mutex</code> objects to <code>swap</code>, it means that you never shared the mutexes with other threads to begin with - you neither put them into <code>Arc</code>, nor are they <code>static</code> (not <code>mut</code>) or <code>static mut</code> (unless you're in unsafe code).</p>\n\n<p>As such, the <code>swap</code> is safe, because you're doing it within one thread.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 3, "last_activity_date": 1456507478, "creation_date": 1456507478, "answer_id": 35657983, "question_id": 35652404, "link": "https://stackoverflow.com/questions/35652404/is-memswaping-a-mutext-really-safe/35657983#35657983", "title": "Is `mem::swap`ing a `Mutex&lt;T&gt;` really safe?", "body": "<p>The answer is simple: Mutability XOR Aliasing.</p>\n\n<p>Why is <code>mem::swap</code> safe despite not locking the mutex or executing an atomic operation?</p>\n\n<p>Because <code>&amp;mut T</code> or <code>T</code> guarantees the absence of accessible aliases at compile-time.</p>\n\n<hr>\n\n<p>The fact that a <code>Mutex</code> or <code>AtomicXXX</code> achieve safe mutation while shared across threads by either several constraining the types and operations (<code>AtomicXXX</code>) or ensuring the \"Mutability XOR Aliasing\" at run-time (<code>Mutex</code>) is an exception to the compile-time guarantee, but it does not supersede it.</p>\n\n<p>A type can be safely mutated:</p>\n\n<ul>\n<li>if, at compile-time, it is not aliased (<code>&amp;mut T</code> or <code>T</code>)</li>\n<li>if, at run-time, a special property of the type ensures that this is safe</li>\n</ul>\n\n<p>types that have a special property do so <strong>on top</strong> of following the regular compile-time rules on which the safety of <code>mem::swap</code> and <code>mem::replace</code> hinges, and therefore in situations where the absence of aliasing can be proven at compile-time, they can be mutated without any specific synchronization.</p>\n"}], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 343, "favorite_count": 0, "accepted_answer_id": 35652776, "answer_count": 2, "score": 7, "last_activity_date": 1456507478, "creation_date": 1456491587, "question_id": 35652404, "link": "https://stackoverflow.com/questions/35652404/is-memswaping-a-mutext-really-safe", "title": "Is `mem::swap`ing a `Mutex&lt;T&gt;` really safe?", "body": "<p>A simple example:</p>\n\n<pre><code>use std::mem;\nuse std::sync::{Mutex};\n\nfn main() {\n    let mut orig = Mutex::new(vec![1, 2, 3]);\n    let mut other = Mutex::new(vec![]);\n    mem::swap(&amp;mut orig, &amp;mut other);\n    println!(\"{:?}\", other);\n}\n</code></pre>\n\n<p>This program is, according to Rust, perfectly safe. Yet the implementation of <code>swap</code> (or <code>replace</code>) does not attempt to lock anything. From the <a href=\"https://doc.rust-lang.org/src/core/mem.rs.html#346\" rel=\"noreferrer\">source</a>:</p>\n\n<pre><code>#[inline]\n#[stable(feature = \"rust1\", since = \"1.0.0\")]\npub fn swap&lt;T&gt;(x: &amp;mut T, y: &amp;mut T) {\n    unsafe {\n        // Give ourselves some scratch space to work with\n        let mut t: T = uninitialized();\n\n        // Perform the swap, `&amp;mut` pointers never alias\n        ptr::copy_nonoverlapping(&amp;*x, &amp;mut t, 1);\n        ptr::copy_nonoverlapping(&amp;*y, x, 1);\n        ptr::copy_nonoverlapping(&amp;t, y, 1);\n\n        // y and t now point to the same thing, but we need to completely\n        // forget `t` because we do not want to run the destructor for `T`\n        // on its value, which is still owned somewhere outside this function.\n        forget(t);\n    }\n}\n</code></pre>\n\n<p>Using unsynchronized access on <code>Mutex</code> or <code>Atomic</code> variables seems like a recipe for trouble, so is this safe? And if it is, why?</p>\n"}, {"tags": ["closures", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 229, "user_id": 1433771, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/1jAZg.png?s=128&g=1", "display_name": "MrNosco", "link": "https://stackoverflow.com/users/1433771/mrnosco"}, "edited": false, "score": 0, "creation_date": 1456491385, "post_id": 35652137, "comment_id": 58984759, "body": "I just need to read up on <code>Cell</code> and such. Otherwise, very thorough answer, thank you."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1456492775, "post_id": 35652137, "comment_id": 58985688, "body": "Where does that implicit <code>&#39;static</code> come from, is that documented somewhere?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1456493598, "post_id": 35652137, "comment_id": 58986268, "body": "iirc if you don&#39;t specify a lifetime it&#39;s always <code>&#39;static</code> except in function arguments and local bindings, which can obviously infer shorter lifetimes"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1456493651, "post_id": 35652137, "comment_id": 58986316, "body": "There&#39;s an RFC somewhat related to the topic: <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1214-projections-lifetimes-and-wf.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/&hellip;</a>"}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1539451700, "post_id": 35652137, "comment_id": 92511159, "body": "Why have you written <code>&#39;b: &#39;a</code> ? Why not just <code>&#39;b</code>? What is the rationale behind that constraint?"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 10, "last_activity_date": 1456490847, "creation_date": 1456490847, "answer_id": 35652137, "question_id": 35651279, "link": "https://stackoverflow.com/questions/35651279/error-closure-may-outlive-the-current-function-but-it-will-not-outlive-it/35652137#35652137", "title": "&quot;error: closure may outlive the current function&quot; but it will not outlive it", "body": "<p>The problem is not your closure, but the <code>add_handler</code> method. Fully expanded it would look like this:</p>\n\n<pre><code>fn add_handler&lt;'a&gt;(&amp;'a mut self, handler: Box&lt;FnMut(i32) + 'static&gt;)\n</code></pre>\n\n<p>As you can see, there's an implicit <code>'static</code> bound on the trait object. Obviously we don't want that, so we introduce a second lifetime <code>'b</code>:</p>\n\n<pre><code>fn add_handler&lt;'a, 'b: 'a&gt;(&amp;'a mut self, handler: Box&lt;FnMut(i32) + 'b&gt;)\n</code></pre>\n\n<p>Since you are adding the <code>handler</code> object to the <code>Input::handlers</code> field, that field cannot outlive the scope of the <code>handler</code> object. Thus we also need to limit its lifetime:</p>\n\n<pre><code>pub struct Input&lt;'a&gt; {\n    handlers: Vec&lt;Box&lt;FnMut(i32) + 'a&gt;&gt;,\n}\n</code></pre>\n\n<p>This again requires the impl to have a lifetime, which we can use in the <code>add_handler</code> method.</p>\n\n<pre><code>impl&lt;'a&gt; Input&lt;'a&gt; {\n    ...\n    pub fn add_handler(&amp;mut self, handler: Box&lt;FnMut(i32) + 'a&gt;) {\n        self.handlers.push(handler);\n    }\n}\n</code></pre>\n\n<p>Now all that's left is using a <code>Cell</code> to control access to your <code>should_end</code> flag.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1482413317, "last_edit_date": 1482413317, "creation_date": 1482413000, "answer_id": 41284227, "question_id": 35651279, "link": "https://stackoverflow.com/questions/35651279/error-closure-may-outlive-the-current-function-but-it-will-not-outlive-it/41284227#41284227", "title": "&quot;error: closure may outlive the current function&quot; but it will not outlive it", "body": "<p>Here is <a href=\"https://play.rust-lang.org/?gist=e7de04e15ca64299f01f&amp;version=stable\" rel=\"nofollow noreferrer\">an example of the fixed code</a>:</p>\n\n<pre><code>use std::cell::Cell;\n\nfn main() {\n    let should_end = Cell::new(false);\n    let mut input = Input::new();\n    input.add_handler(Box::new(|a| {\n        match a {\n            1 =&gt; {\n                should_end.set(true);\n            }\n            _ =&gt; {\n                println!(\"{} {}\", a, should_end.get())\n            }\n        }\n    }));\n    let mut fail_safe = 0;\n    while !should_end.get() {\n        if fail_safe &gt; 20 {break;}\n        input.handle();\n        fail_safe += 1;\n    }\n}\n\npub struct Input&lt;'a&gt; {\n    handlers: Vec&lt;Box&lt;FnMut(i32) + 'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Input&lt;'a&gt; {\n    pub fn new() -&gt; Self {\n        Input {handlers: Vec::new()}\n    }\n    pub fn handle(&amp;mut self) {\n        for a in vec![21,0,3,12,1,2] {// it will print the 2, but it won't loop again\n            for handler in &amp;mut self.handlers {\n                handler(a);\n            }\n        }\n    }\n    pub fn add_handler(&amp;mut self, handler: Box&lt;FnMut(i32) + 'a&gt;) {\n        self.handlers.push(handler);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 229, "user_id": 1433771, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/1jAZg.png?s=128&g=1", "display_name": "MrNosco", "link": "https://stackoverflow.com/users/1433771/mrnosco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5304, "favorite_count": 2, "accepted_answer_id": 35652137, "answer_count": 2, "score": 12, "last_activity_date": 1482413317, "creation_date": 1456488382, "last_edit_date": 1482412992, "question_id": 35651279, "link": "https://stackoverflow.com/questions/35651279/error-closure-may-outlive-the-current-function-but-it-will-not-outlive-it", "title": "&quot;error: closure may outlive the current function&quot; but it will not outlive it", "body": "<p>When I try to compile the following code:</p>\n\n<pre><code>fn main() {\n\n    (...)\n\n    let mut should_end = false;\n\n    let mut input = Input::new(ctx);\n\n    input.add_handler(Box::new(|evt| {\n        match evt {\n            &amp;Event::Quit{..} =&gt; {\n                should_end = true;\n            }\n            _ =&gt; {}\n        }\n    }));\n\n    while !should_end {\n        input.handle();\n    }\n}\n\npub struct Input {\n    handlers: Vec&lt;Box&lt;FnMut(i32)&gt;&gt;,\n}\n\nimpl Input {\n    pub fn new() -&gt; Self {\n        Input {handlers: Vec::new()}\n    }\n    pub fn handle(&amp;mut self) {\n        for a in vec![21,0,3,12,1] {\n            for handler in &amp;mut self.handlers {\n                handler(a);\n            }\n        }\n    }\n    pub fn add_handler(&amp;mut self, handler: Box&lt;FnMut(i32)&gt;) {\n        self.handlers.push(handler);\n    }\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: closure may outlive the current function, but it borrows `should_end`, which is owned by the current function\n</code></pre>\n\n<p>I can't simply add <code>move</code> to the closure, because I need to use <code>should_end</code> later in the main loop. I mean, I can, but since <code>bool</code> is <code>Copy</code>, it will only affect the <code>should_end</code> inside the closure, and thus the program loops forever.</p>\n\n<p>As far as I understand, since <code>input</code> is created in the main function, and the closure is stored in <code>input</code>, it couldn't possibly outlive the current function. Is there a way to express to Rust that the closure won't outlive <code>main</code>? Or is there a possibility that I can't see that the closure will outlive <code>main</code>? In the latter case, it there a way to force it to live only as long as <code>main</code>?</p>\n\n<p>Do I need to refactor the way I'm handling input, or is there some way I can make this work. If I need to refactor, where can I look to see a good example of this in Rust?</p>\n\n<p>Here's <a href=\"https://play.rust-lang.org/?gist=828b8a7c4f9898325235&amp;version=stable\" rel=\"noreferrer\">a playpen of a simplified version</a>. It is possible I made a mistake in it that could crash your browser. I happened to me once, so, beware.</p>\n\n<p>In case it is needed, the rest of <a href=\"https://github.com/42f87d89/hook/tree/e4ed1fc90e11c2310fdfaae8285bcda840a917f2\" rel=\"noreferrer\">my code is available</a>. All the relevant info should be in either <code>main.rs</code> or <code>input.rs</code>.</p>\n"}, {"tags": ["struct", "reference", "rust", "swap"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1456484901, "creation_date": 1456484901, "answer_id": 35650134, "question_id": 35649968, "link": "https://stackoverflow.com/questions/35649968/how-to-swap-two-fields-of-a-struct/35650134#35650134", "title": "How to swap two fields of a struct", "body": "<p>As you noticed, <code>mem::swap</code> is the way to go:</p>\n\n<pre><code>fn swap(&amp;mut self) -&gt; &amp;Board {\n    std::mem::swap(&amp;mut self.cur, &amp;mut self.next);\n    self\n}\n</code></pre>\n\n<p>This works. Note that when using <code>.</code> you are dereferencing <code>self</code>. So while <code>self</code> has the type <code>&amp;mut Board</code>, <code>self.cur</code> has the type <code>Vec&lt;u32&gt;</code>. Therefore the compiler complained about \"move out of borrowed content\" and we need the additional <code>&amp;mut</code>s.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1456497574, "last_edit_date": 1456497574, "creation_date": 1456491178, "answer_id": 35652257, "question_id": 35649968, "link": "https://stackoverflow.com/questions/35649968/how-to-swap-two-fields-of-a-struct/35652257#35652257", "title": "How to swap two fields of a struct", "body": "<blockquote>\n  <p>What's the problem?</p>\n</blockquote>\n\n<p>You are <strong>punching holes</strong> in your data:</p>\n\n<pre><code>fn swap(&amp;mut self) -&gt; &amp;Board {\n    let tmp = self.cur;         // 1\n    self.cur = self.next;       // 2\n    self.next = tmp;            // 3\n    self\n}\n</code></pre>\n\n<p>If we analyze line by line:</p>\n\n<ol>\n<li><code>self.cur</code> is now uninitialized</li>\n<li><code>self.next</code> is now uninitialized</li>\n<li>everything is kosher again</li>\n</ol>\n\n<p>If for some reason computation is interrupted before line (3) has a change to tighten up the situation, <code>self</code> is now poisoned and may cause all kinds of nasty things to happen. Notably, its destructor could attempt to free memory twice for example.</p>\n\n<p>In theory, you could have the compiler check for temporary holes and prove, without doubt, that:</p>\n\n<ul>\n<li>no function accesses <code>self</code> while a hole is punched</li>\n<li>by the end of the scope, whether it is reached normally or by unwinding, the holes are filled up again</li>\n</ul>\n\n<p>and indeed at some point it was considered... but the truth is that it's complicated and there are readily available work-arounds.</p>\n\n<blockquote>\n  <p>So?</p>\n</blockquote>\n\n<p>The answer lies in <code>std::mem</code> which exposes functions to perform such low-level operations in a safe manner. While the functions themselves are implemented using <code>unsafe</code> under the hood, they lean on their understanding of the language and runtime to expose safe interfaces.</p>\n\n<p>The two particular functions that will interest you are:</p>\n\n<ul>\n<li><code>replace</code>: replaces the content of <code>dest: &amp;mut T</code> by <code>src: T</code> and returns the what was previously contained behind <code>dest</code></li>\n<li><code>swap</code>: exchanges the content of its arguments</li>\n</ul>\n\n<p>With those two simple and safe primitives, you can avoid punching holes in your data.</p>\n"}], "owner": {"reputation": 38923, "user_id": 220447, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/17315c657919487e660ea95004841134?s=128&d=identicon&r=PG", "display_name": "paradigmatic", "link": "https://stackoverflow.com/users/220447/paradigmatic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 579, "favorite_count": 0, "accepted_answer_id": 35650134, "answer_count": 2, "score": 5, "last_activity_date": 1456497574, "creation_date": 1456484407, "last_edit_date": 1456497541, "question_id": 35649968, "link": "https://stackoverflow.com/questions/35649968/how-to-swap-two-fields-of-a-struct", "title": "How to swap two fields of a struct", "body": "<p>I've started studying Rust and I'm trying to implement a simple 1D cellular automata. I want to represent the automata state (<code>Board</code>) as struct holding the size and two different vectors (of same size). I tried: </p>\n\n<pre><code>struct Board {\n    n: usize,\n    cur:  Vec&lt;u32&gt;,\n    next: Vec&lt;u32&gt;,\n}\n\nimpl Board {\n    fn new(size: usize) -&gt; Board {\n        Board {\n            n: size,\n            cur: vec![0;size],\n            next: vec![0;size],\n        }\n    }\n}\n</code></pre>\n\n<p>So far so good. I'm also able of mutating both vectors. But then I want to be able to swap both vectors (or rather their references), such as:</p>\n\n<pre><code>fn swap(&amp;mut self) -&gt; &amp;Board {\n    let tmp = self.cur;\n    self.cur = self.next;\n    self.next = tmp;\n    self\n}\n</code></pre>\n\n<p>It fails, with an <code>cannot move out of borrowed content [E0507]</code> which I think I can understand. I also tried <code>mem::swap</code> which I found in a similarly title question without success.</p>\n\n<p>How can I make this example work ? (Since I'm a total beginner with Rust, don't hesitate to suggest a different data representation).</p>\n"}, {"tags": ["c#", "rust", "ffi"], "comments": [{"owner": {"reputation": 29735, "user_id": 294884, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/f8675693dfeb3908195657eb3a3fdda4?s=128&d=identicon&r=PG", "display_name": "Fattie", "link": "https://stackoverflow.com/users/294884/fattie"}, "edited": false, "score": 0, "creation_date": 1456446307, "post_id": 35639380, "comment_id": 58963715, "body": "say @user1058064 - I&#39;m just curious, what were you using Rust for in this?  cheers.."}, {"owner": {"reputation": 75, "user_id": 1058064, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fppMf.jpg?s=128&g=1", "display_name": "djmcgill", "link": "https://stackoverflow.com/users/1058064/djmcgill"}, "reply_to_user": {"reputation": 29735, "user_id": 294884, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/f8675693dfeb3908195657eb3a3fdda4?s=128&d=identicon&r=PG", "display_name": "Fattie", "link": "https://stackoverflow.com/users/294884/fattie"}, "edited": false, "score": 0, "creation_date": 1456477442, "post_id": 35639380, "comment_id": 58975214, "body": "Real answer: because combining Rust, Unity, and (soon to be) F# seemed like an interesting project. Good answer: I&#39;m making a minecraft like using a sparse voxel octree (I. E. 8 identical voxels get combined into 1 bigger one) and would like to calculate voxel visibility by ray-casting. Each frame throw out a thousand rays and the voxels that get hit get rendered. Ray casting is expensive enough and doesn&#39;t involve allocating any memory so that&#39;s my (thin) justification for doing it in Rust."}, {"owner": {"reputation": 75, "user_id": 1058064, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fppMf.jpg?s=128&g=1", "display_name": "djmcgill", "link": "https://stackoverflow.com/users/1058064/djmcgill"}, "reply_to_user": {"reputation": 29735, "user_id": 294884, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/f8675693dfeb3908195657eb3a3fdda4?s=128&d=identicon&r=PG", "display_name": "Fattie", "link": "https://stackoverflow.com/users/294884/fattie"}, "edited": false, "score": 0, "creation_date": 1456485088, "post_id": 35639380, "comment_id": 58980509, "body": "If you&#39;re interested, <a href=\"https://gist.github.com/anonymous/089b201c1482e541e135\" rel=\"nofollow noreferrer\">this</a> is mostly the code that I&#39;ve got so far."}, {"owner": {"reputation": 29735, "user_id": 294884, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/f8675693dfeb3908195657eb3a3fdda4?s=128&d=identicon&r=PG", "display_name": "Fattie", "link": "https://stackoverflow.com/users/294884/fattie"}, "edited": false, "score": 0, "creation_date": 1456486662, "post_id": 35639380, "comment_id": 58981543, "body": "sounds like a fascinating exploration! just BTW you probably know that unity has excellent occlusion culling (one of the things they got right!)  sometimes we write our own but typically it&#39;s the stuff"}, {"owner": {"reputation": 75, "user_id": 1058064, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fppMf.jpg?s=128&g=1", "display_name": "djmcgill", "link": "https://stackoverflow.com/users/1058064/djmcgill"}, "reply_to_user": {"reputation": 29735, "user_id": 294884, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/f8675693dfeb3908195657eb3a3fdda4?s=128&d=identicon&r=PG", "display_name": "Fattie", "link": "https://stackoverflow.com/users/294884/fattie"}, "edited": false, "score": 0, "creation_date": 1456487315, "post_id": 35639380, "comment_id": 58981977, "body": "It&#39;s not just occlusion culling but also frustum culling (okay this is pretty much free with unity too), and draw-distance/LoD too in that big objects far away will get rendered but you only see the smaller objects when you&#39;re up close. Another benefit (and this was honestly the main driver for using this) is that I want to implement a &quot;cut-away&quot; feature so the 3rd-person camera can see through roofs and so on. Doing this without changing the model is easy with ray-casting - simply ignore collisions happening over a certain height."}, {"owner": {"reputation": 29735, "user_id": 294884, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/f8675693dfeb3908195657eb3a3fdda4?s=128&d=identicon&r=PG", "display_name": "Fattie", "link": "https://stackoverflow.com/users/294884/fattie"}, "edited": false, "score": 0, "creation_date": 1456489819, "post_id": 35639380, "comment_id": 58983658, "body": "yes, when I say &quot;occlusion culling&quot; that certainly includes occlusion by the frustrum  :)  Yes, that is superbly built-in to Unity (I&#39;m a big Unity-criticizer! But it&#39;s something they do a great job on.)  Note too that LOD is absolutely built in to Unity, and again (surprisingly! heh) something they do a perfect job on. (One point - it&#39;s worth noting that, much as with PhysX - it&#39;s absolutely impossible for us to out-write the Unity guys or the PhysX guys: there is man-decades in their code but, overwhelmingly, they do it on the metal, on GPU, so we can&#39;t even get close to their performance.)"}, {"owner": {"reputation": 29735, "user_id": 294884, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/f8675693dfeb3908195657eb3a3fdda4?s=128&d=identicon&r=PG", "display_name": "Fattie", "link": "https://stackoverflow.com/users/294884/fattie"}, "edited": false, "score": 0, "creation_date": 1456489928, "post_id": 35639380, "comment_id": 58983740, "body": "Just so you know, regarding cut-aways, FYI that is very common in Unity projects.  It&#39;s just one line of code in a shader, or (if that&#39;s too much code! :) ) just as you say using a raycast it is half a line of code.  Actually it&#39;s not even half a line of code, it&#39;s &quot;.enable =&quot; so it&#39;s only nine characters of code! heh!"}, {"owner": {"reputation": 10999, "user_id": 965332, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4228616676190030d97ae35de04f37b8?s=128&d=identicon&r=PG", "display_name": "erb", "link": "https://stackoverflow.com/users/965332/erb"}, "edited": false, "score": 0, "creation_date": 1484221476, "post_id": 35639380, "comment_id": 70425959, "body": "Wow, I had the exact same idea (sparse voxel octree for a minecraft lookalike) and was curious about the use of Rust as well. What are the odds!"}], "answers": [{"comments": [{"owner": {"reputation": 75, "user_id": 1058064, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fppMf.jpg?s=128&g=1", "display_name": "djmcgill", "link": "https://stackoverflow.com/users/1058064/djmcgill"}, "edited": false, "score": 1, "creation_date": 1456477484, "post_id": 35639867, "comment_id": 58975242, "body": "Well I tried again this morning and it suddenly works now. Thanks for your help. I&#39;m guessing that the problem lay somewhere in my (still very manual) build process and so clearing everything caused it to work."}], "tags": [], "owner": {"reputation": 127444, "user_id": 492405, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/SSPGk.png?s=128&g=1", "display_name": "vcsjones", "link": "https://stackoverflow.com/users/492405/vcsjones"}, "is_accepted": true, "score": 3, "last_activity_date": 1456440578, "last_edit_date": 1456440578, "creation_date": 1456440063, "answer_id": 35639867, "question_id": 35639380, "link": "https://stackoverflow.com/questions/35639380/calling-rust-from-c-with-intptr-fails-on-enum-entrypointnotfound/35639867#35639867", "title": "Calling Rust from C# with IntPtr fails on Enum (EntryPointNotFound)", "body": "<p>I'm not able to reproduce your behavior. Here is my Rust source:</p>\n\n<pre><code>pub enum TestEnum{Test(i32)}\n\n#[no_mangle]\npub extern \"C\" fn consume_ptr(arg: *mut TestEnum) {\n    println!(\"{:?}\", arg);\n}\n</code></pre>\n\n<p>I compile it with <code>rustc --crate-type=dylib example.rs</code></p>\n\n<p>I then copied the resulting example.dll into a .NET Console application, and using this P/Invoke signature:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>[DllImport(\"example.dll\", EntryPoint = \"consume_ptr\", CallingConvention = CallingConvention.Cdecl)]\nprivate static extern void consume_ptr(int arg);\n\nstatic void Main(string[] args)\n{\n    consume_ptr(0);\n}\n</code></pre>\n\n<p>And <code>0x0</code> is printed to the console. I don't know how to properly create and Marshal a Rust enumeration from .NET, but it doesn't produce an \"EntryPointNotFoundException\", and have confirmed that it is properly exported by looking at the exports with <a href=\"http://www.dependencywalker.com\" rel=\"nofollow\">Dependency Walker</a>.</p>\n"}], "owner": {"reputation": 75, "user_id": 1058064, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fppMf.jpg?s=128&g=1", "display_name": "djmcgill", "link": "https://stackoverflow.com/users/1058064/djmcgill"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1154, "favorite_count": 0, "accepted_answer_id": 35639867, "answer_count": 1, "score": 3, "last_activity_date": 1456446265, "creation_date": 1456438192, "last_edit_date": 1456446265, "question_id": 35639380, "link": "https://stackoverflow.com/questions/35639380/calling-rust-from-c-with-intptr-fails-on-enum-entrypointnotfound", "title": "Calling Rust from C# with IntPtr fails on Enum (EntryPointNotFound)", "body": "<p>I'm trying to use the 'opaque pointer' style of FFI where the C# (Unity) code only sees my Rust type as an IntPtr that it has to pass around to various Rust functions. However I am getting EntryPointNotFound exceptions as soon as the function that I'm referencing refers to an enum.</p>\n\n<p>The two functions which <em>don't</em> refer to an enum work fine, but the function that does fails to bind apparently and throws a EntryPointNotFoundException. I've included the symbols in the dynlib (bundle) file to show that the symbol is in the file.</p>\n\n<p>I've tried without the \"C\" in <code>extern \"C\"</code> in Rust, and <code>CallingConvention=CDecl</code> and <code>CallingConvention=StdCall</code> in C# but that didn't change the situation - the int and int pointer function will run (their respective print functions indeed print), but the enum pointer function just throws EntryPointNotFoundException and \"enum pointer fine\" is never printed.</p>\n\n<h2>ptr_test.rs</h2>\n\n<pre><code>pub enum TestEnum{Test(i32)}\n\n#[no_mangle]\npub extern \"C\" fn ptr_test(arg: *mut i32) {}\n\n#[no_mangle]\npub extern \"C\" fn int_test(arg: i32) {}\n\n#[no_mangle]\npub extern \"C\" fn consume_ptr(arg: *mut TestEnum) {}\n</code></pre>\n\n<h2>RustTest.cs</h2>\n\n<pre><code>using UnityEngine;\nusing System.Collections;\nusing System;\nusing System.Runtime.InteropServices;\n\npublic class RustTest : MonoBehaviour {\n    [DllImport(\"libptr_test\")]\n    private static extern void ptr_test(IntPtr x);\n\n    [DllImport(\"libptr_test\")]\n    private static extern void int_test(int x);\n\n    [DllImport(\"libptr_test\")]\n    private static extern void consume_ptr (IntPtr x);\n\n    // Use this for initialization\n    void Start () {\n        print (\"Hello World!\");\n        ptr_test (new IntPtr (0));\n        print (\"pointer fine\");\n        int_test (0);\n        print (\"int fine\");\n        consume_ptr (new IntPtr (0));\n        print (\"enum pointer fine\");\n        print (\"Done!\");\n    }\n\n    // Update is called once per frame\n    void Update () {\n\n    }\n}\n</code></pre>\n\n<h2>nm -gU carved-unity/carved/Assets/libptr_test.bundle</h2>\n\n<pre><code>...\n00000000000009c0 T _consume_ptr\n0000000000000990 T _int_test\n0000000000000960 T _ptr_test\n...\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1456435773, "post_id": 35638504, "comment_id": 58958919, "body": "Is it possible for a race condition to happen here, where the file comes into existence after <code>access</code> but before <code>open</code>?"}, {"owner": {"reputation": 307, "user_id": 5696120, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0767b5a70eb7139a7c11856f4eb81434?s=128&d=identicon&r=PG&f=1", "display_name": "Not Important", "link": "https://stackoverflow.com/users/5696120/not-important"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456436519, "post_id": 35638504, "comment_id": 58959351, "body": "@Shepmaster Yes. And I believe I saw Coverity Scan warning about this. But, what is the alternative?"}, {"owner": {"reputation": 3306, "user_id": 3980369, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sZ3vt.jpg?s=128&g=1", "display_name": "Mathieu David", "link": "https://stackoverflow.com/users/3980369/mathieu-david"}, "edited": false, "score": 0, "creation_date": 1456439909, "post_id": 35638504, "comment_id": 58961181, "body": "Why would you need to use an unsafe function? You can check if a path exists with <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.exists\" rel=\"nofollow noreferrer\"><code>exists()</code></a> and then create the file if it doesn&#39;t."}, {"owner": {"reputation": 307, "user_id": 5696120, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0767b5a70eb7139a7c11856f4eb81434?s=128&d=identicon&r=PG&f=1", "display_name": "Not Important", "link": "https://stackoverflow.com/users/5696120/not-important"}, "reply_to_user": {"reputation": 3306, "user_id": 3980369, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sZ3vt.jpg?s=128&g=1", "display_name": "Mathieu David", "link": "https://stackoverflow.com/users/3980369/mathieu-david"}, "edited": false, "score": 0, "creation_date": 1456440487, "post_id": 35638504, "comment_id": 58961443, "body": "@MathieuDavid I didn&#39;t know <code>exists()</code> exist ;)"}, {"owner": {"reputation": 12979, "user_id": 5883, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c761536d66f497e45ba8de2267b9ead?s=128&d=identicon&r=PG", "display_name": "hwiechers", "link": "https://stackoverflow.com/users/5883/hwiechers"}, "edited": false, "score": 1, "creation_date": 1456457316, "post_id": 35638504, "comment_id": 58966781, "body": "It looks like there already an RFC to add this functionality: <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1252-open-options.md#create_new\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/&hellip;</a>"}, {"owner": {"reputation": 12979, "user_id": 5883, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c761536d66f497e45ba8de2267b9ead?s=128&d=identicon&r=PG", "display_name": "hwiechers", "link": "https://stackoverflow.com/users/5883/hwiechers"}, "edited": false, "score": 2, "creation_date": 1456457582, "post_id": 35638504, "comment_id": 58966841, "body": "It looks like this is the best way for now although it introduces a race condition and a security concern."}, {"owner": {"reputation": 1486, "user_id": 4313615, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-MbCT0y27XDo/AAAAAAAAAAI/AAAAAAAADeg/KQijoMfdBWw/photo.jpg?sz=128", "display_name": "David Roundy", "link": "https://stackoverflow.com/users/4313615/david-roundy"}, "edited": false, "score": 0, "creation_date": 1495896917, "post_id": 35638504, "comment_id": 75447145, "body": "Of course, it depends on one&#39;s reason, but the classic reason to want to do this is to create a lock file, and in that case avoiding races is the whole point."}], "tags": [], "owner": {"reputation": 307, "user_id": 5696120, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0767b5a70eb7139a7c11856f4eb81434?s=128&d=identicon&r=PG&f=1", "display_name": "Not Important", "link": "https://stackoverflow.com/users/5696120/not-important"}, "is_accepted": false, "score": 2, "last_activity_date": 1456445979, "last_edit_date": 1456445979, "creation_date": 1456434940, "answer_id": 35638504, "question_id": 35636742, "link": "https://stackoverflow.com/questions/35636742/is-there-any-way-to-create-and-open-a-file-if-it-doesnt-exist-but-fail-otherwis/35638504#35638504", "title": "Is there any way to create and open a file if it doesn&#39;t exist but fail otherwise?", "body": "<p><strong>Update:</strong> As Mathieu David pointed out in the comments. <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.exists\" rel=\"nofollow\"><code>exists()</code></a> from\n<code>std::path::Path</code> can be used to check if a path exists.</p>\n\n<p><strong>Old Answer:</strong></p>\n\n<blockquote>\n  <p>In C, checking if a file name/path exists is usually done with:</p>\n\n<pre><code>! access(filename, F_OK)\n</code></pre>\n  \n  <p><code>access</code> returns 0 if the file exists, provided that you have the needed permissions.</p>\n  \n  <p>I did a quick search for a native Rust equivalent and couldn't find anything. So, you may need to depend on <a href=\"https://doc.rust-lang.org/libc/x86_64-unknown-linux-gnu/libc/fn.access.html\" rel=\"nofollow\"><code>libc::access</code></a> for this.</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1456497029, "post_id": 35646745, "comment_id": 58988949, "body": "Exclusive open mode was added in C11 actually. <code>fopen(&quot;wx&quot;)</code>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1456497877, "post_id": 35646745, "comment_id": 58989604, "body": "@bluss: Damned, my favorite reference (<a href=\"http://en.cppreference.com/w/cpp/io/c/fopen\" rel=\"nofollow noreferrer\">en.cppreference.com/w/cpp/io/c/fopen</a>) does not mention this <code>x</code> flag."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1456500365, "post_id": 35646745, "comment_id": 58991522, "body": "They have it right if you check their <b><i>C</i></b> reference <a href=\"http://en.cppreference.com/w/c/io/fopen\" rel=\"nofollow noreferrer\">en.cppreference.com/w/c/io/fopen</a>  :-)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1456504843, "post_id": 35646745, "comment_id": 58994692, "body": "@bluss: Oh! I guess it&#39;s worth opening a RFC to add a new OpenOptions then? I&#39;ll tweak the answer anyway."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1457847742, "post_id": 35646745, "comment_id": 59588529, "body": "@MatthieuM.: The <code>OpenFile</code> function on Windows exists for backwards compatibility only; <code>CreateFile</code> is the API to use nowadays, and it does provide a way to create a file only if it doesn&#39;t already exist. I&#39;ve edited your answer with that information."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1457868726, "post_id": 35646745, "comment_id": 59593598, "body": "@FrancisGagn&#233;: Thanks!"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 4, "last_activity_date": 1457847540, "last_edit_date": 1457847540, "creation_date": 1456474870, "answer_id": 35646745, "question_id": 35636742, "link": "https://stackoverflow.com/questions/35636742/is-there-any-way-to-create-and-open-a-file-if-it-doesnt-exist-but-fail-otherwis/35646745#35646745", "title": "Is there any way to create and open a file if it doesn&#39;t exist but fail otherwise?", "body": "<p>It is possible in C11, or by using low-level OS API functions directly.</p>\n\n<p>If you use C11, <a href=\"http://en.cppreference.com/w/c/io/fopen\" rel=\"nofollow\"><code>fopen</code></a> allows you to open the file in <code>\"wx\"</code> mode.</p>\n\n<p>Otherwise, on Linux, one should pass both <code>O_CREAT</code> and <code>O_EXCL</code> to the <a href=\"http://linux.die.net/man/3/open\" rel=\"nofollow\"><code>open(3)</code></a> function. Or, on Windows, pass <code>CREATE_NEW</code> to the <code>dwCreationDisposition</code> parameter of the <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858%28v=vs.85%29.aspx\" rel=\"nofollow\"><code>CreateFile()</code></a> function.</p>\n\n<hr>\n\n<p><strong>EDIT:</strong> I originally missed the fact that the <code>open</code> function had been updated in C11.</p>\n"}, {"tags": [], "owner": {"reputation": 1486, "user_id": 4313615, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-MbCT0y27XDo/AAAAAAAAAAI/AAAAAAAADeg/KQijoMfdBWw/photo.jpg?sz=128", "display_name": "David Roundy", "link": "https://stackoverflow.com/users/4313615/david-roundy"}, "is_accepted": true, "score": 11, "last_activity_date": 1495899182, "last_edit_date": 1495899182, "creation_date": 1495897279, "answer_id": 44218350, "question_id": 35636742, "link": "https://stackoverflow.com/questions/35636742/is-there-any-way-to-create-and-open-a-file-if-it-doesnt-exist-but-fail-otherwis/44218350#44218350", "title": "Is there any way to create and open a file if it doesn&#39;t exist but fail otherwise?", "body": "<p>As of Rust 1.9.0, there is <a href=\"https://doc.rust-lang.org/std/fs/struct.OpenOptions.html#method.create_new\" rel=\"noreferrer\"><code>OpenOptions::create_new</code></a> which enables you to safely and atomically ensure that you are creating a new file, and that your command will fail otherwise. </p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539112044, "post_id": 52727558, "comment_id": 92380755, "body": "This is what <a href=\"https://stackoverflow.com/a/44218350/155423\">the accepted answer already states</a>; how does this answer differ?"}], "tags": [], "owner": {"reputation": 4684, "user_id": 1655478, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/5424ecc7236cd16441fafd0d584eb7c5?s=128&d=identicon&r=PG", "display_name": "thouliha", "link": "https://stackoverflow.com/users/1655478/thouliha"}, "is_accepted": false, "score": 3, "last_activity_date": 1539112189, "last_edit_date": 1539112189, "creation_date": 1539111030, "answer_id": 52727558, "question_id": 35636742, "link": "https://stackoverflow.com/questions/35636742/is-there-any-way-to-create-and-open-a-file-if-it-doesnt-exist-but-fail-otherwis/52727558#52727558", "title": "Is there any way to create and open a file if it doesn&#39;t exist but fail otherwise?", "body": "<p>I've found this to work best:</p>\n\n<pre><code>use std::fs;\nuse std::fs::OpenOptions;\nuse std::io::prelude::*;\n\nif Path::new(file).exists() {\n  fs::remove_file(file).unwrap();\n}\n\nFile::create(TMP_ADDS).unwrap();\n    let mut file = OpenOptions::new()\n        .create_new(true)\n        .write(true)\n        .append(true)\n        .open(file)\n        .unwrap();\n\n    if let Err(e) = writeln!(file, \"{}\", line) {\n        eprintln!(\"Couldn't write to file: {}\", e);\n    }\n</code></pre>\n"}], "owner": {"reputation": 12979, "user_id": 5883, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c761536d66f497e45ba8de2267b9ead?s=128&d=identicon&r=PG", "display_name": "hwiechers", "link": "https://stackoverflow.com/users/5883/hwiechers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5349, "favorite_count": 0, "accepted_answer_id": 44218350, "answer_count": 4, "score": 14, "last_activity_date": 1539112189, "creation_date": 1456429167, "last_edit_date": 1459076055, "question_id": 35636742, "link": "https://stackoverflow.com/questions/35636742/is-there-any-way-to-create-and-open-a-file-if-it-doesnt-exist-but-fail-otherwis", "title": "Is there any way to create and open a file if it doesn&#39;t exist but fail otherwise?", "body": "<p>It looks like <a href=\"https://doc.rust-lang.org/std/fs/struct.OpenOptions.html\" rel=\"noreferrer\"><code>OpenOptions</code></a> does not support this scenario and an existing file will either be truncated or overwritten.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1456424300, "post_id": 35634948, "comment_id": 58951896, "body": "This doesn&#39;t really seem like a narrowly-targeted question that Stack Overflow can answer. &quot;How do I implement a generic algorithm&quot; is an <i>extremely</i> broad topic. Your code, as written, looks like the definition of a factorial as I would expect. <i>To me</i>, your question reads more of a rant than a well-meaning question, but that&#39;s likely just my personal interpretation."}, {"owner": {"reputation": 1436, "user_id": 2381889, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/9db2c05b2454cb81154a180fd7792046?s=128&d=identicon&r=PG", "display_name": "Adam", "link": "https://stackoverflow.com/users/2381889/adam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1456424818, "post_id": 35634948, "comment_id": 58952209, "body": "@Shepmaster If <code>factorial</code> looks find, how about this <code>is_even</code>?"}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 2, "creation_date": 1456434487, "post_id": 35634948, "comment_id": 58958139, "body": "You could reduce the bounds by using the traits in the <a href=\"https://github.com/rust-num/num\" rel=\"nofollow noreferrer\">num crate</a> but the implementations would remain the same. How would you expect a generic implementation of is_even to look ideally?"}, {"owner": {"reputation": 1436, "user_id": 2381889, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/9db2c05b2454cb81154a180fd7792046?s=128&d=identicon&r=PG", "display_name": "Adam", "link": "https://stackoverflow.com/users/2381889/adam"}, "reply_to_user": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 0, "creation_date": 1456460487, "post_id": 35634948, "comment_id": 58967737, "body": "@PaoloFalabella It seems that there&#39;s no safe way of doing it. <code>is_even</code> looks completely like Church numerals now and how about sorting or matrix algorithms. Probably there&#39;s no easy way of implementing these stuffs without unsafe?"}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 0, "creation_date": 1456462329, "post_id": 35634948, "comment_id": 58968394, "body": "It&#39;s not a matter of not being able to do it safely, more that it&#39;s difficult to model generic numeric programming. There have been attempts and multiple discussions before. I refer you to this <a href=\"https://m.reddit.com/r/rust/comments/3wubj0/numeric_types_in_rust/\" rel=\"nofollow noreferrer\">discussion on reddit</a> that sums it up nicely"}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1456472735, "creation_date": 1456472735, "answer_id": 35646196, "question_id": 35634948, "link": "https://stackoverflow.com/questions/35634948/what-is-the-right-way-to-implement-generic-computation-algorithms-in-rust/35646196#35646196", "title": "What is the right way to implement generic computation algorithms in Rust?", "body": "<p>If I wanted to implement <code>is_even</code> I would obviously start by implementing <code>is_divisible</code> which is more generic:</p>\n\n<pre><code>#![feature(zero_one)]\n\nuse std::cmp;\nuse std::num;\nuse std::ops;\n\nfn is_divisible&lt;T&gt;(x: T, by: T) -&gt; bool\n    where T: ops::Rem&lt;Output = T&gt; + num::Zero + cmp::PartialEq\n{\n    (x % by) == T::zero()\n}\n</code></pre>\n\n<p>It seems easy enough.</p>\n\n<p>However, <code>is_even</code> has even more constraints and this is getting a bit long, so let's follow DRY:</p>\n\n<pre><code>trait Arithmetic:\n    From&lt;u8&gt; +\n    cmp::PartialEq + cmp::Eq + cmp::PartialOrd + cmp::Ord +\n    ops::Add&lt;Self, Output = Self&gt; + ops::Sub&lt;Self, Output = Self&gt; +\n    ops::Mul&lt;Self, Output = Self&gt; + ops::Div&lt;Self, Output = Self&gt; + ops::Rem&lt;Self, Output = Self&gt; {}\n\nimpl&lt;T&gt; Arithmetic for T\n    where T: From&lt;u8&gt; +\n             cmp::PartialEq + cmp::Eq + cmp::PartialOrd + cmp::Ord +\n             ops::Add&lt;T, Output = T&gt; + ops::Sub&lt;T, Output = T&gt; +\n             ops::Mul&lt;T, Output = T&gt; + ops::Div&lt;T, Output = T&gt; + ops::Rem&lt;T, Output = T&gt;\n {}\n</code></pre>\n\n<p>Alright, this trait should cover us. Mind that it's missing a <code>ops::Neg</code> bound because this bound is not implemented for unsigned traits; so if we need <code>Neg</code> we'll have to add it; but it's easy enough.</p>\n\n<p>As for the issue about constants, well indeed working your way from <code>zero</code> upwards is insane. It's quite the reason why the <code>Zero</code> and <code>One</code> traits are still unstable.</p>\n\n<p>The generic conversion traits are <code>convert::From</code> and <code>convert::Into</code>, and that is what one would use.</p>\n\n<p>So let us reformulate <code>is_divisible</code>, and finally implement <code>is_even</code>:</p>\n\n<pre><code>fn is_divisible&lt;T&gt;(x: T, by: T) -&gt; bool\n    where T: Arithmetic\n{\n    (x % by) == 0.into()\n}\n\nfn is_even&lt;T&gt;(x: T) -&gt; bool\n    where T: Arithmetic\n{\n    is_divisible(x, 2.into())\n}\n</code></pre>\n\n<p>And really, those two functions seem both perfectly clear whilst still being generic.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=cf63456afd343144c7e6&amp;version=stable\" rel=\"nofollow\">Full code here</a></p>\n\n<hr>\n\n<p>Now, we might argue that creating this <code>Arithmetic</code> trait is a long-winded way of getting to <code>is_even</code>. It is. However:</p>\n\n<ul>\n<li>if you only need <code>is_even</code>, obviously you care little if it takes 6 bounds; it's a one off</li>\n<li>if you need multiple generic functions working on numerics, then the small cost of creating this trait and function are negligible in the grand scheme of things</li>\n</ul>\n\n<p>In short, it works. And it's really not that onerous.</p>\n"}], "owner": {"reputation": 1436, "user_id": 2381889, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/9db2c05b2454cb81154a180fd7792046?s=128&d=identicon&r=PG", "display_name": "Adam", "link": "https://stackoverflow.com/users/2381889/adam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 728, "favorite_count": 0, "accepted_answer_id": 35646196, "answer_count": 1, "score": 0, "last_activity_date": 1456472735, "creation_date": 1456423630, "last_edit_date": 1456424703, "question_id": 35634948, "link": "https://stackoverflow.com/questions/35634948/what-is-the-right-way-to-implement-generic-computation-algorithms-in-rust", "title": "What is the right way to implement generic computation algorithms in Rust?", "body": "<p>It is quite a nuisance to implement a generic computation algorithm in Rust. It feels like I am reinventing all the stuff not in the algorithm, but in the codomain of Church numerals.</p>\n\n<p>For example, here's an implementation of <code>factorial</code> that works in Rust 1.7:</p>\n\n<pre><code>#![feature(zero_one)]\n\nuse std::num::{One, Zero};\nuse std::ops::{Sub, Mul};\nuse std::cmp::Eq;\n\nfn fact&lt;T&gt;(n: T) -&gt; T\n    where T: Clone + Eq + Zero + One + Mul&lt;T, Output = T&gt; + Sub&lt;T, Output = T&gt;\n{\n    if n == T::zero() {\n        T::one()\n    } else {\n        fact(n.clone() - T::one()) * n\n    }\n}\n\nfn main() {\n    println!(\"{}\", fact(10));\n}\n</code></pre>\n\n<p>Is there any right way of doing this? Is there any discussion going on with it?</p>\n\n<hr>\n\n<p>Probably <code>factorial</code> is not good example, let's try <code>is_even</code>:</p>\n\n<pre><code>fn is_even&lt;T&gt;(x: T) -&gt; bool\n    where T: std::ops::Rem&lt;Output = T&gt; + std::ops::Add&lt;T, Output=T&gt; + std::num::One + std::num::Zero + std::cmp::PartialEq\n{\n    let two = T::one() + T::one();\n    (x % two) == T::zero()\n}\n</code></pre>\n\n<p>If you want a <code>two</code> stuff, you must reimplement two.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 2289, "user_id": 1454653, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/FvI1V.jpg?s=128&g=1", "display_name": "dragostis", "link": "https://stackoverflow.com/users/1454653/dragostis"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456423049, "post_id": 35633807, "comment_id": 58951151, "body": "@Shepmaster I need this for <code>fn description(&amp;self) -&gt; &amp;str</code> in the Error trait."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1456423276, "post_id": 35633807, "comment_id": 58951298, "body": "I understand, but that doesn&#39;t change the fact that you cannot do it (for all the reasons in the duplicate). Perhaps you&#39;d also be interested in <a href=\"http://stackoverflow.com/q/29781331/155423\">stackoverflow.com/q/29781331/155423</a>."}], "owner": {"reputation": 2289, "user_id": 1454653, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/FvI1V.jpg?s=128&g=1", "display_name": "dragostis", "link": "https://stackoverflow.com/users/1454653/dragostis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 23, "favorite_count": 0, "closed_date": 1456422236, "answer_count": 0, "score": 0, "last_activity_date": 1456422191, "creation_date": 1456420166, "last_edit_date": 1456422191, "question_id": 35633807, "link": "https://stackoverflow.com/questions/35633807/borrow-issue-returning-format-in-pattern", "closed_reason": "Duplicate", "title": "Borrow issue returning &amp;format! in pattern", "body": "<p>I'm trying to return the result of a <code>format!</code> after pattern matching an <code>enum</code>:</p>\n\n<pre><code>enum Enm {\n    Cont(String)\n}\n\nfn call(enm: &amp;Enm) -&gt; &amp;str {\n    match *enm {\n        Enm::Cont(ref s) =&gt; &amp;format!(\"{}\", s)\n    }\n}\n\nfn main() {\n\n}\n</code></pre>\n\n<p>But this won't work: <code>borrowed value does not live long enough</code></p>\n\n<p>How can I solve this?</p>\n"}, {"tags": ["algorithm", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1456419487, "post_id": 35632920, "comment_id": 58948782, "body": "Please create an <a href=\"/help/mcve\">MCVE</a> that reproduces your problem, and <i>include</i> that code here in your post. Please note the <b>Minimal</b> part of MCVE; don&#39;t just paste in your entire program. Ideally, reduce it to something that can run on the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playground</a>."}, {"owner": {"reputation": 153, "user_id": 4492898, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/c09e98d4f63509bbf1a9da25ff46a3e3?s=128&d=identicon&r=PG&f=1", "display_name": "arynhard", "link": "https://stackoverflow.com/users/4492898/arynhard"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456420099, "post_id": 35632920, "comment_id": 58949225, "body": "@Shepmaster Can I use external crates on Rust Playground?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456422168, "post_id": 35632920, "comment_id": 58950596, "body": "Sadly, you cannot use external crates. It&#39;s certainly not <i>required</i> to run on the Playground; it&#39;s just very convenient if you can. If the crates are your own, then maybe try copy-pasting the important parts. It&#39;s also possible that when you minimize the code, those crates won&#39;t be needed anymore. To restate - it&#39;s absolutely OK to use external crates if they are crucial to reproducing your problem."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1456440639, "post_id": 35632920, "comment_id": 58961523, "body": "Have you tried running it on a tiny example set of data? e.g. <code>detect(&amp;vec![0, 1, 0])</code>. (BTW, <code>&amp;Vec&lt;T&gt;</code> is pointless: use <code>&amp;[T]</code> if you only need a borrow, or <code>Vec&lt;T&gt;</code> if you need ownership. <code>&amp;Vec</code> can be borrowed to <code>&amp;[]</code> and in fact does it implicitly, so the latter is strictly more flexible than the latter.)"}], "owner": {"reputation": 153, "user_id": 4492898, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/c09e98d4f63509bbf1a9da25ff46a3e3?s=128&d=identicon&r=PG&f=1", "display_name": "arynhard", "link": "https://stackoverflow.com/users/4492898/arynhard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 316, "favorite_count": 1, "answer_count": 0, "score": 0, "last_activity_date": 1456417670, "creation_date": 1456417670, "question_id": 35632920, "link": "https://stackoverflow.com/questions/35632920/ampd-algorithm-qrs-peak-detection-off-slightly", "title": "AMPD algorithm QRS peak detection off slightly", "body": "<p>I have implemented the <a href=\"https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=3&amp;ved=0ahUKEwiOn9Cem5PLAhXDQCYKHUWsDC0QFggxMAI&amp;url=http%3A%2F%2Fwww.mdpi.com%2F1999-4893%2F5%2F4%2F588%2Fpdf&amp;usg=AFQjCNEeU4Ylz-RzzIkJh12ekr36I-3EDA\" rel=\"nofollow noreferrer\">AMPD peak detection algorithm</a> in Rust. The source code can be found <a href=\"https://github.com/adaptium/peak/blob/develop/src/ampd.rs\" rel=\"nofollow noreferrer\">here</a>. From the figure you can see that the peak detection is close but not exact: </p>\n\n<pre><code>Black = peak detected, Orange/Red = ECG\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/0WR8B.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/0WR8B.png\" alt=\"Black = peak detected, Orange/Red = ECG\"></a></p>\n\n<p>This seems to be causing problems when I find the HRV of ECG data from <a href=\"http://physionet.org\" rel=\"nofollow noreferrer\">physionet.org</a>. With <a href=\"https://physionet.org/tutorials/hrv-toolkit/\" rel=\"nofollow noreferrer\">HRV toolkit</a> the rMSSD and SDNN are:</p>\n\n<pre><code>$ get_hrv -M chfdb/chf03 ecg 0:00:00 0:01:00\nchfdb/chf03 :\n...\nSDNN     = 31.727\n...\nrMSSD    = 53.1993\n...\n</code></pre>\n\n<p>Using the same 1 minute range of data I find the peaks using my implementation of AMPD, the RR-intervals from these peaks, and then the rMSSD and SDNN:</p>\n\n<pre><code>SDNN = 122.23032809963584 msec \nrMSSD = 173.6491690112714 msec\n</code></pre>\n\n<p>I have confirmed that my SDNN, and rMSSD calculations are correct by using the RR-interval data from HRV Toolkit and substituting these into my rMSSD and SDNN implementation:</p>\n\n<pre><code>$ rrlist ecg chfdb/chf03 -s -f 00:00:00 -t 00:01:00\nSeconds RR\n1.356 0.952 N\n2.312 0.956 N\n3.252 0.940 N\n4.212 0.960 N\n5.156 0.944 N\n6.112 0.956 N\n7.048 0.936 N\n7.996 0.948 N\n8.960 0.964 N\n9.900 0.940 N\n10.872 0.972 N\n11.820 0.948 N\n12.772 0.952 N\n13.716 0.944 N\n14.656 0.940 N\n15.604 0.948 N\n16.544 0.940 N\n17.492 0.948 N\n18.436 0.944 N\n19.388 0.952 N\n20.332 0.944 N\n21.276 0.944 N\n22.056 0.780 N\n23.164 1.108 N\n24.096 0.932 N\n25.028 0.932 N\n25.960 0.932 N\n26.900 0.940 N\n27.836 0.936 N\n28.768 0.932 N\n29.696 0.928 N\n30.616 0.920 N\n31.544 0.928 N\n32.484 0.940 N\n33.408 0.924 N\n34.348 0.940 N\n35.276 0.928 N\n36.208 0.932 N\n37.136 0.928 N\n38.060 0.924 N\n38.988 0.928 N\n39.924 0.936 N\n40.852 0.928 N\n41.784 0.932 N\n42.712 0.928 N\n43.648 0.936 N\n44.572 0.924 N\n45.500 0.928 N\n46.420 0.920 N\n47.352 0.932 N\n48.296 0.944 N\n49.220 0.924 N\n50.156 0.936 N\n51.088 0.932 N\n52.012 0.924 N\n52.940 0.928 N\n53.864 0.924 N\n54.796 0.932 N\n55.728 0.932 N\n56.652 0.924 N\n57.580 0.928 N\n58.504 0.924 N\n59.436 0.932 N\n</code></pre>\n\n<p>I get close enough to the same values from HRV Toolkit:</p>\n\n<pre><code>rMSSD = 52.77095975580117 msec\nSDNN = 31.528528844213298 msec \n</code></pre>\n\n<p>I have also ruled out that my RR-Interval calculation is wrong. The output is comparable to the output from the above <code>rrlist</code>:</p>\n\n<pre><code>Seconds RR\n1.36    0.952\n2.312   0.944\n3.256   0.96\n4.216   0.944\n5.16    0.952\n6.112   0.94\n7.052   0.948\n8   0.96\n8.96    0.944\n9.904   0.964\n10.868  0.952\n11.82   0.952\n12.772  0.944\n13.716  0.94\n14.656  0.948\n15.604  0.944\n16.548  0.944\n17.492  0.948\n18.44   0.948\n19.388  0.952\n20.34   0.94\n21.28   1.88\n23.16   0.936\n24.096  0.936\n25.032  0.932\n25.964  0.936\n26.9    0.936\n27.836  0.932\n28.768  0.928\n29.696  0.916\n30.612  0.932\n31.544  0.94\n32.484  0.928\n33.412  0.936\n34.348  0.928\n35.276  0.932\n36.208  0.924\n37.132  0.924\n38.056  0.936\n38.992  0.928\n39.92   0.932\n40.852  0.936\n41.788  0.928\n42.716  0.932\n43.648  0.928\n44.576  0.924\n45.5    0.924\n46.424  0.932\n47.356  0.94\n48.296  0.924\n49.22   0.932\n50.152  0.936\n51.088  0.924\n52.012  0.932\n52.944  0.924\n53.868  0.928\n54.796  0.936\n55.732  0.924\n56.656  0.928\n57.584  0.924\n</code></pre>\n\n<p>So I am left to think that the peak detection is the source of the faulty HRV numbers. How can I improve upon the current implementation to get a more reliable peak detection?</p>\n"}, {"tags": ["matrix", "vector", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456416811, "post_id": 35630131, "comment_id": 58946687, "body": "See also <a href=\"http://stackoverflow.com/q/25151890/155423\">stackoverflow.com/q/25151890/155423</a> or <a href=\"http://stackoverflow.com/q/13102786/155423\">stackoverflow.com/q/13102786/155423</a>."}], "answers": [{"comments": [{"owner": {"reputation": 83, "user_id": 4673958, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a23920bcb572c84b311b0ed0d402629?s=128&d=identicon&r=PG&f=1", "display_name": "Ian Fleming", "link": "https://stackoverflow.com/users/4673958/ian-fleming"}, "edited": false, "score": 0, "creation_date": 1456413041, "post_id": 35630690, "comment_id": 58943578, "body": "A couple of things...  1) Thanks for your help! I appreciate the prompt and thorough response. 2) Sorry if there was confusion regarding the tripple m1&#39;s. I didn&#39;t actual intend on doing it that way, but I didn&#39;t want to create extra variables and add extra noise to the example. 3) I only chose to nest vectors because the homework assignment I found online (&lt;-gotta love nice cheap practice problems) required this.  Thanks again"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 6, "last_activity_date": 1535566141, "last_edit_date": 1535566141, "creation_date": 1456412019, "answer_id": 35630690, "question_id": 35630131, "link": "https://stackoverflow.com/questions/35630131/creating-a-vector-of-vectors-in-rust/35630690#35630690", "title": "Creating a Vector of Vectors in Rust", "body": "<blockquote>\n  <p>How is <code>m2</code> different than <code>m3</code> ...</p>\n</blockquote>\n\n<p>Check the types step by step. <code>m1</code> is of type <code>Vec&lt;isize&gt;</code> (it could be any other integer type as well, but I assume it's <code>isize</code> for now). Why? Because the elements in the <code>vec![]</code> macro are of type <code>isize</code>. Now you are creating <code>m2</code>:</p>\n\n<pre><code>let m2 = vec![&amp;m1, &amp;m1, &amp;m1];\n</code></pre>\n\n<p>What is the type of the elements in this macro? Well we already said <code>m1</code> has the type <code>Vec&lt;isize&gt;</code>, so <code>&amp;m1</code> has the type <code>&amp;Vec&lt;isize&gt;</code>. So the resulting type of <code>m2</code> is <code>Vec&lt;&amp;Vec&lt;isize&gt;&gt;</code> (a vector full of <strong>references</strong> to other vectors).</p>\n\n<p>However, <code>m3</code> is of type <code>Vec&lt;Vec&lt;isize&gt;&gt;</code>, since the elements in the (outer) <code>vec![]</code> macro are of type <code>Vec&lt;isize&gt;</code> (no reference!).</p>\n\n<p><em>Hint</em>: <a href=\"https://stackoverflow.com/q/21747136/155423\">to easily check the type of any variable</a> (such as <code>foo</code>), type:</p>\n\n<pre><code>let _: () = foo;\n</code></pre>\n\n<p>This will result in a compiler error that tells you the type of <code>foo</code>.</p>\n\n<blockquote>\n  <p>... such that <code>m3</code> causes no issues, but <code>m2</code> prevents compilation?</p>\n</blockquote>\n\n<p>Now that we know the types of <code>m2</code> and <code>m3</code>, lets look at the loops. <code>for</code> loops work by accepting something that implements <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a>. You are passing <code>&amp;m2</code>, which is of type <code>&amp;Vec&lt;&amp;Vec&lt;isize&gt;&gt;</code> (note the <em>two</em> references). <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">We can see</a>, that <code>IntoIterator</code> is indeed implemented for a reference to a vector:</p>\n\n<pre><code>impl&lt;T&gt; IntoIterator for &amp;Vec&lt;T&gt; {\n    type Item = &amp;T\n    // ...\n}\n</code></pre>\n\n<p>This means that you get an iterator that spits out references to the inner type <code>T</code> (<code>type Item = &amp;T</code>). Our inner type of <code>m2</code> is <code>&amp;Vec&lt;isize&gt;</code>, so we will get items of type <code>&amp;&amp;Vec&lt;isize&gt;</code> (two references!). Your variable <code>i</code> has this exact type.</p>\n\n<p>Then you want to iterate again with this inner loop:</p>\n\n<pre><code>for j in i { ... }\n</code></pre>\n\n<p>But <code>i</code> has this double-reference type and there isn't an implementation of <code>IntoIterator</code> for that type. To iterate it, you have to either dereference it like:</p>\n\n<pre><code>for j in *i { ... }\n</code></pre>\n\n<p>Or even better: make <code>i</code> be of the type <code>&amp;Vec&lt;isize&gt;</code> (one reference!) by stripping it away with pattern matching in the outer loop:</p>\n\n<pre><code>for &amp;i in &amp;m2 { ... }\n</code></pre>\n\n<p>Your <code>m3</code> loop does the same, but since <code>m3</code> is of another type (with one reference less), it works (I hope you can see why).</p>\n\n<hr>\n\n<blockquote>\n  <p>Is there an easier way to create a vector of vector of... to any desired depth</p>\n</blockquote>\n\n<p>Even if <code>m2</code> worked, it wouldn't hold the same values as <code>m3</code>. To make <code>m2</code> of the type <code>Vec&lt;Vec&lt;isize&gt;&gt;</code> (like <code>m3</code>), you should <code>clone</code> <code>m1</code> instead of taking a reference to it. </p>\n\n<pre><code>let m2 = vec![m1.clone(), m1.clone(), m1.clone()];\n</code></pre>\n\n<p>We can do even better by using the <code>vec![_; _]</code> form of the macro:</p>\n\n<pre><code>let m2 = vec![m1; 3];   // three times the value of `m1`\n</code></pre>\n\n<p>As a last note, you should consider <em>not</em> using nested <code>Vec</code>s. The nesting creates overhead because the values are spread over the whole memory instead of being in one place. </p>\n"}], "owner": {"reputation": 83, "user_id": 4673958, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a23920bcb572c84b311b0ed0d402629?s=128&d=identicon&r=PG&f=1", "display_name": "Ian Fleming", "link": "https://stackoverflow.com/users/4673958/ian-fleming"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9354, "favorite_count": 2, "accepted_answer_id": 35630690, "answer_count": 1, "score": 8, "last_activity_date": 1535566141, "creation_date": 1456410628, "last_edit_date": 1535565950, "question_id": 35630131, "link": "https://stackoverflow.com/questions/35630131/creating-a-vector-of-vectors-in-rust", "title": "Creating a Vector of Vectors in Rust", "body": "<p>This code won't compile:</p>\n\n<pre><code>fn main() {\n    let m1 = vec![1, 2, 3];\n    let m2 = vec![&amp;m1, &amp;m1, &amp;m1];\n    let m3 = vec![vec![1, 2, 3], vec![4, 5, 6], vec![7, 8, 9]];\n\n    for i in &amp;m2 {\n        for j in i {\n            println!(\"{}\", j);\n        }\n    }\n\n    for i in &amp;m3 {\n        for j in i {\n            println!(\"{}\", j);\n        }\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;&amp;std::vec::Vec&lt;{integer}&gt;: std::iter::Iterator` is not satisfied\n --&gt; src/main.rs:8:18\n  |\n8 |         for j in i {\n  |                  ^ `&amp;&amp;std::vec::Vec&lt;{integer}&gt;` is not an iterator; maybe try calling `.iter()` or a similar method\n  |\n  = help: the trait `std::iter::Iterator` is not implemented for `&amp;&amp;std::vec::Vec&lt;{integer}&gt;`\n  = note: required by `std::iter::IntoIterator::into_iter`\n</code></pre>\n\n<ol>\n<li><p>How is <code>m2</code> different than <code>m3</code> such that <code>m3</code> causes no issues, but <code>m2</code> prevents compilation?</p></li>\n<li><p>Is there an easier way to create a vector of vector of... to any desired depth? The way I have it working (<code>m3</code>) seems so clunky.</p></li>\n</ol>\n"}, {"tags": ["string", "reference", "iterator", "rust", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1456407856, "post_id": 35626122, "comment_id": 58939375, "body": "<i>working on references is more efficient than taking a full <code>String</code></i> maybe, maybe not; it&#39;s really more about how you use the strings. If you convert the  <code>&amp;str</code> into a <code>String</code> later and throw away the <code>Vec&lt;String&gt;</code>, then it would be better to just sample the <code>String</code>s directly. If you did need references to the items, I&#39;d probably write the code similar to yours: <code>rand::sample(rng, words.iter().map(AsRef::as_ref), 4)</code>."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1456409762, "post_id": 35626122, "comment_id": 58940820, "body": "IMHO your <code>random_words</code> doesn&#39;t do anything useful, you should use <code>rand::sample</code> directly."}], "answers": [{"comments": [{"owner": {"reputation": 31254, "user_id": 355252, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/2z2gH.png?s=128&g=1", "display_name": "lunaryorn", "link": "https://stackoverflow.com/users/355252/lunaryorn"}, "edited": false, "score": 0, "creation_date": 1456412062, "post_id": 35626785, "comment_id": 58942708, "body": "How would the implementation look like then?  I tried various things but I can&#39;t get any variant of the body in my question past the borrow checker."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 31254, "user_id": 355252, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/2z2gH.png?s=128&g=1", "display_name": "lunaryorn", "link": "https://stackoverflow.com/users/355252/lunaryorn"}, "edited": false, "score": 0, "creation_date": 1456412765, "post_id": 35626785, "comment_id": 58943340, "body": "have you tried something like <code>rand::sample(rng, words.map(AsRef::as_ref), n)</code> ?"}, {"owner": {"reputation": 31254, "user_id": 355252, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/2z2gH.png?s=128&g=1", "display_name": "lunaryorn", "link": "https://stackoverflow.com/users/355252/lunaryorn"}, "edited": false, "score": 0, "creation_date": 1456413050, "post_id": 35626785, "comment_id": 58943583, "body": "That&#39;s a type error, unfortunately.  I&#39;m sorry, but I&#39;m pretty new to Rust, and need a lot of hand-holding still."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 31254, "user_id": 355252, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/2z2gH.png?s=128&g=1", "display_name": "lunaryorn", "link": "https://stackoverflow.com/users/355252/lunaryorn"}, "edited": false, "score": 0, "creation_date": 1456414809, "post_id": 35626785, "comment_id": 58945030, "body": "Yea, the problem was that <code>Item</code> needs to be reference, too. I updated the code together with the <code>rand::sample</code> call"}, {"owner": {"reputation": 31254, "user_id": 355252, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/2z2gH.png?s=128&g=1", "display_name": "lunaryorn", "link": "https://stackoverflow.com/users/355252/lunaryorn"}, "edited": false, "score": 0, "creation_date": 1456415851, "post_id": 35626785, "comment_id": 58945893, "body": "Thank you very much!  It builds, now give me two days to understand what&#39;s going on ;)"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 8, "last_activity_date": 1510932078, "last_edit_date": 1510932078, "creation_date": 1456401883, "answer_id": 35626785, "question_id": 35626122, "link": "https://stackoverflow.com/questions/35626122/passing-vecstring-as-intoiteratora-str/35626785#35626785", "title": "Passing Vec&lt;String&gt; as IntoIterator&lt;&amp;&#39;a str&gt;", "body": "<p>You can change your generic function to take anything that can be turned into a <code>&amp;str</code> instead of having it take an iterator that yields a <code>&amp;str</code>:</p>\n\n<pre><code>pub fn random_words&lt;'a, I, R, J&gt;(rng: &amp;mut R, n: usize, words: I) -&gt; Vec&lt;&amp;'a str&gt;\nwhere\n    I: IntoIterator&lt;Item = &amp;'a J&gt;,\n    J: AsRef&lt;str&gt; + 'a,\n    R: rand::Rng,\n{\n    rand::sample(rng, words.into_iter().map(AsRef::as_ref), n)\n}\n</code></pre>\n\n\n\n<pre><code>let words: Vec&lt;&amp;str&gt; = random_words(&amp;mut rng, 4, &amp;wordlist);\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/book/first-edition/borrow-and-asref.html\" rel=\"nofollow noreferrer\">The Book even has an entire chapter devoted to this topic</a></p>\n"}], "owner": {"reputation": 31254, "user_id": 355252, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/2z2gH.png?s=128&g=1", "display_name": "lunaryorn", "link": "https://stackoverflow.com/users/355252/lunaryorn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 920, "favorite_count": 0, "accepted_answer_id": 35626785, "answer_count": 1, "score": 6, "last_activity_date": 1510932078, "creation_date": 1456400072, "last_edit_date": 1510931951, "question_id": 35626122, "link": "https://stackoverflow.com/questions/35626122/passing-vecstring-as-intoiteratora-str", "title": "Passing Vec&lt;String&gt; as IntoIterator&lt;&amp;&#39;a str&gt;", "body": "<p>I have a function that is supposed to pick random words from a list of words:</p>\n\n<pre><code>pub fn random_words&lt;'a, I, R&gt;(rng: &amp;mut R, n: usize, words: I) -&gt; Vec&lt;&amp;'a str&gt;\nwhere\n    I: IntoIterator&lt;Item = &amp;'a str&gt;,\n    R: rand::Rng,\n{\n    rand::sample(rng, words.into_iter(), n)\n}\n</code></pre>\n\n<p>Presumably that's a reasonable signature: Since I don't actually need the string itself in the function, working on references is more efficient than taking a full <code>String</code>.</p>\n\n<p>How do I elegantly and efficiently pass a <code>Vec&lt;String&gt;</code> with words that my program reads from a file to this function?  I got as far as this:</p>\n\n<pre><code>extern crate rand;\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let wordlist: Vec&lt;String&gt; = vec![\"a\".to_string(), \"b\".to_string()];\n\n    let words = random_words(&amp;mut rng, 4, wordlist.iter().map(|s| s.as_ref()));\n}\n</code></pre>\n\n<p>Is that the proper way?  Can I write this without explicitly mapping over the list of words to get a reference?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1456404194, "post_id": 35626006, "comment_id": 58936705, "body": "Is there any reason you can&#39;t just copy <code>p1</code> and <code>p2</code> out of <code>my_struct</code>?  They&#39;re just weirdly typed integers, after all..."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1456406697, "post_id": 35626006, "comment_id": 58938551, "body": "Then you&#39;d have to move the <code>RefCell</code> onto the <code>hm</code> field and then <code>p1</code> and <code>p2</code> can&#39;t be modified anymore."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1456420011, "post_id": 35626006, "comment_id": 58949161, "body": "BTW, the Box around the HashMap is almost certainly pointless, you can just store the HashMap directly."}, {"owner": {"reputation": 2289, "user_id": 1454653, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/FvI1V.jpg?s=128&g=1", "display_name": "dragostis", "link": "https://stackoverflow.com/users/1454653/dragostis"}, "edited": false, "score": 0, "creation_date": 1456420038, "post_id": 35626006, "comment_id": 58949181, "body": "@delnan Was thinking about that."}], "answers": [{"comments": [{"owner": {"reputation": 2289, "user_id": 1454653, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/FvI1V.jpg?s=128&g=1", "display_name": "dragostis", "link": "https://stackoverflow.com/users/1454653/dragostis"}, "edited": false, "score": 0, "creation_date": 1456404374, "post_id": 35627670, "comment_id": 58936836, "body": "Calling <code>borrow()</code> twice is not the issue, but this does work."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 5, "last_activity_date": 1456404859, "last_edit_date": 1456404859, "creation_date": 1456404187, "answer_id": 35627670, "question_id": 35626006, "link": "https://stackoverflow.com/questions/35626006/how-can-i-work-around-a-refcell-issue/35627670#35627670", "title": "How can I work around a RefCell issue?", "body": "<p>Your issue is that calling <code>borrow()</code> in the arguments of the <code>c_call</code> call will borrow the object until the call finishes. If you change that to</p>\n\n<pre><code>let (p1, p2) = {\n    let x = my_struct.borrow();\n    (x.p1, x.p2)\n};\nc_call(p1, p2, my_struct.clone());\n</code></pre>\n\n<p>Then the borrow ends before the <code>c_call</code> call, so <code>c_call</code> can <code>borrow_mut</code> your object, too.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1456412347, "creation_date": 1456412347, "answer_id": 35630849, "question_id": 35626006, "link": "https://stackoverflow.com/questions/35626006/how-can-i-work-around-a-refcell-issue/35630849#35630849", "title": "How can I work around a RefCell issue?", "body": "<p>Rust handles borrowing different fields of a single <code>struct</code> just fine, however in order to see this all fields must be borrowed in the same lexical item (a single function, for example).</p>\n\n<p>You thus have at least two avenues for proceeding:</p>\n\n<ul>\n<li>refactor your borrows so that you pick the <code>struct</code> apart in a single place, getting references to each of its fields</li>\n<li>refactor your borrows so that the first one ends before the second one is needed</li>\n</ul>\n\n<p>Depending on your situation, which solution you pick will differ:</p>\n\n<ul>\n<li>picking the <code>struct</code> apart means being able to pass a reference to the field instead of the whole <code>struct</code></li>\n<li>ending the borrow first means being able to copy the data of the borrowed fields instead of keeping a reference</li>\n</ul>\n"}], "owner": {"reputation": 2289, "user_id": 1454653, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/FvI1V.jpg?s=128&g=1", "display_name": "dragostis", "link": "https://stackoverflow.com/users/1454653/dragostis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 371, "favorite_count": 0, "accepted_answer_id": 35627670, "answer_count": 2, "score": 0, "last_activity_date": 1456412347, "creation_date": 1456399714, "last_edit_date": 1456408006, "question_id": 35626006, "link": "https://stackoverflow.com/questions/35626006/how-can-i-work-around-a-refcell-issue", "title": "How can I work around a RefCell issue?", "body": "<p>I have a struct with two C pointers and one Rust <code>HashMap</code>.</p>\n\n<pre><code>struct MyStruct {\n    p1: *mut ...,\n    p2: *mut ...,\n    hm: Box&lt;HashMap&lt;...&gt;&gt;\n}\n</code></pre>\n\n<p>My struct gets handled as an <code>Rc&lt;RefCell&lt;MyStruct&gt;&gt;</code> and I have a C function that gets called like this:</p>\n\n<pre><code>c_call(my_struct.borrow().p1, my_struct.borrow().p2);\n</code></pre>\n\n<p>C has a Rust callback that gets called during the execution of <code>c_call</code> that requires a <code>my_struct.borrow_mut()</code>, but <code>my_struct</code> is already borrowed for <code>c_call</code> which needs <code>p1</code> and <code>p2</code>, so I get <code>RefCell&lt;T&gt; already borrowed</code>.</p>\n\n<p>The problem is that <code>c_call</code> can't be changed and it needs immutable access to <code>p1</code> and <code>p2</code> and some <code>borrow_mut</code> of <code>my_struct</code>. </p>\n\n<p>Here's an MCVE:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::collections::HashMap;\nuse std::mem::uninitialized;\nuse std::os::raw::c_void;\nuse std::rc::Rc;\n\nstruct MyStruct {\n    p1: *mut c_void,\n    p2: *mut c_void,\n    hm: Box&lt;HashMap&lt;String, String&gt;&gt;\n}\n\n// c_call can't mutate hm because my_struct is already borrowed\n// c_call can't be changed\nfn c_call(_p1: *mut c_void, _p2: *mut c_void, my_struct: Rc&lt;RefCell&lt;MyStruct&gt;&gt;) {\n    my_struct.borrow_mut().hm.insert(\"hey\".to_string(), \"you\".to_string());\n}\n\n// call only receives Rc&lt;RefCell&lt;MyStruct&gt;&gt; and need to call c_call\nfn call(my_struct: Rc&lt;RefCell&lt;MyStruct&gt;&gt;) {\n    c_call(my_struct.borrow().p1, my_struct.borrow().p2, my_struct.clone());\n}\n\nfn main() {\n    unsafe {\n        let my_struct = MyStruct {\n            p1: uninitialized::&lt;*mut c_void&gt;(), // irrelevant\n            p2: uninitialized::&lt;*mut c_void&gt;(),\n            hm: Box::new(HashMap::new())\n        };\n\n        let my_struct = Rc::new(RefCell::new(my_struct));\n\n        call(my_struct);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"http://is.gd/uxd3Is\" rel=\"nofollow\">Playpen</a>)</p>\n\n<p>How can I work around this issue?</p>\n"}]