[{"tags": ["image", "rust", "mutable"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1539768495, "post_id": 52851425, "comment_id": 92618541, "body": "It may help (in this example) to remove <code>_mut</code> from <code>enumerate_pixels_mut()</code>, because you don&#39;t need mutable access, but this is propaly due the lack of a MCVE ;)"}, {"owner": {"reputation": 99, "user_id": 5601922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/210b41b3dd09708bffbec97ab71b90d1?s=128&d=identicon&r=PG&f=1", "display_name": "Spoutnovitch", "link": "https://stackoverflow.com/users/5601922/spoutnovitch"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539771040, "post_id": 52851425, "comment_id": 92620016, "body": "MCVE added, and I indeed need a mutable access to the pixel !"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1539774194, "post_id": 52851425, "comment_id": 92621802, "body": "This is <b>not</b> an MCVE. If I put this straight into my rust compiler, it won&#39;t compile.  where does <code>ImageBuffer</code> come from? What is the external crate? In short, you can&#39;t get the pixel while you are iterating over it mutably. Split iterating and modifing the image."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539774420, "post_id": 52851425, "comment_id": 92621942, "body": "@hellow The crate is Piston&#39;s <code>image</code> crate."}, {"owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 1, "creation_date": 1539774607, "post_id": 52851425, "comment_id": 92622066, "body": "A possible workaround is to have a loop over X and Y coordinates and use <code>get_pixel</code> and <code>put_pixel</code> functions instead of using <code>enumerate_pixels_mut</code>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539777176, "post_id": 52851425, "comment_id": 92623575, "body": "Your code don&#39;t make sense, you erase each time your previous value of pixel, please include a true <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and the purpose of this code."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1539783411, "post_id": 52851425, "comment_id": 92627545, "body": "As @Stargateur mentioned, writing on <code>*pixel</code> a value that depends on pixels from the same image buffer will influence subsequent reads, and as such might not be what you want."}], "owner": {"reputation": 99, "user_id": 5601922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/210b41b3dd09708bffbec97ab71b90d1?s=128&d=identicon&r=PG&f=1", "display_name": "Spoutnovitch", "link": "https://stackoverflow.com/users/5601922/spoutnovitch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 116, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1539783288, "creation_date": 1539768182, "last_edit_date": 1539783288, "question_id": 52851425, "link": "https://stackoverflow.com/questions/52851425/immutable-borrows-inside-mutable-borrow", "title": "Immutable borrows inside mutable borrow", "body": "<p>I'm trying to get access to other pixels data while looping over those pixels.</p>\n\n<pre><code>extern crate image; // 0.19.0\n\nconst IMG_H: u32 = 10;\nconst IMG_W: u32 = 10;\n\nfn foo(imgbuf: &amp;mut image::ImageBuffer&lt;image::Luma&lt;u8&gt;, Vec&lt;u8&gt;&gt;, points: &amp;Vec&lt;u16&gt;) {\n    for (_x, _y, pixel) in imgbuf.enumerate_pixels_mut() {\n        for p in points {\n            let x2 = *p as u32 / IMG_H;\n            let y2 = *p as u32 % IMG_W;\n            let i = imgbuf.get_pixel(x2, y2)[0];\n            *pixel = image::Luma([i]);\n        }\n    }\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*imgbuf` as immutable because it is also borrowed as mutable\n  --&gt; src/lib.rs:11:21\n   |\n7  |     for (_x, _y, pixel) in imgbuf.enumerate_pixels_mut() {\n   |                            ------                      - mutable borrow ends here\n   |                            |\n   |                            mutable borrow occurs here\n...\n11 |             let i = imgbuf.get_pixel(x2, y2)[0];\n   |                     ^^^^^^ immutable borrow occurs here\n</code></pre>\n\n<p>Is there another solution than duplicating the image buffer to get an access to certain values?</p>\n"}, {"tags": ["hashmap", "rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1539750449, "post_id": 52846885, "comment_id": 92610420, "body": "How <code>entry</code> could be still valid if you change the hashmap ?"}, {"owner": {"reputation": 65, "user_id": 3894453, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AiBQR.jpg?s=128&g=1", "display_name": "Kunal", "link": "https://stackoverflow.com/users/3894453/kunal"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539785851, "post_id": 52846885, "comment_id": 92629201, "body": "Stargateur -- since <a href=\"https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html\" rel=\"nofollow noreferrer\">entry</a> is just a view into a single item in the hash map, it would seem reasonable that it&#39;s more or less unrelated to other elements. But that&#39;s an interesting point, because mutating the hash map could cause collision handling logic to affect <code>entry</code> -- I haven&#39;t looked into how it&#39;s implemented."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1539786560, "post_id": 52846885, "comment_id": 92629715, "body": "I don&#39;t know any implement of hashmap that will make possible what you are trying."}, {"owner": {"reputation": 65, "user_id": 3894453, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AiBQR.jpg?s=128&g=1", "display_name": "Kunal", "link": "https://stackoverflow.com/users/3894453/kunal"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539905382, "post_id": 52846885, "comment_id": 92681149, "body": "You&#39;re right -- there&#39;s no way for the borrow checker to deduce that they&#39;re mutually exclusive key mutations. Cheers!"}], "answers": [{"comments": [{"owner": {"reputation": 65, "user_id": 3894453, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AiBQR.jpg?s=128&g=1", "display_name": "Kunal", "link": "https://stackoverflow.com/users/3894453/kunal"}, "edited": false, "score": 0, "creation_date": 1539905256, "post_id": 52848887, "comment_id": 92681128, "body": "Thank you! I appreciate the suggestion -- I ended up doing something similar (i.e. exit earlier), as well as split some of my mutable and immutable borrows by refactoring my container that had the hash map."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 4, "last_activity_date": 1539789062, "last_edit_date": 1539789062, "creation_date": 1539759156, "answer_id": 52848887, "question_id": 52846885, "link": "https://stackoverflow.com/questions/52846885/how-can-i-mutate-other-elements-of-a-hashmap-when-using-the-entry-pattern/52848887#52848887", "title": "How can I mutate other elements of a HashMap when using the entry pattern?", "body": "<p>First things first: your example can be simplified with the <a href=\"https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html#method.or_insert_with\" rel=\"nofollow noreferrer\"><code>.or_insert_with()</code></a> method that takes a closure which returns the value to insert at that key.</p>\n\n<p>It is not possible with the entry pattern to solve your problem, because you mutably borrow the cache first in your entry, and afterwards in your match (or closure). You can try it, if you use a <code>RefCell</code> (which just moves the borrowing from compiletime to runtime) it will throw a panic.</p>\n\n<p>To actually solve your problem, you have to split getting and inserting the value, like this:</p>\n\n<pre><code>fn compute(cache: &amp;mut HashMap&lt;u32, u32&gt;, input: u32) -&gt; u32 {\n    if let Some(entry) = cache.get(&amp;input) {\n        return *entry;\n    }\n\n    let res = if input &gt; 2 {\n        // Trivial placeholder for an expensive computation.\n        compute(cache, input - 1) + compute(cache, input - 2)\n    } else {\n        0\n    };\n    cache.insert(input, res);\n    res\n}\n</code></pre>\n\n<p>(if you are on nightly and using <code>![feature(nll)]</code> you can omit the <code>return</code> and use <code>else</code> on the <code>if let</code> branch to make it a little bit cleaner.</p>\n"}, {"comments": [{"owner": {"reputation": 65, "user_id": 3894453, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AiBQR.jpg?s=128&g=1", "display_name": "Kunal", "link": "https://stackoverflow.com/users/3894453/kunal"}, "edited": false, "score": 0, "creation_date": 1539905203, "post_id": 52857223, "comment_id": 92681114, "body": "Thank you! This was a very helpful explanation."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1539788551, "last_edit_date": 1539788551, "creation_date": 1539786208, "answer_id": 52857223, "question_id": 52846885, "link": "https://stackoverflow.com/questions/52846885/how-can-i-mutate-other-elements-of-a-hashmap-when-using-the-entry-pattern/52857223#52857223", "title": "How can I mutate other elements of a HashMap when using the entry pattern?", "body": "<p><a href=\"https://stackoverflow.com/a/52848887/155423\">hellow has shown</a> how to get working code, but I want to dive a bit more into why your code does not compile.</p>\n\n<p>The code you have proposed <em>cannot</em> be statically verified to be memory safe. It's entirely possible that your recursive calls attempt to access the same index. Check out this simplified code for one possibility:</p>\n\n<pre><code>use std::collections::{hash_map::Entry, HashMap};\n\nfn compute(cache: &amp;mut HashMap&lt;u32, u32&gt;) {\n    if let Entry::Vacant(_entry) = cache.entry(42) {\n        let _aliased_mutable_reference = cache.get_mut(&amp;42).unwrap();\n    }\n}\n</code></pre>\n\n<p>This now has <strong>two</strong> mutable references pointing to the same value, violating <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">the rules of references</a>.</p>\n\n<p>Additionally, what if the inner call used <code>entry</code> and it didn't exist?</p>\n\n<pre><code>use std::collections::{hash_map::Entry, HashMap};\n\nfn compute(cache: &amp;mut HashMap&lt;u32, u32&gt;) {\n    if let Entry::Vacant(entry1) = cache.entry(42) {\n        if let Entry::Vacant(entry2) = cache.entry(41) {\n            entry2.insert(2);\n            entry1.insert(1);\n        }\n    }\n}\n</code></pre>\n\n<p>Now, when you insert the value into the map via <code>entry2</code>, the map may reallocate the underlying memory, invalidating the reference held by <code>entry1</code>, violating the <em>other</em> rule of references.</p>\n\n<p>Rust has prevented you from introducing two possible types of memory unsafety into your program; just like it was designed to do.</p>\n"}], "owner": {"reputation": 65, "user_id": 3894453, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AiBQR.jpg?s=128&g=1", "display_name": "Kunal", "link": "https://stackoverflow.com/users/3894453/kunal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 513, "favorite_count": 0, "accepted_answer_id": 52848887, "answer_count": 2, "score": 2, "last_activity_date": 1539789062, "creation_date": 1539746975, "last_edit_date": 1539785561, "question_id": 52846885, "link": "https://stackoverflow.com/questions/52846885/how-can-i-mutate-other-elements-of-a-hashmap-when-using-the-entry-pattern", "title": "How can I mutate other elements of a HashMap when using the entry pattern?", "body": "<p>I'd like to use a <code>HashMap</code> to cache an expensive computation that's dependent on other entries in the map. The entry pattern only provides a mutable reference to the matched value, but not to the rest of the <code>HashMap</code>. I'd really appreciate feedback on a better way to solve this (incorrect) toy example:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::collections::hash_map::Entry::{Occupied, Vacant};\n\nfn compute(cache: &amp;mut HashMap&lt;u32, u32&gt;, input: u32) -&gt; u32 {\n    match cache.entry(input) {\n        Vacant(entry) =&gt; if input &gt; 2 {\n            // Trivial placeholder for an expensive computation.\n            *entry.insert(compute(&amp;mut cache, input - 1) +\n                          compute(&amp;mut cache, input - 2))\n        } else {\n            0\n        },\n        Occupied(entry) =&gt; *entry.get(),\n    }\n}\n\nfn main() {\n    let mut cache = HashMap::&lt;u32, u32&gt;::new();\n    let foo = compute(&amp;mut cache, 12);\n    println!(\"{}\", foo);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=92ce34191e802cff4f1956687fb77903\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>The issue with the above snippet is that <code>cache.entry</code> borrows <code>cache</code> immutably, but I would like to update <code>cache</code> as well.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539745805, "post_id": 52846720, "comment_id": 92609380, "body": "The duplicates applied to your situation: <code>for b in &amp;mut self.bytes_iter</code> / <code>for b in self.bytes_iter.by_ref()</code>"}, {"owner": {"reputation": 167, "user_id": 6670993, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07ec09df4f372b78690cfa98729f3330?s=128&d=identicon&r=PG&f=1", "display_name": "Sanhu Li", "link": "https://stackoverflow.com/users/6670993/sanhu-li"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539747620, "post_id": 52846720, "comment_id": 92609819, "body": "@Shepmaster Really appreciate your help. That works! Would you please send me the duplicated question if possible? I wish to read more about it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539748794, "post_id": 52846720, "comment_id": 92610050, "body": "the duplicate questions are listed in a box on this page; try reloading your browser."}, {"owner": {"reputation": 167, "user_id": 6670993, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07ec09df4f372b78690cfa98729f3330?s=128&d=identicon&r=PG&f=1", "display_name": "Sanhu Li", "link": "https://stackoverflow.com/users/6670993/sanhu-li"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539787982, "post_id": 52846720, "comment_id": 92630618, "body": "Thank you! I found those!"}], "owner": {"reputation": 167, "user_id": 6670993, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07ec09df4f372b78690cfa98729f3330?s=128&d=identicon&r=PG&f=1", "display_name": "Sanhu Li", "link": "https://stackoverflow.com/users/6670993/sanhu-li"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 516, "favorite_count": 0, "closed_date": 1539745752, "answer_count": 0, "score": 0, "last_activity_date": 1539746073, "creation_date": 1539745414, "last_edit_date": 1539745661, "question_id": 52846720, "link": "https://stackoverflow.com/questions/52846720/cannot-move-out-of-borrowed-content-in-a-for-loop-over-an-iterator", "closed_reason": "Duplicate", "title": "cannot move out of borrowed content in a for loop over an iterator", "body": "<p>I'm trying to implement a \"read line\" function by implementing the <code>Iterator</code> trait.</p>\n\n<p>Here, I own the <code>Bytes&lt;BufReader&lt;File&gt;&gt;</code> inside the struct. For the <code>next</code> function, I wish to loop over the iterator to find a <code>b'\\n'</code>.</p>\n\n<pre><code>use std::io::BufReader;\n\nstruct MyStringLineBufReader {\n    bytes_iter: std::io::Bytes&lt;BufReader&lt;std::fs::File&gt;&gt;,\n}\n\nimpl Iterator for MyStringLineBufReader {\n    type Item = (String);\n\n    fn next(&amp;mut self) -&gt; Option&lt;&lt;Self as Iterator&gt;::Item&gt; {\n        let mut bytes: Vec&lt;u8&gt; = Vec::new();\n        for b in self.bytes_iter {\n            let b = b.unwrap();\n            if b == b'\\n' {\n                break;\n            } else {\n                bytes.push(b)\n            }\n        }\n        return Some(String::from_utf8(bytes).unwrap());\n    }\n}\n</code></pre>\n\n<p>The code is not finished yet but I feel it should compile. I get the following message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/lib.rs:12:18\n   |\n12 |         for b in self.bytes_iter {\n   |                  ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I don't know how to fix this.</p>\n"}, {"tags": ["io", "rust", "bufferedreader"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1539744267, "post_id": 52846511, "comment_id": 92609039, "body": "1. why not use read_line ? 2. read the documentation 3. read warning"}, {"owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539744446, "post_id": 52846511, "comment_id": 92609082, "body": "1. because read_line() assumes that the data can be parsed as utf8 and I cannot make that assumption in my code.  2. A specific area of documentation would be useful, not just &quot;read the documentation&quot; - that&#39;s as useless as my question that you are apparently calling out. In theory, every SO question could be answered with &quot;read the documentation.&quot; Come on man."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539744567, "post_id": 52846511, "comment_id": 92609114, "body": "<a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_until\" rel=\"nofollow noreferrer\">read_until</a>"}, {"owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539744711, "post_id": 52846511, "comment_id": 92609144, "body": "@Stargateur right and after seeing <code>This function will read bytes from the underlying stream until the newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes up to, and including, the delimiter (if found) will be appended to buf.</code> this means I have to scan every input group for EOF? There must be a more efficient solution hence the question. I did read that prior to asking, btw."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1539744915, "post_id": 52846511, "comment_id": 92609197, "body": "<code>EOF</code> is not a value. It&#39;s a state. It make no sense to search it into the buffer, it doesn&#39;t exist as value."}], "answers": [{"comments": [{"owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "edited": false, "score": 0, "creation_date": 1539744948, "post_id": 52846621, "comment_id": 92609206, "body": "Thanks shep but I have a question though - what if EOF is at the end of a line? The bytes read will be more than 0. That&#39;s my point of confusion. Make sense?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "edited": false, "score": 0, "creation_date": 1539745237, "post_id": 52846621, "comment_id": 92609259, "body": "@the_endian that&#39;s fine, it depends on what you want to do. If the string <b>must</b> end in a newline, then you&#39;d have to check this somehow, such as by ensuring the last byte read is a newline (<code>if byte_vec.last() != Some(&amp;b&#39;\\n&#39;) { continue }</code> is an easy way to do it). The majority of the time, you want to treat EOF as a newline, and then you don&#39;t have to do anything."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1539745512, "last_edit_date": 1539745512, "creation_date": 1539744655, "answer_id": 52846621, "question_id": 52846511, "link": "https://stackoverflow.com/questions/52846511/how-can-i-stop-a-bufreader-from-reading-in-rust-when-using-read-until/52846621#52846621", "title": "How can I stop a BufReader from reading in Rust when using read_until()?", "body": "<p>Check the warnings that the compiler is giving you, that's why they are there!</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unreachable expression\n  --&gt; src/lib.rs:16:5\n   |\n16 |     Ok(())\n   |     ^^^^^^\n   |\n   = note: #[warn(unreachable_code)] on by default\n\nwarning: unused variable: `my_bytes`\n --&gt; src/lib.rs:8:13\n  |\n8 |         let my_bytes = reader.read_until(b'\\n', &amp;mut byte_vec);\n  |             ^^^^^^^^ help: consider using `_my_bytes` instead\n  |\n  = note: #[warn(unused_variables)] on by default\n</code></pre>\n\n<p>The compiler is telling you that</p>\n\n<ol>\n<li>Your loop will never exit \u2014 that's your infinite loop.</li>\n<li>You aren't using the return value of <code>read_until</code>.</li>\n</ol>\n\n<p>These two things are related. Check the docs for <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_until\" rel=\"nofollow noreferrer\"><code>read_until</code></a>, emphasis mine:</p>\n\n<blockquote>\n  <p>Read all bytes into buf until the delimiter byte <strong>or EOF</strong> is reached.</p>\n  \n  <p>[...]</p>\n  \n  <p>If successful, this function will return the <strong>total number of bytes read</strong>.</p>\n</blockquote>\n\n<p>Use the value:</p>\n\n<pre><code>let my_bytes = reader.read_until(b'\\n', &amp;mut byte_vec)?;\nif my_bytes == 0 { break };\n</code></pre>\n\n<hr>\n\n<p>Continue reading the docs, emphasis mine:</p>\n\n<blockquote>\n  <p>all bytes up to, and including, the delimiter (if found) will be <strong>appended to <code>buf</code></strong></p>\n</blockquote>\n\n<p>Your <code>byte_vec</code> will continue to accumulate every previous line. This is why you believe that the <code>BufReader</code> is returning to the beginning of the input. You <em>probably</em> wish to <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.clear\" rel=\"nofollow noreferrer\"><code>clear</code></a> it at the end of each loop iteration.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/48034486/155423\">read file(not utf-8) line by line?</a></li>\n<li><a href=\"https://stackoverflow.com/q/41210691/155423\">How to check for EOF in read_line in Rust 1.12?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27475113/155423\">How to check for EOF with `read_line()`?</a></li>\n</ul>\n"}], "owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2597, "favorite_count": 0, "accepted_answer_id": 52846621, "answer_count": 1, "score": 0, "last_activity_date": 1539745512, "creation_date": 1539743818, "last_edit_date": 1539744236, "question_id": 52846511, "link": "https://stackoverflow.com/questions/52846511/how-can-i-stop-a-bufreader-from-reading-in-rust-when-using-read-until", "title": "How can I stop a BufReader from reading in Rust when using read_until()?", "body": "<p>I am attempting to use a <code>BufReader</code> to load a bunch of data and then use <code>read_until()</code> scan the data. However, I am having a hard time discerning when <code>read_until()</code> hits EOF and my code wraps back around to the start of the data again, creating an infinite loop. I need to stop reading when <code>read_until()</code> hits EOF. How can I accomplish this in Rust?</p>\n\n<p>This is what I have so far:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::BufRead;\nuse std::io::BufReader;\nuse std::str;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let f1 = File::open(\"foo.txt\")?;\n    let mut reader = BufReader::new(f1);\n    let mut byte_vec: Vec&lt;u8&gt; = Vec::new();\n    loop {\n        let my_bytes = reader.read_until(b'\\n', &amp;mut byte_vec);\n        let is_valid_utf8 = str::from_utf8(&amp;byte_vec);\n\n        match is_valid_utf8 {\n            Ok(the_str) =&gt; println!(\"{} is a valid UTF-8 String\", the_str),\n            Err(err) =&gt; println!(\"Error: {}\", err),\n        }\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>foo.txt just has a few lines of example text. The code will loop forever back to the beginning of the file.</p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539740498, "post_id": 52846023, "comment_id": 92608336, "body": "<i>The borrow checker is at it again!</i> \u2014 how? there are no errors in this question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539740655, "post_id": 52846023, "comment_id": 92608363, "body": "Have you already read <a href=\"https://stackoverflow.com/q/41617182/155423\">How to write an idiomatic build pattern with chained method calls in Rust?</a> and <a href=\"https://stackoverflow.com/q/45517265/155423\">How to use the chained builder pattern in a loop without creating a compiler error?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539741112, "post_id": 52846023, "comment_id": 92608437, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52846023/edit\">edit</a> your question to include it. Your &quot;pseudo-Rust&quot; doesn&#39;t need to be and actively makes it <i>harder</i> for us to see what the problem is. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 82953, "user_id": 608639, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/aPIhh.jpg?s=128&g=1", "display_name": "jww", "link": "https://stackoverflow.com/users/608639/jww"}, "edited": false, "score": 3, "creation_date": 1539753740, "post_id": 52846023, "comment_id": 92611314, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/q/41617182/608639\">How to write an idiomatic build pattern with chained method calls in Rust?</a>"}, {"owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539770296, "post_id": 52846023, "comment_id": 92619579, "body": "@Shepmaster My apologies for the lack of clarity, as I said at the end of the question (and as I probably should have said at the start), the emphasis isn&#39;t on the chained calls at all, it&#39;s on the borrow checker, and basically understanding how code can be written that is both borrow-checker-friendly and effective, as sometimes it feels like the borrow checker disallows every possible solution to a problem"}], "owner": {"reputation": 2192, "user_id": 2480092, "user_type": "registered", "accept_rate": 9, "profile_image": "https://www.gravatar.com/avatar/97f4cd231024913afd99cbe69655a963?s=128&d=identicon&r=PG", "display_name": "TheEnvironmentalist", "link": "https://stackoverflow.com/users/2480092/theenvironmentalist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 66, "favorite_count": 0, "closed_date": 1539758594, "answer_count": 0, "score": 0, "last_activity_date": 1539740434, "creation_date": 1539739146, "last_edit_date": 1539740434, "question_id": 52846023, "link": "https://stackoverflow.com/questions/52846023/how-can-i-reimplement-jquery-style-chaining-in-rust", "closed_reason": "Duplicate", "title": "How can I reimplement jQuery-style chaining in Rust?", "body": "<p>One of the conveniences offered by JavaScript's <a href=\"https://jquery.com\" rel=\"nofollow noreferrer\">jQuery</a> is the ability to <a href=\"http://www.jquerybyexample.net/2012/06/what-is-chaining-in-jquery.html\" rel=\"nofollow noreferrer\">chain methods</a> like so:</p>\n\n<pre><code>\u200b$(document).ready(function() {\n    $('#dvContent')\n        .addClass('dummy')\n        .css('color', 'red')\n        .fadeIn('slow');\n});\u200b\n</code></pre>\n\n<p>Instead of the more verbose non-chained way of writing the same:</p>\n\n<pre><code>$(document).ready(function() {\n    $('#dvContent').addClass('dummy');\n    $('#dvContent').css('color', 'red');\n    $('#dvContent').fadeIn('slow');\n});\u200b\n</code></pre>\n\n<p><em>Above jQuery code courtesy of <a href=\"http://www.jquerybyexample.net/2012/06/what-is-chaining-in-jquery.html\" rel=\"nofollow noreferrer\">jquerybyexample.net</a>.</em></p>\n\n<p>This is possible because the <code>$(selector)</code> function in jQuery returns a jQuery reference to whatever is indicated by <code>selector</code>, and it is standard for jQuery functions that don't return some type of value (i.e. would otherwise be <code>void</code>) to return the jQuery reference from <code>$(selector)</code> so that the next function in the chain can make use of it.</p>\n\n<p><strong>In Rust, however, this seems impossible.</strong></p>\n\n<p>Let's implement this in pseudo-Rust:</p>\n\n<pre><code>fn $(selector: &amp;Selector) -&gt; JQueryReference {\n    JQuery::get(selector)\n}\n</code></pre>\n\n<p>So far so good...</p>\n\n<pre><code>impl Chainable for JQueryReference {\n    fn addClass(&amp;self, class: String) -&gt; Self {\n        deep_frontendy_stuff_add_class(&amp;self, class);\n        self\n    }\n}\n</code></pre>\n\n<p>Ooh, no bueno, that <code>deep_frontendy_stuff_add_class()</code> function can't modify <code>self</code>. Oh I know, I'll just make the reference mutable!</p>\n\n<pre><code>impl Chainable for JQueryReference {\n    fn addClass(&amp;mut self, class: String) -&gt; Self {\n        deep_frontendy_stuff_add_class(&amp;mut self, class);\n        self\n    }\n}\n</code></pre>\n\n<p>Cool, that worked! But wait, what if I want to go old school and not use the fancy chained types?</p>\n\n<pre><code>$(\"#dvContent\".to_string()).addClass(\"dummy\".to_string());\n$(\"#dvContent\".to_string()).css(\"color\".to_string(), \"red\".to_string());\n</code></pre>\n\n<p>Nooooooooo! The borrow checker is at it again!</p>\n\n<p>How do I implement such behavior, and if you wouldn't mind, please be as descriptive as possible about <em>why</em>. This question is really an example to help understand the language.</p>\n"}, {"tags": ["rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 190, "user_id": 1149970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d58d8b4edbee829aad711f69bb8ecc46?s=128&d=identicon&r=PG", "display_name": "Dominic", "link": "https://stackoverflow.com/users/1149970/dominic"}, "edited": false, "score": 0, "creation_date": 1539719784, "post_id": 52843079, "comment_id": 92602177, "body": "Thank you kindly, that makes total sense. I knew I missed something major :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1539719426, "creation_date": 1539719426, "answer_id": 52843079, "question_id": 52842901, "link": "https://stackoverflow.com/questions/52842901/how-can-i-free-all-structures-that-rust-allocated-on-top-of-an-ffi-buffer-withou/52843079#52843079", "title": "How can I free all structures that Rust allocated on top of an FFI buffer without freeing the buffer itself?", "body": "<p>Reread the documentation for <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"noreferrer\"><code>CString</code></a>, emphasis mine:</p>\n\n<blockquote>\n  <p>A type representing an <strong>owned</strong>, C-compatible, nul-terminated string with no nul bytes in the middle.</p>\n  \n  <p>This type serves the purpose of being able to safely <strong>generate a C-compatible string from a Rust byte slice or vector</strong>.</p>\n</blockquote>\n\n<p>You do <strong>not</strong> own these strings, Java does. Use <code>&amp;str</code> and <a href=\"https://doc.rust-lang.org/std/ffi/struct.CStr.html\" rel=\"noreferrer\"><code>CStr</code></a> instead:</p>\n\n<pre><code>use std::ffi::CStr;\nuse std::os::raw::c_char;\n\npub extern \"C\" fn process_data(data: *const c_char, num_elements: i64) {\n    let mut vec: Vec&lt;&amp;str&gt; = Vec::with_capacity(num_elements as usize);\n\n    unsafe {\n        let mut ptr = data;\n\n        for _ in 0..num_elements {\n            let s = CStr::from_ptr(ptr);\n            ptr = ptr.add(s.to_bytes().len() + 1); // Include string termination\n\n            if let Ok(s) = s.to_str() {\n                vec.push(s);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>When your <code>Vec</code> is dropped, it just drops references and nothing is deallocated except the <code>Vec</code> itself.</p>\n"}], "owner": {"reputation": 190, "user_id": 1149970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d58d8b4edbee829aad711f69bb8ecc46?s=128&d=identicon&r=PG", "display_name": "Dominic", "link": "https://stackoverflow.com/users/1149970/dominic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 600, "favorite_count": 0, "accepted_answer_id": 52843079, "answer_count": 1, "score": 3, "last_activity_date": 1539719426, "creation_date": 1539718676, "last_edit_date": 1539718758, "question_id": 52842901, "link": "https://stackoverflow.com/questions/52842901/how-can-i-free-all-structures-that-rust-allocated-on-top-of-an-ffi-buffer-withou", "title": "How can I free all structures that Rust allocated on top of an FFI buffer without freeing the buffer itself?", "body": "<p>I have a Java program that calls out to Rust via JNA, providing the Rust side with a pointer to a potentially large (heap-allocated) buffer of continuously laid out, \\0 terminated UTF-8 strings. The memory is owned by the Java side and freed when the garbage collector finalizes the associated object.</p>\n\n<p>My goal is to process that buffer by interpreting it as a string vector, doing what I need to do, and dropping all structures that Rust allocated on top of the buffer, e.g. <code>Vec</code>'s, <code>String</code>s, etc. Due to the potential size of the buffer, I want to avoid copying the data around, if possible.</p>\n\n<p>Consider the following code:</p>\n\n<pre><code>use std::ffi::CString;\nuse std::os::raw::c_char;\n\npub extern \"C\" fn process_data(data: *const c_char, num_elements: i64) {\n    let mut vec: Vec&lt;String&gt; = Vec::with_capacity(num_elements as usize);\n    let mut offset = 0;\n\n    unsafe {\n        for _ in 0..num_elements {\n            let ptr = { data.offset(offset as isize) };\n\n            // Main goal here is to have no memory copy involved\n            let s = String::from_utf8_unchecked(CString::from_raw(ptr as *mut c_char).into_bytes());\n\n            offset += s.len() + 1; // Include string termination\n            vec.push(s);\n        }\n    }\n\n    // do stuff with the vector\n    // ...\n\n    // Now that we're done, vec would be dropped, freeing the strings, thus freeing their underlying memory.\n}\n</code></pre>\n\n<p>My understanding is that I now have a <code>Vec</code> that internally points to a buffer containing <code>String</code>s that in turn internally point to <code>Vec</code>s, that then point in some way into the buffer I passed in.</p>\n\n<p>If I let the code run like this without forgetting the vector explicitly, I get a double free because Java tries to deallocate the buffer, but Rust already did so by dropping the vector. Makes sense. However, forgetting the vector leaks all \"management\" structures on top of the buffer.</p>\n\n<p>I thought about how I could deallocate everything that Rust allocated without leaking any memory. I thought about explicitly leaking boxes and dropping the pointers they give me (because Java still has a pointer) along the lines of:</p>\n\n<pre><code>fn forget_vec(vec: Vec&lt;String&gt;) {\n    vec.into_iter().map(|s| {\n        Box::into_raw(s.into_bytes().into_boxed_slice());\n    }\n}\n</code></pre>\n\n<p>However, since a slice is also a structure that contains a length and a pointer, and by doing the above I think I'd leak this structure. I was looking for something that consumes the slice and only returns me a pointer like <code>*const u8</code>.</p>\n\n<p>I have a feeling that I'm generally going into the right direction, but I'm missing something major or have too little of an understanding of Rust to make it work outright.</p>\n"}, {"tags": ["multithreading", "asynchronous", "rust", "rust-tokio", "mio"], "answers": [{"comments": [{"owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1539720112, "post_id": 52840214, "comment_id": 92602362, "body": "May I ask, if you know, why does the <code>tokio_current_thread</code> crate exist if this runtime build is already a thing ? Does it provide advantages for single-threaded scenarios ?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "edited": false, "score": 0, "creation_date": 1539720283, "post_id": 52840214, "comment_id": 92602439, "body": "If you use the current thread executor, I think you have fewer restrictions on your futures, since they don&#39;t need to be <code>Send</code>.  With the threaded executor, all futures need to be <code>Send</code> even when you only use a single thread. (I may be mixing up the terminology, but it&#39;s something along these lines.)"}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 5, "last_activity_date": 1539707935, "creation_date": 1539707935, "answer_id": 52840214, "question_id": 52839647, "link": "https://stackoverflow.com/questions/52839647/how-do-i-limit-the-tokio-threadpool-to-a-certain-number-of-native-threads/52840214#52840214", "title": "How do I limit the Tokio threadpool to a certain number of native threads?", "body": "<p>You can build a Tokio <code>Runtime</code> object using <a href=\"https://docs.rs/tokio/0.1.11/tokio/runtime/struct.Builder.html\" rel=\"noreferrer\"><code>tokio::runtime::Builder</code></a>.  The builder offers a <a href=\"https://docs.rs/tokio/0.1.11/tokio/runtime/struct.Builder.html#method.core_threads\" rel=\"noreferrer\"><code>core_threads()</code></a> method that can be used to configure the number of threads, e.g.</p>\n\n<pre><code>let mut rt = runtime::Builder::new()\n    .core_threads(4)\n    .build()\n    .unwrap();\n</code></pre>\n\n<p>You can then use <code>rt.spawn(some_future)</code> to run a future on this runtime.</p>\n"}], "owner": {"reputation": 2415, "user_id": 7156008, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/QzIXM.jpg?s=128&g=1", "display_name": "George", "link": "https://stackoverflow.com/users/7156008/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2145, "favorite_count": 1, "accepted_answer_id": 52840214, "answer_count": 1, "score": 2, "last_activity_date": 1539709374, "creation_date": 1539705846, "last_edit_date": 1539709374, "question_id": 52839647, "link": "https://stackoverflow.com/questions/52839647/how-do-i-limit-the-tokio-threadpool-to-a-certain-number-of-native-threads", "title": "How do I limit the Tokio threadpool to a certain number of native threads?", "body": "<p>What's the correct way of limiting the Tokio (v 0.1.11) threadpool to <code>n</code> OS native threads, where <code>n</code> is an arbitrary number, preferably configurable at runtime?</p>\n\n<p>As far as I can tell, it's possible to use Tokio in single threaded mode using using <code>tokio_current_thread::block_on_all</code> instead of <code>tokio::run</code> and <code>tokio_current_thread::spawn</code> instead of <code>tokio::spawn</code>.</p>\n\n<p>I'd like a similar solution but for <code>n &gt;= 1</code>.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1539703514, "post_id": 52838884, "comment_id": 92593867, "body": "<i>Why</i> did you put that lifetime on your trait as opposed to on the method (or not at all, allowing elision to do its job)?"}, {"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1539703622, "post_id": 52838884, "comment_id": 92593935, "body": "Have you tried removing lifetime specifiers from the return values of the <code>get</code> methods?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1539703654, "post_id": 52838884, "comment_id": 92593964, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/31470146/155423\">What are the differences between specifying lifetime parameters on an impl or on a method?</a> and <a href=\"https://stackoverflow.com/q/29975854/155423\">What does it mean for a trait to have a lifetime parameter?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52838884/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539703860, "post_id": 52838884, "comment_id": 92594076, "body": "See also <a href=\"https://stackoverflow.com/q/28131319/155423\">type parameter for function vs struct (lifetime issue)</a>; <a href=\"https://stackoverflow.com/q/44059574/155423\">How to solve this \u201cdoes not live long enough\u201d?</a>;"}, {"owner": {"reputation": 123, "user_id": 1769868, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f43e061612683dd8425ad3271717dedf?s=128&d=identicon&r=PG", "display_name": "user1769868", "link": "https://stackoverflow.com/users/1769868/user1769868"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539787802, "post_id": 52838884, "comment_id": 92630503, "body": "@Shepmaster: Thanks, moving the lifetime from the trait to individual methods worked. If I&#39;m understanding your <code>Keeper</code> link correctly, the use case for a lifetime on a trait object is when you&#39;d like a struct with an existing lifetime to impl it? e.g. in the example above, it looks like I would need a lifetime on the trait if I was using <code>struct Bar&lt;&#39;a&gt;</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539788437, "post_id": 52838884, "comment_id": 92630916, "body": "@user1769868 that is my understanding, yes."}], "answers": [{"tags": [], "owner": {"reputation": 123, "user_id": 1769868, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f43e061612683dd8425ad3271717dedf?s=128&d=identicon&r=PG", "display_name": "user1769868", "link": "https://stackoverflow.com/users/1769868/user1769868"}, "is_accepted": false, "score": 0, "last_activity_date": 1539789997, "last_edit_date": 1539789997, "creation_date": 1539788165, "answer_id": 52857860, "question_id": 52838884, "link": "https://stackoverflow.com/questions/52838884/cannot-call-a-method-on-a-boxed-trait-object-because-it-does-not-live-long-enoug/52857860#52857860", "title": "Cannot call a method on a boxed trait object because it does not live long enough", "body": "<p>Thanks to @Shepmaster for pointing out that a lifetime on the trait object is not the way to go. Moving the lifetime to individual methods (which in turn can be elided in this example) works great:</p>\n\n<pre><code>trait Foo {\n    fn get(&amp;self) -&gt; &amp;i32;\n}\n\nstruct Bar {\n    data: i32,\n}\n\nimpl Foo for Bar {\n    fn get(&amp;self) -&gt; &amp;i32 {\n        &amp;self.data\n    }\n}\n\nstruct Baz {\n    data: i32,\n}\n\nimpl Foo for Baz {\n    fn get(&amp;self) -&gt; &amp;i32 {\n        &amp;self.data\n    }\n}\n\nfn get_foo(foo: &amp;str) -&gt; Box&lt;dyn Foo&gt; {\n    let split = foo.splitn(2, \"+\").collect::&lt;Vec&lt;_&gt;&gt;();\n    let data = i32::from_str_radix(split[1], 10).unwrap();\n\n    if foo.starts_with(\"bar\") {\n        Box::new(Bar { data })\n    } else {\n        Box::new(Baz { data })\n    }\n}\n\nfn main() {\n    let foo = get_foo(\"bar+0\");\n    println!(\"Foo: {}\", foo.get());\n}\n</code></pre>\n"}], "owner": {"reputation": 123, "user_id": 1769868, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f43e061612683dd8425ad3271717dedf?s=128&d=identicon&r=PG", "display_name": "user1769868", "link": "https://stackoverflow.com/users/1769868/user1769868"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 112, "favorite_count": 0, "closed_date": 1539788333, "answer_count": 1, "score": 2, "last_activity_date": 1539789997, "creation_date": 1539703303, "last_edit_date": 1539703422, "question_id": 52838884, "link": "https://stackoverflow.com/questions/52838884/cannot-call-a-method-on-a-boxed-trait-object-because-it-does-not-live-long-enoug", "closed_reason": "Duplicate", "title": "Cannot call a method on a boxed trait object because it does not live long enough", "body": "<p>I would like to write a function that parses a string and returns one of several structs that implement a trait object that allows handing out references to the implementing struct. The use case is reading a string from a configuration file that determines which implementation is used. The code looks like this:</p>\n\n<pre><code>trait Foo&lt;'a&gt; {\n    fn get(&amp;'a self) -&gt; &amp;'a i32;\n}\n\nstruct Bar {\n    data: i32,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; for Bar {\n    fn get(&amp;'a self) -&gt; &amp;'a i32 {\n        &amp;self.data\n    }\n}\n\nstruct Baz {\n    data: i32,\n}\n\nimpl&lt;'a&gt; Foo&lt;'a&gt; for Baz {\n    fn get(&amp;'a self) -&gt; &amp;'a i32 {\n        &amp;self.data\n    }\n}\n\nfn get_foo(foo: &amp;str) -&gt; Box&lt;dyn Foo&gt; {\n    let split = foo.splitn(2, \"+\").collect::&lt;Vec&lt;_&gt;&gt;();\n    let data = i32::from_str_radix(split[1], 10).unwrap();\n\n    if foo.starts_with(\"bar\") {\n        Box::new(Bar { data })\n    } else {\n        Box::new(Baz { data })\n    }\n}\n\nfn main() {\n    let foo = get_foo(\"bar+0\");\n    println!(\"Foo: {}\", foo.get());\n}\n</code></pre>\n\n<p>However, when I do that, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `*foo` does not live long enough\n  --&gt; src/main.rs:38:25\n   |\n38 |     println!(\"Foo: {}\", foo.get());\n   |                         ^^^ borrowed value does not live long enough\n39 | }\n   | - `*foo` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>Is this possible to do in Rust?</p>\n"}, {"tags": ["asynchronous", "syntax", "async-await", "rust", "future"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1539697627, "post_id": 52835725, "comment_id": 92590025, "body": "For what it&#39;s worth, async functions in Python also yield immediately, and only start doing anything when they are asked to by the event loop.  The design is pretty similar to Rust&#39;s."}, {"owner": {"reputation": 6263, "user_id": 9638272, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j0cSF.jpg?s=128&g=1", "display_name": "asmmo", "link": "https://stackoverflow.com/users/9638272/asmmo"}, "edited": false, "score": 0, "creation_date": 1604409567, "post_id": 52835725, "comment_id": 114334297, "body": "c++ has deferred futures too!!"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1539695304, "post_id": 52835926, "comment_id": 92588468, "body": "I&#39;m sorry, this is still unclear. Do you have an example of a Rust code that do the same thing that in the C# code I wrote? I mean: having 2 operations that run asynchronously with <code>async</code>/<code>await</code>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1539695692, "post_id": 52835926, "comment_id": 92588708, "body": "@Boiethios You can still produce multiple &quot;sub&quot;-futures in a single async function and <a href=\"https://docs.rs/futures/0.1.25/futures/future/trait.Future.html#method.join\" rel=\"nofollow noreferrer\"><code>join</code></a> them together."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1539714077, "post_id": 52835926, "comment_id": 92599362, "body": "I think the opening sentence could be &quot;You are conflating two concepts: concurrent and parallel&quot;. Async/Await is a syntax which enable concurrency. For example, Python generators are concurrent (the generator maintains its own stack, concurrently with the caller stack) yet do not run in parallel. Parallelism requires concurrency, but concurrency is useful without parallelism."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539720034, "post_id": 52835926, "comment_id": 92602318, "body": "The function body for your first example is much more complicated than in needs to be.  In stable Rust you could simply use <code>poll_fn(|| a + b)</code> and be done with it.  The main advantage of <code>async</code>/<code>await</code> in my opinion is that you can borrow across yield points, which is currently impossible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539720538, "post_id": 52835926, "comment_id": 92602561, "body": "@SvenMarnachI agree about the references and I&#39;ve been working on an update that showcases that. I&#39;d argue about the complexity, however, as what I&#39;ve shown <a href=\"https://github.com/rust-lang-nursery/futures-rs/blob/d040a57521ca09d7eb162840bfb084d90d72db03/futures-util/src/future/poll_fn.rs#L39-L54\" rel=\"nofollow noreferrer\">is basically what <code>poll_fn</code> is implemented as</a>, modulo a bit of reusability."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539720974, "post_id": 52835926, "comment_id": 92602755, "body": "@Shepmaster Of course it&#39;s basically what&#39;s <code>poll_fn()</code> is implemented as, but if the problem were just that, we really wouldn&#39;t need any new syntax, since <code>poll_fn()</code> would be a perfectly adequate solution.  So the example doesn&#39;t really showcase why <code>async</code> and <code>await</code> are useful in Rust."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 36, "last_activity_date": 1573221959, "last_edit_date": 1573221959, "creation_date": 1539694403, "answer_id": 52835926, "question_id": 52835725, "link": "https://stackoverflow.com/questions/52835725/what-is-the-purpose-of-async-await-in-rust/52835926#52835926", "title": "What is the purpose of async/await in Rust?", "body": "<p>You are conflating a few concepts.</p>\n\n<p><a href=\"https://stackoverflow.com/q/1050222/155423\">Concurrency is not parallelism</a>, and <code>async</code> and <code>await</code> are tools for <em>concurrency</em>, which may sometimes mean they are also tools for parallelism.</p>\n\n<p>Additionally, whether a future is immediately polled or not is orthogonal to the syntax chosen.</p>\n\n<h1><code>async</code> / <code>await</code></h1>\n\n<p>The keywords <code>async</code> and <code>await</code> exist to make creating and interacting with asynchronous code easier to read and look more like \"normal\" synchronous code. This is true in all of the languages that have such keywords, as far as I am aware.</p>\n\n<h2>Simpler code</h2>\n\n<p>This is code that creates a future that adds two numbers when polled</p>\n\n<p><strong>before</strong></p>\n\n<pre><code>fn long_running_operation(a: u8, b: u8) -&gt; impl Future&lt;Output = u8&gt; {\n    struct Value(u8, u8);\n\n    impl Future for Value {\n        type Output = u8;\n\n        fn poll(self: Pin&lt;&amp;mut Self&gt;, _ctx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n            Poll::Ready(self.0 + self.1)\n        }\n    }\n\n    Value(a, b)\n}\n</code></pre>\n\n<p><strong>after</strong>   </p>\n\n<pre><code>async fn long_running_operation(a: u8, b: u8) -&gt; u8 {\n    a + b\n}\n</code></pre>\n\n<p>Note that the \"before\" code is basically the <a href=\"https://github.com/rust-lang-nursery/futures-rs/blob/0.3.1/futures-util/src/future/poll_fn.rs#L48-L56\" rel=\"noreferrer\">implementation of today's <code>poll_fn</code> function</a></p>\n\n<p>See also <a href=\"https://stackoverflow.com/a/52839157/155423\">Peter Hall's answer</a> about how keeping track of many variables can be made nicer.</p>\n\n<h2>References</h2>\n\n<p>One of the potentially surprising things about <code>async</code>/<code>await</code> is that it enables a specific pattern that wasn't possible before: using references in futures. Here's some code that fills up a buffer with a value in an asynchronous manner:</p>\n\n<p><strong>before</strong></p>\n\n<pre><code>use std::io;\n\nfn fill_up&lt;'a&gt;(buf: &amp;'a mut [u8]) -&gt; impl Future&lt;Output = io::Result&lt;usize&gt;&gt; + 'a {\n    futures::future::lazy(move |_| {\n        for b in buf.iter_mut() { *b = 42 }\n        Ok(buf.len())\n    })\n}\n\nfn foo() -&gt; impl Future&lt;Output = Vec&lt;u8&gt;&gt; {\n    let mut data = vec![0; 8];\n    fill_up(&amp;mut data).map(|_| data)\n}\n</code></pre>\n\n<p>This fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `data` does not live long enough\n  --&gt; src/main.rs:33:17\n   |\n33 |     fill_up_old(&amp;mut data).map(|_| data)\n   |                 ^^^^^^^^^ borrowed value does not live long enough\n34 | }\n   | - `data` dropped here while still borrowed\n   |\n   = note: borrowed value must be valid for the static lifetime...\n\nerror[E0505]: cannot move out of `data` because it is borrowed\n  --&gt; src/main.rs:33:32\n   |\n33 |     fill_up_old(&amp;mut data).map(|_| data)\n   |                 ---------      ^^^ ---- move occurs due to use in closure\n   |                 |              |\n   |                 |              move out of `data` occurs here\n   |                 borrow of `data` occurs here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p><strong>after</strong></p>\n\n<pre><code>use std::io;\n\nasync fn fill_up(buf: &amp;mut [u8]) -&gt; io::Result&lt;usize&gt; {\n    for b in buf.iter_mut() { *b = 42 }\n    Ok(buf.len())\n}\n\nasync fn foo() -&gt; Vec&lt;u8&gt; {\n    let mut data = vec![0; 8];\n    fill_up(&amp;mut data).await.expect(\"IO failed\");\n    data\n}\n</code></pre>\n\n<p>This works!</p>\n\n<h1>Calling an <code>async</code> function does not run anything</h1>\n\n<p>The implementation and design of a <code>Future</code> and the entire system around futures, on the other hand, is unrelated to the keywords <code>async</code> and <code>await</code>. Indeed, Rust has a thriving asynchronous ecosystem (such as with Tokio) before the <code>async</code> / <code>await</code> keywords ever existed. The same was true for JavaScript.</p>\n\n<h2>Why aren't <code>Future</code>s polled immediately on creation?</h2>\n\n<p>For the most authoritative answer, check out <a href=\"https://github.com/rust-lang/rfcs/pull/2394#issuecomment-382399020\" rel=\"noreferrer\">this comment from withoutboats</a> on the RFC pull request:</p>\n\n<blockquote>\n  <p>A fundamental difference between Rust's futures and those from other\n  languages is that Rust's futures do not do anything unless polled. The\n  whole system is built around this: for example, cancellation is\n  dropping the future for precisely this reason. In contrast, in other\n  languages, calling an async fn spins up a future that starts executing\n  immediately.</p>\n  \n  <p>A point about this is that async &amp; await in Rust are not inherently\n  concurrent constructions. If you have a program that only uses async &amp;\n  await and no concurrency primitives, the code in your program will\n  execute in a defined, statically known, linear order. Obviously, most\n  programs will use some kind of concurrency to schedule multiple,\n  concurrent tasks on the event loop, but they don't have to. What this\n  means is that you can - trivially - locally guarantee the ordering of\n  certain events, even if there is nonblocking IO performed in between\n  them that you want to be asynchronous with some larger set of nonlocal\n  events (e.g. you can strictly control ordering of events inside of a\n  request handler, while being concurrent with many other request\n  handlers, even on two sides of an await point).</p>\n  \n  <p>This property gives Rust's async/await syntax the kind of local\n  reasoning &amp; low-level control that makes Rust what it is. Running up\n  to the first await point would not inherently violate that - you'd\n  still know when the code executed, it would just execute in two\n  different places depending on whether it came before or after an\n  await. However, I think the decision made by other languages to start\n  executing immediately largely stems from their systems which\n  immediately schedule a task concurrently when you call an async fn\n  (for example, that's the impression of the underlying problem I got\n  from the Dart 2.0 document).</p>\n</blockquote>\n\n<p>Some of the Dart 2.0 background is covered by <a href=\"https://www.reddit.com/r/rust/comments/8aaywk/async_await_in_rust_a_full_proposal/dwxjjo2/\" rel=\"noreferrer\">this discussion from munificent</a>:</p>\n\n<blockquote>\n  <p>Hi, I'm on the Dart team. Dart's async/await was designed mainly by\n  Erik Meijer, who also worked on async/await for C#. In C#, async/await\n  is synchronous to the first await. For Dart, Erik and others felt that\n  C#'s model was too confusing and instead specified that an async\n  function always yields once before executing any code.</p>\n  \n  <p>At the time, I and another on my team were tasked with being the\n  guinea pigs to try out the new in-progress syntax and semantics in our\n  package manager. Based on that experience, we felt async functions\n  should run synchronously to the first await. Our arguments were\n  mostly:</p>\n  \n  <ol>\n  <li><p>Always yielding once incurs a performance penalty for no good reason. In most cases, this doesn't matter, but in some it really\n  does. Even in cases where you can live with it, it's a drag to bleed a\n  little perf everywhere.</p></li>\n  <li><p>Always yielding means certain patterns cannot be implemented using async/await. In particular, it's really common to have code like\n  (pseudo-code here):</p>\n\n<pre><code>getThingFromNetwork():\n  if (downloadAlreadyInProgress):\n    return cachedFuture\n\n  cachedFuture = startDownload()\n  return cachedFuture\n</code></pre>\n  \n  <p>In other words, you have an async operation that you can call multiple times before it completes. Later calls use the same\n  previously-created pending future. You want to ensure you don't start\n  the operation multiple times. That means you need to synchronously\n  check the cache before starting the operation.</p>\n  \n  <p>If async functions are async from the start, the above function can't use async/await.</p></li>\n  </ol>\n  \n  <p>We pleaded our case, but ultimately the language designers stuck with\n  async-from-the-top. This was several years ago.</p>\n  \n  <p>That turned out to be the wrong call. The performance cost is real\n  enough that many users developed a mindset that \"async functions are\n  slow\" and started avoiding using it even in cases where the perf hit\n  was affordable. Worse, we see nasty concurrency bugs where people\n  think they can do some synchronous work at the top of a function and\n  are dismayed to discover they've created race conditions. Overall, it\n  seems users do not naturally assume an async function yields before\n  executing any code.</p>\n  \n  <p>So, for Dart 2, we are now taking the very painful breaking change to\n  change async functions to be synchronous to the first await and\n  migrating all of our existing code through that transition. I'm glad\n  we're making the change, but I really wish we'd done the right thing\n  on day one.</p>\n  \n  <p>I don't know if Rust's ownership and performance model place different\n  constraints on you where being async from the top really is better,\n  but from our experience, sync-to-the-first-await is clearly the better\n  trade-off for Dart.</p>\n</blockquote>\n\n<p><a href=\"https://www.reddit.com/r/rust/comments/8aaywk/async_await_in_rust_a_full_proposal/dwxqgpy\" rel=\"noreferrer\">cramert replies</a> (note that some of this syntax is outdated now):</p>\n\n<blockquote>\n  <p>If you need code to execute immediately when a function is called\n  rather than later on when the future is polled, you can write your\n  function like this:</p>\n\n<pre><code>fn foo() -&gt; impl Future&lt;Item=Thing&gt; {\n    println!(\"prints immediately\");\n    async_block! {\n        println!(\"prints when the future is first polled\");\n        await!(bar());\n        await!(baz())\n    }\n}\n</code></pre>\n</blockquote>\n\n<h2>Code examples</h2>\n\n<p>These examples use the async support in Rust 1.39 and the futures crate 0.3.1.</p>\n\n<h3>Literal transcription of the C# code</h3>\n\n<pre><code>use futures; // 0.3.1\n\nasync fn long_running_operation(a: u8, b: u8) -&gt; u8 {\n    println!(\"long_running_operation\");\n\n    a + b\n}\n\nfn another_operation(c: u8, d: u8) -&gt; u8 {\n    println!(\"another_operation\");\n\n    c * d\n}\n\nasync fn foo() -&gt; u8 {\n    println!(\"foo\");\n\n    let sum = long_running_operation(1, 2);\n\n    another_operation(3, 4);\n\n    sum.await\n}\n\nfn main() {\n    let task = foo();\n\n    futures::executor::block_on(async {\n        let v = task.await;\n        println!(\"Result: {}\", v);\n    });\n}\n</code></pre>\n\n<p>If you called <code>foo</code>, the sequence of events in Rust would be:</p>\n\n<ol>\n<li>Something implementing <code>Future&lt;Output = u8&gt;</code> is returned.</li>\n</ol>\n\n<p>That's it. No \"actual\" work is done yet. If you take the result of <code>foo</code> and drive it towards completion (by polling it, in this case via <code>futures::executor::block_on</code>), then the next steps are:</p>\n\n<ol start=\"2\">\n<li><p>Something implementing <code>Future&lt;Output = u8&gt;</code> is returned from calling <code>long_running_operation</code> (it does not start work yet).</p></li>\n<li><p><code>another_operation</code> does work as it is synchronous.</p></li>\n<li><p>the <code>.await</code> syntax causes the code in <code>long_running_operation</code> to start. The <code>foo</code> future will continue to return \"not ready\" until the computation is done.</p></li>\n</ol>\n\n<p>The output would be:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>foo\nanother_operation\nlong_running_operation\nResult: 3\n</code></pre>\n\n<p>Note that there are no thread pools here: this is all done on a single thread.</p>\n\n<h3><code>async</code> blocks</h3>\n\n<p>You can also use <code>async</code> blocks:</p>\n\n<pre><code>use futures::{future, FutureExt}; // 0.3.1\n\nfn long_running_operation(a: u8, b: u8) -&gt; u8 {\n    println!(\"long_running_operation\");\n\n    a + b\n}\n\nfn another_operation(c: u8, d: u8) -&gt; u8 {\n    println!(\"another_operation\");\n\n    c * d\n}\n\nasync fn foo() -&gt; u8 {\n    println!(\"foo\");\n\n    let sum = async { long_running_operation(1, 2) };\n    let oth = async { another_operation(3, 4) };\n\n    let both = future::join(sum, oth).map(|(sum, _)| sum);\n\n    both.await\n}\n</code></pre>\n\n<p>Here we wrap synchronous code in an <code>async</code> block and then wait for both actions to complete before this function will be complete.</p>\n\n<p>Note that wrapping synchronous code like this is <em>not</em> a good idea for anything that will actually take a long time; see <a href=\"https://stackoverflow.com/q/41932137/155423\">What is the best approach to encapsulate blocking I/O in future-rs?</a> for more info.</p>\n\n<h3>With a threadpool</h3>\n\n<pre><code>// Requires the `thread-pool` feature to be enabled \nuse futures::{executor::ThreadPool, future, task::SpawnExt, FutureExt};\n\nasync fn foo(pool: &amp;mut ThreadPool) -&gt; u8 {\n    println!(\"foo\");\n\n    let sum = pool\n        .spawn_with_handle(async { long_running_operation(1, 2) })\n        .unwrap();\n    let oth = pool\n        .spawn_with_handle(async { another_operation(3, 4) })\n        .unwrap();\n\n    let both = future::join(sum, oth).map(|(sum, _)| sum);\n\n    both.await\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539709527, "post_id": 52839157, "comment_id": 92597091, "body": "Having written some of that &quot;accumulating&quot; code in Rust, it does get rather annoying having to build up tuples and then selectively picking from them as the function goes longer."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1539709452, "last_edit_date": 1539709452, "creation_date": 1539704146, "answer_id": 52839157, "question_id": 52835725, "link": "https://stackoverflow.com/questions/52835725/what-is-the-purpose-of-async-await-in-rust/52839157#52839157", "title": "What is the purpose of async/await in Rust?", "body": "<p>Consider this simple pseudo-JavaScript code that fetches some data, processes it, fetches some more data based on the previous step, summarises it, and then prints a result:</p>\n\n<pre><code>getData(url)\n   .then(response -&gt; parseObjects(response.data))\n   .then(data -&gt; findAll(data, 'foo'))\n   .then(foos -&gt; getWikipediaPagesFor(foos))\n   .then(sumPages)\n   .then(sum -&gt; console.log(\"sum is: \", sum));\n</code></pre>\n\n<p>In <code>async/await</code> form, that's:</p>\n\n<pre><code>async {\n    let response = await getData(url);\n    let objects = parseObjects(response.data);\n    let foos = findAll(objects, 'foo');\n    let pages = await getWikipediaPagesFor(foos);\n    let sum = sumPages(pages);\n    console.log(\"sum is: \", sum);\n}\n</code></pre>\n\n<p>It introduces a lot of single-use variables and is arguably worse than the original version with promises. So why bother?</p>\n\n<p>Consider this change, where the variables <code>response</code> and <code>objects</code> are needed later on in the computation:</p>\n\n<pre><code>async {\n    let response = await getData(url);\n    let objects = parseObjects(response.data);\n    let foos = findAll(objects, 'foo');\n    let pages = await getWikipediaPagesFor(foos);\n    let sum = sumPages(pages, objects.length);\n    console.log(\"sum is: \", sum, \" and status was: \", response.status);\n}\n</code></pre>\n\n<p>And try to rewrite it in the original form with promises:</p>\n\n<pre><code>getData(url)\n   .then(response -&gt; Promise.resolve(parseObjects(response.data))\n       .then(objects -&gt; Promise.resolve(findAll(objects, 'foo'))\n           .then(foos -&gt; getWikipediaPagesFor(foos))\n           .then(pages -&gt; sumPages(pages, objects.length)))\n       .then(sum -&gt; console.log(\"sum is: \", sum, \" and status was: \", response.status)));\n</code></pre>\n\n<p>Each time you need to refer back to a previous result, you need to nest the entire structure one level deeper. This can quickly become very difficult to read and maintain, but the <code>async</code>/<code>await</code> version does not suffer from this problem.</p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552116213, "post_id": 55072074, "comment_id": 96897068, "body": "Thanks for your answer. It adds a new light to why <code>async</code>/<code>await</code> is like that."}], "tags": [], "owner": {"reputation": 36975, "user_id": 94977, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/8341c5bff3dcbd8ed34d9d68bd4169f2?s=128&d=identicon&r=PG", "display_name": "Jason Orendorff", "link": "https://stackoverflow.com/users/94977/jason-orendorff"}, "is_accepted": false, "score": 4, "last_activity_date": 1597862436, "last_edit_date": 1597862436, "creation_date": 1552085330, "answer_id": 55072074, "question_id": 52835725, "link": "https://stackoverflow.com/questions/52835725/what-is-the-purpose-of-async-await-in-rust/55072074#55072074", "title": "What is the purpose of async/await in Rust?", "body": "<p>The purpose of <code>async</code>/<code>await</code> in Rust is to provide a toolkit for concurrency\u2014same as in C# and other languages.</p>\n<p>In C# and JavaScript, <code>async</code> methods start running immediately, and they're scheduled whether you <code>await</code> the result or not. In Python and Rust, when you call an <code>async</code> method, nothing happens (it isn't even scheduled) until you <code>await</code> it. But it's largely the same programming style either way.</p>\n<p>The ability to spawn another task (that runs concurrent with and independent of the current task) is provided by libraries: see <a href=\"https://docs.rs/async-std/1.6.3/async_std/task/fn.spawn.html\" rel=\"nofollow noreferrer\"><code>async_std::task::spawn</code></a> and <a href=\"https://docs.rs/tokio/0.2.22/tokio/task/fn.spawn.html\" rel=\"nofollow noreferrer\"><code>tokio::task::spawn</code></a>.</p>\n<hr />\n<p>As for <em>why</em> Rust <code>async</code> is not exactly like C#, well, consider the differences between the two languages:</p>\n<ul>\n<li><p><strong>Rust discourages global mutable state.</strong> In C# and JS, every <code>async</code> method call is implicitly added to a global mutable queue. It's a side effect to some implicit context. For better or worse, that's not Rust's style.</p>\n</li>\n<li><p><strong>Rust is not a framework.</strong> It makes sense that C# provides a default event loop. It also provides a great garbage collector! Lots of things that come standard in other languages are optional libraries in Rust.</p>\n</li>\n</ul>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7612, "favorite_count": 9, "accepted_answer_id": 52835926, "answer_count": 3, "score": 18, "last_activity_date": 1597862436, "creation_date": 1539693761, "last_edit_date": 1545613719, "question_id": 52835725, "link": "https://stackoverflow.com/questions/52835725/what-is-the-purpose-of-async-await-in-rust", "title": "What is the purpose of async/await in Rust?", "body": "<p>In a language like C#, giving this code (I am not using the <code>await</code> keyword on purpose):</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>async Task Foo()\n{\n    var task = LongRunningOperationAsync();\n\n    // Some other non-related operation\n    AnotherOperation();\n\n    result = task.Result;\n}\n</code></pre>\n\n<p>In the first line, the long operation is run in another thread, and a <code>Task</code> is returned (that is a future). You can then do another operation that will run in parallel of the first one, and at the end, you can wait for the operation to be finished. I think that it is also the behavior of <code>async</code>/<code>await</code> in Python, JavaScript, etc.</p>\n\n<p>On the other hand, in Rust, I read in <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2394-async_await.md#hot-async-functions\" rel=\"noreferrer\">the RFC</a> that:</p>\n\n<blockquote>\n  <p>A fundamental difference between Rust's futures and those from other languages is that Rust's futures do not do anything unless polled. The whole system is built around this: for example, cancellation is dropping the future for precisely this reason. In contrast, in other languages, calling an async fn spins up a future that starts executing immediately.</p>\n</blockquote>\n\n<p>In this situation, what is the purpose of <code>async</code>/<code>await</code> in Rust? Seeing other languages, this notation is a convenient way to run parallel operations, but I cannot see how it works in Rust if the calling of an <code>async</code> function does not run anything.</p>\n"}, {"tags": ["rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539691285, "post_id": 52832245, "comment_id": 92585965, "body": "&quot;C does allow you to cast const away&quot;, yes and no, allow you ok, but attempt to modify the object is undefined behavior."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539691481, "post_id": 52832245, "comment_id": 92586079, "body": "&quot;Now, you might be able to get away with this:&quot;, if we only talk about C, no <code>void *</code> and <code>T *</code> are not compatible pointer."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539692070, "post_id": 52832245, "comment_id": 92586454, "body": "@Stargateur: But they should be the same size (for <code>Sized</code> types), and in these cases, <code>void *</code> is just being used as an opaque payload."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539692632, "post_id": 52832245, "comment_id": 92586828, "body": "No one disallow system where pointer are not the same size, C require that all pointer to struct are compatible also enum if I remember, but <code>void *</code> is allowed to have any representation, so C require an implicit or explicit cast to void *, that also the reason why one must cast pointer with <code>printf(&quot;%p&quot;, (void *)p);</code>. But if Rust run on a system I don&#39;t think pointer would have funky representation, that why I say &quot;if we talk only about C&quot;."}, {"owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "edited": false, "score": 0, "creation_date": 1539692996, "post_id": 52832245, "comment_id": 92587067, "body": "Thanks! The <code>const</code> thing was an error on my part when trying to simplify the actual API for this example. The reason why I use <code>usize</code> in my example is because I want to hide the <code>c_int</code> from the user."}, {"owner": {"reputation": 1412, "user_id": 3809561, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/RTS59.jpg?s=128&g=1", "display_name": "yyny", "link": "https://stackoverflow.com/users/3809561/yyny"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1598218993, "post_id": 52832245, "comment_id": 112379025, "body": "@Stargateur You can cast away a <code>const</code> so long as the pointer does not actually point to constant memory <code>int x = 1; const int *p = &amp;x; *(int *)p = 2; assert(x == 2);</code> is valid."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 1412, "user_id": 3809561, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/RTS59.jpg?s=128&g=1", "display_name": "yyny", "link": "https://stackoverflow.com/users/3809561/yyny"}, "edited": false, "score": 0, "creation_date": 1598219493, "post_id": 52832245, "comment_id": 112379170, "body": "@yyny please, C is already unsafe enough to not do that period, <a href=\"https://www.viva64.com/en/w/v2567/\" rel=\"nofollow noreferrer\">viva64.com/en/w/v2567</a>"}, {"owner": {"reputation": 1412, "user_id": 3809561, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/RTS59.jpg?s=128&g=1", "display_name": "yyny", "link": "https://stackoverflow.com/users/3809561/yyny"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1598224821, "post_id": 52832245, "comment_id": 112380271, "body": "@Stargateur Your link is irrelevant, not only does it show a C++ specific problem, it is also completely different. There is nothing unsafe about what I&#39;m show whether it is done in C or C++, pointer aliasing is well defined. The only thing &quot;unsafe&quot; about C/C++ that you have to understand how the language behaves, instead of telling the language how it should behave, as you do with Rust."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1539682139, "creation_date": 1539682139, "answer_id": 52832245, "question_id": 52831604, "link": "https://stackoverflow.com/questions/52831604/using-reference-to-type-parameter-in-callback-function-of-c-library/52832245#52832245", "title": "Using reference to type parameter in callback function of C library", "body": "<p>You should not be casting function pointers between different signatures.  That's catastrophically unsafe and will blow your program up (if you're lucky).  Function pointers are <strong>not</strong> interchangeable, and the compiler cannot magically make them compatible.</p>\n\n<p>What you're effectively doing here is taking an order written in Italian, scratching out \"language = Italian\", replacing it with \"language = Russian\", and expecting the Russian chef to understand it because, hey, it says it's in Russian!</p>\n\n<p>First of all, your translation of the raw C type is probably wrong.  The first argument is <code>*const c_int</code>, not <code>*mut c_int</code>.  C does allow you to cast <code>const</code> away, but it's rarely something the other code will expect.</p>\n\n<p>Secondly, you should not translate raw C pointers as safe Rust references.  If the C code calls with a null pointer, your Rust code will have undefined behaviour.  Unless the C library guarantees that both pointers are never null with a contract signed in blood and guaranteed with the programmer's first born child, don't trust it: check the pointers first.</p>\n\n<p>Third, <code>c_int</code> and <code>usize</code> are not the same type.  Do not conflate them.  The correct type to use for the Rust interface is <code>c_int</code>.</p>\n\n<p>So the actual C callback type in Rust is:</p>\n\n<pre><code>type CCallback = Option&lt;extern \"C\" fn(a: *const c_int, user_data: *mut c_void) -&gt; c_int&gt;;\n</code></pre>\n\n<p>The <code>Option</code> is there because C function pointers can be null, in Rust they can't.</p>\n\n<p>Finally, <code>Callback&lt;T&gt;</code> isn't marked with <code>extern \"C\"</code>.  Getting the calling convention exactly right is of critical importance.</p>\n\n<p>The signature of any function you intend to cast to the C callback type should be <em>exactly</em> the C callback signature.  That is:</p>\n\n<pre><code>extern \"C\" fn a_callback(a: *const c_int, user_data: *mut c_void) -&gt; c_int {\n    ::std::process::abort();\n}\n</code></pre>\n\n<p>Now, you <em>might</em> be able to get away with this:</p>\n\n<pre><code>extern \"C\" fn a_callback&lt;T&gt;(a: *const c_int, user_data: *mut T) -&gt; c_int {\n    ::std::process::abort();\n}\n</code></pre>\n\n<p>And coerce <code>Some(a_callback)</code> to <code>CCallback</code>.  That said, I can't guarantee this is correct for all possible <code>T</code>.</p>\n\n<p>To be safe, you should explicitly wrap all Rust callback functions in a translation function.  This is most easily done with a macro that, given the name of the Rust function, generates a C shim.</p>\n\n<pre><code>macro_rules! shim {\n    ($c:ident =&gt; $r:ident) =&gt; {\n        extern \"C\" fn $c(a: *const c_int, user_data: *mut c_void) -&gt; c_int {\n            if a.is_null() {\n                ::std::process::abort()\n            }\n            if user_data.is_null() {\n                ::std::process::abort()\n            }\n            // NOTE: You need to make *absolutely certain* that this cast\n            // of user_data is valid.\n            let res: i32 = $r(&amp;*a, &amp;mut *(user_data as *mut _));\n            res as c_int\n        }\n    };\n}\n\nshim!(another_callback_c =&gt; another_callback);\n\nfn another_callback(a: &amp;c_int, user_data: &amp;mut u8) -&gt; i32 {\n    // Do something...\n    ::std::process::abort()\n}\n</code></pre>\n"}], "owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 556, "favorite_count": 0, "accepted_answer_id": 52832245, "answer_count": 1, "score": 0, "last_activity_date": 1539682139, "creation_date": 1539680117, "question_id": 52831604, "link": "https://stackoverflow.com/questions/52831604/using-reference-to-type-parameter-in-callback-function-of-c-library", "title": "Using reference to type parameter in callback function of C library", "body": "<p>I am writing a Rust interface to a C library that has a function with the following signature:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef int (*callback_t)(const int *a, void *user_data);\nvoid execute(callback_t callback);\n</code></pre>\n\n<p>What I would like is that the users of the Rust interface can pass any type <code>T</code> for <code>user_data</code> (<code>user_data</code> is not used in the C library). In other words, on the Rust side I would like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Callback&lt;T&gt; = fn(a: &amp;mut usize, user_data: &amp;mut T) -&gt; usize;\n</code></pre>\n\n<p>I tried casting a user-defined Rust function of type <code>Callback&lt;T&gt;</code> to</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern \"C\" fn callback(a: *mut c_int, user_data: *mut c_void) -&gt; c_int\n</code></pre>\n\n<p>with <code>as</code>, but that does not work. I also tried to create a wrapping closure. Both attempts did not work.</p>\n\n<p>Can anyone help me out?</p>\n"}, {"tags": ["rust", "traits", "type-inference"], "answers": [{"comments": [{"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1539773668, "post_id": 52831610, "comment_id": 92621504, "body": "Please see my 3rd comment to @sebasitan-redl above."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 2, "last_activity_date": 1539680142, "creation_date": 1539680142, "answer_id": 52831610, "question_id": 52831488, "link": "https://stackoverflow.com/questions/52831488/why-does-the-compiler-not-infer-the-concrete-type-of-an-associated-type-of-an-im/52831610#52831610", "title": "Why does the compiler not infer the concrete type of an associated type of an impl trait return value?", "body": "<p>You are.</p>\n\n<p>You never specified the associated <code>Error</code> type, so you're not allowed to assume anything about it.  Even if it really is <code>()</code>, the compiler won't allow you to use that knowledge.  To solve this, just specify what <code>Error</code> is:</p>\n\n<pre><code>pub fn speaker() -&gt; impl Speak&lt;Error = ()&gt; {\n    Dog::default()\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1539773226, "post_id": 52831644, "comment_id": 92621236, "body": "You wrote: &quot;It cannot infer the type from the implementation&quot;. Really? When &quot;impl Trait&quot; was introduced, I understood that it allowed you to avoid using a Trait object, so I assumed that the actual type was resolved at compile time... Hence my expectation that the compiler would correctly infer the type."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1539773387, "post_id": 52831644, "comment_id": 92621333, "body": "@Pierre-Antoine The actual type is resolved at compile time, but <i>after type checking</i>. The callers of <code>speaker()</code> have to typecheck solely based on the information given in the signature, i.e. <code>impl Speak</code> without information on the error type."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1539773444, "post_id": 52831644, "comment_id": 92621368, "body": "Oh, that makes sense then. Thanks."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1539773596, "post_id": 52831644, "comment_id": 92621461, "body": "Also, of course I could write &quot;-&gt; Speak&lt;Error = ()&gt;&quot;, or even &quot;-&gt; Dog&quot; for that matter. But as I (tried to) explain in my question, this is not an option in my actual code, because the &#39;speaker&#39; function is generated by macro, and that macro has no information about the actual type... I guess I have to live with that, or find a way to provide that info to the macro, somehow."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1539773978, "post_id": 52831644, "comment_id": 92621668, "body": "@Pierre-Antoine Maybe file a new question with a more realistic reduction of your root problem? There is some weirdness in the design you present, like on one hand you don&#39;t want the function to specify the result type, on the other you want the caller to be able to assume it."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 10, "last_activity_date": 1539680236, "creation_date": 1539680236, "answer_id": 52831644, "question_id": 52831488, "link": "https://stackoverflow.com/questions/52831488/why-does-the-compiler-not-infer-the-concrete-type-of-an-associated-type-of-an-im/52831644#52831644", "title": "Why does the compiler not infer the concrete type of an associated type of an impl trait return value?", "body": "<p>Use <code>-&gt; impl Speak&lt;Error = ()&gt;</code> as the return type of <code>speaker()</code>.</p>\n\n<p>The problem is that the compiler needs, from the signature alone, enough information that the caller can actually use the function. If you just return <code>impl Speak</code>, then the compiler knows that <code>speak()</code> returns a <code>Result&lt;String, ???&gt;</code> - the error type isn't known, and thus the compiler issues an error.</p>\n\n<p>The compiler cannot infer anything here. It cannot infer the error type from the call site, because <code>impl Trait</code> in return position doesn't allow inference from the call site. It cannot infer the error type from the implementation, because that would mean whether the caller type-checks depends on the implementation, and that's not how <code>impl Trait</code> works. The caller must always type-check in presence of only the information of the signature; the concrete type is only plugged in after that.</p>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 273, "favorite_count": 1, "accepted_answer_id": 52831644, "answer_count": 2, "score": 2, "last_activity_date": 1539693915, "creation_date": 1539679733, "last_edit_date": 1539693915, "question_id": 52831488, "link": "https://stackoverflow.com/questions/52831488/why-does-the-compiler-not-infer-the-concrete-type-of-an-associated-type-of-an-im", "title": "Why does the compiler not infer the concrete type of an associated type of an impl trait return value?", "body": "<p>I have a trait with an associated type:</p>\n\n<pre><code>pub trait Speak {\n    type Error;\n    fn speak(&amp;self) -&gt; Result&lt;String, Self::Error&gt;;\n}\n</code></pre>\n\n<p>An implementation of that trait:</p>\n\n<pre><code>#[derive(Default)]\npub struct Dog;\n\nimpl Speak for Dog {\n    type Error = ();\n    fn speak(&amp;self) -&gt; Result&lt;String, Self::Error&gt; {\n        Ok(\"woof\".to_string())\n    }\n}\n</code></pre>\n\n<p>And a function returning an instance of that implementation:</p>\n\n<pre><code>pub fn speaker() -&gt; impl Speak {\n    Dog::default()\n}\n</code></pre>\n\n<p>I know that in this example I could just use <code>Dog</code> as the return type, but in my actual code I have to use <code>impl Speak</code> instead (the above function is in fact generated by a macro).</p>\n\n<p>As I understand it, the <code>impl Trait</code> notation lets the compiler figure out which concrete type is actually returned, so I would expect the following function to compile correctly because <code>speaker()</code> returns a <code>Dog</code> and that <code>Dog::Error</code> is the type <code>()</code>:</p>\n\n<pre><code>fn test() -&gt; Result&lt;String, ()&gt; {\n    speaker().speak()\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=62b2d039a254f6a5f49b330933a98849\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Instead, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:21:5\n   |\n20 | fn test() -&gt; Result&lt;String, ()&gt; {\n   |              ------------------ expected `std::result::Result&lt;std::string::String, ()&gt;` because of return type\n21 |     speaker().speak()\n   |     ^^^^^^^^^^^^^^^^^ expected (), found associated type\n   |\n   = note: expected type `std::result::Result&lt;_, ()&gt;`\n              found type `std::result::Result&lt;_, &lt;impl Speak as Speak&gt;::Error&gt;`\n</code></pre>\n\n<p>It is as if the compiler could not (at this point) infer the return type of the <code>speaker</code> function.</p>\n\n<p>Who is missing something something, the compiler or myself?</p>\n"}, {"tags": ["matrix", "indexing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 173, "user_id": 1513206, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39c27e71f558e85771cc3194de1bb525?s=128&d=identicon&r=PG", "display_name": "mandy", "link": "https://stackoverflow.com/users/1513206/mandy"}, "edited": false, "score": 0, "creation_date": 1539719956, "post_id": 52843024, "comment_id": 92602275, "body": "Fantastic! thanks so much, Sven. I completely missed it in the docs. It&#39;s perhaps worth including in the &quot;<code>ndarray</code> for NumPy users.&quot;"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 173, "user_id": 1513206, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39c27e71f558e85771cc3194de1bb525?s=128&d=identicon&r=PG", "display_name": "mandy", "link": "https://stackoverflow.com/users/1513206/mandy"}, "edited": false, "score": 0, "creation_date": 1539720169, "post_id": 52843024, "comment_id": 92602385, "body": "@mandy Yeah, it&#39;s not obvious on first glance.  I found it quickly by guessing its name \u2013 it&#39;s basically the same operation as <code>itertools.select()</code> in Python."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 7, "last_activity_date": 1539719191, "creation_date": 1539719191, "answer_id": 52843024, "question_id": 52830679, "link": "https://stackoverflow.com/questions/52830679/is-it-possible-to-get-non-contiguous-slices-from-an-ndarray/52843024#52843024", "title": "Is it possible to get non-contiguous slices from an ndarray?", "body": "<p>The analogue of \"advanced indexing\" in Numpy is the <a href=\"https://docs.rs/ndarray/0.12.0/ndarray/struct.ArrayBase.html#method.select\" rel=\"noreferrer\"><code>ArrayBase::select()</code></a> method:</p>\n\n<pre><code>use ndarray::{array, Axis};\n\nfn main() {\n    let x = array![[1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12]];\n    let idx = vec![0, 1, 2, 4];\n    println!(\"{}\", x.select(Axis(1), &amp;idx));\n}\n</code></pre>\n\n<p>producing the output</p>\n\n<pre><code>[[1, 2, 3, 5],\n [7, 8, 9, 11]]\n</code></pre>\n\n<p>Note that the resulting array is a copy of the selected elements (just as it is in Numpy).  Depending on your use case, you may not need the copy;  it's possible you can make do with just iterating over <code>idx</code> and using <code>x.slice(s![.., i])</code> for all <code>i</code> in <code>idx</code>.</p>\n"}], "owner": {"reputation": 173, "user_id": 1513206, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39c27e71f558e85771cc3194de1bb525?s=128&d=identicon&r=PG", "display_name": "mandy", "link": "https://stackoverflow.com/users/1513206/mandy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 547, "favorite_count": 0, "accepted_answer_id": 52843024, "answer_count": 1, "score": 5, "last_activity_date": 1539719191, "creation_date": 1539677067, "last_edit_date": 1539717629, "question_id": 52830679, "link": "https://stackoverflow.com/questions/52830679/is-it-possible-to-get-non-contiguous-slices-from-an-ndarray", "title": "Is it possible to get non-contiguous slices from an ndarray?", "body": "<p>Is it possible to index columns in a Rust <a href=\"https://docs.rs/ndarray\" rel=\"noreferrer\"><code>ndarray</code></a> matrix using a <code>Vec</code> rather than a <code>Slice</code> object? The only documentation I can find pertains to slicing using <a href=\"https://docs.rs/ndarray/0.11.2/ndarray/doc/ndarray_for_numpy_users/index.html#indexing-and-slicing\" rel=\"noreferrer\">contiguous columns</a></p>\n\n<p>Specifically, I am trying to implement something like the following code in Python:</p>\n\n<p></p>\n\n<pre><code>x = np.array([[1,2,3,4,5,6], [7,8,9,10,11,12]])\nidx = [0,1,2,4]\nx[:, idx]\n</code></pre>\n\n<p>The outcome of <code>x[:, idx]</code> would be the subset of the matrix containing all rows and only columns described in <code>idx</code>, i.e., <code>[0,1,2,4]</code>.</p>\n\n<p>I am currently using <code>ndarray</code> (as the title suggests) but I cannot find a way to subset on non-contiguous slices. For instance, you can pass <code>ndarray</code>, which can take a <code>Slice</code> with a <code>start</code>, <code>stop</code> and an <code>index</code>, but I cannot find a way to pass a list of columns that cannot be described using a <code>Slice</code> object.</p>\n\n<p>For instance:</p>\n\n<pre><code>#[macro_use]\nextern crate ndarray;\n\nfn main() {\n    let mut x = array![[1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12]];\n    let idx = vec![0, 1, 2, 4];\n    // The following works as expected\n    let y = x.slice(s![.., 0..2]);\n    println!(\"{:?}\", y);\n    // This is conceptually what I would like to do but\n    // It does not work.\n    let y = x.slice(s![.., idx]);\n}\n</code></pre>\n"}, {"tags": ["intellij-idea", "compilation", "rust", "clion", "rust-cargo"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1539661581, "post_id": 52827338, "comment_id": 92571982, "body": "In my experience when a behavior change like that it&#39;s because you do some undefined behavior, without <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> that reproduce your problem, it&#39;s gonna be impossible to answer you."}, {"owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539662530, "post_id": 52827338, "comment_id": 92572167, "body": "Yeah you are right, maybe I&#39;m seeking for just information not accurate anwsers. Tha&#39;s why I did not post any codes here. @Stargateur"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539690974, "post_id": 52833176, "comment_id": 92585782, "body": "That maybe fixed your problem but I doubt this would be useful to anyone in the future."}, {"owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539691535, "post_id": 52833176, "comment_id": 92586118, "body": "rarely @Stargateur"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1539700699, "post_id": 52833176, "comment_id": 92592075, "body": "Can you give more information, for future readers? How would I know, by using <code>ldd</code>, whether I&#39;m subject to &quot;strange problems&quot; or not?"}], "tags": [], "owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "is_accepted": true, "score": 0, "last_activity_date": 1539688603, "last_edit_date": 1539688603, "creation_date": 1539684943, "answer_id": 52833176, "question_id": 52827338, "link": "https://stackoverflow.com/questions/52827338/difference-between-rust-compile-modes/52833176#52833176", "title": "Difference between Rust compile modes", "body": "<p>For those who encountered similar problems, well not only in Rust, but also other programming langues, I found the reason for the different behaivors:</p>\n\n<p><strong>Dynamic library mess</strong></p>\n\n<p>I name it like this, not sure if it is correct, but to describe that multiple versions of the same dynamic library lay in your computers different paths may cause strange problems like I've encountered.</p>\n\n<p>If you are in a situation like this, use <code>ldd</code> to check the library dependancies.</p>\n\n<p>And also, remember to cleanup all the caches.</p>\n"}], "owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 633, "favorite_count": 0, "closed_date": 1539701254, "accepted_answer_id": 52833176, "answer_count": 1, "score": 0, "last_activity_date": 1541629480, "creation_date": 1539658659, "last_edit_date": 1541629480, "question_id": 52827338, "link": "https://stackoverflow.com/questions/52827338/difference-between-rust-compile-modes", "closed_reason": "Not suitable for this site", "title": "Difference between Rust compile modes", "body": "<p>I'm new to Rust.</p>\n\n<p>As I used to code a lot in Jetbrains IDEs (of course with Ideavim), I decide to pick up a Jetbrains IDE for Rust too, be more specificly CLion(as I also have to write C++ sometimes). Here you can treat CLion like Intellij or Pycharm/Rubymine/Android-studio if you are not fammiliar with it, because afterall what really does the work is the Rust plugin powered by LLDB.</p>\n\n<p>Today I encountered a very strange thing:</p>\n\n<p>I have wrote a library in C, which works fine in a C++ project. In my new Rust project, I want to keep using it, as a dynamic library. It compiles well, but it behaves strange, like, sometimes the logging to std does not work, the file operation does not work, and something more.</p>\n\n<p>After some more investigation, I found out my test cases will:</p>\n\n<ul>\n<li>Fail if I run through CLion/Intellij <code>Run selected configuration</code></li>\n<li>Fail if I run through CLI <code>cargo test -- --nocapture</code></li>\n<li>Pass if I run through CLI <code>cargo test --release -- --nocapture</code></li>\n<li>Pass if I run through CLion/Intellij <code>Debug selected configuration</code></li>\n</ul>\n\n<p>Here Intellij <code>Debug</code> behaves like <code>cargo --release</code>, <code>Run</code> behaves like <code>cargo</code>(without <code>--release</code>), have no idea why.</p>\n\n<p>You may suspect that that's because I wrote some build-type-depending codes, but at least it's not true in the Rust part. As to the C library, it already been compiled, I do not think different rust compile types will change something inside it. </p>\n\n<p>I checked the Rust configuration in CLion, found no items concerns to build mode.</p>\n\n<p>OK, that's the context, and here comes my questions:</p>\n\n<ul>\n<li>What's the difference between Intellij <code>Run selected configuration</code>/<code>Debug selected configuration</code> for Rust by default</li>\n<li>Why Intellij <code>Debug</code>/<code>Run</code> behaves opposing to <code>cargo --release</code>/<code>cargo</code></li>\n<li>What may cause the different behaving between compile mode while I have no mode-depending codes in Rust.(no third party crates here)</li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539655472, "post_id": 52826904, "comment_id": 92570655, "body": "I believe the last part of your question is answered by the answers of <a href=\"https://stackoverflow.com/q/45095523/155423\">Why does creating a mutable reference to a dereferenced mutable reference work?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539655615, "post_id": 52826904, "comment_id": 92570696, "body": "I believe the rest of your question is answered by the answers of <a href=\"https://stackoverflow.com/q/48143889/155423\">Retaking ownership of a mutable reference passed to a function accepting a generic type</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52826904/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 520, "user_id": 1064977, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/759bb9b1387fc6909ddabd48a7866d08?s=128&d=identicon&r=PG", "display_name": "Andrew Gunnerson", "link": "https://stackoverflow.com/users/1064977/andrew-gunnerson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539661281, "post_id": 52826904, "comment_id": 92571933, "body": "@Shepmaster Thank you! Yes, those two links answer my questions."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1539675817, "post_id": 52826904, "comment_id": 92577042, "body": "A better design  for your function is to mutably borrow the argument: <code>fn file_op&lt;R: Read&gt;(reader: &amp;mut R) -&gt; io::Result&lt;()&gt; {</code>. Then everything work without further ado."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1539683744, "post_id": 52826904, "comment_id": 92581658, "body": "Or with <code>impl Trait</code> in argument position: <code>fn file_op(reader: &amp;mut impl Read) -&gt; io::Result&lt;()&gt;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539693204, "post_id": 52826904, "comment_id": 92587211, "body": "I actually disagree with the two previous comments that taking a mutable reference is a <i>better</i> design."}, {"owner": {"reputation": 520, "user_id": 1064977, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/759bb9b1387fc6909ddabd48a7866d08?s=128&d=identicon&r=PG", "display_name": "Andrew Gunnerson", "link": "https://stackoverflow.com/users/1064977/andrew-gunnerson"}, "edited": false, "score": 0, "creation_date": 1539734308, "post_id": 52826904, "comment_id": 92606966, "body": "I actually did have the function take a mutable reference before, but changed it based on the recommendation in the Rust API guidelines: <a href=\"https://rust-lang-nursery.github.io/api-guidelines/interoperability.html#generic-readerwriter-functions-take-r-read-and-w-write-by-value-c-rw-value\" rel=\"nofollow noreferrer\">rust-lang-nursery.github.io/api-guidelines/&hellip;</a>"}], "owner": {"reputation": 520, "user_id": 1064977, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/759bb9b1387fc6909ddabd48a7866d08?s=128&d=identicon&r=PG", "display_name": "Andrew Gunnerson", "link": "https://stackoverflow.com/users/1064977/andrew-gunnerson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 47, "favorite_count": 0, "closed_date": 1539675702, "answer_count": 0, "score": 0, "last_activity_date": 1539675715, "creation_date": 1539654995, "last_edit_date": 1539655390, "question_id": 52826904, "link": "https://stackoverflow.com/questions/52826904/passing-mut-directly-to-function-accepting-r-read-works-but-not-though-refe", "closed_reason": "Duplicate", "title": "Passing &amp;mut directly to function accepting &lt;R: Read&gt; works, but not though reference variable", "body": "<p>I have this program:</p>\n\n<pre><code>use std::io::{self, Cursor, prelude::*};\n\nfn file_op&lt;R: Read&gt;(mut reader: R) -&gt; io::Result&lt;()&gt; {\n    // Some file operation\n    let mut buf = [0u8];\n    reader.read(&amp;mut buf)?;\n    Ok(())\n}\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let mut f = Cursor::new(vec![0xffu8]);\n\n    // Works    \n    file_op(&amp;mut f)?;\n    file_op(&amp;mut f)?;\n\n    let x = &amp;mut f;\n\n    // Does not work\n    file_op(x)?;\n    file_op(x)?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>I understand that the first portion (<code>// Works</code>) works because any <code>&amp;mut T</code> where <code>T: Read</code> also implements <code>Read</code> (from <code>impl&lt;'a, R: Read + ?Sized&gt; Read for &amp;'a mut R</code> in libstd).</p>\n\n<p>However, I don't understand why the second portion (<code>// Does not work</code>) causes a use after move error. Isn't the <code>R</code> type parameter a <code>&amp;mut Cursor</code> (which implements <code>Read</code>) in both cases? If I'm only using references, what is getting moved? The reference variable, <code>x</code>, itself?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `x`\n  --&gt; src/main.rs:21:13\n   |\n20 |     file_op(x)?;\n   |             - value moved here\n21 |     file_op(x)?;\n   |             ^ value used here after move\n   |\n   = note: move occurs because `x` has type `&amp;mut std::io::Cursor&lt;std::vec::Vec&lt;u8&gt;&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>Interestingly, dereferencing <code>x</code> and referencing it again also works:</p>\n\n<pre><code>file_op(&amp;mut *x)?;\nfile_op(&amp;mut *x)?;\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539642081, "post_id": 52825268, "comment_id": 92567849, "body": "<i>increase the download [,,,] times</i> \u2014 I thought that all the dependencies, optional or not, would be downloaded anyway..."}], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 4491972, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-LslGuCC7K8M/AAAAAAAAAAI/AAAAAAAAAKM/iYhEq60OJfw/photo.jpg?sz=128", "display_name": "Mohammad Amin Sameti", "link": "https://stackoverflow.com/users/4491972/mohammad-amin-sameti"}, "is_accepted": false, "score": 0, "last_activity_date": 1618741489, "creation_date": 1618741489, "answer_id": 67147497, "question_id": 52825268, "link": "https://stackoverflow.com/questions/52825268/can-a-cargo-feature-enable-features-from-optional-dependencies-without-forcing-t/67147497#67147497", "title": "Can a Cargo feature enable features from optional dependencies without forcing those crates to be activated?", "body": "<p>No, this is not supported currently by Cargo, although there is <a href=\"https://github.com/rust-lang/cargo/issues/8832\" rel=\"nofollow noreferrer\">a tracking issue</a> for this feature.</p>\n"}], "owner": {"reputation": 361, "user_id": 754677, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/M3fgj.png?s=128&g=1", "display_name": "FusterCluck", "link": "https://stackoverflow.com/users/754677/fustercluck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1054, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1618741489, "creation_date": 1539640591, "last_edit_date": 1539651237, "question_id": 52825268, "link": "https://stackoverflow.com/questions/52825268/can-a-cargo-feature-enable-features-from-optional-dependencies-without-forcing-t", "title": "Can a Cargo feature enable features from optional dependencies without forcing those crates to be activated?", "body": "<p>This is the Cargo.toml for a library crate.  It supports two different embedded boards by having optional dependencies on board support crates <code>board-a</code> and <code>board-b</code>, and only one of these is selected by running <code>cargo build --features target-a</code>.</p>\n\n<p>There is also a common third-party module, which optionally uses the <code>const-fn</code> feature.  This option is exposed in the library crate:</p>\n\n<pre><code>[dependencies]\ncommon = {...}\nboard-a = {optional=true, ...}\nboard-b = {optional=true, ...}\n\n[features]\nconst-fn = [\"common/const-fn\"]\ntarget-a = [\"board-a\"]\ntarget-b = [\"board-b\"]\n</code></pre>\n\n<p>So far so good, but what if the <code>board-a</code> and <code>board-b</code> crates also have optional <code>const-fn</code> features, and I want to expose those options to users of the library crate?  Can I do this without creating <code>target-a-const-fn</code> and <code>target-b-const-fn</code> features?  That would obviously get very messy the more optional features I expose, or the more boards that we support.</p>\n\n<p>I don't want to make the <code>const-fn</code> feature pull in both board crates -- only the selected one should be used, otherwise it would needlessly increase the download and compile times.  Ideally I want something equivalent to the following, but as far as I can see nothing remotely like it exists:</p>\n\n<pre><code>[features]\nconst-fn = [\"common/const-fn\", \"board-a/const-fn\" if target-a, \"board-b/const-fn\" if target-b]\ntarget-a = ...\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539638765, "post_id": 52824931, "comment_id": 92566989, "body": "Those aren&#39;t <i>syntax</i> errors."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539638976, "post_id": 52824931, "comment_id": 92567040, "body": "Where do you believe that the value that you are trying to take a reference to will live between loop iterations?"}, {"owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539639342, "post_id": 52824931, "comment_id": 92567129, "body": "I dont know ....."}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1539642249, "last_edit_date": 1539642249, "creation_date": 1539641919, "answer_id": 52825485, "question_id": 52824931, "link": "https://stackoverflow.com/questions/52824931/unable-to-decrement-a-biguint-in-a-loop-because-a-temporary-value-does-not-live/52825485#52825485", "title": "Unable to decrement a &amp;BigUint in a loop because a temporary value does not live long enough", "body": "<p>If you want to change the value of <code>value</code>... you must take it as <code>&amp;mut</code>. Take it as <code>mut &amp;</code> don't make a lot of sense. After you could use <code>-=</code>.</p>\n\n<pre><code>extern crate num; // 0.2.0\n\nuse num::{BigUint, One};\n\nfn decrease(value: &amp;mut BigUint) {\n    while value != &amp;BigUint::one() {\n        *value -= BigUint::one();\n        println!(\"new value {}\", value);\n    }\n}\n\nfn main() {\n    decrease(&amp;mut BigUint::new(vec!(42)));\n}\n</code></pre>\n"}], "owner": {"reputation": 183, "user_id": 2581199, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/d73ec3d17f22435cfb35fd03ccaab721?s=128&d=identicon&r=PG", "display_name": "Kevin", "link": "https://stackoverflow.com/users/2581199/kevin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 52825485, "answer_count": 1, "score": 0, "last_activity_date": 1539642249, "creation_date": 1539638498, "last_edit_date": 1539638737, "question_id": 52824931, "link": "https://stackoverflow.com/questions/52824931/unable-to-decrement-a-biguint-in-a-loop-because-a-temporary-value-does-not-live", "title": "Unable to decrement a &amp;BigUint in a loop because a temporary value does not live long enough", "body": "<p>I am trying to write a factorial function but I am getting horrible syntax errors. I have boiled my problem down to a few lines of code. I have tried changing the value assignment to <code>let value =</code> but then I just end up with an infinite loop.</p>\n\n<pre><code>extern crate num; // 0.2.0\n\nuse num::{bigint::BigUint, One};\n\nfn decrease(mut value: &amp;BigUint) {\n    while value != &amp;BigUint::one() {\n        value = &amp;(value - BigUint::one());\n        println!(\"new value {}\", value);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n --&gt; src/lib.rs:7:18\n  |\n7 |         value = &amp;(value - BigUint::one());\n  |                  ^^^^^^^^^^^^^^^^^^^^^^^^- temporary value only lives until here\n  |                  |\n  |                  temporary value does not live long enough\n  |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 5:1...\n --&gt; src/lib.rs:5:1\n  |\n5 | / fn decrease(mut value: &amp;BigUint) {\n6 | |     while value != &amp;BigUint::one() {\n7 | |         value = &amp;(value - BigUint::one());\n8 | |         println!(\"new value {}\", value);\n9 | |     }\n10| | }\n  | |_^\n  = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539629105, "post_id": 52822729, "comment_id": 92562951, "body": "Here is <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=8fc3afaa34b6891318cb6703c28f7ea6\" rel=\"nofollow noreferrer\">the duplicate applied to your exact situation</a>."}], "owner": {"reputation": 11, "user_id": 7922199, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3eb59eb11ddb697d6b68623f5fb82e39?s=128&d=identicon&r=PG&f=1", "display_name": "David Shepherd", "link": "https://stackoverflow.com/users/7922199/david-shepherd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 36, "favorite_count": 0, "closed_date": 1539629065, "answer_count": 0, "score": 1, "last_activity_date": 1539628913, "creation_date": 1539628001, "last_edit_date": 1539628627, "question_id": 52822729, "link": "https://stackoverflow.com/questions/52822729/how-do-i-output-the-debug-view-of-a-hash-map-to-a-text-file-in-rust", "closed_reason": "Duplicate", "title": "How do I output the debug view of a hash map to a text file in Rust?", "body": "<p>I have a hash map and would like to put it into a text file. For printing  to the console, I would use <code>println</code>'s debug formatter to output the entire hash map.</p>\n\n<p>Is there a similar method to do this for outputting to files? If not, what write method do you recommend? I have attempted a for loop and iterated through but i'm not sure if I should use <code>write_all</code> or just <code>write</code>.</p>\n"}, {"tags": ["dictionary", "rust"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1539625304, "post_id": 52822059, "comment_id": 92561092, "body": "How did you try with a hashmap?"}, {"owner": {"reputation": 6456, "user_id": 728236, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SOeHR.jpg?s=128&g=1", "display_name": "Brian Leishman", "link": "https://stackoverflow.com/users/728236/brian-leishman"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1539625338, "post_id": 52822059, "comment_id": 92561110, "body": "I actually have that version next to the match.rs file <a href=\"https://github.com/BrianLeishman/mysql-format/blob/master/src/words_hashmap.rs\" rel=\"nofollow noreferrer\">github.com/BrianLeishman/mysql-format/blob/master/src/&hellip;</a>"}, {"owner": {"reputation": 6456, "user_id": 728236, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SOeHR.jpg?s=128&g=1", "display_name": "Brian Leishman", "link": "https://stackoverflow.com/users/728236/brian-leishman"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1539625546, "post_id": 52822059, "comment_id": 92561214, "body": "I&#39;ve also added a snippet of that to the question :)"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1539625859, "post_id": 52822059, "comment_id": 92561370, "body": "The default hashmap hasher is notoriously slow as it tries to protect against collision attacks. You might want to try with a faster implementation, for example <a href=\"https://docs.rs/fasthash/0.3.2/fasthash/\" rel=\"nofollow noreferrer\">docs.rs/fasthash/0.3.2/fasthash</a>"}, {"owner": {"reputation": 6456, "user_id": 728236, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SOeHR.jpg?s=128&g=1", "display_name": "Brian Leishman", "link": "https://stackoverflow.com/users/728236/brian-leishman"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1539625935, "post_id": 52822059, "comment_id": 92561408, "body": "Yes, I figured that with the secure hashing it uses that it would likely be slow, I wrote it anyway as more of a learning exercise @DenysS&#233;guret, but that definitely looks interesting I&#39;ll try that out as well"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539627574, "post_id": 52822059, "comment_id": 92562170, "body": "Why would you use a <code>HashMap</code> instead of a <code>HashSet</code>?"}, {"owner": {"reputation": 6456, "user_id": 728236, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SOeHR.jpg?s=128&g=1", "display_name": "Brian Leishman", "link": "https://stackoverflow.com/users/728236/brian-leishman"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539627669, "post_id": 52822059, "comment_id": 92562216, "body": "@Shepmaster not knowing what a <code>HashSet</code> is :)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539672499, "post_id": 52822059, "comment_id": 92575311, "body": "maybe the <a href=\"https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_algorithm\" rel=\"nofollow noreferrer\">aho-corasick-algorithmn</a> can work here. There is a <a href=\"https://github.com/BurntSushi/aho-corasick\" rel=\"nofollow noreferrer\">crate</a> for it ;)"}], "answers": [{"comments": [{"owner": {"reputation": 6456, "user_id": 728236, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SOeHR.jpg?s=128&g=1", "display_name": "Brian Leishman", "link": "https://stackoverflow.com/users/728236/brian-leishman"}, "edited": false, "score": 0, "creation_date": 1539655116, "post_id": 52822604, "comment_id": 92570573, "body": "Damn that&#39;s impressive, cut the time of the entire execution to a 3rd of what it was before this"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1539627660, "last_edit_date": 1539627660, "creation_date": 1539627438, "answer_id": 52822604, "question_id": 52822059, "link": "https://stackoverflow.com/questions/52822059/fastest-way-to-check-if-a-given-word-exists-in-a-fixed-list-of-words/52822604#52822604", "title": "Fastest way to check if a given word exists in a fixed list of words", "body": "<p>Since your list is fixed at compile time, use a <a href=\"https://en.wikipedia.org/wiki/Perfect_hash_function\" rel=\"nofollow noreferrer\">perfect hash</a>, such as that provided by the <a href=\"https://github.com/sfackler/rust-phf\" rel=\"nofollow noreferrer\">phf crate</a>:</p>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>extern crate phf_codegen;\n\nuse std::env;\nuse std::fs::File;\nuse std::io::{BufWriter, Write};\nuse std::path::Path;\n\nfn main() {\n    let path = Path::new(&amp;env::var(\"OUT_DIR\").unwrap()).join(\"codegen.rs\");\n    let mut file = BufWriter::new(File::create(&amp;path).unwrap());\n\n    write!(&amp;mut file, \"static KEYWORDS: phf::Set&lt;&amp;'static str&gt; = \").unwrap();\n    phf_codegen::Set::new()\n        .entry(\"accessible\")\n        .entry(\"account\")\n        .entry(\"action\")\n        .entry(\"active\")\n        .entry(\"add\")\n        // ...\n        .entry(\"year\")\n        .entry(\"year_month\")\n        .entry(\"zerofill\")\n        .build(&amp;mut file)\n        .unwrap();\n    write!(&amp;mut file, \";\\n\").unwrap();\n}\n</code></pre>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>extern crate phf;\n\ninclude!(concat!(env!(\"OUT_DIR\"), \"/codegen.rs\"));\n\npub fn is_word(word: &amp;str) -&gt; bool {\n    KEYWORDS.contains(word)\n}\n</code></pre>\n\n<p>According to the benchmarking code you've provided, this is at least as fast.</p>\n"}], "owner": {"reputation": 6456, "user_id": 728236, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SOeHR.jpg?s=128&g=1", "display_name": "Brian Leishman", "link": "https://stackoverflow.com/users/728236/brian-leishman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 0, "accepted_answer_id": 52822604, "answer_count": 1, "score": 2, "last_activity_date": 1539627660, "creation_date": 1539625115, "last_edit_date": 1539627557, "question_id": 52822059, "link": "https://stackoverflow.com/questions/52822059/fastest-way-to-check-if-a-given-word-exists-in-a-fixed-list-of-words", "title": "Fastest way to check if a given word exists in a fixed list of words", "body": "<p>This may not be specific to Rust, although it's the language I'm currently focusing on.</p>\n\n<p>I'm writing a function to parse a language (MySQL) into tokens and output them in a formatted way, and part of that includes looking up the current work token to see if it's a name, a function, or a column/table name.</p>\n\n<p>Currently, I'm using a match statement like</p>\n\n<pre><code>pub fn is_word(word: &amp;str) -&gt; bool {\n    match word {\n        \"accessible\"\n        | \"account\"\n        | \"action\"\n        | \"active\"\n        | \"add\"\n        // ...\n        | \"year\"\n        | \"year_month\"\n        | \"zerofill\" =&gt; true,\n        _ =&gt; false,\n    }\n}\n</code></pre>\n\n<p>The <a href=\"https://github.com/BrianLeishman/mysql-format/blob/master/src/words_match.rs\" rel=\"nofollow noreferrer\">actual list</a> is much, much longer. </p>\n\n<p>Is this the best way to go about this? I've tried using a <code>HashMap</code> as well with <code>.contains_key()</code>, but that was notably slower</p>\n\n<hr>\n\n<p>My <a href=\"https://github.com/BrianLeishman/mysql-format/blob/master/src/words_hashmap.rs\" rel=\"nofollow noreferrer\"><code>HashMap</code> implementation</a> looks like this:</p>\n\n<pre><code>use std::collections::HashMap;\n\nlazy_static! {\n    static ref words: HashMap&lt;&amp;'static str, u8&gt; = hashmap!{\n        \"accessible\" =&gt; 0,\n        \"account\" =&gt; 0,\n        \"action\" =&gt; 0,\n        \"active\" =&gt; 0,\n        \"add\" =&gt; 0,\n        // ...\n        \"year\" =&gt; 0,\n        \"year_month\" =&gt; 0,\n        \"zerofill\" =&gt; 0,\n    };\n}\n\npub fn is_word(word: &amp;str) -&gt; bool {\n    words.contains_key(word)\n}\n</code></pre>\n"}, {"tags": ["visual-studio-code", "rust"], "comments": [{"owner": {"reputation": 458, "user_id": 8420233, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5JX6a.png?s=128&g=1", "display_name": "absoluteAquarian", "link": "https://stackoverflow.com/users/8420233/absoluteaquarian"}, "edited": false, "score": 0, "creation_date": 1539610777, "post_id": 52818027, "comment_id": 92553471, "body": "try using another code editing software, e.g. Notepad++.  if the problem goes away, then there may be a problem with VSCode"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539611066, "post_id": 52818027, "comment_id": 92553634, "body": "This question may be more appropriate for <a href=\"https://users.rust-lang.org\" rel=\"nofollow noreferrer\">the forum</a>, because this question does not relate to programming (IMHO)."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 4, "creation_date": 1539611241, "post_id": 52818027, "comment_id": 92553750, "body": "I strongly suspect you are not editing the file you think you are. Or you are calling cargo run from the wrong directory."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539611342, "post_id": 52818027, "comment_id": 92553815, "body": "@hellow Questions regarding the use of an IDE for programming purposes are considered on-topic for SO. The only possible issue in this question is that we might not be able to reproduce it."}, {"owner": {"reputation": 73, "user_id": 2592525, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf9fd9479f530292dcba81531aafadf0?s=128&d=identicon&r=PG", "display_name": "Tigger", "link": "https://stackoverflow.com/users/2592525/tigger"}, "edited": false, "score": 0, "creation_date": 1539611947, "post_id": 52818027, "comment_id": 92554214, "body": "That&#39;s a good idea, Tau.  I&#39;ll give that a try and post back the results.  My main issue is I really love VS Code and as a newbie to Rust, I&#39;m not sure what I would do.  Thanks!"}, {"owner": {"reputation": 73, "user_id": 2592525, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf9fd9479f530292dcba81531aafadf0?s=128&d=identicon&r=PG", "display_name": "Tigger", "link": "https://stackoverflow.com/users/2592525/tigger"}, "edited": false, "score": 0, "creation_date": 1539612075, "post_id": 52818027, "comment_id": 92554305, "body": "That&#39;s the first thing I thought of, Benjamin Lindley, but I&#39;ve double and triple checked and more and I can state 100% that that&#39;s not the problem.  Thanks though."}, {"owner": {"reputation": 73, "user_id": 2592525, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf9fd9479f530292dcba81531aafadf0?s=128&d=identicon&r=PG", "display_name": "Tigger", "link": "https://stackoverflow.com/users/2592525/tigger"}, "edited": false, "score": 0, "creation_date": 1539612312, "post_id": 52818027, "comment_id": 92554441, "body": "I&#39;d love to know if anyone gets the same or different results using Cargo and VS Code, regardless of OS, E_Net4.  Since I had the same results on two different computers, although both are running Fedora 28, it would about have to be the OS."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539612679, "post_id": 52818027, "comment_id": 92554665, "body": "VSCode works fine with the exact same steps on macOS. I doubly agree that your VS Code isn&#39;t saving to the same directory that your cargo process is in."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1539612893, "post_id": 52818027, "comment_id": 92554799, "body": "The fact that <code>cargo run</code> seems to be executing the code that is displayed by <code>cat src&#47;main.rs</code> sheds doubt on your theory that cargo has anything to do with the problem. And FWIW, I also use VSCode (on Windows), and do not have this problem."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1539615041, "post_id": 52818027, "comment_id": 92556161, "body": "@Tigger Note that you have to mention the user with the <code>@</code> prefix in order for that user to receive a notification. As for this issue, consider also including all details on how (and from where) you installed Rust+Cargo and Visual Studio Code."}], "answers": [{"tags": [], "owner": {"reputation": 73, "user_id": 2592525, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf9fd9479f530292dcba81531aafadf0?s=128&d=identicon&r=PG", "display_name": "Tigger", "link": "https://stackoverflow.com/users/2592525/tigger"}, "is_accepted": false, "score": 0, "last_activity_date": 1539617186, "creation_date": 1539617186, "answer_id": 52820013, "question_id": 52818027, "link": "https://stackoverflow.com/questions/52818027/why-are-the-changes-i-make-to-my-rust-program-from-vs-code-not-reflected-when-i/52820013#52820013", "title": "Why are the changes I make to my Rust program from VS Code not reflected when I compile?", "body": "<p>@Tau turned out to be correct.  Using Kwrite, the changes seemed to propagate correctly.  What's really odd is that Kwrite and VS Code seemed to synchronize with one another.  That's really annoying for me as I am a VS Code fanatic.  Maybe I post an issue about this for VS Code.  Thanks to all for their suggestions.</p>\n"}], "owner": {"reputation": 73, "user_id": 2592525, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf9fd9479f530292dcba81531aafadf0?s=128&d=identicon&r=PG", "display_name": "Tigger", "link": "https://stackoverflow.com/users/2592525/tigger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 178, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1539620357, "creation_date": 1539610562, "last_edit_date": 1539612523, "question_id": 52818027, "link": "https://stackoverflow.com/questions/52818027/why-are-the-changes-i-make-to-my-rust-program-from-vs-code-not-reflected-when-i", "title": "Why are the changes I make to my Rust program from VS Code not reflected when I compile?", "body": "<p>I'm having a problem with Rust that I strongly suspect has do with a disconnect between Cargo and VS Code.</p>\n\n<ul>\n<li><p>I build my Cargo project with <code>cargo new project</code></p></li>\n<li><p>I edit my <em>src/main.rs</em> with VS Code and save it.</p></li>\n<li><p>I issue <code>cargo run</code> </p></li>\n<li><p>I see the result from the hello world <em>main.rs</em> instead of the results of the changes I made.</p></li>\n</ul>\n\n<p>What I find interesting is that if I do a <code>cat src/main.rs</code> from the terminal, I see the original Rust code, even though VS Code assures me that it saved it and shows me that code even if I restart VS Code.</p>\n\n<p>I've had this problem on a couple of computers now (same OS, Fedora 28).  I strongly suspect that Cargo is doing some buffering somewhere that is defeating VS Code.  Has anyone else seen this behavior or know the cause?  Are there any cures or work-arounds?</p>\n"}, {"tags": ["rust", "cross-platform", "rust-cargo"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1539600679, "post_id": 52814471, "comment_id": 92547428, "body": "First question, why? You should not mess with that directory. Second, I would suggest looking at the cargo source, because they have to handle that in any way."}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539628642, "post_id": 52814471, "comment_id": 92562687, "body": "I might want to write a tool to clean out outdated crate sources, because my hard disk space is unfortunately limited."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1539672026, "post_id": 52814471, "comment_id": 92575085, "body": "That&#39;s a neat idea! I think the best you could do is to look at the sources. But I&#39;m note sure, if you just can delete them, there might be a local &quot;database&quot; which crates has been downloaded. Interesting nevertheless"}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539687255, "post_id": 52814471, "comment_id": 92583607, "body": "That&#39;s what I currently do, but I&#39;m not happy with that as it means I&#39;ll have to redownload all the crates again, and I often code Rust on the train where connectivity is spotty."}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 115, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1539598695, "creation_date": 1539598695, "question_id": 52814471, "link": "https://stackoverflow.com/questions/52814471/how-to-get-at-the-cargo-registry-src-directory-in-a-cross-platform-way", "title": "How to get at the cargo registry / src directory in a cross-platform way?", "body": "<p>On Linux, this is at <code>$HOME/.cargo/registry</code>, which has a subdirectory called <code>src/</code>. Is there a way to find this directory that will also work on Windows and MacOS?</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1539589662, "post_id": 52811791, "comment_id": 92541769, "body": "Please note, that <code>unsafe</code> in this case is not needed, because to cast something into a pointer is totaly safe, but dereferencing a pointer is unsafe."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1539589782, "post_id": 52811791, "comment_id": 92541829, "body": "Second note: you should accept a <code>size_t</code> instead of a <code>unsigned int</code> for sizes (of arrays) in C. See <a href=\"https://stackoverflow.com/questions/2550774/what-is-size-t-in-c\">stackoverflow.com/questions/2550774/what-is-size-t-in-c</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1539589867, "post_id": 52811791, "comment_id": 92541875, "body": "Third note: you have to use <code>#[no_mangle]</code> to disable name-mangling to be able to call it from C."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1539590151, "post_id": 52811791, "comment_id": 92542031, "body": "Fourth note: I suspect, that you want to modify the <code>vec</code> in the <code>func</code> function. Make sure, that you use <code>set_len</code> (which is unsafe) to set the length of the <code>Vec</code>."}, {"owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539590496, "post_id": 52811791, "comment_id": 92542206, "body": "@hellow Thanks man. For the second one: actually I need uint32_t here, but I do not want to include too much headers like <code>stdint.h</code> into the api header. <code>size_t</code> may be long, which is longer than uint32_t, not fit."}, {"owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539590965, "post_id": 52811791, "comment_id": 92542418, "body": "@hellow  For first one: I will try. For 3rd: yeah I did something similar. For 4th: yeah I did."}], "answers": [{"tags": [], "owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "is_accepted": true, "score": 3, "last_activity_date": 1539589387, "creation_date": 1539589387, "answer_id": 52811918, "question_id": 52811791, "link": "https://stackoverflow.com/questions/52811791/how-to-get-a-mutable-u32-pointer-and-cast-it-into-an-int-pointer-of-c/52811918#52811918", "title": "How to get a mutable u32 pointer and cast it into an int pointer of C", "body": "<p>Finally I found the anwser, I have to give it a mutable sign:</p>\n\n<pre><code>func(vec.as_ptr() as *mut c_char, &amp;mut capacity as *mut c_uint)\n</code></pre>\n"}], "owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1334, "favorite_count": 1, "accepted_answer_id": 52811918, "answer_count": 1, "score": 1, "last_activity_date": 1610933757, "creation_date": 1539588902, "last_edit_date": 1610933757, "question_id": 52811791, "link": "https://stackoverflow.com/questions/52811791/how-to-get-a-mutable-u32-pointer-and-cast-it-into-an-int-pointer-of-c", "title": "How to get a mutable u32 pointer and cast it into an int pointer of C", "body": "<p>Let's say I have a C function:</p>\n<pre><code>void func(char *buf, unsigned int *len);\n</code></pre>\n<p>To call it in Rust, I declared:</p>\n<pre><code>pub fn func(buf: *mut ::std::os::raw::c_char, len: *mut ::std::os::raw::c_uint) {\n    unimplemented!()\n}\n</code></pre>\n<p>Then I wrote another wrapper:</p>\n<pre><code>pub fn another_func() -&gt; String {\n    let mut capacity: u32 = 256;\n    let mut vec = Vec::with_capacity(capacity as usize);\n    unsafe {\n        func(vec.as_ptr() as *mut c_char, &amp;capacity as *mut c_uint)\n    };\n    String::from_utf8(vec).unwrap();\n    unimplemented!()\n}\n</code></pre>\n<p>But the compiler told me:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0606]: casting `&amp;u32` as `*mut u32` is invalid\n   --&gt; src/main.rs:...:28\n    |\n307 |                                  &amp;capacity as *mut c_uint)\n</code></pre>\n<p>Why can't I cast <code>capacity</code> into <code>*mut c_unit</code>?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "edited": false, "score": 0, "creation_date": 1539572607, "post_id": 52808991, "comment_id": 92536420, "body": "I see! so I guess by convention people use <code>@name</code>. It can be any sequence of tokens then. Thanks for your explanation and your little book of macros is of great help btw. I wish it had little more explanations, examples and references."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 2, "last_activity_date": 1539570564, "creation_date": 1539570564, "answer_id": 52808991, "question_id": 52808949, "link": "https://stackoverflow.com/questions/52808949/use-of-internal-rules-in-rust-macros-2-0/52808991#52808991", "title": "Use of internal rules in Rust macros 2.0", "body": "<p>You <em>linked</em> to the definitions.  <code>@TAIL</code> is right there three lines down on 137, <code>@MAKE</code> is on 162.</p>\n\n<p><code>@name</code> is not special in any way whatsoever.  There is absolutely no special behaviour.  It's just a sequence of tokens that cannot show up in \"normal\" code, and is thus unlikely to be accidentally matched to other rules.  <code>@as_expr</code> does not hide an <code>as_expr!</code> macro, it's used <em>instead</em> of defining a publicly visible <code>as_expr!</code> macro.</p>\n"}], "owner": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 235, "favorite_count": 0, "accepted_answer_id": 52808991, "answer_count": 1, "score": 0, "last_activity_date": 1539611033, "creation_date": 1539570210, "last_edit_date": 1539611033, "question_id": 52808949, "link": "https://stackoverflow.com/questions/52808949/use-of-internal-rules-in-rust-macros-2-0", "title": "Use of internal rules in Rust macros 2.0", "body": "<p>I cannot understand where lazy-static's <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs/blob/af6a4697f65d596bafbad66650998a1d6e05157a/src/lib.rs#L134\" rel=\"nofollow noreferrer\"><code>@TAIL</code></a> and <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs/blob/af6a4697f65d596bafbad66650998a1d6e05157a/src/lib.rs#L133\" rel=\"nofollow noreferrer\"><code>@MAKE</code></a> have been defined and their particular use cases.</p>\n\n<p>If I've understood <a href=\"https://danielkeep.github.io/tlborm/book/pat-internal-rules.html\" rel=\"nofollow noreferrer\">internal rules</a> correctly, the primary usage of <code>@as_expr</code> in the example is to hide <code>as_expr!</code> (or in general, previously defined macros) from being exported i.e. it's a way of altering the global macro namespace. Following that, then <code>@TAIL</code> or <code>@MAKE</code> should already be a macro while I cannot find them in the <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs/tree/master/src\" rel=\"nofollow noreferrer\">lazy_static source</a>.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1539523811, "post_id": 52802835, "comment_id": 92524720, "body": "I assume you mean that it has to be default (I&#39;ve updated your title on that assumption). Otherwise, you can just do <code>cargo test --target=...</code>"}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539526059, "post_id": 52802835, "comment_id": 92525376, "body": "@Shepmaster Thanks, this works - I put it into Makefile.toml file. Though I was interested if it&#39;s possible to specify this in Cargo config file rather than pass it as an input param."}], "answers": [{"tags": [], "owner": {"reputation": 83, "user_id": 7759674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZcXYW.jpg?s=128&g=1", "display_name": "yuki", "link": "https://stackoverflow.com/users/7759674/yuki"}, "is_accepted": false, "score": 2, "last_activity_date": 1579832740, "creation_date": 1579832740, "answer_id": 59889665, "question_id": 52802835, "link": "https://stackoverflow.com/questions/52802835/how-can-i-specify-a-different-default-target-for-building-and-testing-in-the-car/59889665#59889665", "title": "How can I specify a different default target for building and testing in the Cargo config?", "body": "<p>You cannot.</p>\n\n<p>According to <a href=\"https://github.com/rust-lang/cargo/issues/6784\" rel=\"nofollow noreferrer\">issue#6874</a>, cargo doesn't have the feature to specify different target for <code>cargo test</code>.</p>\n\n<p>FYI: you might have another solution for this issue if you use <code>nightly</code>, though I haven't made it work. The following links are about <code>custom test framework</code>, the issue opener says 'the solution'. </p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/pull/53410\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/pull/53410</a></li>\n<li><a href=\"https://blog.jrenner.net/rust/testing/2018/08/06/custom-test-framework-prop.html\" rel=\"nofollow noreferrer\">https://blog.jrenner.net/rust/testing/2018/08/06/custom-test-framework-prop.html</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 15475462, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/65a7e5968701a202cb309bc81980df48?s=128&d=identicon&r=PG", "display_name": "Tom", "link": "https://stackoverflow.com/users/15475462/tom"}, "is_accepted": false, "score": 2, "last_activity_date": 1616651688, "creation_date": 1616651688, "answer_id": 66793839, "question_id": 52802835, "link": "https://stackoverflow.com/questions/52802835/how-can-i-specify-a-different-default-target-for-building-and-testing-in-the-car/66793839#66793839", "title": "How can I specify a different default target for building and testing in the Cargo config?", "body": "<p>You can achieve similar functionality by creating an alias in your .cargo/config file</p>\n<pre><code>[alias]\ntest_pc = &quot;test --target=x86_64-unknown-linux-gnu&quot;\n</code></pre>\n<p>then, you just just call</p>\n<pre><code>cargo test_pc\n</code></pre>\n"}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1048, "favorite_count": 1, "answer_count": 2, "score": 5, "last_activity_date": 1616651688, "creation_date": 1539521416, "last_edit_date": 1539523759, "question_id": 52802835, "link": "https://stackoverflow.com/questions/52802835/how-can-i-specify-a-different-default-target-for-building-and-testing-in-the-car", "title": "How can I specify a different default target for building and testing in the Cargo config?", "body": "<p>I'm cross-compiling a Rust bare metal application for AArch64 target and I need to run unit tests on x86_64 target (my PC). </p>\n\n<p>I created the file <code>.cargo/config</code>:</p>\n\n<pre><code>[build]\ntarget = \"aarch64-unknown-none\"\n</code></pre>\n\n<p>I'd like to build for AArch64 but to run the tests for x86_64. If I change the build to <code>x86_64-unknown-linux-gnu</code> then the tests compile and execute. Is there a section where I could specify this? I have to swap these manually now.</p>\n\n<p>I checked <a href=\"https://doc.rust-lang.org/cargo/reference/config.html\" rel=\"noreferrer\">cargo guide</a> but found no reference about test configuration.</p>\n"}, {"tags": ["rust", "thread-safety", "mutex", "rust-rocket"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1539511371, "post_id": 52801244, "comment_id": 92521840, "body": "You didn&#39;t include enough code to give any more help. For example, where is this <code>RefCell</code>, and where is the <code>Mutex</code> you mentioned? See <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1539511657, "post_id": 52801244, "comment_id": 92521899, "body": "Is the <code>Connection</code> type in your code referring to <a href=\"http://jgallagher.github.io/rusqlite/src/rusqlite/lib.rs.html#180-184\" rel=\"nofollow noreferrer\">this</a> ?"}, {"owner": {"reputation": 561, "user_id": 2127148, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fcd1d9bdaa1feee2fd77396057fb8f10?s=128&d=identicon&r=PG", "display_name": "Johan Bj&#228;reholt", "link": "https://stackoverflow.com/users/2127148/johan-bj%c3%a4reholt"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1539512167, "post_id": 52801244, "comment_id": 92522000, "body": "@PeterHall As I stated and is shown in the error message I am using a Mutex&lt;DatastoreInstance&gt; in my state. Prior to adding the Transaction to the struct the compiler didn&#39;t complain that RefCell within the Connection object couldn&#39;t be shared safely. The question is specifically why the compiler doesn&#39;t find RefCell to be safe anymore after being within a Connection referenced within a Transaction instead of solely within a Connection. I will start trying to make a minimal, complete and verifiable example but it&#39;s going to take some time."}, {"owner": {"reputation": 561, "user_id": 2127148, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fcd1d9bdaa1feee2fd77396057fb8f10?s=128&d=identicon&r=PG", "display_name": "Johan Bj&#228;reholt", "link": "https://stackoverflow.com/users/2127148/johan-bj%c3%a4reholt"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1539512227, "post_id": 52801244, "comment_id": 92522016, "body": "@PeterHall Yes, that is the exact Connection object I am referencing, I should add more info about that."}], "answers": [{"comments": [{"owner": {"reputation": 561, "user_id": 2127148, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fcd1d9bdaa1feee2fd77396057fb8f10?s=128&d=identicon&r=PG", "display_name": "Johan Bj&#228;reholt", "link": "https://stackoverflow.com/users/2127148/johan-bj%c3%a4reholt"}, "edited": false, "score": 0, "creation_date": 1539589859, "post_id": 52803495, "comment_id": 92541872, "body": "&quot;A Mutex is only Send or Sync if the value it contains is itself Send&quot;  That makes a lot of sense, good point. I have tested your solution and it works, but I still have a hard time coming up with a good alternate design for my case (but that&#39;s actually a good thing since it forces me to design it safely and question my previous bad habit of using references within a mutex). I&#39;m considering having a separate database thread which the  http servers worker threads send requests to.This would make sense since a SQLite database should preferably only be accessed from one thread at a time anyway."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 561, "user_id": 2127148, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fcd1d9bdaa1feee2fd77396057fb8f10?s=128&d=identicon&r=PG", "display_name": "Johan Bj&#228;reholt", "link": "https://stackoverflow.com/users/2127148/johan-bj%c3%a4reholt"}, "edited": false, "score": 1, "creation_date": 1539613224, "post_id": 52803495, "comment_id": 92555017, "body": "@JohanBj&#228;reholt that&#39;s getting closer to an &quot;actor&quot;-like model, which is a well-known and respected pattern. Seems very reasonable in this case. Channels to communicate between the threads should be a good fit, or you can investigate moving to a full-on actors framework like Actix."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1539534708, "last_edit_date": 1539534708, "creation_date": 1539526126, "answer_id": 52803495, "question_id": 52801244, "link": "https://stackoverflow.com/questions/52801244/compiler-says-that-data-cannot-be-shared-between-threads-safely-even-though-the/52803495#52803495", "title": "Compiler says that data cannot be shared between threads safely even though the data is wrapped within a Mutex", "body": "<p>A <code>Mutex</code> is only <code>Send</code> or <code>Sync</code> <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html#impl-Send\" rel=\"nofollow noreferrer\">if the value it contains is itself <code>Send</code></a>:</p>\n\n<pre><code>impl&lt;T: ?Sized + Send&gt; Send for Mutex&lt;T&gt;    \nimpl&lt;T: ?Sized + Send&gt; Sync for Mutex&lt;T&gt;\n</code></pre>\n\n<p>A <code>&amp;T</code> is only <code>Send</code> <a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\" rel=\"nofollow noreferrer\">when <code>T</code> is <code>Sync</code></a>:</p>\n\n<pre><code>impl&lt;'a, T&gt; Send for &amp;'a T\nwhere\n    T: Sync + ?Sized, \n</code></pre>\n\n<p>And a <code>RefCell</code> <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html#impl-Sync\" rel=\"nofollow noreferrer\">is never <code>Sync</code></a></p>\n\n<pre><code>impl&lt;T&gt; !Sync for RefCell&lt;T&gt;\nwhere\n    T: ?Sized, \n</code></pre>\n\n<p>As the error message states, your transaction contains a reference to a <code>RefCell</code>. It doesn't matter that there's a mutex, it's inherently not memory-safe to share it across threads. A simple reproduction:</p>\n\n<pre><code>use std::{cell::RefCell, sync::Mutex};\n\nstruct Connection(RefCell&lt;i32&gt;);\nstruct Transaction&lt;'a&gt;(&amp;'a Connection);\n\nfn is_send&lt;T: Send&gt;(_: T) {}\n\nfn main() {\n    let c = Connection(RefCell::new(42));\n    let t = Transaction(&amp;c);\n    let m = Mutex::new(t);\n\n    is_send(m);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `std::cell::RefCell&lt;i32&gt;` cannot be shared between threads safely\n  --&gt; src/main.rs:13:5\n   |\n13 |     is_send(m);\n   |     ^^^^^^^ `std::cell::RefCell&lt;i32&gt;` cannot be shared between threads safely\n   |\n   = help: within `Connection`, the trait `std::marker::Sync` is not implemented for `std::cell::RefCell&lt;i32&gt;`\n   = note: required because it appears within the type `Connection`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `&amp;Connection`\n   = note: required because it appears within the type `Transaction&lt;'_&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Mutex&lt;Transaction&lt;'_&gt;&gt;`\nnote: required by `is_send`\n  --&gt; src/main.rs:6:1\n   |\n6  | fn is_send&lt;T: Send&gt;(_: T) {}\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<blockquote>\n  <p>Why doesn't the compiler find <code>RefCell</code> to be safe anymore after being within a <code>Connection</code> referenced within a <code>Transaction</code> instead of solely within a <code>Connection</code>?</p>\n</blockquote>\n\n<p>The <code>RefCell</code> is fine, it's the <em>reference</em> to a <code>RefCell</code> that is not.</p>\n\n<blockquote>\n  <p>Is the design of having the <code>Connection</code> and <code>Transaction</code> within the same struct a bad design [...] Do I need to redesign my data structures</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32209391/155423\">How to store rusqlite Connection and Statement objects in the same struct in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a></li>\n</ul>\n"}], "owner": {"reputation": 561, "user_id": 2127148, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fcd1d9bdaa1feee2fd77396057fb8f10?s=128&d=identicon&r=PG", "display_name": "Johan Bj&#228;reholt", "link": "https://stackoverflow.com/users/2127148/johan-bj%c3%a4reholt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2933, "favorite_count": 1, "accepted_answer_id": 52803495, "answer_count": 1, "score": 6, "last_activity_date": 1539534708, "creation_date": 1539508976, "last_edit_date": 1539525352, "question_id": 52801244, "link": "https://stackoverflow.com/questions/52801244/compiler-says-that-data-cannot-be-shared-between-threads-safely-even-though-the", "title": "Compiler says that data cannot be shared between threads safely even though the data is wrapped within a Mutex", "body": "<p>I'm using Rocket which has a <code>State</code> that it passes to the HTTP requests. This struct contains a <code>Mutex&lt;DatastoreInstance&gt;</code> which gives access to a SQLite database and is locked with a mutex to make read and writes safe.</p>\n\n<pre><code>pub struct DatastoreInstance {\n    conn: Connection,\n}\n</code></pre>\n\n<p>When the <code>DatastoreInstance</code> struct looked like this, with only a SQLite connection everything worked fine, but I then also wanted to add a transaction object within this struct:</p>\n\n<pre><code>pub struct DatastoreInstance {\n    conn: Connection,\n    events_transaction: Transaction,\n}\n</code></pre>\n\n<p>This did not compile because the <code>Transaction</code> object needs to reference a <code>Connection</code> object which should have a lifetime which it is aware of.\nThe <code>Connection</code> and <code>Transaction</code> objects within rusqlite which I am using are defined as following:</p>\n\n<pre><code>pub struct Connection {\n    db: RefCell&lt;InnerConnection&gt;,\n    cache: StatementCache,\n    path: Option&lt;PathBuf&gt;,\n}\n\npub struct Transaction&lt;'conn&gt; {\n    conn: &amp;'conn Connection,\n    drop_behavior: DropBehavior,\n}\n</code></pre>\n\n<p>To solve the lifetime issues I had to add these lifetime parameters to get it working:</p>\n\n<pre><code>pub struct DatastoreInstance&lt;'a&gt; {\n    conn: Connection,\n    events_transaction: Transaction&lt;'a&gt;,\n}\n</code></pre>\n\n<p>This was the result and was supposed to work according to my understanding of both lifetimes and mutexes, but I now get a compiler error telling me:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>`std::cell::RefCell&lt;lru_cache::LruCache&lt;std::string::String, rusqlite::raw_statement::RawStatement&gt;&gt;` cannot be shared between threads safely\n    |                                                                                                            \n    = help: within `rusqlite::Connection`, the trait `std::marker::Sync` is not implemented for `std::cell::RefCell&lt;lru_cache::LruCache&lt;std::string::String, rusqlite::raw_statement::RawStatement&gt;&gt;`\n    = note: required because it appears within the type `rusqlite::cache::StatementCache`                        \n    = note: required because it appears within the type `rusqlite::Connection`                                   \n    = note: required because of the requirements on the impl of `std::marker::Send` for `&amp;rusqlite::Connection`  \n    = note: required because it appears within the type `datastore::DatastoreInstance&lt;'_&gt;`                       \n    = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Mutex&lt;datastore::DatastoreInstance&lt;'_&gt;&gt;`\n    = note: required because it appears within the type `endpoints::ServerState&lt;'_&gt;`                             \n    = note: required by `rocket::State`\n</code></pre>\n\n<p>According to my understanding of mutexes, this code should be valid because the whole <code>DatastoreInstance</code> struct is wrapped within a <code>Mutex</code> which should guarantee that only one thread is referencing this object at a time.</p>\n\n<p>What am I missing? </p>\n\n<p>Why doesn't the compiler find <code>RefCell</code> to be safe anymore after being within a <code>Connection</code> referenced within a <code>Transaction</code> instead of solely within a <code>Connection</code>?</p>\n\n<p>Do I have a bad understanding of how mutexes work? Are my lifetimes invalid and somehow break read/write safety? Is the design of having the <code>Connection</code> and <code>Transaction</code> within the same struct a bad design which breaks read/write safety? Do I need to redesign my data structures somehow to make this safe? Or am I just missing something very obvious?</p>\n"}, {"tags": ["rust", "webassembly", "serde", "wasm-bindgen"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1539472785, "post_id": 52796222, "comment_id": 92516099, "body": "look like a bug"}], "answers": [{"comments": [{"owner": {"reputation": 181, "user_id": 10500101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6a2640ceaa8e2d40c8abef6387a2f78c?s=128&d=identicon&r=PG&f=1", "display_name": "Gregor", "link": "https://stackoverflow.com/users/10500101/gregor"}, "edited": false, "score": 1, "creation_date": 1539617038, "post_id": 52819347, "comment_id": 92557210, "body": "Interestingly it worked in the meantime with my project too, although i don&#39;t know why.  The only thing that was different is that i added the crate <code>console_error_panic_hook</code> to dig deeper into the problem. Before the error occured i always build my rust code with: <code>cargo +nightly build --target wasm32-unknown-unknown &amp;&amp;  wasm-bindgen target&#47;wasm32-unknown-unknown&#47;debug&#47;webassembly_rust.wasm   --out-dir . </code> and run the project with <code>npm run serve</code>. I&#39;m curious what caused the error in the first place, but thank you for your detailed post :)"}, {"owner": {"reputation": 654, "user_id": 1591501, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e78caf88a395d6b1f597d0dade8facab?s=128&d=identicon&r=PG", "display_name": "jjpe", "link": "https://stackoverflow.com/users/1591501/jjpe"}, "edited": false, "score": 0, "creation_date": 1541149633, "post_id": 52819347, "comment_id": 93125442, "body": "@Shepmaster I was under the impression that running <code>wasm-bindgen</code> also re-built the Rust source code?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 654, "user_id": 1591501, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e78caf88a395d6b1f597d0dade8facab?s=128&d=identicon&r=PG", "display_name": "jjpe", "link": "https://stackoverflow.com/users/1591501/jjpe"}, "edited": false, "score": 0, "creation_date": 1541163577, "post_id": 52819347, "comment_id": 93132399, "body": "@jjpe it&#39;s possible that things have changed since I last checked, but the <a href=\"https://rustwasm.github.io/wasm-bindgen/whirlwind-tour/basic-usage.html\" rel=\"nofollow noreferrer\">documentation for wasm-bindgen</a> specifically requires the path to the output of the compiler, so I don&#39;t believe it builds the code for you. There are e.g. webpack loaders (such as <a href=\"https://github.com/dflemstr/rust-native-wasm-loader\" rel=\"nofollow noreferrer\">rust-native-wasm-loader</a>, no idea if it&#39;s good) that presumably do rebuild for you."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1539614843, "creation_date": 1539614843, "answer_id": 52819347, "question_id": 52796222, "link": "https://stackoverflow.com/questions/52796222/how-to-pass-an-array-of-objects-to-webassembly-and-convert-it-to-a-vector-of-str/52819347#52819347", "title": "How to pass an array of objects to WebAssembly and convert it to a vector of structs with wasm-bindgen?", "body": "<p>Follow the instructions to get a <a href=\"https://rustwasm.github.io/wasm-bindgen/whirlwind-tour/basic-usage.html\" rel=\"noreferrer\">basic Rust / WASM setup</a>, then add support for <a href=\"https://rustwasm.github.io/wasm-bindgen/reference/arbitrary-data-with-serde.html\" rel=\"noreferrer\">arbitrary data via Serde</a>.</p>\n\n<p>I've changed your code to return a number and print out that number, just to see that it's working.</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"ww\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\nedition = \"2018\"\n\n[lib]\ncrate-type = [\"cdylib\"]\n\n[dependencies]\nwasm-bindgen = { version = \"0.2\", features = [\"serde-serialize\"] }\nserde_json = \"1.0.32\"\nserde_derive = \"1.0.80\"\nserde = \"1.0.80\"\n</code></pre>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre><code>extern crate serde_json;\nextern crate wasm_bindgen;\n\nuse wasm_bindgen::prelude::*;\n\n#[macro_use]\nextern crate serde_derive;\n\n#[derive(Serialize, Deserialize)]\npub struct Element {\n    name: String,\n    id: String,\n    parent_id: String,\n}\n\n#[wasm_bindgen]\npub fn test(js_objects: &amp;JsValue) -&gt; i32 {\n    let elements: Vec&lt;Element&gt; = js_objects.into_serde().unwrap();\n    elements\n        .iter()\n        .map(|e| {\n            let id = e.id.parse::&lt;i32&gt;().unwrap_or(0);\n            let parent_id = e.parent_id.parse::&lt;i32&gt;().unwrap_or(0);\n            id + parent_id\n        })\n        .sum()\n}\n</code></pre>\n\n<p><strong>index.js</strong></p>\n\n<pre><code>const js = import(\"./ww\");\n\nlet arrayOfObjects = [\n  { name: \"hello world\", id: \"99\", parent_id: \"88\" },\n  { name: \"hello world2\", id: \"88\", parent_id: \"12\" },\n  { name: \"hello world3\", id: \"77\", parent_id: \"88\" },\n]\n\njs.then(js =&gt; {\n  const sum = js.test(arrayOfObjects);\n  console.log(sum);\n});\n</code></pre>\n\n<p><strong>package.json</strong></p>\n\n<pre><code>{\n  \"scripts\": {\n    \"serve\": \"webpack-dev-server\"\n  },\n  \"devDependencies\": {\n    \"html-webpack-plugin\": \"^3.2.0\",\n    \"webpack\": \"^4.0.1\",\n    \"webpack-cli\": \"^3.1.1\",\n    \"webpack-dev-server\": \"^3.1.0\"\n  }\n}\n</code></pre>\n\n<p><strong>webpack.config.js</strong></p>\n\n<pre><code>const path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nmodule.exports = {\n  entry: \"./index.js\",\n  output: {\n    path: path.resolve(__dirname, \"dist\"),\n    filename: \"index.js\",\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      title: \"Getting started with WASM\"\n    })\n  ],\n  mode: \"development\"\n};\n</code></pre>\n\n<p>Then run:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code># once\nnpm install\n# every time the code changes\ncargo +nightly build --target wasm32-unknown-unknown\nwasm-bindgen target/wasm32-unknown-unknown/debug/*.wasm --out-dir .\nnpm run serve\n</code></pre>\n\n<p>Visit the page in your WASM-enabled browser.</p>\n\n<hr>\n\n<p>Observant readers will note that I didn't do <em>anything different</em> from the OP. That's because this code already worked as-is. Every time you change your Rust code, make sure that you:</p>\n\n<ol>\n<li>Build your Rust code</li>\n<li>Re-run wasm-bindgen</li>\n</ol>\n"}], "owner": {"reputation": 181, "user_id": 10500101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6a2640ceaa8e2d40c8abef6387a2f78c?s=128&d=identicon&r=PG&f=1", "display_name": "Gregor", "link": "https://stackoverflow.com/users/10500101/gregor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4648, "favorite_count": 1, "accepted_answer_id": 52819347, "answer_count": 1, "score": 17, "last_activity_date": 1539614843, "creation_date": 1539456739, "last_edit_date": 1539524013, "question_id": 52796222, "link": "https://stackoverflow.com/questions/52796222/how-to-pass-an-array-of-objects-to-webassembly-and-convert-it-to-a-vector-of-str", "title": "How to pass an array of objects to WebAssembly and convert it to a vector of structs with wasm-bindgen?", "body": "<p>It's possible to pass an array of integers like this:</p>\n\n<pre><code>const js = import(\"./webassembly_rust\");\nlet array_nums = [1,2,3,4,5,6,7,8,9];\n\njs.then(js =&gt; {\n  js.test( array_nums );\n}); \n</code></pre>\n\n<p>to WebAssembly and save it in a vector like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde_json;\nextern crate wasm_bindgen;\n\nuse wasm_bindgen::prelude::*;\n\n#[macro_use]\nextern crate serde_derive;\n\n#[wasm_bindgen]\npub fn test(array: JsValue) {\n    let elements: Vec&lt;u32&gt; = array.into_serde().unwrap();\n}\n</code></pre>\n\n<p>It's also possible to pass a single object like this:</p>\n\n<pre><code>const js = import(\"./webassembly_rust\");\nlet jsObject = {name: \"hello world\", id: \"99\", parent_id: \"11\"};\n\njs.then(js =&gt; {\n  js.test( jsObject );\n}); \n</code></pre>\n\n<p>to WebAssembly and save it as a <code>Element</code> struct like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde_json;\nextern crate wasm_bindgen;\n\nuse wasm_bindgen::prelude::*;\n\n#[macro_use]\nextern crate serde_derive;\n\n#[derive(Serialize, Deserialize)]\npub struct Element {\n    name: String,\n    id: String,\n    parent_id: String,\n}\n\n#[wasm_bindgen]\npub fn test(js_object: &amp;JsValue) {\n    let element: Element = js_object.into_serde().unwrap();\n}\n</code></pre>\n\n<p>The next thing I tried is to pass an array of objects like this:</p>\n\n<pre><code>const js = import(\"./webassembly_rust\");\nlet arrayOfObjects = [\n  {name: \"hello world\", id: \"99\", parent_id: \"88\"},\n  {name: \"hello world2\", id: \"88\", parent_id: \"12\"},\n  {name: \"hello world3\", id: \"77\", parent_id: \"88\"}\n]\n\njs.then(js =&gt; {\n  js.test( arrayOfObjects );\n}); \n</code></pre>\n\n<p>to WebAssembly and save it as a vector of <code>Element</code> structs like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde_json;\nextern crate wasm_bindgen;\n\nuse wasm_bindgen::prelude::*;\n\n#[macro_use]\nextern crate serde_derive;\n\n#[derive(Serialize, Deserialize)]\npub struct Element {\n    name: String,\n    id: String,\n    parent_id: String,\n}\n\n#[wasm_bindgen]\npub fn test(js_objects: &amp;JsValue) {\n    let elements: Vec&lt;Element&gt; = js_objects.into_serde().unwrap();\n}\n</code></pre>\n\n<p>This compiles, but when I run this code I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>func $__rust_start_panic (param i32) (result i32)\n  unreachable\n  unreachable\nend\n</code></pre>\n\n<p><img src=\"https://i.stack.imgur.com/nkw9x.png\" alt=\"screenshot_promise_rejection_error\"> </p>\n\n<p>Passing an array of objects filled with numbers like this:</p>\n\n<pre><code>const js = import(\"./webassembly_rust\");\nlet arrayOfNumObjects = [\n    {name: 1, id: 2, parent_id: 3 },\n    {name: 1, id: 2, parent_id: 3 },\n    {name: 1, id: 2, parent_id: 3 }\n]\n\njs.then(js =&gt; {\n  js.test( arrayOfNumObjects );\n}); \n</code></pre>\n\n<p>to WebAssembly is possible when the <code>Element</code> struct contains only <code>u32</code> values.</p>\n\n<pre><code>extern crate serde_json;\nextern crate wasm_bindgen;\n\nuse wasm_bindgen::prelude::*;\n\n#[macro_use]\nextern crate serde_derive;\n\n#[derive(Serialize, Deserialize)]\npub struct Element {\n    name: u32,\n    id: u32,\n    parent_id: u32,\n}\n\n#[wasm_bindgen]\npub fn test(js_objects: &amp;JsValue) {\n    let elements: Vec&lt;Element&gt; = js_objects.into_serde().unwrap();\n}\n</code></pre>\n\n<p>It seems like the problem is caused by the <code>String</code> type in the <code>Element</code> struct.</p>\n\n<p>What did I do wrong? </p>\n\n<p>I found the following articles, but I can't find a solution for my problem in them:</p>\n\n<ul>\n<li><p><a href=\"https://rustwasm.github.io/wasm-bindgen/reference/arbitrary-data-with-serde.html\" rel=\"noreferrer\">Serializing and Deserializing Arbitrary Data Into and From <code>JsValue</code> with Serde</a></p>\n\n<p>This explains how to convert a JavaScript object to a struct, but not how to convert an array of objects to a vector of structs.</p></li>\n<li><p><a href=\"https://rustwasm.github.io/wasm-bindgen/api/js_sys/struct.Array.html#method.entries\" rel=\"noreferrer\">js_sys crate </a></p>\n\n<p>This crate allows to use JavaScript types like arrays or objects in Rust, but this is not what I want. I want to convert JavaScript values into their Rust counterparts. This crate only allows to use JavaScript inline in Rust, as far as I understand... and this isn't as fast as using just Rust.</p></li>\n<li><p><a href=\"https://github.com/rustwasm/wasm-bindgen/issues/964#issue-369881357\" rel=\"noreferrer\">github issue</a></p></li>\n</ul>\n"}, {"tags": ["compilation", "rust", "netbsd"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539446299, "post_id": 52794498, "comment_id": 92509604, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/41742046/155423\">Is there a list of all cfg features?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52794498/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539446319, "post_id": 52794498, "comment_id": 92509610, "body": "TL;DR the duplicate: no, there is no <code>cfg</code> for the target triple."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539446360, "post_id": 52794498, "comment_id": 92509620, "body": "See also <a href=\"https://stackoverflow.com/q/48967583/155423\">How to get executable&#39;s full target triple as a compile-time constant without using a build script?</a>."}, {"owner": {"reputation": 679, "user_id": 5155574, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-FX9BZpOiVdk/AAAAAAAAAAI/AAAAAAAAAI0/cHgtmpGWfgM/photo.jpg?sz=128", "display_name": "Josh Abraham", "link": "https://stackoverflow.com/users/5155574/josh-abraham"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539450036, "post_id": 52794498, "comment_id": 92510679, "body": "@Shepmaster it looks like the target_vendor configuration might be useful for me. But there is no list of valid target_vendors"}], "answers": [{"tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": false, "score": 0, "last_activity_date": 1539516227, "creation_date": 1539516227, "answer_id": 52802130, "question_id": 52794498, "link": "https://stackoverflow.com/questions/52794498/how-do-you-conditionally-compile-based-on-a-target-triple/52802130#52802130", "title": "How do you conditionally compile based on a target triple?", "body": "<p>You want to use the <code>target_vendor</code> configuration, which has a value for <code>rumprun</code> as described in <a href=\"https://github.com/rust-lang/rust/pull/28593\" rel=\"nofollow noreferrer\">this PR</a>. In general, you can use any of the target vendors from <a href=\"https://llvm.org/doxygen/classllvm_1_1Triple.html#details\" rel=\"nofollow noreferrer\">this page</a>, as described in <a href=\"https://github.com/rust-lang/rust/pull/28612\" rel=\"nofollow noreferrer\">this PR</a>.</p>\n"}], "owner": {"reputation": 679, "user_id": 5155574, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-FX9BZpOiVdk/AAAAAAAAAAI/AAAAAAAAAI0/cHgtmpGWfgM/photo.jpg?sz=128", "display_name": "Josh Abraham", "link": "https://stackoverflow.com/users/5155574/josh-abraham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1539516227, "creation_date": 1539444392, "last_edit_date": 1539446402, "question_id": 52794498, "link": "https://stackoverflow.com/questions/52794498/how-do-you-conditionally-compile-based-on-a-target-triple", "title": "How do you conditionally compile based on a target triple?", "body": "<p>Is it possible to conditionally compile for a specific target triple? I\u2019m having issues with excluding the <code>x86_64-rumprun-netbsd</code> target without simply excluding <code>netbsd</code> with a <code>#[cfg]</code>.</p>\n"}, {"tags": ["rust", "macos-mojave"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539446144, "post_id": 52794353, "comment_id": 92509568, "body": "<a href=\"https://stackoverflow.com/q/10390186/155423\">Update your Xcode and associated Command Line Tools</a>."}, {"owner": {"reputation": 41, "user_id": 10499643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92f63838e57541550393c7deeaa3c865?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/10499643/matt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539451554, "post_id": 52794353, "comment_id": 92511114, "body": "I already tried installing it twice along with Xcode and I still get the error (using xcode-select --install and by downloading it from the Apple Developper website)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539470208, "post_id": 52794353, "comment_id": 92515616, "body": "Did you attempt compiling this before upgrading to Mojave? Does <code>cargo clean</code> before building help?"}, {"owner": {"reputation": 41, "user_id": 10499643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92f63838e57541550393c7deeaa3c865?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/10499643/matt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539509288, "post_id": 52794353, "comment_id": 92521374, "body": "I didn&#39;t compile this before upgrading to Mojave, but I never saw an issue like this one with other crates in my projects. I also tried compiling an old project on Mojave that was compiling before and it looks fine as well. I tried using <code>cargo clean</code> before as well and the error still show up."}], "answers": [{"tags": [], "owner": {"reputation": 41, "user_id": 10499643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92f63838e57541550393c7deeaa3c865?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/10499643/matt"}, "is_accepted": false, "score": 2, "last_activity_date": 1540644806, "creation_date": 1540644806, "answer_id": 53022076, "question_id": 52794353, "link": "https://stackoverflow.com/questions/52794353/unable-to-compile-actix-on-macos-mojave-due-to-ar-crs-malformed-object-unkno/53022076#53022076", "title": "Unable to compile Actix on macOS Mojave due to &quot;ar crs&quot; &quot;malformed object (unknown load command 1)&quot;", "body": "<p>It seems to work after installing cctools through MacPorts.</p>\n\n<p>For some reason, installing it through brew didn't seem to work.</p>\n"}, {"tags": [], "owner": {"reputation": 1168, "user_id": 1597939, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/311e00e5d303fb9ac8ec2c8175c16bfa?s=128&d=identicon&r=PG", "display_name": "fey", "link": "https://stackoverflow.com/users/1597939/fey"}, "is_accepted": false, "score": 2, "last_activity_date": 1552683280, "creation_date": 1552683280, "answer_id": 55190550, "question_id": 52794353, "link": "https://stackoverflow.com/questions/52794353/unable-to-compile-actix-on-macos-mojave-due-to-ar-crs-malformed-object-unkno/55190550#55190550", "title": "Unable to compile Actix on macOS Mojave due to &quot;ar crs&quot; &quot;malformed object (unknown load command 1)&quot;", "body": "<p>I had the same error.</p>\n\n<p>When I replaced cctools 855 with 921 from this tap then <code>cargo build</code> worked: <a href=\"https://github.com/dgsga/homebrew-cctools\" rel=\"nofollow noreferrer\">https://github.com/dgsga/homebrew-cctools</a></p>\n\n<pre><code>brew unlink cctools\nbrew tap dgsga/cctools\nbrew install dgsga/cctools/mtoc\n</code></pre>\n\n<p>Mojave 10.14.3, Rust 1.33.0, actix-web 0.7.18</p>\n"}], "owner": {"reputation": 41, "user_id": 10499643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92f63838e57541550393c7deeaa3c865?s=128&d=identicon&r=PG", "display_name": "Matt", "link": "https://stackoverflow.com/users/10499643/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 594, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1552683280, "creation_date": 1539443474, "last_edit_date": 1539446016, "question_id": 52794353, "link": "https://stackoverflow.com/questions/52794353/unable-to-compile-actix-on-macos-mojave-due-to-ar-crs-malformed-object-unkno", "title": "Unable to compile Actix on macOS Mojave due to &quot;ar crs&quot; &quot;malformed object (unknown load command 1)&quot;", "body": "<p>I'm unable to compile a basic example using Actix. I suspect I might be missing some libraries but I have no clue of what it could be. I also upgraded to Mojave a few days ago, but I'm not sure if this is related.</p>\n\n<p>It seems to complain about <code>ar crs</code> and about an internal error happening in <code>ranlib</code> when running this command.</p>\n\n<p>main.rs:</p>\n\n<pre><code>extern crate actix_web;\nuse actix_web::{server, App, HttpRequest};\n\nfn index(_req: &amp;HttpRequest) -&gt; &amp;'static str {\n    \"Hello world!\"\n}\n\nfn main() {\n    server::new(|| App::new().resource(\"/\", |r| r.f(index)))\n        .bind(\"127.0.0.1:8088\")\n        .unwrap()\n        .run();\n}\n</code></pre>\n\n<p>Cargo.toml:</p>\n\n<pre><code>actix-web = \"0.7.8\"\n</code></pre>\n\n<p>Backtrace I obtain:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    mbp-de-matthieu:hello-world matthieu$ RUST_BACKTRACE=1 cargo build\n   Compiling backtrace-sys v0.1.24                                                                                                                                                                     \n   Compiling miniz-sys v0.1.10\n   Compiling brotli-sys v0.3.2\n   Compiling ring v0.13.2\n   Compiling tokio-current-thread v0.1.3\nerror: failed to run custom build command for `miniz-sys v0.1.10`\nprocess didn't exit successfully: `/Users/matthieu/Documents/Rust/actix/hello-world/target/debug/build/miniz-sys-dc81523acb01e9e7/build-script-build` (exit code: 101)\n--- stdout\nTARGET = Some(\"x86_64-apple-darwin\")\nOPT_LEVEL = Some(\"0\")\nHOST = Some(\"x86_64-apple-darwin\")\nCC_x86_64-apple-darwin = None\nCC_x86_64_apple_darwin = None\nHOST_CC = None\nCC = None\nCFLAGS_x86_64-apple-darwin = None\nCFLAGS_x86_64_apple_darwin = None\nHOST_CFLAGS = None\nCFLAGS = None\nDEBUG = Some(\"true\")\nrunning: \"cc\" \"-O0\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-g\" \"-fno-omit-frame-pointer\" \"-m64\" \"-Wall\" \"-Wextra\" \"-o\" \"/Users/matthieu/Documents/Rust/actix/hello-world/target/debug/build/miniz-sys-d59b36acd5b3db67/out/miniz.o\" \"-c\" \"miniz.c\"\nexit code: 0\nAR_x86_64-apple-darwin = None\nAR_x86_64_apple_darwin = None\nHOST_AR = None\nAR = None\nrunning: \"ar\" \"crs\" \"/Users/matthieu/Documents/Rust/actix/hello-world/target/debug/build/miniz-sys-d59b36acd5b3db67/out/libminiz.a\" \"/Users/matthieu/Documents/Rust/actix/hello-world/target/debug/build/miniz-sys-d59b36acd5b3db67/out/miniz.o\"\ncargo:warning=/usr/local/Cellar/cctools/855/bin/ranlib: object: /Users/matthieu/Documents/Rust/actix/hello-world/target/debug/build/miniz-sys-d59b36acd5b3db67/out/libminiz.a(miniz.o) malformed object (unknown load command 1)\ncargo:warning=ar: internal ranlib command failed\nexit code: 1\n\n--- stderr\nthread 'main' panicked at '\n\nInternal error occurred: Command \"ar\" \"crs\" \"/Users/matthieu/Documents/Rust/actix/hello-world/target/debug/build/miniz-sys-d59b36acd5b3db67/out/libminiz.a\" \"/Users/matthieu/Documents/Rust/actix/hello-world/target/debug/build/miniz-sys-d59b36acd5b3db67/out/miniz.o\" with args \"ar\" did not execute successfully (status code exit code: 1).\n</code></pre>\n\n<p>The <a href=\"https://pastebin.com/g59XTkAh\" rel=\"nofollow noreferrer\">complete backtrace</a> is too large to include on Stack Overflow.</p>\n"}, {"tags": ["rust", "lifetime", "rust-actix"], "answers": [{"comments": [{"owner": {"reputation": 57, "user_id": 10431891, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c215ab9ab6acef162f26469c90a3b71?s=128&d=identicon&r=PG&f=1", "display_name": "Deveres", "link": "https://stackoverflow.com/users/10431891/deveres"}, "edited": false, "score": 0, "creation_date": 1540052474, "post_id": 52830877, "comment_id": 92726152, "body": "Thank you.  This other question, could be useful for understanding HTRB: <a href=\"https://stackoverflow.com/questions/35592750/how-does-for-syntax-differ-from-a-regular-lifetime-bound/35595491#35595491\" title=\"how does for syntax differ from a regular lifetime bound\">stackoverflow.com/questions/35592750/&hellip;</a>"}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": true, "score": 2, "last_activity_date": 1539712056, "last_edit_date": 1539712056, "creation_date": 1539677731, "answer_id": 52830877, "question_id": 52793177, "link": "https://stackoverflow.com/questions/52793177/how-to-deserialize-messages-within-actix-actors/52830877#52830877", "title": "How to deserialize messages within Actix actors?", "body": "<p>There are some fixes to get it compile.</p>\n\n<p>The trick to get it compile is to use <a href=\"https://doc.rust-lang.org/nomicon/hrtb.html\" rel=\"nofollow noreferrer\">Higher-Rank Trait Bounds (HTRB)</a> trait bounds instead of declaring <code>'static</code> lifetimes.</p>\n\n<p>Follow the compiler suggestion and bind the <code>T: serde::Deserialize&lt;'_&gt;</code> trait:</p>\n\n<pre><code>impl&lt;T&gt; StreamHandler&lt;Message, ProtocolError&gt; for MyActor&lt;T&gt;\nwhere\n    for&lt;'de&gt; T: serde::Deserialize&lt;'de&gt; + 'static,\n</code></pre>\n\n<p>Then change also the <code>Deserialize&lt;'static&gt;</code> trait bound associated to the<code>EventManager</code> impl with a HTRB trait bound to get it compatible with the requirement of <code>StreamHandler</code> implementation:</p>\n\n<pre><code>impl&lt;T: 'static&gt; EventManager&lt;T&gt;\nwhere\n    for&lt;'de&gt; T: serde::Deserialize&lt;'de&gt;,\n</code></pre>\n\n<p>Finally, if you correct the line the create the client with the right sintax:</p>\n\n<pre><code>let mut client: EventManager&lt;Data&gt; = EventManager::new();\n</code></pre>\n\n<p>the example code should compile.</p>\n\n<p>Note: For <code>capture</code> the use of a Higher Trait Bound for declaring the <code>Fn</code> requirement is redundant, do simply:</p>\n\n<pre><code>pub fn capture&lt;F&gt;(&amp;mut self, function: F)\nwhere\n    F: Fn(T) + 'static,\n</code></pre>\n"}], "owner": {"reputation": 57, "user_id": 10431891, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6c215ab9ab6acef162f26469c90a3b71?s=128&d=identicon&r=PG&f=1", "display_name": "Deveres", "link": "https://stackoverflow.com/users/10431891/deveres"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 377, "favorite_count": 0, "accepted_answer_id": 52830877, "answer_count": 1, "score": 1, "last_activity_date": 1539712056, "creation_date": 1539435399, "question_id": 52793177, "link": "https://stackoverflow.com/questions/52793177/how-to-deserialize-messages-within-actix-actors", "title": "How to deserialize messages within Actix actors?", "body": "<p>My intention is receiving events through WebSockets and use them on the closures of <code>main</code>.\nThis works when the messages are pure text (<code>String</code>), but the idea is deserializing that text into some structs.</p>\n\n<p>In this example I've added only <code>Data</code>, <code>Error</code> and <code>Event</code>, but in other cases, it could be different, so I've used generics to do that, but I'm a little lost. The compiler has suggested several things that I've tried, but I don't know how to \"force\" that the message is casted into a specific type (<code>Data</code> in this example, but <code>EventManager</code> could be used on other parts, so it should be generic).</p>\n\n<p>I've attached this code, that tries to show my idea, although it doesn't compile:</p>\n\n<p><code>events.rs</code>:</p>\n\n<pre><code>use actix::*;\nuse actix_web::ws::{Client, Message, ProtocolError};\nuse futures::Future;\n\nuse serde::de;\nuse serde_json::from_str;\n\nstruct MyActor&lt;T&gt; {\n    manager: EventManager&lt;T&gt;,\n}\n\nimpl&lt;T: 'static&gt; Actor for MyActor&lt;T&gt; {\n    type Context = Context&lt;Self&gt;;\n}\n\nimpl&lt;T: 'static&gt; StreamHandler&lt;Message, ProtocolError&gt; for MyActor&lt;T&gt; {\n    fn handle(&amp;mut self, msg: Message, _ctx: &amp;mut Context&lt;Self&gt;) {\n        match msg {\n            Message::Text(text) =&gt; {\n                debug!(\"Received {}\", text);\n\n                for idx in 0..self.manager.events.len() {\n                    let data =\n                        from_str(&amp;text).expect(&amp;format!(\"Error when deserializing {:?}\", text));\n                    (self.manager.events[idx].handler)(data)\n                }\n            }\n            _ =&gt; panic!(),\n        }\n    }\n}\n\npub struct Event&lt;T&gt; {\n    handler: Box&lt;Fn(T) + 'static&gt;,\n}\n\npub struct EventManager&lt;T&gt; {\n    events: Vec&lt;Event&lt;T&gt;&gt;,\n}\n\nimpl&lt;T: 'static&gt; EventManager&lt;T&gt;\nwhere\n    T: serde::Deserialize&lt;'static&gt;,\n{\n    pub fn new() -&gt; Self {\n        Self { events: vec![] }\n    }\n\n    pub fn capture&lt;F&gt;(&amp;mut self, function: F)\n    where\n        F: for&lt;'h&gt; Fn(T) + 'static,\n    {\n        let event = Event {\n            handler: Box::new(function),\n        };\n        self.events.push(event);\n    }\n\n    pub fn run(self) {\n        let runner = System::new(\"example\");\n\n        debug!(\"run\");\n\n        Arbiter::spawn(\n            Client::new(\"example\")\n                .connect()\n                .map(|(reader, _writer)| {\n                    MyActor::create(|ctx| {\n                        MyActor::add_stream(reader, ctx);\n                        MyActor { manager: self }\n                    });\n                })\n                .map_err(|err| {}),\n        );\n\n        runner.run();\n    }\n}\n</code></pre>\n\n<p><code>main.rs</code>:</p>\n\n<pre><code>#[macro_use]\nextern crate log;\nextern crate actix;\nextern crate actix_web;\nextern crate env_logger;\nextern crate futures;\nextern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\npub mod events;\n\nuse actix::*;\nuse serde::de;\nuse serde::de::{Deserialize, Deserializer};\n\nuse events::EventManager;\n\n#[derive(Debug, Message, Serialize, Deserialize)]\n#[serde(untagged)]\npub enum Data {\n    Error(Error),\n    Event(Event),\n}\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct Error {\n    message: String,\n    code: String,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\npub struct Event {\n    name: String,\n    content: String,\n}\n\nfn main() {\n    env_logger::init();\n\n    let mut client = EventManager::&lt;Data&gt;new();\n\n    client.capture(|data| debug!(\"event: {:?}\", data));\n    client.run();\n}\n</code></pre>\n\n<p>All the code could be see in <a href=\"https://github.com/foochi/how-deserialize-within-actix\" rel=\"nofollow noreferrer\">https://github.com/foochi/how-deserialize-within-actix</a></p>\n"}, {"tags": ["string", "rust"], "answers": [{"comments": [{"owner": {"reputation": 135, "user_id": 2486070, "user_type": "registered", "accept_rate": 20, "profile_image": "https://i.stack.imgur.com/VvzBu.jpg?s=128&g=1", "display_name": "Arthur Saint-Genis", "link": "https://stackoverflow.com/users/2486070/arthur-saint-genis"}, "edited": false, "score": 0, "creation_date": 1539436799, "post_id": 52793283, "comment_id": 92507087, "body": "Thanks a lot, I tried with a simple to_string() before but it wasn&#39;t compiling as the &#39;to&#39; parameter was not a &amp;str. I must have miss something obvious at that moment.  I accepted your answer and everything is working as intended."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1539436240, "creation_date": 1539436240, "answer_id": 52793283, "question_id": 52792990, "link": "https://stackoverflow.com/questions/52792990/why-does-replacing-a-substring-with-a-colored-string-from-the-colored-crate-not/52793283#52793283", "title": "Why does replacing a substring with a colored string from the colored crate not work?", "body": "<p><code>ColoredString</code> implements <code>Deref&lt;Target = str&gt;</code>, but the returned <code>&amp;str</code> doesn't include any color information. You can see this by printing out the dereferenced string:</p>\n\n<pre><code>println!(\"{}\", found.red().as_ref() as &amp;str);\n</code></pre>\n\n<p>It appears that the correct thing to do is to convert the colored text into a <code>String</code> and use that for formatting.</p>\n\n<p>Additionally:</p>\n\n<ul>\n<li>Taking a <code>&amp;String</code> is useless.</li>\n<li>Cloning the <code>String</code> before replacing it is useless</li>\n</ul>\n\n\n\n<pre><code>fn print_found_line(x: &amp;i32, line: &amp;str, found: &amp;str) {\n    let line_to_print = line.replace(found, &amp;found.red().to_string());\n    println!(\"[{}] {}\", x.to_string().blue(), line_to_print);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a></li>\n</ul>\n"}], "owner": {"reputation": 135, "user_id": 2486070, "user_type": "registered", "accept_rate": 20, "profile_image": "https://i.stack.imgur.com/VvzBu.jpg?s=128&g=1", "display_name": "Arthur Saint-Genis", "link": "https://stackoverflow.com/users/2486070/arthur-saint-genis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 52793283, "answer_count": 1, "score": 0, "last_activity_date": 1539442930, "creation_date": 1539434105, "last_edit_date": 1539435639, "question_id": 52792990, "link": "https://stackoverflow.com/questions/52792990/why-does-replacing-a-substring-with-a-colored-string-from-the-colored-crate-not", "title": "Why does replacing a substring with a colored string from the colored crate not work?", "body": "<p>I'm trying to replace all the occurrences of a given string with a colorized version:</p>\n\n<pre><code>extern crate colored; // 1.6.1\n\nuse colored::Colorize;\n\nfn print_found_line(x: &amp;i32, line: &amp;String, found: &amp;str) {\n    let mut line_to_print: String = line.clone();\n\n    println!(\"{}\", found.red()); // work\n    line_to_print = line_to_print.replace(found, found.red().as_ref());\n    println!(\"[{}] {}\", x.to_string().blue(), line_to_print); // the found string replaced is not red\n}\n\nfn main() {}\n</code></pre>\n\n<p>The first <code>println!</code> works as intended and prints the text in red, but the second <code>println!</code> does not work as intended and prints the text in the default color.</p>\n\n<p>It seems that the string literal loses the color information. I want to find a <code>replace</code> equivalent that prints the text as I want.</p>\n"}, {"tags": ["macos", "vim", "rust"], "comments": [{"owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "edited": false, "score": 1, "creation_date": 1539420257, "post_id": 52791116, "comment_id": 92502987, "body": "Maybe you should also tell us which platform you are on?"}, {"owner": {"reputation": 119, "user_id": 3835692, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/77e38f55555121a935602ded014c5464?s=128&d=identicon&r=PG&f=1", "display_name": "DrunkCoder", "link": "https://stackoverflow.com/users/3835692/drunkcoder"}, "reply_to_user": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "edited": false, "score": 0, "creation_date": 1539422034, "post_id": 52791116, "comment_id": 92503435, "body": "@hxpax Done, platform added (darwin17)."}, {"owner": {"reputation": 51553, "user_id": 557306, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/OAmpG.jpg?s=128&g=1", "display_name": "sidyll", "link": "https://stackoverflow.com/users/557306/sidyll"}, "edited": false, "score": 0, "creation_date": 1539442043, "post_id": 52791116, "comment_id": 92508365, "body": "There is nothing wrong with your installation. Having no help is natural, you have to generate the tags after installing new docs with <code>:helptags ALL</code>. How did you edit a new file? Is the filetype correct? Check with <code>:set ft</code>"}, {"owner": {"reputation": 119, "user_id": 3835692, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/77e38f55555121a935602ded014c5464?s=128&d=identicon&r=PG&f=1", "display_name": "DrunkCoder", "link": "https://stackoverflow.com/users/3835692/drunkcoder"}, "reply_to_user": {"reputation": 51553, "user_id": 557306, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/OAmpG.jpg?s=128&g=1", "display_name": "sidyll", "link": "https://stackoverflow.com/users/557306/sidyll"}, "edited": false, "score": 0, "creation_date": 1539495112, "post_id": 52791116, "comment_id": 92518732, "body": "@sidyll Ok, I&#39;ve generated the helptags, checked the filetype, and it&#39;s indeed Rust. The only keyword that doesn&#39;t get highlighted is <code>match</code>. I find that rather strange, and since I haven&#39;t found the <code>~&#47;.vim&#47;pack&#47;...&#47;syntax&#47;rust.vim</code> file in <code>scriptnames</code>, I suspect it isn&#39;t loaded, but I don&#39;t know whether or not it should load."}], "owner": {"reputation": 119, "user_id": 3835692, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/77e38f55555121a935602ded014c5464?s=128&d=identicon&r=PG&f=1", "display_name": "DrunkCoder", "link": "https://stackoverflow.com/users/3835692/drunkcoder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 375, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1539422685, "creation_date": 1539419797, "last_edit_date": 1539422685, "question_id": 52791116, "link": "https://stackoverflow.com/questions/52791116/vim-doesnt-seem-to-load-syntax-from-package-installed-in-vim-pack-folder", "title": "Vim doesn&#39;t seem to load syntax from package installed in .vim/pack folder", "body": "<p>I'm trying to setup Rust support in Vim. I have got:</p>\n\n<pre><code>VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Nov 29 2017 18:37:46)\nIncluded patches: 1-503, 505-680, 682-1283\n</code></pre>\n\n<p>...running on:</p>\n\n<pre><code>x86_64-apple-darwin (darwin17)\n</code></pre>\n\n<p>I've cloned the <code>rust-lang/rust.vim</code> repo into <code>~/.vim/pack/plugins/start/rust.vim</code>, and then installed Syntastic the same way. After reading several websites about the Vim8 package system, I assumed that there's no need for \"registering\" the plugins in the <code>vimrc</code>.</p>\n\n<p>Then I started to write code, but noticed that the <code>match</code> keyword isn't highlighted at all. Also, there's <code>no help for rust-syntastic</code> and <code>no help for syntastic-checkers</code>, even though there should be.</p>\n\n<p>I've checked <code>:scriptnames</code>, and these are the loaded components for <code>rust.vim</code> and <code>syntastic</code>:</p>\n\n<pre><code>22: ~/.vim/pack/plugins/start/rust.vim/plugin/cargo.vim\n23: ~/.vim/pack/plugins/start/rust.vim/plugin/rust.vim\n24: ~/.vim/pack/plugins/start/rust.vim/ftdetect/rust.vim\n25: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/autoloclist.vim\n26: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/balloons.vim\n27: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/checker.vim\n28: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/cursor.vim\n29: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/highlighting.vim\n30: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/loclist.vim\n31: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/modemap.vim\n32: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/notifiers.vim\n33: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/registry.vim\n34: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic/signs.vim\n35: ~/.vim/pack/plugins/start/syntastic/plugin/syntastic.vim\n36: ~/.vim/pack/plugins/start/syntastic/autoload/syntastic/util.vim\n</code></pre>\n\n<p>Then I tried removing <code>rust.vim</code> from the <code>~/.vim/pack/plugins/start</code> directory, and the syntax highlighting stayed the same (everything highlighted except for <code>match</code> and lifetimes), so I assume that either:</p>\n\n<ol>\n<li>Syntax didn't load (and I'm required to do additional configuring of the plugins).</li>\n<li>The highlighting of <code>match</code> is conditional, and the condition isn't for some reason fulfilled.</li>\n<li>There's a problem with my installation of Rust and Cargo.</li>\n</ol>\n\n<p>My <code>vimrc</code> file contains:</p>\n\n<pre><code>set nocompatible\n\nsyntax enable\nfiletype plugin indent on\n\ncolorscheme Tomorrow-Night\n\nset colorcolumn=100\nset number\n\nset incsearch\nset showmatch\n\nset ignorecase\nset smartcase\n\nset expandtab\nset softtabstop=4\nset shiftwidth=4\n\nautocmd BufWritePre * :%s/\\s\\+$//e\n\nlet mapleader=\",\"\n\n\n\" Moving around\n\nmap &lt;leader&gt;e $\nmap &lt;leader&gt;a 0\nmap &lt;leader&gt;t H\nmap &lt;leader&gt;d L\n\nnmap j gj\nnmap k gk\nnmap m h\n\n\n\" Last edit position\n\naugroup last_edit\n  autocmd!\n  autocmd BufReadPost *\n       \\ if line(\"'\\\"\") &gt; 0 &amp;&amp; line(\"'\\\"\") &lt;= line(\"$\") |\n       \\   exe \"normal! g`\\\"\" |\n       \\ endif\naugroup END\n</code></pre>\n\n<p>So my question reads:<br>\n<strong>Did I install these plugins incorrectly, or is it a flaw of their own?</strong></p>\n"}, {"tags": ["indexing", "rust"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1539395212, "post_id": 52788350, "comment_id": 92498892, "body": "Can&#39;t you use a <code>Vec</code>, <code>[T]</code> or array for actual arrays instead of using C style pointers? Rust makes an effort to not use pointer unless you&#39;re doing really low-level things."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1539397240, "post_id": 52788350, "comment_id": 92499169, "body": "@OptimisticPeach I stomped on your edit; it&#39;s a good one so I suggest re-applying it."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1539433145, "post_id": 52788350, "comment_id": 92506148, "body": "Your C code is already broken when iterating in C on a index one should use <code>size_t</code> and the same rule apply, there is no reason to allow a <code>size_t</code> to underflow in C, generally in C a while loop reverse would have <code>while (i &gt; 0 &amp;&amp; some_condition) { i--; some_instruction; }</code>, your actual code is an infinite loop or have undefined behavior if you use an signed integer. Your question is lack of <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> so it&#39;s impossible to give you an accurate answer."}, {"owner": {"reputation": 1158, "user_id": 4956078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44600007f35ab98b7badbf1110df0687?s=128&d=identicon&r=PG&f=1", "display_name": "JMAA", "link": "https://stackoverflow.com/users/4956078/jmaa"}, "edited": false, "score": 0, "creation_date": 1539466588, "post_id": 52788350, "comment_id": 92514829, "body": "Another option, in any language, is to move the termination condition check to the end of the loop (<code>do {} while()</code>-style). Rust doesn&#39;t have do-while keywords, but <a href=\"https://github.com/rust-lang/rfcs/issues/1313#issuecomment-146665147\" rel=\"nofollow noreferrer\">you can reproduce the behaviour easily</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539471241, "post_id": 52788350, "comment_id": 92515829, "body": "If your goal is to move to Rust <i>without</i> it looking like Rust, your project seems pointless. If the other developers <b>don&#39;t want Rust</b>, nothing you can do will ever solve that &quot;problem&quot;. I love Rust, but forcing it on a bunch of developers who are happier writing C is only bound to spread ill will (see &quot;Rust Evangelism Strike Force&quot; for examples). If you literally want to translate your C to Rust as <i>unidiomatically</i> as possible, use some tool like <a href=\"https://c2rust.com/\" rel=\"nofollow noreferrer\">C2Rust</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539471421, "post_id": 52788350, "comment_id": 92515856, "body": "<i>The C code is not broken - it has been supposedly in production for ten years</i> \u2014 these two things are not mutually exclusive."}, {"owner": {"reputation": 23, "user_id": 10497527, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ab3527074c1620b9de773222382e2c8?s=128&d=identicon&r=PG&f=1", "display_name": "Peter", "link": "https://stackoverflow.com/users/10497527/peter"}, "edited": false, "score": 0, "creation_date": 1539477826, "post_id": 52788350, "comment_id": 92516719, "body": "I don&#39;t see how this is relevant to the question, so it goes here, where no one but Shepmaster will read it. The system that&#39;s being updated is a Frankenstein monster of many parts, written in, at least, C, C++, C#, python. At some point, some packet handling was rewritten in Rust, and the clients were happy with it. Then I was hired to speed something up, in C, and they were happy with that as well. Then they asked me to see whether I could move some existing, third party C code to their packet handler. And they insist on it being in Rust, probably because they plan on sticking with Rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539480141, "post_id": 52788350, "comment_id": 92517014, "body": "FWIW, if you <i>want</i> someone to read a comment on SO, you should mention them (@-username). I agree that this diversion isn&#39;t directly relevant to the question, which is also why I put it here in the comments. I doubt that the C++, C# or Python code look like idiomatic C code, so it seems silly to make the <i>Rust</i> code look like idiomatic C code. I understand that you are doing what you are being paid to do and likely don&#39;t actually care one way or the other, but if the Rust code isn&#39;t going to be idiomatic, it seems a waste of effor. You can write C in Rust, but why would you <i>want</i> to?"}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 5, "last_activity_date": 1539397307, "last_edit_date": 1539397307, "creation_date": 1539396111, "answer_id": 52788868, "question_id": 52788350, "link": "https://stackoverflow.com/questions/52788350/how-to-avoid-usize-going-negative/52788868#52788868", "title": "How to avoid usize going negative?", "body": "<p>If you want to do it idiomatically:</p>\n\n<pre><code>for j in (0..=i).rev() {\n    if conditions {\n        break;\n    }\n    //use j as your new i here\n}\n</code></pre>\n\n<p>Note the use of <code>..=i</code> here in the iterator, this means that it'll actually iterate including <code>i</code>: <code>[0, 1, 2, ..., i-1, i]</code>, otherwise, you end up with <code>[0, 1, 2, ..., i-2, i-1]</code></p>\n\n<p>Otherwise, here is the code:</p>\n\n<pre><code>while (i as isize - 1) != -2 &amp;&amp; more_conditions { \n    more_work;\n    i -= 1;\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=15a6d03a145f37c65b72db60b4b0d344&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\" title=\"here\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1539397945, "creation_date": 1539397945, "answer_id": 52788997, "question_id": 52788350, "link": "https://stackoverflow.com/questions/52788350/how-to-avoid-usize-going-negative/52788997#52788997", "title": "How to avoid usize going negative?", "body": "<p>I'd probably start by using <a href=\"https://doc.rust-lang.org/std/primitive.usize.html#method.saturating_sub\" rel=\"nofollow noreferrer\"><code>saturating_sub</code></a> (and <code>_add</code> for parallel structure):</p>\n\n<pre><code>while condition1(i_low) { i_low = i_low.saturating_add(1); }\nwhile condition2(i_high) { j_high = j_high.saturating_sub(1); }\n</code></pre>\n\n<p>You need to be careful to ensure that your logic handles the value saturating at zero. You could also use more C-like semantics with <a href=\"https://doc.rust-lang.org/std/primitive.usize.html#method.wrapping_sub\" rel=\"nofollow noreferrer\"><code>wrapping_sub</code></a>.</p>\n\n<p>Truthfully, there's no one-size-fits-all solution. Many times, complicated logic becomes simpler if you abstract it a bit, or turn it slightly sideways. You haven't provided any concrete examples, so we cannot give any useful advice. I solve way too many problems with iterators, so that's often my first solution.</p>\n\n<blockquote>\n  <p>catching exceptions</p>\n</blockquote>\n\n<p>Absolutely not. That's exceedingly inefficient and non-idiomatic.</p>\n"}], "owner": {"reputation": 23, "user_id": 10497527, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ab3527074c1620b9de773222382e2c8?s=128&d=identicon&r=PG&f=1", "display_name": "Peter", "link": "https://stackoverflow.com/users/10497527/peter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 568, "favorite_count": 0, "accepted_answer_id": 52788868, "answer_count": 2, "score": 2, "last_activity_date": 1539462687, "creation_date": 1539388770, "last_edit_date": 1539462687, "question_id": 52788350, "link": "https://stackoverflow.com/questions/52788350/how-to-avoid-usize-going-negative", "title": "How to avoid usize going negative?", "body": "<p>I'm translating a chunk (2000 lines) of proprietary C code into Rust. In C, it is common to run a pointer, array index, etc. down, for as long as it is non-negative.  In Rust, simplified to the bone, it would look something like:</p>\n\n<pre><code>while i &gt;= 0 &amp;&amp; more_conditions { \n    more_work;\n    i -= 1;\n}\n</code></pre>\n\n<p>Of course, when <code>i</code> is <code>usize</code>, you get an under-overflow from subtraction.  I have learned to work around this by using <code>for</code> loops with <code>.rev()</code>, offsetting my indexes by one, or using a different type and casting with <code>as usize</code>, etc. </p>\n\n<p>Usually it works, and usually I can make it legible, but the code I'm modifying is chock-full of indexes running towards each other, and eventually tested with <code>i_low &gt; i_high</code></p>\n\n<p>Something like (in Rust) </p>\n\n<pre><code>loop {\n    while condition1(i_low) { i_low += 1; }\n    while condition2(i_high) { j_high -= 1; }\n    if i_low &gt; i_high { return something; }\n    do_something_else;\n}\n</code></pre>\n\n<p>Every now and then this panics, as <code>i_high</code> runs past 0. </p>\n\n<p>I have been inserting a lot of <code>j_high &gt;= 0 &amp;&amp;</code> in the code, and it become a lot less readable.</p>\n\n<p>How do experienced Rust programmers avoid <code>usize</code> variables going to -1?</p>\n\n<ol>\n<li><p>for loops?    <code>for i in (0..size).rev()</code></p></li>\n<li><p>casting?      <code>i as usize</code>, after checking for <code>i &lt; 0</code></p></li>\n<li><p>offsetting your variable by one, and using <code>i-1</code> when safe?</p></li>\n<li><p>extra conditionals?</p></li>\n<li><p>catching exceptions?</p></li>\n</ol>\n\n<p>Or do you just eventually learn to write programs around these situations?</p>\n\n<hr>\n\n<p>Clarification: The C code is not broken - it has been supposedly in production for ten years, structuring video segments on multiple servers 24/7.  It is just not following Rust conventions - it often returns -1 as an index, it recurses with -1 for the low index of an array to process, and indexes go negative all the time.  All of these are handled before problems occurs - ugly, but functional.  Something like:</p>\n\n<pre><code>incident_segment = detect_incident(array, start, end);\nattach(array, incident_segment);\nstore(array, start, incident_segment - 1);\nprocess(array, incident_segment + 1, end);\n</code></pre>\n\n<p>In the above code, every single of the three resulting calls may be getting a segment index that's -1 (attach, store) or out of bounds (process)  It's handled, but after the call.</p>\n\n<p>My Rust code appears to be working as well.  As a matter of fact, in order to deal with the negative usize, I added additional logic that pruned a number of recursions, so it runs about as fast as the C code (apparently faster, but that's also because I distributed the output on multiple drives)</p>\n\n<p>The issue is that the client does not not want a full rewrite, and wants the 'native' programmers to be able to check the two programs against each other.  Based on the answers so far, I'm thinking that using i64 and casting/shadowing as needed may be the best way to produce code that's easy to read for the 'natives'.  Which I personally do not have to like...</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 9070, "user_id": 6817835, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/8GBAa.jpg?s=128&g=1", "display_name": "gold_cy", "link": "https://stackoverflow.com/users/6817835/gold-cy"}, "edited": false, "score": 1, "creation_date": 1539373505, "post_id": 52785942, "comment_id": 92493604, "body": "I didn\u2019t even think about adjusting the input type, pretty silly of me. But thanks, you\u2019re saying that because the output is referencing an input that I consumed within the function, once I exit that scope the reference to that is no longer valid because it was consumed within the function scope?"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "reply_to_user": {"reputation": 9070, "user_id": 6817835, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/8GBAa.jpg?s=128&g=1", "display_name": "gold_cy", "link": "https://stackoverflow.com/users/6817835/gold-cy"}, "edited": false, "score": 0, "creation_date": 1539373596, "post_id": 52785942, "comment_id": 92493644, "body": "@aws_apprentice Correct. If you accept an <code>Option&lt;String&gt;</code>, the contained string will go out of scope (is no longer valid) when the function returns."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 4, "last_activity_date": 1539378718, "last_edit_date": 1539378718, "creation_date": 1539372792, "answer_id": 52785942, "question_id": 52785845, "link": "https://stackoverflow.com/questions/52785845/how-do-i-accept-an-optionstring-process-it-and-return-an-optionstring/52785942#52785942", "title": "How do I accept an Option&lt;String&gt;, process it, and return an Option&lt;String&gt;?", "body": "<p>If you return <code>Option&lt;&amp;str&gt;</code>, the returned <code>&amp;str</code> must refer to something that is available after the function returned. Since you pass an <code>Option&lt;String&gt;</code> into the function, this value won't be available once the function returned.</p>\n\n<p>If you convert the string slices <code>to_string</code>, you can use the following:</p>\n\n<pre><code>fn match_exception(exception: Option&lt;String&gt;) -&gt; Option&lt;String&gt; {\n    let piles = [\"a\", \"b\"];\n    exception\n        .unwrap_or(\"\".to_string())\n        .split(',')\n        .map(|exc| exc.trim())\n        .filter(|exc| piles.contains(exc))\n        .map(|s| s.to_string())\n        .next()\n}\n</code></pre>\n\n<p>Note that <code>|s| s.to_string()</code> is relatively expensive.</p>\n\n<p>What you actually may want to do is to accept an <code>Option&lt;&amp;str&gt;</code> in the first place:</p>\n\n<pre><code>fn match_exception(exception: Option&lt;&amp;str&gt;) -&gt; Option&lt;&amp;str&gt; {\n    let piles = [\"a\", \"b\"];\n    exception\n        .unwrap_or(\"\")\n        .split(',')\n        .map(|exc| exc.trim())\n        .filter(|exc| piles.contains(exc))\n        .next()\n}\n</code></pre>\n"}], "owner": {"reputation": 9070, "user_id": 6817835, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/8GBAa.jpg?s=128&g=1", "display_name": "gold_cy", "link": "https://stackoverflow.com/users/6817835/gold-cy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 390, "favorite_count": 0, "accepted_answer_id": 52785942, "answer_count": 1, "score": 2, "last_activity_date": 1539379070, "creation_date": 1539372269, "last_edit_date": 1539379070, "question_id": 52785845, "link": "https://stackoverflow.com/questions/52785845/how-do-i-accept-an-optionstring-process-it-and-return-an-optionstring", "title": "How do I accept an Option&lt;String&gt;, process it, and return an Option&lt;String&gt;?", "body": "<p>Coming from Python, I am having some trouble grasping lifetimes. I am trying to implement this trivial function to return an <code>Option&lt;String&gt;</code> but I can not get it. All I have been able to do so far is:</p>\n\n<pre><code>fn match_exception(exception: Option&lt;String&gt;) -&gt; String {\n    let piles = [\"a\", \"b\"];\n    exception\n        .unwrap_or(\"\".to_string())\n        .split(',')\n        .map(|exc| exc.trim())\n        .filter(|exc| piles.contains(exc))\n        .next()\n        .unwrap_or(\"\")\n        .to_string()\n}\n</code></pre>\n\n<p>This returns a <code>String</code> (not to mention looks super clunky to me) but I was hoping to get it to come back in the same format that it entered, <code>Option&lt;String&gt;</code>.</p>\n\n<p>If I remove everything after the <code>next</code> call it returns an <code>Option&lt;&amp;str&gt;</code> and if I go ahead and redefine my expected return type to <code>Option&lt;&amp;str&gt;</code> it complains that I haven't set lifetimes:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/lib.rs:1:57\n  |\n1 | fn match_exception(exception: Option&lt;String&gt;) -&gt; Option&lt;&amp;str&gt; {\n  |                                                         ^ expected lifetime parameter\n  |\n  = help: this function's return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments\n  = help: consider giving it an explicit bounded or 'static lifetime\n</code></pre>\n\n<p>Can someone give me a nudge in the right direction or explain this in a slightly more simple way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1539364986, "post_id": 52783980, "comment_id": 92490011, "body": "Implement <code>From</code> for the reverse direction, that&#39;s how it is supposed to work."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539368008, "post_id": 52783980, "comment_id": 92491326, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/37347311/155423\">How is there a conflicting implementation of <code>From</code> when using a generic type?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/52783980/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "edited": false, "score": 0, "creation_date": 1539368098, "post_id": 52783980, "comment_id": 92491366, "body": "I&#39;m taking a look at it now."}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1539368244, "post_id": 52783980, "comment_id": 92491431, "body": "@starblue your suggestion does not appear to work. <a href=\"https://play.rust-lang.org/?gist=f5a326790f41ebb292a2a8f6f22d429c&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539368256, "post_id": 52783980, "comment_id": 92491436, "body": "@shepmaster you&#39;re welcome to mark this question as answered."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1539375323, "post_id": 52783980, "comment_id": 92494257, "body": "@Phoenix <code>From</code> from a type <code>T</code> to itself already exists for any <code>T</code>, so you are not allowed to redefine that for <code>IntPair&lt;Int64&gt;</code>. But <code>impl From&lt;IntPair&lt;Int32&gt;&gt; for IntPair&lt;Int64&gt;</code> should suffice for what you want to do."}, {"owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1539381514, "post_id": 52783980, "comment_id": 92496489, "body": "@Starblue that doesn&#39;t really fit my goal. MCVE aside, there may be a large number of element types which implement <code>Into&lt;Int64&gt;</code>. I do not want to re-implement a conversion into <code>IntPair&lt;Int64&gt;</code> each time."}], "owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 36, "favorite_count": 0, "closed_date": 1539368557, "answer_count": 0, "score": 0, "last_activity_date": 1539367810, "creation_date": 1539363384, "last_edit_date": 1539367810, "question_id": 52783980, "link": "https://stackoverflow.com/questions/52783980/implement-into-for-generic-type-where-its-component-implements-into", "closed_reason": "Duplicate", "title": "Implement Into for generic type where its component implements Into", "body": "<p>I have a type <code>IntPair&lt;T&gt;</code> which is generic over the type of some of its elements. The element type <code>T</code> may be some minimally restrictive type (<code>Int64</code>), or some more restrictive type which provides more guarantees (<code>Int32</code>, which in this case guarantees a reduced range of possible values). </p>\n\n<p>The more restrictive element type implements <code>Into</code> the less restrictive element type. I want this conversion to generically carry into the type <code>IntPair&lt;T&gt;</code> which uses the other type as elements.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>pub struct Int32(pub i32);\npub struct Int64(pub i64);\nimpl Into&lt;Int64&gt; for Int32 {\n    fn into(self) -&gt; Int64 {\n        Int64(self.0 as i64)\n    }\n}\npub struct IntPair&lt;T&gt; {\n    pub x: T,\n    pub y: T,\n}\nimpl&lt;T: Into&lt;Int64&gt;&gt; Into&lt;IntPair&lt;Int64&gt;&gt; for IntPair&lt;T&gt; {\n    fn into(self) -&gt; IntPair&lt;Int64&gt; {\n        IntPair {\n            x: self.x.into(),\n            y: self.y.into(),\n        }\n    }\n}\nfn main() {\n    let p32: IntPair&lt;Int32&gt; = IntPair {\n        x: Int32(3),\n        y: Int32(9),\n    };\n    let p64: IntPair&lt;Int64&gt; = p32.into();\n}\n</code></pre>\n\n<p>Unfortunately, this code does not work.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `std::convert::Into&lt;IntPair&lt;Int64&gt;&gt;` for type `IntPair&lt;_&gt;`:\n  --&gt; src/main.rs:12:1\n   |\n12 | impl&lt;T: Into&lt;Int64&gt;&gt; Into&lt;IntPair&lt;Int64&gt;&gt; for IntPair&lt;T&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: conflicting implementation in crate `core`:\n           - impl&lt;T, U&gt; std::convert::Into&lt;U&gt; for T\n             where U: std::convert::From&lt;T&gt;;\n</code></pre>\n\n<p>If I understand, the compiler cannot guarantee that there isn't an impl of <code>From&lt;IntPair&lt;T&gt;&gt; for IntPair&lt;Int64&gt;</code>, which would trigger a conflicting impl of <code>Into&lt;IntPair&lt;Int64&gt;&gt; for IntPair&lt;T&gt;</code>, due to <code>IntPair&lt;T&gt;</code> not being a concrete type.</p>\n\n<p>That makes sense, but I would still like this feature. The only solution I can think of would be to create my own trait which behaves the same as <code>Into</code>. However, that would not be ideal, as the type would not work for methods that accept <code>impl Into&lt;IntPair&lt;Int64&gt;&gt;</code>. </p>\n\n<p>Is there a way I can make this impl compile?</p>\n"}, {"tags": ["docker", "rust", "rust-rocket"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539345439, "post_id": 52778864, "comment_id": 92479551, "body": "Exact same binaries? I think of using a debug instead of a release version. Run <code>sha256sum</code> on both binaries and check, that they are equal."}, {"owner": {"reputation": 1376, "user_id": 5368759, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EUB19ZQqehM/AAAAAAAAAAI/AAAAAAAAAkQ/t8XfIKGPO34/photo.jpg?sz=128", "display_name": "Fuyang Liu", "link": "https://stackoverflow.com/users/5368759/fuyang-liu"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539345634, "post_id": 52778864, "comment_id": 92479663, "body": "Yes they both have <code>f2a112caf8163d484ca66b2542baad6b6411bba7296507d88059e981d945&zwnj;&#8203;3646  backend</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539345958, "post_id": 52778864, "comment_id": 92479827, "body": "Is that a problem ? =&gt; No =&gt; So there is no problem ;)"}, {"owner": {"reputation": 1376, "user_id": 5368759, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EUB19ZQqehM/AAAAAAAAAAI/AAAAAAAAAkQ/t8XfIKGPO34/photo.jpg?sz=128", "display_name": "Fuyang Liu", "link": "https://stackoverflow.com/users/5368759/fuyang-liu"}, "edited": false, "score": 0, "creation_date": 1539346110, "post_id": 52778864, "comment_id": 92479907, "body": "What do you mean...? If I set memory limit on Kubernetes and keep the memory lower than 100MB, it will start killing my application again and again. And I simply believe my small app shouldn&#39;t take that much of memory when firstly loads up."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539346511, "post_id": 52778864, "comment_id": 92480156, "body": "So there is a problem, still I don&#39;t know how we could help you, you are comparing two runtime, one from mac one from linux, we don&#39;t even know what your application is doing, this is not answerable. Maybe linux need memory to do something. Maybe this question should be posted on ServerFault."}, {"owner": {"reputation": 1376, "user_id": 5368759, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EUB19ZQqehM/AAAAAAAAAAI/AAAAAAAAAkQ/t8XfIKGPO34/photo.jpg?sz=128", "display_name": "Fuyang Liu", "link": "https://stackoverflow.com/users/5368759/fuyang-liu"}, "edited": false, "score": 0, "creation_date": 1539347548, "post_id": 52778864, "comment_id": 92480745, "body": "I will try make a small repo and have some minimal code to see if it uses different memory on different environment then."}], "answers": [{"tags": [], "owner": {"reputation": 1376, "user_id": 5368759, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EUB19ZQqehM/AAAAAAAAAAI/AAAAAAAAAkQ/t8XfIKGPO34/photo.jpg?sz=128", "display_name": "Fuyang Liu", "link": "https://stackoverflow.com/users/5368759/fuyang-liu"}, "is_accepted": false, "score": 0, "last_activity_date": 1539613060, "last_edit_date": 1539613060, "creation_date": 1539612221, "answer_id": 52818528, "question_id": 52778864, "link": "https://stackoverflow.com/questions/52778864/what-could-cause-a-docker-image-with-a-rocket-application-to-use-very-different/52818528#52818528", "title": "What could cause a Docker image with a Rocket application to use very different memory when running on different Docker hosts?", "body": "<p>The Rocket application by default will create multiple worker threads based on the system resources and each worker will have some memory overhead.</p>\n\n<p>On Kubernetes we have large nodes which have more cores than my local laptop, resulting in the memory of the web application increasing a lot.</p>\n\n<p>I tried to reduce the total number of workers of my Rocket application down to half and the memory usage seem reduced by around half as well.</p>\n\n<p>I'm not sure whether there are other reasons that could cause the difference, but this could be the major reason.</p>\n"}], "owner": {"reputation": 1376, "user_id": 5368759, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-EUB19ZQqehM/AAAAAAAAAAI/AAAAAAAAAkQ/t8XfIKGPO34/photo.jpg?sz=128", "display_name": "Fuyang Liu", "link": "https://stackoverflow.com/users/5368759/fuyang-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 295, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1539618591, "creation_date": 1539344815, "last_edit_date": 1539618591, "question_id": 52778864, "link": "https://stackoverflow.com/questions/52778864/what-could-cause-a-docker-image-with-a-rocket-application-to-use-very-different", "title": "What could cause a Docker image with a Rocket application to use very different memory when running on different Docker hosts?", "body": "<p>I have a Rocket web application packed into a Docker image. The application uses 4 or 5 times of more memory on start when deployed and running inside our Kubernetes environment (some Linux Docker host), than the memory usage of it running as a container on a Mac laptop Docker host. </p>\n\n<p>What could cause this memory difference?</p>\n\n<p>Locally (as a container running in my Mac laptop docker):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n    1 root      20   0  187944  18916  12308 S   0.0  0.9   0:00.12 backend\n   25 root      20   0   41024   3116   2668 R   0.0  0.2   0:00.03 top\n</code></pre>\n\n<p>On Linux docker host (Or on kubernetes):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND     \n    1 root      20   0  239244 108408  10840 S   0.0  0.3   0:00.67 backend     \n   38 root      20   0   18144   3260   2820 S   0.0  0.0   0:00.00 bash        \n   44 root      20   0   41032   3124   2660 R   0.0  0.0   0:00.00 top\n</code></pre>\n\n<p>You can see the <code>RES</code> value of the process <code>backend</code> is much higher as running on Kubernetes</p>\n\n<p>I have double checked that the image versions are exactly the same.</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 27556, "user_id": 1277510, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8473546b3dd0a3488911a2590dea6103?s=128&d=identicon&r=PG", "display_name": "elmarco", "link": "https://stackoverflow.com/users/1277510/elmarco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 32, "favorite_count": 0, "closed_date": 1539343415, "answer_count": 0, "score": 1, "last_activity_date": 1539342729, "creation_date": 1539342729, "question_id": 52778309, "link": "https://stackoverflow.com/questions/52778309/self-referencing-fields", "closed_reason": "Duplicate", "title": "Self-referencing fields", "body": "<p>I would like to initialized a struct which will only reference other fields it owns.</p>\n\n<p>What's the rust way of writing something like this?</p>\n\n<pre><code>struct Foo {\n    a: i32,\n    b: &amp;i32,\n}\n\nimpl Foo {\n    fn new() -&gt; Self {\n        Self {\n            a: 0,\n            b: &amp;self.a,\n        }\n    }\n}\n</code></pre>\n\n<p>thanks</p>\n"}, {"tags": ["stream", "rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1539353662, "post_id": 52778236, "comment_id": 92484175, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/52778236/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. For example, <code>dequeuer</code> is not a defined variable. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539353834, "post_id": 52778236, "comment_id": 92484290, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>join_handle</code> instead, please. It&#39;s also not idiomatic to use <code>return</code> at the end of a block, just let the last line be an expression and thus the value of the block."}], "answers": [{"comments": [{"owner": {"reputation": 20334, "user_id": 78667, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b13a3e168d85c7f7f45ae1e54dc9db57?s=128&d=identicon&r=PG", "display_name": "Arkaitz Jimenez", "link": "https://stackoverflow.com/users/78667/arkaitz-jimenez"}, "edited": false, "score": 0, "creation_date": 1539363826, "post_id": 52781807, "comment_id": 92489528, "body": "Awesome! I looked into chain and was blind enough to not see zip. I want to shut down the reactor regardless of the side spawns finishing or not so core.run works better for me there."}, {"owner": {"reputation": 20334, "user_id": 78667, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b13a3e168d85c7f7f45ae1e54dc9db57?s=128&d=identicon&r=PG", "display_name": "Arkaitz Jimenez", "link": "https://stackoverflow.com/users/78667/arkaitz-jimenez"}, "edited": false, "score": 0, "creation_date": 1539364014, "post_id": 52781807, "comment_id": 92489619, "body": "if I am not wrong, for_each will end up in error when the streams complete, is there anyway to avoid the error? I want to be able to do core.run(future).expect(&quot;Errors in the pipeline&quot;); and that would trigger always with for_each end_of_iteration behavior."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20334, "user_id": 78667, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b13a3e168d85c7f7f45ae1e54dc9db57?s=128&d=identicon&r=PG", "display_name": "Arkaitz Jimenez", "link": "https://stackoverflow.com/users/78667/arkaitz-jimenez"}, "edited": false, "score": 0, "creation_date": 1539368691, "post_id": 52781807, "comment_id": 92491638, "body": "@ArkaitzJimenez <i>for_each will end up in error when the streams complete</i> \u2014 why do you say that? I haven&#39;t seen that. Are you able to provide code that makes that error?"}, {"owner": {"reputation": 20334, "user_id": 78667, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b13a3e168d85c7f7f45ae1e54dc9db57?s=128&d=identicon&r=PG", "display_name": "Arkaitz Jimenez", "link": "https://stackoverflow.com/users/78667/arkaitz-jimenez"}, "edited": false, "score": 0, "creation_date": 1539422037, "post_id": 52781807, "comment_id": 92503436, "body": "well it looked like the error was an artifact of my previous impl, this works flawlessly."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1539355445, "last_edit_date": 1539355445, "creation_date": 1539354864, "answer_id": 52781807, "question_id": 52778236, "link": "https://stackoverflow.com/questions/52778236/how-do-i-extract-messages-from-an-unbounded-queue-every-n-seconds-and-spawn-them/52781807#52781807", "title": "How do I extract messages from an unbounded queue every N seconds and spawn them on to a Tokio handler?", "body": "<p><code>Interval</code> and <code>UnboundedReceiver</code> are both streams, so I'd use <a href=\"https://docs.rs/futures/0.1.24/futures/stream/trait.Stream.html#method.zip\" rel=\"nofollow noreferrer\"><code>Stream::zip</code></a> to combine them:</p>\n\n<blockquote>\n  <p>The zipped stream waits for both streams to produce an item, and then returns that pair. If an error happens, then that error will be returned immediately. If either stream ends then the zipped stream will also end.</p>\n</blockquote>\n\n<pre><code>extern crate futures; // 0.1.24\nextern crate tokio;   // 0.1.8\nextern crate tokio_core; // 0.1.17\n\nuse futures::{\n    future::ok,\n    sync::mpsc,\n    {Future, Stream},\n};\nuse std::{thread, time::Duration};\nuse tokio::timer::Interval;\nuse tokio_core::reactor::Core;\n\ntype VantageMessage = Box&lt;Future&lt;Item = (), Error = ()&gt; + Send&gt;;\n\npub fn main() {\n    let (tx, rx) = mpsc::unbounded();\n\n    let new_fut: VantageMessage = Box::new(ok(()).and_then(|_| {\n        println!(\"Message!\");\n        Ok(())\n    }));\n    tx.unbounded_send(new_fut).expect(\"Unable to send\");\n    drop(tx); // Close the sending side\n\n    worker(rx).join().expect(\"Thread had a panic\");\n}\n\nfn worker(queue: mpsc::UnboundedReceiver&lt;VantageMessage&gt;) -&gt; thread::JoinHandle&lt;()&gt; {\n    thread::spawn(|| {\n        let mut core = Core::new().unwrap();\n        let handle = core.handle();\n\n        core.run({\n            Interval::new_interval(Duration::from_secs(1))\n                .map_err(|e| panic!(\"delay errored; err={}\", e))\n                .zip(queue)\n                .for_each(|(_, message)| {\n                    handle.spawn(message);\n                    Ok(())\n                })\n        })\n        .expect(\"Unable to run reactor\");\n        println!(\"Returned!\");\n    })\n}\n</code></pre>\n\n<p>Note that this doesn't actually <em>wait</em> for any of the spawned futures to complete before the reactor shuts down. If you want that, I'd switch to <code>tokio::run</code> and <code>tokio::spawn</code>: </p>\n\n<pre><code>fn worker(queue: mpsc::UnboundedReceiver&lt;VantageMessage&gt;) -&gt; thread::JoinHandle&lt;()&gt; {\n    thread::spawn(|| {\n        tokio::run({\n            Interval::new_interval(Duration::from_secs(1))\n                .map_err(|e| panic!(\"delay errored; err={}\", e))\n                .zip(queue)\n                .for_each(|(_, message)| {\n                    tokio::spawn(message);\n                    Ok(())\n                })\n        });\n        println!(\"Returned!\");\n    })\n}\n</code></pre>\n"}], "owner": {"reputation": 20334, "user_id": 78667, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/b13a3e168d85c7f7f45ae1e54dc9db57?s=128&d=identicon&r=PG", "display_name": "Arkaitz Jimenez", "link": "https://stackoverflow.com/users/78667/arkaitz-jimenez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 306, "favorite_count": 0, "accepted_answer_id": 52781807, "answer_count": 1, "score": -1, "last_activity_date": 1539355445, "creation_date": 1539342435, "last_edit_date": 1539354520, "question_id": 52778236, "link": "https://stackoverflow.com/questions/52778236/how-do-i-extract-messages-from-an-unbounded-queue-every-n-seconds-and-spawn-them", "title": "How do I extract messages from an unbounded queue every N seconds and spawn them on to a Tokio handler?", "body": "<p>I am trying to extract messages (which are futures themselves) from an unbounded queue every N seconds and spawn them into the Tokio handler.  </p>\n\n<p>I\u2019ve tried dozens of variations but I cannot seem to find the right approach. It looks like it should be possible, but I always hit a future type mismatch or end up with borrow issues.</p>\n\n<p>This is the code that shows more or less what I want:</p>\n\n<pre><code>let fut = Interval::new_interval(Duration::from_secs(1))\n        .for_each(|num| vantage_dequeuer.into_future() )\n        .for_each(|message:VantageMessage |{\n            handle.spawn(message);\n            return Ok(());\n        })\n        .map_err(|e| panic!(\"delay errored; err={:?}\", e));\n\ncore.run(fut);\n</code></pre>\n\n<p>Complete code:</p>\n\n<pre><code>extern crate futures; // 0.1.24\nextern crate tokio; // 0.1.8\nextern crate tokio_core; // 0.1.17\n\nuse futures::future::ok;\nuse futures::sync::mpsc;\nuse futures::{Future, Stream};\nuse std::thread;\nuse std::time::Duration;\nuse tokio::timer::Interval;\nuse tokio_core::reactor::Core;\n\ntype VantageMessage = Box&lt;Future&lt;Item = (), Error = ()&gt; + Send&gt;;\n\nfn main() {\n    let (enqueuer, dequeuer) = mpsc::unbounded();\n    let new_fut: VantageMessage = Box::new(ok(()).and_then(|_| {\n        println!(\"Message!\");\n        return Ok(());\n    }));\n    enqueuer.unbounded_send(new_fut);\n    let joinHandle = worker(Some(dequeuer));\n    joinHandle.join();\n}\n\n/*\n    Every second extract one message from dequeuer (or wait if not available)\n    and spawn it in the core\n*/\nfn worker(\n    mut vantage_dequeuer: Option&lt;mpsc::UnboundedReceiver&lt;VantageMessage&gt;&gt;,\n) -&gt; thread::JoinHandle&lt;()&gt; {\n    let dequeuer = dequeuer.take().unwrap();\n    let joinHandle = thread::spawn(|| {\n        let mut core = Core::new().unwrap();\n        let handle = core.handle();\n        let fut = Interval::new_interval(Duration::from_secs(1))\n            .for_each(|num| vantage_dequeuer.into_future())\n            .for_each(|message: VantageMessage| {\n                handle.spawn(message);\n                return Ok(());\n            })\n            .map_err(|e| panic!(\"delay errored; err={:?}\", e));\n\n        core.run(fut);\n        println!(\"Returned!\");\n    });\n    return joinHandle;\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=41968a9fb2194781202ca07497781589&amp;version=nightly&amp;mode=debug&amp;edition=2018\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find value `dequeuer` in this scope\n  --&gt; src/main.rs:33:20\n   |\n33 |     let dequeuer = dequeuer.take().unwrap();\n   |                    ^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `into_future` found for type `std::option::Option&lt;futures::sync::mpsc::UnboundedReceiver&lt;std::boxed::Box&lt;(dyn futures::Future&lt;Item=(), Error=()&gt; + std::marker::Send + 'static)&gt;&gt;&gt;` in the current scope\n  --&gt; src/main.rs:38:46\n   |\n38 |             .for_each(|num| vantage_dequeuer.into_future())\n   |                                              ^^^^^^^^^^^\n   |\n   = note: the method `into_future` exists but the following trait bounds were not satisfied:\n           `&amp;mut std::option::Option&lt;futures::sync::mpsc::UnboundedReceiver&lt;std::boxed::Box&lt;(dyn futures::Future&lt;Item=(), Error=()&gt; + std::marker::Send + 'static)&gt;&gt;&gt; : futures::Stream`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1539330605, "post_id": 52774657, "comment_id": 92471355, "body": "why not use <code>print_data = format!(...</code> ? What&#39;s the purpose of SomeType ?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1539336025, "post_id": 52774657, "comment_id": 92474344, "body": "It is utterly unclear what you&#39;re asking here, and as already mentioned, some pieces of your code are unknown. Please seek to make a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, and see if you can proofread the rest of the question."}], "answers": [{"tags": [], "owner": {"reputation": 279, "user_id": 5917243, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh4.googleusercontent.com/-qtep2iMqRfc/AAAAAAAAAAI/AAAAAAAAABE/OpjnOORf7ac/photo.jpg?sz=128", "display_name": "Vladislav Aniskin", "link": "https://stackoverflow.com/users/5917243/vladislav-aniskin"}, "is_accepted": false, "score": 0, "last_activity_date": 1539333240, "creation_date": 1539333240, "answer_id": 52775448, "question_id": 52774657, "link": "https://stackoverflow.com/questions/52774657/how-i-can-path-arguments-from-function-to-macro/52775448#52775448", "title": "How I can path arguments from function to macro", "body": "<p>Solution:</p>\n\n<pre><code>use logger_util;  \n\nfn foo() {\n    logger_util::use_macro(format_args!(\"{} {} \", 123, \"hello world\"))\n}\n\nuse std::fmt::Arguments;    \n\npub fn use_macro(args: Arguments) {\n    info!(\"{}\", args)\n}\n</code></pre>\n"}], "owner": {"reputation": 279, "user_id": 5917243, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh4.googleusercontent.com/-qtep2iMqRfc/AAAAAAAAAAI/AAAAAAAAABE/OpjnOORf7ac/photo.jpg?sz=128", "display_name": "Vladislav Aniskin", "link": "https://stackoverflow.com/users/5917243/vladislav-aniskin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 0, "answer_count": 1, "score": -3, "last_activity_date": 1539333240, "creation_date": 1539330136, "last_edit_date": 1539332030, "question_id": 52774657, "link": "https://stackoverflow.com/questions/52774657/how-i-can-path-arguments-from-function-to-macro", "title": "How I can path arguments from function to macro", "body": "<p>Explain, I have macro info!(\"Hello world\") from <a href=\"https://docs.rs/log/0.4.5/log/\" rel=\"nofollow noreferrer\">Rust log</a>\nAnd it works well anywhere, but not in common.rs file from <a href=\"https://doc.rust-lang.org/book/second-edition/ch11-03-test-organization.html\" rel=\"nofollow noreferrer\">Organize test rust</a> for cargo integration test. Because of macro use declaration (for import) must be declared in the root module and then provides for child modules. But in an integration test case, we don't have the root module and can't provide a macro for common.rs (child module). </p>\n\n<p>Example 1:\nModule parent \nmod.rs</p>\n\n<pre><code>#[macro_use]\nuse extern crate some_crate;\n\nmod child.\n</code></pre>\n\n<p>in this case, the child can use macro without problem</p>\n\n<p>Example 2:\nNo module (as integration test case), just test file \nsome_test.rs</p>\n\n<pre><code>#[macro_use]\nuse extern crate some_crate;\n\nmod child.\n</code></pre>\n\n<p>in this case, the child does not see macro, and we can provide macro use only this way.</p>\n\n<p>For solving this problem I create a util module logger_util, which can use macro and then imported in some_test.rs</p>\n\n<p>Example 3:\nNo module (as integration test case), just test file \nsome_test.rs</p>\n\n<pre><code> mod child   \n</code></pre>\n\n<p>child.rs</p>\n\n<pre><code>use logger_util\n\nfn foo() {\n    logger_util.use_macro()\n}\n</code></pre>\n\n<p>logger_util.rs</p>\n\n<pre><code>#[macro_use]\nextern crate some_crate;\n\npub fn use_macro() {\n    some_macro!(\"Hello world\")\n}\n</code></pre>\n\n<p>And my question is next:\nHow can I instead this:</p>\n\n<pre><code>fn foo() {\n    info!(\"{} {} \", 123, \"hello world\")\n}\n</code></pre>\n\n<p>Do this, from:</p>\n\n<pre><code>fn foo() {\n    let print_data: SomeType = \"{} {} \", 123, \"hello world\";\n    use_macro(print_data)\n}\n</code></pre>\n\n<p>To logger_util.rs </p>\n\n<pre><code>pub fn use_macro(print_data: SomeType) {\n    info!(\"Hello world\")\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 939, "user_id": 2870802, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-lHzULJklIJg/AAAAAAAAAAI/AAAAAAAABwk/_pJZF95FiAY/photo.jpg?sz=128", "display_name": "ozkriff", "link": "https://stackoverflow.com/users/2870802/ozkriff"}, "edited": false, "score": 3, "creation_date": 1539322527, "post_id": 52771722, "comment_id": 92467658, "body": "<a href=\"https://github.com/rust-unofficial/patterns/blob/master/anti_patterns/deref.md\" rel=\"nofollow noreferrer\">github.com/rust-unofficial/patterns/blob/master/anti_pattern&zwnj;&#8203;s/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1539328992, "post_id": 52771722, "comment_id": 92470497, "body": "Related: <a href=\"https://stackoverflow.com/questions/45086595/is-it-considered-a-bad-practice-to-implement-deref-for-newtypes\" title=\"is it considered a bad practice to implement deref for newtypes\">stackoverflow.com/questions/45086595/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 6, "last_activity_date": 1539351747, "last_edit_date": 1539351747, "creation_date": 1539325705, "answer_id": 52773530, "question_id": 52771722, "link": "https://stackoverflow.com/questions/52771722/is-it-idiomatic-to-implement-deref-as-returning-a-field-of-a-composite-structu/52773530#52773530", "title": "Is it idiomatic to implement `Deref` as returning a field of a composite structure?", "body": "<p>The intention of <code>Deref</code> is to implement pointer types.  It is supposed to convert a pointer to <code>T</code> to <code>T</code>, so dereferencing the pointer feels \"natural\".  Using it to convert between unrelated types seems confusing.</p>\n\n<p>I suggest you add a getter method <code>id()</code> instead.</p>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1539337176, "creation_date": 1539337176, "answer_id": 52776684, "question_id": 52771722, "link": "https://stackoverflow.com/questions/52771722/is-it-idiomatic-to-implement-deref-as-returning-a-field-of-a-composite-structu/52776684#52776684", "title": "Is it idiomatic to implement `Deref` as returning a field of a composite structure?", "body": "<p>There are indeed close-to-official guidelines related with <code>Deref</code> and <code>DerefMut</code>. According to <a href=\"https://rust-lang-nursery.github.io/api-guidelines/predictability.html#c-deref\" rel=\"noreferrer\">C-DEREF</a> from the Rust API guidelines, <em>\"Only smart pointers implement <code>Deref</code> and <code>DerefMut</code>.\"</em> Your suggestion to use <code>Deref</code> would lead to multiple issues, and so it is strongly unadvised.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"noreferrer\"><code>Deref</code></a> does not have a type parameter, but an associated type. Implementing it would have to be done as the code below, but could never be implemented for additional attributes.</p>\n\n<pre><code>// don't try this at home!\nimpl Deref for IdAndUrl {\n    type Target = Id;\n\n    fn deref(&amp;self) -&gt; &amp;Self::Target { &amp;self.id }\n}\n</code></pre>\n\n<p>Moreover, a <code>Deref</code> implementation exposes the methods from the target type via deref coercion, polluting the struct with an interface that you might not want to have here.</p>\n\n<p>One could look at the other conversion traits (namely <code>From</code>, <code>AsRef</code>, and <code>Borrow</code>) and see if they make sense (<a href=\"https://rust-lang-nursery.github.io/api-guidelines/interoperability.html#c-conv-traits\" rel=\"noreferrer\">C-CONV-TRAITS</a>). But from my interpretation, none of these would make sense. As already suggested in another answer, a simple getter is ideal here:</p>\n\n<pre><code>impl IdAndUrl {\n    fn id(&amp;self) -&gt; &amp;Id { &amp;self.id }\n}\n</code></pre>\n"}], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 463, "favorite_count": 2, "accepted_answer_id": 52776684, "answer_count": 2, "score": 3, "last_activity_date": 1539351861, "creation_date": 1539314302, "last_edit_date": 1539351861, "question_id": 52771722, "link": "https://stackoverflow.com/questions/52771722/is-it-idiomatic-to-implement-deref-as-returning-a-field-of-a-composite-structu", "title": "Is it idiomatic to implement `Deref` as returning a field of a composite structure?", "body": "<p>I have:</p>\n\n<pre><code>struct Id;\nstruct Url;\nstruct IdAndUrl {\n    id: Id,\n    url: Url,\n}\n</code></pre>\n\n<p>I'd like to be able to use <code>IdAndUrl</code> in places where I need just <code>Id</code>. To eliminate the noise I could use <code>impl Deref&lt;Id&gt; for IdAndUrl</code>.</p>\n\n<p>Is this a good practice / idiomatic?</p>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1539323983, "post_id": 52771525, "comment_id": 92468169, "body": "Have you tried to use nested slices?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539356133, "post_id": 52771525, "comment_id": 92485679, "body": "Maybe you can use <a href=\"https://docs.rs/ndarray/0.12.0/ndarray/\" rel=\"nofollow noreferrer\"><code>ndarray</code></a> but I don&#39;t know if it&#39;s work with wasm."}], "answers": [{"tags": [], "owner": {"reputation": 446, "user_id": 3755582, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e3619716eddda8c3b1e0ad30c5f8b05?s=128&d=identicon&r=PG", "display_name": "alexcrichton", "link": "https://stackoverflow.com/users/3755582/alexcrichton"}, "is_accepted": true, "score": 7, "last_activity_date": 1541103466, "last_edit_date": 1541103466, "creation_date": 1541103315, "answer_id": 53108733, "question_id": 52771525, "link": "https://stackoverflow.com/questions/52771525/how-do-i-use-nested-vecs-with-wasm-bindgen/53108733#53108733", "title": "How do I use nested Vecs with wasm-bindgen?", "body": "<p>You're correct that <code>wasm-bindgen</code> today doesn't support returning types like <code>Vec&lt;Vec&lt;u8&gt;&gt;</code>. </p>\n\n<p>A good rule of thumb for WebAssembly is that big chunks of data (like vectors) should always live in the same location to avoid losing too much performance. This means that you might want to explore an interface where a JS object wraps a pointer into WASM memory, and all of its methods work with row/column indices but modify WASM memory to keep it as the source of truth.</p>\n\n<p>If that doesn't work out, then the best way to implement this today is either of the strategies you mentioned as well, although both of those require some level of JS glue code to be written as well.</p>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 549, "favorite_count": 0, "accepted_answer_id": 53108733, "answer_count": 1, "score": 2, "last_activity_date": 1541103466, "creation_date": 1539312847, "last_edit_date": 1539355748, "question_id": 52771525, "link": "https://stackoverflow.com/questions/52771525/how-do-i-use-nested-vecs-with-wasm-bindgen", "title": "How do I use nested Vecs with wasm-bindgen?", "body": "<p>It doesn't appear that nested <code>Vec</code>s work with wasm-bindgen. Is that correct?</p>\n\n<p>My goal is to have a Game of Life grid in Rust that I can return as rows, rather than a 1D <code>Vec</code> which requires the JavaScript to handle the indexing. Two workarounds I've thought of are:</p>\n\n<ol>\n<li>Implement a sort of custom \"iterator\" in Rust, which is a method which returns the rows one-by-one. </li>\n<li>Hand a 1D array to JavaScript but write a wrapper in JavaScript which handles the indexing and exposes some sort of an iterator to the consumer.</li>\n</ol>\n\n<p>I hesitate to use either of these because I want this library to be usable by JavaScript and native Rust, and I don't think either would be very idiomatic in pure Rust land. Any other suggestions?</p>\n"}, {"tags": ["multithreading", "concurrency", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539311773, "post_id": 52771295, "comment_id": 92465070, "body": "What you forget is that your type is <code>&amp;static str</code>, here the same sniped with a simple struct, <a href=\"https://play.rust-lang.org/?gist=2fb38b955b26dea7291fbacd270a8e7a&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>."}, {"owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539316932, "post_id": 52771295, "comment_id": 92466121, "body": "@Stargateur I get your point but I don&#39;t understand how this relates to my original question in the context of &amp;static str. I did know that &amp;static str I just don&#39;t understand why that is able to be passed as mutable and used in multiple threads."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 1, "creation_date": 1539325919, "post_id": 52771295, "comment_id": 92468976, "body": "Essentially, you&#39;re asking why you can use <code>let mut other = mutable;</code>. Keep in mind that <code>mutable: &amp;str</code>, not <code>mutable: &amp;mut str</code>. You never change the slice itself. Or, speaking in C terms, you have a <code>char const * mutable</code> and a <code>char const * const immutable</code> and therefore are not able to change the contents anyway. And similar to C, <code>mutable = &quot;go away&quot;</code> only changes the slice, not its contents (C lingua: you change the pointer, not the pointed value), with the same semantics as <code>let mutable_local = mutable</code> beforehand, so the outer <code>mutable</code> stays intact."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 7, "last_activity_date": 1539352661, "last_edit_date": 1539352661, "creation_date": 1539332479, "answer_id": 52775261, "question_id": 52771295, "link": "https://stackoverflow.com/questions/52771295/why-can-i-move-a-static-str-into-multiple-threads-in-rust/52775261#52775261", "title": "Why can I &quot;move&quot; a static &amp;str into multiple threads in Rust?", "body": "<blockquote>\n  <p>I have shared the same variable mutable between multiple threads and even mutated it.</p>\n</blockquote>\n\n<p>No, you have copied a reference to the same static string into multiple threads.  The reference points to a constant static string which can't be mutated. Read-only references are <code>Copy</code>, so you can move them into multiple closures.</p>\n\n<blockquote>\n  <p>What exactly is going on behind-the-scenes with the memory here?</p>\n</blockquote>\n\n<p>A string slice is essentially a pointer to the beginning of a string in memory together with a length.  Your variables <code>mutable</code> and <code>immutable</code> only contain these two pieces of information, and only these pieces are mutable for <code>mutable</code>.  The actual strings the variables point to are immutable.  When \"moving\" the variables into the closures, they are actually copied, since <code>&amp;str</code> is <code>Copy</code>.  The only information that is copied is the pointer and the length, not the actual string data.  You end up with multiple pointers to the same read-only memory, which doesn't allow for any data races and conforms to Rust's memory safety rules.</p>\n\n<blockquote>\n  <p>Also, note that even if thread 3 runs before 4, 4 does not reflect the updated string that thread 3 sets in its println! statement.</p>\n</blockquote>\n\n<p>You only modify the copy of the pointer and the length.  In thread 3, <code>mutable</code> becomes a separate variable local to the closure, and you only modify that.</p>\n\n<blockquote>\n  <p>Finally, since I didn't pass using <code>&amp;immutable</code>, does this mean that the value is being \"moved\" into each thread rather than the actual memory address?</p>\n</blockquote>\n\n<p>The variable <code>immutable</code> has the type <code>&amp;'static str</code>, so it is already a reference; <code>&amp;immutable</code> would be a reference to a reference.</p>\n"}], "owner": {"reputation": 1691, "user_id": 6396569, "user_type": "registered", "accept_rate": 61, "profile_image": "https://lh3.googleusercontent.com/-f0efiZGjd9s/AAAAAAAAAAI/AAAAAAAAAFQ/A1O5wGFybXA/photo.jpg?sz=128", "display_name": "the_endian", "link": "https://stackoverflow.com/users/6396569/the-endian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1147, "favorite_count": 1, "accepted_answer_id": 52775261, "answer_count": 1, "score": 4, "last_activity_date": 1539353240, "creation_date": 1539310852, "last_edit_date": 1539353240, "question_id": 52771295, "link": "https://stackoverflow.com/questions/52771295/why-can-i-move-a-static-str-into-multiple-threads-in-rust", "title": "Why can I &quot;move&quot; a static &amp;str into multiple threads in Rust?", "body": "<p>I'd like to better understand the semantics behind the following Rust code:</p>\n\n<pre><code>use std::thread;\n\nfn main() {\n    let immutable = \"I am not mutable\";\n    let mut mutable = \"I am mutable\";\n\n    let handle1 = thread::spawn(move || {\n        println!(\"Thread 1 says: {}\", immutable);\n    });\n\n    let handle2 = thread::spawn(move || {\n        println!(\"Thread 2 says: {}\", immutable);\n    });\n\n    let handle3 = thread::spawn(move || {\n        println!(\"Thread 3 says: {}\", mutable);\n        mutable = \"go away\";\n    });\n\n    let handle4 = thread::spawn(move || {\n        println!(\"Thread 4 says: {}\", mutable);\n    });\n\n    handle1.join().unwrap();\n    handle2.join().unwrap();\n}\n</code></pre>\n\n<p>I do not understand why this code compiles. I have shared the variable <code>mutable</code> between multiple threads and even mutated it. What exactly is going on behind-the-scenes with the memory here? Are we making multiple pointers to the same string in static memory? Are we placing two different static strings in memory? The fact that I can have two threads reading from the same immutable item doesn't surprise me, but having two threads reading from a mutable variable does.</p>\n\n<p>Note that even if thread 3 runs before 4, 4 does not reflect the updated string that thread 3 sets in its <code>println!</code> statement. Finally, since I didn't pass using <code>&amp;immutable</code>, does this mean that the <em>value</em> is being \"moved\" into each thread rather than the actual memory address?</p>\n"}, {"tags": ["reference", "rust", "closures", "lifetime", "mutable"], "comments": [{"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1539236412, "post_id": 52752259, "comment_id": 92429452, "body": "Could this be related to <a href=\"https://stackoverflow.com/questions/52197812/returning-a-mutable-reference-that-is-behind-an-immutable-reference-passed-to-t\">this</a> in some way, as I understand that closures are basically a form of <code>struct</code> without a definite type?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1539239826, "post_id": 52752259, "comment_id": 92430825, "body": "As a workaround, you can take the reference in the outer function and return that from the closure (<a href=\"https://play.integer32.com/?gist=0042c242ba32636325f43a3260d364a5&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>), but I don&#39;t know why your original code fails\u2026"}], "answers": [{"tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 9, "last_activity_date": 1584467026, "last_edit_date": 1584467026, "creation_date": 1539251004, "answer_id": 52756973, "question_id": 52752259, "link": "https://stackoverflow.com/questions/52752259/why-can-i-not-return-a-mutable-reference-to-an-outer-variable-from-a-closure/52756973#52756973", "title": "Why can I not return a mutable reference to an outer variable from a closure?", "body": "<p>Consider this code:</p>\n\n<pre><code>fn main() {\n    let mut y: u32 = 10;\n\n    let ry = &amp;mut y;\n    let f = || ry;\n\n    f();\n}\n</code></pre>\n\n<p>It works because the compiler is able to infer <code>ry</code>'s lifetime: the reference <code>ry</code> lives in the same scope of <code>y</code>.</p>\n\n<p>Now, the equivalent version of your code:</p>\n\n<pre><code>fn main() {\n    let mut y: u32 = 10;\n\n    let f = || {\n        let ry = &amp;mut y;\n        ry\n    };\n\n    f();\n}\n</code></pre>\n\n<p>Now the compiler assigns to <code>ry</code> a lifetime associated to the scope of the closure body, not to the lifetime associated with the main body.</p>\n\n<p>Also note that the immutable reference case works:</p>\n\n<pre><code>fn main() {\n    let mut y: u32 = 10;\n\n    let f = || {\n        let ry = &amp;y;\n        ry\n    };\n\n    f();\n}\n</code></pre>\n\n<p>This is because <code>&amp;T</code> has copy semantics and <code>&amp;mut T</code> has move semantics, see  <a href=\"https://stackoverflow.com/questions/37381212/copy-move-semantics-documentation-of-t-mut-t-types-itself\">Copy/move semantics documentation of &amp;T/&amp;mut T types itself</a> for more details.</p>\n\n<h2>The missing piece</h2>\n\n<p>The compiler throws an error related to a lifetime:</p>\n\n<pre><code>cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n</code></pre>\n\n<p>but as pointed out by Sven Marnach there is also a problem related to the error </p>\n\n<pre><code>cannot move out of borrowed content\n</code></pre>\n\n<p>But why doesn't the compiler throw this error?</p>\n\n<p>The short answer is that the compiler first executes type checking and then borrow checking.</p>\n\n<h3>the long answer</h3>\n\n<p>A closure is made up of two pieces:</p>\n\n<ul>\n<li><p>the <strong>state</strong> of the closure: a struct containing all the variables captured by the closure</p></li>\n<li><p>the <strong>logic</strong> of the closure: an implementation of the <code>FnOnce</code>, <code>FnMut</code> or <code>Fn</code> trait</p></li>\n</ul>\n\n<p>In this case the state of the closure is the mutable reference <code>y</code> and the logic is the body of the closure <code>{ &amp;mut y }</code> that simply returns a mutable reference.</p>\n\n<p>When a reference is encountered, Rust controls two aspects:</p>\n\n<ol>\n<li><p>the <strong>state</strong>: if the reference points to a valid memory slice, (i.e. the read-only part of lifetime validity);</p></li>\n<li><p>the <strong>logic</strong>: if the memory slice is aliased, in other words if it is pointed from more than one reference simultaneously;</p></li>\n</ol>\n\n<p>Note the move out from borrowed content is forbidden for avoiding memory aliasing.</p>\n\n<p>The Rust compiler executes its job through <a href=\"https://rust-lang-nursery.github.io/rustc-guide/high-level-overview.html#the-main-stages-of-compilation\" rel=\"nofollow noreferrer\">several stages</a>, here's a simplified workflow:</p>\n\n<pre><code>.rs input -&gt; AST -&gt; HIR -&gt; HIR postprocessing -&gt; MIR -&gt; HIR postprocessing -&gt; LLVM IR -&gt; binary\n</code></pre>\n\n<p>The compiler reports a lifetime problem because it first executes the type checking phase in <code>HIR postprocessing</code> (which comprises lifetime analysis) and after that, if successful, executes borrow checking in the <code>MIR postprocessing</code> phase.</p>\n"}, {"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1539252990, "post_id": 52757380, "comment_id": 92438327, "body": "<a href=\"https://play.rust-lang.org/?gist=bd760f703f48e6e6b0c0094c8694a9a8&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\"><code>Fn</code> closures <i>can</i> return a reference to a captured variable.</a>  According to your argument, this should be impossible, yet it works."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539253142, "post_id": 52757380, "comment_id": 92438441, "body": "@SvenMarnach In your example, <code>y</code> is captured by reference. So in the closure&#39;s <code>self</code> a <code>&amp;i32</code> is stored. So the closure isn&#39;t returning a reference to self, but captures the environment by reference and returns that. That&#39;s what I meant by the last paragraph in the closure part. But I know, it&#39;s complicated :/ Try ` move || { &amp;y }` instead and you will get an error. I might try to improve my explanation."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539253480, "post_id": 52757380, "comment_id": 92438651, "body": "In the original example, <code>y</code> is also captured by (mutable) reference, and the closure isn&#39;t returning a reference to <code>self</code>.  Just remove all <code>mut</code>s from your argument, and you get an argument that the case I mentioned should be impossible."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1539253615, "post_id": 52757380, "comment_id": 92438741, "body": "I think the actual reason is that a mutable reference isn&#39;t <code>Copy</code>, while an immutable reference is, and we can&#39;t move the mutable reference out of the borrowed context.  That&#39;s not what the error message says, though."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1539253736, "post_id": 52757380, "comment_id": 92438811, "body": "@SvenMarnach Correct, if we use immutable references, it works. The problem only arises due to the interplay of the both things I mention. The nested reference thing (which only applies to mutable references) basically forced the closure to return something with the lifetime of <code>self</code>, but since that&#39;s not possible, the error occurs."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1539258020, "post_id": 52757380, "comment_id": 92441333, "body": "Even if the <code>FnMut</code> trait was defined to return <code>&amp;&#39;s mut Output</code>, you still wouldn&#39;t be able to move the mutable reference stored in the closure out of the borrowed context.  The lifetimes just don&#39;t seem to be relevant here, even if the error message says so.  (For what it&#39;s worth, the error message has already been fixed in the NLL version of the borrow checker.)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1539258794, "post_id": 52757380, "comment_id": 92441860, "body": "<i>In theory, the signature of <code>call_mut</code> would allow to return references to <code>self</code></i>: I don&#39;t think so, <code>call_mut</code> is <code>fn call_mut(&amp;mut self, args: Args) -&gt; Self::Output</code>. In order to return a self-reference, <code>Output</code> would have to have a lifetime parameter. (Which isn&#39;t possible without GATs.) I think this explains why it&#39;s not possible to return a reference to <code>self</code> without needing to go into the relationship between <code>FnMut</code> and <code>FnOnce</code> (although you raise a good point about how <code>FnMut</code> probably can&#39;t be &quot;fixed&quot; once GATs arrive)."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1539258898, "post_id": 52757380, "comment_id": 92441930, "body": "@trentcl Oh yep, right. That formulation is a bit misleading. I meant: since <code>call_mut</code> receives <code>&amp;mut self</code>, we could in theory use the <code>self</code> lifetime to return something. But yeah, the return type or associated type would need to change, true."}, {"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1539605271, "post_id": 52757380, "comment_id": 92550024, "body": "All three answers are great and together they summarize everything.! Sven Marnach&#39;s answer talks about moving-out-of-borrowed-context issue  , attdona gave a very good insight on how compiler treats the code (lifetime followed by borrowck analysis).  Lukas Kalbertodt&#39;s gave a a very good description on the interplay between lifetime and borrowck."}, {"owner": {"reputation": 1012, "user_id": 6255770, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/9KT6y.jpg?s=128&g=1", "display_name": "Quoc-Hao Tran", "link": "https://stackoverflow.com/users/6255770/quoc-hao-tran"}, "edited": false, "score": 0, "creation_date": 1609890545, "post_id": 52757380, "comment_id": 115962404, "body": "@LukasKalbertodt: I know this thread was a while back but I&#39;m having the same problem here and don&#39;t quite understand the <b>Nested mutable references</b> part. Can you explain it a bit more in details please ? Why it doesn&#39;t work for mutable ref, what is the soundness that you were talking about ?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 1012, "user_id": 6255770, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/9KT6y.jpg?s=128&g=1", "display_name": "Quoc-Hao Tran", "link": "https://stackoverflow.com/users/6255770/quoc-hao-tran"}, "edited": false, "score": 0, "creation_date": 1609956446, "post_id": 52757380, "comment_id": 115985048, "body": "@Quoc-HaoTran For example, if that were to work, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b826ee6a7be147d08dd676d47a91f61d\" rel=\"nofollow noreferrer\">this</a> would compile. And as you can see, that would be UB. Another way to think about this is that <code>&amp;mut T</code> is <i>not</i> <code>Copy</code> nor <code>Clone</code>. If the <code>foo</code> function in my answer would compile, then we could circumvent this restriction. I hope this helps a bit."}, {"owner": {"reputation": 1012, "user_id": 6255770, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/9KT6y.jpg?s=128&g=1", "display_name": "Quoc-Hao Tran", "link": "https://stackoverflow.com/users/6255770/quoc-hao-tran"}, "edited": false, "score": 0, "creation_date": 1610033700, "post_id": 52757380, "comment_id": 116010146, "body": "Ah I see ! Thanks for the example !"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 10, "last_activity_date": 1577446477, "last_edit_date": 1577446477, "creation_date": 1539252264, "answer_id": 52757380, "question_id": 52752259, "link": "https://stackoverflow.com/questions/52752259/why-can-i-not-return-a-mutable-reference-to-an-outer-variable-from-a-closure/52757380#52757380", "title": "Why can I not return a mutable reference to an outer variable from a closure?", "body": "<p>There are two main things at play here:</p>\n\n<ol>\n<li>Closures cannot return references to their environment </li>\n<li>A mutable reference to a mutable reference can only use the lifetime of the outer reference (unlike with immutable references)</li>\n</ol>\n\n<hr>\n\n<h3>Closures returning references to environment</h3>\n\n<p><strong>Closures cannot return any references with the lifetime of <code>self</code></strong> (the closure object). Why is that? Every closure can be called as <code>FnOnce</code>, since that's the super-trait of <code>FnMut</code> which in turn is the super-trait of <code>Fn</code>. <code>FnOnce</code> has this method:</p>\n\n<pre><code>fn call_once(self, args: Args) -&gt; Self::Output;\n</code></pre>\n\n<p>Note that <code>self</code> is passed by value. So since <code>self</code> is consumed (and now lives within the <code>call_once</code> function`) we cannot return references to it -- that would be equivalent to returning references to a local function variable.</p>\n\n<p>In theory, the <code>call_mut</code> would allow to return references to <code>self</code> (since it receives <code>&amp;mut self</code>). But since <code>call_once</code>, <code>call_mut</code> and <code>call</code> are all implemented with the same body, closures in general cannot return references to <code>self</code> (that is: to their captured environment).</p>\n\n<p>Just to be sure: closures can capture references and return those! And they can capture <em>by</em> reference and return that reference. Those things are something different. It's just about what is stored in the closure type. If there is a reference stored within the type, it can be returned. But we can't return references to anything stored within the closure type.</p>\n\n<h3>Nested mutable references</h3>\n\n<p>Consider this function (note that the argument type implies <code>'inner: 'outer</code>; <code>'outer</code> being shorter than <code>'inner</code>):</p>\n\n<pre><code>fn foo&lt;'outer, 'inner&gt;(x: &amp;'outer mut &amp;'inner mut i32) -&gt; &amp;'inner mut i32 {\n    *x\n}\n</code></pre>\n\n<p>This won't compile. On the first glance, it seems like it should compile, since we're just peeling one layer of references. And it does work for immutable references! But mutable references are different here to preserve soundness.</p>\n\n<p>It's OK to return <code>&amp;'outer mut i32</code>, though. But it's impossible to get a direct reference with the longer (inner) lifetime.</p>\n\n<h3>Manually writing the closure</h3>\n\n<p>Let's try to hand code the closure you were trying to write:</p>\n\n<pre><code>let mut y = 10;\n\nstruct Foo&lt;'a&gt;(&amp;'a mut i32);\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    fn call&lt;'s&gt;(&amp;'s mut self) -&gt; &amp;'??? mut i32 { self.0 }\n}\n\nlet mut f = Foo(&amp;mut y);\nf.call();\n</code></pre>\n\n<p>What lifetime should the returned reference have?</p>\n\n<ul>\n<li>It can't be <code>'a</code>, because we basically have a <code>&amp;'s mut &amp;'a mut i32</code>. And as discussed above, in such a nested mutable reference situation, we can't extract the longer lifetime!</li>\n<li>But it also can't be <code>'s</code> since that would mean the closure returns something with the lifetime of <code>'self</code> (\"borrowed from <code>self</code>\"). And as discussed above, closures can't do that.</li>\n</ul>\n\n<p>So the compiler can't generate the closure impls for us. </p>\n"}, {"comments": [{"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1539343214, "post_id": 52759595, "comment_id": 92478336, "body": "Moving-out-of-borrowed-context is more easy to understand than lifetimes-conflict. I hope both these are related to each other and that the lifetimes-conflict stems out from  moving-out-of-borrowed-context issue, which I believe  is the core issue."}, {"owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "edited": false, "score": 0, "creation_date": 1539347715, "post_id": 52759595, "comment_id": 92480854, "body": "They are not related. Lifetime relates to memory region validity (a pointer must point to a valid memory slot) whereas  moving-out-of-borrowed context relates to memory aliasing (two ipothetical &quot;writable&quot; pointers pointing to the same memory slot: you cannot have two owners in rust). I don&#39;t know which of them are more easy to understand, both of them are core concepts to understand and both came into play here."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 11, "last_activity_date": 1539345582, "last_edit_date": 1539345582, "creation_date": 1539259307, "answer_id": 52759595, "question_id": 52752259, "link": "https://stackoverflow.com/questions/52752259/why-can-i-not-return-a-mutable-reference-to-an-outer-variable-from-a-closure/52759595#52759595", "title": "Why can I not return a mutable reference to an outer variable from a closure?", "body": "<h3>Short version</h3>\n\n<p>The closure <code>f</code> stores a mutable reference to <code>y</code>.  If it were allowed to return a copy of this reference, you would end up with two simultaneous mutable references to <code>y</code> (one in the closure, one returned), which is forbidden by Rust's memory safety rules.</p>\n\n<h3>Long version</h3>\n\n<p>The closure can be thought of as</p>\n\n<pre><code>struct __Closure&lt;'a&gt; {\n    y: &amp;'a mut i32,\n}\n</code></pre>\n\n<p>Since it contains a mutable reference, the closure is called as <code>FnMut</code>, essentially with the definition</p>\n\n<pre><code>fn call_mut(&amp;mut self, args: ()) -&gt; &amp;'a mut i32 { self.y }\n</code></pre>\n\n<p>Since we only have a mutable reference to the closure itself, we can't move the field <code>y</code> out of the borrowed context, neither are we able to copy it, since mutable references aren't <code>Copy</code>.</p>\n\n<p>We can trick the compiler into accepting the code by forcing the closure to be called as <code>FnOnce</code> instead of <code>FnMut</code>.  This code works fine:</p>\n\n<pre><code>fn main() {\n    let x = String::new();\n    let mut y: u32 = 10;\n    let f = || {\n        drop(x);\n        &amp;mut y\n    };\n    f();\n}\n</code></pre>\n\n<p>Since we are consuming <code>x</code> inside the scope of the closure and <code>x</code> is not <code>Copy</code>, the compiler detects that the closure can only be <code>FnOnce</code>.  Calling an <code>FnOnce</code> closure passes the closure itself by value, so we are allowed to move the mutable reference out.</p>\n\n<p>Another more explicit way to force the closure to be <code>FnOnce</code> is to pass it to a generic function with a trait bound.  This code works fine as well:</p>\n\n<pre><code>fn make_fn_once&lt;'a, T, F: FnOnce() -&gt; T&gt;(f: F) -&gt; F {\n    f\n}\n\nfn main() {\n    let mut y: u32 = 10;\n    let f = make_fn_once(|| {\n        &amp;mut y\n    });\n    f();\n}\n</code></pre>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1954, "favorite_count": 2, "accepted_answer_id": 52759595, "answer_count": 3, "score": 11, "last_activity_date": 1584467026, "creation_date": 1539232232, "last_edit_date": 1539261958, "question_id": 52752259, "link": "https://stackoverflow.com/questions/52752259/why-can-i-not-return-a-mutable-reference-to-an-outer-variable-from-a-closure", "title": "Why can I not return a mutable reference to an outer variable from a closure?", "body": "<p>I was playing around with Rust closures when I hit this interesting scenario:</p>\n\n<pre><code>fn main() {\n    let mut y = 10;\n\n    let f = || &amp;mut y;\n\n    f();\n}\n</code></pre>\n\n<p>This gives an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n --&gt; src/main.rs:4:16\n  |\n4 |     let f = || &amp;mut y;\n  |                ^^^^^^\n  |\nnote: first, the lifetime cannot outlive the lifetime  as defined on the body at 4:13...\n --&gt; src/main.rs:4:13\n  |\n4 |     let f = || &amp;mut y;\n  |             ^^^^^^^^^\nnote: ...so that closure can access `y`\n --&gt; src/main.rs:4:16\n  |\n4 |     let f = || &amp;mut y;\n  |                ^^^^^^\nnote: but, the lifetime must be valid for the call at 6:5...\n --&gt; src/main.rs:6:5\n  |\n6 |     f();\n  |     ^^^\nnote: ...so type `&amp;mut i32` of expression is valid during the expression\n --&gt; src/main.rs:6:5\n  |\n6 |     f();\n  |     ^^^\n</code></pre>\n\n<p>Even though the compiler is trying to explain it line by line, I still haven't understood what exactly it is complaining about.</p>\n\n<p>Is it trying to say that the mutable reference cannot outlive the enclosing closure? </p>\n\n<p>The compiler does not complain if I remove the call <code>f()</code>.</p>\n"}, {"tags": ["variables", "rust", "static", "constants"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539254195, "post_id": 52751597, "comment_id": 92439048, "body": "&quot;statics declare global variables. These represent a memory address.&quot;, to be clear, this is totally wrong."}, {"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539254458, "post_id": 52751597, "comment_id": 92439206, "body": "@Stargateur Check <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0246-const-vs-static.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/&hellip;</a>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539255100, "post_id": 52751597, "comment_id": 92439588, "body": "That a very bad choice of word."}, {"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539255641, "post_id": 52751597, "comment_id": 92439912, "body": "@Stargateur Uh, how do you express that?  ^ ^"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1539256353, "post_id": 52751597, "comment_id": 92440332, "body": "These represent a value like const, <a href=\"https://play.rust-lang.org/?gist=0ff8d6a83ae3c458a226606e95bec96a&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>."}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 8, "last_activity_date": 1539259643, "last_edit_date": 1539259643, "creation_date": 1539239798, "answer_id": 52753737, "question_id": 52751597, "link": "https://stackoverflow.com/questions/52751597/what-is-the-difference-between-a-constant-and-a-static-variable-and-which-should/52753737#52753737", "title": "What is the difference between a constant and a static variable and which should I choose?", "body": "<p>There's not much practical difference if your variable isn't intended to change.</p>\n\n<p>Constants are inlined at compilation, which means they're copied to every location they're used, and thus are usually more efficient, while statics refer to a unique location in memory and are more like global variables.</p>\n\n<p>Constants are... constant while statics, while still global, can be mutable.</p>\n"}, {"comments": [{"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "edited": false, "score": 0, "creation_date": 1539253477, "post_id": 52753798, "comment_id": 92438648, "body": "Is <a href=\"https://github.com/kennytm/qrcode-rust/blob/master/src/ec.rs\" rel=\"nofollow noreferrer\">there</a> any advantage to use <code>static</code>?"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "edited": false, "score": 0, "creation_date": 1539254479, "post_id": 52753798, "comment_id": 92439219, "body": "@AurevoirXavier <i>stick to a <code>const</code> whenever possible.</i>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 3, "creation_date": 1539259967, "post_id": 52753798, "comment_id": 92442590, "body": "@TimDiekmann while I agree with the spirit of your advice, I think it&#39;s too high-level. There are cases where a <code>const</code> would <i>work</i> but give terrible performance compared to a <code>static</code>, such as <a href=\"https://github.com/kennytm/qrcode-rust/blob/d10dad26284fc938c470236b7221460e1a5f99e9/src/ec.rs#L238-L273\" rel=\"nofollow noreferrer\">the code that OP links to</a>."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539260763, "post_id": 52753798, "comment_id": 92443075, "body": "@Shepmaster It&#39;s a quote from the post itself"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1539261890, "post_id": 52753798, "comment_id": 92443823, "body": "@TimDiekmann sure, but you quoted it in the comments and thus seem to agree with the veracity of the statement and agree with the guidance. hellow will see all comments on their answer; I have to mention you directly."}, {"owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1539265606, "post_id": 52753798, "comment_id": 92446261, "body": "@Shepmaster Thanks to you point out that. Should I use <code>static</code> while maintaining some large tables such as that?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "edited": false, "score": 0, "creation_date": 1539265751, "post_id": 52753798, "comment_id": 92446372, "body": "@AurevoirXavier there&#39;s no blanket answer for that question. You need to use profiling to see if the change is worth it, assuming both types work for a given situation."}, {"owner": {"reputation": 459, "user_id": 2510591, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a4b15506108e1cf337adccce77602d51?s=128&d=identicon&r=PG", "display_name": "joseluisq", "link": "https://stackoverflow.com/users/2510591/joseluisq"}, "edited": false, "score": 0, "creation_date": 1587904354, "post_id": 52753798, "comment_id": 108686854, "body": "I think following link (even &quot;outdated&quot;) can be useful -&gt; <a href=\"https://doc.rust-lang.org/1.29.2/book/first-edition/const-and-static.html#which-construct-should-i-use\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.29.2/book/first-edition/&hellip;</a>"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 22, "last_activity_date": 1615408651, "last_edit_date": 1615408651, "creation_date": 1539240038, "answer_id": 52753798, "question_id": 52751597, "link": "https://stackoverflow.com/questions/52751597/what-is-the-difference-between-a-constant-and-a-static-variable-and-which-should/52753798#52753798", "title": "What is the difference between a constant and a static variable and which should I choose?", "body": "<h2>Mutability</h2>\n<p>A <code>const</code>ant in Rust is immutable. You neither can reassign nor modify it:</p>\n<pre><code>struct Foo(u32);\n\nconst FOO: Foo = Foo(5);\n\nfn main() {\n    FOO = Foo(1); //illegal\n    FOO.0 = 2; //illegal\n}\n</code></pre>\n<p>A <code>static</code> variable <em>can</em> be mutable and therefore can either be modified or reassigned. Note that writing/modifying a global <code>static</code> variable is unsafe and therefore needs an <code>unsafe</code> block:</p>\n<pre><code>struct Foo(u32);\nstatic FOO: Foo = Foo(5);\nstatic mut FOO_MUT: Foo = Foo(3);\n\nfn main() {\n    unsafe {\n        FOO = Foo(1); //illegal\n        FOO.0 = 2; //illegal\n\n        FOO_MUT = Foo(1);\n        FOO_MUT.0 = 2;\n    }\n}\n</code></pre>\n<h2>Occurrences</h2>\n<p>When you compile a binary, all <code>const</code> &quot;occurrences&quot; (where you use that <code>const</code> in your source code) will be replaced by that value directly.</p>\n<p><code>static</code>s will have a dedicated section in your binary where they will be placed (the <em>BSS section</em>, see <a href=\"https://stackoverflow.com/questions/93039/where-are-static-variables-stored-in-c-and-c\">Where are static variables stored in C and C++?</a> for further information).</p>\n<hr />\n<p>All in all, stick to a <code>const</code> whenever possible. When not possible, because you need to initialize a variable later in the program of with non-<code>const</code> methods, use <a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\"><code>lazy_static!</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1562177281, "post_id": 56875258, "comment_id": 100300091, "body": "While this is <i>one</i> way of using <code>static</code>, I don&#39;t think I&#39;d call it the &quot;main purpose&quot;. Note that the Rust sense of <code>static</code> is broader than the use of <code>static</code> inside C functions, since it is also used to create global variables outside of functions (C doesn&#39;t use <code>static</code> for this purpose, instead making it do double-duty as a linkage modifier)."}], "tags": [], "owner": {"reputation": 1225, "user_id": 603749, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/11377bf3d7fcf165c2f8ee2b82d59d65?s=128&d=identicon&r=PG", "display_name": "user603749", "link": "https://stackoverflow.com/users/603749/user603749"}, "is_accepted": false, "score": -4, "last_activity_date": 1562174699, "creation_date": 1562174699, "answer_id": 56875258, "question_id": 52751597, "link": "https://stackoverflow.com/questions/52751597/what-is-the-difference-between-a-constant-and-a-static-variable-and-which-should/56875258#56875258", "title": "What is the difference between a constant and a static variable and which should I choose?", "body": "<p>The main purpose of <code>static</code> is to allow functions to control an internal value that is remembered across calls, but not be accessible by the main application code. It is similar to Class variables as opposed to Instance variables in other languages. Also C and PHP and many other languages have this concept.</p>\n\n<p>Example: you want to track how many times a function is called and have a way of resetting the internal counter:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn counter(reset: bool) -&gt; i32 {\n    static mut Count: i32 = 0;\n\n    unsafe {\n        if reset {\n            Count = 0;\n        }    \n        Count += 1;\n        return Count;\n    }\n}\n\nprintln!(\"{}\",counter(true));\nprintln!(\"{}\",counter(false));\nprintln!(\"{}\",counter(false));\n//println!(\"{}\", Count); // Illegal\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 18897, "user_id": 8059459, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9f0fc0fd607fc44a4597cacb7f034ba6?s=128&d=identicon&r=PG&f=1", "display_name": "Willem van der Veen", "link": "https://stackoverflow.com/users/8059459/willem-van-der-veen"}, "is_accepted": false, "score": 2, "last_activity_date": 1610935174, "last_edit_date": 1610935174, "creation_date": 1609147749, "answer_id": 65475478, "question_id": 52751597, "link": "https://stackoverflow.com/questions/52751597/what-is-the-difference-between-a-constant-and-a-static-variable-and-which-should/65475478#65475478", "title": "What is the difference between a constant and a static variable and which should I choose?", "body": "<h2>Rust <code>static</code> vs <code>const</code></h2>\n<p><strong><code>const</code>:</strong></p>\n<ul>\n<li>Have no fixed address in memory</li>\n<li>They\u2019re inlined to each place which uses them, this means they are put directly into the binary on the places which use them.</li>\n<li>Usually faster runtime but bigger executable file because it doesn't have to look up an address like <code>static</code></li>\n</ul>\n<p><strong><code>static</code>:</strong></p>\n<ul>\n<li>Have a fixed address in memory</li>\n<li>Their value is loaded from this fixed address each place which uses them.</li>\n<li>Usually slower runtime because we need to perform the extra instruction of loading the data from the fixed address. However this could result in a smaller executable file (only when it is used frequently) because it doesn't have to have multiple copies of the value baked into the executable.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<pre><code>    static CDF: i32 = 100;\n    const ABC: i32 = 50;\n\n    fn main() {\n        println!(&quot;{}&quot;, CDF); // compiler will put in a load instruction here for the static address\n        println!(&quot;{}&quot;, ABC); // compiler will put the value 50 here directly\n    \n        // statics can be mutable\n        static mut HI: &amp;str = &quot;hi&quot;;\n    \n        // however using mut static is unsafe\n        unsafe {\n            HI = &quot;HITHERE&quot;;\n        }\n    \n        unsafe {\n            println!(&quot;{}&quot;, HI);\n        }\n    }\n</code></pre>\n"}], "owner": {"reputation": 986, "user_id": 6819040, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/IJDZr.jpg?s=128&g=1", "display_name": "AurevoirXavier", "link": "https://stackoverflow.com/users/6819040/aurevoirxavier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6288, "favorite_count": 1, "accepted_answer_id": 52753798, "answer_count": 4, "score": 14, "last_activity_date": 1615408651, "creation_date": 1539227502, "last_edit_date": 1615408546, "question_id": 52751597, "link": "https://stackoverflow.com/questions/52751597/what-is-the-difference-between-a-constant-and-a-static-variable-and-which-should", "title": "What is the difference between a constant and a static variable and which should I choose?", "body": "<p>I know this from <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0246-const-vs-static.md\" rel=\"noreferrer\">RFC 246</a>:</p>\n\n<blockquote>\n  <ul>\n  <li><strong>constants</strong> declare <em>constant values</em>. These represent a value, not a memory address. This is the most common thing one would reach for and would replace <code>static</code> as we know it today in almost all  cases.</li>\n  <li><strong>statics</strong> declare <em>global variables</em>. These represent a memory   address.  They would be rarely used: the primary use cases are global locks, global atomic counters, and interfacing with legacy C  libraries.</li>\n  </ul>\n</blockquote>\n\n<p>I don't know what is actually different between the two when I try to maintain a table.</p>\n\n<p>Which one should I choose?</p>\n"}]