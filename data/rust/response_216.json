[{"tags": ["rust", "mapping", "match"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1551315484, "post_id": 54914952, "comment_id": 96599688, "body": "By the way, you don&#39;t need <code>break;</code> statements in rust&#39;s match statements. Fixed that for you."}, {"owner": {"reputation": 1017, "user_id": 2691759, "user_type": "registered", "accept_rate": 14, "profile_image": "https://i.stack.imgur.com/iAkAI.png?s=128&g=1", "display_name": "pigeonhands", "link": "https://stackoverflow.com/users/2691759/pigeonhands"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1551329869, "post_id": 54914952, "comment_id": 96602878, "body": "@OptimisticPeach it was because this code snippit is inside a loop  <a href=\"https://github.com/BahNahNah/kea/blob/master/src/repo/upgrade.rs#L30\" rel=\"nofollow noreferrer\">github.com/BahNahNah/kea/blob/master/src/repo/upgrade.rs#L30</a>"}], "answers": [{"tags": [], "owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "is_accepted": false, "score": 3, "last_activity_date": 1551307137, "creation_date": 1551307137, "answer_id": 54915646, "question_id": 54914952, "link": "https://stackoverflow.com/questions/54914952/match-either-of-resulterr-or-an-optional-field-inside-of-resultok-at-the-sam/54915646#54915646", "title": "Match either of Result::Err or an optional field inside of Result::Ok at the same time", "body": "<p>You can transform a response into a result like this:</p>\n\n<pre><code>match resp.error {\n    Some(e) =&gt; Err(e),\n    None =&gt; Ok(resp.results),\n}\n</code></pre>\n\n<p>You can flatten a nested result with <code>and_then</code>. Put together, it gives this:</p>\n\n<pre><code>ret.and_then(|resp| match resp.error {\n    Some(e) =&gt; Err(e),\n    None =&gt; Ok(resp.results),\n})\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 2, "last_activity_date": 1551318499, "last_edit_date": 1551318499, "creation_date": 1551314738, "answer_id": 54916708, "question_id": 54914952, "link": "https://stackoverflow.com/questions/54914952/match-either-of-resulterr-or-an-optional-field-inside-of-resultok-at-the-sam/54916708#54916708", "title": "Match either of Result::Err or an optional field inside of Result::Ok at the same time", "body": "<p>If the error field is public, you can do something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match resp {\n    Err(s) | Ok(Response { error: Some(s), .. }) =&gt; println!(\"Error: {}\", s),\n    Ok(Response { error: None, results }) =&gt; println!(\"Responses: {:?}\", results)\n}\n</code></pre>\n\n<p>This shows how powerful Rust's match statements can be.   </p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=16cfd66b0083aa58213e3496c1cf034b\" rel=\"nofollow noreferrer\">Playground of a simplified example</a></p>\n"}], "owner": {"reputation": 1017, "user_id": 2691759, "user_type": "registered", "accept_rate": 14, "profile_image": "https://i.stack.imgur.com/iAkAI.png?s=128&g=1", "display_name": "pigeonhands", "link": "https://stackoverflow.com/users/2691759/pigeonhands"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1551318499, "creation_date": 1551303793, "last_edit_date": 1551318452, "question_id": 54914952, "link": "https://stackoverflow.com/questions/54914952/match-either-of-resulterr-or-an-optional-field-inside-of-resultok-at-the-sam", "title": "Match either of Result::Err or an optional field inside of Result::Ok at the same time", "body": "<p>I have a struct that is an API endpoint, so I can't change its structure</p>\n\n<pre><code>struct Response {\n    error: Option&lt;String&gt;,\n    results: Vec&lt;String&gt;,\n}\n</code></pre>\n\n<p>If <code>error</code> is <code>Some</code>, that means it failed server side.</p>\n\n<p>I have a function that returns the struct:</p>\n\n<pre><code>fn get_results() -&gt; Result&lt;Response, String&gt; {\n    unimplemented!()\n}\n</code></pre>\n\n<p>Is it possible to match the <code>get_results</code> <code>Result</code> error, and the optional <code>Response.error</code> in the same <code>match</code> branch?</p>\n\n<p>This was my attempt:</p>\n\n<pre><code>fn example() {\n    let ret = get_results();\n    match ret.map(|resp| resp.error.map_or_else(|| Ok(resp.results), |e| Err(e))) {\n        Err(e) =&gt; {\n            println!(\"Error: {}\", &amp;e);\n        }\n        Ok(results) =&gt; {\n            //Handle results\n        }\n    }\n}\n</code></pre>\n\n<p>But it fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `resp`\n  --&gt; src/lib.rs:12:49\n   |\n12 |     match ret.map(|resp| resp.error.map_or_else(|| Ok(resp.results), |e| Err(e))) {\n   |                          ----------             ^^    ---- use occurs due to use in closure\n   |                          |                      |\n   |                          |                      value used here after move\n   |                          value moved here\n   |\n   = note: move occurs because `resp.error` has type `std::option::Option&lt;std::string::String&gt;`, which does not implement the `Copy` trait\n</code></pre>\n"}, {"tags": ["rust", "smart-pointers", "unsafe"], "answers": [{"comments": [{"owner": {"reputation": 477, "user_id": 3239194, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68cb18e8d1c60c5d43b2dadc7d98b49d?s=128&d=identicon&r=PG&f=1", "display_name": "A-B", "link": "https://stackoverflow.com/users/3239194/a-b"}, "edited": false, "score": 0, "creation_date": 1551304301, "post_id": 54914911, "comment_id": 96596442, "body": "Why handle1 is not giving an error when the program is using a memory location which has been deallocated using a destructor?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 477, "user_id": 3239194, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68cb18e8d1c60c5d43b2dadc7d98b49d?s=128&d=identicon&r=PG&f=1", "display_name": "A-B", "link": "https://stackoverflow.com/users/3239194/a-b"}, "edited": false, "score": 5, "creation_date": 1551304466, "post_id": 54914911, "comment_id": 96596510, "body": "@Ankit Because <i>you deliberately used <code>unsafe</code> to circumvent the safety features that would issue an error</i>. There&#39;s a reason <code>Box::from_raw</code> is an <code>unsafe fn</code>; its safety can&#39;t be guaranteed at compile time, so it falls on <i>you</i>, the programmer, to guarantee you&#39;re using it correctly. You&#39;re not."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 477, "user_id": 3239194, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68cb18e8d1c60c5d43b2dadc7d98b49d?s=128&d=identicon&r=PG&f=1", "display_name": "A-B", "link": "https://stackoverflow.com/users/3239194/a-b"}, "edited": false, "score": 2, "creation_date": 1551304483, "post_id": 54914911, "comment_id": 96596515, "body": "@Ankit That&#39;s not how it works. See also <a href=\"https://stackoverflow.com/q/36682186/155423\">Double Free - crash or no crash</a>."}, {"owner": {"reputation": 477, "user_id": 3239194, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68cb18e8d1c60c5d43b2dadc7d98b49d?s=128&d=identicon&r=PG&f=1", "display_name": "A-B", "link": "https://stackoverflow.com/users/3239194/a-b"}, "edited": false, "score": 0, "creation_date": 1551305186, "post_id": 54914911, "comment_id": 96596780, "body": "Why are there two <code>drop</code> at the end? One is for <code>abc</code> in <code>handle1</code> and one for <code>obj</code>. Isn&#39;t both <code>abc</code> and obj are pointing to the same thing?  And will it work if use <code>let const_obj: *const ABC = &amp;obj;</code> after <code>handle(1)</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 477, "user_id": 3239194, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68cb18e8d1c60c5d43b2dadc7d98b49d?s=128&d=identicon&r=PG&f=1", "display_name": "A-B", "link": "https://stackoverflow.com/users/3239194/a-b"}, "edited": false, "score": 2, "creation_date": 1551305395, "post_id": 54914911, "comment_id": 96596863, "body": "@Ankit you are dropping the same value 3 times. Once each when the result of <code>from_raw</code> goes out of scope and once when the variable <code>obj</code> goes out of scope. This is another example of introduced undefined behavior."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 477, "user_id": 3239194, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68cb18e8d1c60c5d43b2dadc7d98b49d?s=128&d=identicon&r=PG&f=1", "display_name": "A-B", "link": "https://stackoverflow.com/users/3239194/a-b"}, "edited": false, "score": 2, "creation_date": 1551307332, "post_id": 54914911, "comment_id": 96597569, "body": "@Ankit You are not at any point putting the <code>ABC</code> into a <code>Box&lt;ABC&gt;</code>, so it can&#39;t be correct to call <code>Box::from_raw</code>. You should only call <code>Box::from_raw</code> when you want the object to be destructed; otherwise, you can just use the raw pointer or convert it to a reference. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=03ab4fb9e633abfdf2b9e59c32539bfc\" rel=\"nofollow noreferrer\">Here&#39;s a correct, but unidiomatic example</a>; one idiomatic way would be to use references, or perhaps <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=92c444dacf6a4e407113be3ff542246d\" rel=\"nofollow noreferrer\">leak it</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1551305049, "last_edit_date": 1551305049, "creation_date": 1551303600, "answer_id": 54914911, "question_id": 54914855, "link": "https://stackoverflow.com/questions/54914855/why-is-the-destructor-not-called-for-boxfrom-raw/54914911#54914911", "title": "Why is the destructor not called for Box::from_raw()?", "body": "<p>TL;DR you are doing it wrong.</p>\n\n<hr>\n\n<blockquote>\n  <p>converting the raw pointer to a reference</p>\n</blockquote>\n\n<p>No, you are converting it into a <code>Box</code>, not a reference.</p>\n\n<blockquote>\n  <p>the program is working fine</p>\n</blockquote>\n\n<p>It is not. You are merely being \"lucky\" that memory unsafety and undefined behavior isn't triggering a crash. This is likely because your type has no actual data.</p>\n\n<blockquote>\n  <p>to reference, the destructor should be called automatically </p>\n</blockquote>\n\n<p>No, when <em>references</em> go out of scope, the destructor is not executed.</p>\n\n<blockquote>\n  <p>Why is the destructor is not called</p>\n</blockquote>\n\n<p>It <strong>is</strong>, which is one of multiple reasons your code is completely and totally broken and unsafe.</p>\n\n<p>Add code to be run during destruction:</p>\n\n<pre><code>impl Drop for ABC {\n    fn drop(&amp;mut self) {\n        println!(\"drop\")\n    }\n}\n</code></pre>\n\n<p>And you will see it is called 3 times:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Inside handle 1\ndrop\nInside handle 2\ndrop\ndrop\n</code></pre>\n\n<blockquote>\n  <p>I am able to access the reference to ABC</p>\n</blockquote>\n\n<p>Yes, which is unsafe. You are breaking the rules that you are supposed to be upholding when writing <code>unsafe</code> code. You've taken a raw pointer, done something to make it invalid, and are then accessing the original, now invalid variable.</p>\n\n<p>The documentation <strong>also</strong> states:</p>\n\n<blockquote>\n  <p>the only valid pointer to pass to this function is the one taken from another <code>Box</code> via the <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.into_raw\" rel=\"nofollow noreferrer\"><code>Box::into_raw</code></a> function.</p>\n</blockquote>\n\n<p>You are ignoring this aspect as well.</p>\n"}], "owner": {"reputation": 477, "user_id": 3239194, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68cb18e8d1c60c5d43b2dadc7d98b49d?s=128&d=identicon&r=PG&f=1", "display_name": "A-B", "link": "https://stackoverflow.com/users/3239194/a-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 370, "favorite_count": 0, "accepted_answer_id": 54914911, "answer_count": 1, "score": 1, "last_activity_date": 1551644294, "creation_date": 1551303356, "last_edit_date": 1551644294, "question_id": 54914855, "link": "https://stackoverflow.com/questions/54914855/why-is-the-destructor-not-called-for-boxfrom-raw", "title": "Why is the destructor not called for Box::from_raw()?", "body": "<p>I am passing a raw pointer to two different closures and converting the raw pointer to a reference using <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.from_raw\" rel=\"nofollow noreferrer\"><code>Box::from_raw()</code></a> and the program is working fine.</p>\n\n<p>However, after converting the raw pointer to reference, the destructor should be called automatically as the documentation says:</p>\n\n<blockquote>\n  <p>This function is unsafe because improper use may lead to memory problems. For example, a double-free may occur if the function is called twice on the same raw pointer.</p>\n</blockquote>\n\n<p>However, I am able to access the reference to ABC even after calling <code>Box::from_raw()</code> on raw pointer twice and it's working fine.</p>\n\n<pre><code>struct ABC {}\n\nimpl ABC {\n    pub fn new() -&gt; ABC {\n        ABC {}\n    }\n\n    pub fn print(&amp;self, x: u32) {\n        println!(\"Inside handle {}\", x);\n    }\n}\n\nfn main() {\n    let obj = ABC::new();\n    let const_obj: *const ABC = &amp;obj;\n\n    let handle = |x| {\n        let abc = unsafe { Box::from_raw(const_obj as *mut ABC) };\n        abc.print(x);\n    };\n    handle(1);\n\n    let handle1 = |x| {\n        let abc = unsafe { Box::from_raw(const_obj as *mut ABC) };\n        abc.print(x);\n    };\n    handle1(2);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=597cfee5bcb409d42f66b81224fa28bf\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>Why is the destructor is not called for <code>ABC</code> after <code>handle</code> and before <code>handle1</code> as the <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.from_raw\" rel=\"nofollow noreferrer\">description</a> for <code>Box::from_raw()</code> function specifies:</p>\n\n<blockquote>\n  <p>Specifically, the <code>Box</code> destructor will call the destructor of <code>T</code> and free the allocated memory.</p>\n</blockquote>\n\n<p>Why is <code>Box::from_raw()</code> working multiple times on a raw pointer?</p>\n"}, {"tags": ["multithreading", "tcp", "rust", "tcpserver", "cancellation"], "comments": [{"owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551371627, "post_id": 54913286, "comment_id": 96625022, "body": "@Shepmaster  If I&#39;m not mistaken the problem in the other question is interrupting a stream that is already open after a timeout. Here I want to stop the server after a timeout in the case there is never going to be any incoming streams anymore. I re-wrote the question."}], "owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 229, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1551695670, "creation_date": 1551296427, "last_edit_date": 1551306941, "question_id": 54913286, "link": "https://stackoverflow.com/questions/54913286/how-do-i-cancel-a-tcplistener-that-is-in-a-listening-loop-from-outside-the-loop", "title": "How do I cancel a TCPListener that is in a listening loop from outside the loop?", "body": "<p>I have a TCP server listening on requests in an infinite loop:</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::net::TcpStream;\nuse std::net::TcpListener;\n\nfn main() {\n    let listener = TcpListener::bind(\"0.0.0.0:7878\").unwrap();\n\n    for stream in listener.incoming() {\n        let mut stream = stream.unwrap();\n\n        let response = \"HTTP/1.1 200 OK\\r\\n\\r\\nsdfuhgsjdfghsdfjk\";\n        stream.write(response.as_bytes()).unwrap();\n        stream.flush().unwrap();\n    }\n}\n</code></pre>\n\n<p>How can I break the loop after a period of time (timeout) ?</p>\n\n<p>After the timeout elapsed, I need the listening loop to stop:</p>\n\n<ul>\n<li>right that moment if there is no incoming stream (i.e if there is no streams incoming and there might not be any more in the future, I need the server to stop waiting in vain)</li>\n<li>after processing one last stream if there is already one incoming at that moment</li>\n</ul>\n"}, {"tags": ["rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1551298720, "creation_date": 1551298720, "answer_id": 54913825, "question_id": 54913013, "link": "https://stackoverflow.com/questions/54913013/serializing-sub-properties-on-a-struct-doesnt-seem-to-work/54913825#54913825", "title": "Serializing sub properties on a struct doesn&#39;t seem to work", "body": "<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>the trait bound `std::rc::Rc&lt;GraphNode&gt;: serde::Serialize` is not satisfied\n</code></pre>\n</blockquote>\n\n<p>This means that <code>Rc</code> does <strong>not</strong> implement <code>Serialize</code>. See <a href=\"https://stackoverflow.com/q/49312600/155423\">How do I serialize or deserialize an Arc&lt;T&gt; in Serde?</a>. TL;DR:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>serde = { version = \"1.0\", features = [\"derive\", \"rc\"] }\n</code></pre>\n\n<p>Once adding that, the error message changes to:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `GraphNode: serde::Serialize` is not satisfied\n  --&gt; src/main.rs:11:5\n   |\n11 |     path: Vec&lt;Rc&lt;GraphNode&gt;&gt;,\n   |     ^^^^ the trait `serde::Serialize` is not implemented for `GraphNode`\n   |\n   = note: required because of the requirements on the impl of `serde::Serialize` for `std::rc::Rc&lt;GraphNode&gt;`\n   = note: required because of the requirements on the impl of `serde::Serialize` for `std::vec::Vec&lt;std::rc::Rc&lt;GraphNode&gt;&gt;`\n   = note: required by `serde::ser::SerializeStruct::serialize_field`\n</code></pre>\n\n<p>That's because <strong>every</strong> type that needs to be serialized must implement <code>Serialize</code>:</p>\n\n<pre><code>#[derive(Serialize)]\nstruct GraphNode {\n</code></pre>\n"}], "owner": {"reputation": 350, "user_id": 3995501, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/699717874/picture?type=large", "display_name": "Craig Harley", "link": "https://stackoverflow.com/users/3995501/craig-harley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 54913825, "answer_count": 1, "score": 2, "last_activity_date": 1551298720, "creation_date": 1551295389, "last_edit_date": 1551298391, "question_id": 54913013, "link": "https://stackoverflow.com/questions/54913013/serializing-sub-properties-on-a-struct-doesnt-seem-to-work", "title": "Serializing sub properties on a struct doesn&#39;t seem to work", "body": "<p>I'm trying to serialize the following <code>Result</code> object, however I'm getting an error because while it workings for some of the properties, it doesn't seem to work on <code>path</code>, even though all of the elements involved have <a href=\"https://docs.serde.rs/serde/ser/index.html#implementations-of-serialize-provided-by-serde\" rel=\"nofollow noreferrer\">implementations provided by Serde</a>.</p>\n\n<pre><code>#[macro_use]\nextern crate serde;\nextern crate rocket;\n\nuse rocket_contrib::json::Json;\nuse std::rc::Rc;\n\n#[derive(Serialize)]\nstruct Result {\n    success: bool,\n    path: Vec&lt;Rc&lt;GraphNode&gt;&gt;,\n    visited_count: u32,\n}\nstruct GraphNode {\n    value: u32,\n    parent: Option&lt;Rc&lt;GraphNode&gt;&gt;,\n}\n\nfn main(){}\n\nfn index() -&gt; Json&lt;Result&gt; {\n    Json(Result {\n        success: true,\n        path: vec![],\n        visited_count: 1,\n    })\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=5a118960654b550e5bb96a868d98e9d8\" rel=\"nofollow noreferrer\">Playground</a>, although I can't get it to pull in the Rocket crate, it must not be one of the 100 most popular.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::rc::Rc&lt;GraphNode&gt;: serde::Serialize` is not satisfied\n  --&gt; src/main.rs:11:5\n   |\n11 |     path: Vec&lt;Rc&lt;GraphNode&gt;&gt;,\n   |     ^^^^ the trait `serde::Serialize` is not implemented for `std::rc::Rc&lt;GraphNode&gt;`\n   |\n   = note: required because of the requirements on the impl of `serde::Serialize` for `std::vec::Vec&lt;std::rc::Rc&lt;GraphNode&gt;&gt;`\n   = note: required by `serde::ser::SerializeStruct::serialize_field`\n</code></pre>\n\n<p>From my understanding, <code>#[derive(Serialize)]</code> should automatically create a serialize method which serde can then use. However I would expect it to work for the properties too. Do I need to create structs for all the types and then derive <code>Serialize</code> for all of those structs?</p>\n\n<p>Do I need to do something to enable it?</p>\n\n<p>The following crates are in use:</p>\n\n<pre><code>rocket = \"*\" \nserde = { version = \"1.0\", features = [\"derive\"] } \nrocket_contrib = \"*\"\n</code></pre>\n"}, {"tags": ["regex", "rust", "escaping"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551295740, "post_id": 54912970, "comment_id": 96592633, "body": "What happens when you reduce your regex to <i>just</i> test for one thing, such as the IP address or any other one piece?  See <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551295961, "post_id": 54912970, "comment_id": 96592728, "body": "Thanks for the hint, I&#39;ll try match for match to trace down the problem."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1551297769, "post_id": 54912970, "comment_id": 96593529, "body": "You don&#39;t need to escape quotes in raw string, use your inputs like this:  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4e8256b9610ab7962fb9b8c7f67a91d8\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 1, "creation_date": 1551298156, "post_id": 54912970, "comment_id": 96593710, "body": "Note that <code>(HTTP|HTTPS)</code> = <code>(HTTPS?)</code> in the pattern and the dot between digits must be escaped to match a literal dot."}, {"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "reply_to_user": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "edited": false, "score": 0, "creation_date": 1551337804, "post_id": 54912970, "comment_id": 96605639, "body": "@WiktorStribi\u017cew thanks for hint."}], "answers": [{"comments": [{"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "edited": false, "score": 0, "creation_date": 1551337930, "post_id": 54913627, "comment_id": 96605698, "body": "My problem was in general I didn&#39;t understand that I&#39;ve to remove the regular regex escapes as well. But now I got it. Thanks a lot."}, {"owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "reply_to_user": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "edited": false, "score": 1, "creation_date": 1551339449, "post_id": 54913627, "comment_id": 96606371, "body": "@createproblem <code>\\w</code> is a regex escape and you should not remove it. Doubles quotes are not special and should not be regex-escaped. Also, you actually doubled the double quotes in the pattern, hence there was no chance it could find a match."}], "tags": [], "owner": {"reputation": 481647, "user_id": 3832970, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64323e6cf08401474da3bf770ea13b58?s=128&d=identicon&r=PG&f=1", "display_name": "Wiktor Stribi\u017cew", "link": "https://stackoverflow.com/users/3832970/wiktor-stribi%c5%bcew"}, "is_accepted": true, "score": 1, "last_activity_date": 1551297804, "creation_date": 1551297804, "answer_id": 54913627, "question_id": 54912970, "link": "https://stackoverflow.com/questions/54912970/how-to-escape-escaped-regex-characters-when-using-rusts-regex-crate/54913627#54913627", "title": "How to escape escaped regex characters when using Rust&#39;s regex crate?", "body": "<p>Your original pattern needs to be written as </p>\n\n<pre><code>let re = Regex::new(r#\"(\\d{1,3}(?:\\.\\d{1,3}){3}) (\\w+|-) (\\w+|-) \\[(.*?)\\] \"(\\w+) (.*?) (HTTPS?)/([0-9]\\.[0-9])\" ([0-9]+) ([0-9]+) \"(\\w+|-)\" \"(.*?)\"\"#).unwrap();\n</code></pre>\n\n<p>The current one as:</p>\n\n<pre><code>let re = Regex::new(r#\"123 \"(\\w+)\"\"#).unwrap();\n</code></pre>\n\n<p>In short, all <code>\\\\\"\"</code> in your pattern should look like <code>\"</code>. And make sure the pattern is inside <code>r#\"</code> and <code>\"#</code>.</p>\n\n<p>Please refer to the <a href=\"https://doc.rust-lang.org/reference/tokens.html#raw-string-literals\" rel=\"nofollow noreferrer\">Rust raw string literals reference</a>:</p>\n\n<blockquote>\n  <p>Raw string literals do not process any escapes. They start with the character <code>U+0072</code> (<code>r</code>), followed by zero or more of the character <code>U+0023</code> (<code>#</code>) and a <code>U+0022</code> (double-quote) character. The <em>raw string body</em> can contain any sequence of Unicode characters and is terminated only by another <code>U+0022</code> (double-quote) character, followed by the same number of <code>U+0023</code> (<code>#</code>) characters that preceded the opening <code>U+0022</code> (double-quote) character.</p>\n</blockquote>\n"}], "owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1483, "favorite_count": 0, "accepted_answer_id": 54913627, "answer_count": 1, "score": 1, "last_activity_date": 1551298153, "creation_date": 1551295221, "last_edit_date": 1551298153, "question_id": 54912970, "link": "https://stackoverflow.com/questions/54912970/how-to-escape-escaped-regex-characters-when-using-rusts-regex-crate", "title": "How to escape escaped regex characters when using Rust&#39;s regex crate?", "body": "<p>I have a regex that has many <code>\"</code> and <code>\\</code> escaped characters. I tested my regex in general and you can find <a href=\"https://regex101.com/r/7giQd7/1\" rel=\"nofollow noreferrer\">my working live demo</a>. I transferred the regex to Rust. Here is a simplified example that does not work:</p>\n\n<pre><code>extern crate regex; // 1.1.0\nuse regex::Regex;\n\nfn main() {\n    let re = Regex::new(r#\"123 \\\\\"\"(\\w+)\"#).unwrap();\n    let test = \"123 \\\"PROPFIND\\\"\";\n\n    for cap in re.captures_iter(test) {\n        println!(\"{}\", &amp;cap[1]);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c65250d50999755a9047d3f40e4c72b8\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The output of my example is empty, but I expect <code>PROPFIND</code></p>\n\n<p>The regex documentation pointed me to the <a href=\"https://doc.rust-lang.org/stable/reference/tokens.html#raw-string-literals\" rel=\"nofollow noreferrer\">raw string</a> documentation. I played around with different escaping techniques, but can't figure out where I messed up.</p>\n"}, {"tags": ["rust", "type-conversion", "traits", "primitive-types", "rust-crates"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551287303, "post_id": 54910547, "comment_id": 96588592, "body": "See also <a href=\"https://stackoverflow.com/q/43704758/155423\">How to idiomatically convert between u32 and usize?</a>; <a href=\"https://stackoverflow.com/q/29592256/155423\">What&#39;s the difference between <code>usize</code> and <code>u32</code>?</a>; <a href=\"https://stackoverflow.com/q/47786322/155423\">Why is type conversion from u64 to usize allowed using <code>as</code> but not <code>From</code>?</a>; <a href=\"https://stackoverflow.com/q/50437732/155423\">How do I convert a usize to a u32 using TryFrom?</a>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1551287490, "post_id": 54910547, "comment_id": 96588701, "body": "This looks like a <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY question</a>. What&#39;s the real goal ? Aren&#39;t you looking for type aliasing instead ?"}, {"owner": {"reputation": 390, "user_id": 9532450, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-8gvCc_mj0Hs/AAAAAAAAAAI/AAAAAAAABE0/Iae_Ww5uWKI/photo.jpg?sz=128", "display_name": "khanh", "link": "https://stackoverflow.com/users/9532450/khanh"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1551287894, "post_id": 54910547, "comment_id": 96588922, "body": "@DenysS&#233;guret My real goal is <b>usize::new(&lt;abitrary type&gt;)</b> returns an usize number from any type."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1551288241, "post_id": 54910547, "comment_id": 96589102, "body": "@Ng\u1ecdcKh&#225;nhNguy\u1ec5n then have a look at the From&lt;T&gt; traits. They&#39;re the normal way to produce those transformations. But it wouldn&#39;t make sense for any arbitrary type, unless you have some specific semantic, in which case you really should use some type aliasing."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1551287172, "last_edit_date": 1551287172, "creation_date": 1551286912, "answer_id": 54910794, "question_id": 54910547, "link": "https://stackoverflow.com/questions/54910547/how-do-i-add-a-constructor-to-an-existing-primitive-type/54910794#54910794", "title": "How do I add a constructor to an existing primitive type?", "body": "<p>You can't directly implement methods on types outside of your own crate. However, as the help message says, you can define a new trait and then implement it:</p>\n\n<pre><code>pub trait NewFrom&lt;T&gt; {\n    fn new(value: T) -&gt; Self;\n}\n\nimpl NewFrom&lt;&amp;u32&gt; for usize {\n    fn new(value: &amp;u32) -&gt; Self {\n        *value as usize\n    }\n}\n</code></pre>\n\n<p>Still, this is a bit of an odd thing to do. Usually you would just use the built-in conversion:</p>\n\n<pre><code>let int: u32 = 1;\nlet size = int as usize;\n</code></pre>\n"}], "owner": {"reputation": 390, "user_id": 9532450, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-8gvCc_mj0Hs/AAAAAAAAAAI/AAAAAAAABE0/Iae_Ww5uWKI/photo.jpg?sz=128", "display_name": "khanh", "link": "https://stackoverflow.com/users/9532450/khanh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 456, "favorite_count": 0, "accepted_answer_id": 54910794, "answer_count": 1, "score": 1, "last_activity_date": 1551288939, "creation_date": 1551286163, "last_edit_date": 1551288939, "question_id": 54910547, "link": "https://stackoverflow.com/questions/54910547/how-do-i-add-a-constructor-to-an-existing-primitive-type", "title": "How do I add a constructor to an existing primitive type?", "body": "<p>I am trying to make primitive types and object types by adding the <code>new</code> method to <code>usize</code>:</p>\n\n<pre><code>impl usize {\n    fn new(value: &amp;u32) -&gt; usize {\n        value as usize\n    }\n}\n</code></pre>\n\n<p>I have no idea about what the message tries to say:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0390]: only a single inherent implementation marked with `#[lang = \"usize\"]` is allowed for the `usize` primitive\n --&gt; src/lib.rs:1:1\n  |\n1 | / impl usize {\n2 | |     fn new(value: &amp;u32) -&gt; usize {\n3 | |         value as usize\n4 | |     }\n5 | | }\n  | |_^\n  |\nhelp: consider using a trait to implement these methods\n --&gt; src/lib.rs:1:1\n  |\n1 | / impl usize {\n2 | |     fn new(value: &amp;u32) -&gt; usize {\n3 | |         value as usize\n4 | |     }\n5 | | }\n  | |_^\n</code></pre>\n"}, {"tags": ["rust", "rust-macros", "rust-proc-macros"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551303308, "post_id": 54910808, "comment_id": 96595989, "body": "Is there <i>any</i> way to use such a syntax currently? If not, do you know if there will be?"}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 2, "last_activity_date": 1551337865, "last_edit_date": 1551337865, "creation_date": 1551286970, "answer_id": 54910808, "question_id": 54910273, "link": "https://stackoverflow.com/questions/54910273/how-do-i-use-a-custom-namespaced-derive-macro-attribute-on-a-type-instead-of-ins/54910808#54910808", "title": "How do I use a custom namespaced derive-macro attribute on a type instead of inside the type?", "body": "<p>The namespace declared in the <code>proc_macro_derive</code> attribute is entirely <em>ignored</em>, and this is a <a href=\"https://github.com/rust-lang/rust/issues/55168\" rel=\"nofollow noreferrer\">known bug</a>. Because of this bug, the following code can be compiled, though it shouldn't be.</p>\n\n<pre><code>#[derive(Example)]\n#[attr]             // Works (but shouldn't)\nstruct Demo {\n    #[lolwut::attr] // Works (but shouldn't)\n    field: i32,\n}\n</code></pre>\n\n<p>Until the bug is fixed, you should keep using the non-namespaced form (<code>example_attr</code>). </p>\n\n<p>Also, according to this bug report, as of Rust 1.33.0 there is <em>no</em> way to achieve what OP wants via proc-macros, and how to allow <code>#[example::attr]</code> to work is still under design.</p>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 546, "favorite_count": 0, "accepted_answer_id": 54910808, "answer_count": 1, "score": 2, "last_activity_date": 1551337865, "creation_date": 1551285395, "question_id": 54910273, "link": "https://stackoverflow.com/questions/54910273/how-do-i-use-a-custom-namespaced-derive-macro-attribute-on-a-type-instead-of-ins", "title": "How do I use a custom namespaced derive-macro attribute on a type instead of inside the type?", "body": "<p>I'd like to create a custom derive macro that uses the new namespaced attribute syntax: <code>example::attr</code>. I've been able to get this to work with attributes within the type (on a struct field or an enum variant, for example), but not when applied to the type itself.</p>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>use repro_derive::Example;\n\n#[derive(Example)]\n#[example::attr]     // Does not work\nstruct Demo {\n    #[example::attr] // Works\n    field: i32,\n}\n\nfn main() {}\n</code></pre>\n\n<p>The procedural macro itself does nothing, other than to declare that <code>example::attr</code> is a valid attribute.</p>\n\n<p><strong>repro-derive/src/lib.rs</strong></p>\n\n<pre><code>extern crate proc_macro;\n\nuse proc_macro::TokenStream;\n\n#[proc_macro_derive(Example, attributes(example::attr))]\npub fn example_derive(_input: TokenStream) -&gt; TokenStream {\n    TokenStream::new()\n}\n</code></pre>\n\n<p>Compiling yields:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0433]: failed to resolve: use of undeclared type or module `example`\n --&gt; src/main.rs:4:3\n  |\n4 | #[example::attr]\n  |   ^^^^^^^ use of undeclared type or module `example`\n</code></pre>\n\n<p>Switching to a non-namespaced form of the attribute (<code>example_attr</code>) works fine.</p>\n\n<hr>\n\n<p>I'm using Rust 1.32.0. The project layout is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ tree\n.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 repro-derive\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 lib.rs\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main.rs\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cat Cargo.toml\n[package]\nname = \"repro\"\nversion = \"0.1.0\"\nauthors = [\"Author\"]\nedition = \"2018\"\n\n[dependencies]\nrepro-derive = { path = \"repro-derive\" }\n</code></pre>\n\n<p><strong>repro-derive/Cargo.toml</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[package]\nname = \"repro-derive\"\nversion = \"0.1.0\"\nauthors = [\"Author\"]\nedition = \"2018\"\n\n[lib]\nproc-macro = true\n\n[dependencies]\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1551263967, "post_id": 54903436, "comment_id": 96574112, "body": "See <a href=\"https://rust-num.github.io/num/num_traits/index.html\" rel=\"nofollow noreferrer\">num_traits</a>"}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551264340, "post_id": 54903436, "comment_id": 96574377, "body": "See my question - I would like to avoid an additional crate."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 6, "creation_date": 1551264340, "post_id": 54903436, "comment_id": 96574378, "body": "Any strong reason why not using an external crate like <code>num_traits</code>?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551266483, "post_id": 54903436, "comment_id": 96575690, "body": "<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f731c553faaec53b4e444492d3bf8130\" rel=\"nofollow noreferrer\">Example quick and dirty</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1551270796, "post_id": 54903436, "comment_id": 96578163, "body": "@PhilippLudwig then go to num_traits and copy paste everything in it into your code.  \u201cProblem\u201d \u201csolved\u201d"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551273483, "post_id": 54903436, "comment_id": 96579831, "body": "<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=512f174a297a115dad420e22a1656c29\" rel=\"nofollow noreferrer\">The duplicates applied to your problem</a>"}, {"owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551431326, "post_id": 54903436, "comment_id": 96645467, "body": "@Shepmaster I don&#39;t see how any of those apply - there first two are using an external crate, what I wan&#39;t to avoid. In the third one I really don&#39;t understand what&#39;s going on, and even though I am thankful for your effort, that code you linked doesn&#39;t help me either - I came to SO to understand how this is done in Rust, so I can solve similar problems in the future by myself, not to copy+paste some code without understanding what&#39;s going on."}, {"owner": {"reputation": 8101, "user_id": 9199167, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BqdLV.jpg?s=128&g=1", "display_name": "Max Vollmer", "link": "https://stackoverflow.com/users/9199167/max-vollmer"}, "edited": false, "score": 1, "creation_date": 1554755706, "post_id": 54903436, "comment_id": 97861118, "body": "@PhilippLudwig While your points sound valid, this question still is a duplicate. If you are unsatisfied with the existing answers in the linked duplicate questions, you can post a bounty to one (or all) of those questions with the explicit reason that you wish for a more detailed canonical answer."}], "owner": {"reputation": 2369, "user_id": 4614680, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c9b36fb2c1d356a919916f77e74f1c3c?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Ludwig", "link": "https://stackoverflow.com/users/4614680/philipp-ludwig"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 103, "favorite_count": 0, "closed_date": 1551271977, "answer_count": 0, "score": 0, "last_activity_date": 1551272040, "creation_date": 1551263684, "last_edit_date": 1551271484, "question_id": 54903436, "link": "https://stackoverflow.com/questions/54903436/how-can-i-write-a-generic-function-for-computing-the-average-without-using-any-c", "closed_reason": "Duplicate", "title": "How can I write a generic function for computing the average without using any crates?", "body": "<p>I am currently dealing with some calculations that involve different collections of numbers, such as <code>Vec&lt;u16&gt;</code>, <code>Vec&lt;u32&gt;</code>, <code>VecDeque&lt;16&gt;</code>, etc. I need to calculate the average of these collections several times, therefore I would like to wrap this:</p>\n\n<pre><code>let avg = numbers.map(|x| *x as u32).sum::&lt;u32&gt;() as f32 / numbers.len() as f32;\n</code></pre>\n\n<p>Into a function, where <code>numbers</code> may be any collection.</p>\n\n<p>I tried this:</p>\n\n<pre><code>fn average&lt;T&gt;(numbers: &amp;T) -&gt; f32 {\n    numbers.map(|x| *x as u32).sum::&lt;u32&gt;() as f32 / numbers.len() as f32\n}\n</code></pre>\n\n<p>But that of course does not work because <code>T</code> does not necessary implement <code>Iterator</code>. So I added (MVCE):</p>\n\n<pre><code>use std::collections::VecDeque;\n\nfn average&lt;T&gt;(numbers: &amp;T) -&gt; f32\nwhere\n    T: std::iter::Iterator,\n    u32: std::iter::Sum&lt;&lt;T as std::iter::Iterator&gt;::Item&gt;,\n    u16: std::iter::Sum&lt;&lt;T as std::iter::Iterator&gt;::Item&gt;,\n{\n    numbers.sum::&lt;u32&gt;() as f32 / numbers.count() as f32\n}\n\nfn main() {\n    let mut input = VecDeque::new();\n    input.push_back(1);\n    input.push_back(2);\n    let _avg = average(&amp;input.iter());\n}\n</code></pre>\n\n<p>But I get <em>\"the trait <code>std::iter::Sum&lt;&amp;u32&gt;</code> is not implemented for <code>u16</code>\"</em>, and I think this would not work anyway since <code>count()</code> would consume the <code>Iterator</code>.</p>\n\n<p>So I decided to just make multiple functions over slices. e.g.:</p>\n\n<pre><code>fn average_u16&lt;T&gt;(numbers: &amp;[u16]) -&gt; f32 {\n    numbers.map(|x| *x as u32).sum::&lt;u32&gt;() as f32 / numbers.len() as f32\n}\n</code></pre>\n\n<p>But that is not satisfying either, since a <code>&amp;VecDeque</code> is not a slice.</p>\n\n<p>Can this be achieved somehow without depending on additional crates?</p>\n"}, {"tags": ["collections", "functional-programming", "rust", "reduce"], "comments": [{"owner": {"reputation": 14585, "user_id": 568785, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/88c6371f6a47841abde4c60dd8a2f964?s=128&d=identicon&r=PG", "display_name": "Bailey Parker", "link": "https://stackoverflow.com/users/568785/bailey-parker"}, "edited": false, "score": 1, "creation_date": 1551292063, "post_id": 54897870, "comment_id": 96590929, "body": "To be clear, while <code>Vec</code> lacks a <code>reduce</code> method, there is <code>fold</code> (equivalent to <code>reduce</code>) on <code>std::iter::Iterator</code> which you can get from a vector by doing <code>vec.iter()</code>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1607365966, "post_id": 54903213, "comment_id": 115244599, "body": "In many cases, you&#39;ll see this as <code>iterator.next().map(|first| iterator.fold(first, ...))</code>. That way, you avoid the panic from the <code>unwrap</code> and get an <code>Option</code> as the final result."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 5, "last_activity_date": 1551359887, "last_edit_date": 1551359887, "creation_date": 1551263074, "answer_id": 54903213, "question_id": 54897870, "link": "https://stackoverflow.com/questions/54897870/what-is-an-alternative-to-kotlins-reduce-operation-in-rust/54903213#54903213", "title": "What is an alternative to Kotlin&#39;s `reduce` operation in Rust?", "body": "<p>Kotlin's <code>reduce</code> takes the first item of the iterator for the starting point while Rust's <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.fold\" rel=\"nofollow noreferrer\"><code>fold</code></a> and <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.try_fold\" rel=\"nofollow noreferrer\"><code>try_fold</code></a> let you specify a custom starting point.</p>\n\n<p>Here is an equivalent of the Kotlin code:</p>\n\n<pre><code>let mut it = nums.iter().cloned();\nlet start = it.next().unwrap();\nit.zip(ops.iter()).try_fold(start, |a, (b, op)| match op {\n    '+' =&gt; Ok(a + b),\n    '-' =&gt; Ok(a - b),\n    _ =&gt; Err(()),\n})\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=4ef1104ee3d59e2f8029533c0d2975ab\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Or since we're starting from a vector, which can be indexed:</p>\n\n<pre><code>nums[1..]\n    .iter()\n    .zip(ops.iter())\n    .try_fold(nums[0], |a, (b, op)| match op {\n        '+' =&gt; Ok(a + b),\n        '-' =&gt; Ok(a - b),\n        _ =&gt; Err(()),\n    });\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=689b55cd9739aa899d448b70570171c2\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 3903, "user_id": 158913, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/90b5038827dc6dedece5166e5125bd47?s=128&d=identicon&r=PG", "display_name": "Vadym Chekan", "link": "https://stackoverflow.com/users/158913/vadym-chekan"}, "is_accepted": false, "score": 2, "last_activity_date": 1607365770, "last_edit_date": 1607365770, "creation_date": 1607365065, "answer_id": 65187192, "question_id": 54897870, "link": "https://stackoverflow.com/questions/54897870/what-is-an-alternative-to-kotlins-reduce-operation-in-rust/65187192#65187192", "title": "What is an alternative to Kotlin&#39;s `reduce` operation in Rust?", "body": "<p>There is no <code>reduce</code> in Rust 1.48. In many cases you can simulate it with <code>fold</code> but be aware that the semantics of the these functions are different. If the iterator is empty, <code>fold</code> will return the initial value whereas <code>reduce</code> returns <code>None</code>. If you want to perform multiplication operation on all elements, for example, getting result <code>1</code> for empty set is not too logical.</p>\n<p>Rust does have a <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold_first\" rel=\"nofollow noreferrer\"><code>fold_first</code></a> function which is equivalent to Kotlin's <code>reduce</code>, but it is not stable yet. The <a href=\"https://github.com/rust-lang/rust/issues/68125\" rel=\"nofollow noreferrer\">main discussion</a> is about naming it. It is a safe bet to use it if you are ok with nightly Rust because there is little chance the function will be removed. In the worst case, the name will be changed. If you need stable Rust, then use <code>fold</code> if you are Ok with an illogical result for empty sets. If not, then you'll have to implement it, or find a crate such as <a href=\"https://docs.rs/reduce/0.1.3/reduce/\" rel=\"nofollow noreferrer\">reduce</a>.</p>\n"}], "owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1797, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1607365770, "creation_date": 1551240208, "last_edit_date": 1551277303, "question_id": 54897870, "link": "https://stackoverflow.com/questions/54897870/what-is-an-alternative-to-kotlins-reduce-operation-in-rust", "title": "What is an alternative to Kotlin&#39;s `reduce` operation in Rust?", "body": "<p>I encountered this competitive programming problem:</p>\n\n<ol>\n<li><code>nums</code> is a vector of integers (length <code>n</code>)</li>\n<li><code>ops</code> is a vector of strings containing <code>+</code> and <code>-</code> (length <code>n-1</code>)</li>\n</ol>\n\n<p>It can be solved with the <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/reduce.html\" rel=\"nofollow noreferrer\"><code>reduce</code></a> operation in Kotlin like this:</p>\n\n<pre><code>val op_iter = ops.iterator();\nnums.reduce {a, b -&gt;\n    when (op_iter.next()) {\n        \"+\" -&gt; a+b\n        \"-\" -&gt; a-b\n        else -&gt; throw Exception()\n    }\n}\n</code></pre>\n\n<p><code>reduce</code> is described as:</p>\n\n<blockquote>\n  <p>Accumulates value starting with the first element and applying operation from left to right to current accumulator value and each element.</p>\n</blockquote>\n\n<p>It looks like Rust vectors do not have a <code>reduce</code> method. How would you achieve this task?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1551222351, "post_id": 54894957, "comment_id": 96560093, "body": "Please create a <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a>. There isn&#39;t enough information about the types here. The <a href=\"https://stackoverflow.com/tags/rust/info\">Rust tag</a> contains more help."}, {"owner": {"reputation": 163, "user_id": 3507465, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/G8dnf.jpg?s=128&g=1", "display_name": "ollie299792458", "link": "https://stackoverflow.com/users/3507465/ollie299792458"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1551223940, "post_id": 54894957, "comment_id": 96560580, "body": "@mcarton not too sure what you mean, it was already pretty minimal, I&#39;m away from my development machine, but have removed the ellipses and added an import to the library I was using."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1551224137, "post_id": 54894957, "comment_id": 96560652, "body": "There are 4 letters in MCVE, your example only cared about 2 of them. Ideally you should post an example which creates exactly the error you have. Right now we still have no idea what <code>Sender</code> is, nor what the <code>channel</code> function returns (&quot;it appears to be the same as the return method <code>std::sync::mpsc::channel()</code> itself uses&quot; is confusing, is it that function or is it not?)."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1551224173, "post_id": 54894957, "comment_id": 96560664, "body": "<a href=\"https://docs.rs/pnet/0.22.0/pnet/packet/ethernet/struct.EthernetPacket.html\" rel=\"nofollow noreferrer\"><code>EthernetPacket</code></a> has a lifetime parameter. You have to specify it in your function declaration."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551224963, "post_id": 54894957, "comment_id": 96560885, "body": "The duplicates applied to your case: <code>pub fn start_sender&lt;&#39;p&gt;() -&gt; (Sender&lt;EthernetPacket&lt;&#39;p&gt;&gt;)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551225288, "post_id": 54894957, "comment_id": 96560951, "body": "Note that your &quot;MCVE&quot; didn&#39;t have the correct import statements (<code>pnet::ethernet::EthernetPacket</code> is not valid), so it&#39;s self-evident how much time you spent trying to produce a representative example. It&#39;s a good idea to put as much effort into the <i>question</i> as you&#39;d appreciate from an <i>answer</i>."}, {"owner": {"reputation": 163, "user_id": 3507465, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/G8dnf.jpg?s=128&g=1", "display_name": "ollie299792458", "link": "https://stackoverflow.com/users/3507465/ollie299792458"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1551260101, "post_id": 54894957, "comment_id": 96571594, "body": "@mcarton as clearly stated in my question it is the obvious one from the standard library."}, {"owner": {"reputation": 163, "user_id": 3507465, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/G8dnf.jpg?s=128&g=1", "display_name": "ollie299792458", "link": "https://stackoverflow.com/users/3507465/ollie299792458"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1551260145, "post_id": 54894957, "comment_id": 96571630, "body": "@mcarton the key question is how to add a lifetime parameter to a type parameter? None of the supposed duplicates cover that."}, {"owner": {"reputation": 163, "user_id": 3507465, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/G8dnf.jpg?s=128&g=1", "display_name": "ollie299792458", "link": "https://stackoverflow.com/users/3507465/ollie299792458"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551260240, "post_id": 54894957, "comment_id": 96571691, "body": "@Shepmaster none of the duplicates state how to add a lifetime parameter to a non-reference type parameter?  Also, as clearly stated in the comments, I was away from my development machine, so made an effort to edit my question in response to the comments, I apologise for not being a compiler."}, {"owner": {"reputation": 163, "user_id": 3507465, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/G8dnf.jpg?s=128&g=1", "display_name": "ollie299792458", "link": "https://stackoverflow.com/users/3507465/ollie299792458"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551263195, "post_id": 54894957, "comment_id": 96573614, "body": "@Shepmaster thank you very much, adding the lifetime parameter in angled brackets after the type parameter is the solution.  Unfortunately that solution doesn&#39;t appear in any of the supposed &#39;duplicates&#39; so if you post your comment as an answer I&#39;ll mark it as accepted (and also fix my MCVE - no point putting much effort into a question that is just going to be marked as a duplicate)."}, {"owner": {"reputation": 163, "user_id": 3507465, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/G8dnf.jpg?s=128&g=1", "display_name": "ollie299792458", "link": "https://stackoverflow.com/users/3507465/ollie299792458"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551265449, "post_id": 54894957, "comment_id": 96575097, "body": "@Shepmaster I&#39;ve come up against a similar problem again, I was wondering if you could explain why I need a lifetime (as the new object is returned, isn&#39;t ownership returned to the calling function, so it should just get its lifetime from that function by elision)?"}, {"owner": {"reputation": 163, "user_id": 3507465, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/G8dnf.jpg?s=128&g=1", "display_name": "ollie299792458", "link": "https://stackoverflow.com/users/3507465/ollie299792458"}, "edited": false, "score": 0, "creation_date": 1551265958, "post_id": 54894957, "comment_id": 96575381, "body": "I found an actual partial duplicate here: <a href=\"https://stackoverflow.com/questions/36511332/rust-lifetimes-with-mpscsenderta-and-threads\" title=\"rust lifetimes with mpscsenderta and threads\">stackoverflow.com/questions/36511332/&hellip;</a>"}], "owner": {"reputation": 163, "user_id": 3507465, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/G8dnf.jpg?s=128&g=1", "display_name": "ollie299792458", "link": "https://stackoverflow.com/users/3507465/ollie299792458"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 306, "favorite_count": 0, "closed_date": 1551224833, "answer_count": 0, "score": 0, "last_activity_date": 1551265932, "creation_date": 1551218966, "last_edit_date": 1551265932, "question_id": 54894957, "link": "https://stackoverflow.com/questions/54894957/missing-lifetime-specifier-in-type-parameter", "closed_reason": "Duplicate", "title": "Missing lifetime specifier in type parameter", "body": "<p>I have the following function (simplified minimal example - Sender &amp; channel() are the standard library versions):</p>\n\n<pre><code>use pnet::packet::ethernet::EthernetPacket; // 0.22.0\nuse std::sync::mpsc::{channel, Sender};\n\npub fn start_sender() -&gt; (Sender&lt;EthernetPacket&gt;) {\n    let (sender, _) = channel();\n    (sender)\n}\n</code></pre>\n\n<p>It gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:4:34\n  |\n4 | pub fn start_sender() -&gt; (Sender&lt;EthernetPacket&gt;) {\n  |                                  ^^^^^^^^^^^^^^ help: consider giving it a 'static lifetime: `EthernetPacket + 'static`\n  |\n  = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n</code></pre>\n\n<p>I have no idea why (it appears to be the same as the return method <code>std::sync::mpsc::channel()</code> itself uses), nor how to fix it?</p>\n\n<p>This seems simple, but I have searched, read documentation, read the error description, and nothing seems to point towards the solution. Note, none of the suggested duplicates are applicable in this case, the syntax required in the solution is different (see comments).</p>\n\n<p>Edit: I found this question, which it may actually be a partial duplicate of (in terms of semantics if not syntax): <a href=\"https://stackoverflow.com/questions/36511332/rust-lifetimes-with-mpscsenderta-and-threads\">Rust Lifetimes with mpsc::Sender&lt;T&lt;&#39;a&gt;&gt; and threads</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551225711, "post_id": 54894735, "comment_id": 96561051, "body": "Why do you believe that a <code>&amp;mut &amp;Inner</code> is a <code>&amp;mut Inner</code>? Those ampersands aren&#39;t just for show."}, {"owner": {"user_type": "does_not_exist", "display_name": "user4063815"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551383132, "post_id": 54894735, "comment_id": 96630700, "body": "@Shepmaster Basically I wanted to get a better error message than <code>help: consider removing 1 leading </code>&amp;<code>-references</code>, but that clearly backfired on me :)"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1551225664, "post_id": 54894913, "comment_id": 96561037, "body": "<i><code>&amp;mut *self.inner</code></i> \u2014 <b>Why</b>, though? Just <code>self.inner</code> would be fine."}, {"owner": {"reputation": 26, "user_id": 11100996, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/faf4a474f4f0b6fd7ab843c5a40f34f2?s=128&d=identicon&r=PG&f=1", "display_name": "Abendstolz", "link": "https://stackoverflow.com/users/11100996/abendstolz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551249518, "post_id": 54894913, "comment_id": 96566717, "body": "@Shepmaster Of course you&#39;re right: What the hell came over me? Thanks for pointing this out!"}], "tags": [], "owner": {"reputation": 26, "user_id": 11100996, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/faf4a474f4f0b6fd7ab843c5a40f34f2?s=128&d=identicon&r=PG&f=1", "display_name": "Abendstolz", "link": "https://stackoverflow.com/users/11100996/abendstolz"}, "is_accepted": true, "score": 1, "last_activity_date": 1551250094, "last_edit_date": 1551250094, "creation_date": 1551218753, "answer_id": 54894913, "question_id": 54894735, "link": "https://stackoverflow.com/questions/54894735/returning-mutable-reference-to-trait-in-get-trait-mut/54894913#54894913", "title": "Returning mutable reference to trait in &quot;get_trait_mut&quot;", "body": "<p>The main problem I see is that <code>Thing</code> only has an <strong>immutable</strong> reference to <code>inner</code>.</p>\n\n<p>Here is my take on this:</p>\n\n<pre><code>pub trait Inner {}\n\npub struct Thing&lt;'a&gt; {\n    inner: &amp;'a mut Inner,\n}\n\nimpl&lt;'a&gt; Thing&lt;'a&gt; {\n    pub fn get_inner(&amp;self) -&gt; &amp;Inner {\n        self.inner\n    }\n\n    pub fn get_inner_mut(&amp;mut self) -&gt; &amp;mut Inner {\n        &amp;mut *self.inner\n    }\n}\n\nstruct SomeInner {}\n\nimpl Inner for SomeInner {}\n\nfn main() {\n    let mut inner = SomeInner {};\n    let mut thing = Thing { inner: &amp;mut inner };\n\n    let inner: &amp;Inner = thing.get_inner();\n    let mutable_inner: &amp;mut Inner = thing.get_inner_mut();\n}\n</code></pre>\n\n<p>It compiles (as you can verify <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e775e188378674fd1a0638711912598f\" rel=\"nofollow noreferrer\">on the playground</a>)</p>\n\n<p><strong>note</strong>:</p>\n\n<ul>\n<li><code>let mut inner = SomeInner {}</code> -> <code>inner</code> is mutable</li>\n<li><code>let mut thing</code> -> <code>thing</code> is also mutable</li>\n<li><code>&amp;mut *self.shape</code> -> I am dereferencing the reference and then creating a mutable reference to it again</li>\n</ul>\n\n<p>I am sure there are more sophisticated solutions and I hope that someone else will contribute such.</p>\n\n<p><strong>edit</strong>: as Shepmaster kindly pointed out, there is no need at all to write <code>&amp;mut *self.shape</code>. As we already have access to a mutable reference, just returning <code>self.inner</code> is enough - the compiler will make sure that the mutability is honored.</p>\n\n<p>In the end, my attempt would become:</p>\n\n<pre><code>impl&lt;'a&gt; Thing&lt;'a&gt; {\n   pub fn get_inner(&amp;self) -&gt; &amp;Inner {\n     self.inner\n   }\n\n   pub fn get_inner_mut(&amp;mut self) -&gt; &amp;mut Inner {\n      self.inner\n   }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=55d495742fa449d0b0531d906cbe01a3\" rel=\"nofollow noreferrer\">Full example on playground</a></p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user4063815"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 336, "favorite_count": 0, "accepted_answer_id": 54894913, "answer_count": 1, "score": 0, "last_activity_date": 1551250094, "creation_date": 1551218000, "last_edit_date": 1551225500, "question_id": 54894735, "link": "https://stackoverflow.com/questions/54894735/returning-mutable-reference-to-trait-in-get-trait-mut", "title": "Returning mutable reference to trait in &quot;get_trait_mut&quot;", "body": "<p>Consider the following:</p>\n\n<pre><code>pub trait Inner {}\n\npub struct Thing&lt;'a&gt; {\n    inner: &amp;'a Inner,\n}\n\nimpl&lt;'a&gt; Thing&lt;'a&gt; {\n    pub fn get_inner(&amp;self) -&gt; &amp;Inner {\n        self.inner\n    }\n\n    pub fn get_inner_mut(&amp;mut self) -&gt; &amp;mut Inner {\n        &amp;mut self.inner\n    }\n}\n</code></pre>\n\n<p>leads to: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;'a (dyn Inner + 'a): Inner` is not satisfied\n  --&gt; src/lib.rs:13:9\n   |\n13 |         &amp;mut self.inner\n   |         -^^^^^^^^^^^^^^\n   |         |\n   |         the trait `Inner` is not implemented for `&amp;'a (dyn Inner + 'a)`\n   |         help: consider removing 1 leading `&amp;`-references\n   |\n   = note: required for the cast to the object type `dyn Inner`\n</code></pre>\n\n<p>Which is fair, so let's follow the advice, shall we?</p>\n\n<p>Same as above with this change:</p>\n\n<pre><code>pub fn get_inner_mut(&amp;mut self) -&gt; &amp;mut Inner {\n    mut self.inner\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected expression, found keyword `mut`\n  --&gt; src/lib.rs:13:9\n   |\n13 |         mut self.inner\n   |         ^^^ expected expression\n</code></pre>\n\n<p>(found keyword mut is what my local compiler says, not the one in the playground link below though!)</p>\n\n<p>Hm, makes sense, right? <code>mut</code> alone is not an expression</p>\n\n<p>But how to return a mutable reference then?</p>\n\n<p>Okay, let's get experimenting a bit, shall we?</p>\n\n<pre><code>pub fn get_inner_mut(&amp;mut self) -&gt; &amp;mut &amp;Inner {\n    &amp;mut &amp;self.inner\n}\n</code></pre>\n\n<p>(Attention, changed signature!)</p>\n\n<p>leads to:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:13:9\n   |\n13 |         &amp;mut &amp;self.inner\n   |         ^^^^^^^^^^^^^^^^ lifetime mismatch\n   |\n   = note: expected type `&amp;mut &amp;dyn Inner`\n              found type `&amp;mut &amp;'a (dyn Inner + 'a)`\nnote: the anonymous lifetime #1 defined on the method body at 12:5...\n  --&gt; src/lib.rs:12:5\n   |\n12 | /     pub fn get_inner_mut(&amp;mut self) -&gt; &amp;mut &amp;Inner {\n13 | |         &amp;mut &amp;self.inner\n14 | |     }\n   | |_____^\nnote: ...does not necessarily outlive the lifetime 'a as defined on the impl at 7:6\n  --&gt; src/lib.rs:7:6\n   |\n7  | impl&lt;'a&gt; Thing&lt;'a&gt; {\n   |      ^^\n</code></pre>\n\n<p>Could this all be solved with just specifying the lifetime?</p>\n\n<p>Here is <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ef5cc6cd6011c690ae291347ef570446\" rel=\"nofollow noreferrer\">the playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 7, "creation_date": 1551196953, "post_id": 54889521, "comment_id": 96548191, "body": "Always have a look at the standard documentation before asking."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1551249077, "post_id": 54889521, "comment_id": 96566543, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/6296945/size-vs-capacity-of-a-vector\">size vs capacity of a vector?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1551197625, "post_id": 54889522, "comment_id": 96548576, "body": "As a side note, it&#39;d be more normal to use <code>assert_eq!(vec.len(), 5);</code>"}], "tags": [], "owner": {"reputation": 1761, "user_id": 3469273, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/u99NL.png?s=128&g=1", "display_name": "mfluehr", "link": "https://stackoverflow.com/users/3469273/mfluehr"}, "is_accepted": false, "score": 1, "last_activity_date": 1551199926, "last_edit_date": 1551199926, "creation_date": 1551196747, "answer_id": 54889522, "question_id": 54889521, "link": "https://stackoverflow.com/questions/54889521/whats-the-difference-between-len-and-capacity/54889522#54889522", "title": "What&#39;s the difference between len() and capacity()?", "body": "<p><code>len()</code> returns the number of elements in the vector (i.e., the vector's length). In the example below, <code>vec</code> contains 5 elements, so <code>len()</code> returns <code>5</code>.</p>\n\n<p><code>capacity()</code> returns the number of elements the vector <strong>can hold</strong> (without reallocating memory). In the example below, <code>vec</code> can hold <code>105</code> elements, since we use <a href=\"https://static.rust-lang.org/doc/master/std/vec/struct.Vec.html#method.reserve\" rel=\"nofollow noreferrer\"><code>reserve()</code></a> to allocate at least 100 slots in addition to the original 5 (more might be allocated in order to minimize the number of allocations).</p>\n\n<pre><code>fn main() {\n    let mut vec = vec![1, 2, 3, 4, 5];\n    vec.reserve(100);\n    assert!(vec.len() == 5);\n    assert!(vec.capacity() &gt;= 105);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 3, "last_activity_date": 1551198250, "last_edit_date": 1592644375, "creation_date": 1551196926, "answer_id": 54889560, "question_id": 54889521, "link": "https://stackoverflow.com/questions/54889521/whats-the-difference-between-len-and-capacity/54889560#54889560", "title": "What&#39;s the difference between len() and capacity()?", "body": "<p><a href=\"https://en.wikipedia.org/wiki/Dynamic_array\" rel=\"nofollow noreferrer\">Growable vectors</a> reserve space for future additions, hence the difference between allocated space (<em>capacity</em>) and actually used space (<em>length</em>).</p>\n<p>This is explained in the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">standard library's documentation for <code>Vec</code></a>:</p>\n<blockquote>\n<p>The <strong>capacity</strong> of a vector is the amount of space allocated for any future elements that will be added onto the vector. This is not to be confused with the <strong>length</strong> of a vector, which specifies the number of actual elements within the vector. If a vector's length exceeds its capacity, its capacity will automatically be increased, but its elements will have to be reallocated.</p>\n<p>For example, a vector with capacity 10 and length 0 would be an empty vector with space for 10 more elements. Pushing 10 or fewer elements onto the vector will not change its capacity or cause reallocation to occur. However, if the vector's length is increased to 11, it will have to reallocate, which can be slow. For this reason, it is recommended to use <code>Vec::with_capacity</code> whenever possible to specify how big the vector is expected to get.</p>\n</blockquote>\n"}], "owner": {"reputation": 1761, "user_id": 3469273, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/u99NL.png?s=128&g=1", "display_name": "mfluehr", "link": "https://stackoverflow.com/users/3469273/mfluehr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 594, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1551199926, "creation_date": 1551196747, "question_id": 54889521, "link": "https://stackoverflow.com/questions/54889521/whats-the-difference-between-len-and-capacity", "title": "What&#39;s the difference between len() and capacity()?", "body": "<p>When I create a vector, the length and the capacity are the same. What is the difference between these methods?</p>\n\n<pre><code>fn main() {\n    let vec = vec![1, 2, 3, 4, 5];\n    println!(\"Length: {}\", vec.len()); // Length: 5\n    println!(\"Capacity: {}\", vec.capacity()); // Capacity: 5\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1551196983, "post_id": 54887383, "comment_id": 96548208, "body": "If you can, use an owned string. It will remove a lot of difficulties."}, {"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551197104, "post_id": 54887383, "comment_id": 96548265, "body": "@DarthBoiethios You mean key: String instead of key: &amp;str?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551197186, "post_id": 54887383, "comment_id": 96548320, "body": "Yes, that will remove all your <code>&#39;a</code> lifetimes that spread around."}, {"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551197419, "post_id": 54887383, "comment_id": 96548457, "body": "I think you&#39;re right. It makes no sense to store a reference to str... as a key. The can stand alone owned by the pair struct."}], "answers": [{"comments": [{"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "edited": false, "score": 0, "creation_date": 1551197148, "post_id": 54887718, "comment_id": 96548289, "body": "Thanks for the explanation, I think I&#39;ve to read the chapter about lifetimes one more time."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551272154, "post_id": 54887718, "comment_id": 96579018, "body": "When I read <code>deny rust_2018_idioms</code> I am thinking that those idioms are now denied, when actually it&#39;s enforcing them. Hum... :D"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1551273005, "post_id": 54887718, "comment_id": 96579525, "body": "@MatthieuM. yeah, I don&#39;t like it either. I feel like I&#39;ve heard some argument about why it makes sense with this polarity, but I don&#39;t recall it now."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1551193069, "last_edit_date": 1551193069, "creation_date": 1551191152, "answer_id": 54887718, "question_id": 54887383, "link": "https://stackoverflow.com/questions/54887383/why-does-returning-a-mutable-reference-from-a-method-prevent-calling-any-other-m/54887718#54887718", "title": "Why does returning a mutable reference from a method prevent calling any other methods, even when the reference goes out of scope?", "body": "<p>TL;DR</p>\n\n<pre><code>fn get&lt;T&gt;(&amp;self) -&gt; &amp;T\nfn get_mut&lt;T&gt;(&amp;mut self) -&gt; &amp;mut T\n\nfn find(&amp;self) -&gt; &amp;Pair&lt;'a&gt;\nfn find_mut(&amp;mut self) -&gt; &amp;mut Pair&lt;'a&gt;\n</code></pre>\n\n<hr>\n\n<p>Creating a <a href=\"/help/mcve\">MCVE</a> is a vitally important skill to being an effective programmer. We catalog Rust-specific techniques on <a href=\"https://stackoverflow.com/tags/rust/info\">the tag wiki</a>. Here's one for your code:</p>\n\n<pre><code>#[derive(Debug, Default)]\nstruct Pair&lt;'a&gt;(&amp;'a str);\n\n#[derive(Debug, Default)]\nstruct Database&lt;'a&gt; {\n    data: &amp;'a str,\n}\n\nimpl&lt;'a&gt; Database&lt;'a&gt; {\n    fn find(&amp;self) -&gt; &amp;'a Pair {\n        unimplemented!()\n    }\n\n    fn find_mut(&amp;mut self) -&gt; &amp;'a mut Pair {\n        unimplemented!()\n    }\n}\n\nfn main() {\n    let mut db = Database::default();\n    {\n        db.find_mut();\n    }\n    db.find();\n}\n</code></pre>\n\n<p>The problem occurs because you've sprinkled lifetimes about without them being correct. Specifically:</p>\n\n<pre><code>fn find(&amp;self) -&gt; &amp;'a Pair\nfn find_mut(&amp;mut self) -&gt; &amp;'a mut Pair\n</code></pre>\n\n<p>These methods say that they are going to return a reference <strong>to a <code>Pair</code></strong> that lasts as long as the data you inserted into the <code>Database</code>. This cannot be true because the data you've inserted is a <code>&amp;'static str</code>.</p>\n\n<p>You actually want:</p>\n\n<pre><code>fn find(&amp;self) -&gt; &amp;Pair&lt;'a&gt;\nfn find_mut(&amp;mut self) -&gt; &amp;mut Pair&lt;'a&gt;\n</code></pre>\n\n<p>Adding <code>#![deny(rust_2018_idioms)]</code> to your crate helps catch these, although the error messages aren't perfect yet:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: hidden lifetime parameters in types are deprecated\n  --&gt; src/main.rs:12:27\n   |\n12 |     fn find(&amp;self) -&gt; &amp;'a Pair {\n   |                           ^^^^- help: indicate the anonymous lifetime: `&lt;'_&gt;`\n\nerror: hidden lifetime parameters in types are deprecated\n  --&gt; src/main.rs:16:39\n   |\n16 |     fn find_mut(&amp;mut self) -&gt; &amp;'a mut Pair {\n   |                                       ^^^^- help: indicate the anonymous lifetime: `&lt;'_&gt;`\n</code></pre>\n\n<p>If we then expand back out to the complete original problem, we see that the problem still hasn't gone away. Since we just had an issue with the lifetime inside of <code>Pair</code>, let's look to see if there are any more related issues:</p>\n\n<pre><code>fn get&lt;T&gt;(&amp;'a self) -&gt; &amp;'a T\nfn get_mut&lt;T&gt;(&amp;'a mut self) -&gt; &amp;'a mut T\n</code></pre>\n\n<p>This states that <code>self</code> will live as long as <code>self.key</code>, which is not what you want 99% of the time. Remove these explcit lifetimes to allow normal lifetime elision to take place:</p>\n\n<pre><code>fn get&lt;T&gt;(&amp;self) -&gt; &amp;T\nfn get_mut&lt;T&gt;(&amp;mut self) -&gt; &amp;mut T\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31067031/155423\">Cannot borrow as mutable more than once at a time in one code - but can in another very similar</a></li>\n</ul>\n"}], "owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 54887718, "answer_count": 1, "score": 0, "last_activity_date": 1551193069, "creation_date": 1551190106, "last_edit_date": 1551191945, "question_id": 54887383, "link": "https://stackoverflow.com/questions/54887383/why-does-returning-a-mutable-reference-from-a-method-prevent-calling-any-other-m", "title": "Why does returning a mutable reference from a method prevent calling any other methods, even when the reference goes out of scope?", "body": "<p>I want to write a simple key/value store that can store anything. I started with a small wrapper around a <code>HashMap</code>:</p>\n\n<pre><code>use std::any::{Any, TypeId};\nuse std::collections::HashMap;\n\n#[derive(Debug)]\nstruct Pair&lt;'a&gt; {\n    key: &amp;'a str,\n    value: Box&lt;Any&gt;,\n    data_type: TypeId,\n}\n\nimpl&lt;'a&gt; Pair&lt;'a&gt; {\n    fn new&lt;T&gt;(k: &amp;'a str, v: T) -&gt; Self\n    where\n        T: Any + 'static,\n    {\n        Self {\n            key: k,\n            value: Box::new(v),\n            data_type: TypeId::of::&lt;T&gt;(),\n        }\n    }\n\n    fn update&lt;T&gt;(&amp;mut self, new_value: T)\n    where\n        T: Any + 'static,\n    {\n        self.data_type = TypeId::of::&lt;T&gt;();\n        self.value = Box::new(new_value);\n    }\n\n    fn get&lt;T&gt;(&amp;'a self) -&gt; &amp;'a T\n    where\n        T: Any + 'static,\n    {\n        self.value.downcast_ref::&lt;T&gt;().unwrap()\n    }\n\n    fn get_mut&lt;T&gt;(&amp;'a mut self) -&gt; &amp;'a mut T\n    where\n        T: Any + 'static,\n    {\n        self.value.downcast_mut::&lt;T&gt;().unwrap()\n    }\n}\n\n#[derive(Debug)]\nstruct Database&lt;'a&gt; {\n    data: HashMap&lt;&amp;'a str, Pair&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; Database&lt;'a&gt; {\n    fn new() -&gt; Self {\n        Self {\n            data: HashMap::new(),\n        }\n    }\n\n    fn insert(&amp;mut self, data: Pair&lt;'a&gt;) {\n        self.data.insert(data.key, data);\n    }\n\n    fn find(&amp;self, key: &amp;str) -&gt; &amp;'a Pair {\n        self.data.get(key).unwrap()\n    }\n\n    fn find_mut(&amp;mut self, key: &amp;str) -&gt; &amp;'a mut Pair {\n        self.data.get_mut(key).unwrap()\n    }\n\n    fn remove(&amp;mut self, key: &amp;str) {\n        self.data.remove(key);\n    }\n}\n\n#[derive(Debug)]\nstruct Position {\n    x: f32,\n    y: f32,\n}\n\nfn main() {\n    let mut db = Database::new();\n\n    // add data\n    {\n        let pair1 = Pair::new(\"testkey\", \"Awesome string...\".to_owned());\n        let pair2 = Pair::new(\"position\", Position { x: 0.0, y: 0.0 });\n\n        db.insert(pair1);\n        db.insert(pair2);\n    }\n\n    // change data\n    {\n        let pair = db.find_mut(\"position\");\n        pair.get_mut::&lt;Position&gt;().x = 50.0;\n    } // &lt;--- end of &amp;mut Pair\n\n    // read data\n    let pos = db.find(\"position\");\n\n    println!(\"{:?}\", pos);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `db` as immutable because it is also borrowed as mutable\n   --&gt; src/main.rs:101:15\n    |\n96  |         let pair = db.find_mut(\"position\");\n    |                    -- mutable borrow occurs here\n...\n101 |     let pos = db.find(\"position\");\n    |               ^^\n    |               |\n    |               immutable borrow occurs here\n    |               mutable borrow later used here\n</code></pre>\n\n<p>I don't understand the borrow checker here. I scoped everything so <code>pair</code> don't exist by <code>db.find(\"position\")</code>. Why does it not work? If I understand the documentation correctly, it's to use mutable vars in a nested scope.</p>\n\n<p>I wrote a simpler example, I came from:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut x = 5;\n\n    {\n        let y = &amp;mut x;\n        *y = 10;\n    }\n\n    println!(\"{}\", x);\n}\n</code></pre>\n\n<p>This works as expected. I'm really stuck with the borrow checker.</p>\n"}, {"tags": ["rust", "type-inference", "type-deduction", "docopt"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 7, "last_activity_date": 1551378676, "last_edit_date": 1551378676, "creation_date": 1551183317, "answer_id": 54885365, "question_id": 54884862, "link": "https://stackoverflow.com/questions/54884862/how-does-the-type-deduction-work-in-this-docopt-example/54885365#54885365", "title": "How does the type deduction work in this Docopt example?", "body": "<p><em>\"How does it work?\"</em> might be too big of a question for Stack Overflow but (along with other languages like Scala and Haskell) Rust's type system is based on <a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system\" rel=\"nofollow noreferrer\">the Hindley-Milner type system</a>, albeit with many modifications and extensions.</p>\n\n<p>Simplifying greatly, the idea is to treat each unknown type as a variable, and define the relationships between types as a series of constraints, which can then be solved by an algorithm. In some ways it's similar to simultaneous equations you may have solved in algebra at school.</p>\n\n<hr>\n\n<p><em>Type inference</em> is a feature of Rust (and other languages in the extended Hindley-Milner family) that is exploited pervasively in idiomatic code to:</p>\n\n<ul>\n<li>reduce the noise of type annotations</li>\n<li>improve maintainability by not hard-coding types in multiple places (DRY)</li>\n</ul>\n\n<p>Rust's type inference is powerful and, as you say, can flow both ways. To use <code>Vec&lt;T&gt;</code> as a simpler and more familiar example, any of these are valid:</p>\n\n<pre><code>let vec = Vec::new(1_i32);\nlet vec = Vec::&lt;i32&gt;::new();\nlet vec: Vec&lt;i32&gt; = Vec::new();\n</code></pre>\n\n<p>The type can even be inferred just based on how a type is later used:</p>\n\n<pre><code>let mut vec = Vec::new();\n// later...\nvec.push(1_i32);\n</code></pre>\n\n<p>Another nice example is picking the correct string parser, based on the expected type:</p>\n\n<pre><code>let num: f32 = \"100\".parse().unwrap();\nlet num: i128 = \"100\".parse().unwrap();\nlet address: SocketAddr = \"127.0.0.1:8080\".parse().unwrap();\n</code></pre>\n\n<hr>\n\n<p>So what about your original example? </p>\n\n<ol>\n<li><a href=\"https://docs.rs/docopt/1.0.2/docopt/struct.Docopt.html#method.new\" rel=\"nofollow noreferrer\"><code>Docopt::new</code></a> returns a <code>Result&lt;Docopt, Error&gt;</code>, which will be <code>Result::Err&lt;Error&gt;</code> if the supplied options can't be parsed as arguments. At this point, there is no knowledge of if the arguments are valid, just that they are correctly formed.</li>\n<li>Next, <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.and_then\" rel=\"nofollow noreferrer\"><code>and_then</code></a> has the following signature:\n\n<pre><code>pub fn and_then&lt;U, F&gt;(self, op: F) -&gt; Result&lt;U, E&gt; \nwhere\n    F: FnOnce(T) -&gt; Result&lt;U, E&gt;,\n</code></pre>\n\nThe variable <code>self</code> has type <code>Result&lt;T, E&gt;</code> where <code>T</code> is <code>Docopt</code> and <code>E</code> is <code>Error</code>, deduced from step 1. <code>U</code> is still unknown, even after you supply the closure <code>|d| d.deserialize()</code>.</li>\n<li>But we know that <code>T</code> is <code>Docopts</code>, so <code>deserialize</code> is <a href=\"https://docs.rs/docopt/1.0.2/docopt/struct.Docopt.html#method.deserialize\" rel=\"nofollow noreferrer\"><code>Docopts::deserialize</code></a>, which has the signature:\n\n<pre><code>fn deserialize&lt;'a, 'de: 'a, D&gt;(&amp;'a self) -&gt; Result&lt;D, Error&gt; \nwhere\n    D: Deserialize&lt;'de&gt;\n</code></pre>\n\nThe variable <code>self</code> has type <code>Docopts</code>. <code>D</code> is still unknown, but we know it is the same type as <code>U</code> from step 2.</li>\n<li><a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or_else\" rel=\"nofollow noreferrer\"><code>Result::unwrap_or_else</code></a> has the signature:\n\n<pre><code>fn unwrap_or_else&lt;F&gt;(self, op: F) -&gt; T \nwhere\n    F: FnOnce(E) -&gt; T\n</code></pre>\n\nThe variable <code>self</code> has type <code>Result&lt;T, Error&gt;</code>. But we know that <code>T</code> is the same as <code>U</code> and <code>D</code> from the previous step.</li>\n<li>We then assign to a variable of type <code>Args</code>, so <code>T</code> from the previous step is <code>Args</code>, which means that the <code>D</code> in step 3 (and <code>U</code> from step 2) is also <code>Args</code>.</li>\n<li>The compiler can now deduce that when you wrote <code>deserialize</code> you meant the method <code>&lt;Args as Deserialize&gt;::deserialize</code>, which was derived automatically with the <code>#[derive(Deserialize)]</code> attribute.</li>\n</ol>\n"}], "owner": {"reputation": 1375, "user_id": 6780389, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/e0e4a17ac5c2908e5c892f6f8f87feb2?s=128&d=identicon&r=PG&f=1", "display_name": "saga", "link": "https://stackoverflow.com/users/6780389/saga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1551378676, "creation_date": 1551181679, "last_edit_date": 1551189715, "question_id": 54884862, "link": "https://stackoverflow.com/questions/54884862/how-does-the-type-deduction-work-in-this-docopt-example", "title": "How does the type deduction work in this Docopt example?", "body": "<p>Take a look at this code using the docopt library:</p>\n\n<pre><code>const USAGE: &amp;'static str = \"...something...\";\n\n#[derive(Deserialize)]\nstruct Args {\n    flag: bool,\n}\n\ntype Result&lt;T&gt; = result::Result&lt;T, Box&lt;error::Error + Send + Sync&gt;&gt;;\n\nfn main() {\n    let mut args: Args = Docopt::new(USAGE)\n        .and_then(|d| d.deserialize())\n        .unwrap_or_else(|e| e.exit());\n}\n</code></pre>\n\n<p>If you look at the expression to the right of equals sign, you'll see that it doesn't mention the <code>Args</code> struct anywhere. How does the compiler deduce the return type of this expression? Can the type information flow in opposite direction (from initialization target to initializer expression) in Rust?</p>\n"}, {"tags": ["reference", "rust", "immutability", "mutability"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1551182333, "post_id": 54884678, "comment_id": 96538960, "body": "&quot;how can you use an immutable Option&lt;&gt;, by reference, that contains a mutable reference?&quot; you can&#39;t as explain by the compiler &quot;<code>t</code> is a <code>&amp;</code> reference, so the data it refers to cannot be borrowed as mutable&quot;"}, {"owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551184865, "post_id": 54884678, "comment_id": 96540442, "body": "@Stargateur - .Line 12 is <code>(*handle) = None;</code>"}, {"owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551184921, "post_id": 54884678, "comment_id": 96540487, "body": "@Stargateur - I&#39;m not mutating the option, though, because it contains a reference and I am not changing the reference. After my mutation, the reference is still pointing to the same thing. I am mutating something internal to that thing."}, {"owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551185419, "post_id": 54884678, "comment_id": 96540774, "body": "@Stargateur - Furthermore, using <code>RefCell</code> would not achieve the pattern that I want because I could change the <code>RefCell</code> to contain a different <code>Thing</code> entirely -- essentially the same as reassigning the <code>Option</code> to none. I could rewrite <code>Thing</code> to use <code>RefCell</code>, internally, but that would mean that I have to restructure my entire library and incur the cost of runtime-borrow-checking, everywhere."}], "answers": [{"comments": [{"owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "edited": false, "score": 0, "creation_date": 1551184810, "post_id": 54885076, "comment_id": 96540410, "body": "<code>RefCell</code> is there for deferring mutability checks to runtime. I want mutability checks at compile time and there should be no reason why that wouldn&#39;t be possible because I am not trying to mutate the <code>Option&lt;&gt;</code>. I am not event trying to change the options value because, after my mutations, the reference itself is not changed, only the interior state of the referenced object."}, {"owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "edited": false, "score": 0, "creation_date": 1551185473, "post_id": 54885076, "comment_id": 96540809, "body": "Furthermore, using RefCell would not achieve the pattern that I want because I could change the RefCell to contain a different Thing entirely -- essentially the same as reassigning the Option to none. I could rewrite Thing to use RefCell, internally, but that would mean that I have to restructure my entire library and incur the cost of runtime-borrow-checking, everywhere."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "edited": false, "score": 3, "creation_date": 1551185620, "post_id": 54885076, "comment_id": 96540903, "body": "@Xharlie You could reassign the &quot;different Thing entirely&quot; through a <code>&amp;mut</code> reference too."}, {"owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "edited": false, "score": 0, "creation_date": 1551186167, "post_id": 54885076, "comment_id": 96541251, "body": "In that case, I don&#39;t gain anything by using RefCell as opposed to using mutable <code>Option</code>&#39;s."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "edited": false, "score": 2, "creation_date": 1551186361, "post_id": 54885076, "comment_id": 96541369, "body": "@Xharlie Correct. Mutable Options might be better because they encode exactly what is going on and let the type-checker do it&#39;s thing. I suggested interior mutability only because you specifically asked for a solution with an immutable outer type."}, {"owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "edited": false, "score": 0, "creation_date": 1551187571, "post_id": 54885076, "comment_id": 96542094, "body": "I think you have helped me understand the problem. It is not a problem because my requirement doesn&#39;t make sense but rather because of the power that an immutable reference to an <code>Option&lt;&amp;mut T&gt;</code> would provide. Specifically, because you can have many immutable references, this would essentially allow one to have many <i>mutable</i> reference, too, and completely break the mutability checking rules."}, {"owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "edited": false, "score": 0, "creation_date": 1551187753, "post_id": 54885076, "comment_id": 96542191, "body": "I still don&#39;t believe that <code>RefCell</code> is the answer, though. So, what I want is something like an <code>Option&lt;T&gt;</code> that, even when mutable, does not provide mutations on itself. <code>Option&lt;T&gt;</code> without <code>take()</code> et al.  For example, something like the <code>Handle</code> struct I hacked together in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b4f73d38ee681f6a093ae2c6237fb7dc\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1551185547, "last_edit_date": 1551185547, "creation_date": 1551182361, "answer_id": 54885076, "question_id": 54884678, "link": "https://stackoverflow.com/questions/54884678/how-can-you-use-an-immutable-option-by-reference-that-contains-a-mutable-referen/54885076#54885076", "title": "How can you use an immutable Option by reference that contains a mutable reference?", "body": "<p>You can't extract a mutable reference from an immutable one, even a reference to its internals. That's kind of the point! Multiple aliases of immutable references are allowed so, if Rust allowed you to do that, you could have a situation where two pieces of code are able to mutate the same data at the same time.</p>\n\n<p>Rust provides several escape hatches for <a href=\"https://doc.rust-lang.org/1.30.0/book/2018-edition/ch15-05-interior-mutability.html\" rel=\"nofollow noreferrer\">interior mutability</a>, for example the <code>RefCell</code>:</p>\n\n<pre><code>use std::cell::RefCell;\n\nfn try_increment(handle: &amp;Option&lt;RefCell&lt;Thing&gt;&gt;) -&gt; bool {\n    if let Some(t) = handle {\n        t.borrow_mut().increment_self();\n        true\n    } else {\n        println!(\"warning: increment failed\");\n        false\n    }\n}\n\nfn try_increment_twice(handle: Option&lt;RefCell&lt;Thing&gt;&gt;) {\n    try_increment(&amp;handle);\n    try_increment(&amp;handle);\n}\n\nfn main() {\n    let mut thing = RefCell::new(Thing(0));\n    try_increment_twice(Some(thing));\n    try_increment_twice(None);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "is_accepted": true, "score": 2, "last_activity_date": 1551190150, "last_edit_date": 1551190150, "creation_date": 1551189686, "answer_id": 54887242, "question_id": 54884678, "link": "https://stackoverflow.com/questions/54884678/how-can-you-use-an-immutable-option-by-reference-that-contains-a-mutable-referen/54887242#54887242", "title": "How can you use an immutable Option by reference that contains a mutable reference?", "body": "<p>TL;DR: The answer is <em>No</em>, I can't.</p>\n\n<p>After the discussions with @Peter Hall and @Stargateur, I have come to understand why I need to use <code>&amp;mut Option&lt;&amp;mut Thing&gt;</code> everywhere. <code>RefCell&lt;&gt;</code> would also be a feasible work-around but it is no neater and does not really achieve the pattern I was originally seeking to implement.</p>\n\n<p>The problem is this: if one were allowed to mutate the object for which one has only an <em>immutable</em> reference to an <code>Option&lt;&amp;mut T&gt;</code> one could use this power to break the borrowing rules entirely. Concretely, you could, essentially, have many <strong><em>mutable</em></strong> references to the same object because you could have many such immutable references.</p>\n\n<p>I <em>knew</em> there was only one <em>mutable</em> reference to the <code>Thing</code> (owned by the <code>Option&lt;&gt;</code>) but, as soon as I started taking references to the <code>Option&lt;&gt;</code>, the compiler no longer knew that there weren't many of those.</p>\n\n<p>The best version of the pattern is as follows:</p>\n\n<pre><code>fn try_increment(handle: &amp;mut Option&lt;&amp;mut Thing&gt;) -&gt; bool {\n    if let Some(ref mut t) = handle {\n        t.increment_self();\n        true\n    }\n    else {\n        println!(\"warning: increment failed\");\n        false\n    }\n}\n\nfn try_increment_twice(mut handle: Option&lt;&amp;mut Thing&gt;) {\n    try_increment(&amp;mut handle);\n    try_increment(&amp;mut handle);\n}\n\nfn main() {\n    try_increment_twice(None);\n\n    let mut thing = Thing(0);\n    try_increment_twice(Some(&amp;mut thing));\n\n    try_increment_twice(None);\n}\n</code></pre>\n\n<p>Notes:</p>\n\n<ol>\n<li>The <code>Option&lt;&gt;</code> holds the only extant mutable reference to the <code>Thing</code></li>\n<li><code>try_increment_twice()</code> takes ownership of the <code>Option&lt;&gt;</code></li>\n<li><code>try_increment()</code> <em>must</em> take the <code>Option&lt;&gt;</code> as <code>&amp;mut</code> so that the compiler knows that it has the only mutable reference to the <code>Option&lt;&gt;</code>, during the call</li>\n<li>If the compiler knows that <code>try_increment()</code> has the only mutable reference to the <code>Option&lt;&gt;</code> which holds the unique mutable reference to the <code>Thing</code>, the compiler knows that the borrow rules have not been violated.</li>\n</ol>\n\n<h3>Another Experiment</h3>\n\n<p>The problem of the mutability of <code>Option&lt;&gt;</code> remains because one can call <code>take()</code> et al. on a mutable <code>Option&lt;&gt;</code>, breaking everything following.</p>\n\n<p>To implement the pattern that I wanted, I need something that is <em>like</em> an <code>Option&lt;&gt;</code> but, even if it is <em>mutable</em>, it cannot be mutated. Something like this:</p>\n\n<pre><code>struct Handle&lt;'a&gt; {\n    value: Option&lt;&amp;'a mut Thing&gt;,\n}\n\nimpl&lt;'a&gt; Handle&lt;'a&gt; {\n    fn new(value: &amp;'a mut Thing) -&gt; Self {\n        Self {\n            value: Some(value),\n        }\n    }\n\n    fn empty() -&gt; Self {\n        Self {\n            value: None,\n        }\n    }\n\n    fn try_mutate&lt;T, F: Fn(&amp;mut Thing) -&gt; T&gt;(&amp;mut self, mutation: F) -&gt; Option&lt;T&gt; {\n        if let Some(ref mut v) = self.value {\n            Some(mutation(v))\n        }\n        else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>Now, I thought, I can pass around <code>&amp;mut Handle</code>'s all day long and know that someone who has a <code>Handle</code> can only mutate its contents, not the handle itself. (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a900b896d8932c22c6ac9e8bbb2116d0\" rel=\"nofollow noreferrer\">See Playground</a>)</p>\n\n<p>Unfortunately, even this gains nothing because, if you have a mutable reference, you can always reassign it with the dereferencing operator:</p>\n\n<pre><code>fn try_increment(handle: &amp;mut Handle) -&gt; bool {\n    if let Some(_) = handle.try_mutate(|t| { t.increment_self() }) {\n        // This breaks future calls:\n        (*handle) = Handle::empty();\n\n        true\n    }\n    else {\n        println!(\"warning: increment failed\");\n        false\n    }\n}\n</code></pre>\n\n<p>Which is all fine and well.</p>\n\n<p>Bottom line conclusion: just use <code>&amp;mut Option&lt;&amp;mut T&gt;</code></p>\n"}], "owner": {"reputation": 1918, "user_id": 3683187, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/tj2pu.png?s=128&g=1", "display_name": "Xharlie", "link": "https://stackoverflow.com/users/3683187/xharlie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 340, "favorite_count": 0, "accepted_answer_id": 54887242, "answer_count": 2, "score": 1, "last_activity_date": 1551190150, "creation_date": 1551181084, "last_edit_date": 1551189799, "question_id": 54884678, "link": "https://stackoverflow.com/questions/54884678/how-can-you-use-an-immutable-option-by-reference-that-contains-a-mutable-referen", "title": "How can you use an immutable Option by reference that contains a mutable reference?", "body": "<p>Here's a <code>Thing</code>:</p>\n\n<pre><code>struct Thing(i32);\n\nimpl Thing {\n    pub fn increment_self(&amp;mut self) {\n        self.0 += 1;\n        println!(\"incremented: {}\", self.0);\n    }\n}\n</code></pre>\n\n<p>And here's a function that tries to mutate a <code>Thing</code> and returns either true or false, depending on if a <code>Thing</code> is available:</p>\n\n<pre><code>fn try_increment(handle: Option&lt;&amp;mut Thing&gt;) -&gt; bool {\n    if let Some(t) = handle {\n        t.increment_self();\n        true\n    } else {\n        println!(\"warning: increment failed\");\n        false\n    }\n}\n</code></pre>\n\n<p>Here's a sample of usage:</p>\n\n<pre><code>fn main() {\n    try_increment(None);\n\n    let mut thing = Thing(0);\n    try_increment(Some(&amp;mut thing));\n    try_increment(Some(&amp;mut thing));\n\n    try_increment(None);\n}\n</code></pre>\n\n<p>As written, above, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a695198477ed5c8121362df22297d365\" rel=\"nofollow noreferrer\">it works just fine (link to Rust playground)</a>. Output below:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: increment failed\nincremented: 1\nincremented: 2\nwarning: increment failed\n</code></pre>\n\n<p>The problem arises when I want to write a function that mutates the <code>Thing</code> twice. For example, the following does not work:</p>\n\n<pre><code>fn try_increment_twice(handle: Option&lt;&amp;mut Thing&gt;) {\n    try_increment(handle);\n    try_increment(handle);\n}\n\nfn main() {\n    try_increment_twice(None);\n\n    let mut thing = Thing(0);\n    try_increment_twice(Some(&amp;mut thing));\n\n    try_increment_twice(None);\n}\n</code></pre>\n\n<p>The error makes perfect sense. The first call to <code>try_increment(handle)</code> gives ownership of <code>handle</code> away and so the second call is illegal. As is often the case, the Rust compiler yields a sensible error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   |\n24 |     try_increment(handle);\n   |                   ------ value moved here\n25 |     try_increment(handle);\n   |                   ^^^^^^ value used here after move\n   |\n</code></pre>\n\n<p>In an attempt to solve this, I thought it would make sense to pass <code>handle</code> by reference. It should be an <em>immutable</em> reference, mind, because I don't want <code>try_increment</code> to be able to change <code>handle</code> itself (assigning <code>None</code> to it, for example) only to be able to call mutations on its value.</p>\n\n<p>My problem is that I couldn't figure out how to do this.</p>\n\n<p>Here <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2921c0146b834ad1ce1acc01dbb05392\" rel=\"nofollow noreferrer\">is the closest working version that I could get</a>:</p>\n\n<pre><code>struct Thing(i32);\n\nimpl Thing {\n    pub fn increment_self(&amp;mut self) {\n        self.0 += 1;\n        println!(\"incremented: {}\", self.0);\n    }\n}\n\nfn try_increment(handle: &amp;mut Option&lt;&amp;mut Thing&gt;) -&gt; bool {\n    // PROBLEM: this line is allowed!\n    // (*handle) = None;\n\n    if let Some(ref mut t) = handle {\n        t.increment_self();\n        true\n    } else {\n        println!(\"warning: increment failed\");\n        false\n    }\n}\n\nfn try_increment_twice(mut handle: Option&lt;&amp;mut Thing&gt;) {\n    try_increment(&amp;mut handle);\n    try_increment(&amp;mut handle);\n}\n\nfn main() {\n    try_increment_twice(None);\n\n    let mut thing = Thing(0);\n    try_increment_twice(Some(&amp;mut thing));\n\n    try_increment_twice(None);\n}\n</code></pre>\n\n<p>This code runs, as expected, but the <code>Option</code> is now passed about by <em>mutable</em> reference and that is <em>not</em> what I want:</p>\n\n<ul>\n<li>I'm allowed to mutate the <code>Option</code> by reassigning <code>None</code> to it, breaking all following mutations. (Uncomment line 12 (<code>(*handle) = None;</code>) for example.)</li>\n<li>It's messy: There are a whole lot of extraneous <code>&amp;mut</code>'s lying about.</li>\n<li>It's doubly messy: Heaven only knows why I must use <code>ref mut</code> in the <code>if let</code> statement while the convention is to use <code>&amp;mut</code> everywhere else.</li>\n<li>It defeats the purpose of having the complicated borrow-checking and mutability checking rules in the compiler.</li>\n</ul>\n\n<p>Is there any way to actually achieve what I want: passing an immutable <code>Option</code> around, by reference, and actually being able to use its contents?</p>\n"}, {"tags": ["struct", "rust", "tuples"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 6, "creation_date": 1551172061, "post_id": 54881822, "comment_id": 96532795, "body": "No. Use named fields instead <code>Rect { width: i32, height: i32 }</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "edited": false, "score": 0, "creation_date": 1551174323, "post_id": 54882021, "comment_id": 96534211, "body": "Yeah, I know. I think it would be nice to have hints in tuples. For instance given: struct RGB(red: i32,blue: i32, green: i32) . One could get names hints while writing let rgb = RGB(1, 2, 3) . C# has feature called semantic names in tuples: <a href=\"https://docs.microsoft.com/en-us/dotnet/csharp/tuples\" rel=\"nofollow noreferrer\">docs.microsoft.com/en-us/dotnet/csharp/tuples</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "edited": false, "score": 5, "creation_date": 1551174858, "post_id": 54882021, "comment_id": 96534573, "body": "What is the advantage over named fields?"}, {"owner": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "edited": false, "score": 0, "creation_date": 1551175943, "post_id": 54882021, "comment_id": 96535249, "body": "Less syntactic overhead. It turns out there is already proposal for this <a href=\"https://github.com/rust-lang/rfcs/pull/2584\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/2584</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "edited": false, "score": 1, "creation_date": 1551176623, "post_id": 54882021, "comment_id": 96535623, "body": "I don&#39;t think that RFC#2584 does what you want."}, {"owner": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "edited": false, "score": 0, "creation_date": 1551179043, "post_id": 54882021, "comment_id": 96536994, "body": "Good point, I will double check this. Advantage over named fields is that you have unnamed fields. Same way as you compare tuple vs. struct. Basically you have the following: 1. tuple: no names, structural compatibility, (tuples today) 2: tuple with names and structural compatibility (not possible). 3. named fields with structural compatibility 4. named fields without structural compatibility (named fields today)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "edited": false, "score": 0, "creation_date": 1551189558, "post_id": 54882021, "comment_id": 96543339, "body": "@NN_ I&#39;d argue that such a feature would be worse because then you would have <b>two</b> names for the same field."}, {"owner": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "edited": false, "score": 0, "creation_date": 1551190491, "post_id": 54882021, "comment_id": 96543931, "body": "You already can use several names for the the same tuple item. It is not different in that way."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "edited": false, "score": 0, "creation_date": 1551214994, "post_id": 54882021, "comment_id": 96557219, "body": "@NN_ there&#39;s a large difference between the name you give to the <b>value</b> that you get out of a tuple (<code>let (whatever, something) = tup;</code>) and the name of the <b>fields</b> in the tuple (<code>tup.0</code>). With your proposed code, you could write <code>&amp;mut tup.0</code> and <code>&amp;mut tup.width</code> and these two different names would be mutable aliases for the same field, something that is expressly disallowed by Rust."}, {"owner": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "edited": false, "score": 0, "creation_date": 1551260563, "post_id": 54882021, "comment_id": 96571894, "body": "tup.0 and tup.width should mean exactly the same thing for the given tuple. Compiler just replaces width with 0."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 3, "last_activity_date": 1551189496, "last_edit_date": 1551189496, "creation_date": 1551172699, "answer_id": 54882021, "question_id": 54881822, "link": "https://stackoverflow.com/questions/54881822/is-there-a-feature-to-put-default-names-in-tuples-for-better-code-completion-and/54882021#54882021", "title": "Is there a feature to put default names in tuples for better code completion and suggestions?", "body": "<p>There are three ways to define a struct (<a href=\"https://doc.rust-lang.org/book/ch05-01-defining-structs.html\" rel=\"nofollow noreferrer\">The book Chapter 5</a>).</p>\n\n<ol>\n<li>Declaring an empty (zero-sized) struct\n\n<pre><code>struct Foo;\n</code></pre></li>\n<li>Declaring a tuple struct\n\n<pre><code>struct Bar(i32, u32, String);\n</code></pre></li>\n<li>Declaring a struct with named fields\n\n<pre><code>struct Baz {\n    first: i32,\n    second: u32,\n    third: String,\n}\n</code></pre></li>\n</ol>\n\n<p>There is no other way.</p>\n\n<p>Destructuring works for all three variants.</p>\n\n<pre><code>let a = Foo;\nlet Bar(f, s, t) = Bar(3, 5, String::from(\"Hallo\"));\nlet Baz { first, second, third } = Baz { first: 3, second: 5, third: String::from(\"Hello\") };\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dce66d2c86990ca457aee4c62287ad27\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n"}], "owner": {"reputation": 1463, "user_id": 558098, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/52d445b3234e100bc93c9accfce29d98?s=128&d=identicon&r=PG", "display_name": "NN_", "link": "https://stackoverflow.com/users/558098/nn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1551189496, "creation_date": 1551172009, "last_edit_date": 1551189472, "question_id": 54881822, "link": "https://stackoverflow.com/questions/54881822/is-there-a-feature-to-put-default-names-in-tuples-for-better-code-completion-and", "title": "Is there a feature to put default names in tuples for better code completion and suggestions?", "body": "<p>Is there a feature to put default names in tuples for better code completion and suggestions? The names would not be obligatory, just a hint.</p>\n\n<p>Something like:</p>\n\n<pre><code>struct Rect(width: i32, height: i32);\n\nlet r: Rect = (1, 2);\nlet (a, b) = r; // names while destructuring can be anything\n</code></pre>\n"}, {"tags": ["rust", "reqwest"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 0, "creation_date": 1551146227, "post_id": 54877340, "comment_id": 96524578, "body": "Thanks. In this case, how can I figure out what the content length actually is and allocate a buffer to read it in?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551146413, "post_id": 54877340, "comment_id": 96524618, "body": "It is likely easiest to use <code>.text()</code> and just use the <code>String</code> returned, rather than trying to pre-allocate a buffer somewhere. <code>Content-Length</code> is not a required header in a request, so relying on it would be a mistake."}, {"owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "edited": false, "score": 0, "creation_date": 1551147368, "post_id": 54877340, "comment_id": 96524830, "body": "Yes, but some of my queries will not be text but binary. Could <code>text</code> work? If not, I think I still need to read it in with a buffer."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1551147695, "post_id": 54877340, "comment_id": 96524886, "body": "I&#39;ve added some more examples to my answer."}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 3, "last_activity_date": 1551148036, "last_edit_date": 1551148036, "creation_date": 1551146038, "answer_id": 54877340, "question_id": 54876973, "link": "https://stackoverflow.com/questions/54876973/why-isnt-reqwest-returning-the-content-length-in-this-request/54877340#54877340", "title": "Why isn&#39;t reqwest returning the content length in this request?", "body": "<p>The <a href=\"https://docs.rs/reqwest/0.9.10/reqwest/struct.Response.html#method.content_length\" rel=\"nofollow noreferrer\"><code>reqwest</code> documentation for <code>content_length()</code></a> is always a good place to start. It states</p>\n\n<blockquote>\n  <p>Get the content-length of the response, if it is known.</p>\n  \n  <p>Reasons it may not be known:</p>\n  \n  <ul>\n  <li>The server didn't send a content-length header.</li>\n  <li>The response is gzipped and automatically decoded (thus changing the actual decoded length).</li>\n  </ul>\n</blockquote>\n\n<p>Looking at your example <code>curl</code> output, it contains <code>Content-Length: 429</code> so the first case is covered. So now lets try disabling gzip:</p>\n\n<pre><code>let client = reqwest::Client::builder()\n  .gzip(false)\n  .build()\n  .unwrap();\n\nclient.get(\"https://httpbin.org/json\").send().map(|res| {\n  println!(\"{:?}\", res);\n  println!(\"length {:?}\", res.content_length());\n});\n</code></pre>\n\n<p>which logs</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>length Some(429)\n</code></pre>\n\n<p>so the second case is the issue. By default, <code>reqwest</code> appears to be automatically handling gzipped content, whereas <code>curl</code> is not.</p>\n\n<p>The <code>Content-Length</code> HTTP header is entirely optional, so generally relying on its presence would be a mistake. You should read the data from the request using the other <code>reqwest</code> APIs and then calculate the length of the data itself. For instance, you might use <a href=\"https://docs.rs/reqwest/0.9.10/reqwest/struct.Response.html#method.text\" rel=\"nofollow noreferrer\"><code>.text()</code></a></p>\n\n<pre><code>let wc = reqwest::Client::new();\nlet mut response = wc.get(\"https://httpbin.org/json\").send().unwrap();\nlet text = response.text().unwrap();\n\nprintln!(\"text: {} =&gt; {}\", text.len(), text);\n</code></pre>\n\n<p>Similarly, for binary data you can use <a href=\"https://docs.rs/reqwest/0.9.10/reqwest/struct.Response.html#method.copy_to\" rel=\"nofollow noreferrer\"><code>.copy_to()</code></a>:</p>\n\n<pre><code>let wc = reqwest::Client::new();\nlet mut response = wc.get(\"https://httpbin.org/json\").send().unwrap();\n\nlet mut data = vec![];\nresponse.copy_to(&amp;mut data).unwrap();\n\nprintln!(\"data: {}\", data.len());\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 516, "favorite_count": 0, "accepted_answer_id": 54877340, "answer_count": 1, "score": 2, "last_activity_date": 1551148036, "creation_date": 1551142519, "last_edit_date": 1551145983, "question_id": 54876973, "link": "https://stackoverflow.com/questions/54876973/why-isnt-reqwest-returning-the-content-length-in-this-request", "title": "Why isn&#39;t reqwest returning the content length in this request?", "body": "<p>I'm confused why I'm not getting any content back from the following function, which uses <code>reqwest</code>:</p>\n\n<pre><code>  fn try_get() {\n      let wc = reqwest::Client::new();\n      wc.get(\"https://httpbin.org/json\").send().map(|res| {\n          println!(\"{:?}\", res);\n          println!(\"length {:?}\", res.content_length());\n      });\n  }\n</code></pre>\n\n<p>I'm expecting this function to display the response object and then give me the content length. It does the first but not the second:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Response { url: \"https://httpbin.org/json\", status: 200, headers: {\"access-control-allow-credentials\": \"true\", \"access-control-allow-origin\": \"*\", \"connection\": \"keep-alive\", \"content-type\": \"application/json\", \"date\": \"Tue, 26 Feb 2019 00:52:47 GMT\", \"server\": \"nginx\"} }\nlength None\n</code></pre>\n\n<p>This is confusing because if I hit the same endpoint using cURL, it gives me a body as expected:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ curl -i https://httpbin.org/json\nHTTP/1.1 200 OK\nAccess-Control-Allow-Credentials: true\nAccess-Control-Allow-Origin: *\nContent-Type: application/json\nDate: Tue, 26 Feb 2019 00:54:57 GMT\nServer: nginx\nContent-Length: 429\nConnection: keep-alive\n\n{\n  \"slideshow\": {\n    \"author\": \"Yours Truly\",\n    \"date\": \"date of publication\",\n    \"slides\": [\n      {\n        \"title\": \"Wake up to WonderWidgets!\",\n        \"type\": \"all\"\n      },\n      {\n        \"items\": [\n          \"Why &lt;em&gt;WonderWidgets&lt;/em&gt; are great\",\n          \"Who &lt;em&gt;buys&lt;/em&gt; WonderWidgets\"\n        ],\n        \"title\": \"Overview\",\n        \"type\": \"all\"\n      }\n    ],\n    \"title\": \"Sample Slide Show\"\n  }\n}\n</code></pre>\n\n<p>What is the problem with my function that it does not provide me with the content length?</p>\n"}, {"tags": ["oop", "struct", "rust", "traits", "composition"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1551111709, "post_id": 54870420, "comment_id": 96511429, "body": "Your background is C#, so if you implemented a C# interface with a method <code>GetId</code>, how would you provide it in this case?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1551112323, "post_id": 54870420, "comment_id": 96511779, "body": "<i>&quot;How do I implement a trait for a struct when the trait requires more state than is contained in the struct&quot;</i> =&gt; You can&#39;t. That&#39;s not what traits are for. You need to create another struct (which may be a wrapper type)."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1551112787, "post_id": 54870420, "comment_id": 96512024, "body": "hint: rust wouldn&#39;t classify as OO."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551126739, "post_id": 54870420, "comment_id": 96518410, "body": "Comments aren&#39;t the best place to get into this argument, but many of us (myself included) count Rust as an OO language. It does not have inheritance, but that&#39;s not required for OO."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1551113573, "post_id": 54871030, "comment_id": 96512483, "body": "<code>human: &amp;&#39;a Human&lt;&#39;a&gt;</code> \u2014 this is one place where Rust allows / requires you to make more decisions than a language like C#. For <i>this</i> specific example, storing a reference to the <code>Human</code> is overkill. You could just store it completely inline."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551113700, "post_id": 54871030, "comment_id": 96512563, "body": "@Shepmaster If you already have the <code>Human</code> in use, and you need to pass it to a function that requires an <code>Employee</code>, then you may not want to move the original. As a general case, I think this is &quot;better&quot; and closer to what you&#39;d expect in C#."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551113856, "post_id": 54871030, "comment_id": 96512654, "body": "Sure, in general using a reference is the most compatible solution, but <code>Human</code> should implement <code>Copy</code>, rendering the &quot;original&quot; point moot. You could also directly take the <code>name</code> out of <code>Human</code> and store it in the adapter since <code>&amp;str</code> is <code>Copy</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551261635, "post_id": 54871030, "comment_id": 96572588, "body": "@Shepmaster FWIW C# <i>does</i> let you make the choice to store it inline."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551262287, "post_id": 54871030, "comment_id": 96573013, "body": "Also, if the OP&#39;s real <code>Human</code> struct was just a <code>&amp;str</code> I&#39;d have expected them to just have said <code>&amp;str</code> instead of bringing a struct into their MVCE. It&#39;s clearly very simplified compared to their real world problem."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1551114976, "last_edit_date": 1551114976, "creation_date": 1551113463, "answer_id": 54871030, "question_id": 54870420, "link": "https://stackoverflow.com/questions/54870420/how-do-i-implement-a-trait-for-a-struct-when-the-trait-requires-more-state-than/54871030#54871030", "title": "How do I implement a trait for a struct when the trait requires more state than is contained in the struct?", "body": "<p>You can translate your C# code almost exactly, something like this:</p>\n\n<pre><code>struct Human&lt;'a&gt; {\n    name: &amp;'a str,\n}\n\ntrait Employee {\n    fn id(&amp;self) -&gt; i32;\n    fn name(&amp;self) -&gt; &amp;str;\n}\n\nstruct HumanToEmployeeAdapter&lt;'a&gt; {\n    human: &amp;'a Human&lt;'a&gt;,\n    id: i32,\n}\n\nimpl&lt;'a&gt; HumanToEmployeeAdapter&lt;'a&gt; {\n    fn new(id: i32, human: &amp;'a Human&lt;'a&gt;) -&gt; Self {\n        HumanToEmployeeAdapter { id, human }\n    }\n}\n\nimpl&lt;'a&gt; Employee for HumanToEmployeeAdapter&lt;'a&gt; {\n    fn id(&amp;self) -&gt; i32 {\n        self.id\n    }\n\n    fn name(&amp;self) -&gt; &amp;str {\n        self.human.name\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>If your <code>Human</code> type can be made <code>Copy</code> (which behaves similarly to a <a href=\"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/value-types\" rel=\"nofollow noreferrer\">C# value type</a>) then you can simplify matters by making <code>HumanToEmployeeAdapter</code> own the <code>Human</code>, which means you don't have to worry about the lifetimes of the references:</p>\n\n<pre><code>#[derive(Copy, Clone)]\nstruct Human&lt;'a&gt; {\n    name: &amp;'a str,\n}\n\ntrait Employee {\n    fn id(&amp;self) -&gt; i32;\n    fn name(&amp;self) -&gt; &amp;str;\n}\n\nstruct HumanToEmployeeAdapter&lt;'a&gt; {\n    human: Human&lt;'a&gt;,\n    id: i32,\n}\n\nimpl&lt;'a&gt; HumanToEmployeeAdapter&lt;'a&gt; {\n    fn new(id: i32, human: Human&lt;'a&gt;) -&gt; Self {\n        HumanToEmployeeAdapter { id, human }\n    }\n}\n\nimpl&lt;'a&gt; Employee for HumanToEmployeeAdapter&lt;'a&gt; {\n    fn id(&amp;self) -&gt; i32 {\n        self.id\n    }\n\n    fn name(&amp;self) -&gt; &amp;str {\n        self.human.name\n    }\n}\n</code></pre>\n\n<p>Note that you still need to track the lifetime of the <code>name</code> because <code>&amp;str</code> is a reference. If you made it into an owned <code>String</code>, then you wouldn't need the lifetime parameter for <code>Human</code>, but then <code>Human</code> couldn't be <code>Copy</code>. That's because <code>String</code>s cannot be safely copied in memory, due to their <code>Drop</code> impl (similar to a <a href=\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/destructors\" rel=\"nofollow noreferrer\">C# finalizer</a>), which would cause a double-free if Rust allowed you to do it - which is why it doesn't.</p>\n"}], "owner": {"reputation": 3582, "user_id": 3063273, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/smG96.jpg?s=128&g=1", "display_name": "Matt Thomas", "link": "https://stackoverflow.com/users/3063273/matt-thomas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 54871030, "answer_count": 1, "score": 0, "last_activity_date": 1551126493, "creation_date": 1551111289, "last_edit_date": 1551126493, "question_id": 54870420, "link": "https://stackoverflow.com/questions/54870420/how-do-i-implement-a-trait-for-a-struct-when-the-trait-requires-more-state-than", "title": "How do I implement a trait for a struct when the trait requires more state than is contained in the struct?", "body": "<p>How do I implement a trait for a struct when the trait requires more state than is contained in the struct? For example, how would I implement the <code>Employee</code> trait for the <code>Human</code> struct shown below?</p>\n\n<pre><code>struct Human {\n    name: &amp;str,\n}\n\ntrait Employee {\n    fn id(&amp;self) -&gt; i32;\n    fn name(&amp;self) -&gt; &amp;str;\n}\n\nimpl Employee for Human {\n    fn id(&amp;self) -&gt; i32 {\n        // From where do I get the ID?\n    }\n    fn name(&amp;self) -&gt; &amp;str {\n        self.name\n    }\n}\n</code></pre>\n\n<p>I'm not seeing any way to tuck additional state into the <code>impl</code> or into the trait.</p>\n\n<p>Is the only option to create a new <code>HumanToEmployeeAdapter</code> struct holding the missing info and then implement the <code>Employee</code> trait for the new struct?</p>\n\n<p>P.S. My background is in C#. Here's how I would approach it in that language:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>class Human\n{\n    public string Name { get; }\n\n    public Human(string name) { Name = name; }\n}\n\ninterface IEmployee\n{\n    int Id { get; }\n    string Name { get; }\n}\n\nclass HumanToEmployeeAdapter : IEmployee\n{\n    readonly Human _human;\n\n    public int Id { get; }\n    public string Name =&gt; _human.Name;\n\n    public HumanToEmployeeAdapter(\n        Human human,\n        int id)\n    {\n        _human = human;\n        Id = id;\n    }\n}\n</code></pre>\n\n<p>You'll notice that this is the \"create a new <code>HumanToEmployeeAdapter</code> struct\" path. So, is this the way Rustaceans solve this problem?</p>\n"}, {"tags": ["rest", "rust", "rust-rocket"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1551096651, "post_id": 54865824, "comment_id": 96502184, "body": "Does <a href=\"https://rocket.rs/v0.4/guide/responses/#responses\" rel=\"nofollow noreferrer\">rocket.rs/v0.4/guide/responses/#responses</a> help?"}, {"owner": {"reputation": 415, "user_id": 6096134, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4a184a33aaad53c49455ba7424e7dd6?s=128&d=identicon&r=PG&f=1", "display_name": "erictapen", "link": "https://stackoverflow.com/users/6096134/erictapen"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1551099338, "post_id": 54865824, "comment_id": 96503730, "body": "@hellow I actually looked into it and decided, that it would not help, but now I got it working with a Responder impl! Will provide an answer in the next hour, thanks."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1551100298, "post_id": 54865824, "comment_id": 96504233, "body": "I already tried to do the same, but I didn&#39;t find the answer. Maybe that&#39;s impossible."}], "answers": [{"comments": [{"owner": {"reputation": 415, "user_id": 6096134, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4a184a33aaad53c49455ba7424e7dd6?s=128&d=identicon&r=PG&f=1", "display_name": "erictapen", "link": "https://stackoverflow.com/users/6096134/erictapen"}, "edited": false, "score": 0, "creation_date": 1551100801, "post_id": 54867035, "comment_id": 96504536, "body": "Yep! That was it! I provided an answer myself, that has all the working code."}], "tags": [], "owner": {"reputation": 3668, "user_id": 2392960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549fcc9b00c4ce0ede36ede98548729?s=128&d=identicon&r=PG", "display_name": "Januson", "link": "https://stackoverflow.com/users/2392960/januson"}, "is_accepted": false, "score": 5, "last_activity_date": 1551102657, "last_edit_date": 1551102657, "creation_date": 1551100346, "answer_id": 54867035, "question_id": 54865824, "link": "https://stackoverflow.com/questions/54865824/return-json-with-an-http-status-other-than-200-in-rocket/54867035#54867035", "title": "Return JSON with an HTTP status other than 200 in Rocket", "body": "<p>You need to build a response. Take a look at the <a href=\"https://api.rocket.rs/rocket/response/struct.ResponseBuilder.html\" rel=\"nofollow noreferrer\"><code>ResponseBuilder</code></a>. Your response might look something like this.</p>\n\n<pre><code>use std::io::Cursor;\nuse rocket::response::Response;\nuse rocket::http::{Status, ContentType};\n\nlet response = Response::build()\n    .status(Status::UnprocessableEntity)\n    .header(ContentType::Json)\n    .sized_body(Cursor::new(\"Your json body\"))\n    .finalize();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 415, "user_id": 6096134, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4a184a33aaad53c49455ba7424e7dd6?s=128&d=identicon&r=PG&f=1", "display_name": "erictapen", "link": "https://stackoverflow.com/users/6096134/erictapen"}, "is_accepted": true, "score": 7, "last_activity_date": 1551102679, "last_edit_date": 1551102679, "creation_date": 1551100690, "answer_id": 54867136, "question_id": 54865824, "link": "https://stackoverflow.com/questions/54865824/return-json-with-an-http-status-other-than-200-in-rocket/54867136#54867136", "title": "Return JSON with an HTTP status other than 200 in Rocket", "body": "<p>With @hellow's help, I figured it out. The solution is to implement the <code>Responder</code> trait for a new struct <code>ApiResponse</code>, which contains a status code as well the <code>Json</code>. This way I can do exactly what I wanted:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[post(\"/create/thing\", format = \"application/json\", data = \"&lt;thing&gt;\")]\nfn put(thing: Json&lt;Thing&gt;) -&gt; ApiResponse {\n    let thing: Thing = thing.into_inner();\n    match thing.name.len() {\n        0...3 =&gt; ApiResponse {\n            json: json!({\"error\": {\"short\": \"Invalid Name\", \"long\": \"A thing must have a name that is at least 3 characters long\"}}),\n            status: Status::UnprocessableEntity,\n        },\n        _ =&gt; ApiResponse {\n            json: json!({\"status\": \"success\"}),\n            status: Status::Ok,\n        },\n    }\n}\n</code></pre>\n\n<p>Here is the full code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(proc_macro_hygiene)]\n#![feature(decl_macro)]\n\n#[macro_use]\nextern crate rocket;\n#[macro_use]\nextern crate rocket_contrib;\nextern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\nuse rocket::http::{ContentType, Status};\nuse rocket::request::Request;\nuse rocket::response;\nuse rocket::response::{Responder, Response};\nuse rocket_contrib::json::{Json, JsonValue};\n\n#[derive(Serialize, Deserialize, Debug)]\npub struct Thing {\n    pub name: String,\n}\n\n#[derive(Debug)]\nstruct ApiResponse {\n    json: JsonValue,\n    status: Status,\n}\n\nimpl&lt;'r&gt; Responder&lt;'r&gt; for ApiResponse {\n    fn respond_to(self, req: &amp;Request) -&gt; response::Result&lt;'r&gt; {\n        Response::build_from(self.json.respond_to(&amp;req).unwrap())\n            .status(self.status)\n            .header(ContentType::JSON)\n            .ok()\n    }\n}\n\n#[post(\"/create/thing\", format = \"application/json\", data = \"&lt;thing&gt;\")]\nfn put(thing: Json&lt;Thing&gt;) -&gt; ApiResponse {\n    let thing: Thing = thing.into_inner();\n    match thing.name.len() {\n        0...3 =&gt; ApiResponse {\n            json: json!({\"error\": {\"short\": \"Invalid Name\", \"long\": \"A thing must have a name that is at least 3 characters long\"}}),\n            status: Status::UnprocessableEntity,\n        },\n        _ =&gt; ApiResponse {\n            json: json!({\"status\": \"success\"}),\n            status: Status::Ok,\n        },\n    }\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![put]).launch();\n}\n</code></pre>\n"}], "owner": {"reputation": 415, "user_id": 6096134, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4a184a33aaad53c49455ba7424e7dd6?s=128&d=identicon&r=PG&f=1", "display_name": "erictapen", "link": "https://stackoverflow.com/users/6096134/erictapen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2153, "favorite_count": 0, "accepted_answer_id": 54867136, "answer_count": 2, "score": 11, "last_activity_date": 1610552975, "creation_date": 1551096292, "last_edit_date": 1610552975, "question_id": 54865824, "link": "https://stackoverflow.com/questions/54865824/return-json-with-an-http-status-other-than-200-in-rocket", "title": "Return JSON with an HTTP status other than 200 in Rocket", "body": "<p>I want my Rocket API to have a route like this:</p>\n<pre><code>#[post(&quot;create/thing&quot;, format = &quot;application/json&quot;, data=&quot;&lt;thing&gt;&quot;)]\n</code></pre>\n<p>When the client sends <code>{ &quot;name&quot;: &quot;mything&quot; }</code>, everything should be alright and I know how to do that, but when it sends <code>{ &quot;name&quot;: &quot;foo&quot; }</code> it should respond with something like this:</p>\n<pre class=\"lang-none prettyprint-override\"><code>HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n</code></pre>\n<pre class=\"lang-json prettyprint-override\"><code>{\n  &quot;errors&quot;: [\n    {\n      &quot;status&quot;: &quot;422&quot;,\n      &quot;title&quot;:  &quot;Invalid thing name&quot;,\n      &quot;detail&quot;: &quot;The name for a thing must be at least 4 characters long.&quot;\n    }\n  ]\n}\n</code></pre>\n<p>How do I respond with a result like a JSON object and a HTTP status code different than 200 in Rocket?</p>\n<p>This is what I tried so far:</p>\n<ul>\n<li><code>impl</code> <code>FromRequest</code> for my <code>Thing</code> type. This lets me choose a status code as I can write my own <code>from_request</code> function, but I can't return anything else.</li>\n<li>Registering an error catcher like in <a href=\"https://github.com/SergioBenitez/Rocket/blob/v0.4/examples/errors/src/main.rs#L14\" rel=\"nofollow noreferrer\">this example</a>, but this way I only can react to one HTTP status code without context. I have too many failure modes to reserve one HTTP status code for each.</li>\n</ul>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1551096564, "post_id": 54865801, "comment_id": 96502123, "body": "It&#39;s unclear what you are asking. What did you intend <code>println!(&quot;{:?}&quot;, srange::High);</code> to output?"}, {"owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1551096674, "post_id": 54865801, "comment_id": 96502206, "body": "@PeterHall Updated only wanted to print  <code>So High</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1551097047, "post_id": 54865801, "comment_id": 96502446, "body": "I know this isn&#39;t what you are asking about, but you have some very suspicious variable naming which could cause confusion. In <code>SalaryRange&lt;SRange&gt;</code>, <code>SRange</code> is a type <i>variable</i>. But it is named the same as an alias you have made for the <code>String</code>. In my answer, I renamed that to <code>S</code> to avoid confusion."}, {"owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1551097164, "post_id": 54865801, "comment_id": 96502511, "body": "@PeterHall Yep, sorry for the confusion, the real type of it is a complex one, added String only for the example, Thanks"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1551097508, "post_id": 54865801, "comment_id": 96502705, "body": "The String isn&#39;t the problem. When you look at the definition, you could mistakenly think that the type of data held by <code>Salary::Low</code> is <code>SRange</code>. But actually the type could be whatever type you decide. From another perspective, the <code>SRange</code> <i>type variable</i> is shadowing the <code>SRange</code> <i>concrete type</i>."}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 2, "last_activity_date": 1551096816, "creation_date": 1551096816, "answer_id": 54865986, "question_id": 54865801, "link": "https://stackoverflow.com/questions/54865801/how-to-read-a-value-of-an-enum-which-associates-with-a-custom-type-in-rust/54865986#54865986", "title": "How to read a value of an enum which associates with a custom type in Rust?", "body": "<p>You can pattern match <code>srange</code> with the <a href=\"https://doc.rust-lang.org/book/ch06-03-if-let.html\" rel=\"nofollow noreferrer\"><code>if let</code></a> syntax.</p>\n\n<pre><code>if let SalaryRange::High(s) = srange {\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>will print \"so high\".</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1551096898, "creation_date": 1551096898, "answer_id": 54866005, "question_id": 54865801, "link": "https://stackoverflow.com/questions/54865801/how-to-read-a-value-of-an-enum-which-associates-with-a-custom-type-in-rust/54866005#54866005", "title": "How to read a value of an enum which associates with a custom type in Rust?", "body": "<p>You can implement a method on your enum to extract the value:</p>\n\n<pre><code>#[derive(Debug)]\nenum SalaryRange&lt;S&gt; {\n    Low(S),\n    Mid(S),\n    High(S),\n}\n\nimpl&lt;S&gt; SalaryRange&lt;S&gt; {\n    fn value(&amp;self) -&gt; &amp;S {\n        match self {\n            SalaryRange::Low(value) =&gt; value,\n            SalaryRange::Mid(value) =&gt; value,\n            SalaryRange::High(value) =&gt; value,\n        }\n    }\n}\n</code></pre>\n\n\n\n<pre><code>println!(\"{:?}\", srange.value());\n</code></pre>\n"}], "owner": {"reputation": 15332, "user_id": 1004875, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/9e995748f7d73110eb07dcd8ff81b85a?s=128&d=identicon&r=PG&f=1", "display_name": "co2f2e", "link": "https://stackoverflow.com/users/1004875/co2f2e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 54866005, "answer_count": 2, "score": 1, "last_activity_date": 1551126431, "creation_date": 1551096190, "last_edit_date": 1551126431, "question_id": 54865801, "link": "https://stackoverflow.com/questions/54865801/how-to-read-a-value-of-an-enum-which-associates-with-a-custom-type-in-rust", "title": "How to read a value of an enum which associates with a custom type in Rust?", "body": "<p>I have an implementation in Rust as follows. In the main function, I am reading a value in <code>SalaryRange</code> enum and this will display <code>High(\"So High\")</code>.</p>\n\n<pre><code>// This can be a complex type, just using string for the question \ntype SRange = String;\ntype SalEnu = SalaryRange&lt;SRange&gt;;\n\nstruct User&lt;SRange&gt; {\n    username: String,\n    email: String,\n    sign_in_count: u64,\n    active: bool,\n    income: Income&lt;SRange&gt;,\n}\n\nstruct Income&lt;SRange&gt; {\n    salary_range: SalaryRange&lt;SRange&gt;\n}\n\n#[derive(Debug)]\nenum SalaryRange&lt;SRange&gt; {\n    Low(SRange),\n    Mid(SRange),\n    High(SRange),\n}\n\nfn main() {\n    let user1 = User {\n        email: String::from(\"test@email.com\"),\n        username: String::from(\"test_name\"),\n        active: true,\n        sign_in_count: 1,\n        income: Income {\n            salary_range: (\n                SalaryRange::High(\"So High\")\n            )\n        },\n    };\n    let mut srange: SalaryRange&lt;&amp;str&gt; = user1.income.salary_range;\n    println!(\"{:?}\", srange);\n}\n</code></pre>\n\n<p>Link for this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7e1c959b8c5d44ea515fd716e02c7d82\" rel=\"nofollow noreferrer\">example</a> can be found here.</p>\n\n<p>Just wanted to know if there is a possibility to read and print the value in that enum as <code>println!(\"{:?}\", srange::High);</code>, just to print out the string value? \nI only want to print the value <code>So High</code>.</p>\n\n<p>If I use <code>srange::High</code> This will throw an error saying </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>      println!(\"{:?}\", srange::High);\n|                      ^^^^^^ use of undeclared type or module `srange`\nerror: aborting due to previous error\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 3, "last_activity_date": 1551081216, "last_edit_date": 1551081216, "creation_date": 1551081196, "answer_id": 54861699, "question_id": 54861597, "link": "https://stackoverflow.com/questions/54861597/required-to-use-module-name-twice-to-reference-a-struct-in-the-module/54861699#54861699", "title": "Required to use module name twice to reference a struct in the module", "body": "<p>Inside your <code>stats.rs</code> file you create another module <code>stats</code> which means, that you have to use <code>stats::stats</code>, because every file creates its own module.</p>\n\n<p>To solve your issue, just remove <code>pub mod stats</code> in your <code>stats.rs</code> file.</p>\n\n<p>For further information see:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/stable/book/ch07-02-modules-and-use-to-control-scope-and-privacy.html\" rel=\"nofollow noreferrer\">The book Chapter 7</a></li>\n<li><a href=\"https://stackoverflow.com/questions/26224947/how-to-i-do-a-basic-import-include-of-a-function-from-one-module-to-another-in-r\">How to I do a basic import/include of a function from one module to another in Rust 2015?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/30677258/how-do-i-import-from-a-sibling-module\">How do I import from a sibling module?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/54260772/how-to-use-functions-from-one-file-among-multiple-files\">How to use functions from one file among multiple files?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/54289071/what-are-the-valid-path-roots-in-the-use-keyword\">What are the valid path roots in the use keyword?</a></li>\n</ul>\n"}], "owner": {"reputation": 89, "user_id": 5382294, "user_type": "registered", "profile_image": "https://graph.facebook.com/1904330409791300/picture?type=large", "display_name": "Vishnu Divakar", "link": "https://stackoverflow.com/users/5382294/vishnu-divakar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "closed_date": 1551102194, "accepted_answer_id": 54861699, "answer_count": 1, "score": 1, "last_activity_date": 1551082207, "creation_date": 1551080761, "last_edit_date": 1551081211, "question_id": 54861597, "link": "https://stackoverflow.com/questions/54861597/required-to-use-module-name-twice-to-reference-a-struct-in-the-module", "closed_reason": "Duplicate", "title": "Required to use module name twice to reference a struct in the module", "body": "<p>Main function is as follow:</p>\n\n<pre><code>mod stats;\n\nfn main() {\n    let raw_data = [10, 10, 20, 1, 2, 3, 5];\n    let mut v: Vec&lt;u32&gt; = Vec::new();\n    let mean = 0;\n    let median = 0;\n    let mode = 0;\n    for i in raw_data.iter() {\n        v.push(*i);\n    }\n    let stat = stats::stats::Stats::new(v);\n}\n</code></pre>\n\n<p>And module stats as follow:</p>\n\n<pre><code>pub mod stats {\n    pub struct Stats {\n        data: Vec&lt;u32&gt;,\n    }\n    impl Stats {\n        pub fn new(data: Vec&lt;u32&gt;) -&gt; Stats {\n            Stats { data }\n        }\n        pub fn find_mean(&amp;self) -&gt; f64 {\n            let mut sum = 0;\n            for i in &amp;self.data {\n                sum += i;\n            }\n            return (sum / self.data.iter().count() as u32) as f64;\n        }\n        pub fn find_mode(&amp;self) -&gt; u32 {}\n        pub fn find_median(&amp;self) -&gt; f64 {}\n    }\n}\n</code></pre>\n\n<p>Why do I have to use <code>stats::stats</code> to reference struct <code>Stats</code>.</p>\n\n<p><img src=\"https://i.stack.imgur.com/W3wUD.png\" alt=\"Project Structure\"></p>\n"}, {"tags": ["unix", "io", "rust", "file-descriptor"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1551055621, "post_id": 54858018, "comment_id": 96487498, "body": "There are several crates on <a href=\"https://crates.io/search?q=file%20descriptor\" rel=\"nofollow noreferrer\">crates.io</a>. Did you try any of them yet?"}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 2, "last_activity_date": 1551058113, "last_edit_date": 1551058113, "creation_date": 1551055980, "answer_id": 54858130, "question_id": 54858018, "link": "https://stackoverflow.com/questions/54858018/how-do-i-write-to-a-specific-raw-file-descriptor-from-rust/54858130#54858130", "title": "How do I write to a specific raw file descriptor from Rust?", "body": "<p>The <code>libc</code> crate is \"just\" a wrapping library to interface between C and Rust so to know how to use a function one should read the manual of the C function, there are many source for that, here one for <a href=\"https://linux.die.net/man/3/fdopen\" rel=\"nofollow noreferrer\"><code>fdopen()</code></a>:</p>\n\n<blockquote>\n  <p>The <code>fdopen()</code> function associates a stream with the existing file descriptor, <code>fd</code>. The mode of the stream (one of the values <code>\"r\"</code>, <code>\"r+\"</code>, <code>\"w\"</code>, <code>\"w+\"</code>, <code>\"a\"</code>, <code>\"a+\"</code>) must be compatible with the mode of the file descriptor. The file position indicator of the new stream is set to that belonging to <code>fd</code>, and the error and end-of-file indicators are cleared. Modes <code>\"w\"</code> or <code>\"w+\"</code> do not cause truncation of the file. The file descriptor is not dup'ed, and will be closed when the stream created by <code>fdopen()</code> is closed. The result of applying <code>fdopen()</code> to a shared memory object is undefined.</p>\n</blockquote>\n\n<p>Basic use is so:</p>\n\n<pre><code>use libc::fdopen;\nuse std::ffi::CString;\n\nfn main() {\n    let mode = CString::new(\"w\").unwrap();\n    unsafe {\n        let _ = fdopen(3, mode.as_ptr());\n    }\n}\n</code></pre>\n\n<p>To use it, you could use <a href=\"https://linux.die.net/man/3/fwrite\" rel=\"nofollow noreferrer\"><code>fwrite()</code></a>:</p>\n\n<blockquote>\n  <p>The function <code>fwrite()</code> writes <code>nmemb</code> elements of data, each size bytes long, to the stream pointed to by stream, obtaining them from the location given by <code>ptr</code>.</p>\n</blockquote>\n\n<p>So, complete example:</p>\n\n<pre><code>use libc::{c_void, fdopen, fwrite};\nuse std::ffi::CString;\n\nfn main() {\n    let mode = CString::new(\"w\").unwrap();\n    let file = unsafe {\n        let file = fdopen(3, mode.as_ptr());\n        if file.is_null() {\n            panic!(\"can't open file\");\n        }\n        file\n    };\n\n    let welcome = \"Hello world!\";\n\n    let result = unsafe { fwrite(welcome.as_ptr() as *const c_void, 1, welcome.len(), file) };\n    if result != welcome.len() {\n        panic!(\"write not successful\");\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 946, "user_id": 1194998, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/UcVSS.jpg?s=128&g=1", "display_name": "rdiaz82", "link": "https://stackoverflow.com/users/1194998/rdiaz82"}, "edited": false, "score": 0, "creation_date": 1551096651, "post_id": 54858159, "comment_id": 96502183, "body": "This works like a charm!! really easy and clean solution!"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1551105436, "post_id": 54858159, "comment_id": 96507527, "body": "It is worth adding that if you do not want to close the <i>fd</i> when <code>f</code> is dropped, you can just call <code>f.into_raw_fd()</code> (from trait <code>IntoRawFd</code>) and discard the return value, that will just be <code>3</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1551105492, "post_id": 54858159, "comment_id": 96507559, "body": "@rodrigo yep, or <code>mem::forget</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1551114421, "post_id": 54858159, "comment_id": 96512978, "body": "@Shepmaster: <code>mem::forget</code> will work, but I think that if you want to keep the <i>fd</i> opened, just because it was opened when you arrived, then <code>into_raw_fd()</code> is the proper way: <code>mem::forget</code> might have other undesirable effects, such as not freeing internal buffers or who knows what."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1551106186, "last_edit_date": 1551106186, "creation_date": 1551056287, "answer_id": 54858159, "question_id": 54858018, "link": "https://stackoverflow.com/questions/54858018/how-do-i-write-to-a-specific-raw-file-descriptor-from-rust/54858159#54858159", "title": "How do I write to a specific raw file descriptor from Rust?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/os/unix/io/trait.FromRawFd.html\" rel=\"noreferrer\"><code>FromRawFd</code></a> to create a <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"noreferrer\"><code>File</code></a> from a specific file descriptor, but only on UNIX-like operating systems:</p>\n\n<pre><code>use std::{\n    fs::File,\n    io::{self, Write},\n    os::unix::io::FromRawFd,\n};\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let mut f = unsafe { File::from_raw_fd(3) };\n    write!(&amp;mut f, \"Hello, world!\")?;\n    Ok(())\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ target/debug/example 3&gt; /tmp/output\n$ cat /tmp/output\nHello, world!\n</code></pre>\n\n<p><code>from_raw_fd</code> is unsafe because there's no guarantee that the file descriptor is valid or who is actually responsible for that file descriptor. </p>\n\n<p>The created <code>File</code> will assume ownership of the file descriptor: when the <code>File</code> goes out of scope, the file descriptor will be closed. You can avoid this by using either <a href=\"https://doc.rust-lang.org/std/os/unix/io/trait.IntoRawFd.html\" rel=\"noreferrer\"><code>IntoRawFd</code></a> or <a href=\"https://doc.rust-lang.org/std/mem/fn.forget.html\" rel=\"noreferrer\"><code>mem::forget</code></a>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27665396/155423\">How can I read from a specific raw file descriptor in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 946, "user_id": 1194998, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/UcVSS.jpg?s=128&g=1", "display_name": "rdiaz82", "link": "https://stackoverflow.com/users/1194998/rdiaz82"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2416, "favorite_count": 0, "accepted_answer_id": 54858159, "answer_count": 2, "score": 5, "last_activity_date": 1551106186, "creation_date": 1551054751, "last_edit_date": 1551056726, "question_id": 54858018, "link": "https://stackoverflow.com/questions/54858018/how-do-i-write-to-a-specific-raw-file-descriptor-from-rust", "title": "How do I write to a specific raw file descriptor from Rust?", "body": "<p>I need to write to file descriptor 3. I have been searching for it but the documentation is quite poor. The only thing that I have found is the use of <code>libc</code> library and the <code>fdopen</code> method, but I haven't found any example about how to use it or write on it.  </p>\n\n<p>Can anyone provide me an example of writing to a file descriptor in Rust?</p>\n"}, {"tags": ["vector", "rust"], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1551081101, "post_id": 54857641, "comment_id": 96493836, "body": "This answer works in the specific use-case of a <code>Vec</code>. In the more general case, (e.g. when using a container that does not have an equivalent for <code>Vec::retain</code>), then you can use <a href=\"https://doc.rust-lang.org/stable/std/mem/fn.swap.html\" rel=\"nofollow noreferrer\"><code>std::mem::swap</code></a> to take the data out of <code>self</code> before filtering it and putting it back in. <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=9bc30ef65308fba88b98b588bdc50c62\" rel=\"nofollow noreferrer\">Playground</a>."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1551051313, "creation_date": 1551051313, "answer_id": 54857641, "question_id": 54857552, "link": "https://stackoverflow.com/questions/54857552/how-can-i-avoid-moving-out-of-a-borrow-when-removing-values-from-a-borrowed-vec/54857641#54857641", "title": "How can I avoid moving out of a borrow when removing values from a borrowed Vec?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.retain\" rel=\"nofollow noreferrer\"><code>Vec::retain</code></a> to remove items from the vector in place:</p>\n\n<pre><code>fn clean_up(&amp;mut self) {\n    self.data.retain(|data| data.is_still_valid());\n}\n</code></pre>\n"}], "owner": {"reputation": 4655, "user_id": 1513559, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/NIt1y.jpg?s=128&g=1", "display_name": "Ben Pious", "link": "https://stackoverflow.com/users/1513559/ben-pious"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "closed_date": 1551053145, "accepted_answer_id": 54857641, "answer_count": 1, "score": 1, "last_activity_date": 1551053301, "creation_date": 1551050561, "last_edit_date": 1551053301, "question_id": 54857552, "link": "https://stackoverflow.com/questions/54857552/how-can-i-avoid-moving-out-of-a-borrow-when-removing-values-from-a-borrowed-vec", "closed_reason": "Duplicate", "title": "How can I avoid moving out of a borrow when removing values from a borrowed Vec?", "body": "<p>I have a struct that does not implement <code>Clone</code> or <code>Copy</code>:</p>\n\n<pre><code>struct MyStruct {\n    data: Vec&lt;MyData&gt;,\n}\n</code></pre>\n\n<p>I'd like to write a function on the struct that \"cleans up\" data that's no longer valid: </p>\n\n<pre><code>fn clean_up(&amp;mut self) {\n    self.data = self.data.into_iter()\n      .filter(|data| data.is_still_valid())\n      .collect()\n}\n</code></pre>\n\n<p>This doesn't work, the compiler complains that I'm moving out of a borrowed context when I use <code>into_iter</code>. Without <code>into_iter</code>, it fails because I'm creating a <code>Vec</code> of <code>&amp;MyData</code>, not <code>MyData</code>.</p>\n\n<p>I can fix this by writing something like the following instead, but it is far less readable:</p>\n\n<pre><code>let mut invalid_indicies = vec![];\nfor (i, data) in self.data.iter().enumerate() {\n    if !data.is_still_valid() {\n        invalid_indicies.push(i);\n    }\n}\nfor i in invalid_indicies {\n    self.data.remove(i);\n}\n</code></pre>\n\n<p>Is it possible to use <code>filter</code> and similar sequence operators to modify vectors owned by a struct while still borrowing instead of moving <code>self</code> in <code>clean_up()</code>?</p>\n"}, {"tags": ["string", "rust", "mutable", "growable"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1551036436, "post_id": 54855543, "comment_id": 96482798, "body": "This reminds me of <a href=\"https://stackoverflow.com/q/54673145/1233251\">another recent question on <code>str</code> and their size</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1551036338, "creation_date": 1551036338, "answer_id": 54855640, "question_id": 54855543, "link": "https://stackoverflow.com/questions/54855543/what-is-the-difference-between-growable-and-mutable-in-a-rust-string/54855640#54855640", "title": "What is the difference between &quot;growable&quot; and &quot;mutable&quot; in a Rust string?", "body": "<p>You are overthinking the wording here; \"growable\" only means that it can grow. A <code>String</code> that originally allocated 3 bytes to contain <code>\"abc\"</code> can <em>grow</em> to 6 bytes to contain <code>\"abcdef\"</code>. The memory allocation can become bigger (and smaller). There's no specific Rust typesystem meaning to the word \"growable\".</p>\n\n<p>Changing the capacity of a <code>String</code> is a specific type of alteration, so you need a mutable <code>String</code> in order to grow the string. You also need a mutable <code>String</code> for other types of alterations that don't involve changing the allocation.</p>\n\n<p>A mutable string slice (<code>&amp;mut str</code>) is a type of string that cannot become longer or shorter but may be changed.</p>\n\n<pre><code>fn example(name: &amp;mut str) {\n    name.make_ascii_uppercase()\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\">What are the differences between Rust&#39;s `String` and `str`?</a></li>\n<li><a href=\"https://stackoverflow.com/q/54673145/1233251\">Why can fixed-size arrays be on the stack, but str cannot?</a></li>\n</ul>\n"}], "owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 169, "favorite_count": 0, "accepted_answer_id": 54855640, "answer_count": 1, "score": 3, "last_activity_date": 1551043159, "creation_date": 1551035681, "last_edit_date": 1551036081, "question_id": 54855543, "link": "https://stackoverflow.com/questions/54855543/what-is-the-difference-between-growable-and-mutable-in-a-rust-string", "title": "What is the difference between &quot;growable&quot; and &quot;mutable&quot; in a Rust string?", "body": "<p>I'm reading <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>. The <a href=\"https://doc.rust-lang.org/std/string/struct.String.html\" rel=\"nofollow noreferrer\">docs define a <code>String</code></a> as \"growable\":</p>\n\n<blockquote>\n  <p>A UTF-8 encoded, growable string.</p>\n</blockquote>\n\n<p>I've <a href=\"https://stackoverflow.com/questions/44415432/understanding-mutable-seq\">found that growable is not the same as mutable</a>, but\n they don't really explain what makes a type \"growable\".</p>\n\n<p>Given this <code>let mut guess = String::new()</code>,</p>\n\n<ol>\n<li>What does \"growable\" mean?</li>\n<li>How does <code>mut</code> change a growable string?</li>\n<li>Is there a non-growable string type?</li>\n</ol>\n"}, {"tags": ["loops", "rust", "iterator"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1551030395, "post_id": 54854655, "comment_id": 96480918, "body": "Rust&#39;s <code>Iterator</code> also has a <code>for_each</code> method."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1551030762, "post_id": 54854655, "comment_id": 96481031, "body": "<i>I am searching a way to avoid an explicit loop</i> \u2014 to what end? An explicit <code>for</code> loop is more idiomatic for side effects."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 6, "last_activity_date": 1551031083, "last_edit_date": 1551031083, "creation_date": 1551030773, "answer_id": 54854775, "question_id": 54854655, "link": "https://stackoverflow.com/questions/54854655/is-there-any-equivalent-to-javascripts-foreach-in-rust/54854775#54854775", "title": "Is there any equivalent to JavaScript&#39;s forEach in Rust?", "body": "<p>For mutating an existing data structure, using an explicit loop is the most idiomatic way to do it:</p>\n\n<pre><code>for (i, arg) in args.iter().enumerate() {\n    for (j, value) in arg.split(' ').enumerate() {\n        match value.parse() {\n            Ok(x) =&gt; {\n                grid[i][j] = x;\n            }\n            Err(e) =&gt; {\n                eprintln!(\"Value {} is not a valid integer [{}]\", value, e);\n                exit(1);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>You can write this with <code>Iterator::for_each</code>, but it is not likely to be considered  \"better\" by most Rust developers:</p>\n\n<pre><code>args.iter().enumerate().for_each(|(i, arg)| {\n    arg.split(' ')\n        .enumerate()\n        .for_each(|(j, value)| match value.parse() {\n            Ok(x) =&gt; {\n                grid[i][j] = x;\n            }\n            Err(e) =&gt; {\n                eprintln!(\"Value {} is not a valid integer [{}]\", value, e);\n                exit(1);\n            }\n        })\n});\n</code></pre>\n\n<p>Regardless of which you use, you <em>definitely</em> should not be collecting into all those <code>Vec</code>s that you then throw away.</p>\n"}], "owner": {"reputation": 292, "user_id": 5661266, "user_type": "registered", "accept_rate": 40, "profile_image": "https://graph.facebook.com/10205593199614644/picture?type=large", "display_name": "mmeisson", "link": "https://stackoverflow.com/users/5661266/mmeisson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1943, "favorite_count": 0, "accepted_answer_id": 54854775, "answer_count": 1, "score": -1, "last_activity_date": 1551031083, "creation_date": 1551029949, "last_edit_date": 1551030696, "question_id": 54854655, "link": "https://stackoverflow.com/questions/54854655/is-there-any-equivalent-to-javascripts-foreach-in-rust", "title": "Is there any equivalent to JavaScript&#39;s forEach in Rust?", "body": "<p>How do I improve this function :</p>\n\n<pre><code>use std::{env, process::exit};\n\nfn get_grid() -&gt; [[u8; 9]; 9] {\n    let mut grid: [[u8; 9]; 9] = Default::default();\n    let mut args: Vec&lt;String&gt; = env::args().collect();\n    if args.len() != 10 {\n        eprintln!(\"This program need 9 strings of 9 numbers between 0 and 9\");\n        exit(1);\n    }\n    args.remove(0);\n    let _: Vec&lt;_&gt; = args\n        .iter()\n        .enumerate()\n        .map(|(i, arg)| {\n            let _line: Vec&lt;_&gt; = arg\n                .split(' ')\n                .enumerate()\n                .map(|(j, value)| match value.parse() {\n                    Ok(x) =&gt; {\n                        grid[i][j] = x;\n                        x\n                    }\n                    Err(e) =&gt; {\n                        eprintln!(\"Value {} is not a valid integer [{}]\", value, e);\n                        exit(1);\n                    }\n                })\n                .collect();\n        })\n        .collect();\n    return grid;\n}\n</code></pre>\n\n<p>As far as I understand <code>.map()</code> will, when collecting, build a new iterable ( <code>Vec</code> here), and return it. I don't need to have this iterable, I just want to modify an external array, and not have anything built from this iteration.</p>\n\n<p>In JavaScript, there is <code>.map</code>, but also a <code>.forEach</code> that iterates on <code>map</code> and returns nothing. Is there any equivalent in Rust?</p>\n\n<p>I could probably just use a <code>for (index, value) in args.iter().enumerate()</code> but I am searching a way to avoid an explicit loop, if there is one.</p>\n"}, {"tags": ["async-await", "rust", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 198, "user_id": 6239815, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/981e711a47505488f6e0f8e5b9c2ef2e?s=128&d=identicon&r=PG&f=1", "display_name": "CS QGB", "link": "https://stackoverflow.com/users/6239815/cs-qgb"}, "edited": false, "score": 0, "creation_date": 1573805956, "post_id": 54854883, "comment_id": 104013613, "body": "when i use tokio v0.1.22 reqwest v0.10.0-alpha.2 tokio::run({   async fn   reqwest::get(url).await got Error(Connect, Custom { kind: Other, error: &quot;no current reactor&quot; })"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 198, "user_id": 6239815, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/981e711a47505488f6e0f8e5b9c2ef2e?s=128&d=identicon&r=PG&f=1", "display_name": "CS QGB", "link": "https://stackoverflow.com/users/6239815/cs-qgb"}, "edited": false, "score": 0, "creation_date": 1573827476, "post_id": 54854883, "comment_id": 104024858, "body": "@CSQGB reqwest alpha <a href=\"https://github.com/seanmonstar/reqwest/blob/v0.10.0-alpha.2/Cargo.toml#L63\" rel=\"nofollow noreferrer\">requires tokio alpha</a>."}, {"owner": {"reputation": 198, "user_id": 6239815, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/981e711a47505488f6e0f8e5b9c2ef2e?s=128&d=identicon&r=PG&f=1", "display_name": "CS QGB", "link": "https://stackoverflow.com/users/6239815/cs-qgb"}, "edited": false, "score": 0, "creation_date": 1573836255, "post_id": 54854883, "comment_id": 104029857, "body": "Tokio 0.1 is incompatible with  reqwest alpha unless I use tokio v0.2.0-alpha ,right?"}, {"owner": {"reputation": 198, "user_id": 6239815, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/981e711a47505488f6e0f8e5b9c2ef2e?s=128&d=identicon&r=PG&f=1", "display_name": "CS QGB", "link": "https://stackoverflow.com/users/6239815/cs-qgb"}, "edited": false, "score": 0, "creation_date": 1573919074, "post_id": 54854883, "comment_id": 104050077, "body": "Hello Shepmaster. tokio-process 0.3.0-alpha.2 is incompatible with reqwest 0.10.0-alpha.2 I got error: failed to select a version for <code>futures-core-preview</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1588984551, "last_edit_date": 1588984551, "creation_date": 1551031510, "answer_id": 54854883, "question_id": 54853917, "link": "https://stackoverflow.com/questions/54853917/how-do-i-use-async-await-syntax-with-tokio/54854883#54854883", "title": "How do I use async/await syntax with Tokio?", "body": "<p>TL;DR: Use Tokio 0.2 or newer and it should just work.</p>\n\n<p>Tokio 0.1 and related crates are implemented using the futures 0.1 crate. The <code>Future</code> trait from this crate is conceptually similar to the version of the <code>Future</code> trait from the standard library but substantially different in details. <code>async</code> / <code>await</code> syntax is built around the version of the trait in the standard library.</p>\n\n<p>Tokio 0.2 and related crates are implemented using the standard library <code>Future</code> and have been reworked to better support <code>async</code> / <code>await</code> syntax.</p>\n\n<h1>Tokio 0.2</h1>\n\n<pre><code>[dependencies]\ntokio = { version = \"0.2\", features = [\"full\"] }\n</code></pre>\n\n<pre><code>use tokio::process::Command;\n\n#[tokio::main]\nasync fn main() -&gt; std::io::Result&lt;()&gt; {\n    let out = Command::new(\"echo\")\n        .arg(\"hello\")\n        .arg(\"world\")\n        .output()\n        .await?;\n\n    let s = String::from_utf8_lossy(&amp;out.stdout);\n\n    println!(\"{}\", s);\n    Ok(())\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.05s\n     Running `target/debug/tokio2`\nhello world\n</code></pre>\n\n<p>Tested with:</p>\n\n<ul>\n<li>Rustc 1.39.0</li>\n</ul>\n\n<h1>Tokio 0.1</h1>\n\n<p>You have to <a href=\"https://stackoverflow.com/q/58611380/155423\">translate between a <code>Future</code> implemented against the trait from the futures 0.1 crate and from the standard library</a>. In addition, you need to start up the Tokio runtime services, ideally for both Tokio 0.1 and Tokio 0.3. That's where <a href=\"https://docs.rs/tokio-compat/0.1/tokio_compat/index.html\" rel=\"nofollow noreferrer\">tokio-compat</a> comes in:</p>\n\n<pre><code>[dependencies]\nfutures = { version = \"0.3\", features = [\"compat\"] }\ntokio-compat = \"0.1\"\ntokio-process = \"0.2\"\n</code></pre>\n\n<pre><code>use futures::compat::Future01CompatExt;\nuse std::process::Command;\nuse tokio_process::CommandExt;\n\nfn main() {\n    tokio_compat::run_std(main_async());\n}\n\nasync fn main_async() {\n    let out = Command::new(\"echo\")\n        .arg(\"hello\")\n        .arg(\"world\")\n        .output_async();\n\n    // Convert future from 0.1 to 0.3\n    let s = out.compat().await;\n\n    println!(\"{:?}\", s);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>% cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.07s\n     Running `target/debug/tt`\nOk(Output { status: ExitStatus(ExitStatus(0)), stdout: \"hello world\\n\", stderr: \"\" })\n</code></pre>\n\n<p>Tested with Rust 1.43.0</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/57785707/155423\">How do I convert an async / standard library future to futures 0.1?</a></li>\n<li><a href=\"https://stackoverflow.com/q/58611380/155423\">Is there a way that we can convert from futures 0.1 to the standard library futures?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a></li>\n</ul>\n"}], "owner": {"reputation": 1236, "user_id": 6047503, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/N9MT9.png?s=128&g=1", "display_name": "Hristo Kolev", "link": "https://stackoverflow.com/users/6047503/hristo-kolev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3030, "favorite_count": 1, "accepted_answer_id": 54854883, "answer_count": 1, "score": 5, "last_activity_date": 1588984551, "creation_date": 1551025244, "last_edit_date": 1551031769, "question_id": 54853917, "link": "https://stackoverflow.com/questions/54853917/how-do-i-use-async-await-syntax-with-tokio", "title": "How do I use async/await syntax with Tokio?", "body": "<p>I'm trying to use async/await with processes in Rust. I'm using <code>tokio</code> and <code>tokio-process</code>:</p>\n\n<pre><code>#![feature(await_macro, async_await, futures_api)]\n\nextern crate tokio;\nextern crate tokio_process;\n\nuse std::process::Command;\nuse tokio_process::CommandExt;\n\nfn main() {\n    tokio::run_async(main_async());\n}\n\nasync fn main_async() {\n    let out = Command::new(\"echo\")\n        .arg(\"hello\")\n        .arg(\"world\")\n        .output_async();\n    let s = await!(out);\n}\n</code></pre>\n\n<p>Here is the error that I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `tokio_process::OutputAsync: std::future::Future` is not satisfied\n  --&gt; src/main.rs:21:13\n   |\n21 |     let s = await!(out);\n   |             ^^^^^^^^^^^ the trait `std::future::Future` is not implemented for `tokio_process::OutputAsync`\n   |\n   = note: required by `std::future::poll_with_tls_waker`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n\nerror[E0277]: the trait bound `tokio_process::OutputAsync: std::future::Future` is not satisfied\n  --&gt; src/main.rs:21:13\n   |\n21 |     let s = await!(out);\n   |             ^^^^^^^^^^^ the trait `std::future::Future` is not implemented for `tokio_process::OutputAsync`\n   |\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>How do I get this right?</p>\n"}, {"tags": ["algorithm", "sorting", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1551016867, "post_id": 54852554, "comment_id": 96477023, "body": "Sure. <a href=\"https://doc.rust-lang.org/src/alloc/slice.rs.html#206-210\" rel=\"nofollow noreferrer\"><code>slice::sort</code> is merge sort</a>, and <a href=\"https://doc.rust-lang.org/src/core/slice/mod.rs.html#1501-1505\" rel=\"nofollow noreferrer\"><code>slice::sort_unstable</code> is quicksort</a>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1551022470, "post_id": 54852554, "comment_id": 96478520, "body": "In case you have not yet realized, right next each item in the documentation is a <code>[src]</code> text. It&#39;s actually a link taking you straight to the source code for said item."}], "answers": [{"tags": [], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "is_accepted": false, "score": 2, "last_activity_date": 1551019451, "last_edit_date": 1551019451, "creation_date": 1551016887, "answer_id": 54852643, "question_id": 54852554, "link": "https://stackoverflow.com/questions/54852554/what-sorting-algorithm-does-rusts-built-in-sort-use/54852643#54852643", "title": "What sorting algorithm does Rust&#39;s built-in `sort` use?", "body": "<p>The standard answer is, I think, Read The Fine Manual ;-)</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/primitive.slice.html#current-implementation-3\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/primitive.slice.html#current-implementation-3</a></p>\n\n<p>And yes, it is possible to have a look at the code, by clicking on the <code>src</code> link on the right of every documented item. For the <code>sort</code> method, this leads to:</p>\n\n<p><a href=\"https://doc.rust-lang.org/src/alloc/slice.rs.html#206-210\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/src/alloc/slice.rs.html#206-210</a></p>\n\n<p>It uses a private <code>merge_sort</code> function which is defined here:</p>\n\n<p><a href=\"https://doc.rust-lang.org/src/alloc/slice.rs.html#888-990\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/src/alloc/slice.rs.html#888-990</a></p>\n"}, {"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 9, "last_activity_date": 1551017011, "last_edit_date": 1592644375, "creation_date": 1551017011, "answer_id": 54852661, "question_id": 54852554, "link": "https://stackoverflow.com/questions/54852554/what-sorting-algorithm-does-rusts-built-in-sort-use/54852661#54852661", "title": "What sorting algorithm does Rust&#39;s built-in `sort` use?", "body": "<p>As per documentation:</p>\n<p><a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.sort\" rel=\"noreferrer\"><code>sort</code></a>:</p>\n<blockquote>\n<h3>Current implementation</h3>\n<p>The current algorithm is an adaptive, iterative merge sort inspired by <a href=\"https://en.wikipedia.org/wiki/Timsort\" rel=\"noreferrer\"><strong>timsort</strong></a>. It is designed to be very fast in cases where the slice is nearly sorted, or consists of two or more sorted sequences concatenated one after another.</p>\n<p>Also, it allocates temporary storage half the size of self, but for short slices a non-allocating insertion sort is used instead.</p>\n</blockquote>\n<p>As for the rest of the standard library and the entire compiler, the source is <a href=\"https://github.com/rust-lang/rust/blob/5f60208ba11171c249284f8fe0ea6b3e9b63383c/src/liballoc/slice.rs#L841-L980\" rel=\"noreferrer\">available on GitHub</a>.</p>\n<p><a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.sort_unstable\" rel=\"noreferrer\"><code>sort_unstable</code></a>:</p>\n<blockquote>\n<h3>Current implementation</h3>\n<p>The current algorithm is based on <a href=\"https://github.com/orlp/pdqsort\" rel=\"noreferrer\"><strong>pattern-defeating quicksort</strong></a> by Orson Peters, which combines the fast average case of randomized quicksort with the fast worst case of heapsort, while achieving linear time on slices with certain patterns. It uses some randomization to avoid degenerate cases, but with a fixed seed to always provide deterministic behavior.</p>\n<p>It is typically faster than stable sorting, except in a few special cases, e.g. when the slice consists of several concatenated sorted sequences.</p>\n</blockquote>\n<p>The source is also <a href=\"https://github.com/rust-lang/rust/blob/5f60208ba11171c249284f8fe0ea6b3e9b63383c/src/libcore/slice/sort.rs\" rel=\"noreferrer\">available on GitHub</a>.</p>\n<p>(emphasis are mine)</p>\n"}], "owner": {"reputation": 938, "user_id": 3894179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c6b1c2c08d1075995cb780ee8a2e36e?s=128&d=identicon&r=PG", "display_name": "Andra", "link": "https://stackoverflow.com/users/3894179/andra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1073, "favorite_count": 0, "accepted_answer_id": 54852661, "answer_count": 2, "score": 1, "last_activity_date": 1551019451, "creation_date": 1551016151, "last_edit_date": 1551019338, "question_id": 54852554, "link": "https://stackoverflow.com/questions/54852554/what-sorting-algorithm-does-rusts-built-in-sort-use", "title": "What sorting algorithm does Rust&#39;s built-in `sort` use?", "body": "<p>What algorithm is the <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.sort\" rel=\"nofollow noreferrer\">built-in <code>[T]::sort</code> method</a> using? Is it possible to have a look at the code for that method?</p>\n"}, {"tags": ["generics", "rust", "traits", "serde"], "comments": [{"owner": {"reputation": 36902, "user_id": 223424, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e97c628a88337b15e76a4690e916a2cd?s=128&d=identicon&r=PG", "display_name": "9000", "link": "https://stackoverflow.com/users/223424/9000"}, "edited": false, "score": 0, "creation_date": 1551018869, "post_id": 54851996, "comment_id": 96477572, "body": "How should the deserializer know whether to choose <code>StructA</code> or <code>StructB</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 315, "user_id": 1288054, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/1501c5db6db8ac296160593ddeb50457?s=128&d=identicon&r=PG", "display_name": "unixunion", "link": "https://stackoverflow.com/users/1288054/unixunion"}, "edited": false, "score": 0, "creation_date": 1551079797, "post_id": 54853421, "comment_id": 96493273, "body": "Thanks, this is super helpful. I still struggle to understand how the &quot;where&quot; syntax works, and will research it more."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 5, "last_activity_date": 1551021856, "creation_date": 1551021856, "answer_id": 54853421, "question_id": 54851996, "link": "https://stackoverflow.com/questions/54851996/rust-and-serde-deserializing-using-generics/54853421#54853421", "title": "Rust and serde deserializing using generics", "body": "<p>When you use a type parameter like <code>T</code> here:</p>\n\n<pre><code>fn readfile&lt;T&gt;(filename: String) -&gt; Result&lt;Box&lt;T&gt;, Box&lt;std::error::Error&gt;&gt;;\n</code></pre>\n\n<p>The concrete type of <code>T</code> is determined by the caller. The compiler doesn't just look at all available type and make a guess at what makes sense.</p>\n\n<p>First of all, you need to tell the compiler that any <code>T</code> passed here will actually work. That means constraining <code>T</code> to be something that is deserializable, within compatible lifetimes:</p>\n\n<pre><code>// filename should be &amp;str here\nfn readfile&lt;'a, T: ?Sized&gt;(filename: &amp;str) -&gt; Result&lt;Box&lt;Outer&lt;'a, T&gt;&gt;, Box&lt;std::error::Error&gt;&gt;\nwhere\n    for&lt;'de&gt; T: Deserialize&lt;'de&gt; + 'a\n{\n    let f = std::fs::File::open(filename)?;\n    let config_data: Outer&lt;T&gt; = serde_yaml::from_reader(f)?;\n    Ok(Box::new(config_data))\n}\n\n// filename should be &amp;str here\nfn readconfig&lt;'a, T: ?Sized&gt;(filename: &amp;str) -&gt; Result&lt;Box&lt;Outer&lt;'a, T&gt;&gt;, &amp;'static str&gt;\nwhere\n    for&lt;'de&gt; T: Deserialize&lt;'de&gt; + 'a\n{\n    // read the config file\n    let config_data = readfile(filename);\n    match config_data {\n        Ok(e) =&gt; {\n            Ok(Box::new(*e)) // need to deref the Box before reboxing\n        },\n        Err(_) =&gt; {\n            Err(\"nadda\")\n        }\n    }\n}\n</code></pre>\n\n<p>Next, when you call this, you need to tell it a concrete type:</p>\n\n<pre><code>let result: Box&lt;Outer&lt;ExternalStructA&gt;&gt; = readconfig(\"config.yaml\")?;\n</code></pre>\n\n<p>This will fail if the input cannot be parsed into a <code>Box&lt;Outer&lt;ExternalStructA&gt;&gt;</code>, in which case you can try parsing it to <code>Box&lt;Outer&lt;ExternalStructB&gt;&gt;</code>, perhaps using <code>Result::or_else</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 149, "user_id": 13436102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cKfzn.jpg?s=128&g=1", "display_name": "Mr. Chrome", "link": "https://stackoverflow.com/users/13436102/mr-chrome"}, "edited": false, "score": 0, "creation_date": 1602862851, "post_id": 54853507, "comment_id": 113863737, "body": "Thanks! Can I ask you what is &quot;de&quot; or where I can read about that?"}, {"owner": {"reputation": 3531, "user_id": 1174521, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/9a6bc053ffba8996e41c0bbb9a9ce36a?s=128&d=identicon&r=PG", "display_name": "jbg", "link": "https://stackoverflow.com/users/1174521/jbg"}, "reply_to_user": {"reputation": 149, "user_id": 13436102, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cKfzn.jpg?s=128&g=1", "display_name": "Mr. Chrome", "link": "https://stackoverflow.com/users/13436102/mr-chrome"}, "edited": false, "score": 1, "creation_date": 1612425046, "post_id": 54853507, "comment_id": 116763858, "body": "@Mr.Chrome <code>de</code> is just <code>serde::de</code>, a module within the serde crate."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 12, "last_activity_date": 1551022435, "creation_date": 1551022435, "answer_id": 54853507, "question_id": 54851996, "link": "https://stackoverflow.com/questions/54851996/rust-and-serde-deserializing-using-generics/54853507#54853507", "title": "Rust and serde deserializing using generics", "body": "<p>just declare that <code>T</code> is <code>DeserializeOwned</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn readfile&lt;T: de::DeserializeOwned&gt;(filename: String) -&gt; Result&lt;Box&lt;T&gt;, Box&lt;std::error::Error&gt;&gt; {\n    let f = std::fs::File::open(filename)?;\n    let config_data: Outer&lt;T&gt; = serde_yaml::from_reader(f)?;\n    match config_data.ptr {\n        Ptr::Owned(data) =&gt; Ok(data),\n        _ =&gt; unimplemented!(),\n    }\n}\n</code></pre>\n\n<p>same with <code>readconfig</code></p>\n"}], "owner": {"reputation": 315, "user_id": 1288054, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/1501c5db6db8ac296160593ddeb50457?s=128&d=identicon&r=PG", "display_name": "unixunion", "link": "https://stackoverflow.com/users/1288054/unixunion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2983, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1551022435, "creation_date": 1551012269, "last_edit_date": 1551021960, "question_id": 54851996, "link": "https://stackoverflow.com/questions/54851996/rust-and-serde-deserializing-using-generics", "title": "Rust and serde deserializing using generics", "body": "<p>I am trying to use generics to deserialize structs from file for use with a Swagger generated API. So I have hacked together this which almost works, but I am unable to unpack the external Struct object from the \"Owned\" pointer, as you can see in the tests. </p>\n\n<p>This might be the wrong strategy, but the problem is that I have various yaml files, which I want to read in and deserialise hinting the correct Struct to deserialise as. I don't want to implement a \"readfile\" function for each Struct, as there are many. So I am trying to make this generic lib work which should deserialise into the correct Struct, and use with the Swagger API. </p>\n\n<p>It's very close to working but I cannot seem to unwrap the <code>Outer&lt;ExternalStructA&gt;</code> into just <code>ExternalStructA</code>. </p>\n\n<pre><code>Owned(ExternalStructA { x: 1, y: 2 })\nOwned(ExternalStructB { a: 1, b: 2 })\n</code></pre>\n\n<p><code>lib.rs</code>:</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    use crate::generics_yaml_deserializer::Outer;\n    use serde::{de, Deserialize, Deserializer, Serialize, Serializer};\n\n    #[derive(Debug, Serialize, Deserialize)]\n    pub struct ExternalStructA {\n        x: u32,\n        y: u32,\n    }\n\n    #[derive(Debug, Serialize, Deserialize)]\n    pub struct ExternalStructB {\n        a: u64,\n        b: u64,\n    }\n\n    #[test]\n    fn deserialize() {\n        let a = r#\"---\nptr:\n  x: 1\n  y: 2\n     \"#;\n\n        let b = r#\"---\nptr:\n  a: 1\n  b: 2\n        \"#;\n\n        let resulta: Outer&lt;ExternalStructA&gt; = serde_yaml::from_str(a).unwrap();\n        assert_eq!(1, resulta.ptr.x); // I can't seem to get into ptr ExternalStructA\n        let resultb: Outer&lt;ExternalStructB&gt; = serde_yaml::from_str(b).unwrap();\n        assert_eq!(1, resultb.ptr.a); // I can't seem to get into ptr ExternalStructB \n    }\n}\n\nmod generics_yaml_deserializer {\n    use serde::{de, Deserialize, Deserializer, Serialize, Serializer};\n    use std::error::Error;\n\n    // empty holding struct which owns a owned ptr\n    #[derive(Deserialize, Debug)]\n    pub struct Outer&lt;'a, T: 'a + ?Sized&gt; {\n        #[serde(bound(deserialize = \"Ptr&lt;'a, T&gt;: Deserialize&lt;'de&gt;\"))]\n        pub ptr: Ptr&lt;'a, T&gt;,\n    }\n\n    #[derive(Debug)]\n    pub enum Ptr&lt;'a, T: 'a + ?Sized&gt; {\n        Ref(&amp;'a T),\n        Owned(Box&lt;T&gt;),\n    }\n\n    impl&lt;'de, 'a, T: 'a + ?Sized&gt; Deserialize&lt;'de&gt; for Ptr&lt;'a, T&gt;\n    where\n        Box&lt;T&gt;: Deserialize&lt;'de&gt;,\n    {\n        fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n            where\n                D: Deserializer&lt;'de&gt;,\n        {\n            Deserialize::deserialize(deserializer).map(Ptr::Owned)\n        }\n    }\n}\n</code></pre>\n\n<p>Cargo dependencies:</p>\n\n<pre><code>serde = { version = \"1.0\", features = [\"derive\"] }\nserde_derive = \"1.0\"\nserde_yaml = \"0.7.5\"\nserde_json = \"1.0\"\n</code></pre>\n\n<p>Update:</p>\n\n<p>I have had partial success getting the Struct out with:</p>\n\n<pre><code>let resulta: Outer&lt;ExternalStructA&gt; = serde_yaml::from_str(a).unwrap();\n    match resulta.ptr {\n        Ptr::Owned(e) =&gt; {assert_eq!(1, e.x);},\n        Ptr::Ref(e) =&gt; {println!(\"error\")},\n        Ptr::Owned(_) =&gt; {println!(\"error\")}\n    };\n}\n</code></pre>\n\n<p>But when I try implement this as a function using generic typing, I get lots of errors, the main being:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `for&lt;'de&gt; tests::_IMPL_DESERIALIZE_FOR_ExternalStructA::_serde::Deserialize&lt;'de&gt;` is not implemented for `T`\n</code></pre>\n\n<p>Non-Working code added to mod generics_yaml_deserializer</p>\n\n<pre><code>fn readfile&lt;T&gt;(filename: String) -&gt; Result&lt;Box&lt;T&gt;, Box&lt;std::error::Error&gt;&gt; {\n    let f = std::fs::File::open(filename)?;\n    let config_data: Outer&lt;T&gt; = serde_yaml::from_reader(f)?;\n    Ok(Box::new(config_data))\n}\n\nfn readconfig&lt;T&gt;(filename: String) -&gt; Result&lt;Box&lt;T&gt;, &amp;'static str&gt; {\n    // read the config file\n    let config_data = readfile(filename);\n    match config_data {\n        Ok(e) =&gt; {\n            Ok(Box::new(e))\n        },\n        Err(_) =&gt; {\n            Err(\"nadda\")\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1551009371, "post_id": 54850950, "comment_id": 96475179, "body": "<i>&quot;e.g. can&#39;t <code>try_ready</code> twice in the same future&quot;</i> \u2014 that macro just expands to a match expression, which returns on <code>Pending</code> or <code>Err</code> and otherwise unwraps the result, so there isn&#39;t a problem with calling it twice."}], "answers": [{"comments": [{"owner": {"reputation": 1927, "user_id": 2407600, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/9290fd909aa6fa6232fa1b6c98628073?s=128&d=identicon&r=PG", "display_name": "Roshan", "link": "https://stackoverflow.com/users/2407600/roshan"}, "edited": false, "score": 0, "creation_date": 1551112689, "post_id": 54870312, "comment_id": 96511961, "body": "Perfect, thanks! It was indeed the state machine that was the issue. I was assuming async-await like semantics existing already(basically what I meant by &quot;future doesn&#39;t resume from where it left off previously&quot;) instead of it executing the poll from the beginning every time. As for the <code>poll</code>-based interface, I just picked up the <code>echo-udp.rs</code> example from tokio(<a href=\"https://github.com/tokio-rs/tokio/blob/master/examples/echo-udp.rs\" rel=\"nofollow noreferrer\">github.com/tokio-rs/tokio/blob/master/examples/echo-ud&zwnj;&#8203;p.rs</a>) to get started since it looked like a standard UDP server. Will begin switching to the <code>Future</code>-based one."}, {"owner": {"reputation": 1927, "user_id": 2407600, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/9290fd909aa6fa6232fa1b6c98628073?s=128&d=identicon&r=PG", "display_name": "Roshan", "link": "https://stackoverflow.com/users/2407600/roshan"}, "edited": false, "score": 0, "creation_date": 1551114910, "post_id": 54870312, "comment_id": 96513242, "body": "So, I looked at the <code>Future</code>-based interface and it destroys the socket(and buffer) on error. Is there no better option? E.g. an error that could possibly be handled using the <code>poll</code>-based interface without destroying the socket?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1551124885, "last_edit_date": 1551124885, "creation_date": 1551110872, "answer_id": 54870312, "question_id": 54850950, "link": "https://stackoverflow.com/questions/54850950/tokio-future-that-reads-from-a-channel-and-uses-poll-fn-and-try-ready-never-comp/54870312#54870312", "title": "Tokio future that reads from a channel and uses poll_fn and try_ready never completes", "body": "<p>Using this version of your future shows the problem:</p>\n\n<pre><code>tokio::spawn(\n    future::poll_fn(move || {\n        eprintln!(\"Starting poll_fn\");\n\n        let from_channel = rx\n            .poll()\n            .map_err(|_e| tokio::io::Error::new(tokio::io::ErrorKind::Other, \"Poll error\"));\n\n        if let Some((packet, to)) = futures::try_ready!(dbg!(from_channel)) {\n            futures::try_ready!(dbg!(sock.poll_send_to(packet.as_slice(), &amp;to)));\n        }\n        Ok(futures::Async::Ready(()))\n    })\n    .map_err(|e: tokio::io::Error| println!(\"Error: {:?}\", e)),\n);\n</code></pre>\n\n<p>Here's the slightly cleaned-up output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Starting poll_fn\n[src/main.rs:21] from_channel = Ok(NotReady)\n\nStarting poll_fn\n[src/main.rs:21] from_channel = Ok(Ready(Some(/* ... */)))\n[src/main.rs:22] sock.poll_send_to(packet.as_slice(), &amp;to) = Ok(NotReady)\n\nStarting poll_fn\n[src/main.rs:21] from_channel = Ok(NotReady)\n</code></pre>\n\n<p>In words:</p>\n\n<ol>\n<li>The future starts.</li>\n<li>There's nothing ready from the channel; the channel registers a notification.</li>\n<li>The future returns.</li>\n<li>The channel gets a value and notifies the task.</li>\n<li>The future starts again.</li>\n<li>There's a value ready from the channel.</li>\n<li>Sending on the socket is not ready; the socket registers a notification.</li>\n<li>The future returns.</li>\n<li>The socket is cleared and notifies the task.</li>\n<li>The future starts again.</li>\n<li>There's nothing ready <strong>from the channel</strong>; the channel registers a notification.</li>\n<li>The future returns.</li>\n<li>Nothing else is ever added to the channel.</li>\n</ol>\n\n<p>In short, you aren't correctly maintaining your state machine inside of your future. You need to know how far you got the last time the future ran and start at that point the next time it ran.</p>\n\n<p>There's a reason that the <code>async</code> / <code>await</code> syntax is much-anticipated: it will write these state machines for you.</p>\n\n<p>I don't know <em>why</em> you've chosen to use the lower-level <code>poll</code>-based interface. I'd use the higher-level <code>Future</code>-based one:</p>\n\n<pre><code>tokio::spawn({\n    rx.fold(sock, |sock, (packet, to)| {\n        sock.send_dgram(packet, &amp;to)\n            .inspect(|_| println!(\"Sent it!\"))\n            .map(|(sock, _)| sock)\n            .map_err(|e| panic!(\"Error: {:?}\", e))\n    })\n    .map(drop)\n    .map_err(|e| panic!(\"Error: {:?}\", e))\n});\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>the <code>Future</code>-based interface [...] destroys the socket(and buffer) on error</p>\n</blockquote>\n\n<p>This is a good reason to use the <code>poll</code>-based interface, but I'd still just dip into it long enough to implement your own future. Something like this:</p>\n\n<pre><code>struct X(UdpSocket);\nstruct XSendGram&lt;D&gt; {\n    sock: Option&lt;UdpSocket&gt;,\n    data: D,\n    addr: SocketAddr,\n}\n\nimpl X {\n    fn send_dgram&lt;D&gt;(self, data: D, addr: SocketAddr) -&gt; XSendGram&lt;D&gt; {\n        XSendGram {\n            sock: Some(self.0),\n            data,\n            addr,\n        }\n    }\n}\n\nimpl&lt;D&gt; Future for XSendGram&lt;D&gt;\nwhere\n    D: AsRef&lt;[u8]&gt;,\n{\n    type Item = (X, usize);\n    type Error = (X, std::io::Error);\n\n    fn poll(&amp;mut self) -&gt; Result&lt;Async&lt;Self::Item&gt;, Self::Error&gt; {\n        let mut sock = self.sock.take().expect(\"Future called after success or failure\");\n\n        match sock.poll_send_to(self.data.as_ref(), &amp;self.addr) {\n            Ok(Async::Ready(bytes)) =&gt; Ok(Async::Ready((X(sock), bytes))),\n            Ok(Async::NotReady) =&gt; {\n                self.sock = Some(sock); // Restore it for the next call\n                Ok(Async::NotReady)\n            }\n            Err(e) =&gt; Err((X(sock), e)),\n        }\n    }\n}\n</code></pre>\n\n<pre><code>tokio::spawn({\n    rx.fold(X(sock), |sock, (packet, to)| {\n        sock.send_dgram(packet, to)\n            .inspect(|(_, n)| println!(\"Sent {} bytes\", n))\n            .then(|r| match r {\n                Ok((sock, _)) | Err((sock, _)) =&gt; future::ok(sock),\n            })\n    })\n    .map(drop)\n    .map_err(|e| panic!(\"Error: {:?}\", e))\n});\n</code></pre>\n"}], "owner": {"reputation": 1927, "user_id": 2407600, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/9290fd909aa6fa6232fa1b6c98628073?s=128&d=identicon&r=PG", "display_name": "Roshan", "link": "https://stackoverflow.com/users/2407600/roshan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 928, "favorite_count": 2, "accepted_answer_id": 54870312, "answer_count": 1, "score": 0, "last_activity_date": 1551124885, "creation_date": 1551004071, "last_edit_date": 1551109769, "question_id": 54850950, "link": "https://stackoverflow.com/questions/54850950/tokio-future-that-reads-from-a-channel-and-uses-poll-fn-and-try-ready-never-comp", "title": "Tokio future that reads from a channel and uses poll_fn and try_ready never completes", "body": "<p>I have a Tokio future which never completes (<code>rx</code> is a <code>Receiver</code> and <code>sock</code> is a tokio <code>UdpSocket</code>). It basically reads packets from a packet queue and transmits them over a socket:</p>\n\n<pre><code>poll_fn(move || {\n    match try_ready!(rx\n        .poll()\n        .map_err(|_e| tokio::io::Error::new(tokio::io::ErrorKind::Other, \"Poll error\")))\n    {\n        Some((packet, to)) =&gt; {\n            println!(\n                \"Rx: Received {} bytes for {}: {:?}\",\n                packet.len(),\n                to,\n                packet.as_slice(),\n            );\n            try_ready!(sock.poll_send_to(packet.as_slice(), &amp;to));\n            println!(\"Sent\");\n        }\n        None =&gt; println!(\"Rx end\"),\n    }\n    Ok(futures::Async::Ready(()))\n})\n.map_err(|e: tokio::io::Error| println!(\"Error: {:?}\", e))\n</code></pre>\n\n<p>It executes until the <code>poll_send_to</code> line (the <code>println!</code> just before <code>poll_send_to</code> executes, the <code>println!</code> just after doesn't) and then waits forever without sending the packet.</p>\n\n<p>I replaced the above future with the following one to ensure that it wasn't a socket issue(had some issues with what I think were flaky notifications before):</p>\n\n<pre><code>poll_fn(move || {\n    let packet = vec![0;10];\n    let to = SocketAddr::from_str(\"127.0.0.1:8001\").expect(\"Parse error\");\n    try_ready!(sock.poll_send_to(packet.as_slice(), &amp;to));\n    Ok(futures::Async::Ready(()))\n})\n.map_err(|e: tokio::io::Error| println!(\"Error: {:?}\", e))\n</code></pre>\n\n<p>This future worked perfectly - it sent the packet as expected and exited the program.</p>\n\n<p>I don't think the problem is with the message channels given that <code>rx</code> can <code>poll</code> successfully and prints the <code>println</code> message. I don't think the problem is with the socket either given that the second future works. I am observing packets directly through Wireshark, so I don't think it is an issue with my observations either.</p>\n\n<p>I'm pretty new to Rust and Tokio, so it's possible that I am overlooking some basic fact (e.g. can't <code>try_ready</code> twice in the same future, future doesn't resume from where it left off previously, etc).</p>\n\n<p>Can you help me figure out the problem with the first future?</p>\n\n<pre><code>use futures::future::lazy;\nuse futures::stream::Stream;\nuse futures::try_ready;\nuse std::net::SocketAddr;\nuse std::str::FromStr;\nuse tokio;\nuse tokio::net::UdpSocket;\nuse tokio::prelude::future::poll_fn;\nuse tokio::prelude::Future;\n\nfn main() {\n    let mut sock = UdpSocket::bind(&amp;SocketAddr::from_str(\"127.0.0.1:8000\").expect(\"Parse error\"))\n        .expect(\"Bind error\");\n\n    let (mut tx, mut rx) = tokio::sync::mpsc::channel::&lt;(Vec&lt;u8&gt;, SocketAddr)&gt;(2000);\n\n    tokio::run(lazy(move || {\n        //----------------- This future works ----------------//\n        // tokio::spawn(\n        //     poll_fn(move || {\n        //         let packet = vec![70; 10];\n        //         let to = SocketAddr::from_str(\"127.0.0.1:8001\").expect(\"Parse error\");\n        //         try_ready!(sock.poll_send_to(packet.as_slice(), &amp;to));\n        //         Ok(futures::Async::Ready(()))\n        //     })\n        //     .map_err(|e: tokio::io::Error| println!(\"Error: {:?}\", e)),\n        // );\n\n        //----------------- This future doesn't ----------------//\n        tokio::spawn(\n            poll_fn(move || {\n                match try_ready!(rx\n                    .poll()\n                    .map_err(|_e| tokio::io::Error::new(tokio::io::ErrorKind::Other, \"Poll error\")))\n                {\n                    Some((packet, to)) =&gt; {\n                        // This is printed\n                        println!(\n                            \"Rx: Received {} bytes for {}: {:?}\",\n                            packet.len(),\n                            to,\n                            packet.as_slice(),\n                        );\n                        try_ready!(sock.poll_send_to(packet.as_slice(), &amp;to));\n                        // This is never printed\n                        println!(\"Sent\");\n                    }\n                    None =&gt; println!(\"Rx end\"),\n                }\n                Ok(futures::Async::Ready(()))\n            })\n            .map_err(|e: tokio::io::Error| println!(\"Error: {:?}\", e)),\n        );\n\n        //----------------- This future queues a packet ----------------//\n        tokio::spawn(\n            poll_fn(move || {\n                try_ready!(tx.poll_ready());\n                tx.try_send((\n                    vec![70; 10],\n                    SocketAddr::from_str(\"127.0.0.1:8001\").expect(\"Parse error\"),\n                ))\n                .expect(\"Send error\");\n                // Wait permanently so message channel doesn't get disconnected\n                // Achieved differently in production\n                Ok(futures::Async::NotReady)\n            })\n            .map_err(|e: tokio::sync::mpsc::error::SendError| println!(\"Error: {:?}\", e)),\n        );\n\n        Ok(())\n    }));\n}\n</code></pre>\n\n<p><a href=\"https://github.com/roshanr95/tokio_mcve\" rel=\"nofollow noreferrer\">Repo</a></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 992, "user_id": 3089519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1dc4dfcc798a49c1de0b2dcca4dee3c?s=128&d=identicon&r=PG", "display_name": "swalladge", "link": "https://stackoverflow.com/users/3089519/swalladge"}, "is_accepted": true, "score": 2, "last_activity_date": 1551002879, "creation_date": 1551002879, "answer_id": 54850798, "question_id": 54850578, "link": "https://stackoverflow.com/questions/54850578/how-should-i-type-annotate-collect-in-rust-errore0282/54850798#54850798", "title": "How should I type annotate collect() in Rust (error[E0282])?", "body": "<p><code>.collect()</code> needs a type annotation somewhere in this context. If it can't get it from the annotation to the variable (which it can't when it's hidden behind the unwrap), you need to use the turbofish style of adding the type annotation. The following code works: (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=95859d8abb60faa81d01d69e2b5c1a33\" rel=\"nofollow noreferrer\">playground link</a>)</p>\n\n<pre><code>fn main() {\n    // let strings = vec![\"tofu\", \"93\", \"18\"];\n    let strings = vec![\"93\", \"18\"];\n    let possible_numbers = strings\n        .into_iter()\n        .map(|s| s.parse::&lt;i32&gt;())\n        .collect::&lt;Result&lt;Vec&lt;i32&gt;, std::num::ParseIntError&gt;&gt;()\n        .unwrap();\n    println!(\"Results: {:?}\", possible_numbers);\n}\n</code></pre>\n\n<p>Edit: see also <a href=\"https://matematikaadit.github.io/posts/rust-turbofish.html\" rel=\"nofollow noreferrer\">this blog post</a> for more info on the turbofish operator.</p>\n"}], "owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 991, "favorite_count": 0, "closed_date": 1551033197, "accepted_answer_id": 54850798, "answer_count": 1, "score": 1, "last_activity_date": 1551033161, "creation_date": 1551001162, "last_edit_date": 1551033161, "question_id": 54850578, "link": "https://stackoverflow.com/questions/54850578/how-should-i-type-annotate-collect-in-rust-errore0282", "closed_reason": "Duplicate", "title": "How should I type annotate collect() in Rust (error[E0282])?", "body": "<p>Here's a modified example from <a href=\"https://doc.rust-lang.org/rust-by-example/error/iter_result.html#iterating-over-results\" rel=\"nofollow noreferrer\"><em>Rust by Example</em></a>:</p>\n\n<pre><code>fn main() {\n    // let strings = vec![\"tofu\", \"93\", \"18\"];\n    let strings = vec![\"93\", \"18\"];\n    let possible_numbers: Result&lt;Vec&lt;i32&gt;, std::num::ParseIntError&gt; = strings\n        .into_iter()\n        .map(|s| s.parse::&lt;i32&gt;())\n        .collect();\n    let possible_numbers = possible_numbers.unwrap();\n    // [93, 18]\n    println!(\"Results: {:?}\", possible_numbers);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b88214990ec62621df6a59b1671fe365\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>How can I rewrite it such that <code>unwrap</code> will be in a single chain with the other operators?</p>\n\n<p>If I just add <code>unwrap()</code> (to that operator chain) I receive a compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed, cannot infer type for `B`\n</code></pre>\n"}, {"tags": ["pointers", "memory-management", "rust", "heap-memory", "ownership"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1551003636, "post_id": 54849928, "comment_id": 96473829, "body": "<a href=\"https://github.com/rust-lang/rust/pull/58183\" rel=\"nofollow noreferrer\">Related PR from 2019-02-05</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1551007825, "post_id": 54849928, "comment_id": 96474842, "body": "&quot;If not, how can one force Rust to take such ownership of memory allocated other than by its safe methods?&quot; by definition this make no sense. Also, I will advice to not use <code>Box::from_raw</code> with pointer that doesn&#39;t come from <code>Box</code>, first even if it &quot;could be correct in some case&quot; this could go wrong fast, secondly, I doubt that a good API in C will give you the care to release a resource, except some case where you can just call <code>free</code> and I think it&#39;s better to call <code>free</code> that to guess if box would have too."}], "answers": [{"comments": [{"owner": {"reputation": 112511, "user_id": 623041, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/pIG3S.png?s=128&g=1", "display_name": "eggyal", "link": "https://stackoverflow.com/users/623041/eggyal"}, "edited": false, "score": 1, "creation_date": 1551116998, "post_id": 54858033, "comment_id": 96514179, "body": "I\u2019m actually looking to allocate memory from within Rust (in order to instantiate a custom DST).  My question is, if I use Rust\u2019s allocator to allocate memory and then point at that memory with a (correctly-typed) fat raw pointer, can such pointer be passed to <code>Box::from_raw</code> in order for Rust to assume all further responsibility for that memory (ie ownership, borrowing, deallocation etc)?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1551059987, "last_edit_date": 1551059987, "creation_date": 1551054937, "answer_id": 54858033, "question_id": 54849928, "link": "https://stackoverflow.com/questions/54849928/how-can-one-force-rust-to-take-ownership-of-memory-allocated-other-than-by-its-s/54858033#54858033", "title": "How can one force Rust to take ownership of memory allocated other than by its safe methods?", "body": "<blockquote>\n  <p>Is it valid, albeit unsupported, to pass to <code>Box::from_raw</code> raw pointers to freshly allocated memory</p>\n</blockquote>\n\n<p>No, it is not valid.</p>\n\n<blockquote>\n  <p>In particular, will Rust deallocate that memory when the arising <code>Box</code> is destroyed?</p>\n</blockquote>\n\n<p>Yes, and this is the reason why it's invalid.</p>\n\n<p>Memory allocators provide <em>paired</em> allocation and deallocation routines. When you allocate a piece of memory with one allocator, <strong>you must free it with that allocator</strong>. </p>\n\n<p>If you don't, when the allocator doing the deallocation goes to perform whatever bookkeeping it needs to do, it won't know about that piece of memory. The allocator that actually did the allocation will never mark that memory as unavailable.</p>\n\n<p>These concerns aren't made up, either. I've <a href=\"https://github.com/GNOME/glib/commit/e1d80e9f7c4d2be53f286dd62349b49a06a8e636\" rel=\"nofollow noreferrer\">submitted patches to GLib</a> to correct places where mismatched allocations / deallocations occurred and caused real problems in the wild.</p>\n\n<blockquote>\n  <p>Rust to take such ownership of memory allocated </p>\n</blockquote>\n\n<p>At the level of raw pointers, ownership is largely a state of mind, just like it is in C or C++. To <em>own</em> something here means that you are responsible for cleaning it up appropriately.</p>\n\n<p><code>malloc</code> and <code>free</code> are paired allocation/deallocation methods. You could create your own type and implement <code>Drop</code> for it:</p>\n\n<pre><code>use libc::{free, malloc};\nuse std::{ffi::c_void, mem};\n\nstruct MallocBox(*mut i32);\n\nimpl MallocBox {\n    fn new(v: i32) -&gt; Self {\n        unsafe {\n            let p = malloc(mem::size_of::&lt;i32&gt;()) as *mut i32;\n            *p = v;\n            Self(p)\n        }\n    }\n}\n\nimpl Drop for MallocBox {\n    fn drop(&amp;mut self) {\n        unsafe { free(self.0 as *mut c_void) }\n    }\n}\n\nfn main() {\n    MallocBox::new(42);\n}\n</code></pre>\n\n<p>A real implementation would also implement <code>Deref</code> and probably many other traits so that this type is ergonomic to use.</p>\n\n<p>It would be annoying to have to create a <code>MallocBox</code> and <code>JeMallocBox</code> and a <code>MyCustomAllocBox</code>, which is why <a href=\"https://rust-lang.github.io/rfcs/1398-kinds-of-allocators.html\" rel=\"nofollow noreferrer\">RFC 1398</a> proposes a shared trait for allocators. Related <a href=\"https://github.com/rust-lang/rust/pull/58457\" rel=\"nofollow noreferrer\">work is progressing</a> to convert <code>Box&lt;T&gt;</code> into <code>Box&lt;T, A: Alloc + Default = Global&gt;</code>.</p>\n\n<blockquote>\n  <p>how can one force Rust</p>\n</blockquote>\n\n<p>There's no concept of \"forcing\" Rust to do anything, much less when it comes to low level details like this. For example, there's no guarantee that the C code that allocated the pointer doesn't try to free the pointer itself. In an FFI world, ownership is a cooperative agreement.</p>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42613798/155423\">How do I handle an FFI unsized type that could be owned or borrowed?</a></li>\n<li><a href=\"https://stackoverflow.com/q/50107792/155423\">What is the better way to wrap a FFI struct that owns or borrows data?</a></li>\n</ul>\n"}], "owner": {"reputation": 112511, "user_id": 623041, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/pIG3S.png?s=128&g=1", "display_name": "eggyal", "link": "https://stackoverflow.com/users/623041/eggyal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1062, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1551059987, "creation_date": 1550995293, "last_edit_date": 1551006043, "question_id": 54849928, "link": "https://stackoverflow.com/questions/54849928/how-can-one-force-rust-to-take-ownership-of-memory-allocated-other-than-by-its-s", "title": "How can one force Rust to take ownership of memory allocated other than by its safe methods?", "body": "<p>In his February 2018 note titled \"<a href=\"http://willcrichton.net/notes/rust-memory-safety/\" rel=\"nofollow noreferrer\">Memory Safety in Rust: \nA Case Study with C</a>\", Will Crichton wrote:</p>\n\n<blockquote>\n  <p>Rust provides the ability to take ownership of raw pointers, which we do using <a href=\"https://doc.rust-lang.org/std/slice/fn.from_raw_parts_mut.html\" rel=\"nofollow noreferrer\"><code>slice::from_raw_parts_mut</code></a> and <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.from_raw\" rel=\"nofollow noreferrer\"><code>Box::from_raw</code></a> which tells Rust to treat the memory pointer as a heap-allocated array. After transferring ownership, assuming the memory is valid and of the right size/type, Rust applies its usual memory safety and containment checks.</p>\n</blockquote>\n\n<p>The relevant part of his code to which the above refers is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut new_data = unsafe {\n    let ptr = Heap::default()\n        .alloc(Layout::array::&lt;isize&gt;(new_capacity).unwrap())\n        .unwrap() as *mut isize;\n    Box::from_raw(slice::from_raw_parts_mut(ptr, new_capacity))\n};\n</code></pre>\n\n<p>However, the documentation for <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.from_raw\" rel=\"nofollow noreferrer\"><code>Box::from_raw</code></a> states (emphasis added):</p>\n\n<blockquote>\n  <p>Since the way Box allocates and releases memory is unspecified, <strong><em>the only valid pointer to pass to this function</em></strong> is the one taken from another Box via the <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.into_raw\" rel=\"nofollow noreferrer\"><code>Box::into_raw</code></a> function.</p>\n</blockquote>\n\n<p>For the avoidance of doubt, the (experimental) <a href=\"https://doc.rust-lang.org/std/heap/struct.Heap.html\" rel=\"nofollow noreferrer\"><code>Heap</code></a> API used above to perform memory allocation (since removed in Rust 1.27.0) directly called <code>__rust_alloc</code> in its <a href=\"https://doc.rust-lang.org/1.26.2/src/alloc/heap.rs.html#82-92\" rel=\"nofollow noreferrer\"><code>alloc</code></a> method\u2014and therefore <code>ptr</code> was <em>not</em> obtained from <code>Box::into_raw</code>.</p>\n\n<p>Is it valid, albeit unsupported, to pass to <code>Box::from_raw</code> raw pointers to freshly allocated memory in order to have Rust take ownership of that memory and enforce its usual safety and containment checks?  In particular, will Rust deallocate that memory when the arising Box is destroyed?</p>\n\n<p>If not, how <em>can</em> one force Rust to take such ownership of memory allocated other than by its safe methods?</p>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1550985065, "post_id": 54848732, "comment_id": 96470235, "body": "take a look at <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.slice.html#method.split_at_m&zwnj;&#8203;ut</a>, also why the hell do you try threading to learn a language."}, {"owner": {"reputation": 108, "user_id": 849441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c01fa10889d30e818f11d2f814ba2bb?s=128&d=identicon&r=PG", "display_name": "Telgar", "link": "https://stackoverflow.com/users/849441/telgar"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550986140, "post_id": 54848732, "comment_id": 96470407, "body": "@Stargateur Thanks I may be able to come up with a way to do this with split_at_mut. Not as easy as managing chunks though. Also, I did already do helloworld, and rayon makes multithreading pretty easy. And I read most of the book. Isn&#39;t the best way to learn to swim to jump into the deep end of the pool?"}], "answers": [{"comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1551017241, "post_id": 54849276, "comment_id": 96477109, "body": "You can determine the types by <a href=\"https://doc.rust-lang.org/std/slice/struct.ChunksMut.html#impl-Iterator\" rel=\"nofollow noreferrer\">looking at the <code>Iterator</code> impl in the docs</a>. The answer is in the <code>type Item = &amp;&#39;a mut [T]</code> part of the impl. The reason why you look at this is because it&#39;s how the <code>Iterator</code> trait works: it defines an associated type and that type is the kind of thing that it yields on each iteration."}, {"owner": {"reputation": 108, "user_id": 849441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c01fa10889d30e818f11d2f814ba2bb?s=128&d=identicon&r=PG", "display_name": "Telgar", "link": "https://stackoverflow.com/users/849441/telgar"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1551029037, "post_id": 54849276, "comment_id": 96480501, "body": "Ah, opening the collapsed section under the Iterator impl shows that. Thanks. It even says &quot;<code>type Item = &amp;&#39;a mut [T]</code> The type of the elements being iterated over.&quot;"}], "tags": [], "owner": {"reputation": 108, "user_id": 849441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c01fa10889d30e818f11d2f814ba2bb?s=128&d=identicon&r=PG", "display_name": "Telgar", "link": "https://stackoverflow.com/users/849441/telgar"}, "is_accepted": true, "score": 0, "last_activity_date": 1551032709, "last_edit_date": 1551032709, "creation_date": 1550988784, "answer_id": 54849276, "question_id": 54848732, "link": "https://stackoverflow.com/questions/54848732/is-there-a-way-to-convert-a-chunkmutt-from-vecchunks-mut-to-a-slice-mut-t/54849276#54849276", "title": "Is there a way to convert a ChunkMut&lt;T&gt; from Vec::chunks_mut to a slice &amp;mut [T]?", "body": "<p>It turns out that a <a href=\"https://doc.rust-lang.org/std/slice/struct.ChunksMut.html\" rel=\"nofollow noreferrer\"><code>ChunksMut</code></a> iterator gives slices. I'm not sure how to glean that from the documentation. I figured it out by reading <a href=\"https://github.com/rust-lang/rust/blob/1.32.0/src/libcore/slice/mod.rs#L3904-L3926\" rel=\"nofollow noreferrer\">the source</a>:</p>\n\n<pre><code>#[derive(Debug)]\n#[stable(feature = \"rust1\", since = \"1.0.0\")]\npub struct ChunksMut&lt;'a, T:'a&gt; {\n    v: &amp;'a mut [T],\n    chunk_size: usize\n}\n\n#[stable(feature = \"rust1\", since = \"1.0.0\")]\nimpl&lt;'a, T&gt; Iterator for ChunksMut&lt;'a, T&gt; {\n    type Item = &amp;'a mut [T];\n\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;&amp;'a mut [T]&gt; {\n        if self.v.is_empty() {\n            None\n        } else {\n            let sz = cmp::min(self.v.len(), self.chunk_size);\n            let tmp = mem::replace(&amp;mut self.v, &amp;mut []);\n            let (head, tail) = tmp.split_at_mut(sz);\n            self.v = tail;\n            Some(head)\n        }\n}\n</code></pre>\n\n<p>I guess it's just experience; to others it must be obvious that an iterator of type <code>ChunksMut&lt;T&gt;</code> from <code>Vec&lt;T&gt;</code> returns objects of type <code>[T]</code>. That makes sense now. It just wasn't very clear with the intermediate struct. </p>\n\n<pre><code>pub fn chunks_mut(&amp;mut self, chunk_size: usize) -&gt; ChunksMut&lt;T&gt;\n// ...\nimpl&lt;'a, T&gt; Iterator for ChunksMut&lt;'a, T&gt;\n</code></pre>\n\n<p>Reading this, it looked like the iterator returned objects of type <code>T</code>, the same as <code>Vec&lt;T&gt;.iter()</code>, which wouldn't make sense. </p>\n"}], "owner": {"reputation": 108, "user_id": 849441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c01fa10889d30e818f11d2f814ba2bb?s=128&d=identicon&r=PG", "display_name": "Telgar", "link": "https://stackoverflow.com/users/849441/telgar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 54849276, "answer_count": 1, "score": 0, "last_activity_date": 1551032709, "creation_date": 1550982458, "last_edit_date": 1551032568, "question_id": 54848732, "link": "https://stackoverflow.com/questions/54848732/is-there-a-way-to-convert-a-chunkmutt-from-vecchunks-mut-to-a-slice-mut-t", "title": "Is there a way to convert a ChunkMut&lt;T&gt; from Vec::chunks_mut to a slice &amp;mut [T]?", "body": "<p>I'm filling a vector in parallel, but for this generalized question, I've only found hints and no answers. </p>\n\n<p>The code below works, but I want to switch to <code>Rng::fill</code> instead of iterating over each chunk. It might not be possible to have multiple mutable slices inside a single <code>Vec</code>; I'm not sure. </p>\n\n<pre><code>extern crate rayon;\nextern crate rand;\nextern crate rand_xoshiro;\n\nuse rand::{Rng, SeedableRng};\nuse rand_xoshiro::Xoshiro256StarStar;\nuse rayon::prelude::*;\nuse std::{iter, env};\nuse std::sync::{Arc, Mutex};\n\n// i16 because I was filling up my RAM for large tests...\nfn gen_rand_vec(data: &amp;mut [i16]) {\n    let num_threads = rayon::current_num_threads();\n    let mut rng = rand::thread_rng();\n    let mut prng = Xoshiro256StarStar::from_rng(&amp;mut rng).unwrap();\n    // lazy iterator of fast, unique RNGs\n    // Arc and Mutex are just so it can be accessed from multiple threads\n    let rng_it = Arc::new(Mutex::new(iter::repeat(()).map(|()| {\n        let new_prng = prng.clone();\n        prng.jump();\n        new_prng\n    })));\n    // generates random numbers for each chunk in parallel\n    // par_chunks_mut is parallel version of chunks_mut\n    data.par_chunks_mut(data.len() / num_threads).for_each(|chunk| {\n        // I used extra braces because it might be required to unlock Mutex. \n        // Not sure.\n        let mut prng = { rng_it.lock().unwrap().next().unwrap() };\n        for i in chunk.iter_mut() {\n            *i = prng.gen_range(-1024, 1024);\n        }\n    });\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": false, "score": 2, "last_activity_date": 1551033415, "last_edit_date": 1551033415, "creation_date": 1550978213, "answer_id": 54848394, "question_id": 54848260, "link": "https://stackoverflow.com/questions/54848260/optional-recursive-types/54848394#54848394", "title": "Optional Recursive Types", "body": "<p>I think you are looking for <code>std::rc::Rc</code>, not <code>Box</code>.</p>\n\n<pre><code>use std::collections::vec_deque::VecDeque;\nuse std::rc::Rc;\n\nstruct GraphNode {\n    value: u32,\n    parent: Option&lt;Rc&lt;GraphNode&gt;&gt;,\n}\n\nfn main() {\n    let mut queue: VecDeque&lt;Rc&lt;GraphNode&gt;&gt; = VecDeque::new();\n\n    let parent = Rc::new(GraphNode {\n        value: 23,\n        parent: None,\n    });\n\n    let second = Rc::new(GraphNode {\n        value: 42,\n        parent: None,\n    });\n\n    let third = Rc::new(GraphNode {\n        value: 19,\n        parent: Some(parent.clone()), // Clones the reference, still point to the same thing.\n    });\n\n    queue.push_front(parent);\n    queue.push_front(second);\n    queue.push_front(third);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=95b2d757db0999bb9d43939607c072c5\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p><code>Rc</code> (<strong>r</strong>eference <strong>c</strong>ounted), is a way to have multiple \"owners\" to the same object. When cloning, you are just cloning the reference, so changes made to either one will affect the other. </p>\n\n<p>The lifetime problems you encountered is  because you are storing a direct reference (don't actually know what it's suppose to be called) made with <code>&amp;</code>. </p>\n\n<p>If you want to know more about lifetimes, here's <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">the entry from the book</a>.</p>\n"}], "owner": {"reputation": 350, "user_id": 3995501, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/699717874/picture?type=large", "display_name": "Craig Harley", "link": "https://stackoverflow.com/users/3995501/craig-harley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "closed_date": 1551033521, "answer_count": 1, "score": 0, "last_activity_date": 1551033415, "creation_date": 1550976391, "last_edit_date": 1551033326, "question_id": 54848260, "link": "https://stackoverflow.com/questions/54848260/optional-recursive-types", "closed_reason": "Duplicate", "title": "Optional Recursive Types", "body": "<p>I have a structure with a parent property I want to add to a queue. The parent is the same type as itself, so I need to wrap it in a <code>Box</code>.</p>\n\n<pre><code>use std::collections::vec_deque::VecDeque;\n\nstruct GraphNode {\n    value: u32,\n    parent: Option&lt;Box&lt;&amp;GraphNode&gt;&gt;,\n}\n\nfn main() {\n    let mut queue: VecDeque&lt;GraphNode&gt; = VecDeque::new();\n\n    let parent = GraphNode {\n        value: 23,\n        parent: Option::None,\n    };\n\n    let second = GraphNode { value: 42, parent };\n\n    let third = GraphNode {\n        value: 19,\n        parent: Option::Some(Box::from(&amp;parent)),\n    };\n\n    queue.push_front(parent);\n    queue.push_front(second);\n    queue.push_front(third);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0d9f56d4419ffb76816095ff65ee400d\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:5:24\n  |\n5 |     parent: Option&lt;Box&lt;&amp;GraphNode&gt;&gt;,\n  |                        ^ expected lifetime paramete\n</code></pre>\n\n<p>The parent can be null, so I get that it needs to be <code>Box&lt;Option&lt;&amp;GraphNode&gt;&gt;</code>, but I get the error <code>expected lifetime parameter</code>, however what's in the docs isn't really making sense to me.</p>\n\n<p>There's also the issue that when I create a <code>Box</code>, to save to the parent, the value is moved. I don't want to move the value, I just want to save a reference in the box.</p>\n"}, {"tags": ["rust", "future"], "answers": [{"comments": [{"owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "edited": false, "score": 0, "creation_date": 1550950037, "post_id": 54845257, "comment_id": 96463648, "body": "looks great! There&#39;s still one problem, though: when I uncomment my <code>take_while()</code> it says <code>expected &amp;i32, found integral variable | help: consider borrowing here: &amp;5</code> and if I put a reference, it says <code>error[E0277]: the trait bound bool: futures::future::Future is not satisfied</code> which is weird to me."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 1, "last_activity_date": 1550949595, "creation_date": 1550949595, "answer_id": 54845257, "question_id": 54844417, "link": "https://stackoverflow.com/questions/54844417/how-to-use-take-while-with-futuresstream/54845257#54845257", "title": "How to use take_while with futures::Stream?", "body": "<p><code>wait</code> returns an iterator version of the stream, but that iterator remains lazy, which means you need to iterate it to actually execute your closure:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::{stream, Stream}; // 0.1.25\n\nfn into_many(i: i32) -&gt; impl Stream&lt;Item = i32, Error = ()&gt; {\n    stream::iter_ok(0..i)\n}\n\nfn main() {\n    println!(\"start:\");\n    let foo = into_many(10)\n        // .take_while(|x| { x &lt; 10 })\n        .map(|x| {\n            println!(\"number={}\", x);\n            x\n        })\n        .wait();\n\n    for _ in foo {} // \u2190 this\n\n    println!(\"finish:\");\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9510d39e135e99a5391f6aff89059d8d\" rel=\"nofollow noreferrer\">link to playground</a>)</p>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1550950905, "creation_date": 1550950905, "answer_id": 54845478, "question_id": 54844417, "link": "https://stackoverflow.com/questions/54844417/how-to-use-take-while-with-futuresstream/54845478#54845478", "title": "How to use take_while with futures::Stream?", "body": "<p><code>take_while</code> expects the closure to return a future, or something that can be converted to a future. <code>bool</code> doesn't implement <code>IntoFuture</code>, so you have to wrap it in a future instead. <a href=\"https://docs.rs/futures/0.1/futures/future/fn.ok.html\" rel=\"nofollow noreferrer\"><code>future::ok</code></a> returns a future that is immediately ready with the specified value.</p>\n\n<pre><code>use futures::{future, stream, Stream}; // 0.1.25\n\nfn into_many(i: i32) -&gt; impl Stream&lt;Item = i32, Error = ()&gt; {\n    stream::iter_ok(0..i)\n}\n\nfn main() {\n    println!(\"start:\");\n    let foo = into_many(10)\n        .take_while(|&amp;x| { future::ok(x &lt; 10) })\n        .map(|x| {\n            println!(\"number={}\", x);\n            x\n        })\n        .wait();\n\n    for _ in foo {}\n\n    println!(\"finish:\");\n}\n</code></pre>\n"}], "owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 254, "favorite_count": 0, "accepted_answer_id": 54845478, "answer_count": 2, "score": 0, "last_activity_date": 1551033785, "creation_date": 1550944471, "last_edit_date": 1551033785, "question_id": 54844417, "link": "https://stackoverflow.com/questions/54844417/how-to-use-take-while-with-futuresstream", "title": "How to use take_while with futures::Stream?", "body": "<p>I'm trying to understand what syntax should I use for <a href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html#method.take_while\" rel=\"nofollow noreferrer\"><code>take_while()</code></a> with <code>futures::Stream;</code> crate (0.1.25). Here's a piece of code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ff7b38df9512d7c41f641872ffd2cd74\" rel=\"nofollow noreferrer\">on playground</a>):</p>\n\n<pre><code>use futures::{stream, Stream}; // 0.1.25\n\nfn into_many(i: i32) -&gt; impl Stream&lt;Item = i32, Error = ()&gt; {\n    stream::iter_ok(0..i)\n}\n\nfn main() {\n    println!(\"start:\");\n    let _ = into_many(10)\n        // .take_while(|x| { x &lt; 10 })\n        .map(|x| {\n            println!(\"number={}\", x);\n            x\n        })\n        .wait();\n    for _ in foo {} // \u2190 this (by @mcarton)\n\n    println!(\"finish:\");\n}\n</code></pre>\n\n<p>The main goal is to determine the right combinations of operators/commands to run the presented playground successfully with <code>take_while</code>: when I uncomment my take_while() it says </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected &amp;i32, found integral variable | help: consider borrowing here: &amp;10\n</code></pre>\n\n<p>and if I put a reference, it says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound bool: futures::future::Future is not satisfied\n</code></pre>\n\n<p>which is weird to me.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551033708, "post_id": 54843118, "comment_id": 96481931, "body": "What&#39;s the benefit to having <i>multiple</i> libraries?"}, {"owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551069804, "post_id": 54843118, "comment_id": 96490067, "body": "@Shepmaster Good question. Could be same with benefits of having multiple <i>executables</i>?"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 14, "last_activity_date": 1550951498, "creation_date": 1550951498, "answer_id": 54845572, "question_id": 54843118, "link": "https://stackoverflow.com/questions/54843118/why-can-a-cargo-package-only-have-one-library-target/54845572#54845572", "title": "Why can a Cargo package only have one library target?", "body": "<p>Cargo is primarily a package manager. Thus, the primary role of a package is to define a library.</p>\n\n<p>When we use a crate as a dependency, we only specify the package name in our <code>Cargo.toml</code>. Since there can be at most one library, Cargo doesn't need you to specify which one to use. If it were allowed to define multiple libraries in the same package, then we'd need to specify a way to define dependencies between them, so you'd have two ways to declare dependencies (external packages vs. internal crates), making the system more complex.</p>\n\n<p>On the other hand, adding a dependency that doesn't provide a library doesn't make sense, at least not with Cargo, since Cargo only cares about the library target in that context. Thus, there is no reason to limit the other types of targets (binaries, examples, tests, etc.) to one each.</p>\n"}, {"tags": [], "owner": {"reputation": 1258, "user_id": 1612190, "user_type": "registered", "accept_rate": 15, "profile_image": "https://www.gravatar.com/avatar/34f5fd6ee400ab531f50e37dbf7bb672?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1612190/george"}, "is_accepted": false, "score": 0, "last_activity_date": 1574660394, "last_edit_date": 1574660394, "creation_date": 1574429436, "answer_id": 58995300, "question_id": 54843118, "link": "https://stackoverflow.com/questions/54843118/why-can-a-cargo-package-only-have-one-library-target/58995300#58995300", "title": "Why can a Cargo package only have one library target?", "body": "<p>I would expect that it is because a <code>library crate</code> within a package is already a collection (functions, types, values, etc.) whereas the <code>binary crates</code> are opaque executables (with a main entry point). Consequently, the library crates name is merely the root module within its hierarchy and the binary crates name is its entirety and occur at the top level of the package. </p>\n"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1501, "favorite_count": 0, "accepted_answer_id": 54845572, "answer_count": 2, "score": 15, "last_activity_date": 1574660394, "creation_date": 1550935655, "last_edit_date": 1550951775, "question_id": 54843118, "link": "https://stackoverflow.com/questions/54843118/why-can-a-cargo-package-only-have-one-library-target", "title": "Why can a Cargo package only have one library target?", "body": "<p><a href=\"https://doc.rust-lang.org/book/ch07-01-packages-and-crates-for-making-libraries-and-executables.html\" rel=\"noreferrer\">According to its manual</a>, Cargo packages can have multiple executable targets, but only one library target is allowed. </p>\n\n<blockquote>\n  <p>A package can contain zero or one library crates and as many binary crates as you\u2019d like. There must be at least one crate (either a library or a binary) in a package.</p>\n</blockquote>\n\n<p>Why is it limited to one? What are the reasons and benefits?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 27317, "user_id": 893693, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/yHFyJ.jpg?s=128&g=1", "display_name": "Stephan Dollberg", "link": "https://stackoverflow.com/users/893693/stephan-dollberg"}, "edited": false, "score": 3, "creation_date": 1550936463, "post_id": 54843033, "comment_id": 96459668, "body": "This seems to be an issue with your C code rather. Python <code>&gt;&gt;&gt; hex(0x56eaa5f5f650a9e3 * 0xa0cf24341e75bda9)                                                                             &#39;0x3698fbc09d2c5b15e8889b1b676bbddb&#39;</code> and wolfram alpha agree with the rust result <a href=\"https://www.wolframalpha.com/input/?i=0x56eaa5f5f650a9e3+%2A+0xa0cf24341e75bda9+in+hex\" rel=\"nofollow noreferrer\">link</a> Can you show the whole C code as well."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1550936912, "post_id": 54843033, "comment_id": 96459797, "body": "Can you please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> (in particular <i>complete</i> and <i>verifiable</i>) for the Rust <i>and</i> the C code? I also think the error is in your C code as Rust&#39;s result seems to be correct."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1550936946, "post_id": 54843033, "comment_id": 96459812, "body": "<code>&gt;&gt;&gt; hex(0x3698fbc09d2c5b15e8889b1b676bbddb&#47;&#47;0x56eaa5f5f650a9e3)</code>  <code>&#39;0xa0cf24341e75bda9&#39;</code>  <code>&gt;&gt;&gt; hex(0x3698fbc0f417010bded944fe676bbddb&#47;&#47;0x56eaa5f5f650a9e3)</code>  <code>&#39;0xa0cf24351e75bda9&#39;</code>  Looks like you made a typo"}], "answers": [{"comments": [{"owner": {"reputation": 143, "user_id": 1434445, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/M3DMj.gif?s=128&g=1", "display_name": "thunder", "link": "https://stackoverflow.com/users/1434445/thunder"}, "edited": false, "score": 0, "creation_date": 1550937465, "post_id": 54843297, "comment_id": 96459934, "body": "year, you are right, the input is different. I starred a the hashes for hours and didn&#39;t see any difference!"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 6, "last_activity_date": 1550937791, "last_edit_date": 1550937791, "creation_date": 1550937127, "answer_id": 54843297, "question_id": 54843033, "link": "https://stackoverflow.com/questions/54843033/wrong-u128-multiplication-in-rust/54843297#54843297", "title": "Wrong u128 multiplication in Rust?", "body": "<p>I looks like you must have a made a typo in either language:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>&gt;&gt;&gt; hex(0x3698fbc09d2c5b15e8889b1b676bbddb//0x56eaa5f5f650a9e3)\n'0xa0cf24341e75bda9' # what your Rust code uses\n&gt;&gt;&gt; hex(0x3698fbc0f417010bded944fe676bbddb//0x56eaa5f5f650a9e3)\n'0xa0cf24351e75bda9' # what your online calculator uses\n          ^\n</code></pre>\n\n<p>Classical case of off-by-0x100000000 error :)</p>\n"}], "owner": {"reputation": 143, "user_id": 1434445, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/M3DMj.gif?s=128&g=1", "display_name": "thunder", "link": "https://stackoverflow.com/users/1434445/thunder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "closed_date": 1550949706, "answer_count": 1, "score": 0, "last_activity_date": 1550937791, "creation_date": 1550935053, "last_edit_date": 1550937186, "question_id": 54843033, "link": "https://stackoverflow.com/questions/54843033/wrong-u128-multiplication-in-rust", "closed_reason": "Not suitable for this site", "title": "Wrong u128 multiplication in Rust?", "body": "<p>Before I open bug, I want to check what is going on here.</p>\n\n<p>I'm porting this C-code here to Rust:</p>\n\n<pre><code>    unsigned __int128 r = (unsigned __int128)a * (unsigned __int128)b;\n</code></pre>\n\n<p>easy enough (I thought):</p>\n\n<pre><code>    let r = (a as u128) * (b as u128);\n</code></pre>\n\n<p>Now with this input parameters I get a different multiplication result in C and Rust:</p>\n\n<pre><code>(0x56eaa5f5f650a9e3 as u128) * (0xa0cf24341e75bda9 as u128)\n</code></pre>\n\n<p>The results are different in Rust and C:</p>\n\n<pre><code>Rust: 0x3698fbc09d2c5b15e8889b1b676bbddb\nC:    0x3698fbc0f417010bded944fe676bbddb\n                ^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I <a href=\"https://www.miniwebtool.com/hex-calculator/?number1=56eaa5f5f650a9e3&amp;operate=3&amp;number2=a0cf24351e75bda9\" rel=\"nofollow noreferrer\">cross-checked the result</a>, and got the same result as the C code.</p>\n\n<p>Am I missing something?</p>\n\n<p>=== context information added:</p>\n\n<p>It is this function from xmr-stak (<a href=\"https://github.com/fireice-uk/xmr-stak\" rel=\"nofollow noreferrer\">https://github.com/fireice-uk/xmr-stak</a>) thas is behaving differently:</p>\n\n<pre><code>static inline uint64_t _umul128(uint64_t a, uint64_t b, uint64_t* hi)\n{\n    unsigned __int128 r = (unsigned __int128)a * (unsigned __int128)b;\n    *hi = r &gt;&gt; 64;\n    return (uint64_t)r;\n}\n</code></pre>\n\n<p>Regardless if the C implementation is wrong, I have to recreate the exact computation in Rust, because this is needed for a hash computation.</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1550930190, "post_id": 54842037, "comment_id": 96457987, "body": "I don&#39;t understand why you consider use <code>extern &quot;C&quot;</code> as no pure Rust."}, {"owner": {"reputation": 120, "user_id": 10595480, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69aa10b2de932c08845f54a41ee05b65?s=128&d=identicon&r=PG&f=1", "display_name": "Siho", "link": "https://stackoverflow.com/users/10595480/siho"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550930434, "post_id": 54842037, "comment_id": 96458056, "body": "Maybe I misunderstand but isn&#39;t extern C for declaring an FFI call to C? So I&#39;m basically declaring an empty C function?  Which is the same as ((void (*)(void))? There is no way of expressing that in rust?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 5, "creation_date": 1550930564, "post_id": 54842037, "comment_id": 96458090, "body": "&quot;There is no way of expressing that in rust?&quot; you just did, <code>extern &quot;C&quot;</code> is a part of rust language, not C, I don&#39;t see the problem. You could &quot;hide&quot; these detail of implementation but that Rust code and as you said it&#39;s work as expected."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551037473, "post_id": 54842037, "comment_id": 96483125, "body": "<i>isn&#39;t extern C for declaring an FFI call to C</i> \u2014 no, it&#39;s for declaring a function that uses the C ABI. You can use it <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=45e2b6f7a4370d0c549682c5484e6e0e\" rel=\"nofollow noreferrer\">completely inside of a Rust program</a>, although the usefulness there is limited."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551102305, "post_id": 54842037, "comment_id": 96505463, "body": "<i>without using the C ABI</i> \u2014 <b>why</b>? What do you possibly hope to gain?"}, {"owner": {"reputation": 24802, "user_id": 232918, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/b5897762377de1c8ffb9a98673262e91?s=128&d=identicon&r=PG", "display_name": "doron", "link": "https://stackoverflow.com/users/232918/doron"}, "edited": false, "score": 0, "creation_date": 1551102456, "post_id": 54842037, "comment_id": 96505555, "body": "You can use assembly in rust: <a href=\"https://doc.rust-lang.org/1.12.0/book/inline-assembly.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.12.0/book/inline-assembly.html</a>"}, {"owner": {"reputation": 120, "user_id": 10595480, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69aa10b2de932c08845f54a41ee05b65?s=128&d=identicon&r=PG&f=1", "display_name": "Siho", "link": "https://stackoverflow.com/users/10595480/siho"}, "edited": false, "score": 0, "creation_date": 1551275782, "post_id": 54842037, "comment_id": 96581202, "body": "I don&#39;t really want to gain anything it&#39;s more for exploration. I kind of want to do the JUMP call without having to do <code>unwrap</code> then call it as a function <code>()</code> if that makes sens. It&#39;s more about exploration than an actual problem or performance gain/size reduction. As suggested I guess one could do it with inline assembly but it&#39;s not really what I&#39;m looking for. So what I possible hope to gain is some more knowledge of Rust ^^"}], "owner": {"reputation": 120, "user_id": 10595480, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69aa10b2de932c08845f54a41ee05b65?s=128&d=identicon&r=PG&f=1", "display_name": "Siho", "link": "https://stackoverflow.com/users/10595480/siho"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 108, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1551102273, "creation_date": 1550927816, "last_edit_date": 1551102273, "question_id": 54842037, "link": "https://stackoverflow.com/questions/54842037/is-there-a-way-to-set-the-program-counter-on-arm-without-using-the-c-abi", "title": "Is there a way to set the program counter on ARM without using the C ABI?", "body": "<p>This code works for setting the program counter to the address of the <code>vector_table</code> on the ARM architecture:</p>\n\n<pre><code>static mut JUMP: Option&lt;extern \"C\" fn()&gt; = None;\nJUMP = Some(core::mem::transmute(vector_table));\n(JUMP.unwrap())();\n</code></pre>\n\n<p>I calculate the vector table using <code>let vector_table = *((address + 4) as * const u32);</code></p>\n\n<p><em>Is there any way of expressing the same in pure Rust code?</em></p>\n\n<p>The equivalent C code is:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>((void (*)(void))address[1])();\n</code></pre>\n\n<p><code>address</code> is an <code>uint32_t *address</code>, so you offset it by 4 bytes to hit the vector table.</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550928940, "post_id": 54841879, "comment_id": 96457642, "body": "you link two questions that fix your issue"}, {"owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550928998, "post_id": 54841879, "comment_id": 96457656, "body": "@Stargateur in fact, they don&#39;t since I cannot use <code>into_iter()</code> without implementing it."}, {"owner": {"reputation": 992, "user_id": 3089519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1dc4dfcc798a49c1de0b2dcca4dee3c?s=128&d=identicon&r=PG", "display_name": "swalladge", "link": "https://stackoverflow.com/users/3089519/swalladge"}, "edited": false, "score": 2, "creation_date": 1550930186, "post_id": 54841879, "comment_id": 96457984, "body": "Have you discovered the source of the error (trait <code>Try</code> not implemented for String)? With a quick glance, it looks like you need to stop using <code>?</code> inside the map function and see if <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\">collect</a> can do this for you (the linked docs has an example which is similar to what you want). You can&#39;t just copy-paste other solutions; you&#39;ll need to understand the types you are working with and develop a solution that fits."}, {"owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "reply_to_user": {"reputation": 992, "user_id": 3089519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1dc4dfcc798a49c1de0b2dcca4dee3c?s=128&d=identicon&r=PG", "display_name": "swalladge", "link": "https://stackoverflow.com/users/3089519/swalladge"}, "edited": false, "score": 0, "creation_date": 1550931200, "post_id": 54841879, "comment_id": 96458264, "body": "@swalladge that&#39;s exactly what I&#39;ve tried, but I still end up with <code>Vec&lt;Result&lt;&gt;&gt;</code> I think is <code>collect()</code> does this for <code>Iterator</code> but can&#39;t do it for <code>Stream</code> and I can&#39;t do <code>into_iter()</code>."}, {"owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "edited": false, "score": 0, "creation_date": 1550932512, "post_id": 54841879, "comment_id": 96458621, "body": "I.e., if I remove <code>?</code> I receive ```    = note: expected type <code>std::vec::Vec&lt;i64&gt;</code>                found type `std::vec::Vec&lt;std::result::Result&lt;i64, errors::CustomError&gt;&gt;```"}, {"owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550945488, "post_id": 54841879, "comment_id": 96462310, "body": "@Stargateur please take another look, I&#39;ve updated the question with a piece of code on a playground."}], "answers": [{"tags": [], "owner": {"reputation": 992, "user_id": 3089519, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1dc4dfcc798a49c1de0b2dcca4dee3c?s=128&d=identicon&r=PG", "display_name": "swalladge", "link": "https://stackoverflow.com/users/3089519/swalladge"}, "is_accepted": true, "score": 2, "last_activity_date": 1551037704, "last_edit_date": 1551037704, "creation_date": 1550963407, "answer_id": 54847183, "question_id": 54841879, "link": "https://stackoverflow.com/questions/54841879/how-can-i-use-streammap-with-a-function-that-returns-result/54847183#54847183", "title": "How can I use Stream::map with a function that returns Result?", "body": "<p>The following code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=aff671d7d47030672899ee56a83c5a10\" rel=\"nofollow noreferrer\">playground link</a>) as a modification of your current code in your question gets the result you want:</p>\n\n<pre><code>use futures::{stream, Future, Stream}; // 0.1.25\nuse std::num::ParseIntError;\n\nfn into_many(i: i32) -&gt; impl Stream&lt;Item = i32, Error = ParseIntError&gt; {\n    stream::iter_ok(0..i)\n}\n\nfn convert_to_string(number: i32) -&gt; Result&lt;String, ParseIntError&gt; {\n    Ok(number.to_string())\n}\n\nfn main() {\n    println!(\"start:\");\n    let vec: Result&lt;Vec&lt;String&gt;, ParseIntError&gt; = into_many(10)\n        .map(|number| convert_to_string(number))\n        .collect()\n        .wait()\n        .unwrap()\n        .into_iter()\n        .collect();\n\n    println!(\"vec={:#?}\", vec);\n\n    println!(\"finish:\");\n}\n</code></pre>\n\n<p>Since your current code returned a <code>Vec</code>, we can turn that into an iterator and collect that into the type you want. Type annotations are needed so that collect knows what type to collect the iterator into.</p>\n\n<p>Note that the <code>collect</code> method on the <code>Iterator</code> trait isn't to be confused with the <code>collect</code> method on a <code>Stream</code>.</p>\n\n<p>Finally, while this works, it may not be exactly what you want, since it still waits for all results from the stream to be collected into a vector, <em>before</em> using collect to transform the vector. I don't have experience with futures so not sure how possible this is (it probably is but may require a less neat functional programming style solution).</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1551037950, "creation_date": 1551037950, "answer_id": 54855878, "question_id": 54841879, "link": "https://stackoverflow.com/questions/54841879/how-can-i-use-streammap-with-a-function-that-returns-result/54855878#54855878", "title": "How can I use Stream::map with a function that returns Result?", "body": "<blockquote>\n  <p><code>map</code> with a function that returns <code>Result</code></p>\n</blockquote>\n\n<p>Don't do this, that's not when you should use <code>map</code>. Instead, use <a href=\"https://docs.rs/futures/0.1.25/futures/stream/trait.Stream.html#method.and_then\" rel=\"nofollow noreferrer\"><code>and_then</code></a>:</p>\n\n<pre><code>let vec = into_many(10)\n    .and_then(|number| convert_to_string(number))\n    .collect()\n    .wait()\n    .unwrap();\n</code></pre>\n\n<p>You should practice with simpler Rust concepts like <code>Option</code>, <code>Result</code>, and iterators before diving into futures. Many concepts transfer over.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52453180/155423\">How do I unwrap an arbitrary number of nested Option types?</a></li>\n<li><a href=\"https://stackoverflow.com/q/39805834/155423\">What is the idiomatic way to handle/unwrap nested Result types?</a></li>\n</ul>\n"}], "owner": {"reputation": 351, "user_id": 10946826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55ebee3f352a4b3f8d5bca9c2e4b13da?s=128&d=identicon&r=PG&f=1", "display_name": "James Larkin", "link": "https://stackoverflow.com/users/10946826/james-larkin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 898, "favorite_count": 0, "accepted_answer_id": 54847183, "answer_count": 2, "score": 2, "last_activity_date": 1551037972, "creation_date": 1550926702, "last_edit_date": 1551037972, "question_id": 54841879, "link": "https://stackoverflow.com/questions/54841879/how-can-i-use-streammap-with-a-function-that-returns-result", "title": "How can I use Stream::map with a function that returns Result?", "body": "<p>I've got the following piece of code (see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ebf433f04e16274d7af51d306f839386\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>use futures::{stream, Future, Stream}; // 0.1.25\nuse std::num::ParseIntError;\n\nfn into_many(i: i32) -&gt; impl Stream&lt;Item = i32, Error = ParseIntError&gt; {\n    stream::iter_ok(0..i)\n}\n\nfn convert_to_string(number: i32) -&gt; Result&lt;String, ParseIntError&gt; {\n    Ok(number.to_string())\n}\n\nfn main() {\n    println!(\"start:\");\n    let vec = into_many(10)\n        .map(|number| convert_to_string(number))\n        .collect()\n        .wait()\n        .unwrap();\n\n    println!(\"vec={:#?}\", vec);\n\n    println!(\"finish:\");\n}\n</code></pre>\n\n<p>It outputs the following (i.e., <code>Vec&lt;Result&lt;i32, ParseIntError&gt;&gt;</code>):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>start:\nvec=[\n    Ok(\n        \"0\"\n    ),\n    Ok(\n        \"1\"\n    ),\n    Ok(\n        \"2\"\n    ), ...\n</code></pre>\n\n<p>Is there any way to make it output a <code>Vec&lt;i32&gt;</code> and if any error happens than immediately stop execution and return from the function (e.g., like <a href=\"https://doc.rust-lang.org/rust-by-example/error/iter_result.html#iterating-over-results\" rel=\"nofollow noreferrer\">this example</a>)?</p>\n\n<p><em>Note</em>: I do want to use <code>use futures::Stream; // 0.1.25</code> even if it doesn't make sense for this particular example.</p>\n"}, {"tags": ["types", "casting", "rust", "type-conversion"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 13, "last_activity_date": 1615712397, "last_edit_date": 1615712397, "creation_date": 1550923516, "answer_id": 54841400, "question_id": 54841351, "link": "https://stackoverflow.com/questions/54841351/how-do-i-idiomatically-convert-a-bool-to-an-option-or-result-in-rust/54841400#54841400", "title": "How do I idiomatically convert a bool to an Option or Result in Rust?", "body": "<p><strong>This answer is somewhat outdated</strong>. Starting with Rust 1.50, you can use the built-in <code>bool::then</code>. See the other answers below for more information.</p>\n<hr />\n<p>There is the <a href=\"https://crates.io/crates/boolinator\" rel=\"nofollow noreferrer\"><code>boolinator</code> crate</a>. It defines <a href=\"https://docs.rs/boolinator/*/boolinator/trait.Boolinator.html\" rel=\"nofollow noreferrer\">the extension trait <code>Boolinator</code></a> for <code>bool</code> which adds a couple of useful methods. Example:</p>\n<pre><code>use boolinator::Boolinator;\n\nmy_bool.as_some(MyObject {});                // Option&lt;MyObject&gt;\nmy_bool.as_result(MyObject {}, MyError {});  // Result&lt;MyObject, MyError&gt;\n</code></pre>\n<p>A <code>true</code> value leads to <code>Some(_)</code> or <code>Ok(_)</code>, while a <code>false</code> value leads to <code>None</code> or <code>Err(_)</code>.</p>\n<p>There is an <a href=\"https://github.com/rust-lang/rfcs/issues/2606\" rel=\"nofollow noreferrer\">issue about adding functionality like this to <code>std</code></a> on the RFCs repository, but it doesn't look like it's happening anytime soon.</p>\n"}, {"tags": [], "owner": {"reputation": 7521, "user_id": 111426, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/c6a182b10a77f3a5170e26eef4320a76?s=128&d=identicon&r=PG", "display_name": "Michael Koval", "link": "https://stackoverflow.com/users/111426/michael-koval"}, "is_accepted": false, "score": 14, "last_activity_date": 1598514179, "last_edit_date": 1598514179, "creation_date": 1591165489, "answer_id": 62166509, "question_id": 54841351, "link": "https://stackoverflow.com/questions/54841351/how-do-i-idiomatically-convert-a-bool-to-an-option-or-result-in-rust/62166509#62166509", "title": "How do I idiomatically convert a bool to an Option or Result in Rust?", "body": "<p><a href=\"https://doc.rust-lang.org/std/primitive.bool.html#method.then_some\" rel=\"noreferrer\"><code>bool.then_some()</code></a> does this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let my_bool = true;\nlet my_option = my_bool.then_some(MyObject{});\nlet my_result = my_bool.then_some(MyObject{}).ok_or(MyError{});\n</code></pre>\n<p>At the time of writing, this is still part of the experimental <a href=\"https://github.com/rust-lang/rust/issues/64260\" rel=\"noreferrer\"><code>bool_to_option</code></a> feature.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1606318196, "creation_date": 1606318196, "answer_id": 65007774, "question_id": 54841351, "link": "https://stackoverflow.com/questions/54841351/how-do-i-idiomatically-convert-a-bool-to-an-option-or-result-in-rust/65007774#65007774", "title": "How do I idiomatically convert a bool to an Option or Result in Rust?", "body": "<p>Use an <code>if</code> expression:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>if my_bool { Ok(()) } else { Err(MyError::False) }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4500, "user_id": 8858995, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d1981ec5dd8311a79e695d512716ef?s=128&d=identicon&r=PG&f=1", "display_name": "Ibraheem Ahmed", "link": "https://stackoverflow.com/users/8858995/ibraheem-ahmed"}, "is_accepted": false, "score": 11, "last_activity_date": 1614552155, "last_edit_date": 1614552155, "creation_date": 1606339304, "answer_id": 65012849, "question_id": 54841351, "link": "https://stackoverflow.com/questions/54841351/how-do-i-idiomatically-convert-a-bool-to-an-option-or-result-in-rust/65012849#65012849", "title": "How do I idiomatically convert a bool to an Option or Result in Rust?", "body": "<p>As of Rust 1.50 you can use <a href=\"https://doc.rust-lang.org/std/primitive.bool.html#method.then\" rel=\"noreferrer\"><code>bool::then</code></a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>assert_eq!(false.then(|| val), None);\nassert_eq!(true.then(|| val), Some(val));\n</code></pre>\n<p>You can convert it to a <code>Result</code> by chaining <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or\" rel=\"noreferrer\"><code>Option::ok_or</code></a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>assert_eq!(false.then(|| val).ok_or(err), Err(err));\nassert_eq!(true.then(|| val).ok_or(err), Ok(val));\n</code></pre>\n<p>On nightly, you can use <a href=\"https://doc.rust-lang.org/std/primitive.bool.html#method.then\" rel=\"noreferrer\"><code>bool::then_some</code></a> and pass a value directly instead of creating a closure:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(bool_to_option)]\n\nassert_eq!(false.then_some(val), None);\nassert_eq!(true.then_some(val), Some(val));\n</code></pre>\n<p>Alternatively, you can use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.filter\" rel=\"noreferrer\"><code>Option::filter</code></a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>assert_eq!(Some(obj).filter(|_| false), None);\nassert_eq!(Some(obj).filter(|_| true).ok_or(err), Ok(obj));\n</code></pre>\n"}], "owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4384, "favorite_count": 0, "accepted_answer_id": 54841400, "answer_count": 4, "score": 17, "last_activity_date": 1615712397, "creation_date": 1550923214, "last_edit_date": 1608031862, "question_id": 54841351, "link": "https://stackoverflow.com/questions/54841351/how-do-i-idiomatically-convert-a-bool-to-an-option-or-result-in-rust", "title": "How do I idiomatically convert a bool to an Option or Result in Rust?", "body": "<p>It seems there is no way of such one-line conversion using <code>std</code>.</p>\n<p>I do not like this kind of verbosity:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>match my_bool {\n    true =&gt; Ok(()),\n    false =&gt; Err(MyError::False),\n}\n</code></pre>\n<p>I would like to use a one-liner, for example:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let my_bool = true;\nlet my_option = my_bool.to_option(MyObject{}); // true =&gt; MyObject{}, false =&gt; None\nlet my_result = my_bool.to_result(MyObject{}, MyError{}); // true =&gt; MyObject{}, false =&gt; MyError{}\n</code></pre>\n<p>What is the shortest piece of code for doing that?</p>\n"}, {"tags": ["rust", "clap"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550884457, "post_id": 54837057, "comment_id": 96449002, "body": "stupid question but why ?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1550884638, "post_id": 54837057, "comment_id": 96449038, "body": "So you just want <a href=\"https://docs.rs/clap/2.32.0/clap/struct.App.html#method.print_help\" rel=\"nofollow noreferrer\"><code>print_help</code></a>/<a href=\"https://docs.rs/clap/2.32.0/clap/struct.App.html#method.print_long_help\" rel=\"nofollow noreferrer\"><code>print_long_help</code></a>?"}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550913689, "post_id": 54837057, "comment_id": 96453786, "body": "@Stargateur I need to run migrations even if the program isn&#39;t executed (otherwise the tests would not run). If you have a better idea let me know."}], "answers": [{"comments": [{"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1550958286, "post_id": 54837323, "comment_id": 96465754, "body": "I ended up rewriting my program so now I&#39;m using the ArgsRequiredElseHelp. I hope the answer comes useful to other people though."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1550978379, "post_id": 54837323, "comment_id": 96469276, "body": "@OmarAbid my answer was not enough for your case ? I through it was."}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1551028923, "post_id": 54837323, "comment_id": 96480466, "body": "@Stragateur Your answer was enough and in fact it is a valid solution. However, looking again at the code I decided that I could do a better architecture and I ended up writing it so that it adheres to Clap instead of trying to work around it."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 2, "last_activity_date": 1550885672, "last_edit_date": 1550885672, "creation_date": 1550885262, "answer_id": 54837323, "question_id": 54837057, "link": "https://stackoverflow.com/questions/54837057/how-can-i-display-help-after-calling-claps-get-matches/54837323#54837323", "title": "How can I display help after calling Clap&#39;s get_matches?", "body": "<p>You could write the string before.</p>\n\n<pre><code>use clap::{App, SubCommand};\n\nuse std::str;\n\nfn main() {\n    let mut app = App::new(\"myapp\")\n        .version(\"0.0.1\")\n        .about(\"My first CLI APP\")\n        .subcommand(SubCommand::with_name(\"ls\").about(\"List anything\"));\n\n    let mut help = Vec::new();\n    app.write_long_help(&amp;mut help).unwrap();\n\n    let _ = app.get_matches();\n\n    println!(\"{}\", str::from_utf8(&amp;help).unwrap());\n}\n</code></pre>\n\n<p>Or you could use <a href=\"https://docs.rs/clap/2.31.1/clap/struct.App.html#method.get_matches_safe:\" rel=\"nofollow noreferrer\"><code>get_matches_safe</code></a></p>\n\n<pre><code>use clap::{App, AppSettings, ErrorKind, SubCommand};\n\nfn main() {\n    let app = App::new(\"myapp\")\n        .setting(AppSettings::ArgRequiredElseHelp)\n        .version(\"0.0.1\")\n        .about(\"My first CLI APP\")\n        .subcommand(SubCommand::with_name(\"ls\").about(\"List anything\"));\n\n    let matches = app.get_matches_safe();\n\n    match matches {\n        Err(e) =&gt; {\n            if e.kind == ErrorKind::MissingArgumentOrSubcommand {\n                println!(\"{}\", e.message)\n            }\n        }\n        _ =&gt; (),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 303, "favorite_count": 0, "accepted_answer_id": 54837323, "answer_count": 1, "score": 0, "last_activity_date": 1551037106, "creation_date": 1550882535, "last_edit_date": 1551037106, "question_id": 54837057, "link": "https://stackoverflow.com/questions/54837057/how-can-i-display-help-after-calling-claps-get-matches", "title": "How can I display help after calling Clap&#39;s get_matches?", "body": "<p>I'm having the same problem as <a href=\"https://stackoverflow.com/questions/49290526/is-there-any-straightforward-way-for-clap-to-display-help-when-no-command-is-pro\">Is there any straightforward way for Clap to display help when no command is provided?</a>, but the solution proposed in that question is not good enough for me.</p>\n\n<p><code>.setting(AppSettings::ArgRequiredElseHelp)</code> stops the program if no arguments are provided, and I need the program to carry on execution even if no arguments are provided. I need the help to be displayed in addition.</p>\n"}, {"tags": ["generics", "rust", "iterator", "clone"], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1550911459, "post_id": 54836028, "comment_id": 96453262, "body": "Another option is to require <code>T: Copy</code> instead of <code>T: Clone</code>, which will allow to use <code>Some(self.count)</code> as the return value. There isn&#39;t really any advantage to doing so \u2013 it will only make the code less generic by further restricting <code>T</code> \u2013 but it illustrates the parallel to the <code>u32</code> case."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 4, "last_activity_date": 1551053935, "last_edit_date": 1551053935, "creation_date": 1550874276, "answer_id": 54836028, "question_id": 54835700, "link": "https://stackoverflow.com/questions/54835700/how-do-i-write-a-generic-iterator-that-keeps-a-state-and-returns-a-value-without/54836028#54836028", "title": "How do I write a generic iterator that keeps a state and returns a value without using clone?", "body": "<p>On the one hand... no, you cannot make the iterator return a reference to the counter's value. The <code>Iterator::next()</code> method returns a value which has no lifetime connection with the receiver value <code>&amp;mut self</code>, so we cannot control the lifetime of the reference that would be returned there. This would be required because we cannot modify the value while it's borrowed by that reference. This concern is better explained in another <a href=\"https://stackoverflow.com/q/25702909/1233251\">question</a>.</p>\n\n<p><em>On the other hand</em>, the real concern emerges here:</p>\n\n<blockquote>\n  <p>If I replace <code>T</code> with <code>u32</code>, then I can just return <code>Some(self.count)</code>, but using generics, it is not possible.</p>\n</blockquote>\n\n<p>This is only the case because <code>u32</code> implements <code>Copy</code>, which means that it is copied around whenever it is necessary. Types implementing <code>Copy</code> also implement <code>Clone</code>, which would do just about the same thing as a copy, which would have happened in the non-generic context.</p>\n\n<p>As such, the cloning operations that you have in this are reasonable, since you want to return the value of the counter while still owning its own state. When the <code>T</code> of that counter is a primitive integer such as <code>u32</code>, the clone is as cheap as a copy of that integer.</p>\n\n<p>Other than that, you can add a constraint for <code>T</code> on <code>AddAssign&lt;T&gt;</code>, so that you can use the <code>+=</code> operator to increment the internal state.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T&gt; Iterator for Counter&lt;T&gt; where T: Num + Clone + AddAssign&lt;T&gt; {\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.count += T::one();\n        Some(self.count.clone())\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25702909/1233251\">Can I write an Iterator that mutates itself and then yields a reference into itself?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31012923/1233251\">What is the difference between Copy and Clone?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32682876/1233251\">Is there any way to return a reference to a variable created in a function?</a></li>\n</ul>\n"}], "owner": {"reputation": 2211, "user_id": 262114, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/3502cd3767290dfb3ea5c35d4370dc1f?s=128&d=identicon&r=PG", "display_name": "HamoriZ", "link": "https://stackoverflow.com/users/262114/hamoriz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 54836028, "answer_count": 1, "score": 1, "last_activity_date": 1551053935, "creation_date": 1550872419, "last_edit_date": 1551053825, "question_id": 54835700, "link": "https://stackoverflow.com/questions/54835700/how-do-i-write-a-generic-iterator-that-keeps-a-state-and-returns-a-value-without", "title": "How do I write a generic iterator that keeps a state and returns a value without using clone?", "body": "<p>I tried to write a generic iterator, but I do not see how to return value without using <code>clone</code>. Is there any way to create a variable within the <code>next</code> function and return a reference? If I replace <code>T</code> with <code>u32</code>, then I can just return <code>Some(self.count)</code>, but using generics, it is not possible.</p>\n\n<pre><code>use num_traits::Num;\nuse std::clone::Clone;\n\nstruct Counter&lt;T&gt;\nwhere\n    T: Num + Clone,\n{\n    count: T,\n}\n\nimpl&lt;T&gt; Counter&lt;T&gt;\nwhere\n    T: Num + Clone,\n{\n    fn new() -&gt; Counter&lt;T&gt; {\n        Counter { count: T::zero() }\n    }\n}\n\nimpl&lt;T&gt; Iterator for Counter&lt;T&gt;\nwhere\n    T: Num + Clone,\n{\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.count = self.count.clone() + T::one();\n        Some(self.count.clone())\n    }\n}\n\nfn main() {\n    let mut number: Counter&lt;u32&gt; = Counter::new();\n\n    match number.next() {\n        Some(x) =&gt; println!(\"Number {}\", x),\n        None =&gt; println!(\"Invalid\"),\n    }\n}\n</code></pre>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1550872159, "post_id": 54835301, "comment_id": 96446076, "body": "Its kind of a bummer that the error message mentions <code>char</code> because it makes it harder to diagnose as a common <code>&amp;str</code> vs <code>String</code> issue"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551036933, "post_id": 54835301, "comment_id": 96482943, "body": "In the future, you are encouraged to search for your exact error message. In many cases, this will directly lead you to existing questions and answers."}], "answers": [{"tags": [], "owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "is_accepted": true, "score": 4, "last_activity_date": 1551036836, "last_edit_date": 1551036836, "creation_date": 1550871827, "answer_id": 54835597, "question_id": 54835301, "link": "https://stackoverflow.com/questions/54835301/strcontains-doesnt-work-when-the-supplied-input-is-a-string-reference/54835597#54835597", "title": "str::contains doesn&#39;t work when the supplied input is a string reference", "body": "<p>The <code>contains</code> method will accept an <code>&amp;str</code> or a <code>char</code> but not a <code>String</code>.</p>\n\n<p>The <code>contains</code> method <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.contains\" rel=\"nofollow noreferrer\">is declared as</a> </p>\n\n<pre><code>pub fn contains&lt;'a, P&gt;(&amp;'a self, pat: P) -&gt; bool \nwhere\n    P: Pattern&lt;'a&gt;, \n</code></pre>\n\n<p>And if you look at the <a href=\"https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html#implementors\" rel=\"nofollow noreferrer\">implementors of <code>Pattern</code></a>, you'll see its implemented for <code>char</code> and for <code>&amp;str</code>.</p>\n\n<p>This means that you need to pass a <code>&amp;str</code> to <code>contains</code> instead of your owned <code>String</code>. Because <code>&amp;String</code> coerces to <code>&amp;str</code>, this is an easy change:</p>\n\n<pre><code>-- if input.contains(needle_custom) {\n\n++ if input.contains(&amp;needle_custom) {\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=56cdc97a7332cfa034a8ed0ddffbca71\" rel=\"nofollow noreferrer\">Here is your code with this small change</a> working in the Playground.</p>\n"}], "owner": {"reputation": 69, "user_id": 9692781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "James Smith", "link": "https://stackoverflow.com/users/9692781/james-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 302, "favorite_count": 0, "closed_date": 1551036858, "accepted_answer_id": 54835597, "answer_count": 1, "score": 1, "last_activity_date": 1551036871, "creation_date": 1550870172, "last_edit_date": 1551036764, "question_id": 54835301, "link": "https://stackoverflow.com/questions/54835301/strcontains-doesnt-work-when-the-supplied-input-is-a-string-reference", "closed_reason": "Duplicate", "title": "str::contains doesn&#39;t work when the supplied input is a string reference", "body": "<pre><code>use std::collections::HashSet;\n\nfn character_count(needles: &amp;HashSet&lt;char&gt;, needle_type: &amp;str, input: &amp;str) -&gt; i32 {\n    for needle in needles {\n        let mut needle_custom;\n\n        if needle_type == \"double\" {\n            needle_custom = needle.to_string() + &amp;needle.to_string();\n        } else {\n            needle_custom = needle.to_string() + &amp;needle.to_string() + &amp;needle.to_string();\n        }\n\n        if input.contains(needle_custom) {\n            println!(\"found needle {:?}\", needle_custom);\n        }\n    }\n\n    return 1;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: expected a `std::ops::FnMut&lt;(char,)&gt;` closure, found `std::string::String`\n  --&gt; src/lib.rs:13:18\n   |\n13 |         if input.contains(needle_custom) {\n   |                  ^^^^^^^^ expected an `FnMut&lt;(char,)&gt;` closure, found `std::string::String`\n   |\n   = help: the trait `std::ops::FnMut&lt;(char,)&gt;` is not implemented for `std::string::String`\n   = note: required because of the requirements on the impl of `std::str::pattern::Pattern&lt;'_&gt;` for `std::string::String`\n</code></pre>\n\n<p>The code works if I replace <code>needle_custom</code> with <code>\"test\"</code>.</p>\n"}, {"tags": ["pointers", "rust", "raw-pointer"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1550863065, "post_id": 54833646, "comment_id": 96442367, "body": "Sometime rustc can have bug... but that very very very very unlikely to be the case if your code contains unsafe."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1550863284, "post_id": 54833646, "comment_id": 96442459, "body": "You are taking the address of the stack, this pointer is not valid after the function end."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1550866179, "post_id": 54833646, "comment_id": 96443619, "body": "What&#39;s your motivation for using pointers in this case? By doing so, you&#39;re essentially working around all of the safeties that Rust provides."}, {"owner": {"reputation": 860, "user_id": 5972993, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8775e13a26bf45d511e49f64b565c48c?s=128&d=identicon&r=PG", "display_name": "RomainL.", "link": "https://stackoverflow.com/users/5972993/romainl"}, "edited": false, "score": 0, "creation_date": 1550866690, "post_id": 54833646, "comment_id": 96443831, "body": "Thanks for you comment, so i should return a box&lt;Node&gt; from the function? my motivation are: learn to play with ptr, and learn to implement common datastructure. in rust tree or linked list seems really heavy to put in place keepping all the safety."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1550868227, "post_id": 54833646, "comment_id": 96444476, "body": "You can use <code>Option&lt;Box&lt;Node&gt;&gt;</code> for your child nodes for instance."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551035257, "post_id": 54833646, "comment_id": 96482449, "body": "<i>tree or linked list seems really heavy to put in place keepping all the safety</i> \u2014 yes, because making safe yet performant data structures is <b>hard</b> in general. That&#39;s why we don&#39;t reimplement them."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1551035587, "post_id": 54833804, "comment_id": 96482560, "body": "<i>an optimization that&#39;s only enabled for release mode</i> \u2014 yes, it&#39;s very likely that the function is inlined and thus there&#39;s no popping of the stack."}], "tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 2, "last_activity_date": 1550863704, "last_edit_date": 1550863704, "creation_date": 1550863328, "answer_id": 54833804, "question_id": 54833646, "link": "https://stackoverflow.com/questions/54833646/why-does-a-binary-tree-using-unsafe-code-have-bad-memory-access-in-debug-mode-b/54833804#54833804", "title": "Why does a binary tree using unsafe code have bad memory access in debug mode, but not release?", "body": "<p>In <code>BinaryTree::from_value</code>, you're creating a new <code>Node</code> and then storing a pointer to it. However, the <code>Node</code> is allocated on the stack, and is dropped before you call <code>BinaryTree::add</code>. Because you're using pointers and <code>unsafe</code> instead of references, the Rust compiler can't warn you about lifetime issues like these.</p>\n\n<p>As to why this fails in debug mode but works in release mode, it may be due to an optimization that's only enabled for release mode.</p>\n"}], "owner": {"reputation": 860, "user_id": 5972993, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8775e13a26bf45d511e49f64b565c48c?s=128&d=identicon&r=PG", "display_name": "RomainL.", "link": "https://stackoverflow.com/users/5972993/romainl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "accepted_answer_id": 54833804, "answer_count": 1, "score": 0, "last_activity_date": 1551035501, "creation_date": 1550862700, "last_edit_date": 1551035501, "question_id": 54833646, "link": "https://stackoverflow.com/questions/54833646/why-does-a-binary-tree-using-unsafe-code-have-bad-memory-access-in-debug-mode-b", "title": "Why does a binary tree using unsafe code have bad memory access in debug mode, but not release?", "body": "<p>I am trying to implement a binary tree in unsafe Rust and it appears to be a difference between debug and release.</p>\n\n<p>This code executed on debug is very likely to access wrong memory address, but if compiled in release mode it seems to be fine.</p>\n\n<p>It is totally possible that I made a mistake as I am quite new to raw pointers, but having different output is really strange.</p>\n\n<p>Is my different output really a sign of wrong memory access? Is that expected when working with unsafe Rust? It is the sign of code smell somehow?</p>\n\n<p>In debug mode, the output on my machine is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>constructing tree\n5\nconstructed\n0.000000000000000000000000000000000000000000001\nvalue added\n</code></pre>\n\n<p>In release mode, the output on my machine is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>constructing tree\n5\nconstructed\n5\nvalue added\n</code></pre>\n\n<p>Here the code, reduced as much as I could.</p>\n\n<pre><code>use std::ptr;\n\nstruct Node {\n    value: f32,\n    node_left: *mut Node,\n    node_right: *mut Node,\n}\n\nimpl Node {\n    pub fn from_value(value: f32) -&gt; Node {\n        println!(\"{}\", value);\n        Node {\n            value: value,\n            node_left: ptr::null_mut(),\n            node_right: ptr::null_mut(),\n        }\n    }\n\n    fn get_value(&amp;self) -&gt; f32 {\n        self.value\n    }\n}\n\npub struct BinaryTree {\n    root: *mut Node,\n}\n\nimpl BinaryTree {\n    pub fn from_value(value: f32) -&gt; BinaryTree {\n        let mut node = &amp;mut Node::from_value(value);\n        BinaryTree { root: node }\n    }\n\n    pub fn add(&amp;mut self, value: f32) {\n        println!(\"{}\", unsafe { self.root.as_mut() }.unwrap().get_value());\n    }\n}\n\nfn main() {\n    println!(\"constructing tree\");\n    let mut x = BinaryTree::from_value(5.0f32);\n    println!(\"constructed\");\n    x.add(2f32);\n    println!(\"value added\");\n}\n</code></pre>\n\n<p>I ran this on Ubuntu 18.04 in an Oracle VM using Rust 1.32.0.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 143, "user_id": 3661587, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/32Q8O.png?s=128&g=1", "display_name": "St&#233;", "link": "https://stackoverflow.com/users/3661587/st%c3%a9"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551083297, "post_id": 54831025, "comment_id": 96494849, "body": "@Shepmaster not sure about duplicate, and IMHO, the answer with <code>for&lt;&gt;</code> may be interesting for broad range of lifetime problems."}], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 1, "last_activity_date": 1550865523, "creation_date": 1550865523, "answer_id": 54834295, "question_id": 54831025, "link": "https://stackoverflow.com/questions/54831025/cannot-build-equivalent-closure-for-a-function-when-the-closure-contains-complex/54834295#54834295", "title": "Cannot build equivalent closure for a function when the closure contains complex lifetime relationships", "body": "<p>This cannot be done easily but you can define your outer closure with a return type which helps you to set explicit lifetime boundaries for your inner closure. (By using <code>for&lt;&gt;</code> which is a  Higher Ranked Trait Bound, you can find more <a href=\"https://stackoverflow.com/questions/35592750/how-does-for-syntax-differ-from-a-regular-lifetime-bound\">details in here</a>). </p>\n\n<p>Inner closure needed to be <code>Box</code>ed because the size of <code>Fn</code> trait is not known at compile time.</p>\n\n<pre><code>let closure = |lower, upper| -&gt; Box&lt;for&lt;'a&gt; Fn(&amp;BTreeSet&lt;&amp;'a str&gt;) -&gt; BTreeSet&lt;&amp;'a str&gt;&gt; {\n        Box::new(move |s: &amp;BTreeSet&lt;&amp;str&gt;| {\n            let mut r = BTreeSet::new();\n            r.extend(s.range(lower..=upper));\n            r\n        })\n    };\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ceead2113ef686d337989dcf9776c76e\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 143, "user_id": 3661587, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/32Q8O.png?s=128&g=1", "display_name": "St&#233;", "link": "https://stackoverflow.com/users/3661587/st%c3%a9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "closed_date": 1551035880, "accepted_answer_id": 54834295, "answer_count": 1, "score": 1, "last_activity_date": 1551035902, "creation_date": 1550851842, "last_edit_date": 1551035902, "question_id": 54831025, "link": "https://stackoverflow.com/questions/54831025/cannot-build-equivalent-closure-for-a-function-when-the-closure-contains-complex", "closed_reason": "Duplicate", "title": "Cannot build equivalent closure for a function when the closure contains complex lifetime relationships", "body": "<p>I've got some trouble with replacing function with equivalent closure, compiler complaining</p>\n\n<pre><code>cannot infer an appropriate lifetime due to conflicting requirements\n\nnote: ...so that the types are compatible:\n      expected &amp;std::collections::BTreeSet&lt;&amp;str&gt;\n         found &amp;std::collections::BTreeSet&lt;&amp;str&gt; rustc(E0495)\n</code></pre>\n\n<p>in the closure, at the <code>range</code>method in <code>r.extend(s.range(lower..=upper));</code>.\nBut i can't figure out how to put lifetime hint in a closure, and maybe, it's not possible.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::BTreeSet;\n\nfn main() {\n    let mut set = BTreeSet::new();\n\n    set.insert(\"TEST1\");\n    set.insert(\"TEST3\");\n    set.insert(\"TEST4\");\n    set.insert(\"TEST2\");\n    set.insert(\"TEST5\");\n\n    println!(\"init: {:?}\", set);\n\n    let closure = |lower, upper| {        \n        |s: &amp;BTreeSet&lt;&amp;str&gt;| {\n            let mut r = BTreeSet::new();\n            r.extend(s.range(lower..=upper));\n            r\n        }\n    };\n\n    set = extract_fn(\"TEST2\", \"TEST5\")(&amp;set);\n    set = closure(\"TEST3\", \"TEST4\")(&amp;set);\n    println!(\"result: {:?}\", set);\n}\n\nfn extract_fn&lt;'a&gt;(\n    lower: &amp;'a str,\n    upper: &amp;'a str,\n) -&gt; impl Fn(&amp;BTreeSet&lt;&amp;'a str&gt;) -&gt; BTreeSet&lt;&amp;'a str&gt; {\n    move |s| {\n        let mut r = BTreeSet::new();\n        r.extend(s.range(lower..=upper));\n        r\n    }\n}\n</code></pre>\n\n<p>Except putting <code>static</code> lifetime, should a closure with this type of error be transformed to a function ?</p>\n"}, {"tags": ["stream", "rust", "protocol-buffers"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1550846569, "post_id": 54829412, "comment_id": 96433791, "body": "There is something wrong with this code. You are using <code>?</code> but the function doesn&#39;t return a <code>Result</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1550847085, "post_id": 54829412, "comment_id": 96434107, "body": "It&#39;s very difficult to answer the question: &quot;how to change behaviour X to behaviour Y?&quot;, when the code for X doesn&#39;t even work."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550847211, "post_id": 54829412, "comment_id": 96434194, "body": "Also what is Stream ? Where it comes from ?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550847560, "post_id": 54829412, "comment_id": 96434407, "body": "@&#214;merErden One would have to <i>guess</i> it&#39;s from <code>futures</code>, and then guess again that it&#39;s the latest version <code>0.1.25</code>..."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1550847727, "post_id": 54829412, "comment_id": 96434535, "body": "@E4_net_or_something_like_that I guessed the same but now i am trying to guess is that stream getting feed by the time or just an iterator from a predefined Vec&lt;String&gt; but maybe i can guess the 2nd one because op wants to make optimization ? But is it ?"}, {"owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550852159, "post_id": 54829412, "comment_id": 96437047, "body": "@&#214;merErden I&#39;m sorry, updated the question to include <code>futures</code>. The stream getting feed by the time, it&#39;s correct."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550860375, "post_id": 54829412, "comment_id": 96441222, "body": "<code>stream.fold(RepeatedField::new(), |mut r, item| future::ok(r.push(item))).into_future().and_then(|repeated_f&zwnj;&#8203;ields|{ &#47;*use in here*&#47;});</code> might help, also you need to spawn this future into executor to run async."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1551037198, "post_id": 54829412, "comment_id": 96483032, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/54829412/edit\">edit</a> your question to include it. Your code is <b>not syntactically valid</b> and we cannot tell what crates, types, traits, fields, etc. are present in the code. Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}], "answers": [{"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 1, "last_activity_date": 1550894200, "creation_date": 1550894200, "answer_id": 54838097, "question_id": 54829412, "link": "https://stackoverflow.com/questions/54829412/how-can-i-turn-stream-into-repeatedfield-in-rust/54838097#54838097", "title": "How can I turn Stream into RepeatedField in Rust?", "body": "<p>there are relevant pieces of code from protobuf sources:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Wrapper around vector to avoid deallocations on clear.\npub struct RepeatedField&lt;T&gt; {\n    vec: Vec&lt;T&gt;,\n    len: usize,\n}\n\n/// Create a contained with data from given vec.\n#[inline]\npub fn from_vec(vec: Vec&lt;T&gt;) -&gt; RepeatedField&lt;T&gt; {\n    let len = vec.len();\n    RepeatedField { vec: vec, len: len }\n}\n</code></pre>\n\n<p>So no, your code is already easy and optimal: it creates the vector and then just moves it to the structure without unnecessary copying.</p>\n"}], "owner": {"reputation": 353, "user_id": 10960558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d5aaf5ed61d757fe83b72ac88a6fdb0?s=128&d=identicon&r=PG&f=1", "display_name": "H. Desane", "link": "https://stackoverflow.com/users/10960558/h-desane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1550894200, "creation_date": 1550846211, "last_edit_date": 1550852116, "question_id": 54829412, "link": "https://stackoverflow.com/questions/54829412/how-can-i-turn-stream-into-repeatedfield-in-rust", "title": "How can I turn Stream into RepeatedField in Rust?", "body": "<p>I've got the following struct in Rust that I want to return from my service:</p>\n\n<pre><code>#[derive(PartialEq,Clone,Default)]\npub struct Response {\n    pub names: ::protobuf::RepeatedField&lt;String&gt;,\n}\n</code></pre>\n\n<p>and I set its <code>names</code> field (see <a href=\"https://docs.rs/protobuf/2.0.2/protobuf/struct.RepeatedField.html\" rel=\"nofollow noreferrer\">the doc</a> about its type) in the following way:</p>\n\n<pre><code>use protobuf::{Message, RepeatedField};\nuse futures::future::Future;\nuse futures::Stream;\n\nfn create_response(names: impl Stream&lt;Item = String, Error = CustomError&gt;) -&gt; Result&lt;Response, CustomError&gt;\n   let names = names.collect().wait()?;\n   let mut response = Response::new();\n   response.set_names(RepeatedField::from_vec(names));\n   Ok(response)\n}\n</code></pre>\n\n<p>Now I want to optimise this piece of code and avoid blocking <code>collect</code> operation. Is there any way to stream that <code>names</code> directly into <code>response.names</code> field (i.e., avoid the step of creating a <code>names</code> vector)?</p>\n"}, {"tags": ["javascript", "node.js", "rust", "benchmarking", "v8"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1550845512, "post_id": 54828815, "comment_id": 96433010, "body": "Node can JIT compile javascript into native instructions. The further optimisations that it can apply will be <i>different</i> from those applied by other languages, and in some cases can be faster. This question comes up a lot and the answer really is just that Node can optimise certain kinds of code very well."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 8, "creation_date": 1550845640, "post_id": 54828815, "comment_id": 96433124, "body": "I disagree with the close votes, in particular with &quot;primarily opinion based&quot;. What about this is opinion based? Explaining this behavior requires some analysis of the code and explanation on how Rust and NodeJS optimize code. And yes, maybe the benchmark is flawed, but that can be properly explained in an answer."}, {"owner": {"reputation": 14274, "user_id": 579078, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xC5kj.png?s=128&g=1", "display_name": "\u11bc\u11ba\u11bc", "link": "https://stackoverflow.com/users/579078/%e1%86%bc%e1%86%ba%e1%86%bc"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1550846028, "post_id": 54828815, "comment_id": 96433411, "body": "@LukasKalbertodt, Re: your edit, while it would be good if the question included the relevant code, what you have added in your edit excludes the part which causes JS to be faster than Rust in this case"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 14274, "user_id": 579078, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xC5kj.png?s=128&g=1", "display_name": "\u11bc\u11ba\u11bc", "link": "https://stackoverflow.com/users/579078/%e1%86%bc%e1%86%ba%e1%86%bc"}, "edited": false, "score": 0, "creation_date": 1550846259, "post_id": 54828815, "comment_id": 96433558, "body": "@\u0131\u0131\u0131 Mh good point. Feel free to edit the question to include more code. :)"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1550865581, "post_id": 54828815, "comment_id": 96443390, "body": "@Jason: did you run your test on an Intel CPU?  See my comments on Denys&#39; answer: an AMD CPU would probably not have slowed down from using unnecessarily large operand-size for the <code>div</code> instruction, with the same input data.  (Unlike pretty much all other ALU operations, div performance is data-dependent, but also slower best-case for 64-bit operand-size on Intel.)"}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1550849493, "post_id": 54829228, "comment_id": 96435567, "body": "I tested with a command line argument, it didn&#39;t cause any changes in the results."}], "tags": [], "owner": {"reputation": 14274, "user_id": 579078, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xC5kj.png?s=128&g=1", "display_name": "\u11bc\u11ba\u11bc", "link": "https://stackoverflow.com/users/579078/%e1%86%bc%e1%86%ba%e1%86%bc"}, "is_accepted": false, "score": -1, "last_activity_date": 1550846722, "last_edit_date": 1550846722, "creation_date": 1550845616, "answer_id": 54829228, "question_id": 54828815, "link": "https://stackoverflow.com/questions/54828815/why-is-nodejs-faster-than-rust-in-computing-the-sum-of-the-primes/54829228#54829228", "title": "Why is NodeJS faster than Rust in computing the sum of the primes?", "body": "<p>I think your benchmark is somewhat flawed in that a sufficiently advanced compiler could just optimise <code>sum_primes(10000)</code> into <code>496165411</code>, even at compile-time (i.e. <a href=\"https://prepack.io/\" rel=\"nofollow noreferrer\">Prepack</a>, <a href=\"https://developers.google.com/closure/compiler/\" rel=\"nofollow noreferrer\">Closure</a>). It is also possible to memoise the result after the first call at run-time, and probably this is what V8 does (although I would expect HotSpot to do the same).</p>\n\n<p>Use a value that is not known at compile time instead of <code>10000</code>, for example a command line argument. </p>\n"}, {"comments": [{"owner": {"reputation": 14274, "user_id": 579078, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xC5kj.png?s=128&g=1", "display_name": "\u11bc\u11ba\u11bc", "link": "https://stackoverflow.com/users/579078/%e1%86%bc%e1%86%ba%e1%86%bc"}, "edited": false, "score": 0, "creation_date": 1550849780, "post_id": 54830059, "comment_id": 96435730, "body": "Does using <code>Int32Array</code> in JS improve its results?"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 2, "creation_date": 1550865061, "post_id": 54830059, "comment_id": 96443162, "body": "Presumably you and the OP were testing on Intel CPUs, where 64-bit <code>div</code> is much slower than 32-bit <code>div</code>, even for the same small-ish dividend/divisor.  On AMD CPUs, the worst-case throughput and latency gets worse for larger operand-sizes (because larger inputs are possible), but the best case stays about the same. (<a href=\"https://agner.org/optimize/\" rel=\"nofollow noreferrer\">agner.org/optimize</a>).  See  <a href=\"//stackoverflow.com/a/52558274\">Trial-division code runs 2x faster as 32-bit on Windows than 64-bit on Linux</a> for a specific example where <i>just</i> changing the <code>div</code> operand-size gives a huge speedup."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 3, "creation_date": 1550865599, "post_id": 54830059, "comment_id": 96443395, "body": "@PeterCordes yes. What should be remembered here isn&#39;t a specific way to optimize a terrible algorithm, or a relevant comparaison of whole languages performances, but that V8&#39;s optimizing compiler is an amazing piece of technology and that it&#39;s not enough to choose a fast language to get a fast code."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1550865919, "post_id": 54830059, "comment_id": 96443522, "body": "Yeah, opportunistically using a narrower type is a fantastic optimization, especially for an array.  Ahead-of-time optimizers like gcc and LLVM sometimes manage to use narrower operand-size in registers depending on value-range knowledge (like <code>foo &amp; 0x1111</code> is known to be safe for 32-bit, even for <code>uint64_t foo</code>), but not always. And I wouldn&#39;t count on it when it really matters (like for integer division).  Languages are <i>capable</i> of being fast, but it&#39;s generally possible to write slow code in any language.  Lower-level languages can let you gain more by knowing more about the target uarch."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 15, "last_activity_date": 1551039210, "last_edit_date": 1551039210, "creation_date": 1550848439, "answer_id": 54830059, "question_id": 54828815, "link": "https://stackoverflow.com/questions/54828815/why-is-nodejs-faster-than-rust-in-computing-the-sum-of-the-primes/54830059#54830059", "title": "Why is NodeJS faster than Rust in computing the sum of the primes?", "body": "<p>The answer can't be simple because V8 does a <strong>lot</strong> of transformations, but here's a major point:</p>\n\n<p>Node's optimizing compiler dynamically adapts the types it uses (especially for array elements). It's able to use one word integers when they fit (and <em>deoptimizes</em> the function when it receives a non fitting value).</p>\n\n<p>If I take your functions as they are, the Rust one takes 1.28ms to compute <code>sum_prime(500)</code> when Node takes only 1.04ms (after some warming). If I change the <code>u64</code> to <code>u32</code> in the Rust code, then it only takes 608\u00b5s.</p>\n\n<hr>\n\n<p>The JavaScript code I used:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function sum_primes(n) {\n    var primes = [];\n    var current = 2;\n    var sum = 0;\n    while (primes.length &lt; n) {\n        if (primes.every(function (p) { return current % p != 0; })) {\n            sum += current;\n            primes.push(current);\n        }\n        ++current;\n    }\n    return sum;\n}\nconsole.log(sum_primes(200));\n// some warming\nfor (let i=0; i&lt;100; i++) sum_primes(100);\nconsole.time(\"primes\");\nconsole.log(sum_primes(500));\nconsole.timeEnd(\"primes\");\n</code></pre>\n\n<p>This JavaScript code is faster than your Rust code, but slower than this one:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::Instant;\n\nfn sum_primes(n: usize) -&gt; u32 {\n    let mut primes = Vec::new();\n    let mut current: u32 = 2;\n    let mut sum: u32 = 0;\n\n    while primes.len() &lt; n {\n        if primes.iter().all(|p| current % p != 0) {\n            sum += current;\n            primes.push(current);\n        }\n        current += 1;\n    }\n    sum\n}\n\nfn main() {\n    println!(\"{}\", sum_primes(200));\n    let s = Instant::now();\n    println!(\"{}\", sum_primes(500));\n    println!(\"duration: {:?}\", s.elapsed());\n}\n</code></pre>\n"}], "owner": {"reputation": 151, "user_id": 7296427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88e39a770651699d70a8749d97f7b64d?s=128&d=identicon&r=PG&f=1", "display_name": "Jason Lee", "link": "https://stackoverflow.com/users/7296427/jason-lee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1114, "favorite_count": 1, "accepted_answer_id": 54830059, "answer_count": 2, "score": 9, "last_activity_date": 1561777273, "creation_date": 1550844297, "last_edit_date": 1561777273, "question_id": 54828815, "link": "https://stackoverflow.com/questions/54828815/why-is-nodejs-faster-than-rust-in-computing-the-sum-of-the-primes", "title": "Why is NodeJS faster than Rust in computing the sum of the primes?", "body": "<p>I wrote a benchmark that calculates the sum of the first 10000 primes and compared Rust to JavaScript. JavaScript on NodeJS is the fastest among Rust, Scala, and Java. Even though the programs intentionally use a functional style for testing primality aiming to show the advantages of Rust's zero-cost abstraction, NodeJS beats them all. </p>\n\n<p>How can NodeJS, a dynamic typing runtime, be so fast?</p>\n\n<p><strong>Rust code</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn sum_primes(n: usize) -&gt; u64 {\n    let mut primes = Vec::new();\n    let mut current: u64 = 2;\n    let mut sum: u64 = 0;\n\n    while primes.len() &lt; n {\n        if primes.iter().all(|p| current % p != 0) {\n            sum += current;\n            primes.push(current);\n        }\n        current += 1;\n    }\n    sum\n}\n</code></pre>\n\n<p><strong>JavaScript code</strong></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function sumPrimes(n) {\n    let primes = [];\n    let current = 2;\n    let sum = 0;\n    while (primes.length &lt; n) {\n        if (primes.every(p =&gt; current % p != 0)) {\n            sum += current;\n            primes.push(current);\n        }\n        ++current;\n    }\n    return sum;\n}\n</code></pre>\n\n<p>The full benchmark can be found <a href=\"https://github.com/Jason5Lee/primes_benchmark\" rel=\"nofollow noreferrer\">on GitHub</a>.</p>\n"}, {"tags": ["rust", "set", "range", "binary-tree", "type-inference"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550836557, "post_id": 54826391, "comment_id": 96427787, "body": "<a href=\"https://doc.rust-lang.org/std/ops/trait.RangeBounds.html#impl-RangeBounds%3CT%3E-5\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/ops/&hellip;</a>"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1550837911, "post_id": 54826391, "comment_id": 96428555, "body": "Why can it infer the type for <code>RangeInclusive</code> but not for a tuple of <code>Bound</code>?"}, {"owner": {"reputation": 143, "user_id": 3661587, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/32Q8O.png?s=128&g=1", "display_name": "St&#233;", "link": "https://stackoverflow.com/users/3661587/st%c3%a9"}, "edited": false, "score": 0, "creation_date": 1550840747, "post_id": 54826391, "comment_id": 96430270, "body": "@hellow Thanks for the alternate syntax. I&#39;ve a lot to discover!"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 3, "last_activity_date": 1551053548, "last_edit_date": 1551053548, "creation_date": 1550835939, "answer_id": 54826391, "question_id": 54826252, "link": "https://stackoverflow.com/questions/54826252/type-annotations-required-when-using-btreesetrange-on-a-set-of-str/54826391#54826391", "title": "Type annotations required when using BTreeSet::range on a set of &amp;str", "body": "<p>A range is constructed via the <code>..</code> (exclusive end) or <code>..=</code> (inclusive end) operators, e.g. <code>for i in 0..3</code> means <code>0, 1, 2</code>. In contrast <code>for i in 0..=3</code> means <code>0, 1, 2, 3</code>.</p>\n\n<p>To solve your problem, you can specify an inclusive range: </p>\n\n<pre><code>use std::collections::BTreeSet;\n\nfn main() {\n    let mut set = BTreeSet::new();\n\n    set.insert(\"TEST1\");\n    set.insert(\"TEST3\");\n    set.insert(\"TEST4\");\n    set.insert(\"TEST2\");\n    set.insert(\"TEST5\");\n\n    let rg = set.range(\"TEST3\"..=\"TEST4\");\n\n    println!(\"result: {:?}\", rg);\n}\n</code></pre>\n\n<p>which will print</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>result: Range { iter: [(\"TEST3\", ()), (\"TEST4\", ())] }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 4, "last_activity_date": 1595252882, "last_edit_date": 1595252882, "creation_date": 1550836301, "answer_id": 54826485, "question_id": 54826252, "link": "https://stackoverflow.com/questions/54826252/type-annotations-required-when-using-btreesetrange-on-a-set-of-str/54826485#54826485", "title": "Type annotations required when using BTreeSet::range on a set of &amp;str", "body": "<p>The compiler cannot infer the first generic parameter (<code>K: Ord</code>) of the <code>range</code> function from an <code>Included</code> argument.</p>\n<p>You need to specify it explicitly:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let rg = set.range::&lt;&amp;str, _&gt;(bound);\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1fce8b475a81792d11b5453c8c0bc8df\" rel=\"nofollow noreferrer\">Playground</a></p>\n<h1>Why can the compiler not infer the first generic parameter?</h1>\n<p>It actually does infers the type, but there are 2 candidate types for <code>K</code>: it can be <code>&amp;'static str</code> or <code>str</code>. Rust cannot be sure which one to use.</p>\n<p>Let's analyze the definition of the <code>range</code> method to explain why Rust cannot select one of them.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn range&lt;K: ?Sized, R&gt;(&amp;self, range: R) -&gt; Range&lt;'_, T&gt;\nwhere\n    K: Ord,\n    T: Borrow&lt;K&gt;,\n    R: RangeBounds&lt;K&gt;,\n</code></pre>\n<p><code>K</code> is a dynamically sized type, <code>T</code> can be represented as <code>K</code> and <code>R</code> is an input which should implement <code>RangeBounds&lt;K&gt;</code>.</p>\n<p><code>RangeBounds&lt;T&gt;</code> has 2 different implementation for Tuple Range:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>// first\nimpl&lt;'a, T: ?Sized + 'a&gt; RangeBounds&lt;T&gt; for (Bound&lt;&amp;'a T&gt;, Bound&lt;&amp;'a T&gt;){}\n</code></pre>\n<p>In the <em>first</em> implementation, <code>str</code> satisfies <code>T</code>; it is unsized and lives in the <code>'static</code> lifetime. If <code>K</code> is a <code>str</code>, then you can have an argument like: <code>(Inbound(&quot;val1&quot;), Inbound(&quot;val2&quot;))</code></p>\n<pre class=\"lang-rust prettyprint-override\"><code>// second\nimpl&lt;T&gt; RangeBounds&lt;T&gt; for (Bound&lt;T&gt;, Bound&lt;T&gt;){}\n</code></pre>\n<p>In the <em>second</em> implementation, <code>&amp;str</code> satisfies <code>T</code>. If <code>K</code> is a <code>&amp;str</code> then you can have an argument like <code>(Inbound(&quot;val1&quot;), Inbound(&quot;val2&quot;))</code></p>\n<p>As you can see, both types of arguments are identical, and Rust has two options for <code>K</code>. As a result, it cannot select one of them because both options fit and it expects you to define it explicitly.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let rg = set.range::&lt;str, _&gt;(bound);\n</code></pre>\n<p>This will also work and the compiler will use the <em>first</em> implementation. Since both implementations do the same thing, the results will be identical.</p>\n<p><strong>See also:</strong></p>\n<ul>\n<li><a href=\"https://doc.rust-lang.org/src/core/ops/range.rs.html#827\" rel=\"nofollow noreferrer\">1st implementation</a></li>\n<li><a href=\"https://doc.rust-lang.org/src/core/ops/range.rs.html#808\" rel=\"nofollow noreferrer\">2nd implementation</a></li>\n</ul>\n"}], "owner": {"reputation": 143, "user_id": 3661587, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/32Q8O.png?s=128&g=1", "display_name": "St&#233;", "link": "https://stackoverflow.com/users/3661587/st%c3%a9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 218, "favorite_count": 0, "accepted_answer_id": 54826485, "answer_count": 2, "score": 1, "last_activity_date": 1595252882, "creation_date": 1550835417, "last_edit_date": 1551053672, "question_id": 54826252, "link": "https://stackoverflow.com/questions/54826252/type-annotations-required-when-using-btreesetrange-on-a-set-of-str", "title": "Type annotations required when using BTreeSet::range on a set of &amp;str", "body": "<p>I faceed some trouble using the <code>BTreeSet::range</code> method.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::BTreeSet;\nuse std::ops::Bound::Included;\n\nfn main() {\n    let set = BTreeSet::new();\n\n    set.insert(\"TEST1\");\n    set.insert(\"TEST3\");\n    set.insert(\"TEST4\");\n    set.insert(\"TEST2\");\n    set.insert(\"TEST5\");\n\n    let bound = (Included(\"TEST3\"), Included(\"TEST4\"));\n    let rg = set.range(bound);\n\n    println!(\"result: {:?}\", rg);\n}\n</code></pre>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0283]: type annotations required: cannot resolve `_: std::cmp::Ord`\n  --&gt; src/main.rs:14:18\n   |\n14 |     let rg = set.range(bound);\n   |                  ^^^^^\n</code></pre>\n\n<p>Does that means that <code>&amp;str</code> cannot be compared to each other?</p>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550832335, "post_id": 54824960, "comment_id": 96425452, "body": "<a href=\"https://docs.rs/winapi/0.3.6/winapi/um/winnls/type.LCTYPE.html\" rel=\"nofollow noreferrer\">docs.rs/winapi/0.3.6/winapi/um/winnls/type.LCTYPE.html</a>, that just an integer. I don&#39;t think this ressource exist in Rust."}], "answers": [{"tags": [], "owner": {"reputation": 95, "user_id": 2785240, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ZsJAu.jpg?s=128&g=1", "display_name": "Bob Hoeppner", "link": "https://stackoverflow.com/users/2785240/bob-hoeppner"}, "is_accepted": false, "score": 1, "last_activity_date": 1592095788, "creation_date": 1592095788, "answer_id": 62367204, "question_id": 54824960, "link": "https://stackoverflow.com/questions/54824960/where-can-i-find-the-locale-information-constants-in-rusts-winapi-crate/62367204#62367204", "title": "Where can I find the Locale Information Constants in Rust&#39;s winapi crate?", "body": "<p>There are a few constants defined in ntdef.rs. If you wanted to use what is not available there, you would need to look up the values via <a href=\"https://docs.microsoft.com/en-us/windows/win32/intl/locale-information-constants\" rel=\"nofollow noreferrer\">Locale Information Constants</a> and either pass the raw values or preferably define them yourself.</p>\n\n<p><code>use self::winapi::shared::ntdef::{LOCALE_SYSTEM_DEFAULT, LOCALE_USER_DEFAULT};</code></p>\n\n<p>Also, be sure to configure to use winnls in Cargo.toml, or you'll get an unresolved import error when trying to use GetLocaleInformationEx.</p>\n\n<p><code>[dependencies]\nwinapi = {version = \"0.3\", features = [\"winuser\", \"std\", \"libloaderapi\", \"errhandlingapi\", \"winnls\"] }</code></p>\n"}], "owner": {"reputation": 4874, "user_id": 212538, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/8f47479e0460220549065c1d3a231d23?s=128&d=identicon&r=PG", "display_name": "Janus", "link": "https://stackoverflow.com/users/212538/janus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1592095788, "creation_date": 1550831078, "last_edit_date": 1592644375, "question_id": 54824960, "link": "https://stackoverflow.com/questions/54824960/where-can-i-find-the-locale-information-constants-in-rusts-winapi-crate", "title": "Where can I find the Locale Information Constants in Rust&#39;s winapi crate?", "body": "<p>Are the Windows NLS API <a href=\"https://docs.microsoft.com/en-us/windows/desktop/Intl/locale-information-constants\" rel=\"nofollow noreferrer\">Locale Information Constants</a> available anywhere in the <a href=\"https://crates.io/crates/winapi\" rel=\"nofollow noreferrer\">winapi-rs</a> crate or elsewhere in the Rust ecosystem?</p>\n<p>I need to call <a href=\"https://docs.microsoft.com/en-us/windows/desktop/api/winnls/nf-winnls-getlocaleinfoex\" rel=\"nofollow noreferrer\"><code>GetLocaleInformationEx</code></a> from Rust and have found it available in the <code>um::winnls</code> module of the <a href=\"https://crates.io/crates/winapi\" rel=\"nofollow noreferrer\">winapi-rs</a> crate (<a href=\"https://docs.rs/winapi/0.3.6/winapi/um/winnls/fn.GetLocaleInfoEx.html\" rel=\"nofollow noreferrer\">here</a>).</p>\n<p>The <code>LCType</code> input is a <a href=\"https://docs.microsoft.com/en-us/windows/desktop/Intl/locale-information-constants\" rel=\"nofollow noreferrer\">Locale Information Constant</a> -- and I have not been able to find these defined anywhere in the crate.</p>\n<p>As a workaround, I have looked up the numerical values and hard-coded them, but I have a nagging feeling that I am missing something.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1550825841, "post_id": 54823215, "comment_id": 96421463, "body": "It would be good to add the error you get from the compiler to this question."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550826712, "post_id": 54823215, "comment_id": 96421922, "body": "I don&#39;t think you can if you want static dispatch, do two <code>for</code> loop in a <code>if let Some</code> for the first one and the other one in the else condition."}, {"owner": {"reputation": 317, "user_id": 7286194, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b346026acd028b9e61ebdf12468c477a?s=128&d=identicon&r=PG&f=1", "display_name": "fantom", "link": "https://stackoverflow.com/users/7286194/fantom"}, "edited": false, "score": 1, "creation_date": 1550826715, "post_id": 54823215, "comment_id": 96421926, "body": "I found a simple solution to define an  <code>enum EitherIter&lt;L, R&gt; {Left(L),Right(R),}</code>  and then implement <code>Iterator</code> for it, so i can combine iterators of different types that produce values of same type"}, {"owner": {"reputation": 317, "user_id": 7286194, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b346026acd028b9e61ebdf12468c477a?s=128&d=identicon&r=PG&f=1", "display_name": "fantom", "link": "https://stackoverflow.com/users/7286194/fantom"}, "edited": false, "score": 2, "creation_date": 1550827227, "post_id": 54823215, "comment_id": 96422228, "body": "Even better, <code>Itertools</code> crate already has such enum <code>Either</code>, that implements <code>Iterator</code> if both branches implement <code>Iterator</code> with same value type"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1550827487, "post_id": 54823215, "comment_id": 96422368, "body": "that add a avoidable overheat"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1550829824, "post_id": 54823215, "comment_id": 96423910, "body": "Please note, that the <code>Either</code> type comes not from <code>Itertools</code> itself, but from the <a href=\"https://crates.io/crates/either\" rel=\"nofollow noreferrer\">either crate</a>"}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 0, "last_activity_date": 1550841114, "creation_date": 1550841114, "answer_id": 54827938, "question_id": 54823215, "link": "https://stackoverflow.com/questions/54823215/how-to-coalesce-different-collections/54827938#54827938", "title": "How to coalesce different collections?", "body": "<p>I think I would define an inner function and dispatch manually:</p>\n\n<pre><code>fn process_graph_nodes(graph: Graph, nodes: Option&lt;impl Iterator&lt;Item=Node&gt;){\n    fn process_internal(graph: Graph, nodes: impl Iterator&lt;Item=Node&gt;) {\n        for node in nodes {\n          //processing node\n        }\n    }\n    match nodes {\n        None =&gt; process_internal(graph, graph.all_nodes()),\n        Some(n) =&gt; process_internal(graph, n),\n    }\n}\n</code></pre>\n\n<p>(I do not have a compiler at hand, but I think you can get the idea.)</p>\n\n<p>This way, you avoid the potential costs of using <code>Either</code>.</p>\n"}], "owner": {"reputation": 317, "user_id": 7286194, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b346026acd028b9e61ebdf12468c477a?s=128&d=identicon&r=PG&f=1", "display_name": "fantom", "link": "https://stackoverflow.com/users/7286194/fantom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "closed_date": 1551034030, "answer_count": 1, "score": 1, "last_activity_date": 1593121809, "creation_date": 1550825333, "last_edit_date": 1593121809, "question_id": 54823215, "link": "https://stackoverflow.com/questions/54823215/how-to-coalesce-different-collections", "closed_reason": "Duplicate", "title": "How to coalesce different collections?", "body": "<p>Say I have a function</p>\n\n<pre><code>fn process_graph_nodes(graph: Graph, nodes: Option&lt;impl Iterator&lt;Item=Node&gt;){\n    for node in nodes.unwrap_or_else(|| graph.all_nodes()) {\n      //processing node\n    }\n}\n</code></pre>\n\n<p>where method <code>all_nodes</code> returns some type that implements <code>Iterator&lt;Item=Node&gt;</code>.\nSo, both <code>nodes.unwrap()</code> and <code>graph.all_nodes()</code> return iterators that yield <code>Node</code> type, but they are different types, what causes compilation error. </p>\n\n<p>Is there any way to make that code compile, may be by turning both types into trait objects of <code>Iterator&lt;Item=Node&gt;</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1550829835, "post_id": 54819541, "comment_id": 96423915, "body": "I think that you should emphatize the last point. That&#39;s what makes the syntax surprising: <code>Local.foo</code> vs <code>Local::bar</code>."}], "tags": [], "owner": {"reputation": 879, "user_id": 173661, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AoXQg.jpg?s=128&g=1", "display_name": "Vince", "link": "https://stackoverflow.com/users/173661/vince"}, "is_accepted": true, "score": 4, "last_activity_date": 1550824005, "last_edit_date": 1550824005, "creation_date": 1550805274, "answer_id": 54819541, "question_id": 54819070, "link": "https://stackoverflow.com/questions/54819070/when-do-you-use-and-when-do-you-use-in-rust/54819541#54819541", "title": "When do you use :: and when do you use . in Rust?", "body": "<p>Methods called with the <code>.</code> syntax are called <a href=\"https://doc.rust-lang.org/book/ch05-03-method-syntax.html#defining-methods\" rel=\"nofollow noreferrer\">instance methods</a> (or just methods), while those called with the <code>::</code> syntax are called <a href=\"https://doc.rust-lang.org/book/ch05-03-method-syntax.html#associated-functions\" rel=\"nofollow noreferrer\">associated functions</a>. The main difference is that instance methods take some form of <code>self</code> as an argument, whilst associated functions don't.</p>\n\n<p>You can check the implementation of <a href=\"https://github.com/chronotope/chrono/blob/master/src/offset/local.rs#L85-L87\" rel=\"nofollow noreferrer\"><code>Local::today</code></a> as an associated function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn today() -&gt; Date&lt;Local&gt; {\n    Local::now().date()\n}\n</code></pre>\n\n<p>compared to <a href=\"https://github.com/chronotope/chrono/blob/master/src/offset/mod.rs#L213-L215\" rel=\"nofollow noreferrer\"><code>Local.ymd</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn ymd(&amp;self, year: i32, month: u32, day: u32) -&gt; Date&lt;Self&gt; {\n    self.ymd_opt(year, month, day).unwrap()\n}\n</code></pre>\n\n<p>One caveat here, however, is that <code>Local.ymd</code> is actually implemented as part of the <code>Timezone</code> trait, which <code>Local</code> <a href=\"https://github.com/chronotope/chrono/blob/master/src/offset/local.rs#L95-L152\" rel=\"nofollow noreferrer\">implements</a>.</p>\n\n<p>Another thing to note here is that <code>Local</code> is a struct with no fields. This means it can be created like <code>Local {}</code> or even just <code>Local</code>.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "closed_date": 1551033934, "accepted_answer_id": 54819541, "answer_count": 1, "score": 5, "last_activity_date": 1550824005, "creation_date": 1550801426, "question_id": 54819070, "link": "https://stackoverflow.com/questions/54819070/when-do-you-use-and-when-do-you-use-in-rust", "closed_reason": "Duplicate", "title": "When do you use :: and when do you use . in Rust?", "body": "<p>While playing with Rust, I came across the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ba0b4e882db425c02e8b3917f4825ba4\" rel=\"noreferrer\">following</a>:</p>\n\n<pre><code>extern crate chrono; // 0.4.6\nuse chrono::TimeZone;\n\nfn main() {\n    println!(\"{}\", chrono::Local::today());\n    println!(\"{}\", chrono::Local.ymd(2019, 1, 1));\n}\n</code></pre>\n\n<p>When does one use <code>::</code>, as in the first line, and when does one use <code>.</code>, as in the second line?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1550793094, "post_id": 54817415, "comment_id": 96412069, "body": "The named label seems like a much more obvious way to break from the outer loop. With a variable, it needs more brain power to know why that variable is here, what it does, and when it&#39;s used."}], "tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": true, "score": 3, "last_activity_date": 1550789022, "creation_date": 1550789022, "answer_id": 54817415, "question_id": 54817335, "link": "https://stackoverflow.com/questions/54817335/println-outside-of-loop-is-an-unreachable-statement-how-to-use-a-println-in-a/54817415#54817415", "title": "println! outside of loop is an unreachable statement, how to use a println in a &quot;reachable&quot; way", "body": "<p><code>println!(\"duplicated found {:?}\", frequencies);</code> is unreachable because, when you are calling <code>return</code>, you are returning out of the <code>main</code> function.</p>\n\n<p>Change loop to a while, and set a variable to exit the while loop.</p>\n\n<pre><code>let mut duplicated_found = false;\nwhile !duplicated_found {\n    for line in f.lines() {\n\n        let line_trimmed = line.trim();\n        let something = line_trimmed.parse::&lt;i32&gt;().unwrap();\n        total += something;\n        // println!(\"{:?}\",total);\n\n        if frequencies.contains(&amp;total) {\n            println!(\"duplicated found {:?}\", total);\n            duplicated_found = true;\n            break; // This breaks out of the for loop\n        }\n        frequencies.insert(total);\n    }\n}\nprintln!(\"duplicated found {:?}\", frequencies);\n</code></pre>\n\n<p>OR you can use labels to specify which loop you want to break out of:</p>\n\n<pre><code>'outer: loop {\n    for line in f.lines() {\n\n        let line_trimmed = line.trim();\n        let something = line_trimmed.parse::&lt;i32&gt;().unwrap();\n        total += something;\n        // println!(\"{:?}\",total);\n\n        if frequencies.contains(&amp;total) {\n            println!(\"duplicated found {:?}\", total);\n            break 'outer; // This breaks out of the outer loop\n        }\n        frequencies.insert(total);\n    }\n}\nprintln!(\"duplicated found {:?}\", frequencies);\n</code></pre>\n"}], "owner": {"reputation": 69, "user_id": 9692781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "James Smith", "link": "https://stackoverflow.com/users/9692781/james-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "accepted_answer_id": 54817415, "answer_count": 1, "score": -1, "last_activity_date": 1550789129, "creation_date": 1550788635, "last_edit_date": 1550789129, "question_id": 54817335, "link": "https://stackoverflow.com/questions/54817335/println-outside-of-loop-is-an-unreachable-statement-how-to-use-a-println-in-a", "title": "println! outside of loop is an unreachable statement, how to use a println in a &quot;reachable&quot; way", "body": "<p>How can I print the frequencies <code>HashSet</code> after the loop terminates? Problem seems to be there is no guarantee the loop terminates.</p>\n\n<pre><code>use std::collections::HashSet;\nuse std::fs;\n\nfn main() {\n    let f = fs::read_to_string(\"input.txt\").expect(\"Unable to open file\");\n\n    let mut total = 0;\n    let mut frequencies = HashSet::new();\n    frequencies.insert(0);\n\n    loop {\n        for line in f.lines() {\n            let line_trimmed = line.trim();\n            let something = line_trimmed.parse::&lt;i32&gt;().unwrap();\n            total += something;\n            // println!(\"{:?}\",total);\n\n            if frequencies.contains(&amp;total) {\n                println!(\"duplicated found {:?}\", total);\n                return;\n            }\n            frequencies.insert(total);\n        }\n    }\n    println!(\"duplicated found {:?}\", frequencies);\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1550783545, "post_id": 54816025, "comment_id": 96408853, "body": "Do you want to store a separate instance in each vector, or store references to the same instance?"}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1550786418, "post_id": 54816175, "comment_id": 96410028, "body": "&quot;but since it is called Details, I assume that it doesn&#39;t use that much memory anyway&quot;, funny, I though &quot;but it&#39;s called Details, it might be big!&quot; and indeed, it you look at the number of fields in that struct, it&#39;s massive."}], "tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": true, "score": 2, "last_activity_date": 1550783492, "last_edit_date": 1550783492, "creation_date": 1550782969, "answer_id": 54816175, "question_id": 54816025, "link": "https://stackoverflow.com/questions/54816025/having-a-struct-instance-in-more-than-one-vector-in-rust/54816175#54816175", "title": "Having a struct instance in more than one vector in Rust", "body": "<p>The easiest way is to clone <code>container_details</code>:</p>\n\n<pre><code>if mount.destination == volume.mountpoint {\n   connected_containers.push(container_detail.clone());\n}\n</code></pre>\n\n<p>This requires <code>shiplift::rep::ContainerDetails</code> to implement <code>Clone</code>, which according to <a href=\"https://docs.rs/shiplift/0.4.0/shiplift/rep/struct.ContainerDetails.html#impl-Clone\" rel=\"nofollow noreferrer\">it's docs</a>, it does.</p>\n\n<hr>\n\n<p>This does have a few downsides:</p>\n\n<ol>\n<li><p>Double the memory usage (but since it is called Details, I assume that it doesn't use that much memory anyway).</p></li>\n<li><p>Changes to items in <code>container_details</code> does not get reflected in the cloned versions.</p></li>\n</ol>\n\n<p>Having <code>get_container_details</code> return <code>Vec&lt;Rc&lt;ContainerDetails&gt;&gt;</code> instead, then cloning <code>container_detail</code> will only clone a reference.</p>\n"}], "owner": {"reputation": 1236, "user_id": 6047503, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/N9MT9.png?s=128&g=1", "display_name": "Hristo Kolev", "link": "https://stackoverflow.com/users/6047503/hristo-kolev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 54816175, "answer_count": 1, "score": 1, "last_activity_date": 1550818677, "creation_date": 1550782304, "last_edit_date": 1550818677, "question_id": 54816025, "link": "https://stackoverflow.com/questions/54816025/having-a-struct-instance-in-more-than-one-vector-in-rust", "title": "Having a struct instance in more than one vector in Rust", "body": "<p>I'm building an application in Rust that backs up docker volumes.</p>\n\n<p>I wanted to know which containers are using the target volume.</p>\n\n<p>This is the code I use:</p>\n\n<pre><code>let volume = await!(get_volume_by_name(&amp;docker, &amp;volume_name));\nlet container_details = await!(get_container_details(&amp;docker));\nlet mut connected_containers = Vec::new();\n\nfor container_detail in container_details {\n    for mount in container_detail.mounts {\n        if mount.destination == volume.mountpoint {\n            connected_containers.push(container_detail);\n        }\n    }\n}\n</code></pre>\n\n<p>I'm trying to put all matching containers in a vector. The error that I get is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `container_detail`\n  --&gt; src/main.rs:32:43\n   |\n29 |     for container_detail in container_details {\n   |         ---------------- move occurs because `container_detail` has type `shiplift::rep::ContainerDetails`, which does not implement the `Copy` trait\n...\n32 |                 connected_containers.push(container_detail);\n   |                                           ^^^^^^^^^^^^^^^^ value moved here, in previous iteration of loop\n</code></pre>\n\n<p>I know that you can't have the same value in 2 vectors, but how else do I do something like this?</p>\n\n<p>How do I get a \"list\" of the values that match a given (non trivial condition) ?</p>\n"}, {"tags": ["algorithm", "rust", "cryptography", "public-key-encryption"], "comments": [{"owner": {"reputation": 939, "user_id": 9504571, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HgIpY.png?s=128&g=1", "display_name": "Michal Gluchowski", "link": "https://stackoverflow.com/users/9504571/michal-gluchowski"}, "edited": false, "score": 0, "creation_date": 1550808996, "post_id": 54814343, "comment_id": 96415149, "body": "Does the situation when your code doesn&#39;t work happen when the most significant bit of the modulus is set or the most significant bit of private exponent is set? Numbers would then be considered negative"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1550821080, "creation_date": 1550821080, "answer_id": 54822218, "question_id": 54814343, "link": "https://stackoverflow.com/questions/54814343/rust-rsa-implementation-with-weird-behaviours/54822218#54822218", "title": "Rust RSA implementation with weird behaviours", "body": "<p>The error message means that the decrypted buffer (\"C as bytes\" in your traces) is not valid UTF-8, so <code>str::from_utf8</code> fails. If I understand your code correctly \"C as bytes\" should be the same as \"Message as bytes\", since it isn't I assume that there is a bug in your encryption or decryption code, but I can't tell you which.</p>\n"}], "owner": {"reputation": 99, "user_id": 11097763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ALE04.jpg?s=128&g=1", "display_name": "CPereez19", "link": "https://stackoverflow.com/users/11097763/cpereez19"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 206, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1550821080, "creation_date": 1550775543, "question_id": 54814343, "link": "https://stackoverflow.com/questions/54814343/rust-rsa-implementation-with-weird-behaviours", "title": "Rust RSA implementation with weird behaviours", "body": "<p>I've implemented a very basic Rust implementation of the RSA algorithm. All seems to work nice, but I've found a strange behavior with the encryption/decryption process on my testing. Because it works 3/4 times, which is really weird.. </p>\n\n<p>The library can be found here: <a href=\"https://github.com/CPerezz/rust-rsa\" rel=\"nofollow noreferrer\">https://github.com/CPerezz/rust-rsa</a></p>\n\n<p>Here is the code:</p>\n\n<p><strong>math.rs</strong> (Each of the functions have been tested and passed)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//! Math functions to build keys with trusted primes\nuse std::str::FromStr;\nuse rand::Rng;\nuse num_bigint::{ToBigUint, BigUint, RandBigInt, BigInt, Sign};\nuse num::{Zero, One, Integer, FromPrimitive};\nuse crate::helpers::generics::*;\n\n\n// Generates a big number of lenght = u32 param.\npub fn gen_big_num(bit_len: &amp;u32) -&gt; BigUint {\n    // RNG depends on rng_core crate.\n    let mut rng = rand::thread_rng();\n    let mut a = rng.gen_biguint(bit_len.to_owned() as usize);\n    a\n}\n\n// Given lenght, generates a prime number of that lenght approximately.\n// That prime number is prime with probability = 4^-threshold \npub fn gen_big_prime(size: &amp;u32, threshold: u32) -&gt; BigUint {\n    let mut proposal =  gen_big_num(size);\n    // Remove all even numbers to reduce the iterations a half.\n    if proposal.is_even() {\n        proposal = proposal + BigUint::one();\n    }\n    while !is_prime(&amp;proposal, threshold) {\n        // Steps of 2 to avoid the even numbers on the iterations.\n        proposal =  proposal + 2.to_biguint().unwrap();\n    }\n    proposal\n}\n\n// Posible to remove and implement it on gen big prime\n// Given a prime proposal, compute Rabin Miller's algorithm.\nfn is_prime(proposal: &amp;BigUint, threshold: u32) -&gt; bool {\n    if !rabin_miller(proposal, threshold) {return false}\n    true\n}\n\n// Rabin-Miller is a probabilistic algorithm that checks if a number is prime based on Riemmann's conjecture.\n// Implemented from psoudocode found on: https://en.wikibooks.org/wiki/Algorithm_Implementation/Mathematics/Primality_Testing \n// The function recieves a prime proposal and the threshold probability of a false positive\n// due to composite numbers reported as primes.\n// The pobability of a false positive is 4^-threshold. With t=9 =&gt; P(false_positive) = 3/1_000_000 \nfn rabin_miller(proposal: &amp;BigUint, t: u32) -&gt; bool {\n    // Needed constants\n    let (z, o, tw) = gen_basic_biguints();\n    let (zero, one, two) = (&amp;z, &amp;o, &amp;tw);\n    // If proposal &lt;= 1 Rabin-Miller has to fail.\n    if proposal.clone() &lt;= one.to_owned() {return false};\n    // If proposal != 2 and modulus 2 = 0, Rabin-Miller fails.\n    if proposal.clone() != two.to_owned() &amp;&amp; proposal.clone() % two == zero.to_owned() {return false};\n    // Getting exp to execute mulmod.\n    let (s,d) = refactor(proposal);\n\n    let mut counter = 0;\n    while counter &lt; t {\n        // Gen rand biguint from a range (2, proposal-2)\n        let mut rng = rand::thread_rng();\n        let a = rng.gen_biguint_range(&amp;two , &amp;(proposal - two) );\n\n        let mut x = mod_exp_pow(&amp;a, &amp;d, proposal);\n        if x != one.to_owned() &amp;&amp; x != proposal.to_owned() - one {\n            let mut i = zero.clone();\n            loop {\n                x = mod_exp_pow(&amp;x, &amp;two, proposal);\n                if x == proposal.to_owned() - one {break;}\n                if x == one.to_owned() || i &gt;= s.clone()- one{return false;};\n\n                i = i.clone() + one;\n            }\n        }\n        counter +=2;\n    }  \n    true\n}\n\n// Modular exponentiation implemented on binary exponentiation (squaring)\npub fn mod_exp_pow(base: &amp;BigUint, exp: &amp;BigUint, md: &amp;BigUint) -&gt; BigUint {\n    let mut res = BigUint::one();\n    let (zero, one, _) = gen_basic_biguints();\n    let (mut base, mut exponent) = (base.clone(), exp.clone());\n\n    while exponent &gt; zero {\n        if exponent.clone() &amp; one.clone() &gt; zero {\n            res = (res * base.clone()) % md;\n        }\n        // Shifting 1 bit of the exponent as a binary number.\n        exponent &gt;&gt;= 1;\n        // Generating next base by squaring\n        base = (base.clone() * base.clone()) % md;\n    }\n    res\n}\n\n// Given a number n, write n \u2212 1 as 2s\u00b7d with d odd by factoring powers of 2 from n \u2212 1\nfn refactor(n: &amp;BigUint) -&gt; (BigUint, BigUint) {\n  let (mut s, one, two) = gen_basic_biguints();\n  let mut d = n.clone() - one.clone();\n\n  while d.is_even() {\n    d = d / two.clone();\n    s = s + one.clone();\n  }\n  (s, d)\n}\n\n// Extended Euclidean Algorithm\n// Returns gcd(a,b) and B\u00e9zout's identity coefficients\n// ax + by = gcd(a,b)\npub fn egcd&lt;'a&gt;(a: &amp;'a mut BigInt, b: &amp;'a mut BigInt) -&gt; (BigInt, BigInt, BigInt) {\n    // base case\n    if a.to_owned() == BigInt::from(0 as u32) {\n        (b.clone(), BigInt::from(0 as i32), BigInt::from(1 as i32))\n    } else {\n        let mut b_mod_a = b.clone() % a.clone();\n        let ref_b_mod_a = &amp;mut b_mod_a;\n        let (g, x, y) = egcd(ref_b_mod_a, a);\n        let mut b_div_a = b.clone() / a.clone();\n        let ref_b_div_a = &amp;mut b_div_a;\n        (g, (y - ref_b_div_a.clone() * x.clone()), x)\n    }\n}\n\n// Given a fi_n, find on the interval (fi_n/2, fi_n) a number \n// that is co-prime with fi_n\npub fn found_e(fi_n: &amp;BigUint) -&gt; Result&lt;BigUint, bool&gt; {\n    // Gen random number on interval\n    let mut rng = rand::thread_rng();\n    //Get fi_n as \n    let sign = Sign::Plus;\n    let mut fi_n = BigInt::from_biguint(sign, fi_n.clone());\n    let (zero, one, two) = gen_basic_bigints();\n    let mut a = rng.gen_bigint_range(&amp;(fi_n.clone()/two.clone()) , &amp;((BigInt::from(3) * fi_n.clone())/BigInt::from(4) ));\n    //We want to avoid the even random numbers.\n    if a.is_even() {a = a + one.clone()};\n    let mut res = zero;\n    while res != one.clone() &amp;&amp; a &lt;= fi_n.clone() - one.clone() {\n        let (res2, _, _) = egcd(&amp;mut fi_n, &amp;mut a);\n        res = res2;\n        a = a.clone() + two.clone(); \n    }\n\n    if res == one {\n        a = a.clone() - two.clone();\n        return Ok(biguint_from_bigint(&amp;a));\n    }\n    Err(false)\n}\n\n\n#[test]\nfn generates_random_biguint() {\n    let a = gen_big_num(&amp;1024);\n    assert_ne!(a, BigUint::zero());\n}\n\n#[test]\nfn mod_exp_works() {\n    let res = mod_exp_pow(&amp;BigUint::from(4 as u32), &amp;BigUint::from(13 as u32), &amp;BigUint::from(497 as u32));\n    assert_eq!(res, BigUint::from(445 as u32));\n\n    let res2 = mod_exp_pow(&amp;BigUint::from(5 as u32), &amp;BigUint::from(3 as u32), &amp;BigUint::from(13 as u32));\n    assert_eq!(res2, BigUint::from(8 as u32));\n}\n\n\n#[test]\nfn rabin_miller_works() {\n    //Small primes\n    let res = rabin_miller(&amp;179425357u32.to_biguint().unwrap(), 9);\n    assert_eq!(res, true);\n    let res2 = rabin_miller(&amp;82589933u32.to_biguint().unwrap(), 64);\n    assert_eq!(res2, true);\n\n\n    // Big primes\n    let known_prime_str =\n    \"118595363679537468261258276757550704318651155601593299292198496313960907653004730006758459999825003212944725610469590674020124506249770566394260832237809252494505683255861199449482385196474342481641301503121142740933186279111209376061535491003888763334916103110474472949854230628809878558752830476310536476569\";\n    let known_prime: BigUint = FromStr::from_str(known_prime_str).unwrap();\n    assert!(rabin_miller(&amp;known_prime, 64));\n}\n\n\n#[test]\nfn gen_big_prime_works() {\n    let res = gen_big_prime(&amp;2056u32, 9);\n    println!(\"The generated prime of 1024 bits is: {}\", res);\n}\n\n#[test]\nfn egcd_test() {\n    use num_bigint::ToBigInt;\n    use std::str::FromStr;\n\n    // small primes\n    let a = &amp;mut 179425357u32.to_bigint().unwrap();\n    let b = &amp;mut 97u32.to_bigint().unwrap();\n    let (g, x, y) = egcd(a, b);\n    assert_eq!(a.clone()*x + b.clone()*y, g);\n\n    // small primes\n    let a = &amp;mut 1024u32.to_bigint().unwrap();\n    let b = &amp;mut 512u32.to_bigint().unwrap();\n    let (g, x, y) = egcd(a, b);\n    assert_eq!(512u32.to_bigint().unwrap(), g);\n\n    // big primes\n    let known_prime_str = \"118595363679537468261258276757550704318651155601593299292198496313960907653004730006758459999825003212944725610469590674020124506249770566394260832237809252494505683255861199449482385196474342481641301503121142740933186279111209376061535491003888763334916103110474472949854230628809878558752830476310536476569\";\n    let known_prime_str_2 = \"357111317192329313741434753596167717379838997101103107109113127131137139149151157163167173179181191193197199211223227229233239241251257263269271277281283293307311313317331337347349353359367373379383389397401409419421431433439443449457461463467479487491499503509521523541547557563569571577587593599601607613617619631641643647653659661673677683691701709719727733739743751757761769773787797809811821823827829839853857859863877881883887907911919929937941947953967971977983991997\";\n    let mut a: BigInt = FromStr::from_str(known_prime_str).unwrap();\n    let mut b: BigInt = FromStr::from_str(known_prime_str_2).unwrap();\n    let a_r = &amp;mut a;\n    let b_r = &amp;mut b;\n    let (g, x, y) = egcd(a_r, b_r);\n    assert_eq!(a_r.clone()*x + b_r.clone()*y, g);\n}\n</code></pre>\n\n<p>And here the types where encryption and decription is made:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use num_bigint::{BigUint, BigInt, ToBigInt, Sign};\nuse crate::helpers::math::*;\nuse crate::helpers::generics::*;\nuse num::{Signed, One};\nuse std::fmt;\nuse std::ops::Neg;\nuse std::str::{FromStr, from_utf8};\n\n#[derive(Clone, PartialEq)]\npub struct KeyPair {\n    pub pk: PublicKey,\n    pub sk: SecretKey,\n    pub size: u32,\n    pub threshold: u32\n}\n\n#[derive(Clone, PartialEq)]\npub struct PublicKey {\n    n: BigUint,\n    e: BigUint\n}\n\n#[derive(Clone, PartialEq)]\npub struct SecretKey {\n    n: BigUint,\n    d: BigUint\n}\n\n#[derive(Clone, Copy, PartialEq)]\npub struct Threshold {\n    value: u32\n}\n\nimpl Threshold {\n    // Creates a Threshold with a default error probability of generating a prime of 4^-64\n    pub fn default() -&gt; Self {\n        let threshold = Threshold {\n            value: 9 as u32\n        };\n        threshold\n    }\n\n    // Creates a Threshold with a selected value as thresholf of P(err). P(err prime) = 4^-threshold. \n    pub fn new(th: &amp;u32) -&gt; Self {\n        let th = Threshold {\n            value: *th\n        };\n        th\n    }\n\n    // Gets the value of a Threshold and returns it as u32.\n    pub fn value(th: Self) -&gt; u32 {\n        th.value\n    }\n}\n\n\n// Implementation of Display for KeyPair Struct.\nimpl fmt::Display for KeyPair {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"\\nPublic Key: \\n{}\\nSecret Key: \\n{}\\nSize: {}\\nThreshold: {} which gives a P(err_primes_gen) = 4^(-{})\", self.pk, self.sk, self.size, self.threshold, self.threshold)\n    }\n}\n\nimpl KeyPair {\n    // Generate a new KeyPair Struct from scratch by giving the size of the key desired (in bits) and the threshold of P(err) while assuming that\n    // a number is prime. Statistic methods are used to found that numbers. P(err) = 4^-threshold (As is demonstraded on the Rabin-Miller algorithm)\n    pub fn new(size: &amp;u32, threshold: &amp;Threshold) -&gt; Result&lt;Self, &amp;'static str&gt; {\n        // Gen basic needed variables\n        let (_, one, _) = gen_basic_biguints();\n        // Gen p q primal base\n        let p = gen_big_prime(size, threshold.value);\n        let q = gen_big_prime(size, threshold.value);\n        // Gen n and fi_n\n        let n = &amp;p * &amp;q;\n        let fi_n = (&amp;p - &amp;one) * (&amp;q - &amp;one);\n        // Find a positive integer minor than fi_n , co-prime with fi_n \n        let e = found_e(&amp;fi_n).unwrap();\n\n        // Building Pk Struct\n        let pk = PublicKey::new(&amp;n, &amp;e).unwrap();\n        // Finding d and building Secret Key Struct\n        let (_, _,mut d) = egcd(&amp;mut fi_n.to_bigint().unwrap(), &amp;mut e.to_bigint().unwrap());\n        if d.is_negative() {\n            d = d.neg();\n        }\n        let sk = SecretKey::new(&amp;n, &amp;biguint_from_bigint(&amp;d)).unwrap();\n        //Building KeyPair struct\n        let kp = KeyPair {\n            pk: pk,\n            sk: sk,\n            size: size.to_owned(),\n            threshold: threshold.value.to_owned()\n        };\n        // Return the KeyPair struct\n        Ok(kp)\n    }\n}\n\n\n\n// Implementation of Display for KeyPair Struct.\nimpl fmt::Display for PublicKey {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"n: {}\\ne: {}\", self.n, self.e)\n    }\n}\n\nimpl PublicKey {\n    // Generate a PublicKey struct from n and d co-prime factors.\n    fn new(_n: &amp;BigUint, _e: &amp;BigUint) -&gt; Result&lt;Self, &amp;'static str&gt; {\n        Ok(PublicKey {\n            n: _n.to_owned(),\n            e: _e.to_owned()\n        })\n    }\n    // Generate a PublicKey struct from n, fi_n and d params with the co-prime property checking.\n    fn new_from_fi_n_e(_n: &amp;BigUint, _fi_n: &amp;BigUint, _e: &amp;BigUint) -&gt; Result&lt;Self, &amp;'static str&gt; {\n        let (_, _one, _) = gen_basic_bigints();\n\n        match egcd(&amp;mut BigInt::from_biguint(Sign::Plus, _fi_n.to_owned()), &amp;mut BigInt::from_biguint(Sign::Plus, _e.to_owned())) {\n            (possible_one, _, _) =&gt; {\n                if possible_one.is_one() {\n                    return  Ok(PublicKey {\n                                n: _n.to_owned(),\n                                e: _e.to_owned()\n                            }\n                        )\n                }else {\n                    return Err(\"Params passed to Sk builder haven't the properties to be a Public Key\")\n\n                }            \n            }\n        }\n    }\n    // Encrypts the data passed on the params.\n    fn encrypt(&amp;self, msg: &amp;str) -&gt; Result&lt;&amp;str, &amp;'static str&gt; {\n        if !msg.is_ascii(){\n            return Err(\"Message isn't ASCII like. Please remove non-ASCII characters.\")\n        }else{\n            println!(\"Message as bytes: {:?}\", msg.as_bytes());\n            let res = BigUint::from_bytes_be(msg.as_bytes());\n            println!(\"COPRIMES IF ONE ----&gt;&gt;  {:?}\", egcd(&amp;mut BigInt::from_biguint(Sign::Plus, res.clone()), &amp;mut BigInt::from_biguint(Sign::Plus, self.n.clone())).0);\n            Ok(string_to_static_str(format!(\"{}\", mod_exp_pow(&amp;res, &amp;self.e, &amp;self.n))))\n        }\n    }\n}\n\n\n// Implementation of Display for KeyPair Struct.\nimpl fmt::Display for SecretKey {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"n: {}\\nd: {}\", self.n, self.d)\n    }\n}\n\nimpl SecretKey {\n    // Generate a SecretKey struct from n and d co-prime factors.\n    fn new(_n: &amp;BigUint, _e: &amp;BigUint) -&gt; Result&lt;Self, &amp;'static str&gt; {\n        Ok(SecretKey {\n            n: _n.to_owned(),\n            d: _e.to_owned()\n        })\n    }\n\n    // Generate a SecretKey struct from n, fi_n and d params with the co-prime property checking.\n    pub fn new_from_fi_n_e(_n: &amp;BigUint, _fi_n: &amp;BigUint, _d: &amp;BigUint) -&gt; Result&lt;Self, &amp;'static str&gt; {\n        let (_, _one, _) = gen_basic_bigints();\n\n        match egcd(&amp;mut BigInt::from_biguint(Sign::Plus, _fi_n.to_owned()), &amp;mut BigInt::from_biguint(Sign::Plus, _d.to_owned())) {\n            (possible_one, _, _) =&gt; {\n                if possible_one.is_one() {\n                    return  Ok(SecretKey {\n                                n: _n.to_owned(),\n                                d: _d.to_owned()\n                            }\n                    )\n                }else {\n                    return Err(\"Params passed to Sk builder haven't the properties to be a Public Key\")\n\n                }            \n            }\n        }\n    }\n\n    // Decrypts the cyphertext giving back an &amp;str\n    fn decrypt(&amp;self, text: &amp;str) -&gt; Result&lt;&amp;str, &amp;'static str&gt; {\n        let c = BigUint::from_str(text).unwrap();\n        let result_as_bytes = mod_exp_pow(&amp;c, &amp;self.d, &amp;self.n).to_bytes_be();\n        println!(\"C as bytes: {:?}\", result_as_bytes);\n        let res_decrypt = std::str::from_utf8(&amp;result_as_bytes).unwrap();\n        Ok(string_to_static_str(format!(\"{}\", res_decrypt)))\n    }\n}\n</code></pre>\n\n<p>The thing is that when I run the test:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[test]\nfn encrypts_decrypts_info(){\n    let kp = KeyPair::new(&amp;512u32, &amp;Threshold::new(&amp;10)).unwrap();\n    let msg = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent non nunc et ipsum tempus fermentum\";\n    let cyphertext = kp.pk.encrypt(msg).unwrap();\n\n\n    let res_decrypt = kp.sk.decrypt(&amp;cyphertext).unwrap();\n    println!(\"Result of decryption is: {}\", res_decrypt);\n    assert_eq!(res_decrypt, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent non nunc et ipsum tempus fermentum\")\n}\n</code></pre>\n\n<p>When the test gives an error I get this:</p>\n\n<pre><code>running 1 test\nMessage as bytes: [76, 111, 114, 101, 109, 32, 105, 112, 115, 117, 109, 32, 100, 111, 108, 111, 114, 32, 115, 105, 116, 32, 97, 109, 101, 116, 44, 32, 99, 111, 110, 115, 101, 99, 116, 101, 116, 117, 114, 32, 97, 100, 105, 112, 105, 115, 99, 105, 110, 103, 32, 101, 108, 105, 116, 46, 32, 80, 114, 97, 101, 115, 101, 110, 116, 32, 110, 111, 110, 32, 110, 117, 110, 99, 32, 101, 116, 32, 105, 112, 115, 117, 109, 32, 116, 101, 109, 112, 117, 115, 32, 102, 101, 114, 109, 101, 110, 116, 117, 109]\nCOPRIMES IF ONE ----&gt;&gt;  BigInt { sign: Plus, data: BigUint { data: [1] } }\nC as bytes: [61, 207, 34, 84, 216, 183, 90, 189, 50, 169, 219, 109, 65, 100, 222, 105, 115, 8, 229, 173, 114, 40, 162, 83, 121, 184, 99, 167, 157, 98, 165, 91, 226, 140, 203, 84, 185, 161, 137, 201, 231, 132, 35, 112, 96, 89, 32, 253, 249, 175, 57, 133, 235, 65, 230, 250, 50, 142, 54, 70, 123, 203, 51, 145, 82, 129, 249, 79, 236, 30, 107, 210, 49, 139, 232, 69, 248, 48, 108, 215, 234, 223, 51, 88, 64, 223, 218, 54, 117, 137, 136, 226, 166, 144, 96, 111, 203, 239, 121, 129, 158, 21, 191, 227, 119, 79, 109, 124, 103, 204, 243, 143, 86, 60, 19, 162, 247, 253, 96, 150, 49, 134, 41, 94, 58, 122, 89, 44]\nthread 'types::encrypts_decrypts_info' panicked at 'called `Result::unwrap()` on an `Err` value: Utf8Error { valid_up_to: 1, error_len: Some(1) }', src/libcore/result.rs:1009:5\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nstack backtrace:\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n   1: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:71\n   2: std::panicking::default_hook::{{closure}}\n             at src/libstd/sys_common/backtrace.rs:59\n             at src/libstd/panicking.rs:211\n   3: std::panicking::default_hook\n             at src/libstd/panicking.rs:227\n   4: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:491\n   5: std::panicking::continue_panic_fmt\n             at src/libstd/panicking.rs:398\n   6: rust_begin_unwind\n             at src/libstd/panicking.rs:325\n   7: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:95\n   8: core::result::unwrap_failed\n             at /rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libcore/macros.rs:26\n   9: &lt;core::result::Result&lt;T, E&gt;&gt;::unwrap\n             at /rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libcore/result.rs:808\n  10: rsa_rust::types::SecretKey::decrypt\n             at src/types.rs:191\n  11: rsa_rust::types::encrypts_decrypts_info\n             at src/types.rs:217\n  12: rsa_rust::types::encrypts_decrypts_info::{{closure}}\n             at src/types.rs:211\n  13: core::ops::function::FnOnce::call_once\n             at /rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libcore/ops/function.rs:238\n  14: &lt;F as alloc::boxed::FnBox&lt;A&gt;&gt;::call_box\n             at src/libtest/lib.rs:1471\n             at /rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libcore/ops/function.rs:238\n             at /rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/liballoc/boxed.rs:673\n  15: __rust_maybe_catch_panic\n             at src/libpanic_unwind/lib.rs:102\ntest types::encrypts_decrypts_info ... FAILED\n</code></pre>\n\n<p>So at this point, idk if the error is coming from a bad key generation or a bad bytes encoding/decoding process.</p>\n\n<p>Thanks for your time.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1550778444, "post_id": 54810871, "comment_id": 96406549, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/52902081/can-you-create-a-function-that-takes-another-function-and-a-parameter-and-return\">Can you create a function that takes another function and a parameter and returns a lazy stream of nested function calls?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1550763895, "creation_date": 1550763895, "answer_id": 54810969, "question_id": 54810871, "link": "https://stackoverflow.com/questions/54810871/is-there-an-equivalent-to-haskells-iterate-in-rust/54810969#54810969", "title": "Is there an equivalent to Haskell&#39;s iterate in Rust?", "body": "<p><a href=\"https://docs.rs/itertools/0.8.0/itertools/fn.iterate.html\" rel=\"nofollow noreferrer\"><code>itertools::iterate</code></a> seems to be what you want.</p>\n"}, {"tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": true, "score": 5, "last_activity_date": 1551021004, "last_edit_date": 1551021004, "creation_date": 1550763895, "answer_id": 54810970, "question_id": 54810871, "link": "https://stackoverflow.com/questions/54810871/is-there-an-equivalent-to-haskells-iterate-in-rust/54810970#54810970", "title": "Is there an equivalent to Haskell&#39;s iterate in Rust?", "body": "<p>This does not exist in the standard library, however the <a href=\"https://crates.io/crates/itertools\" rel=\"nofollow noreferrer\">itertools</a> crate has <a href=\"https://docs.rs/itertools/0.8.0/itertools/fn.iterate.html\" rel=\"nofollow noreferrer\"><code>iterate</code></a></p>\n\n<blockquote>\n  <p>Creates a new iterator that infinitely applies function to value and yields results.</p>\n</blockquote>\n\n<pre><code>use itertools::iterate;\n\nitertools::assert_equal(iterate(1, |&amp;i| i * 3).take(5), vec![1, 3, 9, 27, 81]);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 148, "user_id": 7263440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b16f456d714f65cb780cee9a87dc0f8?s=128&d=identicon&r=PG&f=1", "display_name": "Dan N", "link": "https://stackoverflow.com/users/7263440/dan-n"}, "is_accepted": false, "score": 1, "last_activity_date": 1579646108, "last_edit_date": 1579646108, "creation_date": 1575738200, "answer_id": 59228336, "question_id": 54810871, "link": "https://stackoverflow.com/questions/54810871/is-there-an-equivalent-to-haskells-iterate-in-rust/59228336#59228336", "title": "Is there an equivalent to Haskell&#39;s iterate in Rust?", "body": "<p>As of <a href=\"https://blog.rust-lang.org/2019/04/11/Rust-1.34.0.html#library-stabilizations\" rel=\"nofollow noreferrer\">Rust 1.34</a>, you can use <code>std::iter::successors</code></p>\n\n<p>So for this problem you would do something like this:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=00521a0725e2b176fd5407d7c3de8d4f\" rel=\"nofollow noreferrer\">playpen</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::iter::successors;\n\nfn main() {\n    let v = successors(Some(2_u128), |n| n.checked_mul(*n)).collect::&lt;Vec&lt;_&gt;&gt;();\n    assert_eq!(v, vec![2, 4, 16, 256, 65536, 4294967296, 18446744073709551616]);\n\n    for i in successors(Some(2_u128), |n| n.checked_mul(*n)) {\n        println!(\"{}\", i);\n    }\n}\n</code></pre>\n\n<p>Also look at <a href=\"https://doc.rust-lang.org/std/iter/fn.from_fn.html\" rel=\"nofollow noreferrer\"><code>std::iter::from_fn</code></a>, it can be quite a bit more powerful.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8370684"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 54810970, "answer_count": 3, "score": 3, "last_activity_date": 1579646108, "creation_date": 1550763566, "last_edit_date": 1550764083, "question_id": 54810871, "link": "https://stackoverflow.com/questions/54810871/is-there-an-equivalent-to-haskells-iterate-in-rust", "title": "Is there an equivalent to Haskell&#39;s iterate in Rust?", "body": "<p>Haskell's <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:iterate\" rel=\"nofollow noreferrer\"><code>iterate</code></a> function repeatedly applies a function to a value to generate a series of values. For example, applying (^2) to 2 generates 2, 2^2, 2^2^2, 2^2^2^2, ... (2, 4, 16, 256, ...)</p>\n\n<p>Is there an equivalent in Rust? </p>\n"}, {"tags": ["rust", "rust-proc-macros"], "answers": [{"comments": [{"owner": {"reputation": 5146, "user_id": 851835, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/20bf44ece0e0db121f9a44812b113e03?s=128&d=identicon&r=PG", "display_name": "updogliu", "link": "https://stackoverflow.com/users/851835/updogliu"}, "edited": false, "score": 0, "creation_date": 1550755785, "post_id": 54802484, "comment_id": 96392926, "body": "Thanks for the examples and the reference to the book!"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1550737885, "creation_date": 1550737885, "answer_id": 54802484, "question_id": 54802045, "link": "https://stackoverflow.com/questions/54802045/what-is-this-strange-syntax-where-an-enum-variant-is-used-as-a-function/54802484#54802484", "title": "What is this strange syntax where an enum variant is used as a function?", "body": "<p>This syntax is standard Rust syntax. <strong>You can use tuple struct or tuple struct-like enum variants as functions.</strong> See this small example:</p>\n\n<pre><code>enum Color {\n    Str(String),\n    Rgb(u8, u8, u8),\n}\n\nstruct Foo(bool);\n\n// Use as function pointers (type annotations not necessary)\nlet f: fn(String) -&gt; Color = Color::Str;\nlet g: fn(u8, u8, u8) -&gt; Color = Color::Rgb;\nlet h: fn(bool) -&gt; Foo = Foo;\n</code></pre>\n\n<p>In the next example, those functions are directly passed to another function (like <code>Option::map</code>) (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=710493690e714499064039a6aca24fb9\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>// A function which takes a function\nfn string_fn&lt;O, F&gt;(f: F) -&gt; O\nwhere\n    F: FnOnce(String) -&gt; O,\n{\n    f(\"peter\".to_string())\n}\n\n\nstring_fn(|s| println!(\"{}\", s));  // using a clojure \nstring_fn(std::mem::drop);         // using a function pointer\n\n// Using the enum variant as function\nlet _: Color = string_fn(Color::Str); \n</code></pre>\n\n<p>You can find out more about this feature, in <a href=\"https://doc.rust-lang.org/book/ch19-05-advanced-functions-and-closures.html\" rel=\"nofollow noreferrer\">this chapter of the book</a>.</p>\n"}], "owner": {"reputation": 5146, "user_id": 851835, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/20bf44ece0e0db121f9a44812b113e03?s=128&d=identicon&r=PG", "display_name": "updogliu", "link": "https://stackoverflow.com/users/851835/updogliu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 271, "favorite_count": 0, "accepted_answer_id": 54802484, "answer_count": 1, "score": 3, "last_activity_date": 1550773550, "creation_date": 1550736177, "last_edit_date": 1550773550, "question_id": 54802045, "link": "https://stackoverflow.com/questions/54802045/what-is-this-strange-syntax-where-an-enum-variant-is-used-as-a-function", "title": "What is this strange syntax where an enum variant is used as a function?", "body": "<p>Below is the <a href=\"https://docs.rs/syn/0.15/syn/parse/index.html\" rel=\"nofollow noreferrer\">example</a> given by the mod documentation of <code>syn::parse</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Item {\n    Struct(ItemStruct),\n    Enum(ItemEnum),\n}\n\nstruct ItemStruct {\n    struct_token: Token![struct],\n    ident: Ident,\n    brace_token: token::Brace,\n    fields: Punctuated&lt;Field, Token![,]&gt;,\n}\n\nimpl Parse for Item {\n    fn parse(input: ParseStream) -&gt; Result&lt;Self&gt; {\n        let lookahead = input.lookahead1();\n        if lookahead.peek(Token![struct]) {\n            input.parse().map(Item::Struct)    // &lt;-- here\n        } else if lookahead.peek(Token![enum]) {\n            input.parse().map(Item::Enum)      // &lt;-- and here\n        } else {\n            Err(lookahead.error())\n        }\n    }\n}\n</code></pre>\n\n<p>Is <code>input.parse().map(Item::Struct)</code> a valid normal Rust syntax (appears not as <code>Item::Struct</code> is not a function), or is it a kind of special syntax for <code>proc_macro</code> libs? If the latter is the case, is there a documentation of the <code>proc_macro</code> specific syntax rules?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 5, "last_activity_date": 1550735128, "last_edit_date": 1550735128, "creation_date": 1550734144, "answer_id": 54801479, "question_id": 54798172, "link": "https://stackoverflow.com/questions/54798172/override-build-script-for-a-dependency/54801479#54801479", "title": "Override build script for a dependency", "body": "<p>You need to put the override information into one of the <a href=\"https://doc.rust-lang.org/cargo/reference/config.html\" rel=\"noreferrer\">Cargo configuration files</a>. For example for <code>harfbuzz-sys</code>, you could put this into <code>.cargo/config</code> inside your workspace:</p>\n\n<pre><code>[target.machine-vendor-os.harfbuzz]\nrustc-link-search = [\"/path/to/staging/usr/lib\"]\nrustc-link-lib = [\"harfbuzz\"]\n</code></pre>\n\n<p>Note that on the first line:</p>\n\n<ul>\n<li><code>machine-vendor-os</code> must be the same as the value that you give to cargo with the <code>--target</code> option.</li>\n<li><code>harfbuzz</code> must be the same as the <code>links</code> key defined in <a href=\"https://github.com/servo/rust-harfbuzz/blob/master/harfbuzz-sys/Cargo.toml#L14\" rel=\"noreferrer\">your dependency's <code>Cargo.toml</code></a>.</li>\n</ul>\n\n<p>And on the second line, <code>/path/to/staging/usr/lib</code> is the path where your pre-compiled dependency is located on the build system.</p>\n"}], "owner": {"reputation": 21653, "user_id": 100335, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/e470fa78a9b8022d24b2780c5ffc33fe?s=128&d=identicon&r=PG", "display_name": "kpozin", "link": "https://stackoverflow.com/users/100335/kpozin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 498, "favorite_count": 1, "accepted_answer_id": 54801479, "answer_count": 1, "score": 4, "last_activity_date": 1550735128, "creation_date": 1550715120, "last_edit_date": 1592644375, "question_id": 54798172, "link": "https://stackoverflow.com/questions/54798172/override-build-script-for-a-dependency", "title": "Override build script for a dependency", "body": "<p>I am building a Rust crate that has transitive dependencies on a few <code>*-sys</code> crates wrapping native libraries. The <code>*-sys</code> crates use <code>build.rs</code> to build the native libraries with cmake, which is not supported in my environment.</p>\n<p>I already have those native libraries prebuilt elsewhere in my project tree. I would like to <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#overriding-build-scripts\" rel=\"nofollow noreferrer\">override the build scripts</a> to not run, and use the existing native libraries instead.</p>\n<blockquote>\n<p>If a manifest contains a links key, then Cargo supports overriding the build script specified with a custom library. The purpose of this functionality is to prevent running the build script in question altogether and instead supply the metadata ahead of time.</p>\n<p>To override a build script, place the following configuration in any acceptable Cargo configuration location.</p>\n<pre><code>[target.x86_64-unknown-linux-gnu.foo]\nrustc-link-search = [&quot;/path/to/foo&quot;]\nrustc-link-lib = [&quot;foo&quot;]\nroot = &quot;/path/to/foo&quot;\nkey = &quot;value&quot;\n</code></pre>\n</blockquote>\n<p>Source: <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#overriding-build-scripts\" rel=\"nofollow noreferrer\">Cargo Reference &gt; Build Scripts</a></p>\n<p>My initial guess based on that documentation is that I would just need to add <code>rustc-link-lib</code> when declaring the dependency, but this doesn't seem to work.</p>\n<pre><code>[package]\n# ...\n\n[dependencies]\n# ...\nharfbuzz-sys = { version = &quot;0.3&quot;, rustc-link-lib = [&quot;harfbuzz&quot;] }\n# ...\n</code></pre>\n<p>Cargo still tries to invoke <code>build.rs</code> and fails.</p>\n<p>Is there a correct way to override <code>harfbuzz-sys</code>'s <code>build.rs</code> for all of its transitive dependents in my project?</p>\n"}]