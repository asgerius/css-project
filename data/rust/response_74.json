[{"tags": ["multithreading", "concurrency", "rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1465423190, "last_edit_date": 1465423190, "creation_date": 1465422843, "answer_id": 37713608, "question_id": 37713367, "link": "https://stackoverflow.com/questions/37713367/why-does-this-variable-definition-imply-static-lifetime/37713608#37713608", "title": "Why does this variable definition imply static lifetime?", "body": "<p>When trying to reproduce a problem, I'd encourage you to create a <a href=\"/help/mcve\">MCVE</a> by removing all irrelevant code. In this case, something like this seems to produce the same error:</p>\n\n<pre><code>fn segmented_sieve_parallel(max_val: usize, segment_size: usize) {\n    let foo = (segment_size..max_val)\n        .collect::&lt;Vec&lt;_&gt;&gt;()\n        .chunks(segment_size);\n}\n\nfn main() {}\n</code></pre>\n\n<p>Let's break that down:</p>\n\n<ol>\n<li>Create an iterator between numbers.</li>\n<li>Collect all of them into a <code>Vec&lt;usize&gt;</code>.</li>\n<li>Return an iterator that <strong>contains references to the vector</strong>.</li>\n<li>Since the vector isn't bound to any variable, it's dropped at the end of the statement. This would leave the iterator pointing to an invalid region of memory, so that's disallowed.</li>\n</ol>\n\n<p>Check out the definition of <code>slice::chunks</code>:</p>\n\n<pre><code>fn chunks(&amp;self, size: usize) -&gt; Chunks&lt;T&gt;\n\npub struct Chunks&lt;'a, T&gt; where T: 'a {\n    // some fields omitted\n}\n</code></pre>\n\n<p>The lifetime marker <code>'a</code> lets you know that the iterator contains a reference to something. <em>Lifetime elision</em> has removed the <code>'a</code> from the function, which looks like this, expanded:</p>\n\n<pre><code>fn chunks&lt;'a&gt;(&amp;'a self, size: usize) -&gt; Chunks&lt;'a, T&gt;\n</code></pre>\n\n<p>Check out this line of the error message:</p>\n\n<blockquote>\n  <p>help: consider using a <code>let</code> binding to increase its lifetime</p>\n</blockquote>\n\n<p>You can follow that as such:</p>\n\n<pre><code>fn segmented_sieve_parallel(max_val: usize, segment_size: usize) {\n    let foo = (segment_size..max_val)\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n    let bar = foo.chunks(segment_size);\n}\n\nfn main() {}\n</code></pre>\n\n<p>Although I'd write it as</p>\n\n<pre><code>fn segmented_sieve_parallel(max_val: usize, segment_size: usize) {\n    let foo: Vec&lt;_&gt; = (segment_size..max_val).collect();\n    let bar = foo.chunks(segment_size);\n}\n\nfn main() {}\n</code></pre>\n\n<p>Re-inserting this code back into your original problem won't solve the problem, but it will be much easier to understand. That's because you are attempting to pass a reference to <code>thread::spawn</code>, which may outlive the current thread. Thus, everything passed to <code>thread::spawn</code> must have the <code>'static</code> lifetime. There are tons of questions that detail why that must be prevented and a litany of solutions, including scoped threads and cloning the vector.</p>\n\n<p>Cloning the vector is the easiest, but potentially inefficient:</p>\n\n<pre><code>for this_segment in extended_segments.clone() {\n    let this_segment = this_segment.to_vec();\n    // ...\n}\n</code></pre>\n"}], "owner": {"reputation": 5006, "user_id": 2023432, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/89ZPT.png?s=128&g=1", "display_name": "bright-star", "link": "https://stackoverflow.com/users/2023432/bright-star"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 37713608, "answer_count": 1, "score": 4, "last_activity_date": 1465423190, "creation_date": 1465421872, "last_edit_date": 1495542243, "question_id": 37713367, "link": "https://stackoverflow.com/questions/37713367/why-does-this-variable-definition-imply-static-lifetime", "title": "Why does this variable definition imply static lifetime?", "body": "<p>I'm trying to execute a function on chunks of a vector and then send the result back using the message passing library.</p>\n\n<p>However, I get a strange error about the lifetime of the vector that isn't even participating in the thread operations:</p>\n\n<pre><code>src/lib.rs:153:27: 154:25 error: borrowed value does not live long enough\nsrc/lib.rs:153   let extended_segments = (segment_size..max_val)\nerror: src/lib.rs:154     .collect::&lt;Vec&lt;_&gt;&gt;()borrowed value does not live long enough\n\nnote: reference must be valid for the static lifetime...:153\n  let extended_segments = (segment_size..max_val)\nsrc/lib.rs:153:3: 155:27: 154     .collect::&lt;Vec&lt;_&gt;&gt;()\nnote: but borrowed value is only valid for the statement at 153:2:\nreference must be valid for the static lifetime...\nsrc/lib.rs:\nlet extended_segments = (segment_size..max_val)\nconsider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>I tried moving around the iterator and adding lifetimes to different places, but I couldn't get the checker to pass and still stay on type.</p>\n\n<p>The offending code is below, based on the <a href=\"https://doc.rust-lang.org/book/concurrency.html\" rel=\"nofollow noreferrer\">concurrency chapter in the Rust book</a>. (Complete code is at <a href=\"https://github.com/talexand/prime-suspects/blob/rust-parallel/src/lib.rs#L153\" rel=\"nofollow noreferrer\">github</a>.)</p>\n\n<pre><code>use std::sync::mpsc;\nuse std::thread;\n\nfn sieve_segment(a: &amp;[usize], b: &amp;[usize]) -&gt; Vec&lt;usize&gt; {\n    vec![]\n}\nfn eratosthenes_sieve(val: usize) -&gt; Vec&lt;usize&gt; {\n    vec![]\n}\n\npub fn segmented_sieve_parallel(max_val: usize, mut segment_size: usize) -&gt; Vec&lt;usize&gt; {\n    if max_val &lt;= ((2 as i64).pow(16) as usize) {\n        // early return if the highest value is small enough (empirical)\n        return eratosthenes_sieve(max_val);\n    }\n\n    if segment_size &gt; ((max_val as f64).sqrt() as usize) {\n        segment_size = (max_val as f64).sqrt() as usize;\n        println!(\"Segment size is larger than \u221a{}. Reducing to {} to keep resource use down.\",\n                 max_val,\n                 segment_size);\n    }\n\n    let small_primes = eratosthenes_sieve((max_val as f64).sqrt() as usize);\n    let mut big_primes = small_primes.clone();\n\n    let (tx, rx): (mpsc::Sender&lt;Vec&lt;usize&gt;&gt;, mpsc::Receiver&lt;Vec&lt;usize&gt;&gt;) = mpsc::channel();\n\n    let extended_segments = (segment_size..max_val)\n        .collect::&lt;Vec&lt;_&gt;&gt;()\n        .chunks(segment_size);\n    for this_segment in extended_segments.clone() {\n        let small_primes = small_primes.clone();\n        let tx = tx.clone();\n\n        thread::spawn(move || {\n            let sieved_segment = sieve_segment(&amp;small_primes, this_segment);\n            tx.send(sieved_segment).unwrap();\n        });\n    }\n\n    for _ in 1..extended_segments.count() {\n        big_primes.extend(&amp;rx.recv().unwrap());\n    }\n\n    big_primes\n}\n\nfn main() {}\n</code></pre>\n\n<p>How do I understand and avoid this error? I'm not sure how to make the lifetime of the thread closure <a href=\"https://stackoverflow.com/a/32981598/2023432\">static as in this question</a> and still have the function be reusable (i.e., not <code>main()</code>). I'm not sure how to \"consume all things that come into [the closure]\" as mentioned in <a href=\"https://stackoverflow.com/a/28186635/2023432\">this question</a>. And I'm not sure where to <a href=\"https://stackoverflow.com/a/30330963/2023432\">insert <code>.map(|s| s.into())</code></a> to ensure that all references become moves, nor am I sure I want to.</p>\n"}, {"tags": ["rust", "global"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1465407777, "post_id": 37709346, "comment_id": 62892691, "body": "<code>Optional</code> is not a type provided by the standard library. Where does it come from? Is it provided by the GTK crate? Please produce a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> when asking a question on Stack Overflow. You may also be interested in <a href=\"http://stackoverflow.com/questions/27791532/how-do-i-create-a-global-mutable-singleton\">How do I create a global, mutable singleton?</a>. You should also note that Rust style is <code>snake_case</code>, not <code>camelCase</code> (should be <code>app_window</code>)."}, {"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465408000, "post_id": 37709346, "comment_id": 62892804, "body": "@Shepmaster It is from <code>std::option::Option</code>, as far as I am concerned. But it seems that I don&#39;t need to explicitly import it, for some reason. And explicitly importing it changes nothing."}, {"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465408096, "post_id": 37709346, "comment_id": 62892854, "body": "See <a href=\"http://rustbyexample.com/std/option.html\" rel=\"nofollow noreferrer\">this link</a>. This is where I got that <code>Optional&lt;...&gt;</code>-part from."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1465408313, "post_id": 37709346, "comment_id": 62893003, "body": "<code>Optional</code> is very different from <code>Option</code>. It&#39;s not extremely useful to ask for help on code that has invalid syntax, thus why a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is highly recommended. For example, I&#39;d bet that <code>Optional</code> [sic] is a red-herring here."}], "answers": [{"comments": [{"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "edited": false, "score": 0, "creation_date": 1465409652, "post_id": 37709830, "comment_id": 62893808, "body": "Thank you for the explanation, it is actually pretty interesting. But: Is there a way to use <code>Optional</code> or something different too have the possibility to use a <code>None</code>-like value? Or do I need to trick around with a <code>struct</code> that contains the <code>Optional</code>? (Without using unstable features)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "edited": false, "score": 0, "creation_date": 1465409948, "post_id": 37709830, "comment_id": 62893992, "body": "@CodingLambdas there <i>still</i> isn&#39;t an <code>Optional</code> type. When placed in an <code>Option</code>, <code>Option</code> then has has a destructor that might need to be called, which isn&#39;t allowed in stable Rust as of 1.9."}, {"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "edited": false, "score": 0, "creation_date": 1465410189, "post_id": 37709830, "comment_id": 62894118, "body": "Ok, I created a struct that contains the window. It still doesn&#39;t work (same error). And I didn&#39;t implement <code>Drop</code>."}, {"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "edited": false, "score": 0, "creation_date": 1465410284, "post_id": 37709830, "comment_id": 62894171, "body": "Sry, I am used to writing <code>Optional</code>. As I already stated, I am new to Rust, coming from Python, and the snippet in the question was wrong because I didn&#39;t copy it. (Although I think I will never leave python... But it isn&#39;t compilable.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "edited": false, "score": 0, "creation_date": 1465410517, "post_id": 37709830, "comment_id": 62894321, "body": "@CodingLambdas <i>And I didn&#39;t implement <code>Drop</code></i> \u2014 if your type contains a type that implements <code>Drop</code>, you can&#39;t &quot;trick&quot; the compiler into not calling it. <code>Drop</code> will be called unless you specifically go out of your way to forget the value (which wouldn&#39;t help for statics anyway)."}, {"owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "edited": false, "score": 0, "creation_date": 1465410638, "post_id": 37709830, "comment_id": 62894389, "body": "Ok... So the conclusion is: I cannot use global variables for that without using unstable features. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "edited": false, "score": 1, "creation_date": 1465410953, "post_id": 37709830, "comment_id": 62894587, "body": "@CodingLambdas did you read the link that has been posted twice that describes how to create global variables in stable Rust? Not that global variables are a <i>good</i> thing and I can <b>almost guarantee</b> you don&#39;t need it, but it&#39;s factually incorrect to say <i>I cannot use global variables for that without using unstable features</i>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1465410313, "last_edit_date": 1495541986, "creation_date": 1465409296, "answer_id": 37709830, "question_id": 37709346, "link": "https://stackoverflow.com/questions/37709346/globals-of-type-option-in-rust/37709830#37709830", "title": "Globals of type Option&lt;...&gt; in Rust", "body": "<p>Here's code that reproduces the same error that you've shown:</p>\n\n<pre><code>struct Foo;\n\nimpl Drop for Foo {\n    fn drop(&amp;mut self) {}\n}\n\nstatic mut f: Foo = Foo;\n\nfn main() {}\n</code></pre>\n\n<p>Produces the errors:</p>\n\n\n\n<pre><code>error: mutable statics are not allowed to have destructors [E0397]\nstatic mut f: Foo = Foo;\n                    ^~~\n\nerror: statics are not allowed to have destructors [E0493]\nstatic mut f: Foo = Foo;\n                    ^~~\n</code></pre>\n\n<p>As the message says, Rust disallows having any kind of static item with destructors. A proposed <a href=\"https://github.com/rust-lang/rfcs/issues/1111\" rel=\"nofollow noreferrer\">change to the language</a> discusses the origin of this:</p>\n\n<blockquote>\n  <p>This was historically motivated by the question of when to run the\n  destructor:</p>\n  \n  <ul>\n  <li>There where worries about supporting life before/after main() for, eg, static variables due to them having historically caused trouble\n  in, eg, C++ code bases.</li>\n  <li>Leaking the destructor was also for the most time not known to be a feasible option due to leaking possibly being bad.</li>\n  </ul>\n</blockquote>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1440-drop-types-in-const.md\" rel=\"nofollow noreferrer\">RFC 1440</a> has been accepted to allow these types. As of Rust 1.9, there is an unstable feature that allows them: <code>#![feature(drop_types_in_const)]</code>.</p>\n\n<p>As the RFC says:</p>\n\n<blockquote>\n  <p>Destructors do not run on static items (by design), so this can lead to unexpected behavior when a type's destructor has effects outside the program (e.g. a RAII temporary folder handle, which deletes the folder on drop). However, this can already happen using the lazy_static crate.</p>\n</blockquote>\n\n<p>Which leads to an alternate solution before the feature is stabilized: you can create a non-mutable static variable with lazy_static, which can then be wrapped in a thread-safe mutability wrapper. The type may contain a destructor:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/27791532/how-do-i-create-a-global-mutable-singleton\">How do I create a global, mutable singleton?</a></p>\n"}], "owner": {"reputation": 1383, "user_id": 4696955, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-Bef502HUdvc/AAAAAAAAAAI/AAAAAAAAAA4/xILmyHEn5iU/photo.jpg?sz=128", "display_name": "CodenameLambda", "link": "https://stackoverflow.com/users/4696955/codenamelambda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 482, "favorite_count": 0, "accepted_answer_id": 37709830, "answer_count": 1, "score": 2, "last_activity_date": 1472696792, "creation_date": 1465407691, "last_edit_date": 1472696792, "question_id": 37709346, "link": "https://stackoverflow.com/questions/37709346/globals-of-type-option-in-rust", "title": "Globals of type Option&lt;...&gt; in Rust", "body": "<p>I can not get the following piece of code to work:</p>\n\n<pre><code>extern crate gtk\n\nuse gtk::prelude::*\nuse gtk::Window;\nuse gtk::WindowType;\n// ...\n\nstatic mut appWindow: Option&lt;Window&gt; = None;\n\nfn main() {\n    // ...\n    appWindow = Some(Window::new(WindowType::Toplevel))\n    // ...\n}\n</code></pre>\n\n<p>The compiler produces the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: mutable statics are not allowed to have destructors [E0397]\nstatic mut appWindow: Option&lt;Window&gt; = None;\n</code></pre>\n\n<p>Surrounding everything with <code>unsafe { ... }</code> doesn't help.</p>\n"}, {"tags": ["installation", "rust", "rust-cargo", "rust-crates"], "answers": [{"comments": [{"owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "edited": false, "score": 8, "creation_date": 1563326570, "post_id": 37707083, "comment_id": 100659255, "body": "Seems like this does not actually fix the problem. The library is already listed as a dependency under Cargo.toml. When I try to build the project, it fails because the dependency is not installed. When I try to install the dependency, it fails due to the error in the original post."}, {"owner": {"reputation": 14078, "user_id": 442006, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/745d0832184e9df52e3d6d9e4bdbad52?s=128&d=identicon&r=PG", "display_name": "Roger Dahl", "link": "https://stackoverflow.com/users/442006/roger-dahl"}, "reply_to_user": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "edited": false, "score": 1, "creation_date": 1599251446, "post_id": 37707083, "comment_id": 112727564, "body": "@user5359531 - Try <code>cargo run</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 72, "last_activity_date": 1615218236, "last_edit_date": 1615218236, "creation_date": 1465400418, "answer_id": 37707083, "question_id": 37706999, "link": "https://stackoverflow.com/questions/37706999/error-installing-a-crate-via-cargo-specified-package-has-no-binaries/37707083#37707083", "title": "Error installing a crate via cargo: specified package has no binaries", "body": "<p><code>cargo install</code> is used to install binary packages that happen to be distributed through crates.io.</p>\n<p>If you want to use a crate as a dependency, add it to your <code>Cargo.toml</code>.</p>\n<p>Read <a href=\"https://doc.rust-lang.org/book/second-edition/ch01-02-hello-world.html#hello-cargo\" rel=\"nofollow noreferrer\">the Rust getting started guide</a> and <a href=\"https://doc.rust-lang.org/cargo/getting-started/first-steps.html\" rel=\"nofollow noreferrer\">the Cargo getting started guide</a> for further information. In short:</p>\n<pre class=\"lang-none prettyprint-override\"><code>cargo new my_project\ncd my_project\necho 'curl = &quot;0.3.0&quot;' &gt;&gt; Cargo.toml\n</code></pre>\n<p>Amusingly, you can install a third-party Cargo subcommand called <a href=\"https://github.com/killercup/cargo-edit\" rel=\"nofollow noreferrer\">cargo-edit</a> using <code>cargo install</code> that makes it easier to modify your <code>Cargo.toml</code> file to add dependencies!</p>\n<pre class=\"lang-none prettyprint-override\"><code>cargo install cargo-edit\ncargo add curl\n</code></pre>\n<hr />\n<p>An important thing to note is that <strong>every</strong> Cargo project manages and compiles a separate set of dependencies (<a href=\"https://stackoverflow.com/a/37472558/155423\">some background info</a>). Thus it doesn't make sense to install a <em>compiled</em> library. The <em>source code</em> for each version of a library will be cached locally, avoiding downloading it multiple times.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/cargo/issues/2552\" rel=\"nofollow noreferrer\">cargo install &lt;library_name&gt; --library (Cargo issue #2552)</a></li>\n</ul>\n"}], "owner": {"reputation": 8871, "user_id": 1260906, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/aPM5A.png?s=128&g=1", "display_name": "Afr", "link": "https://stackoverflow.com/users/1260906/afr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 15718, "favorite_count": 5, "accepted_answer_id": 37707083, "answer_count": 1, "score": 41, "last_activity_date": 1615218236, "creation_date": 1465400188, "last_edit_date": 1502559760, "question_id": 37706999, "link": "https://stackoverflow.com/questions/37706999/error-installing-a-crate-via-cargo-specified-package-has-no-binaries", "title": "Error installing a crate via cargo: specified package has no binaries", "body": "<p>I'm trying to install a Rust crate on my system (Arch Linux) using Cargo. I can search for crates and find what I need, for example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> $ cargo search curl | head -n3\n    Updating registry `https://github.com/rust-lang/crates.io-index`\ncurl (0.3.0)             Rust bindings to libcurl for making HTTP requests\ncurl-sys (0.2.0)         Native bindings to the libcurl library\n</code></pre>\n\n<p>When I try to install it, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> $ cargo install curl\n    Updating registry `https://github.com/rust-lang/crates.io-index`\nerror: specified package has no binaries\n</code></pre>\n\n<p>What does this mean? Do I have to build it from source first? What's the point of Cargo if it does not install it in the first place?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> $ uname -a\nLinux 4.6.1-2-ARCH #1 SMP PREEMPT Thu Jun 2 15:46:17 CEST 2016 x86_64 GNU/Linux\n $ rustc --version\nrustc 1.9.0\n $ cargo --version\ncargo 0.10.0 (10ddd7d 2016-04-08)\n</code></pre>\n"}, {"tags": ["rust", "identity", "smart-pointers", "reference-counting"], "answers": [{"tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 6, "last_activity_date": 1550016049, "last_edit_date": 1550016049, "creation_date": 1465399627, "answer_id": 37706796, "question_id": 37706596, "link": "https://stackoverflow.com/questions/37706596/is-there-a-way-to-distinguish-between-different-rcs-of-the-same-value/37706796#37706796", "title": "Is there a way to distinguish between different `Rc`s of the same value?", "body": "<p>You can cast <code>&amp;*rc</code> to <code>*const T</code> to get a pointer to the underlying data and compare the value of those pointers:</p>\n\n<pre><code>use std::rc::Rc;\n\n#[derive(PartialEq, Eq)]\nstruct MyId;\n\npub fn main() {\n    let rc_a_0 = Rc::new(MyId);\n    let rc_a_1 = rc_a_0.clone();\n    let rc_b_0 = Rc::new(MyId);\n    let rc_b_1 = rc_b_0.clone();\n\n    println!(\n        \"rc_a_0 == rc_a_1: {:?}\",\n        &amp;*rc_a_0 as *const MyId == &amp;*rc_a_1 as *const MyId\n    );\n    println!(\n        \"rc_a_0 == rc_b_0: {:?}\",\n        &amp;*rc_a_0 as *const MyId == &amp;*rc_b_0 as *const MyId\n    );\n}\n</code></pre>\n\n<p>prints</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rc_a_0 == rc_a_1: true\nrc_a_0 == rc_b_0: false\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 1, "creation_date": 1596259889, "post_id": 37706846, "comment_id": 111761211, "body": "For comparing pointers, it is probably good practice to always cast to <code>*const MyType</code> first, or at least specify the type in <code>ptr::eq::&lt;MyType&gt;(...)</code>. Otherwise, you might be comparing the wrong type (e.g. <code>&amp;&amp;MyType</code> instead of <code>&amp;MyType</code>, or <code>Deref</code>ed values)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1553262684, "last_edit_date": 1553262684, "creation_date": 1465399740, "answer_id": 37706846, "question_id": 37706596, "link": "https://stackoverflow.com/questions/37706596/is-there-a-way-to-distinguish-between-different-rcs-of-the-same-value/37706846#37706846", "title": "Is there a way to distinguish between different `Rc`s of the same value?", "body": "<p>The same answer as Dogbert, but <em>maybe</em> a bit cleaner:</p>\n\n<pre><code>use std::ptr;\n\nprintln!(\n    \"rc_a_0 == rc_a_1: {:?}\",\n    ptr::eq(rc_a_0.as_ref(), rc_a_1.as_ref())\n);\nprintln!(\n    \"rc_a_0 == rc_b_0: {:?}\",\n    ptr::eq(rc_a_0.as_ref(), rc_b_0.as_ref())\n);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>rc_a_0 == rc_a_1: true\nrc_a_0 == rc_b_0: false\n</code></pre>\n\n<p>In short, you want <em>reference equality</em>, not <em>value equality</em>. A raw pointer's value is the memory address, so comparing the value of a raw pointer is equivalent to reference equality.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39463760/155423\">How to check if two variables point to the same object in memory?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47489449/155423\">Why can comparing two seemingly equal pointers with == return false?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 18987, "user_id": 2470818, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c3e0df5ee75b18ce0c8aeadf4433e151?s=128&d=identicon&r=PG&f=1", "display_name": "vallentin", "link": "https://stackoverflow.com/users/2470818/vallentin"}, "is_accepted": false, "score": 9, "last_activity_date": 1581789688, "creation_date": 1581789688, "answer_id": 60241585, "question_id": 37706596, "link": "https://stackoverflow.com/questions/37706596/is-there-a-way-to-distinguish-between-different-rcs-of-the-same-value/60241585#60241585", "title": "Is there a way to distinguish between different `Rc`s of the same value?", "body": "<p><em><a href=\"https://blog.rust-lang.org/2017/04/27/Rust-1.17.html\" rel=\"noreferrer\">2017</a> stabilization update (in 2020).</em></p>\n\n<p>In Rust 1.17 and forward, you can use <a href=\"https://doc.rust-lang.org/stable/std/rc/struct.Rc.html#method.ptr_eq\" rel=\"noreferrer\"><code>Rc::ptr_eq</code></a>. It does the same as <a href=\"https://doc.rust-lang.org/stable/std/ptr/fn.eq.html\" rel=\"noreferrer\"><code>ptr::eq</code></a>, without the need of converting the <code>Rc</code> to a reference or pointer.</p>\n\n<h3>Reference Equality</h3>\n\n<p>As the other answers mention <code>Rc::ptr_eq</code> (and <code>ptr::eq</code>) checks for reference equality, i.e. whether the two references \"point\" to the same address.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let five = Rc::new(5);\nlet same_five = Rc::clone(&amp;five);\nlet other_five = Rc::new(5);\n\n// five and same_five reference the same value in memory\nassert!(Rc::ptr_eq(&amp;five, &amp;same_five));\n\n// five and other_five does not reference the same value in memory\nassert!(!Rc::ptr_eq(&amp;five, &amp;other_five));\n</code></pre>\n\n<p><em>The example is from the Rust <code>Rc::ptr_eq</code> docs.</em></p>\n\n<h3>Value Equality</h3>\n\n<p><code>Rc</code> implements <code>PartialEq</code>, so simply use <code>==</code> as always, to perform value equality, i.e. whether the values are equal, irrelevant of whether they reference the same address in memory.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::rc::Rc;\n\nlet five = Rc::new(5);\nlet other_five = Rc::new(5);\n\nlet ten = Rc::new(10);\n\nassert!(five == other_five);\n\nassert!(ten != five);\nassert!(ten != other_five);\n</code></pre>\n"}], "owner": {"reputation": 3492, "user_id": 118958, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/NwFFJ.jpg?s=128&g=1", "display_name": "ynimous", "link": "https://stackoverflow.com/users/118958/ynimous"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1505, "favorite_count": 1, "accepted_answer_id": 37706796, "answer_count": 3, "score": 5, "last_activity_date": 1595255375, "creation_date": 1465399090, "last_edit_date": 1595255375, "question_id": 37706596, "link": "https://stackoverflow.com/questions/37706596/is-there-a-way-to-distinguish-between-different-rcs-of-the-same-value", "title": "Is there a way to distinguish between different `Rc`s of the same value?", "body": "<p>Here's an example:</p>\n\n<pre><code>use std::rc::Rc;\n\n#[derive(PartialEq, Eq)]\nstruct MyId;\n\npub fn main() {\n    let rc_a_0 = Rc::new(MyId);\n    let rc_a_1 = rc_a_0.clone();\n    let rc_b_0 = Rc::new(MyId);\n    let rc_b_1 = rc_b_0.clone();\n\n    println!(\"rc_a_0 == rc_a_1: {:?}\", rc_a_0 == rc_a_1);\n    println!(\"rc_a_0 == rc_b_0: {:?}\", rc_a_0 == rc_b_0);\n}\n</code></pre>\n\n<p>Both <code>println!</code>s above print <code>true</code>. Is there a way distinguish between the <code>rc_a_*</code> and <code>rc_b_*</code> pointers?</p>\n"}, {"tags": ["rust", "option-type"], "comments": [{"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 5, "creation_date": 1465391917, "post_id": 37703493, "comment_id": 62881260, "body": "Your problem is not with <code>Option</code> type, but with <code>if</code> being an expression. See <a href=\"http://stackoverflow.com/q/37554325/5189607\">stackoverflow.com/q/37554325/5189607</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1465395585, "post_id": 37703493, "comment_id": 62884242, "body": "@malbarbo is there a reason you don&#39;t actually vote to close the question as a duplicate?"}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465395872, "post_id": 37703493, "comment_id": 62884506, "body": "@Shepmaster I was not sure if this was a duplicate... I think I need to read <a href=\"http://meta.stackexchange.com/questions/10841/how-should-duplicate-questions-be-handled\" title=\"how should duplicate questions be handled\">meta.stackexchange.com/questions/10841/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1465396024, "post_id": 37703493, "comment_id": 62884620, "body": "@malbarbo when you vote to close as a duplicate; you need 4 more people to agree with you that it is a duplicate. Unless you are a gold badge holder, in which case the duplicate automatically happens. That&#39;s why I will sometimes leave a comment instead of dupehammering \u2014 I want to poll other community members to see if they agree with my judgement. In this case, you left a comment (+1), and there were 4 upvotes (+4), then I came around. That&#39;s 6 people who thought it was a dupe ;-)."}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465396168, "post_id": 37703493, "comment_id": 62884748, "body": "@Shepmaster Thanks for the clarification."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465396189, "post_id": 37703493, "comment_id": 62884763, "body": "FWIW, my opinion is &quot;OP should be able to take something that is ~90% of the answer and extrapolate from there or ask a new question about how to get from the end of a previous question to a desired goal&quot;, but that&#39;s not a universal belief. Feel free to pop into the <a href=\"http://chat.stackoverflow.com/rooms/62927/rust\">Rust SO chatroom</a> if you wanna talk about it more ^_^"}, {"owner": {"reputation": 832, "user_id": 114932, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e1fa03c8349d59ac061cdc9c7039da1c?s=128&d=identicon&r=PG", "display_name": "Alexandros Katechis", "link": "https://stackoverflow.com/users/114932/alexandros-katechis"}, "edited": false, "score": 0, "creation_date": 1465398102, "post_id": 37703493, "comment_id": 62886227, "body": "Thanks! I appreciate your answer. I actually had no idea that if statements are expressions. My tip off should have been that the compiler error was marking the line with the <code>if</code> portion rather than the return statement."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1465453952, "post_id": 37703493, "comment_id": 62909527, "body": "This seems like a candidate for an improved compiler error message."}], "owner": {"reputation": 832, "user_id": 114932, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e1fa03c8349d59ac061cdc9c7039da1c?s=128&d=identicon&r=PG", "display_name": "Alexandros Katechis", "link": "https://stackoverflow.com/users/114932/alexandros-katechis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "closed_date": 1465395528, "answer_count": 0, "score": 0, "last_activity_date": 1465391705, "creation_date": 1465391464, "last_edit_date": 1465391705, "question_id": 37703493, "link": "https://stackoverflow.com/questions/37703493/rust-somex-not-working-as-i-expect", "closed_reason": "Duplicate", "title": "Rust Some(x) not working as I expect", "body": "<p>I'm attempting to implement a binary search in Rust (for learning purposes), and I'm using <code>Option&lt;T&gt;</code> to represent the return (<code>None</code> if not found, <code>Some(index)</code> if it's found).</p>\n\n<p>Here's my code:</p>\n\n<pre><code>fn bin_search(needle: i64,\n              list: &amp;[i64],\n              from: Option&lt;usize&gt;,\n              to: Option&lt;usize&gt;)\n              -&gt; Option&lt;usize&gt; {\n    let left = from.unwrap_or(0);\n    let right = to.unwrap_or(list.len());\n\n    if left &gt;= right {\n        return None;\n    } else {\n        let mid = (left + right / 2) as usize;\n        let guess = list[mid];\n\n        if guess == needle {\n            return Option::Some(mid);\n        } else if guess &gt; needle {\n            return bin_search(needle, list, from, Some(mid - 1));\n        } else if guess &lt; needle {\n            return bin_search(needle, list, Some(mid + 1), to);\n        }\n    }\n}\n</code></pre>\n\n<p>And the error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src\\main.rs:22:5: 30:6 error: mismatched types:\n expected `std::option::Option&lt;usize&gt;`,\n    found `()`\n(expected enum `std::option::Option`,\n    found ()) [E0308]\nsrc\\main.rs:22     if guess == needle {\nsrc\\main.rs:23       return Some(mid);\nsrc\\main.rs:24     }\nsrc\\main.rs:25     else if guess &gt; needle {\nsrc\\main.rs:26       return bin_search(needle, list, from, Some(mid - 1));\nsrc\\main.rs:27     }\n               ...\nsrc\\main.rs:22:5: 30:6 help: run `rustc --explain E0308` to see a detailed explanation\nerror: aborting due to previous error\nerror: Could not compile `binsearch`.\n</code></pre>\n\n<p>I suspect the error is with <code>Some(mid)</code> but I have no idea why that's not recognized as the correct type. It is an <code>Option&lt;usize&gt;</code>, since <code>Some</code> is an <code>Option</code>, and <code>mid</code> is being cast to <code>usize</code>, unless I'm missing something.</p>\n"}, {"tags": ["error-handling", "macros", "rust", "panic"], "comments": [{"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 2, "creation_date": 1465379773, "post_id": 37698902, "comment_id": 62872859, "body": "I think the expect function is what you are looking for although it isn&#39;t a macro"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1465390304, "post_id": 37699855, "comment_id": 62880082, "body": "Note that <a href=\"http://doc.rust-lang.org/core/option/enum.Option.html#method.expect\" rel=\"nofollow noreferrer\"><code>Option::expect</code></a> and <a href=\"http://doc.rust-lang.org/core/option/enum.Option.html#method.unwrap\" rel=\"nofollow noreferrer\"><code>Option::unwrap</code></a> also exist."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 6, "last_activity_date": 1465381511, "creation_date": 1465381511, "answer_id": 37699855, "question_id": 37698902, "link": "https://stackoverflow.com/questions/37698902/is-there-a-macro-to-convert-an-error-to-panic/37699855#37699855", "title": "Is there a macro to convert an Error to Panic?", "body": "<p>This is exactly what the methods <a href=\"https://doc.rust-lang.org/stable/std/result/enum.Result.html#method.unwrap\"><code>Result::unwrap</code></a> and <a href=\"https://doc.rust-lang.org/stable/std/result/enum.Result.html#method.expect\"><code>Result::expect</code></a> do.</p>\n\n<p>I know you are asking for a macro, but I think your use case can be fulfilled with the <code>unwrap</code> method: </p>\n\n<pre><code>#[test]\nfn foo() {\n    let c = File::open(...).unwrap();\n    // vs\n    let c = tryfail!(File::open(...));\n}\n</code></pre>\n\n<p>Note that in code that is not test, it's more <a href=\"https://doc.rust-lang.org/book/error-handling.html#a-brief-interlude-unwrapping-isnt-evil\">idiomatic</a> to use <code>expect</code>.</p>\n\n<p>If you really want a macro, you can write one using <code>unwrap</code>.</p>\n"}], "owner": {"reputation": 47414, "user_id": 52817, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/74fUU.png?s=128&g=1", "display_name": "laktak", "link": "https://stackoverflow.com/users/52817/laktak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 37699855, "answer_count": 1, "score": 4, "last_activity_date": 1465381511, "creation_date": 1465379059, "question_id": 37698902, "link": "https://stackoverflow.com/questions/37698902/is-there-a-macro-to-convert-an-error-to-panic", "title": "Is there a macro to convert an Error to Panic?", "body": "<p>Is there a macro that will convert an error into a panic, similar to the <code>try</code> macro? Do I need to define my own?</p>\n\n<p>For example I'd like to panic if a unit test can't open a file. My current workaround is this:</p>\n\n<pre><code>macro_rules! tryfail {\n    ($expr:expr) =&gt; (match $expr {\n        result::Result::Ok(val) =&gt; val,\n        result::Result::Err(_) =&gt; panic!(stringify!($expr))\n    })\n}\n\n#[test]\nfn foo() {\n    let c = tryfail!(File::open(...));\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1465382124, "post_id": 37698784, "comment_id": 62874486, "body": "You could use <code>.map()</code> to extract the email and phone as a tuple. Then the problem is reduced to counting full duplicates."}], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 5, "last_activity_date": 1465390329, "last_edit_date": 1465390329, "creation_date": 1465382524, "answer_id": 37700229, "question_id": 37698784, "link": "https://stackoverflow.com/questions/37698784/count-partial-duplicates-in-vec-of-structs-with-a-custom-function/37700229#37700229", "title": "count partial duplicates in Vec of structs with a custom function", "body": "<p>One option is to create a <code>HashSet</code> with <code>(email, phone)</code> for each client. As <code>HashSet</code> keep only unique elements, we can get the number of duplicates elements with the difference of the number of elements in <code>clients</code> an in the set:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Client {\n    email: String,\n    phone: String,\n    details: String,\n}\n\nfn main() {\n    let mut clients: Vec&lt;Client&gt; = Vec::new();\n\n    clients.push(Client {\n        email: \"john@gmail.com\".to_string(),\n        phone: \"0123456789\".to_string(),\n        details: \"custom details\".to_string(),\n    });\n\n    clients.push(Client {\n        email: \"john@gmail.com\".to_string(),\n        phone: \"0123456789\".to_string(),\n        details: \"other details\".to_string(),\n    });\n\n    clients.push(Client {\n        email: \"james@gmail.com\".to_string(),\n        phone: \"9876543210\".to_string(),\n        details: \"test\".to_string(),\n    });\n\n    // use as_str to get a `&amp;str` from a String to avoid copying the string\n    let uniques: HashMap&lt;_, _&gt; = clients.iter()\n        .map(|c| (c.email.as_str(), c.phone.as_str()))\n        .collect();\n\n    let num_dups = clients.len() - uniques.len();\n\n    assert_eq!(1, num_dups);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1465390074, "last_edit_date": 1495541754, "creation_date": 1465390074, "answer_id": 37702964, "question_id": 37698784, "link": "https://stackoverflow.com/questions/37698784/count-partial-duplicates-in-vec-of-structs-with-a-custom-function/37702964#37702964", "title": "count partial duplicates in Vec of structs with a custom function", "body": "<p>You will often want to know <em>which</em> were the duplicates. In that case, a straight-forward extension of <a href=\"https://stackoverflow.com/a/37700229/155423\">the <code>HashSet</code> solution</a> can be used:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct Client {\n    email: String,\n    phone: String,\n    details: String,\n}\n\nimpl Client {\n    fn key&lt;'a&gt;(&amp;'a self) -&gt; (&amp;'a str, &amp;'a str) {\n        (&amp;self.email, &amp;self.phone)\n    }\n}\n\nfn main() {\n    let clients = vec![Client {\n                           email: \"john@gmail.com\".to_string(),\n                           phone: \"0123456789\".to_string(),\n                           details: \"custom details\".to_string(),\n                       },\n                       Client {\n                           email: \"john@gmail.com\".to_string(),\n                           phone: \"0123456789\".to_string(),\n                           details: \"other details\".to_string(),\n                       },\n                       Client {\n                           email: \"james@gmail.com\".to_string(),\n                           phone: \"9876543210\".to_string(),\n                           details: \"test\".to_string(),\n                       }];\n\n    let mut keyed = HashMap::new();\n    for c in &amp;clients {\n        keyed.entry(c.key()).or_insert(vec![]).push(c)\n    }\n\n    for (k, v) in &amp;keyed {\n        if v.len() &gt; 1 {\n            println!(\"Key {:?} has {} duplicates!\", k, v.len());\n        }\n    }\n}\n</code></pre>\n\n<p>Note the use of a method on <code>Client</code> to keep the keying logic in one place,  the use of <code>vec![]</code> to reduce the amount of explicit mutability needed, and there's no need to specify the type of <code>clients</code> as it can be inferred.</p>\n"}], "owner": {"reputation": 9698, "user_id": 717839, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/d6252a826fac2914aa414e635b77c666?s=128&d=identicon&r=PG", "display_name": "Caballero", "link": "https://stackoverflow.com/users/717839/caballero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1171, "favorite_count": 1, "accepted_answer_id": 37700229, "answer_count": 2, "score": 3, "last_activity_date": 1465390329, "creation_date": 1465378776, "last_edit_date": 1465381920, "question_id": 37698784, "link": "https://stackoverflow.com/questions/37698784/count-partial-duplicates-in-vec-of-structs-with-a-custom-function", "title": "count partial duplicates in Vec of structs with a custom function", "body": "<p>So let's say I have the following example:</p>\n\n<pre><code>struct Client {\n    email: String,\n    phone: String,\n    details: String\n}\n\nfn main() {\n    let mut clients: Vec&lt;Client&gt; = Vec::new();\n\n    clients.push(Client {\n        email: \"john@gmail.com\".to_string(),\n        phone: \"0123456789\".to_string(),\n        details: \"custom details\".to_string(),\n    });\n\n    clients.push(Client {\n        email: \"john@gmail.com\".to_string(),\n        phone: \"0123456789\".to_string(),\n        details: \"other details\".to_string(),\n    });\n\n    clients.push(Client {\n        email: \"james@gmail.com\".to_string(),\n        phone: \"9876543210\".to_string(),\n        details: \"test\".to_string(),\n    });  \n}\n</code></pre>\n\n<p>What would be the best (Rust idiomatic) way to count partial duplicates in this vector by checking <code>email</code> and <code>phone</code> in the <code>Client</code>? For instance - in the example above one duplicate would be found.</p>\n"}, {"tags": ["iteration", "rust"], "comments": [{"owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "edited": false, "score": 1, "creation_date": 1465316833, "post_id": 37684444, "comment_id": 62846346, "body": "Is this what you want? <a href=\"https://play.rust-lang.org/?gist=e42f4ff5833f68a56fd4dfe5540992c0&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 48909, "user_id": 1445334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/185bc1a9b6a36d8f065bdb9a1de74f90?s=128&d=identicon&r=PG", "display_name": "dirvine", "link": "https://stackoverflow.com/users/1445334/dirvine"}, "reply_to_user": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "edited": false, "score": 0, "creation_date": 1465317610, "post_id": 37684444, "comment_id": 62846777, "body": "Something like that would work, yes, thanks. I would like to be as idiomatic as possible though whilst altering the item at index1, possibly allowing iteration like this through the whole list/vec etc. Nice though.  If possible without direct access iters would be good. This would work for the situation I ma looking at though, easy to add another direct access and alter index1 position."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1465372672, "post_id": 37684444, "comment_id": 62868198, "body": "I&#39;ve got something working without much indexing <a href=\"https://play.rust-lang.org/?gist=e42f4ff5833f68a56fd4dfe5540992c0&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">on the playpen</a> but it still is quite verbose. I think an iterator based on <code>split_at_mut</code> would be a more interesting building brick (an iterator that yields <code>(&amp;mut [T], &amp;mut [T])</code> with the boundary shifting at each iteration)."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 3, "creation_date": 1465374810, "post_id": 37684444, "comment_id": 62869475, "body": "There&#39;s nothing wrong with just having a for or while loop, if it expresses what you want to do more clearly.  IMO a simple for-based loop is more idiomatic than a contorted solution with iterators!"}, {"owner": {"reputation": 48909, "user_id": 1445334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/185bc1a9b6a36d8f065bdb9a1de74f90?s=128&d=identicon&r=PG", "display_name": "dirvine", "link": "https://stackoverflow.com/users/1445334/dirvine"}, "edited": false, "score": 0, "creation_date": 1465393140, "post_id": 37684444, "comment_id": 62882229, "body": "That was just a silly example, there is no need to count at all."}, {"owner": {"reputation": 12866, "user_id": 110488, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/21369d30fe2c6c976ffe735f2fd0ee91?s=128&d=identicon&r=PG", "display_name": "Chen Levy", "link": "https://stackoverflow.com/users/110488/chen-levy"}, "edited": false, "score": 0, "creation_date": 1519801876, "post_id": 37684444, "comment_id": 85052330, "body": "There are some more useful answers to this question at <a href=\"https://users.rust-lang.org/t/rust-iterators-and-looking-forward-peek-multipeek/6138\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 48909, "user_id": 1445334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/185bc1a9b6a36d8f065bdb9a1de74f90?s=128&d=identicon&r=PG", "display_name": "dirvine", "link": "https://stackoverflow.com/users/1445334/dirvine"}, "edited": false, "score": 0, "creation_date": 1465539837, "post_id": 37726932, "comment_id": 62952807, "body": "@dirvine: I just realized that, unfortunately, this iterator is unsafe because it allows a user to obtain safely mutable aliases to the same element (if used outside the loop protocol). A fix would be to only return one mutable element (such as <code>(&amp;mut T, &amp;[T])</code>) for example."}, {"owner": {"reputation": 48909, "user_id": 1445334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/185bc1a9b6a36d8f065bdb9a1de74f90?s=128&d=identicon&r=PG", "display_name": "dirvine", "link": "https://stackoverflow.com/users/1445334/dirvine"}, "edited": false, "score": 0, "creation_date": 1465564783, "post_id": 37726932, "comment_id": 62968208, "body": "Yes, the revised method does look though as though it is safe and I think also efficient? Well anyway as efficient as is currently possible. Very nice code Matthieu, this will help for sure. Neatest solution I can see."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 48909, "user_id": 1445334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/185bc1a9b6a36d8f065bdb9a1de74f90?s=128&d=identicon&r=PG", "display_name": "dirvine", "link": "https://stackoverflow.com/users/1445334/dirvine"}, "edited": false, "score": 0, "creation_date": 1465566523, "post_id": 37726932, "comment_id": 62969449, "body": "@dirvine: Still unclear whether it&#39;s really safe, unfortunately. I just realized we still have aliasing + mutability unfortunately (even though only one of the alias allows mutability, it&#39;s still an issue...). In the end, I think to keep the spirit of the code the iterator would have to only return non-mutable references and the user would have to use <code>Cell</code> (or <code>RefCell</code> if necessary) to get by with interior mutability."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 48909, "user_id": 1445334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/185bc1a9b6a36d8f065bdb9a1de74f90?s=128&d=identicon&r=PG", "display_name": "dirvine", "link": "https://stackoverflow.com/users/1445334/dirvine"}, "edited": false, "score": 1, "creation_date": 1465567190, "post_id": 37726932, "comment_id": 62969900, "body": "@dirvine: recorrected again, this time with <code>Cell</code>, same principle but lose a bit in aesthetics :/"}, {"owner": {"reputation": 48909, "user_id": 1445334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/185bc1a9b6a36d8f065bdb9a1de74f90?s=128&d=identicon&r=PG", "display_name": "dirvine", "link": "https://stackoverflow.com/users/1445334/dirvine"}, "edited": false, "score": 0, "creation_date": 1465573435, "post_id": 37726932, "comment_id": 62974008, "body": "Ah nice. I had not seen the improvement here with cell, of course it&#39;s more solid again."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1470544992, "post_id": 37726932, "comment_id": 64989812, "body": "@MatthieuM. You might be interested in <a href=\"http://stackoverflow.com/a/38810928/1763356\">my take on this</a>."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 3, "last_activity_date": 1465567166, "last_edit_date": 1465567166, "creation_date": 1465477764, "answer_id": 37726932, "question_id": 37684444, "link": "https://stackoverflow.com/questions/37684444/rust-iterators-and-looking-forward-peek-multipeek/37726932#37726932", "title": "Rust iterators and looking forward (peek/multipeek)", "body": "<p><strong>Warning: The iterator presented right below is <code>unsafe</code> because it allows one to obtain multiple aliases to a single mutable element; skip to the second part for the corrected version.</strong> <em>(It would be alright if the return type contained immutable references).</em></p>\n\n<p>If you are willing to write your own window iterator, then it becomes quite easy.</p>\n\n<p>First, the iterator in all its gory details:</p>\n\n<pre><code>use std::marker::PhantomData;\n\nstruct WindowIterMut&lt;'a, T&gt;\n    where T: 'a\n{\n    begin: *mut T,\n    len: usize,\n    index: usize,\n    _marker: PhantomData&lt;&amp;'a mut [T]&gt;,\n}\n\nimpl&lt;'a, T&gt; WindowIterMut&lt;'a, T&gt;\n    where T: 'a\n{\n    pub fn new(slice: &amp;'a mut [T]) -&gt; WindowIterMut&lt;'a, T&gt; {\n        WindowIterMut {\n            begin: slice.as_mut_ptr(),\n            len: slice.len(),\n            index: 0,\n            _marker: PhantomData,\n        }\n    }\n}\n\nimpl&lt;'a, T&gt; Iterator for WindowIterMut&lt;'a, T&gt;\n    where T: 'a\n{\n    type Item = (&amp;'a mut [T], &amp;'a mut [T]);\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.index &gt; self.len { return None; }\n\n        let slice: &amp;'a mut [T] = unsafe {\n            std::slice::from_raw_parts_mut(self.begin, self.len)\n        };\n        let result = slice.split_at_mut(self.index);\n\n        self.index += 1;\n\n        Some(result)\n    }\n}\n</code></pre>\n\n<p>Invoked on <code>[1, 2, 3]</code> it will return <code>(&amp;[], &amp;[1, 2, 3])</code> then <code>(&amp;[1], &amp;[2, 3])</code>, ... until <code>(&amp;[1, 2, 3], &amp;[])</code>. In short, it iterates over all the potential partitions of the slice (without shuffling).</p>\n\n<p>Which is safe to use as:</p>\n\n<pre><code>fn main() {\n    let mut data: Vec&lt;u8&gt; = (1..100).collect();\n\n    for (head, tail) in WindowIterMut::new(&amp;mut data) {\n        if let Some(element) = head.last_mut() {\n            if *element % 2 == 0 {\n                if let Some(n3) = tail.iter().filter(|i| *i % 3 == 0).next() {\n                    *element += *n3;\n                }\n            }\n        }\n    }\n\n    println!(\"{:?}\", data);\n}\n</code></pre>\n\n<p>Unfortunately it can also be used as:</p>\n\n<pre><code>fn main() {\n    let mut data: Vec&lt;u8&gt; = (1..100).collect();\n\n    let mut it = WindowIterMut::new(&amp;mut data);\n    let first_0 = { it.next(); &amp;mut it.next().unwrap().0[0] };\n    let second_0 = &amp;mut it.next().unwrap().0[0];\n\n    println!(\"{:?} {:?}\", first_0 as *const _, second_0 as *const _);\n}\n</code></pre>\n\n<p>which when run print: <code>0x7f73a8435000 0x7f73a8435000</code>, show-casing that both mutable references alias the same element.</p>\n\n<hr>\n\n<p>Since we cannot get rid of aliasing, we need to get rid of mutability; or at least defer to <em>interior mutability</em> (<code>Cell</code> here since <code>u8</code> is <code>Copy</code>).</p>\n\n<p>Fortunately, <code>Cell</code> has no runtime cost, but it does cost a bit in ergonomics (all those <code>.get()</code> and <code>.set()</code>).</p>\n\n<p>I take the opportunity to make the iterator slightly more generic too, and rename it since <code>Window</code> is already a used name for a different concept.</p>\n\n<pre><code>struct FingerIter&lt;'a, T&gt;\n    where T: 'a\n{\n    begin: *const T,\n    len: usize,\n    index: usize,\n    _marker: PhantomData&lt;&amp;'a [T]&gt;,\n}\n\nimpl&lt;'a, T&gt; FingerIter&lt;'a, T&gt;\n    where T: 'a\n{\n    pub fn new(slice: &amp;'a [T]) -&gt; FingerIter&lt;'a, T&gt; {\n        FingerIter {\n            begin: slice.as_ptr(),\n            len: slice.len(),\n            index: 0,\n            _marker: PhantomData,\n        }\n    }\n}\n\nimpl&lt;'a, T&gt; Iterator for FingerIter&lt;'a, T&gt;\n    where T: 'a\n{\n    type Item = (&amp;'a [T], &amp;'a T, &amp;'a [T]);\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.index &gt;= self.len { return None; }\n\n        let slice: &amp;'a [T] = unsafe {\n            std::slice::from_raw_parts(self.begin, self.len)\n        };\n\n        self.index += 1;\n        let result = slice.split_at(self.index);\n\n        Some((&amp;result.0[0..self.index-1], result.0.last().unwrap(), result.1))\n    }\n}\n</code></pre>\n\n<p>We use it as a building brick:</p>\n\n<pre><code>fn main() {\n    let data: Vec&lt;Cell&lt;u8&gt;&gt; = (1..100).map(|i| Cell::new(i)).collect();\n\n    for (_, element, tail) in FingerIter::new(&amp;data) {\n        if element.get() % 2 == 0 {\n            if let Some(n3) = tail.iter().filter(|i| i.get() % 3 == 0).next() {\n                element.set(element.get() + n3.get());\n            }\n        }\n    }\n\n    let data: Vec&lt;u8&gt; = data.iter().map(|cell| cell.get()).collect();\n\n    println!(\"{:?}\", data);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b0eb7f3d1852a4bd78b6921ac5268a22&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">On the playpen</a> this prints: <code>[1, 5, 3, 10, 5, 15, 7, 17, 9, 22, ...]</code>, which seems correct.</p>\n"}, {"tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": false, "score": 7, "last_activity_date": 1470544898, "creation_date": 1470544898, "answer_id": 38810928, "question_id": 37684444, "link": "https://stackoverflow.com/questions/37684444/rust-iterators-and-looking-forward-peek-multipeek/38810928#38810928", "title": "Rust iterators and looking forward (peek/multipeek)", "body": "<p>Sadly I'm a bit late, but here goes.</p>\n\n<p>It's not totally pretty, but it's not as bad as the other suggestion:</p>\n\n<pre><code>let mut data: Vec&lt;u8&gt; = (1..100).collect();\n\n{\n    let mut mut_items = data.iter_mut();\n    while let Some(x) = mut_items.next() {\n        if *x % 2 == 0 {\n            let slice = mut_items.into_slice();\n            *x += *slice.iter().find(|&amp;x| x % 3 == 0).unwrap();\n            mut_items = slice.iter_mut();\n        }\n    }\n}\n\nprintln!(\"{:?}\", data);\n</code></pre>\n\n<p>gives</p>\n\n<pre><code>[1, 5, 3, 10, 5, 15, 7, 17, 9, 22, ...]\n</code></pre>\n\n<p>as with Matthieu M.'s solution.</p>\n\n<p>The key is to use <code>mut_items.into_slice()</code> to \"reborrow\" the iterator, effectively producing a local (and thus safe) clone of the iterator.</p>\n"}], "owner": {"reputation": 48909, "user_id": 1445334, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/185bc1a9b6a36d8f065bdb9a1de74f90?s=128&d=identicon&r=PG", "display_name": "dirvine", "link": "https://stackoverflow.com/users/1445334/dirvine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2240, "favorite_count": 1, "accepted_answer_id": 37726932, "answer_count": 2, "score": 10, "last_activity_date": 1470544898, "creation_date": 1465316218, "last_edit_date": 1465319681, "question_id": 37684444, "link": "https://stackoverflow.com/questions/37684444/rust-iterators-and-looking-forward-peek-multipeek", "title": "Rust iterators and looking forward (peek/multipeek)", "body": "<p>I am trying to use a pattern with iterators in Rust and falling down somewhere, apparently simple. </p>\n\n<p>I would like to iterate through a container and find an element with a predicate [A] (simple), but then look forward using another predicate and get that value [B] and use [B] to mutate [A] in some way. In this case [A] is mutable and [B] can be immutable; this makes no difference to me, only to the borrow checker (rightly).</p>\n\n<p>It would help to understand this with a simple scenario, so I have added a small snippet to let folk see the issue/attempted goal. I have played with itertools and breaking into for/while loops, although I want to remain as idiomatic as possible.</p>\n\n<p><strong>Silly Example scenario</strong></p>\n\n<p>Lookup an even number, find next number that is divisible by 3 and add to the initial number. </p>\n\n<pre><code>#[allow(unused)]\nfn is_div_3(num: &amp;u8) -&gt; bool {\n    num % 3 == 0\n}\n\nfn main() {\n    let mut data: Vec&lt;u8&gt; = (0..100).collect();\n\n    let count = data.iter_mut()\n        .map(|x| {\n            if *x % 2 == 0 {\n                // loop through numbers forward to next is_div_3,\n                // then x = x + that number\n            }\n            true\n        })\n        .count();\n\n    println!(\"data {:?}, count was {} \", data, count);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=f8eeacace95d0e52fc1bb8cee880708b&amp;version=stable&amp;backtrace=0\">playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1465306935, "post_id": 37680893, "comment_id": 62839138, "body": "Why the downvote? It is a good idea to explain it, please."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1465307047, "post_id": 37680893, "comment_id": 62839232, "body": "I didn&#39;t downvote, but longer-term users rarely explain downvotes because they&#39;ve experienced angry OPs going and down-voting in retaliation. I think most people downvote XOR comment."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1465307432, "post_id": 37680893, "comment_id": 62839552, "body": "are you sure it is <code>(grid[i][0]) + grid[i][1] + grid[i][2] &#47; 3</code>, not <code>(grid[i][0] + grid[i][1] + grid[i][2]) &#47; 3</code>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1465307437, "post_id": 37680893, "comment_id": 62839556, "body": "Ok, that is sad, I will not learn from my mistakes..."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1465307490, "post_id": 37680893, "comment_id": 62839605, "body": "@kennytm I do not know, that is another problem. I am currently trying to fix it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465307532, "post_id": 37680893, "comment_id": 62839634, "body": "As potential useful feedback, the question posed in your title isn&#39;t really great wording (I&#39;ve been trying to come up with a better replacement and haven&#39;t found one). Your code is bigger than it needs to be, it&#39;s not a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Your link to the playground was also originally broken. These things combine to give the impression that you didn&#39;t put a large amount of effort into the question."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465307730, "post_id": 37680893, "comment_id": 62839780, "body": "@Shepmaster Thank you. Can I copy/paste your minimal code in my question?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465307975, "post_id": 37680893, "comment_id": 62839944, "body": "If you&#39;d like, and if you think that it still properly captures the intent of your question. You may want to expand it a bit to use two enum values in the array and add together the integral values and print out the result to show how you&#39;d like to use the code. One problem with an MCVE can be that it&#39;s <i>too</i> small, and you then get an answer that isn&#39;t useful in your real case. Asking good questions is tough!"}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465310115, "post_id": 37680893, "comment_id": 62841522, "body": "I&#39;m not sure the linked issue is actually related."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465310441, "post_id": 37680893, "comment_id": 62841780, "body": "@KyleStrand hm I read too fast, I think you are right."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1465307553, "post_id": 37681124, "comment_id": 62839660, "body": "Thank you for the minimalist reproduction, I tried to do this, but there were still too many lines :p And your solution works. Is it just possible to pass the grid as a reference, without making a copy of it ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1465307680, "post_id": 37681124, "comment_id": 62839748, "body": "@Boiethios <i>possible to pass the grid as a reference</i> \u2014 you are already doing that: <code>&amp;Grid</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1465307711, "post_id": 37681124, "comment_id": 62839772, "body": "I do not understand where the copy is needed?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1465308796, "post_id": 37681124, "comment_id": 62840549, "body": "Ok. So, when casting a value, the compiler try to move it somehow. In this example, I firstly thought it attempted to create a new (temporary) variable of type <code>i32</code>. But no: it wants to move the variable, and then reinterpret it. Strange."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1465309945, "post_id": 37681124, "comment_id": 62841413, "body": "@Boiethios Right; note that it&#39;s the <i>enum</i> that&#39;s being copied or moved, not the array, so either copying or moving is absolutely the right behavior (and cannot be optimized using references, since int32 is probably smaller than a pointer). And yes, I believe Rust makes all types movable by default and prefers moves to copies by default, which I believe makes sense (C++ gets into weird problems with its &quot;copy-happiness&quot;; e.g. std::function must always be copyable, which means it can&#39;t ever capture a unique pointer)."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465311053, "post_id": 37681124, "comment_id": 62842269, "body": "@KyleStrand Thank you for explanation. This answer deserves a question of its own."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465311252, "post_id": 37681124, "comment_id": 62842407, "body": "@KyleStrand the part that I&#39;m missing is that coercing an enum to a number <i>shouldn&#39;t</i> really involve a move of the enum. The new value is completely disjoint from the original one, so it shouldn&#39;t need to consume anything. I&#39;d guess it&#39;s more of an edge case that people don&#39;t run into because why <i>wouldn&#39;t</i> you mark such a small enum as <code>Copy</code>."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465315042, "post_id": 37681124, "comment_id": 62845273, "body": "@Shepmaster Not having used Rust nearly as much as I&#39;d like to, I don&#39;t know if it automatically marks <i>any</i> user-defined types as <code>Copy</code>. If it does, I&#39;m not sure why it wouldn&#39;t mark enums containing only primitive types as such."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465315195, "post_id": 37681124, "comment_id": 62845386, "body": "@KyleStrand oh, no it definitely won&#39;t make anything <code>Copy</code> by default. My point is that getting the enum variant&#39;s discriminant shouldn&#39;t require consuming the value."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465315213, "post_id": 37681124, "comment_id": 62845399, "body": "@Shepmaster My intuition has not failed me: <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md#controlling-copy-vs-move-with-the-copy-trait\" rel=\"nofollow noreferrer\">&quot;The Copy trait is &quot;opt-in&quot; for user-declared structs and enums.&quot;</a>"}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465316286, "post_id": 37681124, "comment_id": 62846031, "body": "@Shepmaster What is the &quot;discriminant&quot;?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465316545, "post_id": 37681124, "comment_id": 62846183, "body": "@KyleStrand I&#39;m abusing the term a bit. <a href=\"http://doc.rust-lang.org/std/intrinsics/fn.discriminant_value.html\" rel=\"nofollow noreferrer\">The <code>discriminant_value</code> function</a> returns a number that represents the enum variant. It&#39;s probably not the right word, but I&#39;m using it for the value that is assigning to an enum variant (a <i>C-like enum</i>)."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1465322686, "post_id": 37681124, "comment_id": 62849782, "body": "@Shepmaster Probably the issue is that the <code>let</code> assignment takes the enum itself on the right-hand side, rather than using <code>discriminant_value</code> or some other way of extracting/copyig just the value."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1465309094, "last_edit_date": 1465309094, "creation_date": 1465306942, "answer_id": 37681124, "question_id": 37680893, "link": "https://stackoverflow.com/questions/37680893/i-do-not-understand-error-e0508/37681124#37681124", "title": "I do not understand error E0508", "body": "<p>A smaller reproduction:</p>\n\n<pre><code>enum Enum {\n    Val1 = 0,\n    Val2 = 1,\n}\n\nfn main() {\n    let a = [Enum::Val1];\n    a[0] as i32;\n}\n</code></pre>\n\n<p>The easiest fix is to make your enum <code>Copy</code>:</p>\n\n<pre><code>#[derive(Copy, Clone)]\nenum Enum {\n    Val1 = 0,\n    Val2 = 1,\n}\n</code></pre>\n\n<blockquote>\n  <p>where is the copy needed?</p>\n</blockquote>\n\n<p>This is a good question, and I'm not completely sure why the value needs to be moved when being coerced to an integer. It's nothing specific to do with arrays though:</p>\n\n<pre><code>#[derive(Debug)]\nenum Enum {\n    Val1 = 0,\n    Val2 = 1,\n}\n\nfn main() {\n    let a = Enum::Val1;\n    let b = a as i32;\n    println!(\"{:?}\", a); // Error: a was moved in the line above\n}\n</code></pre>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 37681124, "answer_count": 1, "score": 4, "last_activity_date": 1465310416, "creation_date": 1465306365, "last_edit_date": 1465310416, "question_id": 37680893, "link": "https://stackoverflow.com/questions/37680893/i-do-not-understand-error-e0508", "title": "I do not understand error E0508", "body": "<p>When I tried to compile this code, I get the E0508 error:</p>\n\n<blockquote>\n  <p>cannot move out of type <code>[Enum; 2]</code>, a non-copy fixed-size array</p>\n</blockquote>\n\n<pre><code>enum Enum {\n    Val1 = 0,\n    Val2 = 1,\n}\n\nfn main() {\n    let a = [Enum::Val1, Enum::Val2];\n    let x: i32 = a[0] as i32 + a[1] as i32;\n    println!(\"{}\", x);\n}\n</code></pre>\n\n<p>I just want to access a single value from an array of enum type.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 6, "last_activity_date": 1465301797, "last_edit_date": 1465301797, "creation_date": 1465301449, "answer_id": 37679019, "question_id": 37678698, "link": "https://stackoverflow.com/questions/37678698/function-to-build-a-fixed-sized-array-from-slice/37679019#37679019", "title": "Function to build a fixed sized array from slice", "body": "<p><code>AsMut</code> (or <code>BorrowMut</code>) works:</p>\n\n<pre><code>use std::convert::AsMut;\n\nfn make_array&lt;A, T&gt;(slice: &amp;[T]) -&gt; A\n    where A: Sized + Default + AsMut&lt;[T]&gt;,\n          T: Copy\n{\n    let mut a = Default::default();\n    // the type cannot be inferred!\n    // a.as_mut().copy_from_slice(slice);\n    &lt;A as AsMut&lt;[T]&gt;&gt;::as_mut(&amp;mut a).copy_from_slice(slice);\n    a\n}\n</code></pre>\n"}], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 702, "favorite_count": 0, "closed_date": 1465303006, "accepted_answer_id": 37679019, "answer_count": 1, "score": 3, "last_activity_date": 1465301797, "creation_date": 1465300537, "question_id": 37678698, "link": "https://stackoverflow.com/questions/37678698/function-to-build-a-fixed-sized-array-from-slice", "closed_reason": "Duplicate", "title": "Function to build a fixed sized array from slice", "body": "<p><em>Related: <a href=\"https://stackoverflow.com/questions/37668886/slice-to-fixed-size-array\">Slice to fixed-size array</a>, however I am looking for a more specific form.</em></p>\n\n<p>Ideally, I would want to build a function with the following signature:</p>\n\n<pre><code>fn make_array&lt;T; N&gt;(slice: &amp;[T]) -&gt; [T; N];\n</code></pre>\n\n<p>since this is not possible yet (since non-type parameters are not a thing), I instead thought of having the function directly take in the array:</p>\n\n<pre><code>fn make_array&lt;A&gt;(slice: &amp;[T]) -&gt; A;\n</code></pre>\n\n<p>where one would substitute <code>[T; N]</code> for <code>A</code>.</p>\n\n<p>Here is, so far, my most promising attempt:</p>\n\n<pre><code>use std::ops::DerefMut;\n\nfn make_array&lt;A, T&gt;(slice: &amp;[T]) -&gt; A\n    where A: Sized + Default + DerefMut&lt;Target = [T]&gt;\n{\n    let mut a = Default::default();\n    (&amp;mut a[..]).copy_from_slice(slice);\n    a\n}\n\nfn main() {\n    let original = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    let a: [u8; 4] = make_array(&amp;original[0..4]);\n\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<p>However I am missing the trait that allows an array to be coerced to a slice (hint: it's not <code>DerefMut</code>).</p>\n\n<p>As long as I am okay for the function to only work for small arrays, is there a way to build such a function using safe code?</p>\n"}, {"tags": ["rust", "llvm-ir"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 4, "creation_date": 1465291742, "post_id": 37675451, "comment_id": 62828173, "body": "Do you know about the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playpen</a>? (there is a LLVM IR to get the compiler to generate IR instead of a binary)"}, {"owner": {"reputation": 3299, "user_id": 230504, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/acadd9b0700b9fcdfbc74aa6faffeb86?s=128&d=identicon&r=PG", "display_name": "Leonardo Marques", "link": "https://stackoverflow.com/users/230504/leonardo-marques"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1465301153, "post_id": 37675451, "comment_id": 62834693, "body": "Yes. And I can generate LLVM-IR with the --emit=llvm-ir flag. That is not the issue but thank you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465301686, "post_id": 37675451, "comment_id": 62835088, "body": "Why do you believe that Rust uses those things (<i>invokes, landing pads and unwinds</i>) at all?"}, {"owner": {"reputation": 3299, "user_id": 230504, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/acadd9b0700b9fcdfbc74aa6faffeb86?s=128&d=identicon&r=PG", "display_name": "Leonardo Marques", "link": "https://stackoverflow.com/users/230504/leonardo-marques"}, "edited": false, "score": 0, "creation_date": 1465303657, "post_id": 37675451, "comment_id": 62836507, "body": "I did say it does. I expected it after reading <a href=\"http://lucumr.pocoo.org/2014/10/30/dont-panic/\" rel=\"nofollow noreferrer\">this</a>. If it doesn&#39;t use them then I&#39;ll accept an answer stating it like: Rust doesn&#39;t use them because of fact 1 2 and 3. :)"}, {"owner": {"reputation": 3299, "user_id": 230504, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/acadd9b0700b9fcdfbc74aa6faffeb86?s=128&d=identicon&r=PG", "display_name": "Leonardo Marques", "link": "https://stackoverflow.com/users/230504/leonardo-marques"}, "edited": false, "score": 0, "creation_date": 1465304258, "post_id": 37675451, "comment_id": 62836990, "body": "Also after watching <a href=\"https://youtu.be/9TlR9hNZbck?t=1848\" rel=\"nofollow noreferrer\">this</a>"}, {"owner": {"reputation": 3299, "user_id": 230504, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/acadd9b0700b9fcdfbc74aa6faffeb86?s=128&d=identicon&r=PG", "display_name": "Leonardo Marques", "link": "https://stackoverflow.com/users/230504/leonardo-marques"}, "edited": false, "score": 1, "creation_date": 1465304415, "post_id": 37675451, "comment_id": 62837120, "body": "Also what would be the use of <code>-Z no-landing-pads</code> if rust doesn&#39;t use it? (I&#39;ll stop with the &quot;Also&quot; now :) )"}], "owner": {"reputation": 3299, "user_id": 230504, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/acadd9b0700b9fcdfbc74aa6faffeb86?s=128&d=identicon&r=PG", "display_name": "Leonardo Marques", "link": "https://stackoverflow.com/users/230504/leonardo-marques"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 108, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1465999592, "creation_date": 1465291595, "last_edit_date": 1465999592, "question_id": 37675451, "link": "https://stackoverflow.com/questions/37675451/how-to-observe-exception-handling-in-llvm-ir-generated-from-rust", "title": "How to observe exception handling in LLVM-IR generated from Rust", "body": "<p>What would be the most comprehensive example of a simple Rust application that would generate exception handling when transformed into LLVM-IR?</p>\n\n<p>Specifically, I'm trying to observe how Rust generates/manages invokes, landing pads and unwinds. Something akin to:</p>\n\n<pre><code>invoke void@maythrow()\n   to label %try.cont\n   unwind label %dispatch.a\ndispatch.a:\n%cpA=catchpad[%rtti.A* @A.Type]\n   to label %handle.a\n   unwind label %dispatch.b\n\nhandle.a:\n   invoke void@handleA()\n      to label %catchret.a\n      unwind label %catchend\ncatchret.a:\n   catchret %cpA to label %exit\n\ndispatch.b:\n%cpB=catchpad[%rtti.B* @B.Type]\n   to label %handle.b\n   unwind label %dispatch.b\nhandle.b:\n   invoke void@handleB()\n      to label %catchret.b\n      unwind label %catchend\ncatchret.b:\n   catchret %cpB to label %exit\n</code></pre>\n\n<p>I'd like to avoid looking into Rust's source code and that is why I'm asking for such an example.</p>\n\n<p>EDIT:\nI expect that Rust would depend on these instructions because of the following articles: <a href=\"http://lucumr.pocoo.org/2014/10/30/dont-panic/\" rel=\"nofollow\">1</a>, <a href=\"https://youtu.be/9TlR9hNZbck?t=1848\" rel=\"nofollow\">2</a> and of the no-landing-pads option in the -Z flag.</p>\n\n<p>EDIT: A <a href=\"https://github.com/rust-lang/rust/search?utf8=%E2%9C%93&amp;q=landingpad&amp;type=Code\" rel=\"nofollow\">quick search</a> through Rust source code also indicates that it is somehow generated.</p>\n"}, {"tags": ["rust", "benchmarking"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1465291109, "post_id": 37674758, "comment_id": 62827711, "body": "Have you tried putting the benchmarks into their own file (in the folder <code>bench</code>)?"}, {"owner": {"reputation": 485, "user_id": 5240588, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f83af653d0ab6bef057577f2c8933ca?s=128&d=identicon&r=PG&f=1", "display_name": "Dominik M&#252;ller", "link": "https://stackoverflow.com/users/5240588/dominik-m%c3%bcller"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 2, "creation_date": 1465292328, "post_id": 37674758, "comment_id": 62828604, "body": "The <code>benches</code> folder  seems to work at least for libraries. I&#39;m not sure how I can use it together with e.g. functions from <code>bin&#47;bench.rs</code>. I also found out writing <code>#[cfg(feature = &quot;bench&quot;)]</code> in front of everything benchmark related works with the ``--features &quot;bench&quot;` flag."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 18, "last_activity_date": 1465302420, "creation_date": 1465302420, "answer_id": 37679386, "question_id": 37674758, "link": "https://stackoverflow.com/questions/37674758/ignore-benchmarks-when-using-stable-beta/37679386#37679386", "title": "Ignore benchmarks when using stable/beta", "body": "<p>In my projects, I place benchmarks in a separate module, just like I do for tests. I then create a Cargo feature that enables them. In this excerpt, I used the feature name <code>unstable</code>, but you can use anything you'd like:</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code># ...\n\n[features]\nunstable = []\n\n# ...\n</code></pre>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre><code>#![cfg_attr(feature = \"unstable\", feature(test))]\n\n#[cfg(test)]\nmod tests {\n    #[test]\n    fn a_test() {\n        assert_eq!(1, 1);\n    }\n}\n\n#[cfg(all(feature = \"unstable\", test))]\nmod bench {\n    extern crate test;\n    use self::test::Bencher;\n\n    #[bench]\n    fn a_bench(b: &amp;mut Bencher) {\n        let z = b.iter(|| {\n            test::black_box(|| {\n                1 + 1\n            })\n        });\n    }\n}\n</code></pre>\n\n<p>The line <code>#[cfg(all(feature = \"unstable\", test))]</code> says to only compile the following item if the feature is set and we are compiling in test mode anyway. Likewise, <code>#![cfg_attr(feature = \"unstable\", feature(test))]</code> only enables the <code>test</code> feature flag when the <code>unstable</code> feature is enabled.</p>\n\n<p>Here's an example <a href=\"https://github.com/shepmaster/twox-hash/blob/244ecaa68f19a491a58348037c5f966ce12c1baf/src/lib.rs\" rel=\"noreferrer\">in the wild</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": false, "score": 6, "last_activity_date": 1484762820, "last_edit_date": 1484762820, "creation_date": 1465304600, "answer_id": 37680212, "question_id": 37674758, "link": "https://stackoverflow.com/questions/37674758/ignore-benchmarks-when-using-stable-beta/37680212#37680212", "title": "Ignore benchmarks when using stable/beta", "body": "<blockquote>\n  <p>Is there a way to hide all the benchmark parts when using stable/beta?</p>\n</blockquote>\n\n<p>Yes, and you can do it automatically using a <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow noreferrer\">build script</a>, so it is not necessary to specify <code>--features</code> when executing cargo. In the build script you can detect the version of the Rust compiler and define a feature (<code>\"nightly\"</code> for example). Then, in the source code you can group your benchmarks and enable them if the feature was defined.</p>\n\n<p><strong><code>Cargo.toml</code></strong></p>\n\n<pre><code>[package]\nbuild = \"build.rs\"\n\n[features]\nnightly = []\n\n[build-dependencies]\nrustc_version = \"0.1.*\"\n</code></pre>\n\n<p><strong><code>build.rs</code></strong></p>\n\n<pre><code>extern crate rustc_version;\n\nuse rustc_version::{version_meta, Channel};\n\nfn main() {\n    if version_meta().channel == Channel::Nightly {\n        println!(\"cargo:rustc-cfg=feature=\\\"nightly\\\"\");\n    }\n}\n</code></pre>\n\n<p><strong><code>src/lib.rs</code></strong></p>\n\n<pre><code>#![cfg_attr(all(feature = \"nightly\", test), feature(test))]\n\n#[cfg(all(feature = \"nightly\", test))]\nextern crate test;\n\npub fn add_two(a: i32) -&gt; i32 {\n    a + 2\n}\n\n#[cfg(test)]\nmod tests {\n    // tests\n}\n\n#[cfg(all(feature = \"nightly\", test))]\nmod benchs {\n    use test::Bencher;\n    // benchs\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465330236, "post_id": 37688406, "comment_id": 62853961, "body": "The comments on the question include: <i>The <code>benches</code> folder seems to work at least for libraries. I&#39;m not sure how I can use it together with e.g. functions from <code>bin&#47;bench.rs</code></i> \u2014 perhaps you understand what that means and can address it?"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469576717, "post_id": 37688406, "comment_id": 64590891, "body": "Usually benchmark tests are for specific functions, not binaries. So I don&#39;t think that&#39;s doable."}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": 7, "last_activity_date": 1465330165, "creation_date": 1465330165, "answer_id": 37688406, "question_id": 37674758, "link": "https://stackoverflow.com/questions/37674758/ignore-benchmarks-when-using-stable-beta/37688406#37688406", "title": "Ignore benchmarks when using stable/beta", "body": "<p>Cargo supports a benches directory for benchmark tests. If you put them in there, you can just never run \"cargo bench\" on beta/stable, and only run it on nightly.</p>\n"}], "owner": {"reputation": 485, "user_id": 5240588, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f83af653d0ab6bef057577f2c8933ca?s=128&d=identicon&r=PG&f=1", "display_name": "Dominik M&#252;ller", "link": "https://stackoverflow.com/users/5240588/dominik-m%c3%bcller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2024, "favorite_count": 2, "accepted_answer_id": 37679386, "answer_count": 3, "score": 11, "last_activity_date": 1484762820, "creation_date": 1465289625, "last_edit_date": 1465291262, "question_id": 37674758, "link": "https://stackoverflow.com/questions/37674758/ignore-benchmarks-when-using-stable-beta", "title": "Ignore benchmarks when using stable/beta", "body": "<p>I have a file with some benchmarks and tests and would like to test against stable, beta and nightly. However, either I don't use the benchmark or stable/beta complain. Is there a way to hide all the benchmark parts when using stable/beta?</p>\n\n<p>As an example the following code from the <a href=\"https://doc.rust-lang.org/book/benchmark-tests.html\">book</a>:</p>\n\n<pre><code>#![feature(test)]\n\nextern crate test;\n\npub fn add_two(a: i32) -&gt; i32 {\n    a + 2\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use test::Bencher;\n\n    #[test]\n    fn it_works() {\n        assert_eq!(4, add_two(2));\n    }\n\n    #[bench]\n    fn bench_add_two(b: &amp;mut Bencher) {\n        b.iter(|| add_two(2));\n    }\n}\n</code></pre>\n\n<p>I'm using rustup and would like the same file to work with all the builds, calling something like:</p>\n\n<pre><code>rustup run nightly cargo bench --bin bench --features \"bench\"\nrustup run nightly cargo test --bin bench --features \"bench\"\nrustup run beta cargo test --bin bench\nrustup run stable cargo test --bin bench\n</code></pre>\n\n<p>I was able to hide the <code>#![feature(test)]</code> with <code>#![cfg_attr(feature = \"bench\", feature(test))]</code>. Can I do something similar to the rest of the benchmark parts? What is a good resource for feature flags?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1465276047, "post_id": 37670796, "comment_id": 62819489, "body": "Have you tried to define <code>render</code> as <code>Box&lt;Fn(ComponentProps) -&gt; Mesh&gt;</code>?"}, {"owner": {"reputation": 16262, "user_id": 181310, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/4a851ba7c57b82399128dc6e81a46c26?s=128&d=identicon&r=PG", "display_name": "Parris", "link": "https://stackoverflow.com/users/181310/parris"}, "reply_to_user": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1465276274, "post_id": 37670796, "comment_id": 62819577, "body": "@WiSaGaN I have not tried that! I did see some hints about &quot;Box&quot; but I couldn&#39;t really understand what it was."}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 6, "creation_date": 1465276388, "post_id": 37670796, "comment_id": 62819612, "body": "<code>Box</code> has a fixed length on stack. But <code>Fn</code> like other traits does not have a fixed length, thus the bound <code>std::market::Sized</code> is not satisfied."}, {"owner": {"reputation": 16262, "user_id": 181310, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/4a851ba7c57b82399128dc6e81a46c26?s=128&d=identicon&r=PG", "display_name": "Parris", "link": "https://stackoverflow.com/users/181310/parris"}, "reply_to_user": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1465282547, "post_id": 37670796, "comment_id": 62822437, "body": "@WiSaGaN that worked for me!"}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "reply_to_user": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 3, "creation_date": 1473447038, "post_id": 37670796, "comment_id": 66160854, "body": "@WiSaGaN you might want to add your comment as answer and let it resolve the question! thanks for the tip btw"}], "owner": {"reputation": 16262, "user_id": 181310, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/4a851ba7c57b82399128dc6e81a46c26?s=128&d=identicon&r=PG", "display_name": "Parris", "link": "https://stackoverflow.com/users/181310/parris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1877, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1465275433, "creation_date": 1465275433, "question_id": 37670796, "link": "https://stackoverflow.com/questions/37670796/stdmarkersized-is-not-satisfied", "title": "std::marker::Sized is not satisfied", "body": "<p>I'm attempting to create a sort of component system inspired by react for an OpenGL project I'm working on. This component system is defined by structs that contain some attributes and some functions. Like this:</p>\n\n<pre><code>pub struct Component&lt;Lifecycle, PropType&gt; {\n    lifecycle: Lifecycle,\n    props: PropType,\n    children: Vec&lt;Component&lt;Lifecycle, PropType&gt;&gt;,\n}\n</code></pre>\n\n<p>An example of Lifecycle looks like this:</p>\n\n<pre><code>pub struct MeshLifecycle {\n    render: (Fn(ComponentProps) -&gt; Mesh),\n}\n</code></pre>\n\n<p>An example PropType looks like this:</p>\n\n<pre><code>pub struct ComponentProps {\n    position: Vertex,\n}\n</code></pre>\n\n<p>Now, this is resulting in some errors. First off: </p>\n\n<pre><code>the trait bound `std::ops::Fn(ComponentProps) -&gt; Mesh + 'static: std::marker::Sized`\n</code></pre>\n\n<p>After some digging, I guess I'm supposed to apply <code>?Sized</code> to types that contain functions essentially. So the <code>Component</code> definition now reads:</p>\n\n<pre><code>pub struct Component&lt;Lifecycle: ?Sized, PropType&gt; {\n</code></pre>\n\n<p>That partially helps, but doesn't get me quite there. Here is the full compiler error:</p>\n\n<pre><code>src/main.rs:10:5: 10:25 error: the trait bound `Lifecycle: std::marker::Sized` is not satisfied [E0277]\nsrc/main.rs:10     lifecycle: Lifecycle,\n                   ^~~~~~~~~~~~~~~~~~~~\nsrc/main.rs:10:5: 10:25 help: run `rustc --explain E0277` to see a detailed explanation\nsrc/main.rs:10:5: 10:25 help: consider adding a `where Lifecycle: std::marker::Sized` bound\nsrc/main.rs:10:5: 10:25 note: only the last field of a struct or enum variant may have a dynamically sized type\n</code></pre>\n\n<p>Is there any way to make something like this work (and how), or is this too \"dynamic\" in nature? I read somewhere that what I'm essentially looking to do is create a \"VTable\". The various examples of that online don't seem to specify dynamically sized types so I'm wondering what I'm doing incorrectly.</p>\n"}, {"tags": ["plugins", "macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1541801941, "post_id": 37673678, "comment_id": 93354741, "body": "This is no longer possible with the current <code>proc_macro</code> API."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 3, "last_activity_date": 1465475123, "last_edit_date": 1465475123, "creation_date": 1465286326, "answer_id": 37673678, "question_id": 37670287, "link": "https://stackoverflow.com/questions/37670287/how-to-process-expanded-macros-from-within-procedural-macros/37673678#37673678", "title": "How to process expanded macros from within procedural macros?", "body": "<p>You can use the <a href=\"http://manishearth.github.io/rust-internals-docs/syntax/ext/expand/fn.expand_expr.html\" rel=\"nofollow\"><code>expand_expr</code></a> function to do a full expansion (if let, macros, etc...). You need a <a href=\"http://manishearth.github.io/rust-internals-docs/syntax/ext/expand/struct.MacroExpander.html\" rel=\"nofollow\"><code>MacroExpander</code></a>, which you can get by passing a mutable reference to the <a href=\"http://manishearth.github.io/rust-internals-docs/syntax/ext/base/struct.ExtCtxt.html\" rel=\"nofollow\"><code>ExtCtxt</code></a> to the <a href=\"http://manishearth.github.io/rust-internals-docs/syntax/ext/expand/struct.MacroExpander.html#method.new\" rel=\"nofollow\"><code>MacroExpander::new</code></a> method or call the <code>ExtCtxt</code>'s <code>expander()</code> method.</p>\n\n<p>The actual code is:</p>\n\n<pre><code>fn fold_expr(&amp;mut self, expr: P&lt;Expr&gt;) -&gt; P&lt;Expr&gt; {\n    ..\n    if let ExprKind::Mac(_) = expr.node {\n        let expanded = expand_expr(expr.unwrap(), &amp;mut self.cx.expander());\n        return self.fold_expr(expanded);\n    }\n    ..\n}\n</code></pre>\n\n<p>Edit: For completeness, one should also expand Items with ItemKind::Mac; there's an <code>syntax::ext::expand::expand_item(..)</code> method working similarly to <code>expand_expr(..)</code>.</p>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 37673678, "answer_count": 1, "score": 3, "last_activity_date": 1465475123, "creation_date": 1465272328, "last_edit_date": 1465474583, "question_id": 37670287, "link": "https://stackoverflow.com/questions/37670287/how-to-process-expanded-macros-from-within-procedural-macros", "title": "How to process expanded macros from within procedural macros?", "body": "<p>For <a href=\"https://github.com/llogiq/overflower\" rel=\"nofollow\">overflower</a>, I'm trying to replace all arithmetic operations (binary <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code>, <code>&lt;&lt;</code>, <code>&gt;&gt;</code> and unary <code>-</code>) with corresponding trait method calls. However, I'm hitting a wall with macros. Ideally, I'd work on the already expanded macro, but this does not appear to work.</p>\n\n<p>I've followed the suggestion in <code>syntax::fold::Folder::fold_mac(..)</code> and called <code>noop_fold_mac(mac, self)</code>, but that does not appear to do anything to stuff inside a macro, like <code>assert_eq!(2, 1 + 1)</code>. I don't care about the code pre-expansion, so how do I have my macro work on the expanded code?</p>\n\n<p>I could probably work on the <code>TokenTrees</code> directly, but that's cumbersome.</p>\n\n<p>I'm using <code>rustc 1.11.0-nightly (915b003e3 2016-06-02)</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1465282312, "post_id": 37668886, "comment_id": 62822276, "body": "I&#39;ve been trying to create a <code>make_array&lt;A&gt;(slice: &amp;[T]) -&gt; A</code>... and so far I have not succeeded."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1465300580, "post_id": 37668886, "comment_id": 62834322, "body": "I&#39;ve asked <a href=\"https://stackoverflow.com/questions/37678698/function-to-build-a-fixed-sized-array-from-slice\" title=\"function to build a fixed sized array from slice\">stackoverflow.com/questions/37678698/&hellip;</a> to see if someone had a clue how to make this helper worked; it would greatly simplify things here."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user1993515"}, "edited": false, "score": 0, "creation_date": 1465269955, "post_id": 37669259, "comment_id": 62817852, "body": "Thanks for the detailed answer :) I&#39;ve gone the safe way, as performance isn&#39;t necessary for this part of my lib - just loading/parsing different files."}], "tags": [], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "is_accepted": true, "score": 14, "last_activity_date": 1465284172, "last_edit_date": 1465284172, "creation_date": 1465263847, "answer_id": 37669259, "question_id": 37668886, "link": "https://stackoverflow.com/questions/37668886/slice-to-fixed-size-array/37669259#37669259", "title": "Slice to fixed-size array", "body": "<p>There is no <code>safe</code> way to initialize an array in a struct with a slice. You need either resort to <code>unsafe</code> block that operates directly on uninitialized memory, or use one of the following two initialize-then-mutate strategies:</p>\n\n<p>Construct an desired array, then use it to initialize the struct.</p>\n\n<pre><code>struct Foo {\n    arr: [u8; 32],\n}\n\nfn fill(s: &amp;[u8; 373]) -&gt; Foo {\n    let mut a: [u8; 32] = Default::default();\n    a.copy_from_slice(&amp;s[26..58]);\n    Foo { arr: a }\n}\n</code></pre>\n\n<p>Or initialize the struct, then mutate the array inside the struct.</p>\n\n<pre><code>#[derive(Default)]\nstruct Foo {\n    arr: [u8; 32],\n}\n\nfn fill(s: &amp;[u8; 373]) -&gt; Foo {\n    let mut f: Foo = Default::default();\n    f.arr.copy_from_slice(&amp;s[26..58]);\n    f\n}\n</code></pre>\n\n<p>The first one is cleaner if your struct has many members. The second one may be a little faster if the compiler cannot optimize out the intermediate copy. But you probably will use the <code>unsafe</code> method if this is the performance bottleneck of your program.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 4, "last_activity_date": 1465302579, "last_edit_date": 1495539973, "creation_date": 1465302579, "answer_id": 37679442, "question_id": 37668886, "link": "https://stackoverflow.com/questions/37668886/slice-to-fixed-size-array/37679442#37679442", "title": "Slice to fixed-size array", "body": "<p>Thanks to <a href=\"https://stackoverflow.com/a/37679019/147192\">@malbarbo</a> we can use this helper function:</p>\n\n<pre><code>use std::convert::AsMut;\n\nfn clone_into_array&lt;A, T&gt;(slice: &amp;[T]) -&gt; A\n    where A: Sized + Default + AsMut&lt;[T]&gt;,\n          T: Clone\n{\n    let mut a = Default::default();\n    &lt;A as AsMut&lt;[T]&gt;&gt;::as_mut(&amp;mut a).clone_from_slice(slice);\n    a\n}\n</code></pre>\n\n<p>to get a much neater syntax:</p>\n\n<pre><code>fn main() {\n    let original = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    let e = Example {\n        a: clone_into_array(&amp;original[0..4]),\n        b: clone_into_array(&amp;original[4..10]),\n    };\n\n    println!(\"{:?}\", e);\n}\n</code></pre>\n\n<p>as long as <code>T: Default + Clone</code>.</p>\n\n<p>It will <code>panic!</code> if the target array and the passed-in slice do not have the same length, because <code>clone_from_slice</code> does.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user1993515"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 17301, "favorite_count": 2, "closed_date": 1465302972, "accepted_answer_id": 37669259, "answer_count": 2, "score": 16, "last_activity_date": 1465302748, "creation_date": 1465260461, "last_edit_date": 1465302748, "question_id": 37668886, "link": "https://stackoverflow.com/questions/37668886/slice-to-fixed-size-array", "closed_reason": "Duplicate", "title": "Slice to fixed-size array", "body": "<p>I have a structure with some fixed-sized arrays:</p>\n\n<pre><code>struct PublicHeaderBlock_LAS14 {\n    file_signature: [u8; 4],\n    file_source_id: u16,\n    global_encoding: u16,\n    project_id_data_1: u32,\n    project_id_data_2: u16,\n    project_id_data_3: u16,\n    project_id_data_4: [u8; 8],\n    version_major: u8,\n    version_minor: u8,\n    systemIdentifier: [u8; 32], // ...\n}\n</code></pre>\n\n<p>I'm reading in bytes from a file into a fixed size array and am copying those bytes into the struct bit by bit.</p>\n\n<pre><code>fn create_header_struct_las14(&amp;self, buff: &amp;[u8; 373]) -&gt; PublicHeaderBlock_LAS14 {\n    PublicHeaderBlock_LAS14 {\n        file_signature: [buff[0], buff[1], buff[2], buff[3]],\n        file_source_id: (buff[4] | buff[5] &lt;&lt; 7) as u16,\n        global_encoding: (buff[6] | buff[7] &lt;&lt; 7) as u16,\n        project_id_data_1: (buff[8] | buff[9] &lt;&lt; 7 | buff[10] &lt;&lt; 7 | buff[11] &lt;&lt; 7) as u32,\n        project_id_data_2: (buff[12] | buff[13] &lt;&lt; 7) as u16,\n        project_id_data_3: (buff[14] | buff[15] &lt;&lt; 7) as u16,\n        project_id_data_4: [buff[16], buff[17], buff[18], buff[19], buff[20], buff[21], buff[22], buff[23]],\n        version_major: buff[24],\n        version_minor: buff[25],\n        systemIdentifier: buff[26..58]\n    }\n}\n</code></pre>\n\n<p>The last line (<code>systemIdentifier</code>) doesn't work, because in the struct it is a <code>[u8; 32]</code> and <code>buff[26..58]</code> is a slice. Can I return convert a slice to a fixed sized array like that over a range, instead of doing what I've done to say <code>file_signature</code>?</p>\n"}, {"tags": ["rust", "microkernel", "l4re"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465235551, "post_id": 37662355, "comment_id": 62806052, "body": "What is the architecture that the kernel runs on / you are targeting? What calling convention(s) do L4Re applications use?"}, {"owner": {"reputation": 22448, "user_id": 1870481, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/478e3c60bf48e069b2f79bddd202d600?s=128&d=identicon&r=PG", "display_name": "michas", "link": "https://stackoverflow.com/users/1870481/michas"}, "edited": false, "score": 0, "creation_date": 1465236173, "post_id": 37662355, "comment_id": 62806397, "body": "Everything is amd64 in my case. I&#39;m not sure about the calling conventions. There is a working Makefile framework for building around, but I don&#39;t completely understand how it works. Probably the main point is, that it provides its own modified <a href=\"https://svn.l4re.org/repos/oc/l4re/trunk/l4/pkg/l4re-core/uclibc/\" rel=\"nofollow noreferrer\">uclibc</a>, which I need to compile against."}, {"owner": {"reputation": 22448, "user_id": 1870481, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/478e3c60bf48e069b2f79bddd202d600?s=128&d=identicon&r=PG", "display_name": "michas", "link": "https://stackoverflow.com/users/1870481/michas"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1549823941, "post_id": 37662355, "comment_id": 96032275, "body": "From a deleted answer: The paper <a href=\"https://www.crustulus.de/downloads/Rust%20On%20L4Re.pdf\" rel=\"nofollow noreferrer\">&quot;Rust On L4Re \u2014 Integrating A Modern Systems Language Into A Microkernel Userland&quot;</a> may provide some relevant information about the progress of support for Rust on L4Re, along with guidance on dealing with toolchain and library issues."}], "owner": {"reputation": 22448, "user_id": 1870481, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/478e3c60bf48e069b2f79bddd202d600?s=128&d=identicon&r=PG", "display_name": "michas", "link": "https://stackoverflow.com/users/1870481/michas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 187, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1549816372, "creation_date": 1465230133, "last_edit_date": 1465235476, "question_id": 37662355, "link": "https://stackoverflow.com/questions/37662355/how-to-compile-a-rust-binary-for-l4re", "title": "How to compile a Rust binary for L4Re?", "body": "<p><a href=\"https://l4re.org/\" rel=\"nofollow\">L4Re</a> is a microkernel based system written in C++. It comes with a couple of <a href=\"https://svn.l4re.org/repos/oc/l4re/trunk/l4/pkg/\" rel=\"nofollow\">packages</a> mainly written in C++, C, and it seems like there is native support for Fortran, OCaml and Perl.</p>\n\n<p>There is also an <a href=\"https://svn.l4re.org/repos/oc/l4re/trunk/l4/pkg/hello/server/src/main.c\" rel=\"nofollow\">hello world package</a> written in plain C, compiled and linked normally, but with the l4re toolchain.</p>\n\n<p>Is it possible to build a hello world Rust program against that L4Re toolchain in order to write L4Re packages in Rust?</p>\n\n<p>I am aware of <a href=\"https://github.com/japaric/rust-cross\" rel=\"nofollow\">rust-cross</a>, but there is probably no suitable triple available for my situation and I need to <a href=\"https://github.com/japaric/rust-cross#target-specification-files\" rel=\"nofollow\">specify</a> my target manually. Any ideas which values should be used in my case?</p>\n"}, {"tags": ["dictionary", "rust"], "answers": [{"comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1465222172, "post_id": 37659047, "comment_id": 62797833, "body": "Excellent answer. Thanks also for the result code and for noticing that <code>ref</code> is not <code>&amp;</code>, I thought it is the same things."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1465223621, "last_edit_date": 1465223621, "creation_date": 1465220481, "answer_id": 37659047, "question_id": 37658848, "link": "https://stackoverflow.com/questions/37658848/how-to-unpack-btreemap-item-tuple-from-an-iterator-in-rust/37659047#37659047", "title": "How to unpack BTreeMap item tuple from an iterator in Rust?", "body": "<p>Check out the error message:</p>\n\n<pre><code> expected `&amp;(&amp;u8, &amp;mut collections::vec::Vec&lt;u8&gt;)`,\n    found `(_, _)`\n(expected &amp;-ptr,\n    found tuple) [E0308]\n</code></pre>\n\n<p>The compiler expects to match against a reference, but the code does not provide such. Change the binding to <code>let &amp;(&amp;k, &amp;mut v) = t</code>. Then you get a bunch of other errors:</p>\n\n<ol>\n<li><p>Matching using <code>&amp;mut foo</code> means that <code>foo</code> will have the <code>&amp;mut</code> stripped off, and then the resulting value will be <em>moved</em> to <code>foo</code>. This is because it is a pattern match, just like how <code>let Some(foo) = ...</code> \"strips off\" the <code>Some</code>.</p></li>\n<li><p>You can't move the <code>Vec</code> because it's owned by the <code>BTreeMap</code>, so you need to take a reference to it. This is done with the <code>ref</code> keyword, not the <code>&amp;</code> operator.</p></li>\n<li><p>Normally, you'd also do the pattern matching directly in the closure argument, not in a second variable.</p></li>\n<li><p>Since <code>map</code> transfers ownership of the item to the closure, you can just give that a <code>mut</code> binding, no need for any references.</p></li>\n<li><p>As <code>k</code> is unused, it's idiomatic to replace the name with an underscore (<code>_</code>).</p></li>\n</ol>\n\n\n\n<pre><code>let idx = map.iter_mut().find(|&amp;(k, ref v)| {\n    v.is_empty()\n});\n\nidx.map(|(_, mut v)| {\n    v.push(5);\n});\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>use for mutable purposes</p>\n</blockquote>\n\n<p>If you mean \"how can I mutate the value in the closure to <code>find</code>\", the answer is \"you can't\". Find returns an immutable reference to the iterated item (<code>&amp;Self::Item</code>):</p>\n\n<pre><code>fn find&lt;P&gt;(&amp;mut self, predicate: P) -&gt; Option&lt;Self::Item&gt; \n    where P: FnMut(&amp;Self::Item) -&gt; bool\n</code></pre>\n\n<p>Even though your <code>Self::Item</code> might be a mutable reference, an immutable reference to a mutable reference is still immutable.</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 0, "accepted_answer_id": 37659047, "answer_count": 1, "score": 1, "last_activity_date": 1465223621, "creation_date": 1465219896, "last_edit_date": 1465220549, "question_id": 37658848, "link": "https://stackoverflow.com/questions/37658848/how-to-unpack-btreemap-item-tuple-from-an-iterator-in-rust", "title": "How to unpack BTreeMap item tuple from an iterator in Rust?", "body": "<p><a href=\"https://play.rust-lang.org/?gist=4a4ced365b02a23511f7d5cc26742a60&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Here</a> is example code:</p>\n\n<pre><code>use std::collections::BTreeMap;\n\nfn main() {\n    let mut map: BTreeMap&lt;u8, Vec&lt;u8&gt;&gt; = BTreeMap::new();\n    let idx = map.iter_mut().find(|t| {\n        let (&amp;k, &amp;mut v) = t;\n        v.is_empty()\n    });\n    idx.map(|t| {\n        let (&amp;k, &amp;mut v) = t;\n        v.push(5);\n    });\n}\n</code></pre>\n\n<p>Errors:</p>\n\n<pre><code>&lt;anon&gt;:6:13: 6:25 error: mismatched types:\n expected `&amp;(&amp;u8, &amp;mut collections::vec::Vec&lt;u8&gt;)`,\n    found `(_, _)`\n(expected &amp;-ptr,\n    found tuple) [E0308]\n&lt;anon&gt;:6         let (&amp;k, &amp;mut v) = t;\n                     ^~~~~~~~~~~~\n</code></pre>\n\n<p>The type of tuple is <code>&amp;(&amp;u8, &amp;mut collections::vec::Vec&lt;u8&gt;)</code> so I expect it to be unpackable with following:</p>\n\n<pre><code>let (&amp;k, &amp;mut v) = *t;\n</code></pre>\n\n<p>But </p>\n\n<pre><code>&lt;anon&gt;:10:28: 10:30 error: type `(&amp;u8, &amp;mut collections::vec::Vec&lt;u8&gt;)` cannot be dereferenced\n&lt;anon&gt;:10         let (&amp;k, &amp;mut v) = *t;\n                                     ^~\n</code></pre>\n\n<p>How to unpack it and use for mutable purposes?</p>\n"}, {"tags": ["oop", "casting", "rust", "traits"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1465208279, "post_id": 37654857, "comment_id": 62788883, "body": "Try <code>Side::Good(self)</code> instead of <code>Side::Good(&amp;self)</code>."}, {"owner": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1465210652, "post_id": 37654857, "comment_id": 62790272, "body": "I cannot. The implementor of the traits may be a huge struct, I have to use borrows and trait objects there. Besides it immediately asks for Size (the trait <code>core::marker::Sized</code> is not implemented)"}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1465214670, "post_id": 37654857, "comment_id": 62792666, "body": "<code>fn name(&amp;self)</code> can be de-sugared as <code>fn name(self:&amp;Self)</code>. Type of the <code>self</code> variable is <code>&amp;Self</code>."}], "answers": [{"comments": [{"owner": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "edited": false, "score": 0, "creation_date": 1465216142, "post_id": 37656689, "comment_id": 62793685, "body": "Thanks. This explicitly describes what I need. Now at least I can use this approach as a form of &quot;trait casting&quot;."}, {"owner": {"reputation": 3711, "user_id": 55965, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83dd2a385c44fc42d52f14fccd9d992a?s=128&d=identicon&r=PG", "display_name": "Adrian Heine", "link": "https://stackoverflow.com/users/55965/adrian-heine"}, "edited": false, "score": 0, "creation_date": 1500810335, "post_id": 37656689, "comment_id": 77492262, "body": "See <a href=\"https://users.rust-lang.org/t/how-can-i-cast-self-to-a-trait-object-in-default-method/7993/8?u=adrianheine\" rel=\"nofollow noreferrer\">this idea</a>, though."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 5, "last_activity_date": 1465213794, "creation_date": 1465213794, "answer_id": 37656689, "question_id": 37654857, "link": "https://stackoverflow.com/questions/37654857/rust-trait-objects-self-cannot-be-used-in-a-trait-default-function/37656689#37656689", "title": "Rust trait object&#39;s &amp;self cannot be used in a trait default function", "body": "<p>Firstly, the type of <code>self</code> in <code>fn who_am_i_inner</code> is already a reference, so you don't need to <code>&amp;</code>.</p>\n\n<pre><code>fn who_am_i_inner(&amp;self) -&gt; Side {\n    Side::Good(self)\n}\n</code></pre>\n\n<p>But then rustc complains...</p>\n\n<pre><code>&lt;anon&gt;:13:20: 13:24 error: the trait `core::marker::Sized` is not implemented for the type `Self` [E0277]\n&lt;anon&gt;:13         Side::Good(self)\n                             ^~~~\n&lt;anon&gt;:13:20: 13:24 help: see the detailed explanation for E0277\n&lt;anon&gt;:13:20: 13:24 note: `Self` does not have a constant size known at compile-time\n&lt;anon&gt;:13:20: 13:24 note: required for the cast to the object type `GoodDude`\n</code></pre>\n\n<p>Admittedly the error message is very unclear and E0277 is about something totally different. Let's try the nightly compiler instead, which gives better error messages:</p>\n\n<pre><code>error: the trait bound `Self: std::marker::Sized` is not satisfied [--explain E0277]\n  --&gt; &lt;anon&gt;:13:20\n13 |&gt;         Side::Good(self)\n   |&gt;                    ^^^^\nhelp: consider adding a `where Self: std::marker::Sized` bound\nnote: required for the cast to the object type `GoodDude`\n</code></pre>\n\n<p>OK let's try to add the <code>where Self: Sized</code>:</p>\n\n<pre><code>fn who_am_i_inner(&amp;self) -&gt; Side where Self: Sized {\n    Side::Good(self)\n}\n</code></pre>\n\n<p>and now it works.</p>\n\n<blockquote>\n  <p>World saved. Press any key to continue<br>\n  May the 4th be with you<br>\n  Pew Pew Pew<br>\n  Luke I am yr father</p>\n</blockquote>\n\n<hr>\n\n<p>The <code>where Self: Sized</code> is Rust's way to signify that <a href=\"https://doc.rust-lang.org/book/trait-objects.html#object-safety\" rel=\"noreferrer\">the method <em>cannot</em> be used from trait objects</a>. We say the method ignored from \"object-safety\", or \"cannot be virtual\" if you like C++. </p>\n\n<p>The effect is that if all you have got is <code>luke: &amp;GoodDude</code>, then you cannot call <code>luke.who_am_i_inner()</code> since <code>*luke</code> has an unknown size.</p>\n\n<p>The reason we need to make the method not object-safe is due to the cast <code>&amp;Self \u2192 &amp;GoodDude</code>. In Rust a trait object reference like <code>&amp;GoodDude</code> is a <em>fat pointer</em>, internally it is represented as a 2-tuple <code>(pointer, method_table)</code>. However, in a trait the <code>self</code> is a thin-pointer. </p>\n\n<p>We cannot convert a thin-pointer to a fat-pointer, since there is a missing information, the method_table. This can be filled in if we knew the concrete type. That's why we add the <code>where Self: Sized</code>.</p>\n\n<p>If you want to make <code>who_am_i_inner</code> object-safe, then you cannot provide a default implementation.</p>\n"}], "owner": {"reputation": 944, "user_id": 817019, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/xhltk.jpg?s=128&g=1", "display_name": "snuk182", "link": "https://stackoverflow.com/users/817019/snuk182"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 951, "favorite_count": 0, "accepted_answer_id": 37656689, "answer_count": 1, "score": 2, "last_activity_date": 1465213794, "creation_date": 1465208175, "last_edit_date": 1465212122, "question_id": 37654857, "link": "https://stackoverflow.com/questions/37654857/rust-trait-objects-self-cannot-be-used-in-a-trait-default-function", "title": "Rust trait object&#39;s &amp;self cannot be used in a trait default function", "body": "<p>Trying to override a trait cast problem, described <a href=\"https://stackoverflow.com/questions/26126683/how-to-match-trait-implementors\">here</a>. Stuck at implementing the trait function which returns the enum instance with own implementation inside:</p>\n\n<pre><code>//the \"trait matcher\" enum\nenum Side&lt;'a&gt; {\n    Good(&amp;'a GoodDude),\n    Bad(&amp;'a BadDude),\n}\n\n//very general trait\ntrait Dude {\n    fn who_am_i(&amp;self) -&gt; Side;\n    fn do_useful_stuff(&amp;self);\n}\n\n//specific trait #1\ntrait GoodDude: Dude {\n    fn who_am_i_inner(&amp;self) -&gt; Side {\n        Side::Good(&amp;self)\n    }\n\n    fn save_the_world(&amp;self);\n}\n\n//specific trait #2\ntrait BadDude: Dude {\n    fn who_am_i_inner(&amp;self) -&gt; Side {\n        Side::Bad(&amp;self)\n    }\n\n    fn do_evil(&amp;self);\n}\n</code></pre>\n\n<p>But for some reason the compilation of this part fails with <a href=\"https://doc.rust-lang.org/error-index.html#E0277\" rel=\"nofollow\">E0277</a>:</p>\n\n<pre><code>trait GoodDude: Dude {        \n    fn who_am_i_inner(&amp;self) -&gt; Side {\n        Side::Good(&amp;self) //&amp;self should be &amp;GoodDude, but compiler says it is not...\n    }\n\n    fn save_the_world(&amp;self);\n}\n</code></pre>\n\n<p>And results in:</p>\n\n<pre><code>&lt;anon&gt;:16:20: 16:25 error: the trait `GoodDude` is not implemented for the type `&amp;Self` [E0277]\n&lt;anon&gt;:16         Side::Good(&amp;self)\n                             ^~~~~\n&lt;anon&gt;:16:20: 16:25 help: see the detailed explanation for E0277\n&lt;anon&gt;:16:20: 16:25 note: required for the cast to the object type `GoodDude`\n</code></pre>\n\n<p>Can this be worked out?</p>\n\n<p>Full sample: <a href=\"https://play.rust-lang.org/?gist=8ae2384e401da76c16214c4a642ce8b4&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">https://play.rust-lang.org/?gist=8ae2384e401da76c16214c4a642ce8b4&amp;version=stable&amp;backtrace=0</a></p>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 2, "creation_date": 1465172724, "post_id": 37648084, "comment_id": 62776336, "body": "Can you please create a <a href=\"http://stackoverflow.com/help/mcve\">Minimal, Complete, Verifiable Example</a> (MCVE) on the Rust playground? There are too many missing pieces here and you haven&#39;t shared any error messages or anything."}, {"owner": {"reputation": 756, "user_id": 4043593, "user_type": "registered", "profile_image": "https://graph.facebook.com/100002156475150/picture?type=large", "display_name": "Waldemar Neto", "link": "https://stackoverflow.com/users/4043593/waldemar-neto"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1465173309, "post_id": 37648084, "comment_id": 62776434, "body": "@SimonWhiteHead theres no error message, just don&#39;t match.What are missing in my doubt? theres the body, and the needs and the information, do you need more information?"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1465174077, "post_id": 37648084, "comment_id": 62776551, "body": "I am assuming <code>obj</code> is a <code>HashMap</code>.. but it would be good to see how you&#39;ve added values to it because the types of the key and value will depend on what was inferred based on how you initialized it."}], "answers": [{"tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 2, "last_activity_date": 1465173970, "creation_date": 1465173970, "answer_id": 37648196, "question_id": 37648084, "link": "https://stackoverflow.com/questions/37648084/how-to-match-strings-in-rust/37648196#37648196", "title": "How to match Strings in Rust", "body": "<p>You can do it by getting a <code>&amp;str</code> out of the <code>String</code>, such as with this:</p>\n\n<pre><code>match Some(&amp;*value.to_string()) {\n    Some(\"some_value\") =&gt; string_gen(),\n    _ =&gt; \"test\".to_string()\n}\n</code></pre>\n\n<p>But as far as pattern matching a <code>String</code> directly: no, you can\u2019t. Pattern matching is all about structural comparisons rather than arbitrary user-defined code comparisons like <code>==</code> is able to do. <code>String</code> is a struct type with a handful of private fields, so you can\u2019t match its insides. You can only get a <code>&amp;str</code> out of it which can be compared.</p>\n"}], "owner": {"reputation": 756, "user_id": 4043593, "user_type": "registered", "profile_image": "https://graph.facebook.com/100002156475150/picture?type=large", "display_name": "Waldemar Neto", "link": "https://stackoverflow.com/users/4043593/waldemar-neto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3200, "favorite_count": 1, "accepted_answer_id": 37648196, "answer_count": 1, "score": 0, "last_activity_date": 1465179381, "creation_date": 1465172542, "last_edit_date": 1465179381, "question_id": 37648084, "link": "https://stackoverflow.com/questions/37648084/how-to-match-strings-in-rust", "title": "How to match Strings in Rust", "body": "<p>I tried to match <code>String</code>s in Rust lang but I can't:</p>\n\n<pre><code>for (key, value) in obj.iter() {\n    let valueType = match Some(value.to_string()) {\n        Some(ref x) if x == \"some_value\" =&gt; string_gen(),\n        _ =&gt; \"test\".to_string()\n    };\n    println!(\"{}\", value);\n    println!(\"{}\", valueType);\n}\n</code></pre>\n\n<p>I have to match the word \"some_value\" when the value of the iterator is \"some_value\"</p>\n\n<p>I did a lot of searches and have a lot of people with the same problems.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "is_accepted": false, "score": 0, "last_activity_date": 1465165008, "creation_date": 1465165008, "answer_id": 37647331, "question_id": 37647248, "link": "https://stackoverflow.com/questions/37647248/mismatched-types-when-returning-the-result-of-adding-two-generics/37647331#37647331", "title": "Mismatched types when returning the result of adding two generics", "body": "<p>You need to specify the output type of <code>Add</code> for <code>T</code>:</p>\n\n<pre><code>impl &lt;T: Add&lt;Output = T&gt;&gt; Add for Complex&lt;T&gt; {\n    type Output = Complex&lt;T&gt;;\n    fn add(self, other: Complex&lt;T&gt;) -&gt; Complex&lt;T&gt; {\n        Complex {re: self.re + other.re, im: self.im + other.im}\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 201, "user_id": 5567407, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a402d74d0de277aad54f844789e0dcbf?s=128&d=identicon&r=PG&f=1", "display_name": "Thorum357", "link": "https://stackoverflow.com/users/5567407/thorum357"}, "edited": false, "score": 0, "creation_date": 1465206827, "post_id": 37647369, "comment_id": 62787995, "body": "Thank you for your answer. This helps."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 4, "last_activity_date": 1465165382, "creation_date": 1465165382, "answer_id": 37647369, "question_id": 37647248, "link": "https://stackoverflow.com/questions/37647248/mismatched-types-when-returning-the-result-of-adding-two-generics/37647369#37647369", "title": "Mismatched types when returning the result of adding two generics", "body": "<p>Your implementation of <code>add</code> produces a <code>Complex&lt;&lt;T as core::ops::Add&gt;::Output&gt;</code>. <code>&lt;T as core::ops::Add&gt;::Output</code> (i.e. the <code>Output</code> of the implementation of <code>Add&lt;T&gt;</code> for <code>T</code>) is not guaranteed to be the same as <code>T</code>. You can add a constraint on the <code>Output</code> associated type to restrict your implementation to be only available when they are in fact the same:</p>\n\n<pre><code>impl&lt;T: Add&lt;Output = T&gt;&gt; Add for Complex&lt;T&gt; {\n    type Output = Complex&lt;T&gt;;\n\n    fn add(self, other: Complex&lt;T&gt;) -&gt; Complex&lt;T&gt; {\n        Complex { re: self.re + other.re, im: self.im + other.im }\n    }\n}\n</code></pre>\n\n<p>Or, you could change your implementation to be as generic as possible by making it possible to add a <code>Complex&lt;T&gt;</code> and a <code>Complex&lt;U&gt;</code>, provided that it is possible to add a <code>T</code> and a <code>U</code>, and by returning a <code>Complex&lt;&lt;T as Add&lt;U&gt;&gt;::Output&gt;</code>.</p>\n\n<pre><code>impl&lt;T: Add&lt;U&gt;, U&gt; Add&lt;Complex&lt;U&gt;&gt; for Complex&lt;T&gt; {\n    type Output = Complex&lt;&lt;T as Add&lt;U&gt;&gt;::Output&gt;;\n\n    fn add(self, other: Complex&lt;U&gt;) -&gt; Self::Output {\n        Complex { re: self.re + other.re, im: self.im + other.im }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1589293260, "last_edit_date": 1589293260, "creation_date": 1465165561, "answer_id": 37647395, "question_id": 37647248, "link": "https://stackoverflow.com/questions/37647248/mismatched-types-when-returning-the-result-of-adding-two-generics/37647395#37647395", "title": "Mismatched types when returning the result of adding two generics", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/ops/trait.Add.html\" rel=\"nofollow noreferrer\"><code>Add</code> trait</a> is defined as</p>\n\n<pre><code>pub trait Add&lt;RHS = Self&gt; {\n    type Output;\n    fn add(self, rhs: RHS) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>That is, given a type for <code>Self</code> (the type the trait is implemented for), and a type for the right-hand-side (<code>RHS</code>, the thing being added), there will be a unique type that is produced: <code>Output</code>.</p>\n\n<p>Conceptually, this allows you to create a type <code>A</code> that can have a type <code>B</code> added to it, which will always produce a third type <code>C</code>.</p>\n\n<p>In your example, you have constrained <code>T</code> to implement <code>Add</code>. By default, the <code>RHS</code> type is assumed to be the same as the type the trait is implemented for (<code>RHS = Self</code>). However, there are no restrictions placed on what the <em>output type</em> must be.</p>\n\n<p>There are two potential solutions:</p>\n\n<ol>\n<li><p>Say that you will return a <code>Complex</code> that has been parameterized by whatever the result type of adding <code>T</code> is:</p>\n\n<pre><code>impl&lt;T&gt; Add&lt;Complex&lt;T&gt;&gt; for Complex&lt;T&gt;\nwhere\n    T: Add,\n{\n    type Output = Complex&lt;T::Output&gt;;\n\n    fn add(self, other: Complex&lt;T&gt;) -&gt; Complex&lt;T::Output&gt; {\n        Complex {\n            re: self.re + other.re,\n            im: self.im + other.im,\n        }\n    }\n}\n</code></pre></li>\n<li><p>Restrict <code>T</code> to those types that when added to themselves return the same type:</p>\n\n<pre><code>impl&lt;T&gt; Add&lt;Complex&lt;T&gt;&gt; for Complex&lt;T&gt;\nwhere\n    T: Add&lt;Output = T&gt;,\n{\n    type Output = Complex&lt;T&gt;;\n\n    fn add(self, other: Complex&lt;T&gt;) -&gt; Complex&lt;T&gt; {\n        Complex {\n            re: self.re + other.re,\n            im: self.im + other.im,\n        }\n    }\n}\n</code></pre></li>\n</ol>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29184358/155423\">How do I require a generic type implement an operation like Add, Sub, Mul, or Div in a generic function?</a></li>\n<li><a href=\"https://stackoverflow.com/q/34630695/155423\">How to write a trait bound for adding two references of a generic type?</a></li>\n</ul>\n"}], "owner": {"reputation": 201, "user_id": 5567407, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a402d74d0de277aad54f844789e0dcbf?s=128&d=identicon&r=PG&f=1", "display_name": "Thorum357", "link": "https://stackoverflow.com/users/5567407/thorum357"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 742, "favorite_count": 0, "answer_count": 3, "score": 5, "last_activity_date": 1589293260, "creation_date": 1465164297, "last_edit_date": 1465165710, "question_id": 37647248, "link": "https://stackoverflow.com/questions/37647248/mismatched-types-when-returning-the-result-of-adding-two-generics", "title": "Mismatched types when returning the result of adding two generics", "body": "<p>I am learning Rust, have read the Rust homepage, and am trying out small example programs. Here is code that fails:</p>\n\n<pre><code>use std::ops::Add;\n\npub struct Complex&lt;T&gt; {\n    pub re: T,\n    pub im: T,\n}\n\nimpl &lt;T: Add&gt; Add&lt;Complex&lt;T&gt;&gt; for Complex&lt;T&gt; {\n    type Output = Complex&lt;T&gt;;\n    fn add(self, other: Complex&lt;T&gt;) -&gt; Complex&lt;T&gt; {\n        Complex {re: self.re + other.re, im: self.im + other.im}\n    }\n}\n</code></pre>\n\n<p>Here is the error message:</p>\n\n<pre><code>src/lib.rs:11:3: 11:59 error: mismatched types:\n expected `Complex&lt;T&gt;`,\n    found `Complex&lt;&lt;T as core::ops::Add&gt;::Output&gt;`\n(expected type parameter,\n    found associated type) [E0308]\nsrc/lib.rs:11       Complex {re: self.re + other.re, im: self.im + other.im}\n                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>I don't understand why it fails to compile.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 4, "creation_date": 1465159344, "post_id": 37646475, "comment_id": 62773245, "body": "I imagine <code>if</code> expressions without and <code>else</code> must have type <code>()</code> since the missing <code>else</code> expression implicitly has type <code>()</code>. <code>insert</code> returns <code>bool</code> so the two branches have different types. Adding the semicolon causes your <code>if</code> block to have type <code>()</code>."}, {"owner": {"reputation": 728, "user_id": 1292467, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/5oSiH.png?s=128&g=1", "display_name": "Iakov Davydov", "link": "https://stackoverflow.com/users/1292467/iakov-davydov"}, "reply_to_user": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 1, "creation_date": 1465159623, "post_id": 37646475, "comment_id": 62773316, "body": "I think you&#39;re right (and it&#39;s not very obvious). Adding else {false} also solves the problem. Do you think compiler should be more flexible here, or works as intended? Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 728, "user_id": 1292467, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/5oSiH.png?s=128&g=1", "display_name": "Iakov Davydov", "link": "https://stackoverflow.com/users/1292467/iakov-davydov"}, "edited": false, "score": 1, "creation_date": 1465159311, "post_id": 37646524, "comment_id": 62773232, "body": "If I add return (); at the end of the function I still get the same error. So I&#39;m not even sure if that has something to do with a function return value."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 0, "last_activity_date": 1465160154, "last_edit_date": 1465160154, "creation_date": 1465159141, "answer_id": 37646524, "question_id": 37646475, "link": "https://stackoverflow.com/questions/37646475/why-does-the-compiler-assume-that-the-value-of-if-let-should-be/37646524#37646524", "title": "Why does the compiler assume that the value of if let should be `()`?", "body": "<p>When you omit a function's return type, the function actually returns <code>()</code>. That is,</p>\n\n<pre><code>fn foo() {}\n</code></pre>\n\n<p>is equivalent to:</p>\n\n<pre><code>fn foo() -&gt; () {}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>If I add return (); at the end of the function I still get the same error. So I'm not even sure if that has something to do with a function return value.</p>\n</blockquote>\n\n<p>An <code>if let</code> expression that is used as a statement must return <code>()</code>, unless it is the last expression in the function's body, in which case its type must match the function's return type. Since your <code>if let</code> doesn't have an <code>else</code> clause, its type must be <code>()</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 728, "user_id": 1292467, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/5oSiH.png?s=128&g=1", "display_name": "Iakov Davydov", "link": "https://stackoverflow.com/users/1292467/iakov-davydov"}, "is_accepted": true, "score": 6, "last_activity_date": 1530040927, "last_edit_date": 1530040927, "creation_date": 1465161594, "answer_id": 37646881, "question_id": 37646475, "link": "https://stackoverflow.com/questions/37646475/why-does-the-compiler-assume-that-the-value-of-if-let-should-be/37646881#37646881", "title": "Why does the compiler assume that the value of if let should be `()`?", "body": "<p>According to the <a href=\"https://doc.rust-lang.org/book/first-edition/if.html\" rel=\"nofollow noreferrer\">Rust Book</a> (emphasis mine):</p>\n\n<blockquote>\n  <p>The value of the expression is the value of the last expression in whichever branch was chosen. An <strong><code>if</code> without an <code>else</code> always results in <code>()</code></strong> as the value.</p>\n</blockquote>\n\n<p>This gives a constraint on the expression value inside the curly braces.</p>\n\n<p>This is correct since the expression type matches <code>()</code>:</p>\n\n<pre><code>if let Some(_) = some() {\n    ()\n};\n</code></pre>\n\n<p>This is correct since there's an <code>else</code> statement (and the types between the branches match):</p>\n\n<pre><code>if let Some(_) = some() {\n    true\n} else {\n    false\n};\n</code></pre>\n\n<p>But this is wrong:</p>\n\n<pre><code>if let Some(_) = some() {\n    true\n};\n</code></pre>\n\n<p>This answer was inspired by <a href=\"https://stackoverflow.com/questions/37646475/why-does-the-compiler-assume-that-the-value-of-a-function-which-doesnt-return-a#comment62773245_37646475\">this comment</a>. </p>\n"}], "owner": {"reputation": 728, "user_id": 1292467, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/5oSiH.png?s=128&g=1", "display_name": "Iakov Davydov", "link": "https://stackoverflow.com/users/1292467/iakov-davydov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 263, "favorite_count": 0, "accepted_answer_id": 37646881, "answer_count": 2, "score": 2, "last_activity_date": 1530040927, "creation_date": 1465158750, "last_edit_date": 1530040817, "question_id": 37646475, "link": "https://stackoverflow.com/questions/37646475/why-does-the-compiler-assume-that-the-value-of-if-let-should-be", "title": "Why does the compiler assume that the value of if let should be `()`?", "body": "<p>I have the following code:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn translate() -&gt; Option&lt;String&gt; {\n    None\n}\n\nfn main() {\n    let mut found = HashSet::new();\n\n    if let Some(tr) = translate() {\n        found.insert(tr);\n    }\n}\n</code></pre>\n\n<p>It works properly, but when I remove the semicolon after <code>found.insert(tr)</code>, I get a compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:11:9\n   |\n7  | fn main() {\n   |           - expected `()` because of default return type\n...\n11 |         found.insert(tr)\n   |         ^^^^^^^^^^^^^^^^- help: try adding a semicolon: `;`\n   |         |\n   |         expected (), found bool\n   |\n   = note: expected type `()`\n              found type `bool`\n</code></pre>\n\n<p>It doesn't matter where this code is located or whether it is the last expression of the function.</p>\n\n<p>Why does the compiler assume that the expression inside the curly braces should be <code>()</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 8, "last_activity_date": 1465146084, "creation_date": 1465146084, "answer_id": 37644525, "question_id": 37643310, "link": "https://stackoverflow.com/questions/37643310/error-cannot-move-out-of-borrowed-content-for-self-field/37644525#37644525", "title": "error: cannot move out of borrowed content for self field", "body": "<p>The problem is that you take <code>self</code> by reference, therefore you cannot move out its <code>head</code> (it would become invalid), which <code>let mut next = Some(self.head);</code> would do.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"noreferrer\"><code>std::mem::replace</code></a> is a nice function for this:</p>\n\n<pre><code>fn insert(&amp;mut self, data: T) {\n    let mut next = std::mem::replace(&amp;mut self.head, Box::new(Node::new(data)));\n    self.head.next = Some(next);\n    self.size += 1;\n}\n</code></pre>\n\n<p>It allows you to replace the head with a new node and get the old one <em>at the same time</em>, which Rust is happy about because <code>head</code> stays valid all along now.</p>\n"}], "owner": {"reputation": 325, "user_id": 4697952, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/068aac36745cfeca9ef54dbeb62204f5?s=128&d=identicon&r=PG&f=1", "display_name": "Planet_Earth", "link": "https://stackoverflow.com/users/4697952/planet-earth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1628, "favorite_count": 0, "accepted_answer_id": 37644525, "answer_count": 1, "score": 3, "last_activity_date": 1465146084, "creation_date": 1465138696, "last_edit_date": 1465139108, "question_id": 37643310, "link": "https://stackoverflow.com/questions/37643310/error-cannot-move-out-of-borrowed-content-for-self-field", "title": "error: cannot move out of borrowed content for self field", "body": "<p>Here is my code:</p>\n\n<pre><code>struct Node&lt;T&gt; {\n    data: T,\n    next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; Node&lt;T&gt; {\n    fn new(data : T) -&gt; Node&lt;T&gt; {\n        Node { data: data, next: None } \n    }\n    fn new_with_next(data: T, next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;) -&gt; Node&lt;T&gt; {\n        Node { data: data, next: next }\n    }\n}\n\n\nstruct LinkedList&lt;T&gt; {\n    head: Box&lt;Node&lt;T&gt;&gt;,\n    size: u8,\n}\n\nimpl&lt;T&gt; LinkedList&lt;T&gt; {\n    fn new(data: T) -&gt; LinkedList&lt;T&gt; {\n        let new_node = Node::new(data);\n        let head = Box::new(new_node);\n        LinkedList { head: head, size: 1 }\n    }\n    fn insert(&amp;mut self, data: T) {\n        let mut next = Some(self.head);    // &lt;-- error here\n        let new_node = Node::new_with_next(data, next);\n        self.head = Box::new(new_node);\n        self.size += 1;\n    }\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre><code>src\\linked_list.rs:28:29: 28:33 error: cannot move out of borrowed content [E0507]\nsrc\\linked_list.rs:28         let next = Some(self.head);\n                                              ^~~~\n</code></pre>\n\n<p>I don't understand the error, nor how to fix it. I tried giving a reference to <code>self.head</code> to <code>Some</code>, however I'm changing the data type this inside <code>Some</code> this way.</p>\n"}, {"tags": ["module", "include", "rust"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1465139858, "post_id": 37642378, "comment_id": 62766786, "body": "RE your edit (which I almost missed, a comment reply would have been better): <a href=\"http://doc.rust-lang.org/book/crates-and-modules.html#multiple-file-crates\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a> splits up a single-file module into multiple files"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465154256, "post_id": 37642378, "comment_id": 62771644, "body": "<i>I also asked for pointers into the documentation</i> \u2014 &quot;Questions asking us to recommend or find a book, tool, software library, <b>tutorial or other off-site resource</b> are <a href=\"http://stackoverflow.com/help/on-topic\">off-topic for Stack Overflow</a>&quot;. It may be more appropriate to ask on the <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">User&#39;s Forum</a> or the <a href=\"https://www.reddit.com/r/rust\" rel=\"nofollow noreferrer\">Rust Subreddit</a>."}], "owner": {"reputation": 8757, "user_id": 9634, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/6181812b2747dc091b4b7ec97fb67c2f?s=128&d=identicon&r=PG", "display_name": "Brent.Longborough", "link": "https://stackoverflow.com/users/9634/brent-longborough"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "closed_date": 1465154315, "answer_count": 0, "score": 0, "last_activity_date": 1465137330, "creation_date": 1465132751, "last_edit_date": 1495540726, "question_id": 37642378, "link": "https://stackoverflow.com/questions/37642378/how-do-i-divide-my-rust-code-between-two-source-files", "closed_reason": "Duplicate", "title": "How do I divide my Rust code between two source files?", "body": "<p>Updated in response to \"possible duplicate\"</p>\n\n<p>Yes, the indicated question, <a href=\"https://stackoverflow.com/questions/37610079\">\"Can't understand Rust module system\"</a> solved my problem, for which my thanks.</p>\n\n<p>However, as part of my question, I also asked for pointers into the documentation \"where I missed this\"; it would be nice to have an answer to that, too, even if the answer is \"it's not explained simply\". (which is OK - I appreciate there's lots of work done and to do.)</p>\n\n<hr>\n\n<p>I'm starting to learn Rust, from a background of z/Assembler, Python, Go, and some C; but no C++ or Java.</p>\n\n<p>I've successfully built and executed the \"Hello World!\" example, and a couple of other monolithic <code>main.rs</code>. For one of these, I've tried to separate my utility functions into a separate source file, but I can't get it to build, and I confess I find the documentation a bit incomprehensible. (All due respect to the authors; I'm sure it's me.)</p>\n\n<p>So for a minimum non-working example, I went back to hallo world.</p>\n\n<p>In my src/ directory, I have two files:</p>\n\n<p>say.rs:</p>\n\n<pre><code>mod say {\n    pub fn say() {\n        println!(\"Hello, world!\");\n    }\n}\n</code></pre>\n\n<p>main.rs:</p>\n\n<pre><code>pub mod say;\nfn main() {\n    say();\n}\n</code></pre>\n\n<p><code>cargo build</code> gives me this error message:</p>\n\n<pre><code>D:\\Development\\Rust\\hw\\src&gt;cargo build\n   Compiling hw v0.1.0 (file:///D:/Development/Rust/hw)\nmain.rs:3:5: 3:8 error: unresolved name `say` [E0425]\nmain.rs:3     say();\n              ^~~\n</code></pre>\n\n<p>etc. I've also tried calling as <code>say::say()</code>, but with the same answer.</p>\n\n<p>I've come to the conclusion that I'm missing something pretty fundamental here. Could someone please explain where I've gone wrong, and, hopefully, give a pointer into the book where I should have seen this?</p>\n"}, {"tags": ["rust", "inline", "llvm-codegen"], "answers": [{"comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 19, "creation_date": 1465210595, "post_id": 37639889, "comment_id": 62790238, "body": "note that <code>inline(never)</code> is used on the panic intrinsics to make sure that the optimizer doesn&#39;t inline functions that are only called in the panic case."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 4, "creation_date": 1566407633, "post_id": 37639889, "comment_id": 101649976, "body": "-1 because there is something missing to the first point. Generic items can be inlined across crates, because they are effectively compiled when instantiated, so the code needed for inlining is readily available. And this means that a huge number of such items that are not marked, can still be inlined cross-crate. In some kinds of basic library crates, every item is generic!"}], "tags": [], "owner": {"reputation": 1987, "user_id": 5278682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34509cba2b4d128dce294dcf5092d300?s=128&d=identicon&r=PG&f=1", "display_name": "Eli Friedman", "link": "https://stackoverflow.com/users/5278682/eli-friedman"}, "is_accepted": true, "score": 78, "last_activity_date": 1565614621, "last_edit_date": 1565614621, "creation_date": 1465115215, "answer_id": 37639889, "question_id": 37639276, "link": "https://stackoverflow.com/questions/37639276/when-should-inline-be-used-in-rust/37639889#37639889", "title": "When should inline be used in Rust?", "body": "<p>One limitation of the current Rust compiler is that it if you're not using LTO (Link-Time Optimization), it will never inline a function not marked <code>#[inline]</code> across crates. Rust uses a separate compilation model similar to C++ because LLVM's LTO implementation doesn't scale well to large projects. Therefore, small functions exposed to other crates need to be marked by hand.  This isn't a great situation, and it's likely to be fixed in the future by some combination of improvements to LTO and MIR inlining.</p>\n\n<p><code>#[inline(never)]</code> is sometimes useful for debugging (separating a piece of code which isn't working as expected). In theory, it can be used for benchmarking, but that's usually a bad idea: turning off inlining doesn't prevent other inter-procedural optimizations like constant propagation. In terms of normal code, it can reduce codesize if you have a frequently used helper function which is only used for error handling.</p>\n\n<p><code>#[inline(always)]</code> is generally bad idea; if a function is big enough that the compiler won't inline it by default, it's big enough that the overhead of the call doesn't matter (and excessive inlining increases instruction cache pressure).  There are exceptions, but you need performance measurements to justify it. <a href=\"https://github.com/rust-lang/rust/commit/274bb24efdbeed0ab1a91f3c02f86551ef16eac7\" rel=\"noreferrer\">This example</a> is the sort of situation where it's worth considering.  <code>#[inline(always)]</code> can also be used to improve <code>-O0</code> code quality, but that's not usually worth worrying about.</p>\n"}], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 16040, "favorite_count": 17, "accepted_answer_id": 37639889, "answer_count": 1, "score": 97, "last_activity_date": 1565614621, "creation_date": 1465109898, "last_edit_date": 1564858229, "question_id": 37639276, "link": "https://stackoverflow.com/questions/37639276/when-should-inline-be-used-in-rust", "title": "When should inline be used in Rust?", "body": "<p>Rust has an \"inline\" attribute that can be used in one of those three flavors:</p>\n\n<p><code>#[inline]</code></p>\n\n<p><code>#[inline(always)]</code></p>\n\n<p><code>#[inline(never)]</code></p>\n\n<p>When should they be used?</p>\n\n<p>In the Rust reference, we see <a href=\"https://doc.rust-lang.org/reference.html#inline-attributes\" rel=\"noreferrer\">an inline attributes section</a> saying</p>\n\n<blockquote>\n  <p>The compiler automatically inlines functions based on internal heuristics. Incorrectly inlining functions can actually make the program slower, so it should be used with care.</p>\n</blockquote>\n\n<p>In the Rust internals forum, huon was also <a href=\"https://internals.rust-lang.org/t/when-should-i-use-inline/598/3?u=wisagan\" rel=\"noreferrer\">conservative about specifying inline</a>.</p>\n\n<p>But we see <a href=\"https://github.com/rust-lang/rust/search?utf8=%E2%9C%93&amp;q=inline&amp;type=Code\" rel=\"noreferrer\">considerable usage</a> in the Rust source, including the standard library. A lot of inline attributes are added to one-line-functions, which should be easy for the compilers to spot and optimize through heuristics according to the reference. Are those in fact not needed?</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 1, "creation_date": 1465116452, "post_id": 37639114, "comment_id": 62760143, "body": "Your question essentially boils down to returning a <code>&amp;str</code> from a function, which is answered <a href=\"http://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str\">here</a>. Please check it out, and if it does answer your question, I&#39;ll close this one as a duplicate."}], "answers": [{"tags": [], "owner": {"reputation": 1, "user_id": 6425862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efbb451907bcef4423d13af3a8452a83?s=128&d=identicon&r=PG", "display_name": "Kyle Clemens", "link": "https://stackoverflow.com/users/6425862/kyle-clemens"}, "is_accepted": false, "score": 0, "last_activity_date": 1465165644, "last_edit_date": 1465165644, "creation_date": 1465165517, "answer_id": 37647387, "question_id": 37639114, "link": "https://stackoverflow.com/questions/37639114/how-do-i-fix-this-lifetime-issue/37647387#37647387", "title": "How do I fix this lifetime issue?", "body": "<p>As Vladimir's link points out, this is actually impossible. I changed my code to reflect this knowledge, and it now compiles.</p>\n\n<pre><code>struct RequestParameters&lt;'a&gt; {\n    map: HashMap&lt;&amp;'a str, &amp;'a str&gt;,\n}\n\nimpl&lt;'a&gt; From&lt;HashMap&lt;&amp;'a str, &amp;'a str&gt;&gt; for RequestParameters&lt;'a&gt; {\n    fn from(map: HashMap&lt;&amp;'a str, &amp;'a str&gt;) -&gt; RequestParameters&lt;'a&gt; {\n        RequestParameters { map: map }\n    }\n}\n\nimpl&lt;'a&gt; RequestParameters&lt;'a&gt; {\n    fn to_string(self) -&gt; String {\n        String::from(\"?\") +\n        &amp;self.map.iter().map(|entry| format!(\"&amp;{}={}\", entry.0, entry.1)).collect::&lt;String&gt;()[1..]\n    }\n}\n\nfn main() {\n    let mut parameters = HashMap::new();\n    parameters.insert(\"a\", \"b\");\n    let string_parameters = RequestParameters::from(parameters).to_string();\n    let client = Client::new();\n    client.post(\"https://google.com\")\n        .body(&amp;string_parameters);\n}\n</code></pre>\n\n<p>By creating the <code>String</code> before the <code>Client</code> is made I can borrow it with a longer lifetime than the <code>Client</code>, which fixes my issues.</p>\n"}], "owner": {"reputation": 1, "user_id": 6425862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/efbb451907bcef4423d13af3a8452a83?s=128&d=identicon&r=PG", "display_name": "Kyle Clemens", "link": "https://stackoverflow.com/users/6425862/kyle-clemens"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 134, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1465165644, "creation_date": 1465107976, "last_edit_date": 1465165621, "question_id": 37639114, "link": "https://stackoverflow.com/questions/37639114/how-do-i-fix-this-lifetime-issue", "title": "How do I fix this lifetime issue?", "body": "<p>In the code below, the <code>string</code> does not live long enough in the <code>Into&lt;Body&lt;'a&gt;&gt;</code> implementation for <code>RequestParameters&lt;'a&gt;</code>. I understand why, since <code>string</code> comes into scope inside of <code>into</code> and is no longer in scope after the method finishes, but <code>Body&lt;'a&gt;</code> will keep a reference to it.</p>\n\n<p>At least, that's why I think <code>string</code> doesn't last long enough.</p>\n\n<p>What I don't understand is how to structure this code to fix <code>string</code>'s lifetime.</p>\n\n<p>The goal of this code is to make a HashMap (of <code>\"a\"</code> to <code>\"b\"</code> for example) into a string for the body of a POST request (<code>\"?a=b\"</code>, for example). If there is a better way to do this, please let me know, but what I would benefit a lot from is an understanding of how to fix this lifetime issue.</p>\n\n<p>If I'm wrong about why <code>string</code> doesn't live long enough, please let me know, as well. I'm still trying to come to grips with the lifetime system in Rust, so figuring this out will help me a ton.</p>\n\n<pre><code>struct RequestParameters&lt;'a&gt; {\n    map: HashMap&lt;&amp;'a str, &amp;'a str&gt;,\n}\n\nimpl&lt;'a&gt; From&lt;HashMap&lt;&amp;'a str, &amp;'a str&gt;&gt; for RequestParameters&lt;'a&gt; {\n    fn from(map: HashMap&lt;&amp;'a str, &amp;'a str&gt;) -&gt; RequestParameters&lt;'a&gt; {\n        RequestParameters { map: map }\n    }\n}\n\nimpl&lt;'a&gt; Into&lt;Body&lt;'a&gt;&gt; for RequestParameters&lt;'a&gt; {\n    fn into(self) -&gt; Body&lt;'a&gt; {\n        let string = String::from(\"?\") +\n                     &amp;self.map\n            .iter()\n            .map(|entry| format!(\"&amp;{}={}\", entry.0, entry.1))\n            .collect::&lt;String&gt;()[1..];\n        (&amp;string).into()\n    }\n}\n\nfn main() {\n    let mut parameters = HashMap::new();\n    parameters.insert(\"a\", \"b\");\n    let client = Client::new();\n    client.post(\"https://google.com\")\n        .body(RequestParameters::from(parameters));\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1141, "user_id": 1058543, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/f7cf7f17302b550d2dfda1c4f1eb1b29?s=128&d=identicon&r=PG", "display_name": "Nodoid", "link": "https://stackoverflow.com/users/1058543/nodoid"}, "edited": false, "score": 0, "creation_date": 1465087111, "post_id": 37636285, "comment_id": 62754458, "body": "Thanks. I&#39;ve added my_first_crate = {path = &quot;.&quot;} and put libmy_first_crate.rlib in the root of the project (where the Cargo.toml resides). When I run cargo, I&#39;m getting told that &quot;no matching package named my_first_crate found&quot;. Any ideas?"}, {"owner": {"reputation": 1141, "user_id": 1058543, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/f7cf7f17302b550d2dfda1c4f1eb1b29?s=128&d=identicon&r=PG", "display_name": "Nodoid", "link": "https://stackoverflow.com/users/1058543/nodoid"}, "edited": false, "score": 0, "creation_date": 1465088965, "post_id": 37636285, "comment_id": 62754735, "body": "If I use rustc -L . src/main.rs, the binary is created and can be executed. Partial success, just can&#39;t figure out why cargo isn&#39;t taking the library"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 1141, "user_id": 1058543, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/f7cf7f17302b550d2dfda1c4f1eb1b29?s=128&d=identicon&r=PG", "display_name": "Nodoid", "link": "https://stackoverflow.com/users/1058543/nodoid"}, "edited": false, "score": 0, "creation_date": 1465090020, "post_id": 37636285, "comment_id": 62754883, "body": "Cargo works by recompiling the dependencies separately for each project (because each project may use a different set of features for the same crate). It wasn&#39;t designed for reusing precompiled crates."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1465086225, "creation_date": 1465086225, "answer_id": 37636285, "question_id": 37636247, "link": "https://stackoverflow.com/questions/37636247/testing-a-rust-crate-outside-of-the-source-package/37636285#37636285", "title": "Testing a Rust crate outside of the source package", "body": "<p>You need to add your crate as a dependency for your application. Add this to your application's <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nmy_first_crate = { path = \"/path/to/crate\" }\n</code></pre>\n\n<p><code>\"/path/to/crate\"</code> is the path to the root of the crate's source (i.e. the directory that contains its <code>Cargo.toml</code>). You can use either a relative or an absolute path (but avoid absolute paths if you intend on publishing your code!).</p>\n"}], "owner": {"reputation": 1141, "user_id": 1058543, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/f7cf7f17302b550d2dfda1c4f1eb1b29?s=128&d=identicon&r=PG", "display_name": "Nodoid", "link": "https://stackoverflow.com/users/1058543/nodoid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 37636285, "answer_count": 1, "score": 3, "last_activity_date": 1465086225, "creation_date": 1465085642, "question_id": 37636247, "link": "https://stackoverflow.com/questions/37636247/testing-a-rust-crate-outside-of-the-source-package", "title": "Testing a Rust crate outside of the source package", "body": "<p>I have created my Rust crate. It's a very trivial affair. It built fine and when tested within it's own source directory works just fine (I just included <code>extern crate my_first_crate;</code> in my test file).</p>\n\n<p>I want to now test the crate in a totally different application.</p>\n\n<p>If I add the same <code>extern crate</code> line to my new application, the compiler tells me that it can't find the crate. I expected this (I'd get the same in C if I told the compiler to link to a library it has no clue about!)</p>\n\n<p>Do I need to copy the my_first_crate.rlib file from the source to the application target/debug folder or is there a way to tell cargo that it needs to link to the rlib file?</p>\n"}, {"tags": ["reference", "copy", "rust", "move", "mutable"], "answers": [{"comments": [{"owner": {"reputation": 4870, "user_id": 403875, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/439b8283080e4e2255205993da9de9ca?s=128&d=identicon&r=PG", "display_name": "dspyz", "link": "https://stackoverflow.com/users/403875/dspyz"}, "edited": false, "score": 0, "creation_date": 1465083175, "post_id": 37636003, "comment_id": 62753822, "body": "Suppose I can&#39;t or don&#39;t want to (seeing as this requires a substantially different design and there&#39;s no practical reason why the other way shouldn&#39;t work just as well)."}, {"owner": {"reputation": 4870, "user_id": 403875, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/439b8283080e4e2255205993da9de9ca?s=128&d=identicon&r=PG", "display_name": "dspyz", "link": "https://stackoverflow.com/users/403875/dspyz"}, "edited": false, "score": 0, "creation_date": 1465087607, "post_id": 37636003, "comment_id": 62754532, "body": "That&#39;s a good point. I didn&#39;t consider what happens if there&#39;s a panic."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1465086065, "last_edit_date": 1465086065, "creation_date": 1465082933, "answer_id": 37636003, "question_id": 37635983, "link": "https://stackoverflow.com/questions/37635983/how-to-update-a-mutable-reference-to-a-noncopyable-type/37636003#37636003", "title": "How to update a mutable reference to a noncopyable type?", "body": "<p>Do it the other way around:</p>\n\n<pre><code>impl Widget {\n    fn op(mut self, rhs: Widget) -&gt; Self {\n        self.update(rhs);\n        self\n    }\n\n    fn update(&amp;mut self, rhs: Widget) {\n        // Some stuff\n    }\n}\n</code></pre>\n\n<p>You cannot move out of a borrowed pointer, because moving makes the source unusable, but since you don't own the source, that information would have to propagate back to the owner, and Rust doesn't support that.</p>\n\n<p>You might say <em>\"but I'm assigning a new value to <code>*self</code> before the function returns!\"</em>. The problem with that is that if there's a panic between the move and the assignment, <code>*self</code> would still be left with no valid value. This is especially problematic if dropping <code>self</code> is not a no-op (though Rust doesn't care if dropping is a no-op or not here).</p>\n"}, {"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 1, "last_activity_date": 1465225305, "last_edit_date": 1495542159, "creation_date": 1465225305, "answer_id": 37660717, "question_id": 37635983, "link": "https://stackoverflow.com/questions/37635983/how-to-update-a-mutable-reference-to-a-noncopyable-type/37660717#37660717", "title": "How to update a mutable reference to a noncopyable type?", "body": "<p>One option is to use the <a href=\"https://crates.io/crates/take_mut\" rel=\"nofollow noreferrer\"><code>take_mut</code></a> crate, which offers the <code>take</code> functions that do exactly what you want:</p>\n\n<blockquote>\n  <p><code>take</code> allows for taking <code>T</code> out of a <code>&amp;mut T</code>, doing anything with it including consuming it, and producing another <code>T</code> to put back in the <code>&amp;mut T</code>.</p>\n</blockquote>\n\n<p>As pointed by <a href=\"https://stackoverflow.com/a/37636003/5189607\">Francis Gagn\u00e9</a>, the problem of doing this is that the <code>&amp;mut</code> reference will be in a invalid state if a panic happens, and this can lead to undefined behavior. The <code>take_mut</code> approach is:</p>\n\n<blockquote>\n  <p>During <code>take</code>, if a panic occurs, the entire process will be exited, as there's no valid <code>T</code> to put back into the <code>&amp;mut T</code>.</p>\n</blockquote>\n\n<p>Here is the code using <code>take</code>:</p>\n\n<pre><code>extern crate take_mut;\n\nstruct Widget;\n\nimpl Widget {\n    fn foo(self, rhs: Widget) -&gt; Self {\n        self\n    }\n\n    fn update(&amp;mut self, rhs: Widget) {\n        take_mut::take(self, |s| s.foo(rhs));\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4870, "user_id": 403875, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/439b8283080e4e2255205993da9de9ca?s=128&d=identicon&r=PG", "display_name": "dspyz", "link": "https://stackoverflow.com/users/403875/dspyz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 37660717, "answer_count": 2, "score": 1, "last_activity_date": 1465235629, "creation_date": 1465082700, "last_edit_date": 1465235629, "question_id": 37635983, "link": "https://stackoverflow.com/questions/37635983/how-to-update-a-mutable-reference-to-a-noncopyable-type", "title": "How to update a mutable reference to a noncopyable type?", "body": "<p>I want to do something like</p>\n\n<pre><code>impl Widget {\n    fn foo(self, rhs: Widget) -&gt; Self {\n        // Some stuff\n    }\n\n    fn update(&amp;mut self, rhs: Widget) {\n        *self = (*self).foo(rhs)\n    }\n}\n</code></pre>\n\n<p>but the compiler complains \"cannot move out of borrowed context.\"  What's the right way to do this?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 14, "last_activity_date": 1465082823, "creation_date": 1465082823, "answer_id": 37635995, "question_id": 37635978, "link": "https://stackoverflow.com/questions/37635978/how-do-i-access-the-first-character-of-a-string-in-rust/37635995#37635995", "title": "How do I access the first character of a string in Rust?", "body": "<p>Use <code>s.chars().next()</code>. This will return <code>None</code> if the string is empty or <code>Some(c)</code> otherwise.</p>\n"}], "owner": {"reputation": 6067, "user_id": 517073, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/917ead48eb4ab8bcedbb454977143e60?s=128&d=identicon&r=PG", "display_name": "Stepan Yakovenko", "link": "https://stackoverflow.com/users/517073/stepan-yakovenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4513, "favorite_count": 0, "closed_date": 1465154628, "accepted_answer_id": 37635995, "answer_count": 1, "score": 5, "last_activity_date": 1465154557, "creation_date": 1465082654, "last_edit_date": 1465154557, "question_id": 37635978, "link": "https://stackoverflow.com/questions/37635978/how-do-i-access-the-first-character-of-a-string-in-rust", "closed_reason": "Duplicate", "title": "How do I access the first character of a string in Rust?", "body": "<p>In JavaScript, I'd write:</p>\n\n<pre><code>s.charAt(0)\n</code></pre>\n\n<p>What would it be in Rust? How should I handle the <code>s.length == 0</code> case?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1540, "user_id": 3736362, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e142791f08de343d0bea0b5c676728d3?s=128&d=identicon&r=PG&f=1", "display_name": "justanothercoder", "link": "https://stackoverflow.com/users/3736362/justanothercoder"}, "edited": false, "score": 0, "creation_date": 1465075610, "post_id": 37635087, "comment_id": 62752173, "body": "Maybe <code>connect</code> is not so fast?"}, {"owner": {"reputation": 654, "user_id": 1591501, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e78caf88a395d6b1f597d0dade8facab?s=128&d=identicon&r=PG", "display_name": "jjpe", "link": "https://stackoverflow.com/users/1591501/jjpe"}, "reply_to_user": {"reputation": 1540, "user_id": 3736362, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e142791f08de343d0bea0b5c676728d3?s=128&d=identicon&r=PG&f=1", "display_name": "justanothercoder", "link": "https://stackoverflow.com/users/3736362/justanothercoder"}, "edited": false, "score": 0, "creation_date": 1465075707, "post_id": 37635087, "comment_id": 62752197, "body": "It&#39;s blazingly fast, when I do connect to another socket (i.e. by starting my accompanying server) it blows through my 10-iteration loop in less time than I can blink my eyes :)"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1465132964, "post_id": 37635087, "comment_id": 62764654, "body": "What&#39;s the actual <code>address</code> value? I suspect that <code>TcpStream::connect</code> waits for the DNS resolver."}, {"owner": {"reputation": 654, "user_id": 1591501, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e78caf88a395d6b1f597d0dade8facab?s=128&d=identicon&r=PG", "display_name": "jjpe", "link": "https://stackoverflow.com/users/1591501/jjpe"}, "edited": false, "score": 0, "creation_date": 1465133203, "post_id": 37635087, "comment_id": 62764725, "body": "<code>address</code> is a <code>&amp;&#39;static str</code> containing <code>localhost:7000</code>, and is consumed as an owned <code>net::ToSocketAddrs</code> instance by the <code>connect</code> fn. Hence the clone: a borrow won&#39;t do."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 2, "creation_date": 1465155182, "post_id": 37635087, "comment_id": 62771930, "body": "Passing a <code>&amp;&#39;static str</code> to <code>connect</code> works just fine. <code>str</code> implements <code>ToSocketAddrs</code>, and for each <code>T</code> where <code>T: ToSocketAddrs + ?Sized</code>, <code>&amp;&#39;a T</code> implements <code>ToSocketAddrs</code>, therefore <code>&amp;&#39;a str</code> implements <code>ToSocketAddrs</code> too. I doubt this has anything to do with the question, though."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1465156701, "post_id": 37635087, "comment_id": 62772428, "body": "I am unable to produce a C program that &quot;consume[s] 100% [of the CPU]&quot;. <a href=\"https://gist.github.com/shepmaster/8ffa98d5c30b02c4f770b58b47679fdc\" rel=\"nofollow noreferrer\">Here is what I created</a>, but I&#39;m certain it&#39;s incorrect (or at least very sloppy). Please <a href=\"https://stackoverflow.com/posts/37635087/edit\">edit</a> your question to allow us to reproduce the slow and fast case in order to help you tell the difference."}], "answers": [{"tags": [], "owner": {"reputation": 63, "user_id": 1592329, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1f99406671a26d17de4f0a52a41ad0c7?s=128&d=identicon&r=PG", "display_name": "dermesser", "link": "https://stackoverflow.com/users/1592329/dermesser"}, "is_accepted": false, "score": 1, "last_activity_date": 1475476171, "creation_date": 1475476171, "answer_id": 39825658, "question_id": 37635087, "link": "https://stackoverflow.com/questions/37635087/using-rusts-errors-inside-a-loop-results-in-cheap-blocking-but-why/39825658#39825658", "title": "Using Rust&#39;s errors inside a `loop` results in cheap blocking, but why?", "body": "<p>It's quite likely that connect() is the culprit; in order to receive the <em>Connection refused</em> error, it first needs to look up the address (which should be cheap for localhost), then connect, and wait for the <em>Connection refused</em> response.</p>\n\n<p>While localhost is certainly quite fast as opposed to remote network services, there's still a lot of overhead.</p>\n\n<p><em>ping localhost</em> has a latency of around 0.9ms for me. That means that your loop only does on the order of 1000 to 10000 iterations per second, which is not very much compared to an actual <em>while true {}</em> loop.</p>\n"}], "owner": {"reputation": 654, "user_id": 1591501, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e78caf88a395d6b1f597d0dade8facab?s=128&d=identicon&r=PG", "display_name": "jjpe", "link": "https://stackoverflow.com/users/1591501/jjpe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 1, "answer_count": 1, "score": 6, "last_activity_date": 1475476171, "creation_date": 1465074863, "last_edit_date": 1465154836, "question_id": 37635087, "link": "https://stackoverflow.com/questions/37635087/using-rusts-errors-inside-a-loop-results-in-cheap-blocking-but-why", "title": "Using Rust&#39;s errors inside a `loop` results in cheap blocking, but why?", "body": "<pre><code>use std::io::ErrorKind;\nuse std::net::TcpStream;\n\nfn main() {\n    let address = \"localhost:7000\";\n\n    loop {\n        match TcpStream::connect(address.clone()) {\n            Err(err) =&gt; { match err.kind() {\n                ErrorKind::ConnectionRefused =&gt; { continue; },\n                kind =&gt; panic!(\"Error occurred: {:?}\", kind),\n            }; },\n            Ok(_stream) =&gt; { /* do some stuff here */ },\n        }\n    }\n}\n</code></pre>\n\n<p>Consider the piece of Rust code above. What's interesting to me here is not the <code>Ok</code> branch, but rather the <code>ErrorKind::ConnectionRefused</code> sub-branch coupled with the <code>loop</code>: it's very cheap, CPU-wise, consuming less than 1% CPU. This is great, it's what I want.</p>\n\n<p>But I don't understand <strong>why</strong> it is cheap: comparable code in C would likely consume 100% basically <strong>NOP</strong>ing (not precisely but close enough).\nCan anyone help me understand why this is so cheap?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1987, "user_id": 5278682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34509cba2b4d128dce294dcf5092d300?s=128&d=identicon&r=PG&f=1", "display_name": "Eli Friedman", "link": "https://stackoverflow.com/users/5278682/eli-friedman"}, "edited": false, "score": 0, "creation_date": 1465110022, "post_id": 37634657, "comment_id": 62758885, "body": "See also <a href=\"http://stackoverflow.com/questions/28632968/why-doesnt-rust-support-trait-object-upcasting\" title=\"why doesnt rust support trait object upcasting\">stackoverflow.com/questions/28632968/&hellip;</a> ."}], "answers": [{"comments": [{"owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "edited": false, "score": 0, "creation_date": 1465240796, "post_id": 37634957, "comment_id": 62808888, "body": "Thanks, the hint about <code>Any</code> worked for me, as I do actually know the object&#39;s concrete type."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1465073881, "creation_date": 1465073881, "answer_id": 37634957, "question_id": 37634657, "link": "https://stackoverflow.com/questions/37634657/is-it-possible-to-downcast-a-trait-object-in-a-closure-argument/37634957#37634957", "title": "Is it possible to &#39;downcast&#39; a trait object in a closure argument?", "body": "<p>No, you can't do this. First off, Rust doesn't support downcasting a trait object to another trait object. With the <code>Any</code> trait, you could downcast a trait object to the underlying object's concrete type and then get a trait object for a different type, but that requires knowing the object's concrete type, which you don't know &ndash; that's the whole point of trait objects!</p>\n\n<p>Furthermore, what you're trying to do is not sound: a function expecting to receive a <code>&amp;WithFooBar</code> should not be passed a <code>&amp;WithFoo</code>, because the <code>WithFoo</code> might not implement <code>WithFooBar</code>. If it was the other way around though, it would be sound, but even though <code>WithFooBar</code> inherits from <code>WithFoo</code>, Rust doesn't allow casting a <code>&amp;WithFooBar</code> to a <code>&amp;WithFoo</code>, so even if we tried to make a wrapper function, it wouldn't work.</p>\n"}], "owner": {"reputation": 898, "user_id": 1633026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e1ad7e90b16b09cf026e49c24d148ba?s=128&d=identicon&r=PG", "display_name": "Andrew Straw", "link": "https://stackoverflow.com/users/1633026/andrew-straw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 376, "favorite_count": 0, "accepted_answer_id": 37634957, "answer_count": 1, "score": 0, "last_activity_date": 1465077341, "creation_date": 1465071752, "last_edit_date": 1465077341, "question_id": 37634657, "link": "https://stackoverflow.com/questions/37634657/is-it-possible-to-downcast-a-trait-object-in-a-closure-argument", "title": "Is it possible to &#39;downcast&#39; a trait object in a closure argument?", "body": "<p>I'd like to invoke a function pointer which itself takes a trait object as an argument:</p>\n\n<pre><code>fn invoke(x: &amp;Fn(&amp;WithFoo), y: &amp;MyStruct) {\n    // MyStruct implements WithFoo\n    x(y);\n}\n</code></pre>\n\n<p>So far so good. Now, what I'm having trouble with is how to call this with a function pointer with signature such as <code>&amp;Fn(&amp;WithFooBar)</code> where the trait <code>WithFooBar</code> inherits from <code>WithFoo</code>.</p>\n\n<p>Here is my sample code where I attempt to do this:</p>\n\n<pre><code>trait WithFoo {\n    fn foo(&amp;self);\n}\n\ntrait WithFooBar: WithFoo {\n    fn bar(&amp;self);\n}\n\nstruct MyStruct {\n}\n\nimpl WithFoo for MyStruct {\n    fn foo(&amp;self) {\n        println!(\"foo\");\n    }\n}\n\nimpl WithFooBar for MyStruct {\n    fn bar(&amp;self) {\n        println!(\"bar\");\n    }\n}\n\nfn foobar_caller(wf: &amp;WithFooBar) {\n    wf.foo();\n    wf.bar();\n}\n\nfn invoke(x: &amp;Fn(&amp;WithFoo), y: &amp;MyStruct) {\n    x(y);\n}\n\nfn main() {\n    let data = MyStruct {};\n    invoke(&amp;foobar_caller,&amp;data);\n}\n</code></pre>\n\n<p>This fails with the following compile error:</p>\n\n<pre><code>error: type mismatch: the type `fn(&amp;WithFooBar) {foobar_caller}` implements the trait `for&lt;'r&gt; std::ops::Fn&lt;(&amp;'r WithFooBar + 'r,)&gt;`, but the trait `for&lt;'r&gt; std::ops::Fn&lt;(&amp;'r WithFoo + 'r,)&gt;` is required (expected trait `WithFoo`, found trait `WithFooBar`) [--explain E0281]\n</code></pre>\n\n<p>I understand that the error is saying that <code>&amp;Fn(&amp;WithFooBar)</code> is not <code>&amp;Fn(&amp;WithFoo)</code>, but given that the <code>WithFooBar</code> trait inherits from <code>WithFoo</code>, is seems like it should be possible to pass a pointer to this function.</p>\n\n<p>Is it possible to somehow \"downcast\" the function pointer to type <code>&amp;Fn(&amp;WithFoo)</code>? I have tried both this:</p>\n\n<pre><code> let f = &amp;foobar_caller as &amp;Fn(&amp;WithFoo);\n invoke(f,&amp;data);\n</code></pre>\n\n<p>and this:</p>\n\n<pre><code> let f: &amp;Fn(&amp;WithFoo) = &amp;foobar_caller;\n invoke(f,&amp;data);\n</code></pre>\n\n<p>But neither of these attempts works.</p>\n\n<p>(This example is on the rust playground <a href=\"https://play.rust-lang.org/?code=trait%20WithFoo%20%7B%0A%20%20%20%20fn%20foo(%26self)%3B%0A%7D%0A%0Atrait%20WithFooBar%3A%20WithFoo%20%7B%0A%20%20%20%20fn%20bar(%26self)%3B%0A%7D%0A%0Astruct%20MyStruct%20%7B%0A%7D%0A%0Aimpl%20WithFoo%20for%20MyStruct%20%7B%0A%20%20%20%20fn%20foo(%26self)%20%7B%0A%20%20%20%20%20%20%20%20println!(%22foo%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0Aimpl%20WithFooBar%20for%20MyStruct%20%7B%0A%20%20%20%20fn%20bar(%26self)%20%7B%0A%20%20%20%20%20%20%20%20println!(%22bar%22)%3B%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20foobar_caller(wf%3A%20%26WithFooBar)%20%7B%0A%20%20%20%20wf.foo()%3B%0A%20%20%20%20wf.bar()%3B%0A%7D%0A%0Afn%20invoke(x%3A%20%26Fn(%26WithFoo)%2C%20y%3A%20%26MyStruct)%20%7B%0A%20%20%20%20x(y)%3B%0A%7D%0A%0Afn%20main()%20%7B%0A%20%20%20%20let%20data%20%3D%20MyStruct%20%7B%7D%3B%0A%20%20%20%20invoke(%26foobar_caller%2C%26data)%3B%0A%7D%0A&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow\">here</a>.)</p>\n"}, {"tags": ["unit-testing", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1465047512, "post_id": 37626348, "comment_id": 62743527, "body": "What have you tried? Have you read the <a href=\"http://doc.rust-lang.org/stable/book/testing.html\" rel=\"nofollow noreferrer\">testing section of <i>The Rust Programming Language</i></a>?"}], "answers": [{"tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 4, "last_activity_date": 1465017992, "creation_date": 1465017992, "answer_id": 37626704, "question_id": 37626348, "link": "https://stackoverflow.com/questions/37626348/how-do-i-test-a-code-in-a-sub-sub-directory/37626704#37626704", "title": "How do I test a code in a sub-sub-directory?", "body": "<p>One way would be to create <code>tests/tests.rs</code> with the following contents:</p>\n\n<pre><code>mod foo {\n    mod foo; // this will include `tests/foo/foo.rs`\n}\n</code></pre>\n\n<p>If you run <code>cargo test</code> after this, it will run the <code>test_foo</code> test function:</p>\n\n<pre><code>$ cargo test\n     Running target/debug/tests-0b79a5e208e85ac6\n\nrunning 1 test\ntest foo::foo::test_foo::test_foo ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1079, "user_id": 1078465, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c39968962a7062a69d24cdd78236a12b?s=128&d=identicon&r=PG", "display_name": "cbarrick", "link": "https://stackoverflow.com/users/1078465/cbarrick"}, "is_accepted": false, "score": 0, "last_activity_date": 1616339382, "creation_date": 1616339382, "answer_id": 66733964, "question_id": 37626348, "link": "https://stackoverflow.com/questions/37626348/how-do-i-test-a-code-in-a-sub-sub-directory/66733964#66733964", "title": "How do I test a code in a sub-sub-directory?", "body": "<p>You can also use <code>#[path = &quot;foo/foo.rs&quot;]</code>, like this:</p>\n<p>Source layout:</p>\n<pre><code>.\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src/\n\u2514\u2500\u2500 tests/\n    \u251c\u2500\u2500 tests.rs\n    \u2514\u2500\u2500 foo/\n        \u2514\u2500\u2500 foo.rs\n</code></pre>\n<p>tests/tests.rs:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[path = &quot;foo/foo.rs&quot;]\nmod foo;\n</code></pre>\n<p>tests/foo/foo.rs:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>mod test_foo {\n    #[test]\n    fn test_foo() {\n        assert!(true);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 324, "user_id": 6404493, "user_type": "registered", "accept_rate": 70, "profile_image": "https://lh4.googleusercontent.com/-QF_KjsaaOBg/AAAAAAAAAAI/AAAAAAAAAAs/bt_kVOXPWqs/photo.jpg?sz=128", "display_name": "signal", "link": "https://stackoverflow.com/users/6404493/signal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 585, "favorite_count": 0, "accepted_answer_id": 37626704, "answer_count": 2, "score": 1, "last_activity_date": 1616339382, "creation_date": 1465014420, "last_edit_date": 1465014885, "question_id": 37626348, "link": "https://stackoverflow.com/questions/37626348/how-do-i-test-a-code-in-a-sub-sub-directory", "title": "How do I test a code in a sub-sub-directory?", "body": "<p>In Rust, how do I test a code in a sub-sub-directory, with <code>cargo test</code> command?</p>\n\n<pre><code>program\n `\u2500 src\n |   `\u2500 main.rs\n `\u2500 tests\n     `\u2500 foo\n         `\u2500 foo.rs\n</code></pre>\n\n<p>main.rs:</p>\n\n<pre><code>fn main() {\n}\n</code></pre>\n\n<p>foo.rs:</p>\n\n<pre><code>mod test_foo {\n    #[test]\n    fn test_foo() {\n        assert!(true);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 2, "creation_date": 1464998867, "post_id": 37624947, "comment_id": 62732600, "body": "Can you please include a full example including the actual error message?"}], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": false, "score": 2, "last_activity_date": 1465006217, "last_edit_date": 1465006217, "creation_date": 1465005899, "answer_id": 37625653, "question_id": 37624947, "link": "https://stackoverflow.com/questions/37624947/unit-tests-with-rust/37625653#37625653", "title": "Unit tests with Rust", "body": "<p>Your functions aren't in scope.</p>\n\n<p>Assuming your module layout is like this:</p>\n\n<pre><code>pub fn kelvin_to_celcius(k: f32) -&gt; (bool, f32)\n{\n    if k &lt; 0f32\n    {\n        return (false, k);\n    }\n    else\n    {\n        return (true, k - 273.15);\n    }\n}\n\n#[cfg(test)]\nmod TemperatureTests {\n    ...\n}\n</code></pre>\n\n<p>Then you'll need to bring the function into scope for your test module. The idiomatic way to do this is like this:</p>\n\n<pre><code>#[cfg(test)]\nmod TemperatureTests { \n    use super::*; // &lt;--- use everything declared in the parent module\n    ...\n}\n</code></pre>\n\n<p>This allows everything in the enclosing module to be used in your test module without any qualifiers.</p>\n\n<p>Alternatively, you would be able to change your calls for the method to this:</p>\n\n<pre><code>let calc = super::kelvin_to_celcius(-4f32); // &lt;-- note, \"super\" .. you want to go into the outer scope to find the method\n assert_eq!(calc.0,true);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 1, "last_activity_date": 1465014843, "creation_date": 1465014843, "answer_id": 37626392, "question_id": 37624947, "link": "https://stackoverflow.com/questions/37624947/unit-tests-with-rust/37626392#37626392", "title": "Unit tests with Rust", "body": "<p><code>use MathsLib::Conversions::Temperature;</code> adds the <code>Temperature</code> symbol to the module's scope, but it doesn't add any of the symbols in the <code>Temperature</code> module. If you want to do that, you need to write this instead:</p>\n\n<pre><code>use MathsLib::Conversions::Temperature::*;\n</code></pre>\n"}], "owner": {"reputation": 1141, "user_id": 1058543, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/f7cf7f17302b550d2dfda1c4f1eb1b29?s=128&d=identicon&r=PG", "display_name": "Nodoid", "link": "https://stackoverflow.com/users/1058543/nodoid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1465047599, "creation_date": 1464997521, "last_edit_date": 1465047599, "question_id": 37624947, "link": "https://stackoverflow.com/questions/37624947/unit-tests-with-rust", "title": "Unit tests with Rust", "body": "<p>I have created a small maths library with a directory structure</p>\n\n<p>mathslib -> <code>src</code> -> <code>lib.rs</code> -> conversions / stats / trig / bases</p>\n\n<p>All of the modules are declared as being <code>pub</code> and the functions also as <code>pub</code>.</p>\n\n<p>I've written the following test for just one function, but when I run <code>cargo test</code>, I'm met with an error that the function can't be resolved (E0425).</p>\n\n<pre><code>extern crate MathsLib;\n\nuse MathsLib::Conversions::Temperature;\n\n#[cfg(test)]\nmod TemperatureTests {\n    #[test]\n    fn test_kelvin_to_celcius_pass() {\n         let calc = kelvin_to_celcius(14.5);\n         assert_eq!(calc.0, true);\n    }\n\n    #[test]\n    #[should_panic(expected = \"assertion failed\")]\n    fn test_kelvin_to_celcius_fail() {\n         let calc = kelvin_to_celcius(-4f32);\n         assert_eq!(calc.0,true);\n    }\n}\n</code></pre>\n\n<p>From what I can see from the docs, this should be fine - but it's obviously not.</p>\n\n<p>The function in question looks like this</p>\n\n<pre><code>pub fn kelvin_to_celcius(k: f32) -&gt; (bool, f32)\n{\n    if k &lt; 0f32\n    {\n        return (false, k);\n    }\n    else\n    {\n        return (true, k - 273.15);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "libusb"], "answers": [{"comments": [{"owner": {"reputation": 1055, "user_id": 980655, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/67e726fceece1a161b22b71b101c9d73?s=128&d=identicon&r=PG", "display_name": "Jason Martens", "link": "https://stackoverflow.com/users/980655/jason-martens"}, "edited": false, "score": 0, "creation_date": 1464989348, "post_id": 37623109, "comment_id": 62729890, "body": "Thanks for the great response. Another option that might work in some situations is iter_mut(), but unfortunately libusb doesn&#39;t implement it."}, {"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "reply_to_user": {"reputation": 1055, "user_id": 980655, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/67e726fceece1a161b22b71b101c9d73?s=128&d=identicon&r=PG", "display_name": "Jason Martens", "link": "https://stackoverflow.com/users/980655/jason-martens"}, "edited": false, "score": 1, "creation_date": 1464990064, "post_id": 37623109, "comment_id": 62730173, "body": "In general, <code>iter_mut</code> produces <code>Item = &amp;mut T</code>, so <code>&amp;Item = &amp;&amp;mut T</code>. That means that the filter function cannot mutate the item... See <a href=\"https://play.rust-lang.org/?gist=f01e4c90f80a777c10f01e217e29f739&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 6, "last_activity_date": 1465047712, "last_edit_date": 1465047712, "creation_date": 1464986723, "answer_id": 37623109, "question_id": 37620491, "link": "https://stackoverflow.com/questions/37620491/mutate-item-in-iteratorfind/37623109#37623109", "title": "Mutate item in Iterator::find", "body": "<blockquote>\n  <p>Does this mean that it's impossible to use mutable methods on any of the Iterator's methods (<code>find</code>, <code>filter</code>, etc.)?</p>\n</blockquote>\n\n<p>In the methods that receive a parameter of type <code>F: Fn*(&amp;Self::Item)</code>, yes. One cannot call a method that expects a mutable reference (<code>&amp;mut</code>) on a reference (<code>&amp;</code>). For example:</p>\n\n<pre><code>let mut x = vec![10];\n// (&amp;x)[0] = 20; // not ok\n(&amp;mut x)[0] = 20; // ok\n\n//(&amp; (&amp;x))[0] = 20; // not ok \n//(&amp; (&amp;mut x))[0] = 20; // not ok\n(&amp;mut (&amp;mut x))[0] = 20; // ok\n</code></pre>\n\n<p>Note that this rule also applies to auto deref.</p>\n\n<p>Some methods of <code>Iterator</code> receive a parameter of type <code>F: Fn*(Self::Item)</code>, like <code>map</code>, <code>filter_map</code>, etc. These methods allow functions that mutate the item.</p>\n\n<hr>\n\n<p>One interesting question is: Why do some methods expect <code>Fn*(&amp;Self::Item)</code> and others <code>Fn*(Self::item)</code>?</p>\n\n<p>The methods that will need to use the item, like <code>filter</code> (that will return the item if the filter function returns <code>true</code>), cannot pass <code>Self::Item</code> as parameter to the function, because doing that means give the ownership of the item to the function. For this reason, methods like <code>filter</code> pass <code>&amp;Self::Item</code>, so they can use the item later.</p>\n\n<p>On the other hand, methods like <code>map</code> and <code>filter_map</code> do not need the item after they are used as arguments (the items are being mapped after all), so they pass the item as <code>Self::Item</code>.</p>\n\n<hr>\n\n<p>In general, it is possible to use <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.filter_map\" rel=\"nofollow\"><code>filter_map</code></a> to replace the use of <code>filter</code> in cases that the items need to be mutated. In your case, you can do this:</p>\n\n<pre><code>extern crate libusb;\n\nfn main() {\n    let mut context = libusb::Context::new().expect(\"context creation\");\n\n    let mut filtered: Vec&lt;_&gt; = context.devices()\n        .expect(\"devices list\")\n        .iter()\n        .filter_map(|mut r| {\n            if let Ok(d) = r.device_descriptor() {\n                if d.vendor_id() == 7531 {\n                    return Some(r);\n                }\n            }\n            None\n        })\n        .collect();\n\n    for d in &amp;mut filtered {\n        // same as: for d in filtered.iter_mut()\n        println!(\"{:?}\", d.device_descriptor());\n    }\n}\n</code></pre>\n\n<p>The <code>filter_map</code> filters out <code>None</code> values and produces the wrapped values in <code>Some</code>s.</p>\n"}], "owner": {"reputation": 1055, "user_id": 980655, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/67e726fceece1a161b22b71b101c9d73?s=128&d=identicon&r=PG", "display_name": "Jason Martens", "link": "https://stackoverflow.com/users/980655/jason-martens"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 504, "favorite_count": 1, "accepted_answer_id": 37623109, "answer_count": 1, "score": 6, "last_activity_date": 1465047712, "creation_date": 1464975652, "last_edit_date": 1464989751, "question_id": 37620491, "link": "https://stackoverflow.com/questions/37620491/mutate-item-in-iteratorfind", "title": "Mutate item in Iterator::find", "body": "<p>I would like to use <code>Iterator::find</code> on <a href=\"http://dcuddeback.github.io/libusb-rs/libusb/struct.Devices.html\" rel=\"nofollow\"><code>libusb::Devices</code></a> object, which has a signature like so: </p>\n\n<pre><code>fn find&lt;P&gt;(&amp;mut self, predicate: P) -&gt; Option&lt;Self::Item&gt; \n    where Self: Sized, P: FnMut(&amp;Self::Item) -&gt; bool\n</code></pre>\n\n<p>I want to find a device with a particular <code>vendor_id</code>, which requires calling <a href=\"http://dcuddeback.github.io/libusb-rs/libusb/struct.Device.html#method.device_descriptor\" rel=\"nofollow\"><code>Device::device_descriptor</code></a> on each device. However, the <code>device_descriptor</code> method requires a <code>&amp;mut</code> to each device, and the find method only gives a <code>&amp;</code>. </p>\n\n<p>Does this mean that it's impossible to use mutable methods on any of the Iterator's methods (<code>find</code>, <code>filter</code>, etc.)?</p>\n\n<p>Here's the example I'm trying to get working:</p>\n\n<pre><code>let mut device = context\n    .devices()\n    .unwrap()\n    .iter()\n    .find(&amp;mut |dev: &amp;libusb::Device| { \n         dev.device_descriptor().unwrap().vendor_id() == vendor_id\n     })\n    .unwrap();\n</code></pre>\n\n<p>Here is the error I'm getting:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: cannot borrow immutable borrowed content `*dev` as mutable\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "edited": false, "score": 0, "creation_date": 1464977967, "post_id": 37620653, "comment_id": 62724653, "body": "I know how to use the bitmask and it has bit shifting which allows one to compare one of the constants values. I thought about the list of constants but thought that there was something a little better. And also, you constants don&#39;t match the test at all. I can&#39;t change the tests so Allergen::Peanuts is how it needs to state not snake case unfortunately. But thanks."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "edited": false, "score": 0, "creation_date": 1464978369, "post_id": 37620653, "comment_id": 62724853, "body": "@macshaggy: As I said, Rust doesn&#39;t support bit flags natively. (You could try <a href=\"http://rustbyexample.com/custom_types/enum/c_like.html\" rel=\"nofollow noreferrer\">C-style enum</a> but they don&#39;t work like bit-flags.)"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "edited": false, "score": 0, "creation_date": 1464978532, "post_id": 37620653, "comment_id": 62724933, "body": "@macshaggy If you use the <code>bitflags</code> crates the constants should be named LIKE_THIS because they are defined as module constants and that&#39;s the standard naming convention. You could call it <code>Cats</code> make a <code>mod Allegens { pub use {Cats, ...} }</code> but that is ugly :)."}, {"owner": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "edited": false, "score": 0, "creation_date": 1464979351, "post_id": 37620653, "comment_id": 62725307, "body": "I understand what you are saying but the tests are what they are and I can&#39;t change them. Again, this is an exercise given to me and I have to code towards the test and external crates are not to be used."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "edited": false, "score": 0, "creation_date": 1464980228, "post_id": 37620653, "comment_id": 62725758, "body": "@macshaggy The tests don&#39;t reflect how Rust is commonly written then <i>Sigh</i>. See update."}, {"owner": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "edited": false, "score": 0, "creation_date": 1464980880, "post_id": 37620653, "comment_id": 62726068, "body": "can enums have methods? UPDATE: never mind I think I know how to implement the methods. And once I get it working I&#39;ll post it here to show you how you can bit shift values using the input as the bitmask."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": false, "score": 0, "last_activity_date": 1464980046, "last_edit_date": 1464980046, "creation_date": 1464976318, "answer_id": 37620653, "question_id": 37620477, "link": "https://stackoverflow.com/questions/37620477/learning-rust-and-documentation/37620653#37620653", "title": "Learning Rust and Documentation", "body": "<p>Rust doesn't have a bitflags type in the language or standard library. But there is a <a href=\"https://doc.rust-lang.org/bitflags/bitflags/macro.bitflags!.html#example\" rel=\"nofollow\">bitflags</a> crate, which you could write</p>\n\n<pre><code>#[macro_use] extern crate bitflags;\n\nbitflags! {\n    flags Allergies: u32 {\n        const ALLERGEN_EGGS = 1,\n        const ALLERGEN_PEANUTS = 2,\n        ...\n        const ALLERGEN_CATS = 128,\n    }\n}\n\nimpl Allergies {\n    pub fn is_allergic_to(&amp;self, other: &amp;Allergies) -&gt; bool {\n        self.intersects(*other)\n    }\n}\n\nlet allergies = Allergies::empty();\nassert!(!allergies.is_allergic_to(&amp;ALLERGEN_CATS));\n// ^ unfortunately we don't support associated constants \n//   so we have to name it ALLERGEN_CATS instead of Allergies::CATS.\nassert_eq!((ALLERGEN_PEANUTS | ALLERGEN_CHOCOLATE).bits(), 34);\n</code></pre>\n\n<p>Don't forget to add <code>bitflags</code> to the <code>[dependency]</code> section in your Cargo.toml.</p>\n\n<hr>\n\n<p>If you don't want to depend on an external crate, you could base your type on integer types together with the bitwise operations. <a href=\"https://en.wikipedia.org/wiki/Bitwise_operations_in_C\" rel=\"nofollow\">They are the same as C</a> <em>except</em> that we use <code>!</code> instead of <code>~</code> for bitwise-not.</p>\n\n<p>The constants have to be defined in a <a href=\"https://doc.rust-lang.org/book/crates-and-modules.html#defining-modules\" rel=\"nofollow\">separate module</a>:</p>\n\n<pre><code>#[allow(non_upper_case_globals)] // &lt;- silence 8 warnings\nmod Allergen {\n    pub const Eggs: u32 = 1;  // &lt;- use a new type if you like\n    pub const Peanuts: u32 = 2;\n    ...\n    pub const Cats: u32 = 128;\n}\n</code></pre>\n\n<p>or as a C-style enum (associate enum members with <a href=\"https://doc.rust-lang.org/reference.html#enumerations\" rel=\"nofollow\">explicit discriminants</a>):</p>\n\n<pre><code>enum Allergen {\n    Eggs = 1,\n    Peanuts = 2,\n    ...\n    Cats = 128,\n}\n\nlet score = (Allergen::Peanuts as isize) | (Allergen::Chocolate as isize);\n</code></pre>\n\n<p>Both of which don't convey the concept that the values form bitflags. Seriously, you should avoid these bitflags-workarounds if you could use external crates.</p>\n"}], "owner": {"reputation": 187, "user_id": 288207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/66pIQ.jpg?s=128&g=1", "display_name": "macshaggy", "link": "https://stackoverflow.com/users/288207/macshaggy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 215, "favorite_count": 3, "answer_count": 1, "score": 1, "last_activity_date": 1484178586, "creation_date": 1464975583, "last_edit_date": 1484178586, "question_id": 37620477, "link": "https://stackoverflow.com/questions/37620477/learning-rust-and-documentation", "title": "Learning Rust and Documentation", "body": "<p>I'm working on an <a href=\"http://exercism.io\" rel=\"nofollow\">Exercism</a> exercise and I'm confronted with this:</p>\n\n<pre><code>fn test_no_allergies_means_not_allergic() {\n    let allergies = Allergies::new(0);\n    assert_eq!(false, allergies.is_allergic_to(&amp;Allergen::Peanuts));\n    assert_eq!(false, allergies.is_allergic_to(&amp;Allergen::Cats));\n    assert_eq!(false, allergies.is_allergic_to(&amp;Allergen::Strawberries));\n}\n</code></pre>\n\n<p>When I look at <code>Allergen::Peanuts</code>, I think that this is a symbol like Ruby, but I can't find anything in the documentation about it other than the idea of crates and modules. I can't seem to think that <code>Allergen</code> is a module with separate crates mainly because the <code>README</code> leads me to this: </p>\n\n<blockquote>\n  <p>The list of items (and their value) that were tested are:</p>\n  \n  <ul>\n  <li>eggs (1)</li>\n  <li>peanuts (2)</li>\n  <li>shellfish (4)</li>\n  <li>strawberries (8)</li>\n  <li>tomatoes (16)</li>\n  <li>chocolate (32)</li>\n  <li>pollen (64)</li>\n  <li>cats (128)</li>\n  </ul>\n  \n  <p>So if Tom is allergic to peanuts and chocolate, he gets a score of 34.</p>\n</blockquote>\n\n<p>It has to be some kind of enum with each of those values and some kind of bitmask but I just can't find any documentation to show me more about the symbols. I'm not willing to give up and I want to learn as much as possible about Rust but the docs seem lacking. </p>\n\n<p>Does anyone have any suggestions regarding enums, objects, symbols, and where can I get more documentation regarding Rust? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 10479, "user_id": 89744, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/115b71c0a1c9d92d0b78d51cd0174ee6?s=128&d=identicon&r=PG", "display_name": "Vikrant Chaudhary", "link": "https://stackoverflow.com/users/89744/vikrant-chaudhary"}, "edited": false, "score": 0, "creation_date": 1465025397, "post_id": 37616392, "comment_id": 62737351, "body": "quick question: what is the difference between <code>visit_mod</code> and <code>visit_item</code>? And why do you recommend overriding <code>visit_item</code> instead of <code>visit_mod</code>?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 10479, "user_id": 89744, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/115b71c0a1c9d92d0b78d51cd0174ee6?s=128&d=identicon&r=PG", "display_name": "Vikrant Chaudhary", "link": "https://stackoverflow.com/users/89744/vikrant-chaudhary"}, "edited": false, "score": 1, "creation_date": 1465201860, "post_id": 37616392, "comment_id": 62785095, "body": "<code>visit_mod</code> does not offer you the possibility to obtain the module name. At least not without querying the <code>TyCtxt</code>, which is somewhat overkill in this case. Also you don&#39;t get things like functions. So if you define a function inside a function, you wouldn&#39;t get the proper path when you just use modules to create the name."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 3, "last_activity_date": 1464962372, "creation_date": 1464962372, "answer_id": 37616392, "question_id": 37614007, "link": "https://stackoverflow.com/questions/37614007/how-can-i-get-the-absolute-name-of-a-syntaxastident/37616392#37616392", "title": "How can I get the absolute name of a syntax::ast::Ident?", "body": "<p>You can't. An <code>Ident</code> is just a name (+ some info about macro expansion).</p>\n\n<p>What you can do is use your visitor to build the module path, by also implementing the <code>visit_item</code> method and storing the current path:</p>\n\n<pre><code>fn visit_item(&amp;mut self, i: &amp;'v Item) {\n    self.modules.push(i.ident);\n    walk_item(self, i);\n    self.modules.pop();\n}\n</code></pre>\n\n<p>Then you can print the entire path:</p>\n\n<pre><code>for ident in &amp;self.modules {\n    print!(\"::{}\", ident.name.as_str());\n}\nprintln!(\"\");\n</code></pre>\n"}], "owner": {"reputation": 10479, "user_id": 89744, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/115b71c0a1c9d92d0b78d51cd0174ee6?s=128&d=identicon&r=PG", "display_name": "Vikrant Chaudhary", "link": "https://stackoverflow.com/users/89744/vikrant-chaudhary"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "accepted_answer_id": 37616392, "answer_count": 1, "score": 4, "last_activity_date": 1464962372, "creation_date": 1464955712, "question_id": 37614007, "link": "https://stackoverflow.com/questions/37614007/how-can-i-get-the-absolute-name-of-a-syntaxastident", "title": "How can I get the absolute name of a syntax::ast::Ident?", "body": "<p>I'm trying to extract the function name from following Rust code.</p>\n\n<pre><code>// example.rs\n\npub mod hello {\n    pub mod world {\n        pub fn greetings() {\n            println!(\"Hello, world!\")\n        }\n    }\n}\n</code></pre>\n\n<p>Here is code which tries to extract function name from <code>example.rs</code>.</p>\n\n<pre><code>//runner.rs\n\n/*\n * This program will only compile with nightly Rust\n *\n * To compile\n * rustc runner.rs\n *\n * To run\n * LD_LIBRARY_PATH=$(rustc --print sysroot)/lib ./runner\n*/\n\n#![feature(rustc_private)]\nextern crate syntax;\n\nuse syntax::visit::{ self, Visitor, FnKind };\nuse syntax::ast::{ FnDecl, Block, NodeId, Mac };\nuse syntax::codemap::{ Span };\nuse syntax::{ parse, ast };\nuse std::path::Path;\n\nstruct MyVisitor;\n\nimpl&lt;'x&gt; Visitor&lt;'x&gt; for MyVisitor {\n    fn visit_fn&lt;'v&gt;(&amp;mut self, fk: FnKind&lt;'v&gt;, fd: &amp;'v FnDecl, b: &amp;'v Block, s: Span, _: NodeId) {\n        let name;\n        match fk {\n            visit::FnKind::Method(_ident, ref _method_sig, _option) =&gt; {\n                name = (*_ident.name.as_str()).to_string();\n            }\n            visit::FnKind::ItemFn(_ident, ref _generics, _unsafety, _constness, _abi, _visibility) =&gt; {\n                name = (*_ident.name.as_str()).to_string();\n            }\n            visit::FnKind::Closure =&gt; {\n                name = \"\".to_string();\n            }\n        };\n        println!(\"{}\", name);\n        visit::walk_fn(self, fk, fd, b, s);\n    }\n\n    fn visit_mac&lt;'v&gt;(&amp;mut self, _mac: &amp;'v Mac) {\n        // do nothing\n        // just overriding here because parent panics as\n        // panic!(\"visit_mac disabled by default\");\n    }\n}\n\nfn build_crate(path: &amp;std::path::Path) -&gt; ast::Crate {\n    let sess = parse::ParseSess::new();\n    let filemap = sess.codemap().load_file(path).unwrap();\n    let cfg = ast::CrateConfig::new();\n    let reader = parse::lexer::StringReader::new(&amp;sess.span_diagnostic, filemap);\n    let mut parser = parse::parser::Parser::new(&amp;sess, cfg, Box::new(reader));\n    return parser.parse_crate_mod().unwrap();\n}\n\nfn main() {\n    let krate = build_crate(Path::new(\"./example.rs\"));\n    let mut visitor = MyVisitor {};\n    visit::walk_crate(&amp;mut visitor, &amp;krate);\n}\n</code></pre>\n\n<p>The problem is that it prints <code>greetings</code> as output, but I want the fully qualified name, i.e., <code>hello::world::greetings</code>. How do I do that?</p>\n"}, {"tags": ["generics", "rust", "bitvector"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1464958856, "post_id": 37613850, "comment_id": 62712740, "body": "I don&#39;t want to rain on your parade, but <code>Index::index</code> returns a <code>&amp;Output</code> so you cannot compute it on the fly..."}], "answers": [{"comments": [{"owner": {"reputation": 58553, "user_id": 2057294, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/7qZho.jpg?s=128&g=1", "display_name": "skiwi", "link": "https://stackoverflow.com/users/2057294/skiwi"}, "edited": false, "score": 0, "creation_date": 1464962279, "post_id": 37615333, "comment_id": 62715262, "body": "Thanks a lot! This was not immediately clear from the compiler errors until now. Is the <code>&amp;TRUE &amp;FALSE</code> &quot;hack&quot; intended or a language shortcoming at the moment? And lastly is there an idiomatic way to avoid copying <code>S: Sized + BitAnd&lt;usize, Output = S&gt; + Not + Eq + Copy + Zero</code> all over the place?"}, {"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "reply_to_user": {"reputation": 58553, "user_id": 2057294, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/7qZho.jpg?s=128&g=1", "display_name": "skiwi", "link": "https://stackoverflow.com/users/2057294/skiwi"}, "edited": false, "score": 0, "creation_date": 1465030243, "post_id": 37615333, "comment_id": 62738491, "body": "I believe it&#39;s a shortcoming at the moment, but I&#39;m not sure if it will be changed in the future. There are <a href=\"https://www.google.com/search?q=site%3Areddit.com%2Fr%2Frust+index+return+value\" rel=\"nofollow noreferrer\">many discussions</a> about this on the Rust subreddit, e.g. <a href=\"https://www.reddit.com/r/rust/comments/2umad5/the_output_of_the_index_trait_should_be_a_value/\" rel=\"nofollow noreferrer\">this</a> if you want to read detailed explanations."}, {"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "reply_to_user": {"reputation": 58553, "user_id": 2057294, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/7qZho.jpg?s=128&g=1", "display_name": "skiwi", "link": "https://stackoverflow.com/users/2057294/skiwi"}, "edited": false, "score": 0, "creation_date": 1465030625, "post_id": 37615333, "comment_id": 62738591, "body": "Yes, you can use trait inheritance for that. See <a href=\"http://stackoverflow.com/questions/26983355/is-there-a-way-to-combine-multiple-traits-in-order-to-define-a-new-trait\" title=\"is there a way to combine multiple traits in order to define a new trait\">stackoverflow.com/questions/26983355/&hellip;</a>. Demo: <a href=\"https://play.rust-lang.org/?gist=efa13f778d31cdd6f90e79962fd379d2&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 5, "last_activity_date": 1464959922, "last_edit_date": 1464959922, "creation_date": 1464959480, "answer_id": 37615333, "question_id": 37613850, "link": "https://stackoverflow.com/questions/37613850/binary-operation-cannot-be-applied-when-using-generics-for-a-bit-vector/37615333#37615333", "title": "Binary operation != cannot be applied when using generics for a bit vector", "body": "<p>This particular error here, in simple terms, means that the <code>Output</code> of <code>BitAnd</code>ing <code>S</code> and <code>usize</code> does not implement <code>PartialEq</code>. One fix would be to add a constraint that <code>S</code>'s <code>BitAnd&lt;usize&gt;</code>s <code>Output</code> is <code>S</code>:</p>\n\n<pre><code>BitAnd&lt;usize, Output = S&gt;\n</code></pre>\n\n<p>After this, you'll run into another error because you're comparing the value of the BitAnd to <code>0</code> and not to a value of type <code>S</code>. To fix that you can define your own <code>Zero</code> trait and use that or use Rust's unstable <code>std::num::Zero</code> and compare to <code>S::zero()</code>.</p>\n\n<p>You'll also have to make <code>S: Copy</code> so that doing the <code>BitAnd</code> doesn't consume the the value (or add <code>S: Clone</code> and explicitly clone before calling <code>BitAnd::bitand</code>).</p>\n\n<p>Finally you'll run into an error that your <code>index</code> must return a <code>&amp;bool</code> while you're returning a <code>bool</code>. You can use the trick <a href=\"https://github.com/contain-rs/bit-vec/blob/598b442a7769d0f4e8b19b53922ef7ec67318186/src/lib.rs#L169-L170\">bit-vec</a> uses to define 2 statics:</p>\n\n<pre><code>static TRUE: bool = true;\nstatic FALSE: bool = false;\n</code></pre>\n\n<p>and return <code>&amp;TRUE</code> or <code>&amp;FALSE</code> from <code>index</code>.</p>\n\n<p>Final working (on Nightly) code:</p>\n\n<pre><code>#![feature(zero_one)]\n\nuse std::cmp::Eq;\nuse std::num::Zero;\nuse std::ops::BitAnd;\nuse std::ops::Index;\nuse std::ops::Not;\n\nstruct BitVector&lt;S = usize&gt;\n    where S: Sized + BitAnd&lt;usize, Output = S&gt; + Not + Eq + Copy + Zero\n{\n    data: Vec&lt;S&gt;,\n    capacity: usize,\n}\n\nimpl&lt;S&gt; BitVector&lt;S&gt;\n    where S: Sized + BitAnd&lt;usize, Output = S&gt; + Not + Eq + Copy + Zero\n{\n    fn with_capacity(capacity: usize) -&gt; BitVector {\n        let len = (capacity / (std::mem::size_of::&lt;S&gt;() * 8)) + 1;\n        BitVector {\n            data: vec![0; len],\n            capacity: capacity,\n        }\n    }\n}\n\nstatic TRUE: bool = true;\nstatic FALSE: bool = false;\n\nimpl&lt;S&gt; Index&lt;usize&gt; for BitVector&lt;S&gt;\n    where S: Sized + BitAnd&lt;usize, Output = S&gt; + Not + Eq + Copy + Zero\n{\n    type Output = bool;\n\n    fn index(&amp;self, index: usize) -&gt; &amp;bool {\n        let data_index = index / (std::mem::size_of::&lt;S&gt;() * 8);\n        let remainder = index % (std::mem::size_of::&lt;S&gt;() * 8);\n        if (self.data[data_index] &amp; (1 &lt;&lt; remainder)) != S::zero() {\n            &amp;TRUE\n        } else {\n            &amp;FALSE\n        }\n    }\n}\n\nfn main() {\n}\n</code></pre>\n"}], "owner": {"reputation": 58553, "user_id": 2057294, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/7qZho.jpg?s=128&g=1", "display_name": "skiwi", "link": "https://stackoverflow.com/users/2057294/skiwi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1445, "favorite_count": 0, "accepted_answer_id": 37615333, "answer_count": 1, "score": 8, "last_activity_date": 1464959922, "creation_date": 1464955236, "question_id": 37613850, "link": "https://stackoverflow.com/questions/37613850/binary-operation-cannot-be-applied-when-using-generics-for-a-bit-vector", "title": "Binary operation != cannot be applied when using generics for a bit vector", "body": "<p>I'm in the process of implementing a Bit Vector class as an exercise, however only knowing Rust for less than a week I run into trouble with the following code:</p>\n\n<pre><code>use std::cmp::Eq;\nuse std::ops::BitAnd;\nuse std::ops::Index;\nuse std::ops::Not;\n\nstruct BitVector&lt;S = usize&gt; \n    where S: Sized + BitAnd&lt;usize&gt; + Not + Eq {\n    data: Vec&lt;S&gt;,\n    capacity: usize\n}\n\nimpl&lt;S&gt; BitVector&lt;S&gt;\n    where S: Sized + BitAnd&lt;usize&gt; + Not + Eq {\n    fn with_capacity(capacity: usize) -&gt; BitVector {\n        let len = (capacity / (std::mem::size_of::&lt;S&gt;() * 8)) + 1;\n        BitVector { data: vec![0; len], capacity: capacity }\n    }\n}\n\nimpl&lt;S&gt; Index&lt;usize&gt; for BitVector&lt;S&gt;\n    where S: Sized + BitAnd&lt;usize&gt; + Not + Eq {\n    type Output = bool;\n\n    fn index(&amp;self, index: usize) -&gt; &amp;bool {\n        let data_index = index / (std::mem::size_of::&lt;S&gt;() * 8);\n        let remainder = index % (std::mem::size_of::&lt;S&gt;() * 8);\n        (self.data[data_index] &amp; (1 &lt;&lt; remainder)) != 0\n    }\n}\n</code></pre>\n\n<p>The idea is that <code>S</code> can be one of for example <code>u8</code>, <code>u16</code>, <code>u32</code>, <code>u64</code> and <code>usize</code> to ensure that setting it to <code>0</code> in <code>with_capacity</code> creates a bit value for <code>S</code> that consists of all zeroes.</p>\n\n<p>The error I get is the following:</p>\n\n<blockquote>\n  <p>lib.rs:27:10: 27:50 error: binary operation <code>!=</code> cannot be applied to type <code>&lt;S as std::ops::BitAnd&lt;usize&gt;&gt;::Output</code> [E0369]<br>\n  lib.rs:27         (self.data[data_index] &amp; (1 &lt;&lt; remainder)) != 0<br>\n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>\n  lib.rs:27:10: 27:50 help: run <code>rustc --explain E0369</code> to see a detailed explanation<br>\n  lib.rs:27:10: 27:50 note: an implementation of <code>std::cmp::PartialEq</code> might be missing for <code>&lt;S as std::ops::BitAnd&lt;usize&gt;&gt;::Output</code><br>\n  lib.rs:27         (self.data[data_index] &amp; (1 &lt;&lt; remainder)) != 0\n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>\n  error: aborting due to previous error<br>\n  error: Could not compile <code>bit-vector</code>.</p>\n</blockquote>\n"}, {"tags": ["module", "rust", "traits"], "comments": [{"owner": {"reputation": 426981, "user_id": 596781, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a18405dd4b022837867d1f5453a05f41?s=128&d=identicon&r=PG", "display_name": "Kerrek SB", "link": "https://stackoverflow.com/users/596781/kerrek-sb"}, "edited": false, "score": 0, "creation_date": 1464945269, "post_id": 37610079, "comment_id": 62704229, "body": "<code>Battery</code> isn&#39;t a trait, it&#39;s a struct."}], "answers": [{"comments": [{"owner": {"reputation": 325, "user_id": 4697952, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/068aac36745cfeca9ef54dbeb62204f5?s=128&d=identicon&r=PG&f=1", "display_name": "Planet_Earth", "link": "https://stackoverflow.com/users/4697952/planet-earth"}, "edited": false, "score": 0, "creation_date": 1464944778, "post_id": 37610167, "comment_id": 62703920, "body": "Thank you, everything is working, I will give you &quot;best answer&quot; when I can."}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 12, "last_activity_date": 1464944534, "creation_date": 1464944534, "answer_id": 37610167, "question_id": 37610079, "link": "https://stackoverflow.com/questions/37610079/cant-understand-rust-module-system/37610167#37610167", "title": "Can&#39;t understand Rust module system", "body": "<p>Short answer: you don't need the <code>mod phone</code> in <code>phone.rs</code>. Just remove that and your code will work (assuming the rest of the code is correct).</p>\n\n<p>Longer answer: The following code in <code>main.rs</code>:</p>\n\n<pre><code>pub mod phone;\n</code></pre>\n\n<p>is equivalent to:</p>\n\n<pre><code>pub mod phone {\n    // literally insert the contents of phone.rs here\n}\n</code></pre>\n\n<p>so you don't need to wrap everything in <code>phone.rs</code> in <code>mod phone {}</code>.</p>\n\n<p>Your current code translates to:</p>\n\n<pre><code>pub mod phone {\n    pub mod phone {\n        pub struct Battery { ... }\n        ...\n    }\n}\n</code></pre>\n\n<p>which means you need to access <code>Battery</code> as <code>phone::phone::Battery</code> (and <code>Display</code> as <code>phone::phone::Display</code>, etc.) in <code>main.rs</code>.</p>\n"}], "owner": {"reputation": 325, "user_id": 4697952, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/068aac36745cfeca9ef54dbeb62204f5?s=128&d=identicon&r=PG&f=1", "display_name": "Planet_Earth", "link": "https://stackoverflow.com/users/4697952/planet-earth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 543, "favorite_count": 0, "accepted_answer_id": 37610167, "answer_count": 1, "score": 4, "last_activity_date": 1465046968, "creation_date": 1464944202, "last_edit_date": 1465046968, "question_id": 37610079, "link": "https://stackoverflow.com/questions/37610079/cant-understand-rust-module-system", "title": "Can&#39;t understand Rust module system", "body": "<p>I created a simple project for educational purpose, so I have a main function and 3 traits <code>Battery</code>, <code>Display</code> and <code>GSM</code> and implementations for them. I want the the main function to be in file main.rs and the 3 traits in another file called phone.rs:</p>\n\n<p><strong>phone.rs</strong></p>\n\n<pre><code>mod phone{\n    pub struct Battery{\n        model : String,\n        hours_idle : i16,\n        hours_talk : i16\n    }\n\n    pub struct Display{\n        size : i16,\n        number_of_colors : i32\n    }\n\n    pub struct GSM{\n        model : String,\n        manufactor : String,\n        price : f32,\n        owner : String,\n        battery: Battery,\n        display : Display\n    }\n\n     impl Battery {\n        pub fn new(model : String, hours_idle : i16, hours_talk : i16) -&gt; Battery{\n            Battery {model : model, hours_idle : hours_idle ,hours_talk : hours_talk}\n        }\n        pub fn print(&amp;self){\n            println!(\"Battery model: {}\", self.model);\n            println!(\"Hours idle: {}\", self.hours_idle);\n            println!(\"hours talk: {}\", self.hours_talk);\n        }\n    }\n\n    impl Display {\n        pub fn new(size: i16, number_of_colors : i32) -&gt; Display{\n            Display{size : size, number_of_colors : number_of_colors}\n        }\n        pub fn print(&amp;self){\n            println!(\"size: {}\", self.size);\n            println!(\"number_of_colors: {}\", self.number_of_colors);\n        }\n    }\n\n     impl GSM {\n        pub fn new(model : String, manufactor : String, price : f32, owner : String, battery : Battery, display : Display) -&gt; GSM{\n            GSM{model : model, manufactor : manufactor, price : price, owner : owner, battery : battery, display : display }\n        }\n        pub fn print(&amp;self){\n            println!(\"Model: {}, Manufactor: {}\", self.model, self.manufactor);\n            println!(\"price: {}\", self.price);\n            println!(\"owner: {}\", self.owner);\n            self.battery.print();\n            self.display.print();\n        }\n    }\n}\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>pub mod phone;\nfn main(){\n    let battey = phone::Battery::new(\"modelBattery\".to_string(), 1,2);\n    let display =  phone::Display::new(10,20);\n    //model : String, manufactor : String, price : f32, owner : String, baterry : Battery, display : Display\n    let gsm =  phone::GSM::new(\"modelPhone\".to_string(), \"manufactor\".to_string(), 100.0, \"owner\".to_string(), battey, display);\n    gsm.print();\n}\n</code></pre>\n\n<p>At first, everything was in one file (main.rs) and everything worked fine (there was some difference for example I added <code>phone::</code> in front of <code>Display</code>, <code>GSM</code> and <code>Battery</code> in main.rs), when I moved the traits and added <code>mod phone{}</code> in phone.rs, and <code>pub mod phone</code> in main.rs, I got the following errors from the compiler:</p>\n\n<pre><code>src\\main.rs:3:18: 3:37 error: failed to resolve. Could not find `Battery` in `phone` [E0433]\nsrc\\main.rs:3     let battey = phone::Battery::new(\"modelBattery\".to_string(), 1,2);\n                               ^~~~~~~~~~~~~~~~~~~\nsrc\\main.rs:3:18: 3:37 help: run `rustc --explain E0433` to see a detailed explanation\nsrc\\main.rs:3:18: 3:37 error: unresolved name `phone::Battery::new` [E0425]\nsrc\\main.rs:3     let battey = phone::Battery::new(\"modelBattery\".to_string(), 1,2);\n                               ^~~~~~~~~~~~~~~~~~~\nsrc\\main.rs:3:18: 3:37 help: run `rustc --explain E0425` to see a detailed explanation\nsrc\\main.rs:4:20: 4:39 error: failed to resolve. Could not find `Display` in `phone` [E0433]\nsrc\\main.rs:4     let display =  phone::Display::new(10,20);\n                                 ^~~~~~~~~~~~~~~~~~~\nsrc\\main.rs:4:20: 4:39 help: run `rustc --explain E0433` to see a detailed explanation\nsrc\\main.rs:4:20: 4:39 error: unresolved name `phone::Display::new` [E0425]\nsrc\\main.rs:4     let display =  phone::Display::new(10,20);\n                                 ^~~~~~~~~~~~~~~~~~~\nsrc\\main.rs:4:20: 4:39 help: run `rustc --explain E0425` to see a detailed explanation\nsrc\\main.rs:6:16: 6:31 error: failed to resolve. Could not find `GSM` in `phone` [E0433]\nsrc\\main.rs:6     let gsm =  phone::GSM::new(\"modelPhone\".to_string(), \"manufactor\".to_string(), 100.0, \"owner\".to_string(), battey, display);\n                             ^~~~~~~~~~~~~~~\nsrc\\main.rs:6:16: 6:31 help: run `rustc --explain E0433` to see a detailed explanation\nsrc\\main.rs:6:16: 6:31 error: unresolved name `phone::GSM::new` [E0425]\nsrc\\main.rs:6     let gsm =  phone::GSM::new(\"modelPhone\".to_string(), \"manufactor\".to_string(), 100.0, \"owner\".to_string(), battey, display);\n                             ^~~~~~~~~~~~~~~\nsrc\\main.rs:6:16: 6:31 help: run `rustc --explain E0425` to see a detailed explanation\nsrc\\main.rs:7:5: 7:16 error: the type of this value must be known in this context\nsrc\\main.rs:7     gsm.print();\n</code></pre>\n\n<p>I don't understand them, I searched here and in Google, but I failed to find a solution. Also I get a lot of warning that the methods in phone.rs are never used <code>#[warn(dead_code)]</code>, any help is appreciated.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 344, "user_id": 1262369, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4e4d513de6e4a123e369bcebfa21700?s=128&d=identicon&r=PG", "display_name": "dpzmick", "link": "https://stackoverflow.com/users/1262369/dpzmick"}, "edited": false, "score": 0, "creation_date": 1464928700, "post_id": 37606035, "comment_id": 62696189, "body": "rust playground link: <a href=\"https://play.rust-lang.org/?code=use%20std%3A%3Afmt%3A%3ADebug%3B%0A%0Afn%20test%3CF%2C%20I%3A%20Debug%3E(gen%3A%20F)%20where%20F%3A%20Fn(fn(I)%20-%3E%20I)%20-%3E%20I%20%7B%0A%20%20%20%20fn%20input%3CI%3A%20Debug%3E(x%3A%20I)%20-%3E%20I%20%7B%0A%20%20%20%20%20%20%20%20x%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20gen(input))%3B%0A%7D%0A%0Afn%20main()%20%7B%0A%20%20%20%20test(%7Cinput%7C%20%7B%0A%20%20%20%20%20%20%20%20input(10)%3B%0A%20%20%20%20%20%20%20%20input(10.0)%0A%20%20%20%20%7D)%3B%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1464931015, "post_id": 37606035, "comment_id": 62696857, "body": "I&#39;m... not sure this would ever work? You&#39;re calling <code>test</code> which will be monomorphized to be u32 based on the inference of the first call to the <code>gen</code> closure. If you want a separate one.. you&#39;ll need to call <code>test</code> again.. separately. I&#39;m &quot;compiling&quot; this in my head and I just don&#39;t see how it would be possible in this or any other language, because the inference will waterfall down. Perhaps I am wrong though."}], "answers": [{"comments": [{"owner": {"reputation": 344, "user_id": 1262369, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4e4d513de6e4a123e369bcebfa21700?s=128&d=identicon&r=PG", "display_name": "dpzmick", "link": "https://stackoverflow.com/users/1262369/dpzmick"}, "edited": false, "score": 0, "creation_date": 1464977963, "post_id": 37607600, "comment_id": 62724649, "body": "This is a great answer. I&#39;ve accepted the other answer since my solution is more similar to it than it is to your answer, but you explanation of the issue is very, very good. Thank you!"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 6, "last_activity_date": 1464936177, "creation_date": 1464936177, "answer_id": 37607600, "question_id": 37606035, "link": "https://stackoverflow.com/questions/37606035/pass-generic-function-as-argument/37607600#37607600", "title": "Pass Generic Function as argument", "body": "<p>Very interesting question! I'm pretty sure it's <em>not</em> possible like that. </p>\n\n<p>Rust generics work by monomorphizing functions. This means that the Rust compiler will generate the machine code of the function for every concrete type the function is invoked with. Within one call of a function, the generic parameters are fixed. So since you call <code>test</code> exactly <em>once</em> in <code>main</code>, the generic parameters are fixed for that call. </p>\n\n<p>This implies that the closure type is fixed and that the <code>input</code> parameter of the closure has a concrete type, too. The compiler deduces all the types for us, but if we would try to annotate these, we quickly notice that we run into the same problem as the compiler:</p>\n\n<pre><code>test::&lt;_, usize&gt;   // we can't ever spell out a closure type, therefore '_'\n    (|input: fn(usize) -&gt; usize|   // we can't have a generic closure right now\n{\n    input(10);   // works\n    input(10.0)  // doesn't work\n});\n</code></pre>\n\n<hr>\n\n<p>This looks a lot like a use case for higher kinded types and generic closures. Both of those features are not available in Rust yet, AFAIK.</p>\n\n<p>However, you can still achieve what you want by using dynamic dispatch:</p>\n\n<pre><code>fn test&lt;F, I: Debug&gt;(gen: F) where F: Fn(fn(Box&lt;Debug&gt;) -&gt; Box&lt;Debug&gt;) -&gt; I {\n    fn input(x: Box&lt;Debug&gt;) -&gt; Box&lt;Debug&gt; {\n        x\n    }\n\n    println!(\"{:?}\", gen(input));\n}\n\nfn main() {\n    test(|input| {\n        input(Box::new(10));\n        input(Box::new(10.0))\n    });\n}\n</code></pre>\n\n<p>Of course, this is not as nice as the generic version, but at least it works. Also: if you don't actually need ownership in <code>input</code>, you can change <code>Box&lt;Debug&gt;</code> to <code>&amp;Debug</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 10, "last_activity_date": 1464938149, "creation_date": 1464938149, "answer_id": 37608197, "question_id": 37606035, "link": "https://stackoverflow.com/questions/37606035/pass-generic-function-as-argument/37608197#37608197", "title": "Pass Generic Function as argument", "body": "<p>As has been mentioned, unfortunately the call is monomorphized at the call site, so you cannot pass a generic function, you can only pass a monomorphized version of the generic function.</p>\n\n<p>What you <em>can</em> pass, however, is a function <em>builder</em>:</p>\n\n<pre><code>use std::fmt::Debug;\n\nstruct Builder;\n\nimpl Builder {\n    fn build&lt;I: Debug&gt;(&amp;self) -&gt; fn(I) -&gt; I {\n        fn input&lt;I: Debug&gt;(x: I) -&gt; I { x }\n        input\n    }\n}\n\nfn test&lt;F, T: Debug&gt;(gen: F)\n    where F: Fn(Builder) -&gt; T\n{\n    let builder = Builder;\n    println!(\"{:?}\", gen(builder));\n}\n\nfn main() {\n    test(|builder| {\n        builder.build()(10);\n        builder.build()(10.0)\n    });\n}\n</code></pre>\n\n<p>The <code>Builder</code> is able to generate instances of <code>input</code> on demand.</p>\n"}], "owner": {"reputation": 344, "user_id": 1262369, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4e4d513de6e4a123e369bcebfa21700?s=128&d=identicon&r=PG", "display_name": "dpzmick", "link": "https://stackoverflow.com/users/1262369/dpzmick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3890, "favorite_count": 2, "accepted_answer_id": 37608197, "answer_count": 2, "score": 15, "last_activity_date": 1600429168, "creation_date": 1464928661, "last_edit_date": 1600429168, "question_id": 37606035, "link": "https://stackoverflow.com/questions/37606035/pass-generic-function-as-argument", "title": "Pass Generic Function as argument", "body": "<p>I would like to be able to pass a generic function to another function (in this case a closure), without losing the &quot;genericness&quot; of the passed function. Since that's a pretty convoluted statement, here's an example:</p>\n<pre><code>use std::fmt::Debug;\n\nfn test&lt;F, I: Debug&gt;(gen: F) where F: Fn(fn(I) -&gt; I) -&gt; I {\n    fn input&lt;I: Debug&gt;(x: I) -&gt; I {\n        x\n    }\n    \n    println!(&quot;{:?}&quot;, gen(input));\n}\n\nfn main() {\n    test(|input| {\n        input(10);\n        input(10.0)\n    });\n}\n</code></pre>\n<p>This will not compile, because the value of <code>input</code> is type inferenced and no longer generic.</p>\n<p>Full error:</p>\n<pre><code>&lt;anon&gt;:14:15: 14:19 error: mismatched types:\n expected `_`,\n    found `_`\n(expected integral variable,\n    found floating-point variable) [E0308]\n&lt;anon&gt;:14         input(10.0)\n                        ^~~~\n</code></pre>\n<p>Is such a thing possible in rust?</p>\n<p>edit:</p>\n<p>Based on the solutions given, I've used the following to solve a similar problem:</p>\n<pre><code>#![feature(unboxed_closures)]\n#![feature(fn_traits)]\n\nuse std::ops::Fn;\nuse std::ops::Add;\nuse std::ops::FnMut;\n\nuse std::fmt::Debug;\n\nstruct Builder;\n\nimpl Builder {\n    pub fn build&lt;A: Add&lt;B&gt;, B: Add&lt;A&gt;&gt;(&amp;self) -&gt; fn(A, B) -&gt; &lt;A as std::ops::Add&lt;B&gt;&gt;::Output {\n        fn c&lt;A: Add&lt;B&gt;, B: Add&lt;A&gt;&gt;(a: A, b: B) -&gt; &lt;A as std::ops::Add&lt;B&gt;&gt;::Output {\n            a + b\n        }\n        \n        return c;\n    }\n}\n\nimpl&lt;A: Add&lt;B&gt;, B: Add&lt;A&gt;&gt; Fn&lt;(A, B)&gt; for Builder {\n    extern &quot;rust-call&quot; fn call(&amp;self, args: (A, B)) -&gt; &lt;A as std::ops::Add&lt;B&gt;&gt;::Output {\n        let (a1, a2) = args;\n        self.build()(a1, a2)\n    }\n}\n\nimpl&lt;A: Add&lt;B&gt;, B: Add&lt;A&gt;&gt; FnMut&lt;(A, B)&gt; for Builder {\n    extern &quot;rust-call&quot; fn call_mut(&amp;mut self, args: (A, B)) -&gt; &lt;A as std::ops::Add&lt;B&gt;&gt;::Output {\n        let (a1, a2) = args;\n        self.build()(a1, a2)\n    }\n}\n\nimpl&lt;A: Add&lt;B&gt;, B: Add&lt;A&gt;&gt; FnOnce&lt;(A, B)&gt; for Builder {\n    type Output = &lt;A as std::ops::Add&lt;B&gt;&gt;::Output;\n    extern &quot;rust-call&quot; fn call_once(self, args: (A, B)) -&gt; &lt;A as std::ops::Add&lt;B&gt;&gt;::Output {\n        let (a1, a2) = args;\n        self.build()(a1, a2)\n    }\n}\n\nfn test&lt;F, I: Debug&gt;(gen: F) where F: Fn(Builder) -&gt; I {\n    let b = Builder;\n    println!(&quot;{:?}&quot;, gen(b));\n}\n\nfn main() {\n    test(|builder| {\n        builder(10, 10);\n        builder(10.1, 10.0)\n    });\n}\n</code></pre>\n"}, {"tags": ["functional-programming", "rust"], "comments": [{"owner": {"reputation": 618, "user_id": 371553, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae9a752a5fd9bf94a3f9e9dfc39fea0c?s=128&d=identicon&r=PG", "display_name": "Michael Younkin", "link": "https://stackoverflow.com/users/371553/michael-younkin"}, "edited": false, "score": 0, "creation_date": 1464944977, "post_id": 37605352, "comment_id": 62704045, "body": "I&#39;m sure you have your reasons for asking, but do note that in Rust <code>mut</code> is not really frowned upon - it just isn&#39;t the default and shouldn&#39;t be used when not necessary. It&#39;s often the case that making something mutable will make the rest of the code simpler and faster, and this is something Rust encourages."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 2, "last_activity_date": 1464924792, "creation_date": 1464924792, "answer_id": 37605501, "question_id": 37605352, "link": "https://stackoverflow.com/questions/37605352/can-i-get-rid-of-mut-here/37605501#37605501", "title": "Can I get rid of &quot;mut&quot; here?", "body": "<p>In a purely functional language, you would need to define a recursive function. In Rust, it would look like this:</p>\n\n<pre><code>fn parse(my_str_vec: Vec&lt;&amp;str&gt;) -&gt; MyStruct {\n    let my_struct = MyStruct::new(0, 0, 0);\n    let regex1 = Regex::new(...);\n    let regex2 = Regex::new(...);\n\n    fn process_next&lt;I&gt;(regex1: Regex, regex2: Regex, mut str_iter: I, my_struct: MyStruct) -&gt; MyStruct\n        where I: Iterator, I::Item: AsRef&lt;str&gt;\n    {\n        match str_iter.next() {\n            Some(s_iter) =&gt; {\n                let my_struct = if regex1.is_match(s_iter.as_ref()) {\n                    let var1 = regex1.captures(\"var1\");\n                    MyStruct { field1: var1, ..my_struct }\n                } else if regex2.is_match(s_iter.as_ref()) {\n                    let var2 = regex2.captures(\"var2\");\n                    MyStruct { field2: var2, ..my_struct }\n                } else {\n                    my_struct\n                };\n\n                process_next(regex1, regex2, str_iter, my_struct)\n            }\n            None =&gt; my_struct\n        }\n    }\n\n    process_next(regex1, regex2, my_str_vec.iter(), my_struct)\n}\n</code></pre>\n\n<p>Note that there's still a <code>mut</code> in this code: we have to define <code>str_iter</code> as mutable, because calling <a href=\"http://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow\"><code>next()</code></a> requires the receiver to be mutable.</p>\n\n<p>While the inner function is tail recursive, Rust does not guarantee tail calls, so it could crash with a stack overflow if the input is too large. Personally, I'd rather use <code>mut</code> here, as in your original code, especially since <code>mut</code> in Rust implies no aliasing, which eliminates a whole class of potential bugs.</p>\n"}], "owner": {"reputation": 3025, "user_id": 6250601, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/fc7d2f54bb1971ee8fbfeaf100ed42f9?s=128&d=identicon&r=PG&f=1", "display_name": "Sojo", "link": "https://stackoverflow.com/users/6250601/sojo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1464924792, "creation_date": 1464923549, "last_edit_date": 1464923767, "question_id": 37605352, "link": "https://stackoverflow.com/questions/37605352/can-i-get-rid-of-mut-here", "title": "Can I get rid of &quot;mut&quot; here?", "body": "<p>I have a vector of strings and I want to extract some data from them and create a structure out of it. It looks something like this:</p>\n\n<pre><code>let mut my_struct = MyStruct::new(0, 0, 0);\nlet regex1 = Regex::new(\"...\");\nlet regex2 = Regex::new(\"...\");\n\nfor s_iter in my_str_vec.iter() {\n    if regex1.is_match(s_iter) {\n        // parsing the value\n        // .........\n        let var1 = regex1.captures(\"....\");\n\n        // and assign it to to a field of the struct instance\n        my_struct.field1 = var1;\n    }\n\n    // do the same thing for other fields each step in the loop\n    // each step only one regex gets triggered\n\n    if regex2.is_match(s_iter) {\n        // parsing the value\n        // .........\n        let var2 = regex12.captures(\"....\");\n\n        // and assign it to to a field of the struct instance\n        my_struct.field2 = var2;\n    }\n}\n\n// now \"my_struct\" is now completely initialized\n</code></pre>\n\n<p>As you can see, I have to use <code>mut</code> for the structure. Is there any way to do that without <code>mut</code>? I want to be able to initialize the struct all at once, without <code>mut</code>. Or I can consider other options without <code>mut</code> also.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1464897596, "post_id": 37600687, "comment_id": 62686958, "body": "Do you know if <code>trait Foo where ...</code> is conceptually valid? I see that it <i>compiles</i>, so the syntax is OK, but it just seems... strange."}, {"owner": {"reputation": 285, "user_id": 6198487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lUrJE.png?s=128&g=1", "display_name": "Tsukki", "link": "https://stackoverflow.com/users/6198487/tsukki"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1464897886, "post_id": 37600687, "comment_id": 62687100, "body": "You can imagine that I require some behavior of the associated type (<code>Baz</code>) so that when I use <code>Foo</code> in some implementation I can use that behavior, similar to how one might want to require some behavior of the inherited trait (<code>Bar</code>)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1464898011, "post_id": 37600687, "comment_id": 62687174, "body": "Sorry, I was unclear. Your <i>intent</i> is understandable enough (as it can be with metasyntactic variables like <code>Hoge</code>), I&#39;m mostly asking if you&#39;ve ever seen a <code>where</code> clause for a trait definition when there were no generic types; I&#39;m not sure I have."}, {"owner": {"reputation": 285, "user_id": 6198487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lUrJE.png?s=128&g=1", "display_name": "Tsukki", "link": "https://stackoverflow.com/users/6198487/tsukki"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1464899000, "post_id": 37600687, "comment_id": 62687695, "body": "I&#39;m not sure if I&#39;ve ever have. Might there be some other way to achieve my intent?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1464944059, "post_id": 37600687, "comment_id": 62703504, "body": "@Shepmaster, well, there <i>are</i> generic types: <code>Self</code> and all associated types are essentially generic type parameters, especially <code>Self</code>. Although it does indeed look strange; I wouldn&#39;t be surprised if this was another of those things which are allowed syntactically but has no semantic meaning to the compiler (I definitely saw something like it on Rust issue tracker)."}, {"owner": {"reputation": 285, "user_id": 6198487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lUrJE.png?s=128&g=1", "display_name": "Tsukki", "link": "https://stackoverflow.com/users/6198487/tsukki"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1464992850, "post_id": 37600687, "comment_id": 62731083, "body": "@VladimirMatveev Do you know why the <code>where T::Baz: Hoge</code> above is necessary?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1465013176, "post_id": 37600687, "comment_id": 62734791, "body": "Nope; I&#39;d answer if I knew."}], "answers": [{"comments": [{"owner": {"reputation": 285, "user_id": 6198487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lUrJE.png?s=128&g=1", "display_name": "Tsukki", "link": "https://stackoverflow.com/users/6198487/tsukki"}, "edited": false, "score": 0, "creation_date": 1465327583, "post_id": 37648087, "comment_id": 62852455, "body": "I see. I strongly disagree with this idea of excluding some reasonably expected behavior simply because it might make developing Rust harder. We should figure out what users want to type and work our best to match that."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 8, "last_activity_date": 1520850319, "last_edit_date": 1520850319, "creation_date": 1465172598, "answer_id": 37648087, "question_id": 37600687, "link": "https://stackoverflow.com/questions/37600687/requiring-a-trait-bound-on-the-associated-type-of-an-inherited-trait/37648087#37648087", "title": "Requiring a trait bound on the associated type of an inherited trait", "body": "<p>Sadly (or not), you have to repeat the bounds.</p>\n\n<p>Last year I opened a <a href=\"https://github.com/rust-lang/rust/issues/28055\" rel=\"nofollow noreferrer\">issue</a> thinking that the type checker was being inconsistent. The code is similar to yours.</p>\n\n<p>@arielb1 closed the issue and said that this was the intended behavior and gave this explanation:</p>\n\n<blockquote>\n  <p>The thing is that we don't want too many bounds to be implicitly\n  available for functions, as this can lead to fragility with distant\n  changes causing functions to stop compiling. There are basically 3\n  kinds of bounds available to a function:</p>\n  \n  <ul>\n  <li>bounds from explicit where-clauses - e.g. <code>T: B</code> when you have that clause. This includes the \"semi-explicit\" <code>Sized</code> bound.</li>\n  <li>bounds from supertraits of explicit where-clauses - a where-clause adds bounds for its supertraits (as <code>trait B: A</code>, the <code>T: B</code> bound adds a\n  <code>T: A</code> bound).</li>\n  <li>bounds from the lifetime properties of arguments (outlives/implicator/implied bounds). These are only lifetime bounds,\n  and irrelevant for the current problem. <a href=\"https://github.com/rust-lang/rfcs/pull/1214\" rel=\"nofollow noreferrer\">rust-lang/rfcs#1214</a> involved\n  them a great deal.</li>\n  </ul>\n  \n  <p>If your bound isn't in the list, you will have to add it explicitly if\n  you want to use it. I guess this should be a FAQ entry.</p>\n</blockquote>\n\n<p>Today I opened an <a href=\"https://github.com/rust-lang/rust/issues/34106\" rel=\"nofollow noreferrer\">issue</a> to request that this information to be added to the docs.</p>\n"}], "owner": {"reputation": 285, "user_id": 6198487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lUrJE.png?s=128&g=1", "display_name": "Tsukki", "link": "https://stackoverflow.com/users/6198487/tsukki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 880, "favorite_count": 0, "accepted_answer_id": 37648087, "answer_count": 1, "score": 12, "last_activity_date": 1520850319, "creation_date": 1464896275, "last_edit_date": 1464992776, "question_id": 37600687, "link": "https://stackoverflow.com/questions/37600687/requiring-a-trait-bound-on-the-associated-type-of-an-inherited-trait", "title": "Requiring a trait bound on the associated type of an inherited trait", "body": "<p>I have a trait <code>Foo</code> inheriting from another trait <code>Bar</code>. <code>Bar</code> has an associated type <code>Baz</code>. <code>Foo</code> constrains <code>Baz</code> such that <code>Baz</code> must implement <code>Hoge</code>.</p>\n\n<pre><code>trait Hoge {}\n\ntrait Bar {\n    type Baz;\n}\n\ntrait Foo: Bar where Self::Baz: Hoge {}\n</code></pre>\n\n<p>However, when I define a generic function requiring the generic type <code>T</code> to implement <code>Foo</code>,</p>\n\n<pre><code>// [DESIRED CODE]\nfn fizz&lt;T: Foo&gt;(buzz: T) {\n    // ...\n}\n</code></pre>\n\n<p><code>rustc</code> complains with <code>EO277</code> unless I constrain <code>T</code> explicitly:</p>\n\n<pre><code>fn fizz&lt;T: Foo&gt;(buzz: T) where T::Baz: Hoge {\n    // ...\n}\n</code></pre>\n\n<p>I do not understand why I need to do this. I would like to be able to write <code>[DESIRED CODE]</code>. What is the recommended way to do this?</p>\n"}, {"tags": ["bluetooth", "rust"], "comments": [{"owner": {"reputation": 175, "user_id": 6261072, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/886e0d325c0a3ffa8637cc0d7e65ccc4?s=128&d=identicon&r=PG&f=1", "display_name": "sandyre", "link": "https://stackoverflow.com/users/6261072/sandyre"}, "edited": false, "score": 0, "creation_date": 1464886334, "post_id": 37597248, "comment_id": 62680539, "body": "This code works really well, if I am connecting to 1 bluetooth and 1 device connected via usb (or 2 usb connected devices), so, I don&#39;t think it&#39;s problem in the code."}], "owner": {"reputation": 175, "user_id": 6261072, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/886e0d325c0a3ffa8637cc0d7e65ccc4?s=128&d=identicon&r=PG&f=1", "display_name": "sandyre", "link": "https://stackoverflow.com/users/6261072/sandyre"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 283, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1464886303, "creation_date": 1464884615, "last_edit_date": 1464886303, "question_id": 37597248, "link": "https://stackoverflow.com/questions/37597248/serial-rs-multiple-bluetooth-connections", "title": "serial-rs multiple bluetooth connections", "body": "<p>Using serial-rs it's possible to open a Bluetooth connection between my Mac and Arduino (HC-05). But if I want to open multiple Bluetooth connections at the same time, only the most recent connection stays open.</p>\n\n<p>I am not completely sure how Qt handles this, but it's possible to read/write to multiple devices same time using <code>QSerialPort</code>.</p>\n\n<p>Is this a serial-rs unimplemented feature, or does Qt do something like switching connections (to have only one opened in time) so it looks like multiple connections are handled?</p>\n\n<pre><code>extern crate serial;\n#[macro_use]\nextern crate text_io;\nuse std::process::Command;\nuse std::io;\nuse std::time::Duration;\nuse std::sync::mpsc::{Sender, Receiver};\nuse std::sync::mpsc;\nuse std::thread;\nuse std::io::prelude::*;\nuse serial::prelude::*;\nuse std::sync::Arc;\nuse std::sync::Mutex;\n\nfn print_available_ports() {\n    let status = Command::new(\"ls\")\n        .arg(\"/dev/\")\n        .status()\n        .unwrap_or_else(|e| panic!(\"Failed to execute process: {}\", e));\n}\n\nfn print_available_commands() {\n    println!(\"Available commands:\");\n    println!(\"  print_ports - prints available serial ports\");\n    println!(\"  connect - make an asynchronous connection to port\");\n    println!(\"  start - signal ports to start collecting data\");\n    println!(\"  stop - opposite to start\");\n    println!(\"  monitor - print info of current state of reading\");\n    println!(\"  help - prints this info.\");\n    println!(\"  exit\");\n}\n\nfn connect_to_port(portname: &amp;String,\n                   rate: usize,\n                   tx: Sender&lt;String&gt;,\n                   port_state: Arc&lt;Mutex&lt;bool&gt;&gt;)\n                   -&gt; io::Result&lt;()&gt; {\n    let mut port = serial::open(portname.trim()).unwrap();\n    try!(port.reconfigure(&amp;|settings| {\n        try!(settings.set_baud_rate(serial::BaudRate::from_speed(rate)));\n        settings.set_char_size(serial::Bits8);\n        settings.set_parity(serial::ParityNone);\n        settings.set_stop_bits(serial::Stop1);\n        settings.set_flow_control(serial::FlowNone);\n        Ok(())\n    }));\n\n    try!(port.set_timeout(Duration::from_millis(10000)));\n\n    println!(\"Serial port to {} opened successfully.\", portname);\n    println!(\"Waiting for the start..\");\n\n    while *(port_state.lock().unwrap()) != true {\n\n    }\n\n    println!(\"Port named {} started reading.\", portname);\n\n    let mut ans_number: usize = 0;\n    let mut answer = String::new();\n    let mut bytes_received: usize = 0;\n    let mut buf = vec![0;128];\n\n    loop {\n        match port.read(&amp;mut buf[..]) {\n            Ok(n) =&gt; {\n                bytes_received += n;\n            }\n            Err(_) =&gt; {\n                println!(\"Error in reading from {}\", portname);\n                bytes_received = bytes_received;\n            }\n        }\n\n        if bytes_received &gt; 10000 {\n            answer = String::new();\n            answer = format!(\"#{} Port {} received 10000 bytes of data\",\n                             ans_number,\n                             portname);\n            tx.send(answer);\n            bytes_received = 0;\n            ans_number += 1;\n        }\n\n        if *(port_state.lock().unwrap()) == false {\n            println!(\"Port named {} got signal to stop. Abort.\", portname);\n            break;\n        }\n    }\n\n    Ok(())\n}\n\nfn main() {\n    print_available_commands();\n\n    let mut reading_active = Arc::new(Mutex::new(false));\n    let (dtx, drx): (Sender&lt;String&gt;, Receiver&lt;String&gt;) = mpsc::channel();\n    let mut ports = vec![];\n    let mut input = String::new();\n\n    loop {\n        input = String::new();\n        match io::stdin().read_line(&amp;mut input) {\n            Ok(n) =&gt; println!(\"Command received: {}\", input.trim()),\n            Err(error) =&gt; println!(\"error: {}\", error),\n        }\n\n        match input.trim() {\n            \"connect\" =&gt; {\n                let portname: String;\n                let baudrate: usize;\n\n                println!(\"Enter port name:\");\n                portname = read!();\n\n                println!(\"Enter baudrate:\");\n                baudrate = read!();\n\n                let thread_state = reading_active.clone();\n                let thread_tx = dtx.clone();\n                ports.push(thread::Builder::new().name(portname.clone()).spawn(move || {\n                    connect_to_port(&amp;portname, baudrate, thread_tx, thread_state);\n                }));\n            }\n\n            \"start\" =&gt; {\n                *(reading_active.lock().unwrap()) = true;\n            }\n            \"stop\" =&gt; {\n                *(reading_active.lock().unwrap()) = false;\n            }\n            \"help\" =&gt; print_available_commands(),\n            \"print_ports\" =&gt; print_available_ports(),\n            \"exit\" =&gt; {\n                println!(\"Closing used ports..\");\n            }\n\n            \"monitor\" =&gt; {\n                loop {\n                    println!(\"{:?}\", drx.recv());\n                }\n            }\n            _ =&gt; println!(\"Unsupported command.\"),\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["printing", "rust", "stdout"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1464883503, "post_id": 37596759, "comment_id": 62678806, "body": "How do other languages solve the problem? The na&#239;ve solution is to print &quot;a lot&quot; of spaces, and a slightly better solution is to track how long the previous line was and write just that many spaces. Those both seem inelegant. You could also use a library like ncurses that handles some of these details for you."}, {"owner": {"reputation": 23, "user_id": 5958593, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3f339648ec3f23f4426594e4c3718da?s=128&d=identicon&r=PG&f=1", "display_name": "qolop", "link": "https://stackoverflow.com/users/5958593/qolop"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1464883703, "post_id": 37596759, "comment_id": 62678932, "body": "Yeah, I did read about adding spaces to solve this in other languages. I&#39;ll take a look at ncurses, thanks for bringing it to my attention."}], "answers": [{"tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 4, "last_activity_date": 1464920943, "last_edit_date": 1464920943, "creation_date": 1464906135, "answer_id": 37603097, "question_id": 37596759, "link": "https://stackoverflow.com/questions/37596759/how-do-i-prevent-characters-from-the-previous-line-from-appearing-when-overwriti/37603097#37603097", "title": "How do I prevent characters from the previous line from appearing when overwriting it in Rust?", "body": "<p>Some terminals have a special character sequence that, when printed, clears the line to the right of the current cursor position.</p>\n\n<p>VT100-compatible terminals have a character sequence EL0 for that. In Rust it can be expressed with <code>\"\\x1B[K\"</code>.</p>\n\n<p>Here's a little <a href=\"https://play.rust-lang.org/?code=%2F%2F%2F%20Helper%20printing%20the%20status%20message%20at%20the%20given%20intervals.%0A%23[derive%28Copy%2CClone%29]%0Apub%20struct%20ConsoleStatus%20%7B%0A%20%20%20%20interval%3A%20f32%2C%0A%20%20%20%20last_update%3A%20f64%2C%0A%20%20%20%20count%3A%20u32%2C%0A%20%20%20%20slash%3A%20u32%2C%0A%7D%0Aimpl%20ConsoleStatus%20%7B%0A%20%20%20%20pub%20fn%20new%28interval%3A%20f32%29%20-%3E%20ConsoleStatus%20%7B%0A%20%20%20%20%20%20%20%20ConsoleStatus%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20interval%3A%20interval%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20last_update%3A%200.0%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20count%3A%200%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20slash%3A%200%2C%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Escape%20sequence%20to%20%22Clear%20line%20from%20cursor%20right%22%20%28EL0%29.%20Cf.%20http%3A%2F%2Fascii-table.com%2Fansi-escape-sequences-vt-100.php%0A%20%20%20%20pub%20fn%20el0%28%29%20-%3E%20%26%27static%20str%20%7B%0A%20%20%20%20%20%20%20%20%22%5Cx1B[K%22%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Escape%20sequence%20to%20%22Move%20cursor%20up%20n%20lines%22%20%28CUU%29.%0A%20%20%20%20pub%20fn%20cuu%28lines%3A%20u8%29%20-%3E%20String%20%7B%0A%20%20%20%20%20%20%20%20format!%28%22%5Cx1B[%7B%7DA%22%2C%20lines%29%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Escape%20sequence%20to%20%22Turn%20off%20character%20attributes%22%20%28SGR0%29.%0A%20%20%20%20pub%20fn%20sgr0%28%29%20-%3E%20%26%27static%20str%20%7B%0A%20%20%20%20%20%20%20%20%22%5Cx1B[m%22%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Escape%20sequence%20to%20%22Turn%20bold%20mode%20on%22%20%28SGR1%29.%0A%20%20%20%20pub%20fn%20sgr1%28%29%20-%3E%20%26%27static%20str%20%7B%0A%20%20%20%20%20%20%20%20%22%5Cx1B[1m%22%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Escape%20sequence%20to%20%22Turn%20low%20intensity%20mode%20on%22%20%28SGR2%29.%0A%20%20%20%20pub%20fn%20sgr2%28%29%20-%3E%20%26%27static%20str%20%7B%0A%20%20%20%20%20%20%20%20%22%5Cx1B[2m%22%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20consoleStatus.print%20%28|count%2Cslash|%7Bformat!%20%28%22Indexing%20...%20%7B%7D%7B%7D%22%2C%20count%2C%20slash%29%7D%29%3B%0A%20%20%20%20%23[allow%28deprecated%29]%20%20%2F%2F%20for%20flush%0A%20%20%20%20pub%20fn%20print%3CR%3E%28%26mut%20self%2C%20renderer%3A%20R%29%0A%20%20%20%20%20%20%20%20where%20R%3A%20Fn%28u32%2C%20char%29%20-%3E%20String%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20self.count%20%2B%3D%201%3B%0A%20%20%20%20%20%20%20%20let%20now%20%3D%20time%3A%3Aprecise_time_s%28%29%3B%0A%20%20%20%20%20%20%20%20if%20%28now%20-%20self.last_update%29%20as%20f32%20%3E%20self.interval%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20self.last_update%20%3D%20now%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20self.slash%20%2B%3D%201%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20print!%28%22%5Cr%7B%7D%7B%7D%7B%7D%7B%7D%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ConsoleStatus%3A%3Ael0%28%29%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ConsoleStatus%3A%3Asgr2%28%29%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20renderer%28self.count%2C%20b%22%5C%5C|%2F-%22[%28self.slash%20%25%204%29%20as%20usize]%20as%20char%29%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ConsoleStatus%3A%3Asgr0%28%29%29%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20_%20%3D%20std%3A%3Aio%3A%3Astdout%28%29.flush%28%29%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Like%20%60print%60%20but%20forces%20the%20update%20to%20come%20thru.%0A%20%20%20%20pub%20fn%20print_force%3CR%3E%28%26mut%20self%2C%20renderer%3A%20R%29%0A%20%20%20%20%20%20%20%20where%20R%3A%20Fn%28u32%2C%20char%29%20-%3E%20String%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20self.last_update%20%3D%200.0%3B%0A%20%20%20%20%20%20%20%20self.print%28renderer%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20consoleStatus.println%20%28|_%2C_|%22Hello%20world.%22%29%3B%0A%20%20%20%20pub%20fn%20println%3CR%3E%28%26mut%20self%2C%20renderer%3A%20R%29%0A%20%20%20%20%20%20%20%20where%20R%3A%20Fn%28u32%2C%20char%29%20-%3E%20String%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20self.print_force%28renderer%29%3B%0A%20%20%20%20%20%20%20%20println!%28%22%22%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%2F%2F%20Clear%20the%20current%20line%28s%29%20from%20the%20status%20information%20and%20print%20the%20given%20message%20there.%0A%20%20%20%20%2F%2F%20Example%3A%20status.log%20%28%22Log%20message.%22%29%3B%0A%20%20%20%20pub%20fn%20log%28%26mut%20self%2C%20line%3A%20%26str%29%20%7B%0A%20%20%20%20%20%20%20%20println!%28%22%5Cr%7B%7D%7B%7D%22%2C%20ConsoleStatus%3A%3Ael0%28%29%2C%20line%29%3B%0A%20%20%20%20%7D%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">thingy</a> that might prove an example.</p>\n\n<p>To do that in a more portable way you use a terminal library, such as <a href=\"https://crates.io/crates/term\" rel=\"nofollow\">term</a> and it's <a href=\"https://stebalien.github.io/doc/term/term/trait.Terminal.html#tymethod.delete_line\" rel=\"nofollow\">delete_line</a> method.</p>\n"}], "owner": {"reputation": 23, "user_id": 5958593, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3f339648ec3f23f4426594e4c3718da?s=128&d=identicon&r=PG&f=1", "display_name": "qolop", "link": "https://stackoverflow.com/users/5958593/qolop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 37603097, "answer_count": 1, "score": 0, "last_activity_date": 1464920943, "creation_date": 1464883042, "last_edit_date": 1464883598, "question_id": 37596759, "link": "https://stackoverflow.com/questions/37596759/how-do-i-prevent-characters-from-the-previous-line-from-appearing-when-overwriti", "title": "How do I prevent characters from the previous line from appearing when overwriting it in Rust?", "body": "<p>I have the following code which enables me to make console output appear on the same line. However, if a value that was previously printed was of greater length than values after it, the remnants of the longer value will show up. I have seen other questions about the same thing in languages like Python, but I'm not sure how to overcome this in Rust.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>use std::io::prelude::*;\n\nfn main() {\n    let fruits = [\"Blueberry\", \"Orange\", \"Cherry\", \"Lemon\", \"Apple\"];\n    print_value(&amp;fruits);\n}\n\nfn print_value(e: &amp;[&amp;str]) {\n    for val in e {\n        print!(\"\\rStatus: {}\", val);\n        std::io::stdout().flush().unwrap();\n        // pause program temporarily\n        std::thread::sleep(std::time::Duration::new(2, 0));\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1464882224, "post_id": 37596044, "comment_id": 62677906, "body": "The answer explains why this doesn&#39;t work and how to work around it, but honestly it&#39;s very likely it&#39;s better to just use the stdlib&#39;s <code>skip</code> even if it has a slightly different API (it&#39;s an iterator adapter instead of a mutating method)."}, {"owner": {"reputation": 25756, "user_id": 39648, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/0d9ffb2252f073517660f2d0bf71d0db?s=128&d=identicon&r=PG", "display_name": "Autodidact", "link": "https://stackoverflow.com/users/39648/autodidact"}, "edited": false, "score": 0, "creation_date": 1464882436, "post_id": 37596044, "comment_id": 62678048, "body": "@delnan after some experimentation with mutating iterators I concur!"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1464881992, "post_id": 37596285, "comment_id": 62677755, "body": "There is an error if <code>Skip::skip</code> is altered to take <code>I</code> directly or if it&#39;s called on a mut reference (e.g., <code>(&amp;mut chars).skip(2)</code>). The reason that it&#39;s legal otherwise is that <code>Iterator</code>&#39;s method doesn&#39;t require autoref so it&#39;s more specific and hence preferred. The lints in <code>rustc</code> are pretty bare-bones, but maybe clippy has a lint for this."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1464882210, "post_id": 37596285, "comment_id": 62677901, "body": "@delnan I wonder if there&#39;s an ordering to which method will be chosen (<code>self</code> then <code>&amp;self</code> then <code>&amp;mut self</code>) and the &quot;multiple applicable methods&quot; error only occurs when there are multiple methods in the same class?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1464883226, "post_id": 37596285, "comment_id": 62678604, "body": "@Shepmaster I think it&#39;s phrased in terms of whether autoref is needed, but basically, yes."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1464884893, "last_edit_date": 1464884893, "creation_date": 1464881751, "answer_id": 37596285, "question_id": 37596044, "link": "https://stackoverflow.com/questions/37596044/can-a-value-be-moved-by-taking-a-mutable-reference/37596285#37596285", "title": "Can a value be moved by taking a mutable reference?", "body": "<blockquote>\n  <p>Can a value be moved by taking a mutable reference?</p>\n</blockquote>\n\n<p>No. References do not move the referred-to items. That's one large point of references.</p>\n\n<p>However, <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.skip\" rel=\"nofollow\"><code>Iterator::skip</code></a> does take ownership of the iterator, which is a move:</p>\n\n<pre><code>fn skip(self, n: usize) -&gt; Skip&lt;Self&gt;\n</code></pre>\n\n<p>To solve the error, you can... take a mutable reference!</p>\n\n<pre><code>chars.by_ref().skip(2);\n</code></pre>\n\n<p>However, note that calling an iterator adapter without using it <strong>does nothing</strong>:</p>\n\n<blockquote>\n  <p>warning: unused result which must be used: iterator adaptors are lazy and do nothing unless consumed</p>\n</blockquote>\n\n<p>The <em>real</em> problem here is that you aren't calling the <code>skip</code> you think you are. If you rename your method to <code>skip2</code>, you will see that it works as intended.</p>\n\n<p>This is because method lookup prefers methods that accept the receiver by-value (<code>self</code>) before by-reference (<code>&amp;self</code>) before by-mutable-reference (<code>&amp;mut self</code>).</p>\n\n<p>It's probably a bad idea to pick the same method name as the standard library, especially for iterators, but it's very surprising that a warning isn't printed saying there are multiple applicable methods in scope.</p>\n\n<p>You could use <a href=\"https://doc.rust-lang.org/book/ufcs.html\" rel=\"nofollow\">Universal Function Call Syntax (UFCS)</a> to specify which implementation to call though:</p>\n\n<pre><code>pub trait Skip: Iterator {\n    fn skip(&amp;mut self, steps: usize) {\n        for _ in self.take(steps) {}\n    }\n}\n\nimpl&lt;I&gt; Skip for I where I: Iterator {}\n\nfn main() {\n    let s  = \"abc123def\";\n    let mut chars = s.chars();\n    Skip::skip(&amp;mut chars, 2);\n    println!(\"{:?}\", chars.collect::&lt;String&gt;());\n}\n</code></pre>\n"}], "owner": {"reputation": 25756, "user_id": 39648, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/0d9ffb2252f073517660f2d0bf71d0db?s=128&d=identicon&r=PG", "display_name": "Autodidact", "link": "https://stackoverflow.com/users/39648/autodidact"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1358, "favorite_count": 0, "accepted_answer_id": 37596285, "answer_count": 1, "score": 4, "last_activity_date": 1464884893, "creation_date": 1464881102, "question_id": 37596044, "link": "https://stackoverflow.com/questions/37596044/can-a-value-be-moved-by-taking-a-mutable-reference", "title": "Can a value be moved by taking a mutable reference?", "body": "<p><a href=\"https://play.rust-lang.org/?gist=82132ae019215582e5d2eae28b70c9a5&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow\">Playpen</a></p>\n\n<pre><code>pub trait Skip&lt;I: Iterator&gt; {\n    fn skip(&amp;mut self, steps: usize);\n}\n\nimpl&lt;I: Iterator&gt; Skip&lt;I&gt; for I {\n    fn skip(&amp;mut self, mut steps: usize) {\n        for _ in self {\n            steps -= 1;\n            if steps &lt;= 0 {\n                break;\n            }\n        }\n    }\n}\n\nfn main() {\n    let s  = \"abc123def\";\n    let mut chars = s.chars();\n    chars.skip(2);\n    println!(\"{:?}\", chars.collect::&lt;String&gt;());\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: use of moved value: `chars` [--explain E0382]\n  --&gt; &lt;anon&gt;:20:22\n19 |&gt;     chars.skip(2);\n   |&gt;     ----- value moved here\n20 |&gt;     println!(\"{:?}\", chars.collect::&lt;String&gt;());\n   |&gt;                      ^^^^^ value used here after move\n&lt;anon&gt;:20:22: 20:27: note: in this expansion of format_args!\n&lt;anon&gt;:20:22: 20:27: note: in this expansion of print! (defined in &lt;std macros&gt;)\n&lt;anon&gt;:20:22: 20:27: note: in this expansion of println! (defined in &lt;std macros&gt;)\nnote: move occurs because `chars` has type `std::str::Chars&lt;'_&gt;`, which does not implement the `Copy` trait\n\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n</code></pre>\n"}, {"tags": ["json", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2043, "user_id": 1675607, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/xvItm.jpg?s=128&g=1", "display_name": "Gavin Hope", "link": "https://stackoverflow.com/users/1675607/gavin-hope"}, "edited": false, "score": 0, "creation_date": 1464875915, "post_id": 37593605, "comment_id": 62672750, "body": "thanks for the depth of that answer, in addition to the <code>PathBuf</code> / <code>to_string_lossy()</code> info, there&#39;s a bunch of other improvements to work in. What did you mean by &quot;Additionally, your output has an object with the same two keys. While not invalid, it&#39;s likely not what you want.&quot;? You&#39;re referring to double occurrence of <code>ReviewItem</code>? Also not worked with <code>JSON</code> much, but, if I interpret you correctly, I can output an &quot;An ordered list of values&quot; (array) rather than &quot;A collection of name/value pairs&quot; (terminology from <a href=\"http://json.org/\" rel=\"nofollow noreferrer\">json.org</a>)? In which case I don&#39;t need <code>ReviewItem</code>... thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2043, "user_id": 1675607, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/xvItm.jpg?s=128&g=1", "display_name": "Gavin Hope", "link": "https://stackoverflow.com/users/1675607/gavin-hope"}, "edited": false, "score": 1, "creation_date": 1464876038, "post_id": 37593605, "comment_id": 62672854, "body": "@GavinHope <i>double occurrence of <code>ReviewItem</code></i> \u2014 yes, the second occurrence of the key will override the first occurrence. The code I&#39;ve shown does output a JSON array of objects, which also means you can <i>probably</i> remove the <code>index</code> field (it&#39;s implicit from the order in the array)."}, {"owner": {"reputation": 2043, "user_id": 1675607, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/xvItm.jpg?s=128&g=1", "display_name": "Gavin Hope", "link": "https://stackoverflow.com/users/1675607/gavin-hope"}, "edited": false, "score": 0, "creation_date": 1464876777, "post_id": 37593605, "comment_id": 62673515, "body": "Yes - with the ordered array I no longer need <code>Index</code>, thanks."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1464874861, "creation_date": 1464874861, "answer_id": 37593605, "question_id": 37592640, "link": "https://stackoverflow.com/questions/37592640/how-to-escape-backslash-characters-in-pathbuf-variables-when-writing-to-a-json-f/37593605#37593605", "title": "How to escape backslash characters in PathBuf variables when writing to a JSON file?", "body": "<p>It's a good idea to <em>never</em> hand-generate any structured format, because eventually the output will become malformed. Additionally, your output has an object with the same two keys. While not <em>invalid</em>, it's likely not what you want.</p>\n\n<p>In this case, you will quickly run into walls with trying to escape quotes and backslashes and maybe apostrophes and ampersands. You also have to keep track of the last item by hand. Let the library do the hard work. </p>\n\n<p>There are two good JSON libraries for Rust: <a href=\"https://doc.rust-lang.org/rustc-serialize/rustc_serialize/index.html\" rel=\"nofollow\">rustc_serialize</a> and <a href=\"https://serde-rs.github.io/serde/serde/index.html\" rel=\"nofollow\">serde</a>.</p>\n\n<p>Step one is to create some actual types for your data. Tuples are great, but will you really remember that <code>foo.1</code> is the name... or was it <code>foo.2</code>?</p>\n\n<p>Once you have that, you can simply output the slice:</p>\n\n<pre><code>extern crate rustc_serialize;\n\nuse rustc_serialize::json;\n\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\nuse std::path::PathBuf;\n\n#[derive(RustcEncodable)]\nstruct Item {\n    index: i32,\n    name: String,\n    path: String,\n    metadata_path: PathBuf,\n}\n\nfn write_review_queue(ordered_review_queue: &amp;[Item]) -&gt; io::Result&lt;()&gt; {\n    let mut buffer = try!(File::create(\"/tmp/output\"));\n\n    write!(buffer, \"{}\", json::as_json(&amp;ordered_review_queue))\n}\n\nfn main() {\n    let a = [Item { index: 0, name: \"He\\\"llo\".into(), path: \"Good\\\\bye\".into(), metadata_path: PathBuf::from(r#\"C:\\path\\with'n\\special\"\\chars\"#)}];\n    write_review_queue(&amp;a).expect(\"Failed\");\n}\n</code></pre>\n\n<p>Unfortunately, this prints out the <code>PathBuf</code> in an ugly way:</p>\n\n<pre><code>[{\"index\":0,\"name\":\"He\\\"llo\",\"path\":\"Good\\\\bye\",\"metadata_path\":[67,58,92,112,97,116,104,92,119,105,116,104,39,110,92,115,112,101,99,105,97,108,34,92,99,104,97,114,115]}]\n</code></pre>\n\n<p>It's important to know that <code>PathBuf</code>s are <strong>not</strong> strings. Specifically, they are platform-dependent abstractions. On Unix-like systems the path is a collection of bytes close-to-but-not UTF-8, and on Windows it is close-to-but-not UCS-2.</p>\n\n<p>You have to decide what lossy transformation is appropriate to convert it to true UTF-8 for your case. I'll use the one built-in to the standard library, <a href=\"http://doc.rust-lang.org/std/path/struct.PathBuf.html#method.to_string_lossy\" rel=\"nofollow\"><code>to_string_lossy</code></a>. I also implement <code>ToJson</code> for the type to allow more customization:</p>\n\n<pre><code>extern crate rustc_serialize;\n\nuse rustc_serialize::json::{self, ToJson, Json};\n\nuse std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\nuse std::path::PathBuf;\nuse std::collections::BTreeMap;\n\nstruct Item {\n    index: i32,\n    name: String,\n    path: String,\n    metadata_path: PathBuf,\n}\n\nimpl ToJson for Item {\n    fn to_json(&amp;self) -&gt; Json {\n        let mut obj = BTreeMap::new();\n        obj.insert(\"Index\".to_string(), self.index.to_json());\n        obj.insert(\"ReviewItemName\".to_string(), self.name.to_json());\n        obj.insert(\"ReviewItemPath\".to_string(), self.path.to_json());\n        obj.insert(\"MetadataPath\".to_string(), self.metadata_path.to_string_lossy().to_json());\n        obj.to_json()\n    }\n}\n\nfn write_review_queue(ordered_review_queue: &amp;[Item]) -&gt; io::Result&lt;()&gt; {\n    let mut buffer = try!(File::create(\"/tmp/output\"));\n\n    write!(buffer, \"{}\", json::as_json(&amp;ordered_review_queue.to_json()))\n}\n\nfn main() {\n    let a = [Item { index: 0, name: \"He\\\"llo\".into(), path: \"Good\\\\bye\".into(), metadata_path: PathBuf::from(r#\"C:\\path\\with'n\\special\"\\chars\"#)}];\n    write_review_queue(&amp;a).expect(\"Failed\");\n}\n</code></pre>\n\n<p>Note that this also allows you an opportunity to rename the keys of the object (although the names seem very redundant to me).</p>\n\n<pre><code>[{\"Index\":0,\"MetadataPath\":\"C:\\\\path\\\\with'n\\\\special\\\"\\\\chars\",\"ReviewItemName\":\"He\\\"llo\",\"ReviewItemPath\":\"Good\\\\bye\"}]\n</code></pre>\n"}], "owner": {"reputation": 2043, "user_id": 1675607, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/xvItm.jpg?s=128&g=1", "display_name": "Gavin Hope", "link": "https://stackoverflow.com/users/1675607/gavin-hope"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1615, "favorite_count": 0, "accepted_answer_id": 37593605, "answer_count": 1, "score": 1, "last_activity_date": 1464874861, "creation_date": 1464872488, "last_edit_date": 1464873096, "question_id": 37592640, "link": "https://stackoverflow.com/questions/37592640/how-to-escape-backslash-characters-in-pathbuf-variables-when-writing-to-a-json-f", "title": "How to escape backslash characters in PathBuf variables when writing to a JSON file?", "body": "<p>I'm very new to Rust - and this code is part of an artificial, learning project. Keep that in mind ;)</p>\n\n<p>I have a collection of tuples: <code>&amp;[(i32, String, String, PathBuf)]</code> that are passed into a function designed to write the data to a JSON file.</p>\n\n<p><strong>The problem</strong>: when I convert the <code>PathBuf</code> to a <code>&amp;str</code> - the path written to file has unescaped backslash characters, so the JSON is invalid.</p>\n\n<p>Here's the code:</p>\n\n<pre><code>use std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\nuse std::path::PathBuf;\n\npub fn write_review_queue(ordered_review_queue: &amp;[(i32, String, String, PathBuf)]) -&gt; io::Result&lt;()&gt; {\n    let output_file = \"C:\\\\Dev\\\\Temp\\\\ReviewQueue\\\\review_queue.json\";\n    let mut buffer = try!(File::create(output_file));\n    try!(buffer.write(\"{\".to_string().as_bytes()));\n\n    let mut is_first_item = true;\n    for review_item in ordered_review_queue {\n        if !is_first_item {\n            try!(buffer.write(\",\".to_string().as_bytes()));\n        }\n        is_first_item = false;\n\n        let json_string = \"\\\"ReviewItem\\\": \".to_string() +\n                          \"{\\\"Index\\\": \" + &amp;review_item.0.to_string() + \n                          \", \\\"ReviewItemName\\\": \\\"\" + &amp;review_item.1 +\n                          \"\\\", \\\"ReviewItemPath\\\": \\\"\" + &amp;review_item.2 +\n                          \"\\\", \\\"MetadataPath\\\": \\\"\" +  review_item.3.to_str().unwrap() +\n                          \"\\\"}\";\n\n        try!(buffer.write(json_string.as_bytes()));\n    }\n\n\n    try!(buffer.write(\"}\".to_string().as_bytes()));\n    Ok(())\n}\n</code></pre>\n\n<p>And an example of the output:</p>\n\n<pre><code>{\n    \"ReviewItem\": {\n        \"Index\": 1,\n        \"ReviewItemName\": \"Crying Cat\",\n        \"ReviewItemPath\": \"C:/Temp\",\n        \"MetadataPath\": \"C:\\Dev\\Temp\\ReviewQueue\\Metadata\\cryingcat.json\"\n    },\n    \"ReviewItem\": {\n        \"Index\": 2,\n        \"ReviewItemName\": \"Rusty Rat\",\n        \"ReviewItemPath\": \"C:/Temp\",\n        \"MetadataPath\": \"C:\\Dev\\Temp\\ReviewQueue\\Metadata\\rustyrat.json\"\n    }\n}\n</code></pre>\n\n<p>The code that produces the <code>PathBuf</code>s for the <code>MetadataPath</code>s is like this:</p>\n\n<pre><code>let metadata_files = metadata_read::read_filenames_from_dir(\"C:\\\\Dev\\\\Temp\\\\ReviewQueue\\\\Metadata\");\n    if !metadata_files.is_ok() {\n        println!(\"reading metadata filenames failed\");\n        return;\n    }\n\n    let mut metadata_counts = Vec::new();\n    for file in metadata_files.unwrap() {\n        let metadata_field_count = metadata_read::count_nonempty_metadata_fields(&amp;file, &amp;keys);\n        metadata_counts.push(metadata_field_count.unwrap());\n    }\n</code></pre>\n\n<p>And the <code>count_nonempty_metadata_fields</code> function:</p>\n\n<pre><code>pub fn count_nonempty_metadata_fields(file_path: &amp;PathBuf, metadata_keys: &amp;[String]) -&gt; Result&lt;(i32, String, String, PathBuf), io::Error&gt;\n{\n    // a bunch of code here...\n\n    let path = file_path.to_path_buf();\n    Ok((key_count, review_item_name, review_item_path, path))\n}\n</code></pre>\n\n<p>If I change the original directory path string to:</p>\n\n<pre><code>let metadata_files = metadata_read::read_filenames_from_dir(\"C:/Dev/Temp/ReviewQueue/Metadata\");\n</code></pre>\n\n<p>It does change the output, e.g.</p>\n\n<pre><code>{\n    \"ReviewItem\": {\n        \"Index\": 1,\n        \"ReviewItemName\": \"Crying Cat\",\n        \"ReviewItemPath\": \"C:/Temp\",\n        \"MetadataPath\": \"C:/Dev/Temp/ReviewQueue/Metadata\\cryingcat.json\"\n    },\n    \"ReviewItem\": {\n        \"Index\": 2,\n        \"ReviewItemName\": \"Rusty Rat\",\n        \"ReviewItemPath\": \"C:/Temp\",\n        \"MetadataPath\": \"C:/Dev/Temp/ReviewQueue/Metadata\\rustyrat.json\"\n    }\n}\n</code></pre>\n\n<p>But it's still not right.</p>\n\n<p><strong>Questions</strong></p>\n\n<ol>\n<li>If I stick with this approach of building up a <code>String</code> in <em>hand-crafted</em> JSON format, how do I get the path content of the <code>PathBuf</code>s into a format with either forward-slashes or escaped backslashes? Am I missing something in the API?</li>\n<li>Should I being using a <code>Json</code> object to build the data (which will probably be more reliable)? If so, what's the normal way to write the content of a <code>Json</code> object to file?</li>\n</ol>\n"}, {"tags": ["arrays", "go", "rust"], "comments": [{"owner": {"reputation": 51399, "user_id": 1553888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01ac05cf8db6f338aef3c2f65e348f5d?s=128&d=identicon&r=PG", "display_name": "u_mulder", "link": "https://stackoverflow.com/users/1553888/u-mulder"}, "edited": false, "score": 0, "creation_date": 1464866591, "post_id": 37590396, "comment_id": 62665651, "body": "<code>a := []string{&#39;xxx&#39;, &#39;xxx&#39;, &#39;xxx&#39;}</code>?"}, {"owner": {"reputation": 1181, "user_id": 4498942, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/60c69aa64479e67e0b35fdcebe3d5a0e?s=128&d=identicon&r=PG&f=1", "display_name": "sky_coder123", "link": "https://stackoverflow.com/users/4498942/sky-coder123"}, "reply_to_user": {"reputation": 51399, "user_id": 1553888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01ac05cf8db6f338aef3c2f65e348f5d?s=128&d=identicon&r=PG", "display_name": "u_mulder", "link": "https://stackoverflow.com/users/1553888/u-mulder"}, "edited": false, "score": 0, "creation_date": 1464866724, "post_id": 37590396, "comment_id": 62665750, "body": "@u_mulder So this is an array of 3 &quot;xxx&quot;. Say I want to initialize it to thousand &quot;x...1000x here&quot;. How do I achieve that like string constructor of c++?"}, {"owner": {"reputation": 51399, "user_id": 1553888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01ac05cf8db6f338aef3c2f65e348f5d?s=128&d=identicon&r=PG", "display_name": "u_mulder", "link": "https://stackoverflow.com/users/1553888/u-mulder"}, "edited": false, "score": 0, "creation_date": 1464867046, "post_id": 37590396, "comment_id": 62665948, "body": "<code>strings.Repeat(&quot;x&quot;, 1000)</code>?"}, {"owner": {"reputation": 1181, "user_id": 4498942, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/60c69aa64479e67e0b35fdcebe3d5a0e?s=128&d=identicon&r=PG&f=1", "display_name": "sky_coder123", "link": "https://stackoverflow.com/users/4498942/sky-coder123"}, "reply_to_user": {"reputation": 51399, "user_id": 1553888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/01ac05cf8db6f338aef3c2f65e348f5d?s=128&d=identicon&r=PG", "display_name": "u_mulder", "link": "https://stackoverflow.com/users/1553888/u-mulder"}, "edited": false, "score": 0, "creation_date": 1464868547, "post_id": 37590396, "comment_id": 62667028, "body": "@u_mulder Awesome! Any idea about how to initialize a slice or an array of 1000 elems with this string(I mean is there a library function for that or do I have to use iteration myself?)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1464874618, "post_id": 37590396, "comment_id": 62671716, "body": "It would be clearer if the Go and Rust questions were separate. As it is, how are you going to accept a best answer? Please split this question in two and cross-reference them."}, {"owner": {"reputation": 1348, "user_id": 1363520, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/dd01041b737eca45a9c5d01d234d3b9c?s=128&d=identicon&r=PG", "display_name": "Som Poddar", "link": "https://stackoverflow.com/users/1363520/som-poddar"}, "edited": false, "score": 0, "creation_date": 1513328677, "post_id": 37590396, "comment_id": 82620248, "body": "Initialize a 2D array of strings <code>a:= [][]string{{&quot;&quot;}, {&quot;&quot;}}</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1181, "user_id": 4498942, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/60c69aa64479e67e0b35fdcebe3d5a0e?s=128&d=identicon&r=PG&f=1", "display_name": "sky_coder123", "link": "https://stackoverflow.com/users/4498942/sky-coder123"}, "edited": false, "score": 0, "creation_date": 1465211345, "post_id": 37590845, "comment_id": 62790697, "body": "quite close. Is there not a 1 liner?"}], "tags": [], "owner": {"reputation": 1422, "user_id": 4375843, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54ce4a955fac0462fea6af3752d97742?s=128&d=identicon&r=PG", "display_name": "jbe", "link": "https://stackoverflow.com/users/4375843/jbe"}, "is_accepted": false, "score": 1, "last_activity_date": 1464868582, "last_edit_date": 1464868582, "creation_date": 1464867669, "answer_id": 37590845, "question_id": 37590396, "link": "https://stackoverflow.com/questions/37590396/initialize-array-of-array-of-strings-in-golang-and-rust/37590845#37590845", "title": "Initialize array of array of strings in GoLang and Rust", "body": "<p>you could use slices. this may not be the shortest solution, but it works for me.</p>\n\n<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc main() {\n    xs := strings.Repeat(\"x\", 1000)\n\n    num_rows := 5\n    num_cols := 5\n\n    data := make([][]string, num_rows)\n    for y := 0; y &lt; num_rows; y++ {\n        data[y] = make([]string, num_cols)\n        for x := 0; x &lt; num_cols; x++ {\n            data[y][x] = xs\n        }\n    }\n\n    fmt.Printf(\"%T\", data)\n    fmt.Print(data)\n}\n</code></pre>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1464869982, "post_id": 37591440, "comment_id": 62668071, "body": "Whether the element type is <code>&amp;str</code> or <code>String</code>, you can construct the Vec with <code>vec![elem; n]</code>."}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1464872922, "post_id": 37591440, "comment_id": 62670358, "body": "I agree that the <code>borrows</code> can be converted to this syntax but due to calling clone, I don&#39;t think that the <code>copies</code> can be converted to this syntax."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1464874339, "post_id": 37591440, "comment_id": 62671461, "body": "<code>vec![x; n]</code> calls <code>clone</code>: <a href=\"https://play.rust-lang.org/?gist=e47235e5242cb81537e2ee1a5677a071&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1464874805, "post_id": 37591440, "comment_id": 62671881, "body": "Thanks for your suggestions, I updated the post to reflect them. How does this look? More canonical now I suppose?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1464875891, "post_id": 37591440, "comment_id": 62672732, "body": "For copies, just <code>vec![x_s; num_rows]</code> is sufficient. Otherwise it looks good!"}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1464876684, "post_id": 37591440, "comment_id": 62673431, "body": "This doesn&#39;t work due to moving <code>x_s</code> which is borrowed in the previous line. I think it boils down to the fact that <a href=\"https://github.com/rust-lang/rust/blob/ab7c35fa0fcd725cdc207487b760d85fd07ecdd7/src/libcollections/vec.rs#L1112\" rel=\"nofollow noreferrer\">this function</a> moves its argument <code>elem</code>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1464877596, "post_id": 37591440, "comment_id": 62674205, "body": "Oh, right, sorry. However, in real code one probably wouldn&#39;t have both <code>borrows</code> and <code>copies</code>, so then it would work."}], "tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": false, "score": 2, "last_activity_date": 1464878156, "last_edit_date": 1495540423, "creation_date": 1464869252, "answer_id": 37591440, "question_id": 37590396, "link": "https://stackoverflow.com/questions/37590396/initialize-array-of-array-of-strings-in-golang-and-rust/37591440#37591440", "title": "Initialize array of array of strings in GoLang and Rust", "body": "<p>In Rust, it depends on what you want to use these values for. I like <a href=\"https://stackoverflow.com/a/31216683/2075745\">this answer</a> for creating the repeated string. The \"rows\" depend on if you want reference or copy semantics which is made explicit in rust. The <code>borrows</code> vector is a bunch of borrowed strings that refer back to the memory owned by <code>x_s</code>. The <code>copies</code> vector is a bunch of in memory copies of the original <code>x_s</code> string.</p>\n\n<pre><code>use std::iter;\n\nfn main() {\n    let num_rows = 1000;\n    let num_cols = 1000; \n\n    let x_s : String = iter::repeat('x').take(num_cols).collect();\n\n    // pick one of the below\n    let borrows : Vec&lt;&amp;str&gt; = vec![&amp;*x_s ; num_rows];\n    let copies : Vec&lt;String&gt; = vec![x_s.clone() ; num_rows];\n}\n</code></pre>\n\n<p>The call to <code>clone</code> in the last line is because the <code>vec</code> macro moves the value sent into it. The <code>vec</code> macro will also clone this clone <code>num_rows</code> times in the case of the <code>copies</code>. Note that this <code>clone</code> is probably not necessary in most use cases as you would not normally have <code>borrows</code> and <code>copies</code> in the same scope at the same time.</p>\n\n<p>As a caveat, I am fairly new to rust but believe this to be a decent answer. I am happy to accept corrections.</p>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 284620, "user_id": 1705598, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/aTFoe.jpg?s=128&g=1", "display_name": "icza", "link": "https://stackoverflow.com/users/1705598/icza"}, "edited": false, "score": 0, "creation_date": 1464870007, "post_id": 37591596, "comment_id": 62668082, "body": "@icza From the question: &quot;PS : I am also looking for something similar in Rust&quot; --- admittedly, that&#39;s not good style for a question."}, {"owner": {"reputation": 1181, "user_id": 4498942, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/60c69aa64479e67e0b35fdcebe3d5a0e?s=128&d=identicon&r=PG&f=1", "display_name": "sky_coder123", "link": "https://stackoverflow.com/users/4498942/sky-coder123"}, "edited": false, "score": 0, "creation_date": 1464870918, "post_id": 37591596, "comment_id": 62668737, "body": "@delnan I think that would be marked as duplicate. No?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1181, "user_id": 4498942, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/60c69aa64479e67e0b35fdcebe3d5a0e?s=128&d=identicon&r=PG&f=1", "display_name": "sky_coder123", "link": "https://stackoverflow.com/users/4498942/sky-coder123"}, "edited": false, "score": 0, "creation_date": 1464874669, "post_id": 37591596, "comment_id": 62671754, "body": "@sky_coder123: No; different languages do things differently, so the questions are different by virtue of asking for different situations."}, {"owner": {"reputation": 1181, "user_id": 4498942, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/60c69aa64479e67e0b35fdcebe3d5a0e?s=128&d=identicon&r=PG&f=1", "display_name": "sky_coder123", "link": "https://stackoverflow.com/users/4498942/sky-coder123"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1464940723, "post_id": 37591596, "comment_id": 62701590, "body": "@MatthieuM. I am actually trying to assess performance of various languages for some operations so I thought these would be related. I agree there would be different ways to do different things(just like Ruby and C++ supplied in question) but then my intention was not to ask about only one particular language."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1181, "user_id": 4498942, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/60c69aa64479e67e0b35fdcebe3d5a0e?s=128&d=identicon&r=PG&f=1", "display_name": "sky_coder123", "link": "https://stackoverflow.com/users/4498942/sky-coder123"}, "edited": false, "score": 0, "creation_date": 1464941325, "post_id": 37591596, "comment_id": 62701927, "body": "@sky_coder123: Have you looked at <a href=\"http://benchmarksgame.alioth.debian.org/\" rel=\"nofollow noreferrer\">The Computer Language Benchmark</a>? Roughly speaking, C/C++/Rust are in the same ballpark, Go is slightly slower (within Java ballpark, not much more than x1.5/x2 in general) and Ruby is of course much slower (x10/x50). And of course, you should take micro-benchmarks with a grain of salt, especially when interpreted languages delegate the bulk of the computation to a C library..."}, {"owner": {"reputation": 1181, "user_id": 4498942, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/60c69aa64479e67e0b35fdcebe3d5a0e?s=128&d=identicon&r=PG&f=1", "display_name": "sky_coder123", "link": "https://stackoverflow.com/users/4498942/sky-coder123"}, "edited": false, "score": 0, "creation_date": 1464950868, "post_id": 37591596, "comment_id": 62707603, "body": "Yeah I&#39;ve looked at it but there was a fun discussion about these at my workplace. I found Go to be performing faster than C/C++ though for a very naive benchmark. What my interest was if there is a language that can perform faster than Ruby for some tasks in our project."}], "tags": [], "owner": {"reputation": 1, "user_id": 6414667, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dd9b86e14b812ca755853ff4fe1eeef0?s=128&d=identicon&r=PG", "display_name": "Boboseb", "link": "https://stackoverflow.com/users/6414667/boboseb"}, "is_accepted": false, "score": 0, "last_activity_date": 1464869672, "creation_date": 1464869672, "answer_id": 37591596, "question_id": 37590396, "link": "https://stackoverflow.com/questions/37590396/initialize-array-of-array-of-strings-in-golang-and-rust/37591596#37591596", "title": "Initialize array of array of strings in GoLang and Rust", "body": "<p>A very simple on-line exemple in rust :</p>\n\n<pre><code>fn main() {\n    let data: Vec&lt;String&gt; = (0..1000).map(|n| (0..n).map(|_| 'x').collect()).collect();\n    println!(\"{:?}\", data);\n}\n</code></pre>\n"}], "owner": {"reputation": 1181, "user_id": 4498942, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/60c69aa64479e67e0b35fdcebe3d5a0e?s=128&d=identicon&r=PG&f=1", "display_name": "sky_coder123", "link": "https://stackoverflow.com/users/4498942/sky-coder123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2907, "favorite_count": 0, "answer_count": 3, "score": -2, "last_activity_date": 1464878156, "creation_date": 1464866477, "last_edit_date": 1464866600, "question_id": 37590396, "link": "https://stackoverflow.com/questions/37590396/initialize-array-of-array-of-strings-in-golang-and-rust", "title": "Initialize array of array of strings in GoLang and Rust", "body": "<p>I want to initialize a 2D array in which each member of inner array holds a string of 1000 x's. Something like:  </p>\n\n<pre><code>var data = [num_rows][num_cols]string(\"x....x(upto 1000)\")\n</code></pre>\n\n<p>But all google searches have been futile. In C++ I can achieve similar thing like this:  </p>\n\n<pre><code>vector&lt;vector&lt;string&gt;&gt; data(num_rows, vector&lt;string&gt;(num_cols, string(\"x\",1000)));\n</code></pre>\n\n<p>And in Ruby something like this:</p>\n\n<pre><code>Array.new(num_rows) { Array.new(num_cols) { \"x\"*1000 } }\n</code></pre>\n\n<p>Want to achieve similar result in go but I am unable to find any documentation to fill a string and initialize a 2D array. Also note that I want to generate the string for each member of array rather than using an available string.</p>\n\n<p>PS : I am also looking for something similar in Rust</p>\n"}, {"tags": ["debugging", "rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1464855444, "post_id": 37586216, "comment_id": 62658078, "body": "you can use gdb. Other than that, I&#39;m working on a stepper for MIR (implemented on top of miri), which will allow you to debug on a kind of virtual machine."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1464860603, "post_id": 37586216, "comment_id": 62661570, "body": "@ker: Oh! Is miri close enough to completion already? I thought it was still in the early stages."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1464862871, "post_id": 37586216, "comment_id": 62663277, "body": "@MatthieuM.: there are still some things that don&#39;t work yet (e.g. function pointers), but it&#39;s slowly getting there."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1464876572, "post_id": 37586216, "comment_id": 62673319, "body": "This was <a href=\"https://www.reddit.com/r/rust/comments/4m66ja/step_by_step_interactive_debugger_for_rust/?ref=share&amp;ref_source=link\" rel=\"nofollow noreferrer\">cross-posted to Reddit</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1464916099, "post_id": 37586216, "comment_id": 62693403, "body": "@Dimon it&#39;s considered Stack Overflow (and Reddit) etiquette to inform <b>future searchers</b> of other places that an answer may be found. That way, they have a better chance of getting useful information. It also potentially saves an <b>answerer</b> time, if what they were going to say is already covered in a different location."}], "answers": [{"comments": [{"owner": {"reputation": 1585, "user_id": 421550, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e7a2292ef4ad3674b556df31e81efce?s=128&d=identicon&r=PG", "display_name": "domen", "link": "https://stackoverflow.com/users/421550/domen"}, "edited": false, "score": 2, "creation_date": 1486389082, "post_id": 37586413, "comment_id": 71310026, "body": "And with <code>gdb 7.12</code>, there&#39;s now proper support, not just &quot;works because it&#39;s compiled to native&quot;."}], "tags": [], "owner": {"reputation": 4985, "user_id": 1164485, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/87d7172258eb6f62a87cbc2fc3108a05?s=128&d=identicon&r=PG", "display_name": "cynic", "link": "https://stackoverflow.com/users/1164485/cynic"}, "is_accepted": false, "score": 27, "last_activity_date": 1464855876, "last_edit_date": 1495542339, "creation_date": 1464855876, "answer_id": 37586413, "question_id": 37586216, "link": "https://stackoverflow.com/questions/37586216/step-by-step-interactive-debugger-for-rust/37586413#37586413", "title": "Step by step interactive debugger for Rust?", "body": "<p>The Rust compiler produces native binaries with native debug info (symbol) information, so any native debugger will do. That means <code>gdb</code> and <code>lldb</code>, or the Windows debuggers (WinDBG or just Visual Studio) if you're using the MSVC ABI version of Rust. If you want an integrated experience, <a href=\"http://rustdt.github.io/\" rel=\"noreferrer\">RustDT</a> is the way to go (setup on Windows: <a href=\"https://stackoverflow.com/questions/33570021/how-to-set-up-gdb-for-debugging-rust-programs-in-windows/33570022#33570022\">How to set up GDB for debugging Rust programs in Windows?</a>). Please note that you're likely to run into <a href=\"https://stackoverflow.com/questions/36621130/how-can-i-inspect-variable-values-while-debugging-msvc-abi-rust-programs\">How can I inspect variable values while debugging MSVC ABI Rust programs?</a> on Windows and <a href=\"https://github.com/rust-lang/rust/issues/33062\" rel=\"noreferrer\">https://github.com/rust-lang/rust/issues/33062</a> on a Mac.</p>\n"}, {"comments": [{"owner": {"reputation": 1721, "user_id": 804847, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/17600fcaf46cbd03113a06057bdc4993?s=128&d=identicon&r=PG", "display_name": "psiphi75", "link": "https://stackoverflow.com/users/804847/psiphi75"}, "edited": false, "score": 3, "creation_date": 1552502606, "post_id": 50809053, "comment_id": 97038691, "body": "Replying to myself, although gdbgui is useful, I have found the VS Code debugger works very well now."}], "tags": [], "owner": {"reputation": 1721, "user_id": 804847, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/17600fcaf46cbd03113a06057bdc4993?s=128&d=identicon&r=PG", "display_name": "psiphi75", "link": "https://stackoverflow.com/users/804847/psiphi75"}, "is_accepted": false, "score": 8, "last_activity_date": 1528775948, "creation_date": 1528775948, "answer_id": 50809053, "question_id": 37586216, "link": "https://stackoverflow.com/questions/37586216/step-by-step-interactive-debugger-for-rust/50809053#50809053", "title": "Step by step interactive debugger for Rust?", "body": "<p>For a graphical debugger, there is <a href=\"https://gdbgui.com\" rel=\"noreferrer\">gdbgui</a>.  It's available for Linux, Windows and MacOS. It uses the browser as the display and to interact with the debugger.</p>\n"}, {"tags": [], "owner": {"reputation": 390, "user_id": 717767, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xXFQ6.png?s=128&g=1", "display_name": "Otuk", "link": "https://stackoverflow.com/users/717767/otuk"}, "is_accepted": false, "score": 2, "last_activity_date": 1536631665, "creation_date": 1536631665, "answer_id": 52267737, "question_id": 37586216, "link": "https://stackoverflow.com/questions/37586216/step-by-step-interactive-debugger-for-rust/52267737#52267737", "title": "Step by step interactive debugger for Rust?", "body": "<p>I have gdb 7.11 and rust-gdb command seems to give more rust relevant information compared to the gdb native.  Eg rust-gdb shows rust objects properly with full names, and gdb simply do not show them.<br>\nIn the following example gdb would now show at all the bold parts.</p>\n\n<p>$1 = Args = {inner = <strong>ArgsOs</strong> = {inner = <strong>Args</strong> = {iter = <strong>IntoIter</strong> = {\n        buf = <strong>NonNull</strong> = {pointer = <strong>NonZero&lt;*const std::ffi::os_str::OsString></strong> = {\n            0x7ffff6c20060}}, phantom = <strong>PhantomData</strong>, cap = 1, \n        ptr = 0x7ffff6c20060, end = 0x7ffff6c20078}, _dont_send_or_sync_me = <strong>PhantomData&lt;*mut ()></strong>}}}</p>\n"}, {"comments": [{"owner": {"reputation": 6798, "user_id": 4174897, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gS0gI.jpg?s=128&g=1", "display_name": "Kyll", "link": "https://stackoverflow.com/users/4174897/kyll"}, "edited": false, "score": 0, "creation_date": 1536664408, "post_id": 52273254, "comment_id": 91496458, "body": "Nice answer! It would be great if you could explain why you&#39;ve added these blog posts, possibly quoting a paragraph to show their relevance."}, {"owner": {"reputation": 1122, "user_id": 4970650, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/496526a825adf2e6587a19d3a6d391f7?s=128&d=identicon&r=PG", "display_name": "Cirelli94", "link": "https://stackoverflow.com/users/4970650/cirelli94"}, "reply_to_user": {"reputation": 6798, "user_id": 4174897, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gS0gI.jpg?s=128&g=1", "display_name": "Kyll", "link": "https://stackoverflow.com/users/4174897/kyll"}, "edited": false, "score": 0, "creation_date": 1538982717, "post_id": 52273254, "comment_id": 92320596, "body": "Well, I added these posts as real life case of doing it!"}, {"owner": {"reputation": 309, "user_id": 2038713, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FQjD8.png?s=128&g=1", "display_name": "6005", "link": "https://stackoverflow.com/users/2038713/6005"}, "edited": false, "score": 0, "creation_date": 1610493659, "post_id": 52273254, "comment_id": 116150654, "body": "These instructions don&#39;t quite work for me on Ubuntu. For 3, there don&#39;t seem to be any requisites listed. For 5, I don&#39;t see a &quot;Debug&quot; in the main menu, only under &quot;run&quot;."}, {"owner": {"reputation": 1122, "user_id": 4970650, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/496526a825adf2e6587a19d3a6d391f7?s=128&d=identicon&r=PG", "display_name": "Cirelli94", "link": "https://stackoverflow.com/users/4970650/cirelli94"}, "reply_to_user": {"reputation": 309, "user_id": 2038713, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FQjD8.png?s=128&g=1", "display_name": "6005", "link": "https://stackoverflow.com/users/2038713/6005"}, "edited": false, "score": 0, "creation_date": 1610528728, "post_id": 52273254, "comment_id": 116159482, "body": "@6005 since LLDB v1.6 no further setup should be needed: <a href=\"https://github.com/vadimcn/vscode-lldb/wiki/Setup\" rel=\"nofollow noreferrer\">github.com/vadimcn/vscode-lldb/wiki/Setup</a> as stated in the linked instructions. About &quot;Debug&quot;, it has changed name maybe? I update the answer."}], "tags": [], "owner": {"reputation": 1122, "user_id": 4970650, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/496526a825adf2e6587a19d3a6d391f7?s=128&d=identicon&r=PG", "display_name": "Cirelli94", "link": "https://stackoverflow.com/users/4970650/cirelli94"}, "is_accepted": false, "score": 61, "last_activity_date": 1610528780, "last_edit_date": 1610528780, "creation_date": 1536659477, "answer_id": 52273254, "question_id": 37586216, "link": "https://stackoverflow.com/questions/37586216/step-by-step-interactive-debugger-for-rust/52273254#52273254", "title": "Step by step interactive debugger for Rust?", "body": "<p>I find a good level of usability with <a href=\"https://code.visualstudio.com/\" rel=\"noreferrer\">VS Code</a> and the <a href=\"https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb\" rel=\"noreferrer\">CodeLLDB</a> extension:</p>\n<ol>\n<li><p><a href=\"https://code.visualstudio.com/\" rel=\"noreferrer\">Install VS Code</a></p>\n</li>\n<li><p>Search and install the extension <a href=\"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust\" rel=\"noreferrer\">Rust</a> or the newer <a href=\"https://marketplace.visualstudio.com/items?itemName=matklad.rust-analyzer\" rel=\"noreferrer\">rust-analyzer</a> from within VS Code</p>\n</li>\n<li><p>Check requisites and <a href=\"https://github.com/vadimcn/vscode-lldb/wiki/Setup\" rel=\"noreferrer\">setup CodeLLDB</a> for your platform. As of v1.6, no further setup should be needed.</p>\n</li>\n<li><p>Search and install the extension <a href=\"https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb\" rel=\"noreferrer\">CodeLLDB</a> from within VS Code</p>\n</li>\n<li><p>The LLDB Debugger added the main menu item &quot;Run&quot; from where the debugger can be started.\nWhen debugging is started for the first time, you must select the environment (the debugger): select LLDB.</p>\n</li>\n<li><p>When you select LLDB, a <code>launch.json</code> file will be opened, if not, open it, it's under <code>.vscode</code> folder</p>\n</li>\n<li><p>Your <code>launch.json</code> should look like this:</p>\n<pre class=\"lang-js prettyprint-override\"><code>{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    &quot;version&quot;: &quot;0.2.0&quot;,\n    &quot;configurations&quot;: [\n        {\n            &quot;type&quot;: &quot;lldb&quot;,\n            &quot;request&quot;: &quot;launch&quot;,\n            &quot;name&quot;: &quot;Debug&quot;,\n            &quot;program&quot;: &quot;${workspaceRoot}/target/debug/hello_world&quot;,\n            &quot;args&quot;: [],\n            &quot;cwd&quot;: &quot;${workspaceRoot}/target/debug/&quot;,\n            &quot;sourceLanguages&quot;: [&quot;rust&quot;]\n        }\n    ]\n}\n</code></pre>\n</li>\n</ol>\n\n<ol start=\"8\">\n<li><p>If you wanted to keep things generic and only compile a binary that matches the cargo folder name, you could use ${workspaceRootFolderName} variable substitution for the &quot;program&quot; key:</p>\n <pre class=\"lang-js prettyprint-override\"><code> {\n     &quot;version&quot;: &quot;0.2.0&quot;,\n     &quot;configurations&quot;: [\n         {\n             &quot;type&quot;: &quot;lldb&quot;,\n             &quot;request&quot;: &quot;launch&quot;,\n             &quot;name&quot;: &quot;Debug&quot;,\n             &quot;program&quot;: &quot;${workspaceRoot}/target/debug/${workspaceRootFolderName}&quot;,\n             &quot;args&quot;: [],\n             &quot;cwd&quot;: &quot;${workspaceRoot}/target/debug/&quot;,\n             &quot;sourceLanguages&quot;: [&quot;rust&quot;]\n         }\n     ]\n }\n</code></pre>\n</li>\n</ol>\n\n<p>Here are some blog posts about Rust and VS Code:</p>\n<ul>\n<li><p><a href=\"https://lustysociety.org/programming/rust_language/rust-language-linux.html\" rel=\"noreferrer\">Arch Linux</a></p>\n</li>\n<li><p><a href=\"https://www.patriksvensson.se/2018/02/debugging-rust-on-windows-using-vscode\" rel=\"noreferrer\">On Windows</a></p>\n</li>\n</ul>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6324692"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 36368, "favorite_count": 21, "answer_count": 4, "score": 87, "last_activity_date": 1610528780, "creation_date": 1464855221, "last_edit_date": 1464860560, "question_id": 37586216, "link": "https://stackoverflow.com/questions/37586216/step-by-step-interactive-debugger-for-rust", "title": "Step by step interactive debugger for Rust?", "body": "<p>How can I debug Rust application step by step <strong>interactively</strong> like I'm able to do with \"pry\" in Ruby?</p>\n\n<p>I want to be able to see and preferably change the variables in real time when I reach a break point. Is there any production ready finished project? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1464874105, "post_id": 37587849, "comment_id": 62671308, "body": "I would edit the post but because the edit is too small, I cannot. There should be <code>&amp;</code> before the <code>self.0</code> and <code>self.1</code>"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "edited": false, "score": 0, "creation_date": 1464881521, "post_id": 37587849, "comment_id": 62677425, "body": "thanks @user25064 there were also other issues that I fixed"}, {"owner": {"reputation": 285, "user_id": 6198487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lUrJE.png?s=128&g=1", "display_name": "Tsukki", "link": "https://stackoverflow.com/users/6198487/tsukki"}, "edited": false, "score": 0, "creation_date": 1464888960, "post_id": 37587849, "comment_id": 62682109, "body": "Thanks for the answer. I only required <code>O(k)</code>, but I know we can have <code>O(log(k))</code>. How would I define a generic function that constrains the traits of the input such that the input must implement <code>Index&lt;usize&gt;</code> <i>and</i> the <code>Output</code> must implement <code>Eq</code>?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1464942023, "post_id": 37587849, "comment_id": 62702342, "body": "That&#39;s not possible, because you&#39;d also need a trait supplying the <code>len</code> fn, which you&#39;d have to write yourself... Slices already are as general as an O(1) indexing + known length + ordered type can be represented"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 11, "last_activity_date": 1464881504, "last_edit_date": 1464881504, "creation_date": 1464859760, "answer_id": 37587849, "question_id": 37585808, "link": "https://stackoverflow.com/questions/37585808/concatenate-array-slices/37587849#37587849", "title": "Concatenate array slices", "body": "<p>There isn't a predefined type, but you can easily create your own by implementing the <code>Index</code> trait for a type that holds both your slices:</p>\n\n<pre><code>use std::ops::Index;\n\nstruct Slice&lt;'a, T: 'a&gt;(&amp;'a[T], &amp;'a[T]);\n\nimpl&lt;'a, T: 'a&gt; Index&lt;usize&gt; for Slice&lt;'a, T&gt; {\n    type Output = T;\n    fn index(&amp;self, index: usize) -&gt; &amp;T {\n        if index &lt; self.0.len() {\n            &amp;self.0[index]\n        } else {\n            &amp;self.1[index - self.0.len()]\n        }\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>More generally, if <code>result</code> were the concatenation of <code>k</code> array slices, an arbitrary array access for <code>result</code> should run in O(<code>k</code>).</p>\n</blockquote>\n\n<p>You can get slice access in <code>O(log(k))</code>, if your slice concatenation is <code>O(k)</code>, by creating an array that holds the cumulative lengths of the slices and using a binary search to find the actual slice to index into.</p>\n\n<p>This would require a macro, because we don't have a good enough constant evaluator yet and no value generics. </p>\n"}, {"tags": [], "owner": {"reputation": 4257, "user_id": 3347227, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/160c472b1c6c43b47cc98cc01d3ce317?s=128&d=identicon&r=PG", "display_name": "Erik Vesteraas", "link": "https://stackoverflow.com/users/3347227/erik-vesteraas"}, "is_accepted": false, "score": 3, "last_activity_date": 1464860351, "last_edit_date": 1495540810, "creation_date": 1464859919, "answer_id": 37587918, "question_id": 37585808, "link": "https://stackoverflow.com/questions/37585808/concatenate-array-slices/37587918#37587918", "title": "Concatenate array slices", "body": "<p>I'm afraid what you are asking is pretty much impossible if you require the result to be an actual slice. A slice is a view into a block of memory. Contiguous memory. If you want a new slice by combining two other slices you have to copy the contents to a new location, so that you get a new contiguous block of memory.</p>\n\n<p>If you are satisfied just concatenating by copying <code>SliceConcatExt</code> provides the methods <code>concat</code> and <code>join</code> on slices, which can be used on slices of custom types as long as they implement <code>Clone</code>:</p>\n\n<pre><code>#[derive(Clone, PartialEq, Debug)]\nstruct A {\n    a: u64,\n}\n\nfn main() {\n    assert_eq!([\"hello\", \"world\"].concat(), \"helloworld\");\n    assert_eq!([[1, 2], [3, 4]].concat(), [1, 2, 3, 4]);\n    assert_eq!([[A { a: 1 }, A { a: 2 }], [A { a: 3 }, A { a: 4 }]].concat(),\n               [A { a: 1 }, A { a: 2 }, A { a: 3 }, A { a: 4 }]);\n}\n</code></pre>\n\n<p>Note that even though <code>SliceConcatExt</code> is unstable, the methods themselves are stable. So there is no reason not to use them if copying is OK. If you can't copy you can't get a slice. In that case, you need to create a wrapper type, as explained in <a href=\"https://stackoverflow.com/a/37587849/3347227\">the answer of ker</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "is_accepted": false, "score": 4, "last_activity_date": 1464861037, "creation_date": 1464861037, "answer_id": 37588350, "question_id": 37585808, "link": "https://stackoverflow.com/questions/37585808/concatenate-array-slices/37588350#37588350", "title": "Concatenate array slices", "body": "<p>For n arrays, you can implement it using a <code>Vec</code> like below:</p>\n\n<pre><code>use std::ops::Index;\n\nstruct VecSlice&lt;'a, T: 'a&gt;(Vec&lt;&amp;'a [T]&gt;);\n\nimpl&lt;'a, T&gt; Index&lt;usize&gt; for VecSlice&lt;'a, T&gt; {\n    type Output = T;\n    fn index(&amp;self, mut index: usize) -&gt; &amp;T {\n        for slice in self.0.iter() {\n            if index &lt; slice.len() {\n                return &amp;slice[index];\n            } else {\n                index -= slice.len();\n            }\n        }\n        panic!(\"out of bound\");\n    }\n}\n</code></pre>\n\n<p>And then access it like an array, just don't go out of bound.</p>\n\n<pre><code>fn main() {\n    let a1 = [0, 1, 2];\n    let a2 = [7, 8, 9];\n    let a = VecSlice(vec!(&amp;a1, &amp;a2));\n    println!(\"{}\", a[4]);\n}\n</code></pre>\n\n<p>This prints out</p>\n\n<pre><code>8\n</code></pre>\n"}], "owner": {"reputation": 285, "user_id": 6198487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lUrJE.png?s=128&g=1", "display_name": "Tsukki", "link": "https://stackoverflow.com/users/6198487/tsukki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4544, "favorite_count": 2, "accepted_answer_id": 37587849, "answer_count": 3, "score": 12, "last_activity_date": 1464881504, "creation_date": 1464854048, "question_id": 37585808, "link": "https://stackoverflow.com/questions/37585808/concatenate-array-slices", "title": "Concatenate array slices", "body": "<p>I have two (very large) arrays <code>foo</code> and <code>bar</code> of the same type. To be able to write some nice code, I would like to obtain a read-only slice, <code>result</code>, of the concatenation of the two arrays. This operation must run in O(1) time and space.</p>\n\n<p>Array access for <code>result</code> must also be in O(1). More generally, if <code>result</code> were the concatenation of <code>k</code> array slices, an arbitrary array access for <code>result</code> should run in O(<code>k</code>).</p>\n\n<p>I do not want to copy any elements of <code>foo</code> nor <code>bar</code>.</p>\n\n<p>This would seem to be easy to implement into the Rust core, but no amount of searching has brought me a solution.</p>\n"}, {"tags": ["initialization", "rust"], "answers": [{"comments": [{"owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "edited": false, "score": 0, "creation_date": 1464852862, "post_id": 37585273, "comment_id": 62656448, "body": "Haha, you made my day. Don&#39;t know why I did not do that earlier."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1464852358, "creation_date": 1464852358, "answer_id": 37585273, "question_id": 37584952, "link": "https://stackoverflow.com/questions/37584952/how-to-initialize-value-by-another-value-in-initializer-list-in-rust/37585273#37585273", "title": "How to initialize value by another value in initializer list in Rust?", "body": "<p>What about creating the value first?</p>\n\n<pre><code>impl C {\n    fn new() -&gt; C {\n        let tmp = Rc::new(B);\n        C {\n            b: tmp.clone(),\n            a: A::new(tmp),\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 37585273, "answer_count": 1, "score": -1, "last_activity_date": 1464852358, "creation_date": 1464851363, "question_id": 37584952, "link": "https://stackoverflow.com/questions/37584952/how-to-initialize-value-by-another-value-in-initializer-list-in-rust", "title": "How to initialize value by another value in initializer list in Rust?", "body": "<p>For example we may take <a href=\"https://play.rust-lang.org/?gist=867bce90df7337a94c4cf7cbbea0ab51&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">this code:</a></p>\n\n<pre><code>use std::rc::Rc;\n\nstruct B;\n\nstruct A {\n    obj: Rc&lt;B&gt;,\n}\nimpl A {\n    fn new(obj: Rc&lt;B&gt;) -&gt; A {\n        A {\n            obj: obj,\n        }\n    }\n}\nstruct C {\n    b: Rc&lt;B&gt;,\n    a: A,\n}\nimpl C {\n    fn new() -&gt; C {\n        C {\n            b: Rc::new(B),\n            a: A::new(b.clone()),\n        }\n    }\n}\n\nfn main() {\n\n}\n</code></pre>\n\n<p>Here is a <code>A</code> struct member called <code>a</code> which I want to initialize by another value in same initializer list. I think it is not possible so I usually use <code>Option&lt;T&gt;</code> to do it:</p>\n\n<pre><code>use std::rc::Rc;\n\nstruct B;\n\nstruct A {\n    obj: Rc&lt;B&gt;,\n}\nimpl A {\n    fn new(obj: Rc&lt;B&gt;) -&gt; A {\n        A {\n            obj: obj,\n        }\n    }\n}\nstruct C {\n    b: Rc&lt;B&gt;,\n    a: Option&lt;A&gt;,\n}\nimpl C {\n    fn new() -&gt; C {\n        let mut c = C {\n            b: Rc::new(B),\n            a: None,\n        };\n        c.a = Some(A::new(c.b.clone()));\n        c\n    }\n}\n\nfn main() {\n\n}\n</code></pre>\n\n<p>But in my opinion this is stupid because I do useless extra work here and later I need to always unwrap this option. Is there any way to do this more simpler?</p>\n"}, {"tags": ["plugins", "rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1464877566, "post_id": 37582502, "comment_id": 62674186, "body": "Can you give an example? You want the span to highlight just the BinaryOp, or the whole binary expression?"}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1464884510, "post_id": 37582502, "comment_id": 62679418, "body": "Every Expr needs a span. We do have the original <code>BinaryOp</code> <code>Expr</code>, the operator <code>Expr</code>s (which are unchanged, so they keep their <code>Span</code>s), the newly created <code>MethodCall</code> <code>Expr</code> with <code>Span</code>s for both the <code>Expr</code> and the <code>Ident</code> of the method. It&#39;s those latter two <code>Span</code>s that I&#39;m interested in."}], "answers": [{"tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": true, "score": 1, "last_activity_date": 1467042503, "creation_date": 1467042503, "answer_id": 38058231, "question_id": 37582502, "link": "https://stackoverflow.com/questions/37582502/how-to-correctly-deal-with-spans-in-procedural-macros/38058231#38058231", "title": "How to correctly deal with spans in procedural macros?", "body": "<p>After some looking into <code>rustc</code>'s source, I came to the conclusion that following the \"expansion\" model produces the best results. So we keep the original <code>Span</code> but for the <code>expn_id</code>, which we can get by calling <code>ExtCtxt::backtrace()</code>.</p>\n\n<p>It appears to be a good idea to set this in both cases outlined in the question. The <em>operator</em> can be seen as expanded into the (function call) path, and the original binary <em>operation</em> expression as expanded into the function call. In code:</p>\n\n<pre><code>match expr.unwrap() {\n    ..\n    Expr { node: ExprKind::Binary( Spanned { node: Add, span: op }, l, r), span, .. } =&gt; {\n        let bt = self.cx.backtrace(); // get the expansion ID\n        let path = self.cx.path(Span { expn_id: bt, ..op }, vec![crate_name, trait_name, fn_name]);\n        let epath = self.cx.expr_path(path); // path expression\n        let args_expanded = self.fold_exprs(args);\n        self.cx.expr_call(Span { expn_id: bt, ..span }, epath, args_expanded)\n        // ^ outer expression\n    }\n    ..\n}\n</code></pre>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 41, "favorite_count": 0, "accepted_answer_id": 38058231, "answer_count": 1, "score": 5, "last_activity_date": 1467042503, "creation_date": 1464840509, "last_edit_date": 1464853777, "question_id": 37582502, "link": "https://stackoverflow.com/questions/37582502/how-to-correctly-deal-with-spans-in-procedural-macros", "title": "How to correctly deal with spans in procedural macros?", "body": "<p>I want my procedural macro to replace some BinaryOps with methods. How do I set the spans so that if errors occur my users are not completely confused?</p>\n"}, {"tags": ["rust", "rust-crates"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1464837903, "post_id": 37581993, "comment_id": 62650757, "body": "FYI, it appears this is a nice case of the <a href=\"http://meta.stackexchange.com/q/66377/281829\">X-Y Problem</a>. It seems you <i>really</i> want to know &quot;how do I share code without publicly publishing the common code&quot;, but the question is about a solution; one that technically precludes my answer from being acceptable. I took a gamble that it actually solves your root problem. ^_^"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1464848492, "post_id": 37581993, "comment_id": 62654167, "body": "I may make sense to review the question, to make it match its intent more closely."}, {"owner": {"reputation": 775, "user_id": 2861181, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5504ac4f8f9b9d83bc777f7e688af73d?s=128&d=identicon&r=PG", "display_name": "mattforni", "link": "https://stackoverflow.com/users/2861181/mattforni"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1464848990, "post_id": 37581993, "comment_id": 62654402, "body": "Not entirely sure what you mean @MatthieuM. This is definitely one way to do it. I suppose it won&#39;t work on <b>any</b> box since it is dependent on having the local crate, but it works in the local sense."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1464849171, "post_id": 37581993, "comment_id": 62654488, "body": "@mattforni: I mean that the question is more about &quot;not publishing to crates.io&quot; than &quot;not creating a crate&quot; so it would be better to focus it on the &quot;not publishing to crates.io&quot; bit; then answers can focus on how to distribute a crate internally within a company, which is really what you want to solve, rather than launch themselves in some kind of remote-syncing of copy/pasted files or such silliness :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1464877395, "post_id": 37581993, "comment_id": 62674055, "body": "Check out the rewording I applied to your question, I think that&#39;s what @MatthieuM. and I are suggesting. Feel free to roll it back if you think it no longer matches your original intent."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1464877617, "post_id": 37581993, "comment_id": 62674227, "body": "@Shepmaster: That&#39;s indeed what I was thinking of too; now the question will probably be of interest to a much wider audience as I imagine that many organizations would rather not expose their code on Internet."}, {"owner": {"reputation": 775, "user_id": 2861181, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5504ac4f8f9b9d83bc777f7e688af73d?s=128&d=identicon&r=PG", "display_name": "mattforni", "link": "https://stackoverflow.com/users/2861181/mattforni"}, "edited": false, "score": 0, "creation_date": 1464894185, "post_id": 37581993, "comment_id": 62685049, "body": "I like. Thanks guys. Much appreciated."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 14, "last_activity_date": 1464877867, "last_edit_date": 1464877867, "creation_date": 1464837488, "answer_id": 37582045, "question_id": 37581993, "link": "https://stackoverflow.com/questions/37581993/how-do-i-share-common-code-between-rust-projects-without-publishing-to-crates-io/37582045#37582045", "title": "How do I share common code between Rust projects without publishing to crates.io?", "body": "<blockquote>\n  <p>but it's proprietary code and I don't want to put it out into the wild.</p>\n</blockquote>\n\n<p>You don't have to <strong>publish</strong> a crate. Specifically, just create the crate (<code>cargo new shared_stuff</code>) then specify the path to the common crate(s) in the dependent project's <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependency.shared_stuff]\npath = \"path/to/shared/crate\"\n</code></pre>\n\n<p>The <a href=\"http://doc.crates.io/specifying-dependencies.html\" rel=\"noreferrer\">Cargo documentation</a> has an entire section on types of dependencies:</p>\n\n<ul>\n<li><a href=\"http://doc.crates.io/specifying-dependencies.html#specifying-dependencies-from-cratesio\" rel=\"noreferrer\">Specifying dependencies from crates.io</a></li>\n<li><a href=\"http://doc.crates.io/specifying-dependencies.html#specifying-dependencies-from-git-repositories\" rel=\"noreferrer\">Specifying dependencies from git repositories</a></li>\n<li><a href=\"http://doc.crates.io/specifying-dependencies.html#specifying-path-dependencies\" rel=\"noreferrer\">Specifying path dependencies</a></li>\n</ul>\n\n<p>I believe that Cargo will allow you to fetch from a <strong>private</strong> git repository (such as on Github or another privately hosted service, such as GitLab), but I haven't tried that personally. Based on my searching, you will need to have previously authenticated or otherwise configured git to not require an interactive password entry.</p>\n\n<hr>\n\n<p>It's theoretically possible to create your <strong>own</strong> crate registry. I've not even attempted to do this, but the machinery is present in Cargo to handle it. </p>\n"}], "owner": {"reputation": 775, "user_id": 2861181, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5504ac4f8f9b9d83bc777f7e688af73d?s=128&d=identicon&r=PG", "display_name": "mattforni", "link": "https://stackoverflow.com/users/2861181/mattforni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1002, "favorite_count": 2, "accepted_answer_id": 37582045, "answer_count": 1, "score": 14, "last_activity_date": 1513187664, "creation_date": 1464837113, "last_edit_date": 1513187664, "question_id": 37581993, "link": "https://stackoverflow.com/questions/37581993/how-do-i-share-common-code-between-rust-projects-without-publishing-to-crates-io", "title": "How do I share common code between Rust projects without publishing to crates.io?", "body": "<p>There may not be a good answer for this question, but I have code that I would like to share between two different Rust projects <strong>WITHOUT</strong> publishing the crate to crates.io.</p>\n\n<p>The code is proprietary and I don't want to put it out into the wild.</p>\n"}, {"tags": ["parsing", "data-structures", "rust", "ebnf"], "answers": [{"comments": [{"owner": {"reputation": 4414, "user_id": 551904, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/3c0a0f47f94565025a9aa388e8bd8681?s=128&d=identicon&r=PG", "display_name": "Sunjay Varma", "link": "https://stackoverflow.com/users/551904/sunjay-varma"}, "edited": false, "score": 0, "creation_date": 1464918193, "post_id": 37581653, "comment_id": 62693842, "body": "Works great! Thanks! I guess there is no way to get around the <code>Expr(Expr)</code> or the <code>Term(Term)</code> though. Kind of ugly, but it works."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1464834356, "creation_date": 1464834356, "answer_id": 37581653, "question_id": 37581252, "link": "https://stackoverflow.com/questions/37581252/how-to-represent-recursive-ebnf-grammar-in-rust-data-structures/37581653#37581653", "title": "How to represent recursive EBNF grammar in Rust data structures?", "body": "<p><code>Expr</code> can be a <code>type</code> alias, but you need to define an <code>enum</code> to represent the alternation. <code>Term</code> also needs to be a separate <code>enum</code>.</p>\n\n<pre><code>enum Statement {\n    FunctionDefinition {\n        name: String,\n        params: Vec&lt;String&gt;,\n        body: Expr,\n    },\n    Assignment {\n        name: String,\n        body: Expr,\n    },\n    Expr(Expr),\n}\n\ntype Expr = Vec&lt;ExprItem&gt;;\n\nenum ExprItem {\n    Term(Term),\n    Parenthesized(Expr),\n}\n\nenum Term {\n    Word(String),\n    Number(f64),\n}\n</code></pre>\n"}], "owner": {"reputation": 4414, "user_id": 551904, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/3c0a0f47f94565025a9aa388e8bd8681?s=128&d=identicon&r=PG", "display_name": "Sunjay Varma", "link": "https://stackoverflow.com/users/551904/sunjay-varma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 614, "favorite_count": 0, "accepted_answer_id": 37581653, "answer_count": 1, "score": 3, "last_activity_date": 1464834356, "creation_date": 1464830830, "question_id": 37581252, "link": "https://stackoverflow.com/questions/37581252/how-to-represent-recursive-ebnf-grammar-in-rust-data-structures", "title": "How to represent recursive EBNF grammar in Rust data structures?", "body": "<p>Let's say I have the following example EBNF grammar. This is not a perfect grammar, but it should demonstrate the problem correctly.</p>\n\n<pre><code>Statement = FunctionDefinition | Assignment | Expr ;\nExpr = { Term | \"(\" , Expr , \")\" } ;\n\nAssignment = Word , \"=\" , Expr ;\nFunctionDefinition = Word , { Word } , \"=\" , Expr ;\n\nTerm = Word | Number\n</code></pre>\n\n<p>Where a <code>Word</code> is some number of letters and numbers and a <code>Number</code> is a valid numeric literal.</p>\n\n<p>I can start to represent this in Rust like so:</p>\n\n<pre><code>enum Statement {\n    FunctionDefinition {\n        name: String,\n        params: Vec&lt;String&gt;,\n        body: Expr,\n    },\n    Assignment {\n        name: String,\n        body: Expr,\n    },\n    //TODO: Expr\n}\n</code></pre>\n\n<p>There is already a problem here though. How do I add <code>Expr</code>? <code>Expr</code> should probably have its own definition since it is used in several other places as well. Giving <code>Expr</code> its own separate definition and then adding it to this enum will redefine it.</p>\n\n<p>If I continue anyway and start trying to define <code>Expr</code>, I run into even more problems:</p>\n\n<pre><code>type Expr = Vec&lt;...?...&gt;;\n// or maybe...\nstruct Expr {\n    terms: Vec&lt;Expr&gt;, // but what about Term??\n}\n</code></pre>\n\n<p>I tried to use <code>type</code> because <code>Expr</code> does not necessarily need to be its own struct or enum since it is just a collection of <code>Term</code>s or other <code>Expr</code>s. It is difficult to recursively define this though. If I try to use an enum to emulate a union type for Expr and Term, then I have to redefine <code>Expr</code> in that enum and define <code>Term</code> within the enum which makes Term unavailable in the other structures I will need.</p>\n"}]