[{"tags": ["rust", "format", "lifetime"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1552514737, "post_id": 55151837, "comment_id": 97044172, "body": "Why do you want a <code>str</code> in the first place? If you convert it to a <code>str</code> what would be responsible for owning that memory? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c7d3b896cb0865e70f0ce501492de439\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> works great."}, {"owner": {"reputation": 190, "user_id": 5399309, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/10201131262441304/picture?type=large", "display_name": "Jo&#235;l Abrahams", "link": "https://stackoverflow.com/users/5399309/jo%c3%abl-abrahams"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1552514865, "post_id": 55151837, "comment_id": 97044218, "body": "@loganfsmyth the reason for wanting a <code>str</code> is that this is part of a match statement which returns <code>str</code>s, and I would rather that in this case I could return a <code>str</code> instead of having to wrap every match case in a <code>String::from(...)</code>"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 5, "creation_date": 1552514992, "post_id": 55151837, "comment_id": 97044268, "body": "A <code>&amp;str</code> is a borrowed value, so in order to return one, the memory being borrowed needs to live somewhere. If your <code>match</code> is required to return a <code>&amp;str</code> then you are explicitly limiting yourself to returning borrowed values that already existed somewhere before the match ran, which means you can&#39;t create a new <code>String</code> in there."}, {"owner": {"reputation": 190, "user_id": 5399309, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/10201131262441304/picture?type=large", "display_name": "Jo&#235;l Abrahams", "link": "https://stackoverflow.com/users/5399309/jo%c3%abl-abrahams"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1552515131, "post_id": 55151837, "comment_id": 97044329, "body": "@loganfsmyth oh that makes more sense."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552585307, "post_id": 55151837, "comment_id": 97077165, "body": "<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e28770b663ae828f1bbdd5814f676d6a\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a> (this was originally a standalone answer)."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552521616, "post_id": 55151994, "comment_id": 97046184, "body": "I encourage moving / adding this answer to the duplicate."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 8, "last_activity_date": 1552516134, "last_edit_date": 1552516134, "creation_date": 1552515444, "answer_id": 55151994, "question_id": 55151837, "link": "https://stackoverflow.com/questions/55151837/how-can-i-convert-a-temporary-string-to-a-str/55151994#55151994", "title": "How can I convert a temporary String to a &amp;str?", "body": "<p><code>&amp;str</code> is a <strong>borrowed</strong> string, so you cannot get one from a temporary <code>String</code>, otherwise a reference would outlive the value it is bound to.</p>\n\n<p>You can however use the <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"noreferrer\"><code>Cow</code></a> type to do what you want:</p>\n\n<pre><code>use std::borrow::Cow;\n\nfn main() {\n    let my_bool = true;\n    let other = String::from(\"my_string\");\n    let result = if my_bool {\n        Cow::Owned(format!(\"_{}\", other))\n    } else {\n        Cow::Borrowed(\"other\")\n    };\n\n    assert_eq!(\"_my_string\", result);\n}\n</code></pre>\n\n<p><code>Cow</code> (for <em>clone on write</em>) is an <code>enum</code> that have either an owned or a borrowed data. In this particular case, <code>result</code> has the type <code>Cow&lt;str&gt;</code>.</p>\n\n<p>You can simplify the notation by writing:</p>\n\n<pre><code>let result = if my_bool {\n    format!(\"_{}\", other).into()\n} else {\n    Cow::Borrowed(\"other\")\n};\n</code></pre>\n\n<p>or (matter of style):</p>\n\n<pre><code>let result: Cow&lt;str&gt; = if my_bool {\n    format!(\"_{}\", other).into()\n} else {\n    \"other\".into()\n};\n</code></pre>\n"}], "owner": {"reputation": 190, "user_id": 5399309, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/10201131262441304/picture?type=large", "display_name": "Jo&#235;l Abrahams", "link": "https://stackoverflow.com/users/5399309/jo%c3%abl-abrahams"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2071, "favorite_count": 0, "closed_date": 1552521051, "answer_count": 1, "score": 3, "last_activity_date": 1552520997, "creation_date": 1552514493, "last_edit_date": 1552520997, "question_id": 55151837, "link": "https://stackoverflow.com/questions/55151837/how-can-i-convert-a-temporary-string-to-a-str", "closed_reason": "Duplicate", "title": "How can I convert a temporary String to a &amp;str?", "body": "<p>I wish to convert a <code>String</code> created using the <code>format!</code> macro to a <code>&amp;str</code> and assign this to a value using a <code>let</code> binding:</p>\n\n<pre><code>fn main() {\n    let my_bool = true;\n    let other = String::from(\"my_string\");\n    let result = if my_bool {\n        format!(\"_{}\", other).as_str()\n    } else {\n        \"other\"\n    };\n\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a02f15ecac0a1aff2c1998988b9a7e4e\" rel=\"nofollow noreferrer\">Rust Playground</a>)</p>\n\n<p>When I do this, the compiler complains that the temporary <code>String</code> value is freed at the end of the statement (from what I've understood), meaning that I'm unable to dynamically create a <code>&amp;str</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n --&gt; src/main.rs:5:9\n  |\n4 |     let result = if my_bool {\n  |         ------ borrow later stored here\n5 |         format!(\"_{}\", other).as_str()\n  |         ^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n6 |     } else {\n  |     - temporary value is freed at the end of this statement\n  |\n\n</code></pre>\n\n<p>I've been trying to understand Rust's lifetime system, but I can't really wrap my head around this one. Rust suggests the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  = note: consider using a `let` binding to create a longer lived value\n</code></pre>\n\n<p>I wrapped <code>format!(\"_{}\", other)</code> in a <code>let</code> binding:</p>\n\n<pre><code>fn main() {\n    let my_bool = true;\n    let other = String::from(\"my_string\");\n    let result = if my_bool {\n        let s = format!(\"_{}\", other);\n        s.as_str()\n    } else {\n        \"other\"\n    };\n\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p>But it doesn't seem to solve the issue, as when I call <code>as_str()</code> on this binding it still complains that the borrowed value does not live long enough:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `s` does not live long enough\n --&gt; src/main.rs:6:9\n  |\n4 |     let result = if my_bool {\n  |         ------ borrow later stored here\n5 |         let s = format!(\"_{}\", other);\n6 |         s.as_str()\n  |         ^ borrowed value does not live long enough\n7 |     } else {\n  |     - `s` dropped here while still borrowed\n</code></pre>\n\n<p>This works when I omit the whole <code>if</code>, but I would rather not do this as this would cause a lot of headaches in the original code base.</p>\n\n<p>Also, that does seem like kind of a cop-out, because then I still wouldn't know why this fails.</p>\n\n<p>How would I go about solving this in a systematic manner?</p>\n"}, {"tags": ["io", "rust", "type-conversion"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1552514998, "post_id": 55151575, "comment_id": 97044272, "body": "Note that the linked question does <i>more</i> than you asked; all you need to know about to avoid allocating a <code>String</code> is the <code>write!</code> macro (<code>writeln!</code> also exists). Also see <a href=\"https://stackoverflow.com/q/28333612/3650362\">How can I append a formatted string to an existing String?</a> (which applies to more than just <code>String</code>s) and <a href=\"https://stackoverflow.com/q/27588416/3650362\">How to send output to stderr</a>."}, {"owner": {"reputation": 56, "user_id": 1561982, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/w9wOC.jpg?s=128&g=1", "display_name": "knix", "link": "https://stackoverflow.com/users/1561982/knix"}, "edited": false, "score": 3, "creation_date": 1552515843, "post_id": 55151575, "comment_id": 97044559, "body": "Based on that answer, it appears I can simply do <code>write!(writer, &quot;{}&quot;, num)</code>. I now understand why the <code>Display</code> trait works the way it does. Thanks!"}], "owner": {"reputation": 56, "user_id": 1561982, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/w9wOC.jpg?s=128&g=1", "display_name": "knix", "link": "https://stackoverflow.com/users/1561982/knix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 417, "favorite_count": 0, "closed_date": 1552516124, "answer_count": 0, "score": 3, "last_activity_date": 1552521322, "creation_date": 1552512960, "last_edit_date": 1552521322, "question_id": 55151575, "link": "https://stackoverflow.com/questions/55151575/how-to-convert-a-rust-integer-type-to-its-string-representation-without-allocati", "closed_reason": "Duplicate", "title": "How to convert a Rust integer type to its string representation without allocating a String?", "body": "<p>I have a <code>count: u32</code> that I need to push through a TCP stream as its ASCII byte representation. For example if the value is 42, I want to write the bytes <code>[52, 50]</code> (ASCII for \"42\") to the stream.</p>\n\n<p>I can do this by first creating a <code>String</code> with:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io::prelude::*;\n\nfn write_number&lt;T: Write&gt;(writer: &amp;mut T, num: u32) -&gt; std::io::Result&lt;usize&gt; {\n    let num_as_str: String = num.to_string();\n    let num_as_bytes = num_as_str.as_bytes();\n    writer.write(num_as_bytes)\n}\n</code></pre>\n\n<p>Is this is a wasteful way of doing this? I don't feel that allocating a <code>String</code> should be necessary for this task. Is there a more efficient way to implement <code>write_number</code>? I've tried going through <code>str</code>, but <code>str</code> does not implement <code>From&lt;u32&gt;</code>.</p>\n"}, {"tags": ["data-structures", "reference", "rust", "heap-memory", "recursive-type"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1552512615, "post_id": 55151418, "comment_id": 97043331, "body": "Try using the latter version, and the compiler will tell you why it doesn&#39;t work. I also recommend reading <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\">Learning Rust With Entirely Too Many Linked Lists</a>."}, {"owner": {"reputation": 187, "user_id": 697050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd40071dab783ca86545a6c4ae3cfa4e?s=128&d=identicon&r=PG&f=1", "display_name": "Riff", "link": "https://stackoverflow.com/users/697050/riff"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1552514903, "post_id": 55151418, "comment_id": 97044236, "body": "thanks for the link @SvenMarnach !"}], "answers": [{"comments": [{"owner": {"reputation": 187, "user_id": 697050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd40071dab783ca86545a6c4ae3cfa4e?s=128&d=identicon&r=PG&f=1", "display_name": "Riff", "link": "https://stackoverflow.com/users/697050/riff"}, "edited": false, "score": 0, "creation_date": 1552515015, "post_id": 55151702, "comment_id": 97044277, "body": "Thanks for the explanation Peter!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552521480, "post_id": 55151702, "comment_id": 97046157, "body": "<i>it isn&#39;t very easy</i> \u2014 that&#39;s an understatement."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552571629, "post_id": 55151702, "comment_id": 97067712, "body": "@Shepmaster It&#39;s not impossible though. You can use mutable globals, or pass some kind of registry object as an argument to the function, which can own the nodes as they are created."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1552513756, "creation_date": 1552513756, "answer_id": 55151702, "question_id": 55151418, "link": "https://stackoverflow.com/questions/55151418/is-there-a-difference-between-a-linked-list-implemented-using-boxt-and-a-t/55151702#55151702", "title": "Is there a difference between a linked list implemented using Box&lt;T&gt; and &amp;&#39;a T?", "body": "<p>Either of these implementations will <em>technically</em> work but there are some big trade-offs.</p>\n\n<p>A <code>Box</code> allocates on the heap and then <em>owns</em> the data. This is pretty convenient and flexible, compared to managing references.</p>\n\n<p>In order to build a list of the second type, using <code>&amp;</code> references, you need to own the data somewhere. So you need to manage an arbitrary number of nodes and make sure they don't go out of scope. This can be very restrictive. For example, it isn't very easy to make a function that constructs a list and then returns it:</p>\n\n<pre><code>fn make_list&lt;'a&gt;() -&gt; List&lt;'a&gt; {\n    let node1 = List::Nil;\n    let node2 = List::Cons(1, &amp;node1);\n    let node3 = List::Cons(2, &amp;node2);\n    node3\n    // node1 and node2 go out of scope here...\n}\n</code></pre>\n\n<p>This won't work because it's referencing function-local variables, which go out of scope when the function returns. The version using <code>Box</code> will work because the <code>Box</code> takes ownership of the data.</p>\n"}], "owner": {"reputation": 187, "user_id": 697050, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd40071dab783ca86545a6c4ae3cfa4e?s=128&d=identicon&r=PG&f=1", "display_name": "Riff", "link": "https://stackoverflow.com/users/697050/riff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 47, "favorite_count": 0, "accepted_answer_id": 55151702, "answer_count": 1, "score": 1, "last_activity_date": 1552521447, "creation_date": 1552512151, "last_edit_date": 1552521447, "question_id": 55151418, "link": "https://stackoverflow.com/questions/55151418/is-there-a-difference-between-a-linked-list-implemented-using-boxt-and-a-t", "title": "Is there a difference between a linked list implemented using Box&lt;T&gt; and &amp;&#39;a T?", "body": "<p>I'm struggling trying to understand the difference between these two implementations of a linked list. This first version is the one presented in the Rust book using a <code>Box&lt;T&gt;</code>:</p>\n\n<pre><code>enum List {\n    Cons(i32, Box&lt;List&gt;),\n    Nil,\n}\n</code></pre>\n\n<p>This is the other implementation I was thinking of:</p>\n\n<pre><code>enum List&lt;'a&gt; {\n    Cons(i32, &amp;'a List&lt;'a&gt;),\n    Nil,\n}\n</code></pre>\n\n<p>Is there any important difference between the two, or are they equivalent in this case?</p>\n"}, {"tags": ["rust", "clap"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1552504834, "post_id": 55148856, "comment_id": 97039796, "body": "It is preferred to post separate questions instead of combining your questions into one. That way, it helps the people answering your question as well as others hunting for one of your questions. I have removed your second and third questions; focusing this about the question in your title."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552510089, "post_id": 55150936, "comment_id": 97042197, "body": "And there&#39;s <a href=\"https://stackoverflow.com/a/28220053/155423\">the possibility of dynamic dispatch without the heap</a>, as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552510242, "post_id": 55150936, "comment_id": 97042256, "body": "You could also do something like <code>fn process&lt;I&gt;(strings: I) where I:  IntoIterator, I::Item: AsRef&lt;str&gt;</code> to avoid the forced allocation of the <code>String</code>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552510465, "post_id": 55150936, "comment_id": 97042384, "body": "@Shepmaster Yeah, I realized when I finished writing this answer that I don&#39;t really know what the question is, but since I had already typed this, I posted it anyway. There are lots of things you <i>could</i> do, but we don&#39;t really know what problem the OP is trying to solve. :)"}, {"owner": {"reputation": 1148, "user_id": 600882, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/maVZp.jpg?s=128&g=1", "display_name": "Scott Colby", "link": "https://stackoverflow.com/users/600882/scott-colby"}, "edited": false, "score": 0, "creation_date": 1552707794, "post_id": 55150936, "comment_id": 97124532, "body": "I think I really stepped into quite a complicated question here...the <code>either</code> crate looks very useful with the ability to forward the iterator. Overall, I&#39;m not sure what is &quot;best&quot; for my use case is--it&#39;s just something I&#39;m writing for fun and the average invocation already has a time of <code>0.00</code> so I&#39;m clearly not hitting any performance limitations. Thanks for showing me the static dispatch alternative."}, {"owner": {"reputation": 1148, "user_id": 600882, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/maVZp.jpg?s=128&g=1", "display_name": "Scott Colby", "link": "https://stackoverflow.com/users/600882/scott-colby"}, "edited": false, "score": 0, "creation_date": 1552708328, "post_id": 55150936, "comment_id": 97124625, "body": "Besides reasoning from knowledge of the language, do you know how to determine if static or dynamic dispatch is being done? For instance, if I end up using the <code>either</code> crate, can I look at my binary and figure out which it is using?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 1148, "user_id": 600882, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/maVZp.jpg?s=128&g=1", "display_name": "Scott Colby", "link": "https://stackoverflow.com/users/600882/scott-colby"}, "edited": false, "score": 1, "creation_date": 1552755733, "post_id": 55150936, "comment_id": 97135965, "body": "@ScottColby If you are writing the code for fun, I recommend using the most fun approach. :) Rust generally uses static dispatch, and only uses dynamic dispatch for trait objects, i.e. types like <code>&amp;dyn Trait</code> or <code>Box&lt;dyn Trait&gt;</code>, written <code>&amp;Trait</code> or <code>Box&lt;Trait&gt;</code> in earlier versions of Rust. However, you only really need to care about this if you run into performance problems, in which case you need to profile your code and figure out where the bottlenecks are. In this case, for example, it&#39;s likely that the optimiser will be able to pull the lookup for the call to <code>next()</code> out of the loop."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 2, "last_activity_date": 1552509930, "creation_date": 1552509930, "answer_id": 55150936, "question_id": 55148856, "link": "https://stackoverflow.com/questions/55148856/how-do-i-use-stdin-if-no-positional-arguments-are-given-with-clap/55150936#55150936", "title": "How do I use STDIN if no positional arguments are given with clap?", "body": "<p>There is rarely an \"only way to go\", and this case is no different. One alternative approach would be to use static dispatch instead of dynamic dispatch.</p>\n\n<p>Your main processing code needs an iterator of strings as input. So you could define a processing function like this:</p>\n\n<pre><code>fn process&lt;I: IntoIterator&lt;Item = String&gt;&gt;(strings: I) {\n    for string in strings {\n        frob(string);\n    }\n}\n</code></pre>\n\n<p>The invocation of this code could look like this:</p>\n\n<pre><code>match m.values_of(\"INPUT\") {\n    Some(values) =&gt; process(values.map(|ln| ln.to_string())),\n    None =&gt; process(io::stdin().lock().lines().map(|ln| ln.unwrap())),\n}\n</code></pre>\n\n<p>The compiler will emit two different versions of <code>process()</code>, one for each iterator type. Each version statically calls the iterator functions it is compiled for, and there is only a single dispatch to the right function in the <code>match</code> statement.</p>\n\n<p>(I probably got some details wrong here, but you get the idea.)</p>\n\n<p>Your version, on the other hand, uses the type <code>Box&lt;dyn Iterator&lt;Item = String&gt;&gt;</code>, so the iterators will be allocated on the heap, and there will be a dynamic dispatch each time <code>next()</code> is called on the iterator. Which is probably fine.</p>\n\n<p>There are certainly more ways of structuring the code and dispatching between the two different kinds of input, e.g. using the <code>Either</code> type from the <code>either</code> crate, or simply writing two different <code>for</code> loops for the two cases. Which one to choose depends on tradeoffs with other requirements of your code, your performance requirements and your personal preferences.</p>\n"}], "owner": {"reputation": 1148, "user_id": 600882, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/maVZp.jpg?s=128&g=1", "display_name": "Scott Colby", "link": "https://stackoverflow.com/users/600882/scott-colby"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 531, "favorite_count": 1, "accepted_answer_id": 55150936, "answer_count": 1, "score": 1, "last_activity_date": 1552509930, "creation_date": 1552501371, "last_edit_date": 1552504808, "question_id": 55148856, "link": "https://stackoverflow.com/questions/55148856/how-do-i-use-stdin-if-no-positional-arguments-are-given-with-clap", "title": "How do I use STDIN if no positional arguments are given with clap?", "body": "<p>I have a clap <code>App</code> like this:</p>\n\n<pre><code>let m = App::new(\"test\")\n    .arg(\n        Arg::with_name(\"INPUT\")\n            .help(\"a string to be frobbed\")\n            .multiple(true),\n    )\n    .get_matches();\n</code></pre>\n\n<p>I want to read the arguments as an iterable of strings if there are any <code>myapp str1 str2 str3</code> but if not, to act as a filter and read an iterable of lines from stdin <code>cat afile | myapp</code>. This is my attempt:</p>\n\n<pre><code>let stdin = io::stdin();\nlet strings: Box&lt;Iterator&lt;Item = String&gt;&gt; = if m.is_present(\"INPUT\") {\n    Box::new(m.values_of(\"INPUT\").unwrap().map(|ln| ln.to_string()))\n} else {\n    Box::new(stdin.lock().lines().map(|ln| ln.unwrap()))\n};\n\nfor string in strings {\n    frob(string)\n}\n</code></pre>\n\n<p>I believe that, since I am just requiring the <code>Iterator</code> trait, a <code>Box&lt;Iterator&lt;Item = String&gt;&gt;</code> is the only way to go. Is that correct?</p>\n"}, {"tags": ["generics", "rust", "iterator", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552501098, "post_id": 55148334, "comment_id": 97037857, "body": "<code>&amp;self</code> \u2014 are you aware of the concept of mutability in Rust, as well as the fact that <code>Iterator::next</code> requires a mutable receiver?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552501154, "post_id": 55148334, "comment_id": 97037893, "body": "<code>Hitable for T</code> ... <code>&amp;self</code> \u2014 are you aware that references to types might implement different traits than the type itself?"}, {"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552501555, "post_id": 55148334, "comment_id": 97038106, "body": "@Shepmaster Yes, I think I understand those concepts. My trait doesn&#39;t need to mutate underlying value, so perhaps implementing it on iterators is not a good idea. Regarding your second point: I&#39;m not quite sure what happens to the trait&#39;s function argument &amp;self, when I implement the trait for some reference type &amp;T. Will it be &amp;&amp;T? Should I dereference it? I&#39;m using &amp;self in the trait function to show that I only need read access (no taking ownership, no mutation)..."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552501640, "post_id": 55148334, "comment_id": 97038154, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6c46b4a5c7583ed274f3a228444f7d3a\" rel=\"nofollow noreferrer\">Playground</a> , The working version here for into_iter(). and iter(). It is related with the mutability as @Shepmaster pointed."}, {"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1552502095, "post_id": 55148334, "comment_id": 97038404, "body": "@&#214;merErden Yes, thank you, it works now indeed. However, now when I realise that implementing it for iterator requires mutation I think that it&#39;s better to implement it on slices only, since the trait function shouldn&#39;t require mutation (it just reads the data)."}], "answers": [{"comments": [{"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 0, "creation_date": 1552501998, "post_id": 55148910, "comment_id": 97038353, "body": "Great, thank you! Yes, I&#39;ve seen that error message and even checked the suggested link. However, I didn&#39;t understand where exactly I need to add <code>?Sized</code>, for some reason I though that I have to add it to the bounds in the trait implementation (I tried but it didn&#39;t help). Is this approach (i.e. implementing a trait on slices) considered the best for such a task?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 1, "creation_date": 1552504621, "post_id": 55148910, "comment_id": 97039694, "body": "@dying_sphynx I don&#39;t know about &quot;best&quot;. I think both working solutions are reasonable."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1552502748, "last_edit_date": 1552502748, "creation_date": 1552501584, "answer_id": 55148910, "question_id": 55148334, "link": "https://stackoverflow.com/questions/55148334/how-to-implement-a-trait-for-any-sequence-of-elements/55148910#55148910", "title": "How to implement a trait for any sequence of elements?", "body": "<h3>1. <code>Iterator</code>-based</h3>\n\n<p>This cannot work because iterators need to be mutable in order to advance them, but your trait requires <code>&amp;self</code>.</p>\n\n<h3>2. <code>IntoIterator</code>-based</h3>\n\n<p>I'd change the trait to take <code>self</code> by value and then only implement it for references to <code>Obj</code>. This also allows implementing it for any type that implements <code>IntoIterator</code>:</p>\n\n<pre><code>trait Hitable {\n    fn hit(self, val: f64) -&gt; bool;\n}\n\nfn check_hit&lt;T: Hitable&gt;(world: T) -&gt; bool {\n    world.hit(1.0)\n}\n\nstruct Obj(f64);\n\nimpl Hitable for &amp;'_ Obj {\n    fn hit(self, val: f64) -&gt; bool {\n        self.0 &gt; val\n    }\n}\n\nimpl&lt;I&gt; Hitable for I\nwhere\n    I: IntoIterator,\n    I::Item: Hitable,\n{\n    fn hit(self, val: f64) -&gt; bool {\n        self.into_iter().any(|h| h.hit(val))\n    }\n}\n\nfn main() {\n    let o = Obj(2.0);\n    let v = vec![Obj(2.0), Obj(3.0)];\n\n    println!(\"{}\", check_hit(&amp;o));\n    println!(\"{}\", check_hit(&amp;v));\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28799372/155423\">When should I not implement a trait for references to implementors of that trait?</a></li>\n</ul>\n\n<h3>3. Slice-based</h3>\n\n<p>I find that reading the entire error message, not just the one line summary, can help:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `[Obj]` cannot be known at compilation time\n  --&gt; src/main.rs:28:20\n   |\n28 |     println!(\"{}\", check_hit(&amp;v[..]));\n   |                    ^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `[Obj]`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\nnote: required by `check_hit`\n  --&gt; src/main.rs:5:1\n   |\n5  | fn check_hit&lt;T: Hitable&gt;(world: &amp;T) -&gt; bool {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Specifically, this bit: <strong>note: required by <code>check_hit</code></strong> \u2014 <code>check_hit</code> requires that <code>T</code> be <code>Sized</code>. Removing that restriction allows this version to work:</p>\n\n<pre><code>fn check_hit&lt;T: Hitable + ?Sized&gt;(world: &amp;T) -&gt; bool {\n//                      ^~~~~~~~\n    world.hit(1.0)\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44343818/155423\">Why does a reference to a trait in a generic function have to implement `Sized`?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30333607/155423\">What does the question mark mean in a type parameter bound?</a></li>\n</ul>\n"}], "owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 0, "accepted_answer_id": 55148910, "answer_count": 1, "score": 0, "last_activity_date": 1552502748, "creation_date": 1552499496, "last_edit_date": 1552501328, "question_id": 55148334, "link": "https://stackoverflow.com/questions/55148334/how-to-implement-a-trait-for-any-sequence-of-elements", "title": "How to implement a trait for any sequence of elements?", "body": "<p>I am trying to implement a trait for any sequence of elements, so that it will work for vectors, arrays and slices. So far I've tried several approaches, but I can't compile any of them :(</p>\n\n<p>I have this trait, and a function that uses it, and a basic data type implementing the trait:</p>\n\n<pre><code>trait Hitable {\n    fn hit(&amp;self, val: f64) -&gt; bool;\n}\n\nfn check_hit&lt;T: Hitable&gt;(world: &amp;T) -&gt; bool {\n    world.hit(1.0)\n}\n\nstruct Obj(f64);\n\nimpl Hitable for Obj {\n    fn hit(&amp;self, val: f64) -&gt; bool {\n        self.0 &gt; val\n    }\n}\n</code></pre>\n\n<p>I'd like to be able to implement that trait for sequence of <code>Obj</code>'s.\nIt works fine if I just restrict it to vectors:</p>\n\n<pre><code>impl&lt;T&gt; Hitable for Vec&lt;T&gt;\nwhere\n    T: Hitable,\n{\n    fn hit(&amp;self, val: f64) -&gt; bool {\n        self.iter().any(|h| h.hit(val))\n    }\n}\n\nfn main() {\n    let v = vec![Obj(2.0), Obj(3.0)];\n    println!(\"{}\", check_hit(&amp;v));\n}\n</code></pre>\n\n<p>But I want to make it more generic so that it works for arrays and slices; how can I do that?</p>\n\n<p>I tried the following four attempts:</p>\n\n<h3>Attempt #1: for iterator on Hitables.</h3>\n\n<pre><code>// It's not clear how to call it:\n//    vec.iter().hit(...) does not compile\n//    vec.into_iter().hit(...) does not compile\n//\nimpl&lt;T, U&gt; Hitable for T\nwhere\n    T: Iterator&lt;Item = U&gt;,\n    U: Hitable,\n{\n    fn hit(&amp;self, val: f64) -&gt; bool {\n        self.any(|h| h.hit(val))\n    }\n}\n</code></pre>\n\n<h3>Attempt #2: for something which can be turned into iterator.</h3>\n\n<pre><code>// Does not compile as well:\n//\n//         self.into_iter().any(|h| h.hit(val))\n//         ^^^^ cannot move out of borrowed content\n//\nimpl&lt;T, U&gt; Hitable for T\nwhere\n    T: IntoIterator&lt;Item = U&gt;,\n    U: Hitable,\n{\n    fn hit(&amp;self, val: f64) -&gt; bool {\n        self.into_iter().any(|h| h.hit(val))\n    }\n}\n</code></pre>\n\n<h3>Attempt #3: for slices.</h3>\n\n<pre><code>// This usage doesn't compile:\n//     let v = vec![Obj(2.0), Obj(3.0)];\n//     println!(\"{}\", check_hit(&amp;v));\n//\n// It says that Hitable is not implemented for vectors.\n// When I convert vector to slice, i.e. &amp;v[..], complains about\n// unknown size in compilation time.\nimpl&lt;T&gt; Hitable for [T]\nwhere\n    T: Hitable,\n{\n    fn hit(&amp;self, val: f64) -&gt; bool {\n        self.iter().any(|h| h.hit(val))\n    }\n}\n</code></pre>\n\n<h3>Attempt #4: for Iterator + Clone</h3>\n\n<pre><code>//     let v = vec![Obj(2.0), Obj(3.0)];\n//     println!(\"{}\", check_hit(&amp;v.iter()));\n//\n// does not compile:\n//     println!(\"{}\", check_hit(&amp;v.iter()));\n//                    ^^^^^^^^^ `&amp;Obj` is not an iterator\n//\nimpl&lt;T, U&gt; Hitable for T\nwhere\n    T: Iterator&lt;Item = U&gt; + Clone,\n    U: Hitable,\n{\n    fn hit(&amp;self, val: f64) -&gt; bool {\n        self.clone().any(|h| h.hit(val))\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=85849423ff9cc95c3896a7d754215a1d\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}, {"tags": ["pointers", "rust", "reference"], "comments": [{"owner": {"reputation": 467, "user_id": 4366445, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0aTd4.jpg?s=128&g=1", "display_name": "rustyhu", "link": "https://stackoverflow.com/users/4366445/rustyhu"}, "edited": false, "score": 0, "creation_date": 1575559809, "post_id": 55147805, "comment_id": 104614729, "body": "After reading the 2 associated questions and answers, I still think the point of my question is a little different from them. My question emphasizes on the meaning of the Rust syntax &quot;&amp;&amp;T&quot; itself, and whether it is relative to similar concept in C++. In fact there is no &quot;ref to ref&quot; in C++, as the content of the link I put states, even the symbol &quot;&amp;&amp;&quot; in C++ is totally another thing(rvalue reference). So I think &quot;&amp;&amp;&quot; in the 2 languages only look similar, but &quot;&amp;&quot; in Rust is more like pointer in C++, &quot;&amp;&amp;T&quot; is just pointer of pointer of T. This with auto-dereferencing makes the code I put work."}], "owner": {"reputation": 467, "user_id": 4366445, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0aTd4.jpg?s=128&g=1", "display_name": "rustyhu", "link": "https://stackoverflow.com/users/4366445/rustyhu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1143, "favorite_count": 0, "closed_date": 1552497903, "answer_count": 0, "score": 6, "last_activity_date": 1613224304, "creation_date": 1552497599, "last_edit_date": 1613224304, "question_id": 55147805, "link": "https://stackoverflow.com/questions/55147805/what-does-t-reference-to-reference-mean-in-rust", "closed_reason": "Duplicate", "title": "What does &amp;&amp;T (reference to reference) mean in Rust?", "body": "<p>I used to think this is similar to <a href=\"https://en.cppreference.com/w/cpp/language/reference\" rel=\"noreferrer\">lvalue reference collapsing in C++</a>, so <code>&amp;&amp;T</code> should be the same as <code>&amp;T</code>, from perspective of syntax, but I am confused after I compiled the following code:</p>\n\n<pre><code>fn check_ref(x: &amp;i32) -&gt; i32 {\n    println!(\"{}\", x);\n    x + 2\n}\n\nfn main() {\n    for i in &amp;[-3, 2, 39] {\n        // i is &amp;i32\n        check_ref(i); // this works\n        check_ref(&amp;i); // this works\n        check_ref(&amp;&amp;i); // this works\n\n        assert_eq!(i, &amp;i); // error[E0277]: can't compare `i32` with `&amp;i32`\n    }\n}\n</code></pre>\n\n<p>Is it true that multiple references collapse, or does ref-to-ref have some other specific meaning?  </p>\n\n<p>Is this compiler error of <code>assert_eq!</code> only because of some tricks in Rust macros?</p>\n"}, {"tags": ["compiler-errors", "scope", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 455, "user_id": 906999, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bf074f4848623dd263bae1c2c0011dd3?s=128&d=identicon&r=PG", "display_name": "Pete Jodo", "link": "https://stackoverflow.com/users/906999/pete-jodo"}, "edited": false, "score": 0, "creation_date": 1552527747, "post_id": 55153293, "comment_id": 97047686, "body": "Do you mind me asking the steps you took to figure that out? I wasn&#39;t sure what steps I should&#39;ve taken when I ran into the issue in order to figure out what the cause was. Is it just a matter of experience/feeling or did you take some explicit steps to figure it out? Out of curiosity"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 455, "user_id": 906999, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bf074f4848623dd263bae1c2c0011dd3?s=128&d=identicon&r=PG", "display_name": "Pete Jodo", "link": "https://stackoverflow.com/users/906999/pete-jodo"}, "edited": false, "score": 1, "creation_date": 1552529513, "post_id": 55153293, "comment_id": 97048076, "body": "@PeteJodo added."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1552529504, "last_edit_date": 1552529504, "creation_date": 1552524531, "answer_id": 55153293, "question_id": 55144134, "link": "https://stackoverflow.com/questions/55144134/associated-types-to-normalize-serializable-data-via-traits-and-a-generic-type/55153293#55153293", "title": "Associated types to normalize serializable data via traits and a generic type", "body": "<p>You haven't correctly specified the complete bounds on your associated types.</p>\n\n<p><a href=\"https://docs.rs/tide/0.0.5/tide/body/struct.Json.html\" rel=\"nofollow noreferrer\"><code>Json</code></a> only implements <code>IntoResponse</code> when the type it contains implements both <code>Send</code> and <code>Serialize</code>:</p>\n\n<pre><code>impl&lt;T: Send + Serialize&gt; IntoResponse for Json&lt;T&gt;\n</code></pre>\n\n<p>You need to include <code>Send</code> in the bounds for the associated types:</p>\n\n<pre><code>trait IntoPrimaryData: Send {\n    type Attrs: serde::Serialize + Send;\n    //                           ^^^^^^\n    type Rels: serde::Serialize + Send;\n    //                          ^^^^^^\n\n    fn into_primary_data(self) -&gt; PrimaryData&lt;Self::Attrs, Self::Rels&gt;;\n}\n</code></pre>\n\n<h3>Debugging steps</h3>\n\n<p>This line of the error message seemed promising:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the method `with_status` exists but the following trait bounds were not satisfied:\n`tide::body::Json&lt;Document&lt;&lt;T as IntoPrimaryData&gt;::Attrs, &lt;T as IntoPrimaryData&gt;::Rels&gt;&gt; : tide::response::IntoResponse`\n</code></pre>\n\n<p>This states that we could call <code>with_status</code> except that the compiler didn't know that the type implemented the trait. From there, I went to the documentation of <a href=\"https://docs.rs/tide/0.0.5/tide/body/struct.Json.html\" rel=\"nofollow noreferrer\"><code>Json</code></a> to see if it implemented <code>IntoRespose</code> and if so, under what conditions:</p>\n\n<pre><code>impl&lt;T: Send + Serialize&gt; IntoResponse for Json&lt;T&gt;\n</code></pre>\n\n<p>Based on that, we know that this <code>T</code> must be <code>PrimaryData&lt;T::Attrs, T::Rels&gt;</code> and it must implement <code>Send + Serialize</code>. </p>\n\n<p>We see that <code>PrimaryData</code> derives <code>Serialize</code>:</p>\n\n<pre><code>#[derive(Serialize)]\nstruct PrimaryData&lt;Attrs, Rels&gt; {\n</code></pre>\n\n<p>By existing knowledge, I know that most <code>derive</code>d traits require that all of the generic types also implement the trait. It's less obvious, but the same is true for <a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\" rel=\"nofollow noreferrer\"><code>Send</code></a>.</p>\n\n<p>From there, it's a matter of proving that the specific types for <code>Attrs</code> and <code>Rels</code> implement <code>Serialize</code> and <code>Send</code>. The associated type bounds handled one but not the other.</p>\n\n<p>Deciding where to place the bounds is a matter of intent and style \u2014 they could go on the function, the <code>impl</code> block, or in the trait. Since the trait already had mention of <code>Serialize</code>, it seemed a natural place to add the additional bound.</p>\n\n<p>I also made one large misstep \u2014 I assumed that you had correctly specified the bounds and were running into <a href=\"https://stackoverflow.com/q/44790642/155423\">a compiler limitation</a> (<a href=\"https://stackoverflow.com/q/37600687/155423\">also</a>). Only when I tried to apply the suggested duplicate did I realize that the bounds were incorrect.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39415052/155423\">Deriving a trait results in unexpected compiler error, but the manual implementation works</a></li>\n<li><a href=\"https://doc.rust-lang.org/std/marker/trait.Send.html\" rel=\"nofollow noreferrer\"><code>Send</code></a></li>\n</ul>\n"}], "owner": {"reputation": 455, "user_id": 906999, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bf074f4848623dd263bae1c2c0011dd3?s=128&d=identicon&r=PG", "display_name": "Pete Jodo", "link": "https://stackoverflow.com/users/906999/pete-jodo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 55153293, "answer_count": 1, "score": 2, "last_activity_date": 1552529504, "creation_date": 1552486877, "last_edit_date": 1552523859, "question_id": 55144134, "link": "https://stackoverflow.com/questions/55144134/associated-types-to-normalize-serializable-data-via-traits-and-a-generic-type", "title": "Associated types to normalize serializable data via traits and a generic type", "body": "<p>I tried to implement a type that would \"enforce\" some schema to my responses in <a href=\"https://github.com/rustasync/tide\" rel=\"nofollow noreferrer\">Tide</a> but keep getting the \"Items from traits can only be used...\" compiler error.</p>\n\n<pre><code>#![feature(async_await, futures_api, await_macro, arbitrary_self_types)]\n#![allow(proc_macro_derive_resolution_fallback)]\n\nuse serde_derive::Serialize;\nuse tide::{body::Json, IntoResponse, Response};\n\n#[derive(Serialize)]\nstruct Document&lt;Attrs, Rels&gt; {\n    data: PrimaryData&lt;Attrs, Rels&gt;,\n}\n\n#[derive(Serialize)]\nstruct PrimaryData&lt;Attrs, Rels&gt; {\n    id: i32,\n    kind: String,\n    attributes: Attrs,\n    relationships: Rels,\n}\n\ntrait IntoPrimaryData: Send {\n    type Attrs: serde::Serialize;\n    type Rels: serde::Serialize;\n\n    fn into_primary_data(self) -&gt; PrimaryData&lt;Self::Attrs, Self::Rels&gt;;\n}\n\nstruct ServiceResponse&lt;T: IntoPrimaryData&gt;(T);\n\nimpl&lt;T: IntoPrimaryData&gt; IntoResponse for ServiceResponse&lt;T&gt; {\n    fn into_response(self) -&gt; Response {\n        Json(Document {\n            data: self.0.into_primary_data(),\n        })\n        .with_status(http::status::StatusCode::OK)\n        .into_response()\n    }\n}\n\n#[derive(Serialize)]\nstruct User {\n    id: i32,\n    primary_email: String,\n}\n\n#[derive(Serialize)]\nstruct UserAttrs {\n    primary_email: String,\n}\n\nimpl IntoPrimaryData for User {\n    type Attrs = UserAttrs;\n    type Rels = ();\n\n    fn into_primary_data(self) -&gt; PrimaryData&lt;Self::Attrs, Self::Rels&gt; {\n        PrimaryData {\n            id: self.id,\n            kind: \"user\".into(),\n            attributes: UserAttrs {\n                primary_email: self.primary_email,\n            },\n            relationships: (),\n        }\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<pre><code>[dependencies]\ntide = \"0.0.5\"\nhttp = \"0.1.16\"\nserde = \"1.0.89\"\nserde_derive = \"1.0.89\"\n</code></pre>\n\n<p>The compiler returns the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `with_status` found for type `tide::body::Json&lt;Document&lt;&lt;T as IntoPrimaryData&gt;::Attrs, &lt;T as IntoPrimaryData&gt;::Rels&gt;&gt;` in the current scope\n  --&gt; src/main.rs:34:10\n   |\n34 |         .with_status(http::status::StatusCode::OK)\n   |          ^^^^^^^^^^^\n   |\n   = note: the method `with_status` exists but the following trait bounds were not satisfied:\n           `tide::body::Json&lt;Document&lt;&lt;T as IntoPrimaryData&gt;::Attrs, &lt;T as IntoPrimaryData&gt;::Rels&gt;&gt; : tide::response::IntoResponse`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `with_status`, perhaps you need to implement it:\n           candidate #1: `tide::response::IntoResponse`\n</code></pre>\n\n<p>I'm not sure why I'm getting this error but I feel like it has something to do with the line <code>data: self.0.into_primary_data()</code> not being \"specific\" enough and that it is not known what the types of <code>Self::Attrs</code> and <code>Self::Rels</code> are. However, I know that I also get this same error (minus the help tip about \"items from traits can only be...\") if one of the nested types don't implement <code>serde::Serialize</code> but from what I can tell, I've added those bounds everywhere they need to be.</p>\n\n<p>I've tried doing this in what feels like a million ways now and can't quite seem to come up with a way to get some normalized structure for my responses.</p>\n\n<p>I'm using <code>rustc 1.34.0-nightly (02c4c2892 2019-02-26)</code></p>\n"}, {"tags": ["split", "rust", "carriage-return"], "comments": [{"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1552487198, "post_id": 55144120, "comment_id": 97028956, "body": "@trentcl updated question with example. Carriage return \\r is not considered a line terminator."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552487234, "post_id": 55144120, "comment_id": 97028987, "body": "Related: <a href=\"https://github.com/rust-lang/rust/issues/55743\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/55743</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552487484, "post_id": 55144120, "comment_id": 97029188, "body": "Thanks for the update. I&#39;m still not really sure what you&#39;re asking. Code review doesn&#39;t seem appropriate since it&#39;s not compiling. If you are stuck getting it to compile, note that a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> should be provided &quot;<i>in the question itself</i>&quot;"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552487944, "post_id": 55144120, "comment_id": 97029535, "body": "@trentcl, I&#39;m trying to split a string stream on \\n, \\r\\n but most importantly \\r. You are welcome to edit my question with the content from my Rust playground link, but it will be out-of-date almost immediately. The solution is probably more trivial than the edit to my question."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552497015, "post_id": 55145242, "comment_id": 97035660, "body": "This could result in shorter line than expected cause we don&#39;t loop over <code>fill_buf()</code>, working on better code."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 5, "last_activity_date": 1552490882, "last_edit_date": 1552490882, "creation_date": 1552489932, "answer_id": 55145242, "question_id": 55144120, "link": "https://stackoverflow.com/questions/55144120/how-can-i-split-a-stream-on-either-carriage-return-r-or-crlf-r-n-line-term/55145242#55145242", "title": "How can I split a stream on either carriage return (\\r) or CRLF (\\r\\n) line terminators?", "body": "<p>Based on my previous answer on <a href=\"https://github.com/rust-lang/rust/issues/55743#issuecomment-436937262\" rel=\"nofollow noreferrer\">github</a> to match your need:</p>\n\n<pre><code>use std::io::{BufRead, BufReader};\nuse std::str;\n\n#[derive(Debug)]\npub struct MyLines&lt;B&gt; {\n    buffer: B,\n}\n\n#[derive(Debug)]\npub enum MyError {\n    Io(std::io::Error),\n    Utf8(std::str::Utf8Error),\n}\n\nimpl&lt;B&gt; MyLines&lt;B&gt; {\n    pub fn new(buffer: B) -&gt; Self {\n        Self { buffer }\n    }\n}\n\nimpl&lt;B: BufRead&gt; Iterator for MyLines&lt;B&gt; {\n    type Item = Result&lt;String, MyError&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let (line, total) = {\n            let buffer = match self.buffer.fill_buf() {\n                Ok(buffer) =&gt; buffer,\n                Err(e) =&gt; return Some(Err(MyError::Io(e))),\n            };\n            if buffer.is_empty() {\n                return None;\n            }\n            let consumed = buffer\n                .iter()\n                .take_while(|c| **c != b'\\n' &amp;&amp; **c != b'\\r')\n                .count();\n            let total = consumed\n                + if consumed &lt; buffer.len() {\n                    // we found a delimiter\n                    if consumed + 1 &lt; buffer.len() // we look if we found two delimiter\n                    &amp;&amp; buffer[consumed] == b'\\r'\n                    &amp;&amp; buffer[consumed + 1] == b'\\n'\n                    {\n                        2\n                    } else {\n                        1\n                    }\n                } else {\n                    0\n                };\n            let line = match str::from_utf8(&amp;buffer[..consumed]) {\n                Ok(line) =&gt; line.to_string(),\n                Err(e) =&gt; return Some(Err(MyError::Utf8(e))),\n            };\n            (line, total)\n        };\n        self.buffer.consume(total);\n\n        Some(Ok(line))\n    }\n}\n\nfn main() {\n    let f = BufReader::new(\"Heading:\\r\\nLine 1\\rLine 2\\rLine 3\\r\\nEnd\".as_bytes());\n\n    for line in MyLines::new(f) {\n        println!(\"{:?}\", line);\n    }\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Ok(\"Heading:\")\nOk(\"Line 1\")\nOk(\"Line 2\")\nOk(\"Line 3\")\nOk(\"End\")\n</code></pre>\n"}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 865, "favorite_count": 1, "accepted_answer_id": 55145242, "answer_count": 1, "score": 1, "last_activity_date": 1552490882, "creation_date": 1552486824, "last_edit_date": 1552488350, "question_id": 55144120, "link": "https://stackoverflow.com/questions/55144120/how-can-i-split-a-stream-on-either-carriage-return-r-or-crlf-r-n-line-term", "title": "How can I split a stream on either carriage return (\\r) or CRLF (\\r\\n) line terminators?", "body": "<p>I'm trying to split an odd serial port stream that separates lines with carriage-return <code>\\r</code> and sometimes <code>\\r\\n</code>. <code>BufReader</code> has the <code>lines</code> function, but it only splits on <code>\\n</code> or <code>\\r\\n</code>. There is a <code>.read_until(...)</code> function, but it only works for a single terminator.</p>\n\n<p>Based on the <a href=\"https://github.com/rust-lang/rust/blob/190feb65290d39d7ab6d44e994bd99188d339f16/src/libstd/io/mod.rs#L1707\" rel=\"nofollow noreferrer\">standard library's implementation</a>, I've started to <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3ef1779ac6e038dae456d2b205f08e57\" rel=\"nofollow noreferrer\">cobble together</a> some bits, but I haven't gotten it to compile yet. I hope I'm doing this right the \"Rust way\". Regular expressions  seem too expensive for a byte stream. </p>\n\n<h3>Example input:</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>Heading:\\r\\nLine 1\\rLine 2\\rLine 3\\r\\nEnd\n</code></pre>\n\n<p>When you use <code>lines()</code> on that input, you get three lines because <code>\\r</code> is not considered a line terminator:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Heading:\nLine 1\\rLine 2\\rLine 2\\rLine 3\nEnd\n</code></pre>\n"}, {"tags": ["arrays", "rust", "initialization"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552483750, "post_id": 55143009, "comment_id": 97026381, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=def7c91bd7335dbfe36e01c4f28b5984\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552484111, "post_id": 55143009, "comment_id": 97026639, "body": "Also see: <a href=\"https://doc.rust-lang.org/book/ch03-02-data-types.html#the-array-type\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch03-02-data-types.html#the-array-typ&zwnj;&#8203;e</a>"}, {"owner": {"reputation": 221, "user_id": 7994905, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2956905eb62a8706e1edcabae8c7af31?s=128&d=identicon&r=PG&f=1", "display_name": "Seact", "link": "https://stackoverflow.com/users/7994905/seact"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1552485757, "post_id": 55143009, "comment_id": 97027816, "body": "@hellow I didnt describe the problem well. but what if I want to initialize the elements of the array separately?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552486333, "post_id": 55143009, "comment_id": 97028264, "body": "@Seact please do a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> that describe better your problem so."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552486751, "post_id": 55143009, "comment_id": 97028580, "body": "@Seact that&#39;s covered by multiple of the answers in <a href=\"https://stackoverflow.com/questions/31360993/what-is-the-proper-way-to-initialize-a-fixed-length-array\">the linked duplicate</a>."}], "owner": {"reputation": 221, "user_id": 7994905, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2956905eb62a8706e1edcabae8c7af31?s=128&d=identicon&r=PG&f=1", "display_name": "Seact", "link": "https://stackoverflow.com/users/7994905/seact"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 161, "favorite_count": 0, "closed_date": 1552484449, "answer_count": 0, "score": 0, "last_activity_date": 1552532033, "creation_date": 1552483595, "last_edit_date": 1552532033, "question_id": 55143009, "link": "https://stackoverflow.com/questions/55143009/is-it-possible-to-declare-an-immutable-array-and-assign-value-to-its-elements-se", "closed_reason": "Duplicate", "title": "Is it possible to declare an immutable Array and assign value to its elements separately in Rust", "body": "<p>I want to declare an Array and want to initialize it like this\n  (maybe it is not good in real development, but I just want to figure it out)</p>\n\n<p>the key point is that: 1. <code>h</code> is immutable  2. assign(also initialize) <code>h[0]</code> <code>h[1]</code> and <code>h[2]</code> separately.</p>\n\n<pre><code>use std::thread;\nuse std::time::Duration;\nuse rand::Rng; // 0.6.5\n\nfn main() {\n    loop {\n        let h: [u32; 3];\n        h[0] = rand::thread_rng().gen_range(1, 101);\n        h[1] = rand::thread_rng().gen_range(1, 101);\n        h[2] = rand::thread_rng().gen_range(1, 101);\n        println!(\"{:?}\", h);\n        thread::sleep(Duration::from_secs(2));\n    }\n}\n</code></pre>\n\n<p>but the compiler says that</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0381]: use of possibly uninitialized variable: `h`\n  --&gt; src\\main.rs:11:9\n   |\n11 |         h[0] = rand::thread_rng().gen_range(1, 101);\n   |         ^^^^ use of possibly uninitialized `h`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>of course <code>h</code> is uninitialized here, so what could I do?\nor it is impossible to do such a thing</p>\n"}, {"tags": ["git", "rust", "checkout", "libgit2"], "answers": [{"tags": [], "owner": {"reputation": 7009, "user_id": 1364793, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/sRSOF.jpg?s=128&g=1", "display_name": "Dzhuneyt", "link": "https://stackoverflow.com/users/1364793/dzhuneyt"}, "is_accepted": false, "score": 0, "last_activity_date": 1552477567, "creation_date": 1552477567, "answer_id": 55141154, "question_id": 55141013, "link": "https://stackoverflow.com/questions/55141013/how-to-get-the-behaviour-of-git-checkout-in-rust-git2/55141154#55141154", "title": "How to get the behaviour of `git checkout ...` in Rust git2", "body": "<p>I think <code>repo.set_head(\"mybranch\")</code> is what you are looking for. More information is available <a href=\"https://docs.rs/git2/0.8.0/git2/struct.Repository.html#method.set_head\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 194, "user_id": 10061864, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e85c2644da1eb3183ec669998cd00ea?s=128&d=identicon&r=PG&f=1", "display_name": "szignal", "link": "https://stackoverflow.com/users/10061864/szignal"}, "edited": false, "score": 0, "creation_date": 1562798383, "post_id": 56942868, "comment_id": 100494867, "body": "My updated post completely solves the OP&#39;s question. Upvotes are appreciated. I don&#39;t even have enough points to comment on other&#39;s post, like that of the OP, so I can let &#39;em now I successfully answered the question. I&#39;ll work towards making the answer more idiomatic if any interest is shown for this question."}, {"owner": {"reputation": 323, "user_id": 7115678, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70138c232222ba9c8c9617c2fd627f6a?s=128&d=identicon&r=PG&f=1", "display_name": "Gokul", "link": "https://stackoverflow.com/users/7115678/gokul"}, "edited": false, "score": 0, "creation_date": 1619173659, "post_id": 56942868, "comment_id": 118830810, "body": "In the example to checkout a commit, the proper method to use is <code>set_head_detached()</code> - <code>set_head()</code> expects a reference name like <code>refs&#47;heads&#47;master</code> or <code>HEAD</code> (but a commit hash is not a ref). So the proper way is  <code>repo.set_head_detached(oid);</code>."}], "tags": [], "owner": {"reputation": 194, "user_id": 10061864, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e85c2644da1eb3183ec669998cd00ea?s=128&d=identicon&r=PG&f=1", "display_name": "szignal", "link": "https://stackoverflow.com/users/10061864/szignal"}, "is_accepted": true, "score": 13, "last_activity_date": 1562777463, "last_edit_date": 1562777463, "creation_date": 1562621934, "answer_id": 56942868, "question_id": 55141013, "link": "https://stackoverflow.com/questions/55141013/how-to-get-the-behaviour-of-git-checkout-in-rust-git2/56942868#56942868", "title": "How to get the behaviour of `git checkout ...` in Rust git2", "body": "<p>The examples below are Rust v1.34 and git2 v0.8.</p>\n\n<p>To checkout a branch:</p>\n\n<pre><code>use git2::*;\n\nfn main() {\n    let repo = Repository::clone(\n        \"https://github.com/rossmacarthur/dotfiles\",\n        \"dotfiles\"\n    ).expect(\"failed to clone repository\");\n\n    let branch_name = \"my_branch\";\n\n    let head = repo.head().unwrap();\n    let oid = head.target().unwrap();\n    let commit = repo.find_commit(oid).unwrap();\n\n    let branch = repo.branch(\n        branch_name,\n        &amp;commit,\n        false,\n    );\n\n    let obj = repo.revparse_single(&amp;(\"refs/heads/\".to_owned() + \n        branch_name)).unwrap();\n\n    repo.checkout_tree(\n        &amp;obj,\n        None\n    );\n\n    repo.set_head(&amp;(\"refs/heads/\".to_owned() + branch_name));\n}\n</code></pre>\n\n<p>To checkout a commit:</p>\n\n<pre><code>use git2::*;\n\nfn main() {\n    let repo = Repository::clone(\n        \"https://github.com/rossmacarthur/dotfiles\",\n        \"dotfiles\"\n    ).expect(\"failed to clone repository\");\n\n    let my_oid_str = \"9411953f92d100f767e6de6325b17afae5231779\";\n\n    let oid = Oid::from_str(my_oid_str).unwrap();\n    let commit = repo.find_commit(oid).unwrap();\n\n    let branch = repo.branch(\n        my_oid_str,\n        &amp;commit,\n        false,\n    );\n\n    let obj = repo.revparse_single(&amp;(\"refs/heads/\".to_owned() + my_oid_str)).unwrap(); \n\n    repo.checkout_tree(\n        &amp;obj,\n        None,\n    );\n\n    repo.set_head(&amp;(\"refs/heads/\".to_owned() + my_oid_str));\n\n}\n</code></pre>\n\n<p>To checkout a tag try something like this:</p>\n\n<pre><code>use git2::*;\n\nfn main() {\n    // No relation to the example project below.\n    // It looks interesting and it has tags!\n    let repo = Repository::clone(\n        \"https://github.com/narke/colorForth.git\",\n        \"colorforth\"\n    ).expect(\"failed to clone repository\");\n\n    let tag_name = \"v2012\";\n\n    let references = repo.references().unwrap();\n\n    for reference in references {\n        let _reference = reference.unwrap();\n\n        if _reference.is_tag() == true {\n            let tag = _reference.peel_to_tag().unwrap();\n            if tag.name().unwrap() == tag_name {\n                let target_oid = tag.target().unwrap().id();\n                let commit = repo.find_commit(target_oid).unwrap();\n\n                let branch = repo.branch(\n                    tag_name,\n                    &amp;commit,\n                    false,\n                );\n\n                let obj = repo.revparse_single(&amp;(\"refs/heads/\".to_owned() + tag_name)).unwrap();\n\n                repo.checkout_tree(\n                    &amp;obj,\n                    None,\n                );\n\n                repo.set_head(&amp;(\"refs/heads/\".to_owned() + tag_name)); \n            }\n        }\n\n    }\n}\n</code></pre>\n\n<p>I bet there is generally a better way but the question has been unanswered for months and this is how I figured it out moments ago.</p>\n"}, {"tags": [], "owner": {"reputation": 323, "user_id": 7115678, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70138c232222ba9c8c9617c2fd627f6a?s=128&d=identicon&r=PG&f=1", "display_name": "Gokul", "link": "https://stackoverflow.com/users/7115678/gokul"}, "is_accepted": false, "score": 0, "last_activity_date": 1619264215, "last_edit_date": 1619264215, "creation_date": 1619250068, "answer_id": 67240436, "question_id": 55141013, "link": "https://stackoverflow.com/questions/55141013/how-to-get-the-behaviour-of-git-checkout-in-rust-git2/67240436#67240436", "title": "How to get the behaviour of `git checkout ...` in Rust git2", "body": "<p>With a more recent version of <code>git2</code> (<code>v0.13.18</code>):</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use git2::Repository;\n\nfn main() {\n    let repo = Repository::clone(&quot;https://github.com/rossmacarthur/dotfiles&quot;, &quot;/tmp/dots&quot;)\n        .expect(&quot;Failed to clone repo&quot;);\n\n    let refname = &quot;master&quot;; // or a tag (v0.1.1) or a commit (8e8128)\n    let (object, reference) = repo.revparse_ext(refname).expect(&quot;Object not found&quot;);\n    \n    repo.checkout_tree(&amp;object, None)\n        .expect(&quot;Failed to checkout&quot;);\n\n    match reference {\n        Some(gref) =&gt; repo.set_head(gref.name().unwrap()),\n        None =&gt; repo.set_head_detached(object.id()),\n    }\n    .expect(&quot;Failed to set HEAD&quot;);\n}\n\n</code></pre>\n<p>Note that <code>checkout_tree</code> only sets the contents of the working tree, and <code>set_head</code> only sets the <code>HEAD</code>. Running only one of them will leave the directory in a dirty state.</p>\n<p><code>reference</code> will be the <code>Some</code> variant only when <code>refname</code> is an actual reference, like a branch name or tag.</p>\n"}], "owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 913, "favorite_count": 2, "accepted_answer_id": 56942868, "answer_count": 3, "score": 7, "last_activity_date": 1619264215, "creation_date": 1552477091, "last_edit_date": 1552482386, "question_id": 55141013, "link": "https://stackoverflow.com/questions/55141013/how-to-get-the-behaviour-of-git-checkout-in-rust-git2", "title": "How to get the behaviour of `git checkout ...` in Rust git2", "body": "<p>I am using the Rust <a href=\"https://crates.io/crates/git2\" rel=\"noreferrer\">git2</a> crate to clone Git repositories like this</p>\n\n<pre><code>use git2::Repository;\n\nfn main() {\n    let repo = Repository::clone(\n        \"https://github.com/rossmacarthur/dotfiles\",\n        \"dotfiles\"\n     ).expect(\"failed to clone repository\");\n\n     repo.checkout(\"mybranch\");  // need something like this.\n}\n</code></pre>\n\n<p>I want to be able to checkout a branch or a commit or a tag.</p>\n\n<p>I have looked at the following documentation but am still not sure which method to use</p>\n\n<ul>\n<li><a href=\"https://docs.rs/git2/0.8.0/git2/struct.Repository.html#method.checkout_head\" rel=\"noreferrer\">https://docs.rs/git2/0.8.0/git2/struct.Repository.html#method.checkout_head</a></li>\n<li><a href=\"https://docs.rs/git2/0.8.0/git2/struct.Repository.html#method.checkout_tree\" rel=\"noreferrer\">https://docs.rs/git2/0.8.0/git2/struct.Repository.html#method.checkout_tree</a></li>\n<li><a href=\"https://docs.rs/git2/0.8.0/git2/struct.Repository.html#method.checkout_index\" rel=\"noreferrer\">https://docs.rs/git2/0.8.0/git2/struct.Repository.html#method.checkout_index</a></li>\n</ul>\n\n<p>I am able to do the following but it only changes the files</p>\n\n<pre><code>let object = repo\n    .revparse_single(\"mybranch\")\n    .expect(\"failed to find identifier\");\nrepo.checkout_tree(&amp;object, None)\n    .expect(&amp;format!(\"failed to checkout '{:?}'\", object));\n</code></pre>\n\n<p>And if I do a reset it changes the HEAD but not the current branch</p>\n\n<pre><code>repo.reset(&amp;object, git2::ResetType::Soft, None)\n    .expect(&amp;format!(\"failed to checkout '{:?}'\", object));\n</code></pre>\n"}, {"tags": ["rust", "associated-types"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1552460625, "post_id": 55135637, "comment_id": 97012667, "body": "<i>&quot;This does not compile&quot;</i>: please add a error message then if it does not compile so we can easily reproduce your problem.."}, {"owner": {"reputation": 3548, "user_id": 10415695, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ex5vb.jpg?s=128&g=1", "display_name": "LogicalBranch", "link": "https://stackoverflow.com/users/10415695/logicalbranch"}, "edited": false, "score": 2, "creation_date": 1552463027, "post_id": 55135637, "comment_id": 97013777, "body": "Could you include the error message? We can&#39;t help you unless you do so."}], "answers": [{"comments": [{"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 1, "creation_date": 1552464016, "post_id": 55136707, "comment_id": 97014183, "body": "You can also write <code>&lt;C: Client, F: Filter&lt;Message = C::Message&gt;&gt;</code> directly (to me it doesn&#39;t seem like <code>where</code> adds much readability here). I&#39;d like <code>where C::Message = F::Message</code> more, but it doesn&#39;t work yet: <a href=\"https://github.com/rust-lang/rust/issues/20041\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/20041</a>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1552472024, "post_id": 55136707, "comment_id": 97018903, "body": "To avoid the duplication of trait bounds, you could simply remove the trait bounds from the struct itself and only leave them on the impl. If the struct can only be created by private constructors the end result is the same. You only need trait bounds on the struct if you need to use associated types in the struct definition, but that&#39;s not the case here."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 7, "last_activity_date": 1552485265, "last_edit_date": 1552485265, "creation_date": 1552463033, "answer_id": 55136707, "question_id": 55135637, "link": "https://stackoverflow.com/questions/55135637/how-to-require-that-the-associated-types-from-two-traits-are-the-same/55136707#55136707", "title": "How to require that the associated types from two traits are the same?", "body": "<p>You need to constrain the type parameters appropriately:</p>\n\n<pre><code>struct ClientWithFilter&lt;C, F&gt;\nwhere\n    C: Client,\n    F: Filter&lt;Message = C::Message&gt;,\n{\n    filter: F,\n    client: C,\n}\n\nimpl&lt;C, F&gt; ClientWithFilter&lt;C, F&gt;\nwhere\n    C: Client,\n    F: Filter&lt;Message = C::Message&gt;,\n{\n    fn check_and_send(&amp;self, message: &amp;C::Message) -&gt; Result&lt;(), Error&gt; {\n        if self.filter.is_valid(message) {\n            self.client.send(message)\n        } else {\n            Err(Error::MessageInvalid)\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=89a33da87372d46650b37ec6a1f13edf\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The redundant duplication of the constraints on the impl is necessary for now, I think. I believe there's an RFC to let impls inherit constraints from the struct definition.</p>\n"}], "owner": {"reputation": 319, "user_id": 495026, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f7065b4130cadb4e8cb1b142b56b5a3c?s=128&d=identicon&r=PG", "display_name": "bm842", "link": "https://stackoverflow.com/users/495026/bm842"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1008, "favorite_count": 0, "closed_date": 1552485485, "accepted_answer_id": 55136707, "answer_count": 1, "score": -1, "last_activity_date": 1552485640, "creation_date": 1552458266, "last_edit_date": 1552485455, "question_id": 55135637, "link": "https://stackoverflow.com/questions/55135637/how-to-require-that-the-associated-types-from-two-traits-are-the-same", "closed_reason": "Duplicate", "title": "How to require that the associated types from two traits are the same?", "body": "<p>I have the 2 following traits:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Filter {\n    type Message;\n    fn is_valid(&amp;self, message: &amp;Self::Message) -&gt; bool;\n}\n\ntrait Client {\n    type Message;\n    fn send(&amp;self, message: &amp;Self::Message) -&gt; Result&lt;(), Error&gt;;\n}\n</code></pre>\n\n<p>I would like an implementation of <code>Filter</code> and <code>Client</code> to use the same <code>Message</code> type.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct ClientWithFilter&lt;C: Client, F: Filter&gt; {\n    filter: F,\n    client: C,\n}\n\nimpl&lt;C: Client, F: Filter&gt; ClientWithFilter&lt;C, F&gt; {\n    /// C::Message or F::Message???\n    fn check_and_send(&amp;self, message: &amp;C::Message) -&gt; Result&lt;(), Error&gt; {\n        if self.filter.is_valid(message) {\n            self.client.send(message)\n        } else {\n            Err(Error::MessageInvalid)\n        }\n    }\n}\n</code></pre>\n\n<p>This does not compile:</p>\n\n<pre><code>if self.filter.is_valid(message) {\n    |                   ^^^^^^^ expected client::Filter::Message, found client::Client::Message\n    |\n    = note: expected type `&amp;&lt;F as client::Filter&gt;::Message`\n               found type `&amp;&lt;C as client::Client&gt;::Message`\n</code></pre>\n\n<p>The compiler sees 2 distinct types where I would like to have a single one.\nHow can I write this in Rust in a correct way?</p>\n"}, {"tags": ["rust", "clap"], "answers": [{"tags": [], "owner": {"reputation": 136, "user_id": 3709997, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4fe11a81304d79295e2a3bf6f09062fe?s=128&d=identicon&r=PG", "display_name": "Walther", "link": "https://stackoverflow.com/users/3709997/walther"}, "is_accepted": true, "score": 2, "last_activity_date": 1552484361, "last_edit_date": 1552484361, "creation_date": 1552450819, "answer_id": 55134333, "question_id": 55133351, "link": "https://stackoverflow.com/questions/55133351/is-there-a-way-to-get-clap-to-use-default-values-from-a-file/55134333#55134333", "title": "Is there a way to get clap to use default values from a file?", "body": "<p>From clap's documentation on <code>default_value</code>:</p>\n\n<blockquote>\n  <p>NOTE: If the user does not use this argument at runtime <code>ArgMatches::is_present</code> will still return true. If you wish to determine whether the argument was used at runtime or not, consider <code>ArgMatches::occurrences_of</code> which will return <code>0</code> if the argument was not used at runtime.</p>\n  \n  <p><a href=\"https://docs.rs/clap/2.32.0/clap/struct.Arg.html#method.default_value\" rel=\"nofollow noreferrer\">https://docs.rs/clap/2.32.0/clap/struct.Arg.html#method.default_value</a></p>\n</blockquote>\n\n<p>This can be utilized to get the behavior you described:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate clap;\nuse clap::{App, Arg};\nuse std::fs::File;\nuse std::io::prelude::*;\n\nfn main() {\n    let matches = App::new(\"MyApp\")\n        .version(\"0.1.0\")\n        .about(\"Example for StackOverflow\")\n        .arg(\n            Arg::with_name(\"config\")\n                .short(\"c\")\n                .long(\"config\")\n                .value_name(\"FILE\")\n                .help(\"Sets a custom config file\"),\n        )\n        .arg(\n            Arg::with_name(\"example\")\n                .short(\"e\")\n                .long(\"example\")\n                .help(\"Sets an example parameter\")\n                .default_value(\"default_value\")\n                .takes_value(true),\n        )\n        .get_matches();\n\n    let mut value = String::new();\n\n    if let Some(c) = matches.value_of(\"config\") {\n        let file = File::open(c);\n        match file {\n            Ok(mut f) =&gt; {\n                // Note: I have a file `config.txt` that has contents `file_value`\n                f.read_to_string(&amp;mut value).expect(\"Error reading value\");\n            }\n            Err(_) =&gt; println!(\"Error reading file\"),\n        }\n\n        // Note: this lets us override the config file value with the\n        // cli argument, if provided\n        if matches.occurrences_of(\"example\") &gt; 0 {\n            value = matches.value_of(\"example\").unwrap().to_string();\n        }\n    } else {\n        value = matches.value_of(\"example\").unwrap().to_string();\n    }\n\n    println!(\"Value for config: {}\", value);\n}\n\n// Code above licensed CC0\n// https://creativecommons.org/share-your-work/public-domain/cc0/ \n</code></pre>\n\n<p>Resulting in the behavior:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./target/debug/example\nValue for config: default_value\n./target/debug/example --example cli_value\nValue for config: cli_value\n./target/debug/example --config config.txt\nValue for config: file_value\n./target/debug/example --example cli_value --config config.txt\nValue for config: cli_value\n</code></pre>\n"}], "owner": {"reputation": 39, "user_id": 11194430, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c1316fdc387b8402bbe135670efe71d?s=128&d=identicon&r=PG&f=1", "display_name": "picked name", "link": "https://stackoverflow.com/users/11194430/picked-name"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1377, "favorite_count": 1, "accepted_answer_id": 55134333, "answer_count": 1, "score": 1, "last_activity_date": 1552484361, "creation_date": 1552443283, "last_edit_date": 1552444369, "question_id": 55133351, "link": "https://stackoverflow.com/questions/55133351/is-there-a-way-to-get-clap-to-use-default-values-from-a-file", "title": "Is there a way to get clap to use default values from a file?", "body": "<p>I'm programming a CLI using <a href=\"https://clap.rs/\" rel=\"nofollow noreferrer\">clap</a> to parse my arguments. I want to provide defaults for options, but if there's a config file, the config file should win against defaults.</p>\n\n<p>It's easy to prioritize command line arguments over defaults, but I want the priority order of:</p>\n\n<ol>\n<li>command line arguments</li>\n<li>config file</li>\n<li>defaults</li>\n</ol>\n\n<p>If the config file isn't set by the command line options, it's also easy to set that up, just by parsing the config file before running <code>parse_args</code>, and supplying the values from the parsed config file into <code>default_value</code>. The problem is that if you specify the config file in the command line, you can't change the defaults until after the parsing. </p>\n\n<p>The only way I can think of doing it is by not setting a <code>default_value</code> and then manually match <code>\"\"</code> in <code>value_of</code>. The issue is that in that case, clap won't be able to build a useful <code>--help</code>.</p>\n\n<p>Is there a way to get clap to read the config file itself?</p>\n"}, {"tags": ["rust", "pattern-matching"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552427384, "post_id": 55130932, "comment_id": 97003902, "body": "I think the book is wrong to call these &quot;legacy&quot;; as it points out, you still need them in some situations, and sometimes it can be clearer to use <code>ref</code>. So, definitely be aware of &quot;pattern ergonomics&quot; and how it works, but also I don&#39;t think you should go out of your way to avoid <code>ref</code> and <code>ref mut</code>."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1553676325, "last_edit_date": 1553676325, "creation_date": 1552427070, "answer_id": 55131093, "question_id": 55130932, "link": "https://stackoverflow.com/questions/55130932/how-can-the-ref-keyword-be-avoided-when-pattern-matching-in-a-function-taking-s/55131093#55131093", "title": "How can the ref keyword be avoided when pattern matching in a function taking &amp;self or &amp;mut self?", "body": "<p>Since <code>self</code> is of type <code>&amp;mut Self</code>, it is enough to match against itself, while omitting <code>ref</code> entirely. Either dereferencing it with <code>*self</code> or adding <code>&amp;</code> to the match arm would cause an unwanted move.</p>\n\n<pre><code>fn ref_mut(&amp;mut self) -&gt; &amp;mut i32 {\n    match self {\n        OwnBox(i) =&gt; i,\n    }\n}\n</code></pre>\n\n<p>For newtypes such as this one however, <code>&amp;mut self.0</code> would have been enough.</p>\n\n<p>This is thanks to <a href=\"https://rust-lang.github.io/rfcs/2005-match-ergonomics.html\" rel=\"nofollow noreferrer\">RFC 2005 \u2014\u00a0Match Ergonomics</a>.</p>\n"}], "owner": {"reputation": 185, "user_id": 2292040, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/9bc998bf2e47133277207c93ddf2746a?s=128&d=identicon&r=PG&f=1", "display_name": "user2292040", "link": "https://stackoverflow.com/users/2292040/user2292040"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 540, "favorite_count": 1, "accepted_answer_id": 55131093, "answer_count": 1, "score": 2, "last_activity_date": 1553676325, "creation_date": 1552426260, "last_edit_date": 1553620081, "question_id": 55130932, "link": "https://stackoverflow.com/questions/55130932/how-can-the-ref-keyword-be-avoided-when-pattern-matching-in-a-function-taking-s", "title": "How can the ref keyword be avoided when pattern matching in a function taking &amp;self or &amp;mut self?", "body": "<p>The Rust book <a href=\"https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html#legacy-patterns-ref-and-ref-mut\" rel=\"nofollow noreferrer\">calls the <code>ref</code> keyword \"legacy\"</a>. As I want to follow the implicit advice to avoid <code>ref</code>, how can I do it in the following toy example? You can find the code also on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dddf5b646d2502c8fc0030ec2f50c537\" rel=\"nofollow noreferrer\">playground</a>.</p>\n\n<pre><code>struct OwnBox(i32);\n\nimpl OwnBox {\n    fn ref_mut(&amp;mut self) -&gt; &amp;mut i32 {\n        match *self {\n            OwnBox(ref mut i) =&gt; i,\n        }\n\n        // This doesn't work. -- Even not, if the signature of the signature of the function is\n        // adapted to take an explcit lifetime 'a and use it here like `&amp;'a mut i`.\n        // match *self {\n        //     OwnBox(mut i) =&gt; &amp;mut i,\n        // }\n\n        // This doesn't work\n        // match self {\n        //     &amp;mut OwnBox(mut i) =&gt; &amp;mut i,\n        // }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1552417677, "post_id": 55128808, "comment_id": 96999582, "body": "You are greatly dis-servicing yourself by thinking of floating point at all, where equality is almost never the right operation to start with. There are other types."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 1, "creation_date": 1552418233, "post_id": 55128808, "comment_id": 96999861, "body": "<i>&quot;I may be able to understand it better if I find an example of code which does not require Eq.&quot;</i> -- I think you&#39;ve placed an unnecessary qualification on your question here. Why not just have it explained to you exactly why <code>HashMap</code> requires <code>Eq</code>? You&#39;ve assumed <i>&quot;We have the same basic issue&quot;</i> in the case of <code>assert_eq!</code>, but this is an unwarranted assumption (because you&#39;ve already admitted you don&#39;t know what this issue is)."}, {"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552418263, "post_id": 55128808, "comment_id": 96999880, "body": "@Shepmaster well, equality on floats is a nice and simple example of a relation which is not reflexive but well known to almost everybody... It&#39;s even present here: <a href=\"https://en.wikipedia.org/wiki/Partial_equivalence_relation\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Partial_equivalence_relation</a>"}, {"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1552418454, "post_id": 55128808, "comment_id": 96999979, "body": "@BenjaminLindley hm, but I understand why <code>HashMap</code> requires <code>Eq</code>: so that it is able to find all the keys. Having <code>Eq</code> means that we don&#39;t have values <code>x</code> such that <code>x != x</code>. It makes sense for lookups. But what are the examples when we don&#39;t need <code>Eq</code> and are content only for <code>PartialEq</code>? Reflexivity is a nice property, why abandon it and just use <code>PartialEq</code>? And if we always want <code>Eq</code> then why have <code>PartialEq</code> trait at all?"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1552418643, "post_id": 55128808, "comment_id": 97000067, "body": "@dying_sphynx: But you already named an example (<code>assert_eq!</code>), that only requires <code>PartialEq</code>."}, {"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1552418843, "post_id": 55128808, "comment_id": 97000164, "body": "@BenjaminLindley Indeed, but what is the property of a function which allows us to decide whether to require <code>Eq</code> or <code>PartialEq</code>?  Is it that we can use <code>PartialEq</code> if we never intend to compare <code>x</code> to <code>x</code> and thus don&#39;t care about reflexivity?"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1552419533, "post_id": 55128808, "comment_id": 97000492, "body": "@dying_sphynx: You could, for example, have some kind of list you are searching where all non-comparable values have already been filtered out."}, {"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1552419819, "post_id": 55128808, "comment_id": 97000628, "body": "@BenjaminLindley I don&#39;t fully understand what you mean here... I thought that <code>PartialEq</code> is not about &quot;non-comparable items&quot; (non-comparable to what?), but that it means that we can have values of the type that are not equal to themselves (even all of them can be like this)."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 2534, "user_id": 10609635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e433b22da80480e4d7d811ceec10430?s=128&d=identicon&r=PG&f=1", "display_name": "SpencerPark", "link": "https://stackoverflow.com/users/10609635/spencerpark"}, "edited": false, "score": 1, "creation_date": 1552420983, "post_id": 55128808, "comment_id": 97001173, "body": "@SpencerPark This is a very lucid explanation packed in a small number of words, kudos. The explanation <a href=\"https://doc.rust-lang.org/book/appendix-03-derivable-traits.html#partialeq-and-eq-for-equality-comparisons\" rel=\"nofollow noreferrer\">in the book</a> technically says the same thing, but it&#39;s not as clear. It should really be an answer."}, {"owner": {"reputation": 1287, "user_id": 106275, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/43vfP.png?s=128&g=1", "display_name": "Stein", "link": "https://stackoverflow.com/users/106275/stein"}, "edited": false, "score": 0, "creation_date": 1552673451, "post_id": 55128808, "comment_id": 97115074, "body": "The gist I was looking for: yes, <code>assert_eq!(f64::NAN, some_code_producing_nan())</code> is silly, but that doesn&#39;t mean you assert_eq should require Eq, because then you couldn&#39;t use it with floats other than NAN (like <code>assert_eq!(cached_value, recalculate_value(x))</code>), nor on other PartialEq-only types. I guess that ideally the compiler would warn if an argument of assert_eq has a known value that isn&#39;t even equal to itself."}], "answers": [{"comments": [{"owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "edited": false, "score": 1, "creation_date": 1552737146, "post_id": 55130202, "comment_id": 97130246, "body": "I was thinking more about that trying: 1) to come up with more examples of non-reflexive types (except floats and structures containing them) and 2) to come up with any other useful functions requiring only PartialEq as opposed to Eq. I couldn&#39;t find any, so it&#39;s starting to look to me that all this business of PartialEq vs Eq separation has been caused by floats and NaN and desire to control in types such potentially wrong things as sorting vector of floats (which will work &quot;randomly&quot; in presents of NaN)."}], "tags": [], "owner": {"reputation": 2534, "user_id": 10609635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e433b22da80480e4d7d811ceec10430?s=128&d=identicon&r=PG&f=1", "display_name": "SpencerPark", "link": "https://stackoverflow.com/users/10609635/spencerpark"}, "is_accepted": true, "score": 18, "last_activity_date": 1552422763, "creation_date": 1552422763, "answer_id": 55130202, "question_id": 55128808, "link": "https://stackoverflow.com/questions/55128808/when-is-it-appropriate-to-require-only-partialeq-and-not-eq/55130202#55130202", "title": "When is it appropriate to require only PartialEq and not Eq?", "body": "<p>Deciding when to use <code>PartialEq</code> vs <code>Eq</code> should be based on whether the use requires that <code>x == x</code>. </p>\n\n<p>The question is not about whether it is possible to compare <code>x</code> to <code>x</code> but rather if that comparison happens, does the use depend on <code>x==x</code> always holding? If the answer is yes, use <code>Eq</code>. Otherwise prefer the weaker constraint <code>PartialEq</code>. </p>\n\n<p><code>assert_eq!</code>doesn't depend on <code>x==x</code> always holding so there is no need to force that constraint on the caller. As OP succinctly mentioned 2 examples in the comments:</p>\n\n<blockquote>\n  <p>if we do <code>assert_eq!(NAN, produces_nan())</code> - it's our problem that it gives <code>false</code>, but if we do a lookup of a <code>NAN</code> key in a <code>HashMap</code>, it would be a problem of the <code>HashMap</code>, because it would violate its lookup contract (that it should be able to find all the keys put in the map)</p>\n</blockquote>\n"}], "owner": {"reputation": 986, "user_id": 211906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6565de1d92bcfa6693aca81cc1cb09aa?s=128&d=identicon&r=PG", "display_name": "dying_sphynx", "link": "https://stackoverflow.com/users/211906/dying-sphynx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1351, "favorite_count": 1, "accepted_answer_id": 55130202, "answer_count": 1, "score": 18, "last_activity_date": 1552422763, "creation_date": 1552416866, "last_edit_date": 1552417607, "question_id": 55128808, "link": "https://stackoverflow.com/questions/55128808/when-is-it-appropriate-to-require-only-partialeq-and-not-eq", "title": "When is it appropriate to require only PartialEq and not Eq?", "body": "<p>I am reading <a href=\"https://doc.rust-lang.org/book/appendix-03-derivable-traits.html\" rel=\"noreferrer\">the Rust book</a> and trying to understand use cases for <code>PartialEq</code> and <code>Eq</code> traits. </p>\n\n<p>I realise that <code>PartialEq</code> is for relations which are not necessarily reflexive (i.e. there can be such <code>x</code> that <code>x != x</code>) and that <code>Eq</code> is a marker trait which says that relation is also reflexive (and now it is a proper equivalence relation).</p>\n\n<p>The books gives an example where <code>PartialEq</code> is not enough and <code>Eq</code> is required: <code>HashMap&lt;K, V&gt;</code> lookups. Indeed, if we use as a key a data type which only implements <code>PartialEq</code> (for example floating point number), we would get in trouble when we try to use <code>NaN</code> as a key, since we won't be able to find it.</p>\n\n<p>Now, I am trying to understand what feature of a lookup makes it require <code>Eq</code>. I may be able to understand it better if I find an example of code which does not require <code>Eq</code>. </p>\n\n<p>The book says that <code>assert_eq!</code> requires only <code>PartialEq</code> so that we are able to compare things for equality. But if we write <code>assert_eq!(f64::NAN, some_code_producing_nan());</code> in a test, the test will always fail. We have the same basic issue as with using a <code>PartialEq</code> key in a <code>HashMap</code>, but for some reason it is considered appropriate here.</p>\n\n<p>What is an example of a reasonable function which requires only <code>PartialEq</code>  and adding <code>Eq</code> is not desirable/does not make sense?</p>\n\n<p>If there are no such use cases, then why do we care about splitting it into two traits <code>PartialEq</code> / <code>Eq</code>? Haskell, for example, just has <code>Eq</code>.</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552416294, "post_id": 55128638, "comment_id": 96998875, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/55128638/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. For example, <code>Key</code> is undefined. Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552416467, "post_id": 55128638, "comment_id": 96998961, "body": "TL;DR the duplicates: <code>pub fn sum(&amp;self) -&gt; Option&lt;T&gt; where for&lt;&#39;a&gt; &amp;&#39;a T: Add&lt;&amp;&#39;a T, Output = T&gt;</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552416794, "post_id": 55128638, "comment_id": 96999143, "body": "Your function body can also be <code>self.items.iter().map(|i| i.as_ref().unwrap()).fold(None, |acc, i| { acc.map_or(Some(i.clone()), |acc| Some(&amp;acc + i)) })</code>; although I&#39;m not a fan of the <code>unwrap</code>s."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552417453, "post_id": 55128638, "comment_id": 96999462, "body": "Or <code>let mut iter = self.items.iter().map(|v| v.as_ref().unwrap()); iter.next().map(|init| iter.fold(init.clone(), |acc, i| &amp;acc + i))</code>"}, {"owner": {"reputation": 1987, "user_id": 1177536, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/612d459c224da10178cf93cb775538bd?s=128&d=identicon&r=PG", "display_name": "CjS", "link": "https://stackoverflow.com/users/1177536/cjs"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552418662, "post_id": 55128638, "comment_id": 97000080, "body": "Thanks @Shepmaster; I was looking for the HRTB stuff, but didn&#39;t know what to look for. Since this question is in fact a dupe, I&#39;ll just close it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552418825, "post_id": 55128638, "comment_id": 97000153, "body": "If you couldn&#39;t find those existing answers in your search, then leaving this question as a signpost to them would help someone who searched for the same query strings (which presumably you used when asking your question)."}], "owner": {"reputation": 1987, "user_id": 1177536, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/612d459c224da10178cf93cb775538bd?s=128&d=identicon&r=PG", "display_name": "CjS", "link": "https://stackoverflow.com/users/1177536/cjs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 140, "favorite_count": 0, "closed_date": 1552416416, "answer_count": 0, "score": 0, "last_activity_date": 1552416497, "creation_date": 1552416143, "last_edit_date": 1552416274, "question_id": 55128638, "link": "https://stackoverflow.com/questions/55128638/trait-bounds-on-references-for-local-variables", "closed_reason": "Duplicate", "title": "Trait bounds on references for local variables", "body": "<p>I have a zero-copy implementation of an operation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a, 'b&gt; Add&lt;&amp;'b Key&gt; for &amp;'a Key {\n    type Output = Key;\n\n    fn add(self, rhs: &amp;'b Key) -&gt; Key {\n        // ... calculate sum from given references ...\n        Key::new(sum)\n    }\n}\n</code></pre>\n\n<p>I have several structs with similar properties that all implement <code>Add</code> with two references as input, returning a new value, i.e. <code>&amp;'a T: Add&lt;&amp;'b T, Output = T&gt;</code></p>\n\n<p>I'd like to write a generic function that can make use of any of these implementations, but nothing seems to satisfy the borrow checker:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct FixedSet&lt;T&gt; {\n    items: Vec&lt;Option&lt;T&gt;&gt;,\n}\n\nimpl&lt;T: Clone + PartialEq&gt; FixedSet&lt;T&gt; {\n...\n    pub fn sum&lt;'a&gt;(&amp;self) -&gt; Option&lt;T&gt;\n        where\n            T: 'a,\n            &amp;'a T: Add&lt;&amp;'a T, Output=T&gt;,\n    {\n        if self.items.len() == 0 {\n            return None\n        }\n        let mut iter = self.items.iter(); //** Error **\n        let mut sum = iter.next().unwrap().as_ref().unwrap().clone();\n        for v in iter {\n            let t = v.as_ref().unwrap();\n            sum = &amp;sum + t; // *A*\n        }\n        Some(sum)\n    }\n</code></pre>\n\n<p>The error is: <code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements</code>.</p>\n\n<p>I'd <em>like</em> to tell the compiler, \"Hey, when calling <code>add</code> with two references to <code>T</code>, don't worry, the references only need to live until the return from <code>add</code> at <strong>A</strong>\"; but I can't seem to get it right.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1552401403, "last_edit_date": 1552401403, "creation_date": 1552400226, "answer_id": 55123667, "question_id": 55122541, "link": "https://stackoverflow.com/questions/55122541/how-can-i-implement-from-for-both-concrete-error-types-and-boxerror-in-rust/55123667#55123667", "title": "How can I implement From for both concrete Error types and Box&lt;Error&gt; in Rust?", "body": "<p>TL;DR: I'm pretty sure that you cannot in a generic way.</p>\n\n<blockquote>\n  <p>I don't understand why that's relevant, since the type I'm attempting to convert from is a <code>Box&lt;dyn Error&gt;</code>, which does have a size known at compile time.</p>\n</blockquote>\n\n<p>That's not the place it's complaining about. Look at the error message again (slightly cleaned up):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `Sized` is not implemented for `dyn Error`\nrequired because of the requirements on the impl of `Error` for `Box&lt;dyn Error&gt;`\nrequired because of the requirements on the impl of `From&lt;Box&lt;dyn Error&gt;&gt;` for `Handler`\nrequired by `From::from`\n</code></pre>\n\n<p>The second line is the important one. Here's a simpler reproduction of your problem:</p>\n\n<pre><code>use std::error::Error;\n\nfn example&lt;E: Error&gt;() {}\n\nfn main() {\n    example::&lt;Box&lt;dyn Error&gt;&gt;();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `dyn std::error::Error` cannot be known at compilation time\n --&gt; src/main.rs:6:5\n  |\n6 |     example::&lt;Box&lt;dyn Error&gt;&gt;();\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `dyn std::error::Error`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = note: required because of the requirements on the impl of `std::error::Error` for `std::boxed::Box&lt;dyn std::error::Error&gt;`\nnote: required by `example`\n --&gt; src/main.rs:3:1\n  |\n3 | fn example&lt;E: Error&gt;() {}\n  | ^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p><code>Error</code> is only <a href=\"https://github.com/rust-lang/rust/blob/1.33.0/src/libstd/error.rs#L521-L530\" rel=\"nofollow noreferrer\">implemented for <code>Box&lt;T&gt;</code> when <code>T</code> is <code>Sized</code></a> and implements <code>Error</code> itself:</p>\n\n<pre><code>impl&lt;T: Error&gt; Error for Box&lt;T&gt; {\n    // ...\n}\n</code></pre>\n\n<p>Said another way, <code>Box&lt;dyn Error&gt;</code> <strong>does not implement <code>Error</code></strong>.</p>\n\n<p>One might think that you can add a second implementation of <code>From</code> for <code>Box&lt;Error&gt;</code>, but this is disallowed:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>upstream crates may add new impl of trait `std::error::Error` for type\n`std::boxed::Box&lt;(dyn std::error::Error + 'static)&gt;` in future versions\n</code></pre>\n\n<hr>\n\n<p>The best alternative I have to offer is to implement <code>From</code> for each individual concrete type you need to support:</p>\n\n<pre><code>impl From&lt;SpecificError&gt; for Handler {\n    fn from(e: SpecificError) -&gt; Self {\n        Handler { error: format!(\"{}\", e) }\n    }\n}\n\nimpl From&lt;Box&lt;dyn Error&gt;&gt; for Handler {\n    fn from(e: Box&lt;dyn Error&gt;) -&gt; Self {\n        Handler { error: format!(\"{}\", e) }\n    }\n}\n</code></pre>\n\n<p>A macro can reduce the boilerplate here.</p>\n"}], "owner": {"reputation": 961, "user_id": 1007956, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/080676ab98801245890060fe3b82ef80?s=128&d=identicon&r=PG", "display_name": "Nicholas Bishop", "link": "https://stackoverflow.com/users/1007956/nicholas-bishop"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 545, "favorite_count": 1, "accepted_answer_id": 55123667, "answer_count": 1, "score": 4, "last_activity_date": 1552401403, "creation_date": 1552397040, "last_edit_date": 1552399727, "question_id": 55122541, "link": "https://stackoverflow.com/questions/55122541/how-can-i-implement-from-for-both-concrete-error-types-and-boxerror-in-rust", "title": "How can I implement From for both concrete Error types and Box&lt;Error&gt; in Rust?", "body": "<p>Here's my test code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error;\nuse std::fmt;\n\nstruct Handler {\n    error: String\n}\n\n#[derive(Debug)]\nstruct SpecificError;\n\nimpl fmt::Display for SpecificError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"SpecificError\")\n    }\n}\n\nimpl Error for SpecificError {}\n\nimpl&lt;E: Error&gt; From&lt;E&gt; for Handler {\n    fn from(e: E) -&gt; Self {\n        Handler { error: format!(\"{}\", e) }\n    }\n}\n\nfn fail1() -&gt; Result&lt;(), SpecificError&gt; {\n    Err(SpecificError)\n}\n\nfn fail2() -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    Err(Box::new(SpecificError))\n}\n\nfn handler() -&gt; Result&lt;(), Handler&gt; {\n    fail1()?;\n    fail2()?;\n    Ok(())\n}\n</code></pre>\n\n<p>The call to <code>fail1()</code> is fine, but the call to <code>fail2()</code> doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `dyn std::error::Error` cannot be known at compilation time\n  --&gt; src/main.rs:35:5\n   |\n35 |     fail2()?;\n   |     ^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `dyn std::error::Error`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: required because of the requirements on the impl of `std::error::Error` for `std::boxed::Box&lt;dyn std::error::Error&gt;`\n   = note: required because of the requirements on the impl of `std::convert::From&lt;std::boxed::Box&lt;dyn std::error::Error&gt;&gt;` for `Handler`\n   = note: required by `std::convert::From::from`\n</code></pre>\n\n<p>I agree with the compiler that <code>dyn Error</code> doesn't have a size known at compile time, but I don't understand why that's relevant, since the type I'm attempting to convert from is a <code>Box&lt;dyn Error&gt;</code>, which does have a size known at compile time.</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 1153, "user_id": 1409490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4d31ce4c8133ea6a3eaca06a00f96e7?s=128&d=identicon&r=PG", "display_name": "Mathijs Kwik", "link": "https://stackoverflow.com/users/1409490/mathijs-kwik"}, "edited": false, "score": 0, "creation_date": 1552381501, "post_id": 55117533, "comment_id": 96976775, "body": "So the borrow-checker&#39;s evaluation order is different from real execution order?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 1153, "user_id": 1409490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4d31ce4c8133ea6a3eaca06a00f96e7?s=128&d=identicon&r=PG", "display_name": "Mathijs Kwik", "link": "https://stackoverflow.com/users/1409490/mathijs-kwik"}, "edited": false, "score": 0, "creation_date": 1552381628, "post_id": 55117533, "comment_id": 96976863, "body": "@MathijsKwik The real execution order has to be roughly the same to avoid unsoundness, but unless your method call invokes a <code>deref()</code>, there&#39;s no way to tell."}, {"owner": {"reputation": 1153, "user_id": 1409490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4d31ce4c8133ea6a3eaca06a00f96e7?s=128&d=identicon&r=PG", "display_name": "Mathijs Kwik", "link": "https://stackoverflow.com/users/1409490/mathijs-kwik"}, "edited": false, "score": 2, "creation_date": 1552382193, "post_id": 55117533, "comment_id": 96977224, "body": "I think part of my confusion comes from the sugar that is OOP-style method-syntax. <code>x(a,b,c)</code> looks like a function involving 3 arguments. The left-to-right evaluation makes sense there, but since <code>x</code> is &quot;outside the parenthesis&quot; I mistakenly counted it as &quot;not part of the function call itself&quot;. But by indeed looking at it as <code>AB::bar(x, x.foo())</code> makes it clear.  Thanks"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552383234, "post_id": 55117533, "comment_id": 96977830, "body": "Why does this work, then? <code>let mut v = vec![0, 1, 2]; v.push(v.len());</code>"}, {"owner": {"reputation": 1153, "user_id": 1409490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4d31ce4c8133ea6a3eaca06a00f96e7?s=128&d=identicon&r=PG", "display_name": "Mathijs Kwik", "link": "https://stackoverflow.com/users/1409490/mathijs-kwik"}, "edited": false, "score": 0, "creation_date": 1552384527, "post_id": 55117533, "comment_id": 96978708, "body": "that&#39;s what the RFC is about. I do think my &quot;outer-move&quot; case can/should be handled similarly. If a bunch of borrows and a move of the same object are to be evaluated, it should be clear that the only order that might work, is by evaluating all borrows before the move. Of course if any of the borrows stick around (in a lifetime), it would still fail."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1153, "user_id": 1409490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4d31ce4c8133ea6a3eaca06a00f96e7?s=128&d=identicon&r=PG", "display_name": "Mathijs Kwik", "link": "https://stackoverflow.com/users/1409490/mathijs-kwik"}, "edited": false, "score": 0, "creation_date": 1552403854, "post_id": 55117533, "comment_id": 96991412, "body": "@MathijsKwik I don&#39;t think &quot;evaluation order&quot; is the right way to think about this: lifetimes are <i>inferred</i>, not evaluated. Two-phase borrowing fixes the <code>&amp;mut</code> case by splitting the borrow into two with different lifetimes, but a move isn&#39;t a borrow and doesn&#39;t have a lifetime, so it&#39;s really quite different semantically. However, I agree that it seems like the <code>self</code>-taking case could also be handled in a similar way."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 6, "last_activity_date": 1552398770, "last_edit_date": 1552398770, "creation_date": 1552381210, "answer_id": 55117533, "question_id": 55117392, "link": "https://stackoverflow.com/questions/55117392/why-is-there-a-borrow-of-a-moved-value-when-calling-a-method-that-takes-self-by/55117533#55117533", "title": "Why is there a borrow of a moved value when calling a method that takes self by value with an argument that also calls a method?", "body": "<p>Evaluation order, for the purpose of borrows, is from left to right.</p>\n\n<p>This means that the subject of the <code>bar</code> call, the \"move-out\" mention of <code>x</code>, is considered before the \"borrow\" mention of <code>x</code> in the <code>foo</code> call, and therefore, the compiler considers the variable to have been moved from.</p>\n\n<p>For the similar case where the outer mention is a mutable borrow, <a href=\"https://rust-lang.github.io/rfcs/2025-nested-method-calls.html\" rel=\"nofollow noreferrer\">RFC 2025</a> has been accepted as a solution, but hasn't been implemented yet. Unfortunately this RFC doesn't appear to cover your case, where the outer use is a move.</p>\n"}], "owner": {"reputation": 1153, "user_id": 1409490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f4d31ce4c8133ea6a3eaca06a00f96e7?s=128&d=identicon&r=PG", "display_name": "Mathijs Kwik", "link": "https://stackoverflow.com/users/1409490/mathijs-kwik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3541, "favorite_count": 1, "accepted_answer_id": 55117533, "answer_count": 1, "score": 7, "last_activity_date": 1552399027, "creation_date": 1552380738, "last_edit_date": 1552399027, "question_id": 55117392, "link": "https://stackoverflow.com/questions/55117392/why-is-there-a-borrow-of-a-moved-value-when-calling-a-method-that-takes-self-by", "title": "Why is there a borrow of a moved value when calling a method that takes self by value with an argument that also calls a method?", "body": "<p>I ran into an issue that forces me to split a nice oneliner into a <code>{}</code> block with an intermediate <code>let</code>. The reason for this isn't clear to me at all. I was able to isolate the issue in this minimal example:</p>\n\n<pre><code>struct AB {\n    a: u8,\n    b: u8,\n}\n\nimpl AB {\n    fn foo(&amp;self) -&gt; String {\n        String::from(\"foo\")\n    }\n    fn bar(self, x: String) -&gt; String {\n        format!(\"{} - {} - {}!\", x, self.a, self.b)\n    }\n}\n\nfn main() {\n    let x = AB { a: 3, b: 5 };\n    let result = x.bar(x.foo());\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p>I was under the impression that the arguments to the <code>bar</code> function would be evaluated <em>before</em> calling <code>bar</code>. <code>foo</code> borrows <code>x</code> during its execution, but when it returns its <code>String</code>, the borrow is finished, as <code>String</code> is not a reference bearing <code>x</code>'s lifetime. When <code>bar</code> gets called, <code>foo</code>'s borrow should be over.</p>\n\n<p>However, the compiler disagrees:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: borrow of moved value: `x`\n  --&gt; src/main.rs:17:24\n   |\n17 |     let result = x.bar(x.foo());\n   |                  -     ^ value borrowed here after move\n   |                  |\n   |                  value moved here\n   |\n   = note: move occurs because `x` has type `AB`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I'm not disagreeing with the fact that <code>bar</code> indeed moves <code>x</code>. My issue is with the statement that <code>foo</code> borrows <code>x</code> <em>after</em> the move takes place.</p>\n\n<p>A simple (but ugly) fix:</p>\n\n<pre><code>struct AB {\n    a: u8,\n    b: u8,\n}\n\nimpl AB {\n    fn foo(&amp;self) -&gt; String {\n        String::from(\"foo\")\n    }\n    fn bar(self, x: String) -&gt; String {\n        format!(\"{} - {} - {}!\", x, self.a, self.b)\n    }\n}\n\nfn main() {\n    let x = AB { a: 3, b: 5 };\n    let y = x.foo();\n    let result = x.bar(y);\n    println!(\"{}\", result);\n}\n</code></pre>\n\n<p>separating the assignment of <code>x.foo()</code> to an intermediate variable <code>y</code> compiles fine, confirming my expectation that the borrow is indeed over once <code>foo</code> returns, but why does this work? Is there something I don't understand about evaluation order? Why can't I get rid of the intermediate <code>let y</code> ?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 36931, "user_id": 225757, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/e7140b12949e4652885f6bb02b435f42?s=128&d=identicon&r=PG", "display_name": "Roland Illig", "link": "https://stackoverflow.com/users/225757/roland-illig"}, "edited": false, "score": 0, "creation_date": 1552360379, "post_id": 55113556, "comment_id": 96969396, "body": "What does the Rust reference documentation say about this operator?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552363630, "post_id": 55113556, "comment_id": 96970039, "body": "<a href=\"https://stackoverflow.com/questions/44445730/how-to-call-a-method-when-a-trait-and-struct-use-the-same-method-name\">How to call a method when a trait and struct use the same method name?</a> is also related. (The dupe applied to this question: <code>A::&lt;usize&gt;::foo(&amp;s)</code>)."}], "answers": [{"comments": [{"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 0, "creation_date": 1552367634, "post_id": 55113758, "comment_id": 96971024, "body": "Perfection . Thanks"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 6, "last_activity_date": 1552363960, "last_edit_date": 1552363960, "creation_date": 1552361785, "answer_id": 55113758, "question_id": 55113556, "link": "https://stackoverflow.com/questions/55113556/how-to-use-turbofish-operator-for-generic-trait-implementation/55113758#55113758", "title": "How to use turbofish operator for generic trait implementation", "body": "<p>You cannot do this, because the \"turbofish\" operator is syntax for specifying generic parameters to <em>something</em>, but your method is not generic, even though it is defined in a generic trait, so there are no generic parameters to specify.</p>\n\n<p>What you can do is to use the <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html#fully-qualified-syntax-for-disambiguation-calling-methods-with-the-same-name\" rel=\"noreferrer\">fully qualified syntax</a> to explicitly name the trait, which <em>is</em> generic:</p>\n\n<pre><code>let text = A::&lt;usize&gt;::foo(&amp;s);\n</code></pre>\n"}], "owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1096, "favorite_count": 1, "closed_date": 1552367765, "accepted_answer_id": 55113758, "answer_count": 1, "score": 3, "last_activity_date": 1552363960, "creation_date": 1552360202, "question_id": 55113556, "link": "https://stackoverflow.com/questions/55113556/how-to-use-turbofish-operator-for-generic-trait-implementation", "closed_reason": "Duplicate", "title": "How to use turbofish operator for generic trait implementation", "body": "<p>I have below generic trait:</p>\n\n<pre><code>trait A&lt;T&gt; {\n    fn foo(&amp;self) -&gt; T;\n}\n</code></pre>\n\n<p>I have following struct which implements trait <code>A</code> for <code>String</code> and <code>usize</code>:</p>\n\n<pre><code>struct S;\n\nimpl A&lt;String&gt; for S {\n    fn foo(&amp;self) -&gt; String {\n        String::from(\"Hello world\")\n    }\n}\n\nimpl A&lt;usize&gt; for S {\n    fn foo(&amp;self) -&gt; usize {\n        37\n    }\n}\n</code></pre>\n\n<p>When I call method <code>foo</code>, I can specify type to the variable and that works:</p>\n\n<pre><code>let value: usize = s.foo();\n</code></pre>\n\n<p>But how can I do the same thing with turbofish operator?</p>\n\n<p>I tried following without success:</p>\n\n<pre><code>let text = s::&lt;usize&gt;.foo();\nlet text = s.foo::&lt;usize&gt;();\nlet text = s.::&lt;usize&gt;foo();\n</code></pre>\n\n<p>How do I use this operator instead of providing the type to the variable?</p>\n"}, {"tags": ["rust", "pattern-matching", "ip-address"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1552317532, "last_edit_date": 1552317532, "creation_date": 1552317136, "answer_id": 55104962, "question_id": 55104576, "link": "https://stackoverflow.com/questions/55104576/why-cant-i-use-a-constant-when-pattern-matching-even-though-it-implements-partia/55104962#55104962", "title": "Why cant I use a constant when pattern matching even though it implements PartialEq and Eq?", "body": "<p>As the error message states:</p>\n\n<blockquote>\n  <p>must be annotated with <code>#[derive(PartialEq, Eq)]</code></p>\n</blockquote>\n\n<p>This is <a href=\"https://github.com/rust-lang/rust/blob/1.33.0/src/libstd/net/ip.rs#L702-L709\" rel=\"noreferrer\">not true for <code>Ipv4Addr</code></a>, which implements it manually, instead of deriving it. </p>\n\n<p>Instead, use a <em>match guard</em>:</p>\n\n<pre><code>use get_if_addrs; // 0.5.3\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let ifaces = get_if_addrs::get_if_addrs().unwrap();\n    for iface in ifaces {\n        match iface.addr {\n            get_if_addrs::IfAddr::V4(get_if_addrs::Ifv4Addr {\n                broadcast: None, ..\n            }) =&gt; (),\n            get_if_addrs::IfAddr::V4(get_if_addrs::Ifv4Addr { ip, .. }) if ip.is_loopback() =&gt; (),\n            get_if_addrs::IfAddr::V4(addr) =&gt; println!(\"{:?}\", addr),\n            get_if_addrs::IfAddr::V6(_) =&gt; (),\n        }\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>You may also consider introducing some nesting:</p>\n\n<pre><code>use get_if_addrs::{IfAddr, Ifv4Addr}; // 0.5.3\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let ifaces = get_if_addrs::get_if_addrs().unwrap();\n    for iface in ifaces {\n        match iface.addr {\n            IfAddr::V4(addr) =&gt; match addr {\n                Ifv4Addr {\n                    broadcast: None, ..\n                } =&gt; (),\n                Ifv4Addr { ip, .. } if ip.is_loopback() =&gt; (),\n                addr =&gt; println!(\"{:?}\", addr),\n            },\n            IfAddr::V6(_) =&gt; (),\n        }\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<hr>\n\n<p><a href=\"https://rust-lang.github.io/rfcs/1445-restrict-constants-in-patterns.html\" rel=\"noreferrer\">RFC 1445</a> explains the underlying decisions more:</p>\n\n<blockquote>\n  <ul>\n  <li>Introduce a feature-gated attribute <code>#[structural_match]</code> which can be applied to a struct or enum <code>T</code> to indicate that constants of type <code>T</code>\n  can be used within patterns.</li>\n  <li>Have <code>#[derive(Eq)]</code> automatically apply this attribute to the struct or enum that it decorates. Automatically inserted attributes do\n  not require use of feature-gate.</li>\n  <li>When expanding constants of struct or enum type into equivalent patterns, require that the struct or enum type is decorated with\n  <code>#[structural_match]</code>. Constants of builtin types are always expanded.</li>\n  </ul>\n  \n  <p>The practical effect of these changes will be to prevent the use of\n  constants in patterns unless the type of those constants is either a\n  built-in type (like <code>i32</code> or <code>&amp;str</code>) or a user-defined constant for which\n  <code>Eq</code> is <strong>derived</strong> (not merely <em>implemented</em>).</p>\n</blockquote>\n"}], "owner": {"reputation": 221, "user_id": 7994905, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2956905eb62a8706e1edcabae8c7af31?s=128&d=identicon&r=PG&f=1", "display_name": "Seact", "link": "https://stackoverflow.com/users/7994905/seact"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 283, "favorite_count": 0, "accepted_answer_id": 55104962, "answer_count": 1, "score": 2, "last_activity_date": 1552580686, "creation_date": 1552315945, "last_edit_date": 1552580686, "question_id": 55104576, "link": "https://stackoverflow.com/questions/55104576/why-cant-i-use-a-constant-when-pattern-matching-even-though-it-implements-partia", "title": "Why cant I use a constant when pattern matching even though it implements PartialEq and Eq?", "body": "<p>I want to filter out the IPv4 localhost address by using the constant <code>net::Ipv4Addr::LOCALHOST</code> when pattern matching:</p>\n\n<pre><code>use get_if_addrs; // 0.5.3\nuse std::net;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    assert_eq!(\n        \"127.0.0.1\".parse::&lt;net::Ipv4Addr&gt;().unwrap(),\n        net::Ipv4Addr::LOCALHOST\n    );\n    {\n        let ifaces = get_if_addrs::get_if_addrs().unwrap();\n        for iface in ifaces {\n            match iface.addr {\n                get_if_addrs::IfAddr::V4(get_if_addrs::Ifv4Addr {\n                    ip: _,\n                    netmask: _,\n                    broadcast: None,\n                }) =&gt; (),\n                get_if_addrs::IfAddr::V4(get_if_addrs::Ifv4Addr {\n                    ip: net::Ipv4Addr::LOCALHOST,\n                    netmask: _,\n                    broadcast: _,\n                }) =&gt; (),\n                get_if_addrs::IfAddr::V4(addr) =&gt; println!(\"{:?}\", addr),\n                get_if_addrs::IfAddr::V6(_) =&gt; (),\n            }\n        }\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>I get an error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: to use a constant of type `std::net::Ipv4Addr` in a pattern, `std::net::Ipv4Addr` must be annotated with `#[derive(PartialEq, Eq)]`\n  --&gt; src/main.rs:19:25\n   |\n19 |                     ip: net::Ipv4Addr::LOCALHOST,\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unreachable pattern\n  --&gt; src/main.rs:23:17\n   |\n23 |                 get_if_addrs::IfAddr::V4(addr) =&gt; println!(\"{:?}\", addr),\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: #[warn(unreachable_patterns)] on by default\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/net/struct.Ipv4Addr.html\" rel=\"nofollow noreferrer\"><code>std::net::Ipv4Addr</code></a> does have implementation for <code>PartialEq</code> and <code>Eq</code>, so what does that error mean? How do I solve it?</p>\n"}, {"tags": ["error-handling", "rust", "iterator"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1552309814, "post_id": 55102253, "comment_id": 96947855, "body": "<a href=\"https://stackoverflow.com/questions/54373540/is-there-a-better-functional-way-to-process-a-vector-with-error-checking\" title=\"is there a better functional way to process a vector with error checking\">stackoverflow.com/questions/54373540/&hellip;</a> ?"}, {"owner": {"reputation": 554, "user_id": 5899686, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1a39344e13f46e5cbaca48c0bee8704?s=128&d=identicon&r=PG&f=1", "display_name": "avy", "link": "https://stackoverflow.com/users/5899686/avy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552311809, "post_id": 55102253, "comment_id": 96949187, "body": "Agree this is basically a duplicate of that question; I had only found stop-on-first-error scenarios when searching."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552312083, "post_id": 55102253, "comment_id": 96949382, "body": "@avy FWIW, this question has a much better wording and focus than that one; I don&#39;t yet know if they are great duplicates."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1552312761, "last_edit_date": 1552312761, "creation_date": 1552309598, "answer_id": 55102520, "question_id": 55102253, "link": "https://stackoverflow.com/questions/55102253/how-do-i-return-a-result-containing-every-error-from-an-iterator-of-results-not/55102520#55102520", "title": "How do I return a Result containing every error from an iterator of Results, not just the first one?", "body": "<blockquote>\n  <p>unwrapping each <code>Result</code></p>\n</blockquote>\n\n<p>I would use itertools' <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.partition_map\" rel=\"nofollow noreferrer\"><code>partition_map</code></a> to avoid the need to unwrap:</p>\n\n<pre><code>use itertools::{Either, Itertools}; // 0.8.0\n\nfn iterator() -&gt; impl Iterator&lt;Item = Result&lt;i32, bool&gt;&gt; {\n    vec![Ok(1), Err(false), Ok(2), Err(true), Ok(3)].into_iter()\n}\n\nfn example() -&gt; Result&lt;Vec&lt;i32&gt;, Vec&lt;bool&gt;&gt; {\n    let (values, errors): (Vec&lt;_&gt;, Vec&lt;_&gt;) = iterator().partition_map(|v| match v {\n        Ok(v) =&gt; Either::Left(v),\n        Err(e) =&gt; Either::Right(e),\n    });\n\n    if errors.is_empty() {\n        Ok(values)\n    } else {\n        Err(errors)\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/36368843/155423\">What&#39;s the most idiomatic way of working with an Iterator of Results?</a></li>\n<li><a href=\"https://stackoverflow.com/q/26368288/155423\">How do I stop iteration and return an error when Iterator::map returns a Result::Err?</a></li>\n<li><a href=\"https://stackoverflow.com/q/48841367/155423\">How do I perform iterator computations over iterators of Results without collecting to a temporary vector?</a></li>\n</ul>\n\n<p>You could also use the fact that <code>Option</code> and <code>Result</code> implement <code>IntoIterator</code> to avoid the exact <code>unwrap</code>, although this still processes one  collection twice:</p>\n\n<pre><code>fn example2() -&gt; Result&lt;Vec&lt;i32&gt;, Vec&lt;bool&gt;&gt; {\n    let (values, errors): (Vec&lt;_&gt;, Vec&lt;_&gt;) = iterator().partition(|result| result.is_ok());\n\n    if errors.is_empty() {\n        Ok(values.into_iter().flat_map(Result::ok).collect())\n    } else {\n        Err(errors.into_iter().flat_map(Result::err).collect())\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43285372/155423\">Why does `Option` support `IntoIterator`?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1552312779, "post_id": 55103160, "comment_id": 96949848, "body": "&quot;An imperative solution is often the most expressive and efficient way to implement some algorithm.&quot; I will disagree about that. &quot;It&#39;s Rust, not Haskell; not everything needs to be functional.&quot; I will agree about that."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 3, "last_activity_date": 1552311995, "last_edit_date": 1552311995, "creation_date": 1552311664, "answer_id": 55103160, "question_id": 55102253, "link": "https://stackoverflow.com/questions/55102253/how-do-i-return-a-result-containing-every-error-from-an-iterator-of-results-not/55103160#55103160", "title": "How do I return a Result containing every error from an iterator of Results, not just the first one?", "body": "<p>An imperative solution is often the most expressive and efficient way to implement some algorithm. It's Rust, not Haskell; not everything needs to be functional.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn scan_tokens(source: &amp;str) -&gt; Result&lt;Vec&lt;Token&gt;, Vec&lt;ScanError&gt;&gt; {\n    let iter = Tokens {\n        chars: source.chars(),\n    };\n    let mut tokens = Vec::new();\n    let mut errors = Vec::new();\n    for result in iter {\n        match result {\n            Ok(token) =&gt; {\n                tokens.push(token);\n            }\n            Err(e) =&gt; {\n                errors.push(e);\n            }\n        }\n    }\n    if errors.is_empty() {\n        Ok(tokens)\n    } else {\n        Err(errors)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 554, "user_id": 5899686, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1a39344e13f46e5cbaca48c0bee8704?s=128&d=identicon&r=PG&f=1", "display_name": "avy", "link": "https://stackoverflow.com/users/5899686/avy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 644, "favorite_count": 1, "accepted_answer_id": 55102520, "answer_count": 2, "score": 4, "last_activity_date": 1552312761, "creation_date": 1552308690, "last_edit_date": 1552309512, "question_id": 55102253, "link": "https://stackoverflow.com/questions/55102253/how-do-i-return-a-result-containing-every-error-from-an-iterator-of-results-not", "title": "How do I return a Result containing every error from an iterator of Results, not just the first one?", "body": "<p>I'm trying to implement a simple interpreter in Rust, for which I have created a <code>Tokens</code> struct, which takes source characters and produces either a <code>Token</code> or a <code>ScanError</code> inside a <code>Result</code>:</p>\n\n<pre><code>pub struct Tokens&lt;'src&gt; {\n    chars: Chars&lt;'src&gt;,\n}\n\nimpl&lt;'src&gt; Iterator for Tokens&lt;'src&gt; {\n    type Item = Result&lt;Token, ScanError&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Result&lt;Token, ScanError&gt;&gt; {\n        //  ...\n    }\n}\n</code></pre>\n\n<p>Since <code>Result</code> implements <code>FromIterator</code>, it is simple to collect the result to either the first <code>ScanError</code> or a vector of <code>Token</code>s:</p>\n\n<pre><code>fn scan_tokens(source: &amp;str) -&gt; Result&lt;Vec&lt;Token&gt;, ScanError&gt; {\n    let iter = Tokens {\n        chars: source.chars(),\n    };\n\n    iter.collect()\n}\n</code></pre>\n\n<p>In the case of multiple errors I really want to return <em>every</em> error:</p>\n\n<pre><code>fn scan_tokens(source: &amp;str) -&gt; Result&lt;Vec&lt;Token&gt;, Vec&lt;ScanError&gt;&gt; {\n    // what goes here?\n}\n</code></pre>\n\n<p>It isn't possible as far as I know to implement my own version of <code>FromIterator</code> because neither that trait or <code>Result</code> are local to my crate. Can anyone suggest a clean way of doing this?</p>\n\n<p>I have written an implementation using <code>partition</code> on the iterator, then unwrapping each <code>Result</code>, below, but it's not fun to read and doesn't feel like good use of iterators:</p>\n\n<pre><code>type T = Vec&lt;Result&lt;Token, ScanError&gt;&gt;;\nfn scan_tokens(source: &amp;str) -&gt; Result&lt;Vec&lt;Token&gt;, Vec&lt;ScanError&gt;&gt; {\n    let iter = Tokens {\n        chars: source.chars(),\n    };\n\n    let (tokens_results, error_results): (T, T) = iter.partition(|result| result.is_ok());\n    let errors: Vec&lt;ScanError&gt; = error_results\n        .into_iter()\n        .map(|result| result.unwrap_err())\n        .collect();\n\n    if errors.len() &gt; 0 {\n        return Err(errors);\n    }\n\n    Ok(tokens_results\n        .into_iter()\n        .map(|result| result.unwrap())\n        .collect())\n}\n</code></pre>\n"}, {"tags": ["mysql", "rust"], "comments": [{"owner": {"reputation": 45, "user_id": 11184806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dcda30aac6d3901fe25e524d8b756c32?s=128&d=identicon&r=PG&f=1", "display_name": "Arto", "link": "https://stackoverflow.com/users/11184806/arto"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552315796, "post_id": 55102158, "comment_id": 96951821, "body": "Thank you for answering! Unfortunately the rust playground does not include the mysql crate, so I can&#39;t make an example.   My problem is on  <code>fn new(v: Value) -&gt; mysql::Result&lt;EnumIr&gt;</code> I get <code>expected struct mysql_common::value::convert::FromValueError, found enum mysql::error::Error</code>   I tried to return mysql::FromValueError and mysql::error::FromValueError, but they both don&#39;t work. The struct mysql_common::value_convert::FromValueError however is private."}, {"owner": {"reputation": 45, "user_id": 11184806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dcda30aac6d3901fe25e524d8b756c32?s=128&d=identicon&r=PG&f=1", "display_name": "Arto", "link": "https://stackoverflow.com/users/11184806/arto"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552317855, "post_id": 55102158, "comment_id": 96953145, "body": "Sorry, it&#39;s my first question here, thanks for taking your time. The code above is now from a new cargo project. You should be able to copy and run it to reproduce the compiler errors."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552318065, "post_id": 55102158, "comment_id": 96953290, "body": "The process you just went through is the right process to ask a question in <b>any</b> context; on Stack Overflow, in an issue tracker, in a chat, or even in person; keep that in mind and you will get much better answers (and are also likely to answer your own question more often than not)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552318147, "post_id": 55102158, "comment_id": 96953347, "body": "Can you explain what you don&#39;t understand about the compiler error? It says you need to return a <code>FromValueError</code> but you are returning a <code>mysql::error::Error</code>; why are you using the wrong type?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552318259, "post_id": 55102158, "comment_id": 96953416, "body": "Why are you linking to the documentation for version <b>1.2.0</b> when the version you are using is <b>15.1.0</b>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552318362, "post_id": 55102158, "comment_id": 96953498, "body": "Why do you have an <code>unsafe</code> block?"}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 11184806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dcda30aac6d3901fe25e524d8b756c32?s=128&d=identicon&r=PG&f=1", "display_name": "Arto", "link": "https://stackoverflow.com/users/11184806/arto"}, "edited": false, "score": 0, "creation_date": 1552319266, "post_id": 55105457, "comment_id": 96954060, "body": "Thank you very much! I just checked in my bigger project and yes: Your code converts the mysql row value correctly into rust enums, so cool!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1552318736, "creation_date": 1552318736, "answer_id": 55105457, "question_id": 55102158, "link": "https://stackoverflow.com/questions/55102158/how-do-i-convert-mysql-enums-to-rust-enums-when-using-the-mysql-crate/55105457#55105457", "title": "How do I convert MySQL enums to Rust enums when using the mysql crate?", "body": "<p>As the error message states (cleaned up a bit):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected type `fn(Value) -&gt; Result&lt;EnumIr, FromValueError&gt;`\n   found type `fn(Value) -&gt; Result&lt;EnumIr, mysql::Error&gt;`\n</code></pre>\n\n<p>You can't return the wrong type; that's just a fundamental condition of a statically typed language. Return the correct type instead: <code>Result&lt;EnumIr, mysql::FromValueError&gt;</code>.</p>\n\n<p>I've also changed your code to avoid doing a spurious second parsing of the data into a string:</p>\n\n<pre><code>#[derive(Debug)]\npub struct EnumIr {\n    string: String,\n}\n\nimpl ConvIr&lt;UserRole&gt; for EnumIr {\n    fn new(v: Value) -&gt; Result&lt;EnumIr, mysql::FromValueError&gt; {\n        match v {\n            Value::Bytes(bytes) =&gt; match String::from_utf8(bytes) {\n                Ok(string) =&gt; Ok(EnumIr { string }),\n                Err(e) =&gt; Err(mysql::FromValueError(Value::Bytes(e.into_bytes()))),\n            },\n            v =&gt; Err(mysql::FromValueError(v)),\n        }\n    }\n\n    fn commit(self) -&gt; UserRole {\n        self.string.parse().unwrap()\n    }\n\n    fn rollback(self) -&gt; Value {\n        Value::Bytes(self.string.into_bytes())\n    }\n}\n</code></pre>\n\n<p>It also seems like you should attempt to parse the enum in the <code>new</code> method as that's the only one that allows for a <code>Result</code>:</p>\n\n<pre><code>#[derive(Debug)]\npub struct EnumIr {\n    role: UserRole,\n    string: String,\n}\n\nimpl ConvIr&lt;UserRole&gt; for EnumIr {\n    fn new(v: Value) -&gt; Result&lt;EnumIr, mysql::FromValueError&gt; {\n        match v {\n            Value::Bytes(bytes) =&gt; match String::from_utf8(bytes) {\n                Ok(string) =&gt; match string.parse() {\n                    Ok(role) =&gt; Ok(EnumIr { role, string }),\n                    Err(_) =&gt; Err(mysql::FromValueError(Value::Bytes(string.into_bytes()))),\n                },\n                Err(e) =&gt; Err(mysql::FromValueError(Value::Bytes(e.into_bytes()))),\n            },\n            v =&gt; Err(mysql::FromValueError(v)),\n        }\n    }\n\n    fn commit(self) -&gt; UserRole {\n        self.role\n    }\n\n    fn rollback(self) -&gt; Value {\n        Value::Bytes(self.string.into_bytes())\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 11184806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dcda30aac6d3901fe25e524d8b756c32?s=128&d=identicon&r=PG&f=1", "display_name": "Arto", "link": "https://stackoverflow.com/users/11184806/arto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 636, "favorite_count": 0, "accepted_answer_id": 55105457, "answer_count": 1, "score": 3, "last_activity_date": 1552318736, "creation_date": 1552308402, "last_edit_date": 1552317975, "question_id": 55102158, "link": "https://stackoverflow.com/questions/55102158/how-do-i-convert-mysql-enums-to-rust-enums-when-using-the-mysql-crate", "title": "How do I convert MySQL enums to Rust enums when using the mysql crate?", "body": "<p>I want to read enums from a MySQL table, but I'm failing to convert the string enums from the table into real Rust enums. </p>\n\n<p>What options do I have? The <a href=\"https://docs.rs/mysql/1.2.0/mysql/value/trait.FromValue.html\" rel=\"nofollow noreferrer\">documentation</a> tells me that I should implement the <code>FromValue</code> trait:</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[dependencies]\nmysql = \"15.1.0\"\nstrum = \"0.14.0\"\nstrum_macros = \"0.14.0\"\n</code></pre>\n\n<pre><code>use mysql::{\n    prelude::{ConvIr, FromValue},\n    Value,\n};\nuse std::str::{from_utf8, FromStr};\nuse strum_macros::{AsStaticStr, EnumString};\n\n#[derive(Debug, PartialEq, Eq, EnumString, AsStaticStr)]\npub enum UserRole {\n    ADMIN,\n    USER,\n}\n\n#[derive(Debug)]\npub struct EnumIr {\n    bytes: Vec&lt;u8&gt;,\n}\n\nimpl ConvIr&lt;UserRole&gt; for EnumIr {\n    fn new(v: Value) -&gt; mysql::error::Result&lt;EnumIr&gt; {\n        match v {\n            Value::Bytes(bytes) =&gt; match from_utf8(&amp;*bytes) {\n                Ok(_) =&gt; Ok(EnumIr { bytes: bytes }),\n                Err(_) =&gt; Err(mysql::FromValueError(Value::Bytes(bytes))),\n            },\n            v =&gt; Err(mysql::FromValueError(v)),\n        }\n    }\n    fn commit(self) -&gt; UserRole {\n        unsafe { UserRole::from_str(from_utf8(&amp;self.bytes).unwrap()).unwrap() }\n    }\n    fn rollback(self) -&gt; Value {\n        Value::Bytes(self.bytes)\n    }\n}\n\nimpl FromValue for UserRole {\n    type Intermediate = EnumIr;\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>This fails with the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0053]: method `new` has an incompatible type for trait\n  --&gt; src/main.rs:20:5\n   |\n20 |     fn new(v: Value) -&gt; mysql::error::Result&lt;EnumIr&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `mysql_common::value::convert::FromValueError`, found enum `mysql::error::Error`\n   |\n   = note: expected type `fn(mysql_common::value::Value) -&gt; std::result::Result&lt;EnumIr, mysql_common::value::convert::FromValueError&gt;`\n              found type `fn(mysql_common::value::Value) -&gt; std::result::Result&lt;EnumIr, mysql::error::Error&gt;`\n</code></pre>\n\n<p>Has anyone managed to do the conversion or is there a better approach altogether?</p>\n"}, {"tags": ["rust", "iterator"], "answers": [{"comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1552301564, "post_id": 55099929, "comment_id": 96943372, "body": "You should probably use <code>fold</code> for the case where the values of the accumulator form the output. <code>scan</code> is more general, you can have arbitrary internal state independently of the values returned."}, {"owner": {"reputation": 18483, "user_id": 497600, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/9d2bd51b0d7a3e483cb42919119d2e8d?s=128&d=identicon&r=PG", "display_name": "lhk", "link": "https://stackoverflow.com/users/497600/lhk"}, "reply_to_user": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1552302135, "post_id": 55099929, "comment_id": 96943704, "body": "True, my question is a bit misleading. I am interested in all intermediate results, whereas fold just returns the last value. I agree that the cumulative sum is probably not a good example. I was thinking of numpy&#39;s cumsum when I posted this"}], "tags": [], "owner": {"reputation": 18483, "user_id": 497600, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/9d2bd51b0d7a3e483cb42919119d2e8d?s=128&d=identicon&r=PG", "display_name": "lhk", "link": "https://stackoverflow.com/users/497600/lhk"}, "is_accepted": true, "score": 12, "last_activity_date": 1591794392, "last_edit_date": 1591794392, "creation_date": 1552300581, "answer_id": 55099929, "question_id": 55099894, "link": "https://stackoverflow.com/questions/55099894/how-can-i-reduce-fold-an-iterator-and-keep-intermediate-results-such-as-a-cum/55099929#55099929", "title": "How can I reduce (fold) an iterator and keep intermediate results (such as a cumulative sum)?", "body": "<p>I see that I should have read the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"noreferrer\">docs</a> more carefully. The function I'm looking for is called <a href=\"https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.scan\" rel=\"noreferrer\"><code>scan</code></a>. Here is a cumulative sum implementation:</p>\n\n<pre><code>let offsets = vec![3, 2, 1, 4];\nlet positions: Vec&lt;i32&gt; = offsets\n    .iter()\n    .scan(0, |acc, &amp;x| {\n        *acc = *acc + x;\n        Some(*acc)\n    })\n    .collect();\n</code></pre>\n"}], "owner": {"reputation": 18483, "user_id": 497600, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/9d2bd51b0d7a3e483cb42919119d2e8d?s=128&d=identicon&r=PG", "display_name": "lhk", "link": "https://stackoverflow.com/users/497600/lhk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1053, "favorite_count": 1, "accepted_answer_id": 55099929, "answer_count": 1, "score": 8, "last_activity_date": 1591794392, "creation_date": 1552300435, "last_edit_date": 1591783295, "question_id": 55099894, "link": "https://stackoverflow.com/questions/55099894/how-can-i-reduce-fold-an-iterator-and-keep-intermediate-results-such-as-a-cum", "title": "How can I reduce (fold) an iterator and keep intermediate results (such as a cumulative sum)?", "body": "<p>I want to apply a reduction to an iterator, but I don't need just the final value, the intermediate results are important, too. </p>\n\n<p>As an example, let's convert a vector of offsets to a vector of positions:</p>\n\n<pre><code>let offsets = vec![3, 2, 1, 4];\n// create positions vector [3, 5, 6, 10]\n</code></pre>\n\n<p>My attempt at a solution uses <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\" rel=\"nofollow noreferrer\"><code>map</code></a> and a closure:</p>\n\n<pre><code>let mut acc = 0;\nlet positions: Vec&lt;i32&gt; = offsets\n    .iter()\n    .map(|x| {\n        acc = acc + x;\n        acc\n    })\n    .collect();\n</code></pre>\n\n<p>Good comment from @starblue: To do a cumulative sum, <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold\" rel=\"nofollow noreferrer\"><code>fold</code></a> would be the best option. It applies a reduction and returns the last value. It doesn't return intermediate solutions though:</p>\n\n<pre><code>// basically exact code from fold example in the docs\nlet last_position = offsets.iter().fold(0, |acc, x| acc + x);\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552296426, "post_id": 55098681, "comment_id": 96940456, "body": "What if you add <code>#![allow(dead_code)]</code> at the begining of your bin project?"}, {"owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552296852, "post_id": 55098681, "comment_id": 96940682, "body": "That just does does the trick! I had assumed that it would only disable the lint for the current file (main.rs), but apparently it also applies to all included files. @FrenchBoiethios Please add an answer with the solution so I can mark it as  accepted."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1552299165, "post_id": 55098681, "comment_id": 96942000, "body": "How are you using the library from your executable? You <i>shouldn&#39;t</i> be getting dead code warnings for items in your library if you reference it via <code>extern crate</code>."}, {"owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "edited": false, "score": 0, "creation_date": 1552300745, "post_id": 55098681, "comment_id": 96942925, "body": "As both targets live within the same directory I just include the needed modules and traits via <code>mod foo; use crate::foo::FooBar</code> into <code>main.rs</code>. The <code>lib.rs</code> file contains only publishing functions for the C-style library."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1552297729, "creation_date": 1552297729, "answer_id": 55099120, "question_id": 55098681, "link": "https://stackoverflow.com/questions/55098681/how-to-disable-lints-for-the-bin-target-only/55099120#55099120", "title": "How to disable lints for the &quot;bin&quot; target only", "body": "<p><a href=\"https://doc.rust-lang.org/rustc/lints/levels.html#via-an-attribute\" rel=\"nofollow noreferrer\">You can modify a lint for a whole crate</a> by putting an attribute with <code>#!</code> at the beginning of the crate:</p>\n\n<p><strong>main.rs:</strong></p>\n\n<pre><code>#![allow(dead_code)]\n\n// etc.\n</code></pre>\n"}], "owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "closed_date": 1552308760, "accepted_answer_id": 55099120, "answer_count": 1, "score": 0, "last_activity_date": 1552297729, "creation_date": 1552296330, "question_id": 55098681, "link": "https://stackoverflow.com/questions/55098681/how-to-disable-lints-for-the-bin-target-only", "closed_reason": "Duplicate", "title": "How to disable lints for the &quot;bin&quot; target only", "body": "<p>I have a Rust project folder structure that contains an executable and a shared C-compatible library that are both build using the same sources. The <code>Cargo.toml</code> manifest file looks like:</p>\n\n<pre><code>[package]\nname = \"foo-bar\"\nversion = \"0.1.0\"\nauthors = ...\n\n[lib]\nname = \"foo_bar\"\ncrate-type = [\"rlib\", \"cdylib\"]\n\n[[bin]]\nname = \"foo-bar\"\ntest = false\ndoc = false\n\n[dependencies]\n...\n</code></pre>\n\n<p>As the executable is not using all of the code I get some \"unused code\" warnings when building the project with <code>cargo build</code>. I could add <code>#[allow(dead_code)]</code> lints all over my source code where necessary but that would disable them also when building the library target.</p>\n\n<p>Is there a way to globally disable the \"dead_code\" lint only when compiling the (feature-wise smaller) <code>bin</code> executable target but having it enabled for the <code>lib</code> target?</p>\n"}, {"tags": ["generics", "rust", "traits", "dynamic-typing"], "comments": [{"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 4, "creation_date": 1552293920, "post_id": 55097693, "comment_id": 96939156, "body": "Can you elaborate on what is your goal? Make a function that can wrap every possible <code>Add</code> operation, or something else? Is the use of <code>Rc</code> and <code>Any</code> requirement?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1552299852, "post_id": 55097693, "comment_id": 96942410, "body": "Also please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. The code you have provided (with relevant imports added), produces a different error for me: <i>error[E0277]: the size for values of type <code>T</code> cannot be known at compilation time</i>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1552300189, "post_id": 55097693, "comment_id": 96942599, "body": "Did you mean to write <code>T: Sized</code> instead of <code>T: ?Sized</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1552302651, "creation_date": 1552302651, "answer_id": 55100531, "question_id": 55097693, "link": "https://stackoverflow.com/questions/55097693/how-to-implement-arbitrary-add-operator-in-rust/55100531#55100531", "title": "How to implement arbitrary add operator in Rust?", "body": "<blockquote>\n  <p>It's obvious that the compiler doesn't know how to cast Any to std::ops::Add.</p>\n</blockquote>\n\n<p>That's because <code>Add</code> is a trait and you may only downcast to a type.</p>\n\n<p>This doesn't work:</p>\n\n<pre><code>l.downcast_ref::&lt;Add&lt;T, Output=T&gt;&gt;()\n</code></pre>\n\n<p>Because <code>Add</code> is a trait, so this is really:</p>\n\n<pre><code>l.downcast_ref::&lt;dyn Add&lt;T, Output=T&gt;&gt;()\n</code></pre>\n\n<p>What you probably intended was just:</p>\n\n<pre><code>l.downcast_ref::&lt;T&gt;()\n</code></pre>\n\n<p>Since <code>T</code> is the type variable in scope that implements <code>Add</code>.</p>\n\n<p>Your requirements are quite unclear, and the setup seems a little strange: you are passing around <code>Rc&lt;dyn Any&gt;</code>, but you also have this <code>T</code> parameter, which can only mean that that caller knows the concrete type of these <code>dyn Any</code> arguments, in order to supply the correct <code>T</code>. It's hard to say that this is the \"correct\" answer, because there are choices here that may not meet the unstated requirements, but it \"works\" and resembles the code in your question:</p>\n\n<pre><code>use std::rc::Rc;\nuse std::any::Any;\nuse std::ops::Add;\n\nfn eval_add&lt;T&gt;(l: Rc&lt;dyn Any&gt;, r: Rc&lt;dyn Any&gt;) -&gt; Rc&lt;dyn Any&gt; \nwhere\n    T: Add&lt;T, Output = T&gt; + Copy + 'static\n{\n    let l = *l.downcast_ref::&lt;T&gt;().unwrap();\n    let r = *r.downcast_ref::&lt;T&gt;().unwrap();\n    Rc::new(l + r)\n}\n</code></pre>\n\n<p>Note that <code>Add::add</code> takes its argument by value, so you <em>must</em> copy or clone it, since it is borrowed from the <code>Rc</code>. I've added the <code>Copy</code> bound, which applies to most numeric types, which should be sufficient. If not, you could <code>Clone</code> instead, which is more general but potentially less efficient.</p>\n\n<p>If the two arguments may have different types, then you'll have to introduce another type parameter, <code>S</code>, and constrain <code>T: Add&lt;S, Output = T&gt;</code>. At this point I would again question what you are doing and suggest that you might need to rethink your overall design, since this is all very un-Rusty and confusing.</p>\n\n<p>Rather than using <code>dyn Any</code>, I would strongly suggest that you consider an enum of supported types. The code will likely be easier to understand and debug, and should be faster too.</p>\n"}], "owner": {"reputation": 15, "user_id": 3966418, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69e01d8383ed092d211255f88fb7afd3?s=128&d=identicon&r=PG&f=1", "display_name": "Eric Wu", "link": "https://stackoverflow.com/users/3966418/eric-wu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 55100531, "answer_count": 1, "score": 0, "last_activity_date": 1552668155, "creation_date": 1552292333, "last_edit_date": 1552668155, "question_id": 55097693, "link": "https://stackoverflow.com/questions/55097693/how-to-implement-arbitrary-add-operator-in-rust", "title": "How to implement arbitrary add operator in Rust?", "body": "<p>I'm working on an arbitrary expression evaluator in Rust, </p>\n\n<p>Take <code>Add</code> operator as an example:</p>\n\n<pre><code>fn eval_add&lt;T: ?Sized + Add&lt;T, Output=T&gt;&gt;(l: Rc&lt;Any&gt;, r: Rc&lt;Any&gt;) -&gt; Rc&lt;Any&gt; {\n    l.downcast_ref::&lt;Add&lt;T, Output=T&gt;&gt;().unwrap() +\n    r.downcast_ref::&lt;Add&lt;T, Output=T&gt;&gt;().unwrap()\n}\n</code></pre>\n\n<p>and I got such error from the compiler:</p>\n\n<blockquote>\n  <p>error: the <code>downcast_ref</code> method cannot be invoked on a trait object</p>\n</blockquote>\n\n<p>It's obvious that the compiler doesn't know how to cast <code>Any</code> to <code>std::ops::Add</code>.</p>\n\n<p>So what is the best practice to do such thing?</p>\n"}, {"tags": ["types", "rust", "parse-tree"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552270979, "post_id": 55094259, "comment_id": 96932926, "body": "Did you consider combining structs and enums before jumping all the way to trait objects?"}, {"owner": {"reputation": 15, "user_id": 3177479, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a0d45874ef3a8fa4d237ed31fc603c8?s=128&d=identicon&r=PG", "display_name": "Ngor", "link": "https://stackoverflow.com/users/3177479/ngor"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552272106, "post_id": 55094259, "comment_id": 96933103, "body": "@trentcl not sure what exactly you mean. Can you give an example?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552272534, "post_id": 55094259, "comment_id": 96933180, "body": "Meaning, you can make <code>A</code>, <code>B</code>, <code>C</code>, etc. all different structs, but still put them in an <code>enum</code>. The second solution, but without the trait part. Combine <code>struct A {prop1: B, prop2: C}</code> with <code>enum NodeData { A(A), B(B), ... }</code>"}, {"owner": {"reputation": 15, "user_id": 3177479, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a0d45874ef3a8fa4d237ed31fc603c8?s=128&d=identicon&r=PG", "display_name": "Ngor", "link": "https://stackoverflow.com/users/3177479/ngor"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552273093, "post_id": 55094259, "comment_id": 96933305, "body": "Still not quite sure how this solves the problem. Regarding first solution: I do have  <code>enum NodeData { A(A), B(B) ...}</code> but this does not give me what I want. Node can have any variant of enum.  Your second solution also does not quite work. The problems are: <code>struct A</code> can have many instances <code>B</code> and <code>C</code> as children. And I need to maintain the order in which they were found in a document"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1552274588, "post_id": 55094259, "comment_id": 96933573, "body": "Sorry, but you&#39;re not really giving me much to go on, here. <code>enum NodeData { A { prop1, prop2 } }</code> is not valid Rust syntax. <code>struct Node { parent: Node, ... }</code> is also problematic since it can never compile. Since the code in the question is sloppy, I threw out a sloppy guess. If you care to edit the question to be a little more focused, I&#39;ll give it another shot."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552326259, "post_id": 55094259, "comment_id": 96958134, "body": "Tangentially, if you haven&#39;t read <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">Learning Rust With Entirely Too Many Linked Lists</a> yet, you should <i>definitely</i> master that before you attempt a complex tree with parent links."}, {"owner": {"reputation": 15, "user_id": 3177479, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a0d45874ef3a8fa4d237ed31fc603c8?s=128&d=identicon&r=PG", "display_name": "Ngor", "link": "https://stackoverflow.com/users/3177479/ngor"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552692275, "post_id": 55094259, "comment_id": 97122109, "body": "@trentcl, thanks, I will take a look!"}], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 3177479, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a0d45874ef3a8fa4d237ed31fc603c8?s=128&d=identicon&r=PG", "display_name": "Ngor", "link": "https://stackoverflow.com/users/3177479/ngor"}, "edited": false, "score": 0, "creation_date": 1552692704, "post_id": 55095475, "comment_id": 97122207, "body": "Thanks. This is what I currently ended up doing. The problem is that I have way too many possible permutations of parents and children.  Generally speaking if I have 10 different node types it is 10*10 matrix of who can contain who. With this aside there are 5 different classifications (enums) which these nodes need to be part of so creating a ton of boilerplate code for converting between all those enums just gets out of hand..."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 1, "last_activity_date": 1552308969, "last_edit_date": 1552308969, "creation_date": 1552280497, "answer_id": 55095475, "question_id": 55094259, "link": "https://stackoverflow.com/questions/55094259/how-can-i-encode-parent-child-constraints-in-a-parse-tree-using-the-type-system/55095475#55095475", "title": "How can I encode parent-child constraints in a parse tree using the type system?", "body": "<blockquote>\n  <p>and unlike Scala I can't use <code>match</code> to destructure traits to a specific type  </p>\n</blockquote>\n\n<p>Maybe it will be possible in the future (see <a href=\"https://doc.rust-lang.org/stable/std/any/trait.Any.html#tymethod.get_type_id\" rel=\"nofollow noreferrer\"><code>get_type_id</code></a>), but I don't see any problem with non-generic structures like </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct NodeA {\n    props: NodeAProps,\n    children: Vec&lt;NodeAChildren&gt;,\n}\nstruct NodeAProps {}\nenum NodeAChildren {\n    B(NodeB),\n    C(NodeC),\n}\n\nstruct NodeB {\n    props: NodeBProps,\n    children: Vec&lt;NodeBChildren&gt;,\n}\nstruct NodeC {}\nstruct NodeD {}\n</code></pre>\n\n<p>An abstract syntax tree can be safely stored this way, and if you need to do something generic with its nodes, then it's easy to implement all necessary traits for them. The Rust standard library internally uses a lot of macros for that purpose.</p>\n"}], "owner": {"reputation": 15, "user_id": 3177479, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a0d45874ef3a8fa4d237ed31fc603c8?s=128&d=identicon&r=PG", "display_name": "Ngor", "link": "https://stackoverflow.com/users/3177479/ngor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1552308969, "creation_date": 1552269073, "last_edit_date": 1552308891, "question_id": 55094259, "link": "https://stackoverflow.com/questions/55094259/how-can-i-encode-parent-child-constraints-in-a-parse-tree-using-the-type-system", "title": "How can I encode parent-child constraints in a parse tree using the type system?", "body": "<p>I am writing a parser for org-mode. I want to leverage the type system to encode parent-child relationship constraints between the nodes of the parse tree. The problem can be demonstrated with the following examples:</p>\n\n<pre><code>enum NodeData {\n    A {prop1, prop2},\n    B {prop3},\n    C,\n    D {prop4}\n//...and list goes on, each variant has its own set of props\n}\n</code></pre>\n\n<p>The <code>NodeData</code> enum represents the set of possible syntax elements - kinds of data types in a tree.</p>\n\n<p>The following <code>Node</code> struct represents the node tree itself in a very naive way</p>\n\n<pre><code>struct Node {\n    parent: Node,\n    data: NodeData,\n    children: Vec&lt;Node&gt;,\n}\n</code></pre>\n\n<p>This approach works until we decide to add some constraints to the way we build the tree, like:</p>\n\n<ul>\n<li>Node that holds <code>A</code> can only have <code>B</code> and <code>C</code> as children.</li>\n<li>Node that holds <code>B</code> can have <code>A</code> and <code>D</code> </li>\n<li>Node that holds <code>C</code> can not have children</li>\n<li>Node that holds <code>D</code> can have only <code>A</code>..</li>\n</ul>\n\n<p>Generically speaking - a variant can have only it own unique subset of <code>enum NodeData</code> as children.</p>\n\n<p>I have tried the following approaches:</p>\n\n<ul>\n<li>I can encode these constraints at runtime, but this creates additional performance overhead and still leaves a possibility to create an invalid tree (due to a bug in a logic for example)</li>\n<li>I tried using structs and traits instead of enum. (e.g. trait <code>CanHaveA</code> is applied to <code>B</code> and <code>D</code>). While that seemed feasible on the surface I noticed that I will lose access to the concrete type behind the trait (which I need since it is a concrete syntax tree) and unlike Scala I can't use <code>match</code> to destructure traits to a specific type.</li>\n</ul>\n\n<p>The solution I hope to get should allow encoding these constraints at compile time and still provide access to a concrete type. </p>\n"}, {"tags": ["linux", "amazon-ec2", "rust", "rhel"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1552234764, "post_id": 55089691, "comment_id": 96924114, "body": "Official sources recommend installing <a href=\"https://rustup.rs/\" rel=\"nofollow noreferrer\">Rustup</a> instead, have you tried it? There might be an RPM package for rustup, otherwise you can install it manually from the given link."}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1552241760, "post_id": 55089691, "comment_id": 96926342, "body": "Do you know the SKU that this system uses?"}], "answers": [{"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": false, "score": 0, "last_activity_date": 1552300504, "creation_date": 1552300504, "answer_id": 55099907, "question_id": 55089691, "link": "https://stackoverflow.com/questions/55089691/how-to-install-rust-toolset-on-rhel-in-ec2/55099907#55099907", "title": "How to install Rust toolset on RHEL in EC2?", "body": "<p>If you want to install rust via yum, I recommend installing from <a href=\"https://fedoraproject.org/wiki/EPEL\" rel=\"nofollow noreferrer\">EPEL</a>. </p>\n\n<ol>\n<li><p>If not already installed, install the EPEL repo RPM - eg for RHEL7:</p>\n\n<pre><code>yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n</code></pre>\n\n<p>also enable optional extras in the RHEL repo as they may be required as dependancies:</p>\n\n<pre><code>subscription-manager repos --enable \"rhel-*-optional-rpms\" --enable \"rhel-*-extras-rpms\"  --enable \"rhel-ha-for-rhel-*-server-rpms\"\n</code></pre>\n\n<p>The above instructions are from the EPEL page linked above.</p></li>\n<li><p>Install rust &amp; cargo via yum</p>\n\n<pre><code>yum install rust cargo\n</code></pre></li>\n</ol>\n\n<p>EPEL seems to keep the rust packages fairly up to date - they currently stock 1.32 while the latest is 1.33 - but if you want to be on the latest, or use nightly, then rustup is the way to go.</p>\n"}], "owner": {"reputation": 8627, "user_id": 5285068, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/8967c033e617a2fb6f7d8fd7b5a12eb5?s=128&d=identicon&r=PG&f=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/5285068/joe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 376, "favorite_count": 0, "closed_date": 1552308715, "answer_count": 1, "score": 0, "last_activity_date": 1552300504, "creation_date": 1552234302, "last_edit_date": 1552234801, "question_id": 55089691, "link": "https://stackoverflow.com/questions/55089691/how-to-install-rust-toolset-on-rhel-in-ec2", "closed_reason": "Duplicate", "title": "How to install Rust toolset on RHEL in EC2?", "body": "<p>I tried installing Rust Toolset to get Cargo:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>yum install rust-toolset-7\nNo package rust-toolset-7 available.\n</code></pre>\n\n<p>I also tried:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>subscription-manager repos --enable rhel-7-server-devtools-rpms\nError: 'rhel-7-server-devtools-rpms' does not match a valid repository ID. Use \"subscription-manager repos --list\" to see valid repositories.\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552241333, "post_id": 55089080, "comment_id": 96926188, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>TestLoop</code> instead, please."}], "answers": [{"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 1, "last_activity_date": 1552241181, "creation_date": 1552241181, "answer_id": 55090764, "question_id": 55089080, "link": "https://stackoverflow.com/questions/55089080/rust-mut-borrow-fail-in-closure/55090764#55090764", "title": "Rust mut borrow fail in closure", "body": "<p>if <code>f()</code> can change <code>test_loop</code> state, then it's natural to add this reference to its signature. This solves the second borrow problem.      </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn run_forever&lt;F&gt;(&amp;mut self, mut f: F)\nwhere\n    F: FnMut(&amp;mut Self) -&gt; (), \n{ \n    // call f(self) instead of f()\n}\n\n// main\nlet f = |l: &amp;mut test_loop| {\n    l.breakit();\n};\n</code></pre>\n"}], "owner": {"reputation": 307, "user_id": 1306312, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4623558095bc289745e22692ac49d7d8?s=128&d=identicon&r=PG", "display_name": "vzex", "link": "https://stackoverflow.com/users/1306312/vzex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 55090764, "answer_count": 1, "score": 1, "last_activity_date": 1552241393, "creation_date": 1552230656, "last_edit_date": 1552241393, "question_id": 55089080, "link": "https://stackoverflow.com/questions/55089080/rust-mut-borrow-fail-in-closure", "title": "Rust mut borrow fail in closure", "body": "<p>Here is my code</p>\n\n<pre><code>struct test_loop {\n    is_break: bool,\n}\nimpl test_loop {\n    fn run_forever&lt;F&gt;(&amp;mut self, mut f: F)\n    where\n        F: FnMut() -&gt; (),\n    {\n        self.is_break = false;\n        loop {\n            f();\n            if self.is_break {\n                break;\n            }\n        }\n    }\n    fn breakit(&amp;mut self) {\n        self.is_break = true;\n    }\n}\nfn main() {\n    let mut l = test_loop { is_break: false };\n    let f = || {\n        l.breakit();\n    };\n    l.run_forever(f);\n}\n</code></pre>\n\n<p>The code is simple, and I don't want to skip calling <code>l.breakit()</code> in the closure. Now the compiler tells me there is a second mutable borrow problem:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `l` as mutable more than once at a time\n  --&gt; src/main.rs:26:5\n   |\n23 |     let f = || {\n   |             -- first mutable borrow occurs here\n24 |         l.breakit();\n   |         - first borrow occurs due to use of `l` in closure\n25 |     };\n26 |     l.run_forever(f);\n   |     ^             - first borrow later used here\n   |     |\n   |     second mutable borrow occurs here\n</code></pre>\n\n<p>I used a <code>RefCell</code> to fix the compilation problem, but the thread still panics during run-time. Should I remove the <code>l.xxx</code> in the closure? Or there's some way to make the code act like it is running in C++ or another language?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "edited": false, "score": 2, "creation_date": 1552228212, "post_id": 55088647, "comment_id": 96922170, "body": "How does <code>HitRecord</code> look like? I&#39;m missing a lifetime parameter here as it seems to contain references, e.g. <code>HitRecord&lt;&#39;a&gt;</code>. In general, a more complete example could help us to help you."}, {"owner": {"reputation": 1209, "user_id": 234913, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/3b8ae5534ab11c7ad6c33ab28874baa9?s=128&d=identicon&r=PG", "display_name": "CrociDB", "link": "https://stackoverflow.com/users/234913/crocidb"}, "reply_to_user": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "edited": false, "score": 0, "creation_date": 1552228687, "post_id": 55088647, "comment_id": 96922304, "body": "@darkwisebear that&#39;s exactly what was missing, thank you! :)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552240562, "post_id": 55088647, "comment_id": 96925948, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/55088647/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Specifically, <code>Vector3</code>; <code>Material</code>; and <code>Ray</code> are missing. Ideally, <b>remove</b> the need for them or provide them. Try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}], "answers": [{"tags": [], "owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "is_accepted": false, "score": 1, "last_activity_date": 1552238147, "last_edit_date": 1552238147, "creation_date": 1552237435, "answer_id": 55090191, "question_id": 55088647, "link": "https://stackoverflow.com/questions/55088647/lifetime-problem-types-have-different-lifetimes-but-data-from-self-flows-in/55090191#55090191", "title": "Lifetime Problem: &quot;types have different lifetimes, but data from &#39;self&#39; flows into...&quot;", "body": "<p>The lifetime of the reference inside <code>HitRecord</code> has to be set to the same (or less) as the lifetime of &amp;self so that the reference from <code>record</code> to self is correct. You don't even have to explicitly set up a relation between 'a and 'b because it's not the lifetime of <code>record</code> itself that matters but the lifetime of the struct member <code>material</code>. This signature should work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn hit&lt;'a&gt;(&amp;'a self, ray:&amp;Ray, t_min:f32, t_max:f32, record:&amp;mut HitRecord&lt;'a&gt;) -&gt; bool\n</code></pre>\n\n<p><strong>Edit</strong>: One thing I've seen that you might not be aware of is that you're creating a trait object, i.e. something that enables dynamic dispatch. If you don't need that, you might want to change the declaration of <code>HitRecord</code> to</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Copy)]\npub struct HitRecord&lt;'a, T: Material&gt; {\n    pub t: f32,\n    pub p: Vector3&lt;f32&gt;,\n    pub normal: Vector3&lt;f32&gt;,\n    pub material: Option&lt;&amp;'a T&gt;\n}\n</code></pre>\n\n<p>This way, you fix the struct to a certain, statically known type implementing <code>Material</code> which enables static, compile time dispatch.</p>\n"}], "owner": {"reputation": 1209, "user_id": 234913, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/3b8ae5534ab11c7ad6c33ab28874baa9?s=128&d=identicon&r=PG", "display_name": "CrociDB", "link": "https://stackoverflow.com/users/234913/crocidb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 898, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1552240689, "creation_date": 1552227780, "last_edit_date": 1552240689, "question_id": 55088647, "link": "https://stackoverflow.com/questions/55088647/lifetime-problem-types-have-different-lifetimes-but-data-from-self-flows-in", "title": "Lifetime Problem: &quot;types have different lifetimes, but data from &#39;self&#39; flows into...&quot;", "body": "<p>I have this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Copy)]\npub struct HitRecord&lt;'a&gt; {\n    pub t: f32,\n    pub p: Vector3&lt;f32&gt;,\n    pub normal: Vector3&lt;f32&gt;,\n    pub material: Option&lt;&amp;'a Material&gt;,\n}\n\npub struct Sphere&lt;T&gt;\nwhere\n    T: Material,\n{\n    pub center: Vector3&lt;f32&gt;,\n    pub radius: f32,\n    pub material: T,\n}\n\nimpl&lt;T&gt; Sphere&lt;T&gt; {\n    fn hit&lt;'a, 'b&gt;(&amp;'a self, ray: &amp;Ray, t_min: f32, t_max: f32, record: &amp;'b mut HitRecord) -&gt; bool\n    where\n        'a: 'b,\n    {\n        record.material = Some(&amp;self.material);\n    }\n}\n</code></pre>\n\n<p>I understand that <code>record</code> must have a shorter lifetime than <code>self</code>, so I assigned different lifetimes to them and set <code>'a</code> to enclose <code>'b</code>. But I'm still getting this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0623]: lifetime mismatch\n  --&gt; src\\tracer\\sphere.rs:54:35\n   |\n30 |     fn hit&lt;'a, 'b&gt;(&amp;'a self, ray:&amp;Ray, t_min:f32, t_max:f32, record:&amp;'b mut HitRecord) -&gt; bool where 'a: 'b {\n   |                    --------                                                 ---------\n   |                    |\n   |                    these two types are declared with different lifetimes...\n...\n54 |                 record.material = Some(&amp;self.material);\n   |                                   ^^^^^^^^^^^^^^^^^^^^ ...but data from `self` flows into `record` here\n</code></pre>\n\n<p>I have beeem fighting this lifetime problem for quite a few hours now and I don't understand what's going on here; what am I doing wrong?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1552195857, "post_id": 55084689, "comment_id": 96914868, "body": "It would be much easier to provide an explicit answer if you included a more complete example of your code."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1552202445, "post_id": 55084689, "comment_id": 96915980, "body": "I wonder if expanding on the problem you&#39;re trying to solve, rather than one specific possibility for a solution, might help you get a better answer. Why are these 2D vectors? Why do they need different types? What is the usecase for this structure and what motivates it?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552222574, "post_id": 55084689, "comment_id": 96920667, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/25818082/vector-of-objects-belonging-to-a-trait\">Vector of objects belonging to a trait</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1262, "user_id": 3003238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88030181cfb775f65d653bb8e2d55fdc?s=128&d=identicon&r=PG&f=1", "display_name": "user3003238", "link": "https://stackoverflow.com/users/3003238/user3003238"}, "edited": false, "score": 0, "creation_date": 1552196282, "post_id": 55084753, "comment_id": 96914933, "body": "Thanks for the answer. That&#39;s my initial thought, but is there a way to create an instance for that? Actually what I need is <code>Vec&lt;Vec&lt;Ord&gt;&gt;</code> and need to store an array of <code>i32</code> and an array of <code>i16</code>. Do you know how can I implement the <code>new</code> for this case? Instead of letting the consumers declare what exactly the type they need, I would like they get something can be comparable within the vector only."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 1262, "user_id": 3003238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88030181cfb775f65d653bb8e2d55fdc?s=128&d=identicon&r=PG&f=1", "display_name": "user3003238", "link": "https://stackoverflow.com/users/3003238/user3003238"}, "edited": false, "score": 0, "creation_date": 1552199657, "post_id": 55084753, "comment_id": 96915467, "body": "That would not store enough type information. A type implementing <code>Ord</code> can only be compared be compared with another value of the same type, and a trait object of <code>Ord</code> would have no way of knowing what type it was allowed to be compared to."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 1262, "user_id": 3003238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88030181cfb775f65d653bb8e2d55fdc?s=128&d=identicon&r=PG&f=1", "display_name": "user3003238", "link": "https://stackoverflow.com/users/3003238/user3003238"}, "edited": false, "score": 0, "creation_date": 1552200026, "post_id": 55084753, "comment_id": 96915526, "body": "You can have a <code>Vec</code> of a single type, like <code>i32</code>, but you can&#39;t have a <code>Vec</code> or arbitrary integer types that are mixed and expect to be able to compare them."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 1262, "user_id": 3003238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88030181cfb775f65d653bb8e2d55fdc?s=128&d=identicon&r=PG&f=1", "display_name": "user3003238", "link": "https://stackoverflow.com/users/3003238/user3003238"}, "edited": false, "score": 1, "creation_date": 1552202146, "post_id": 55084753, "comment_id": 96915919, "body": "@user3003238 There is other solution like use an enum if you want mix two type."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1552202352, "post_id": 55084753, "comment_id": 96915958, "body": "Yup, the main thing is that <i>something</i> needs to decide what types are what somewhere."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 1262, "user_id": 3003238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88030181cfb775f65d653bb8e2d55fdc?s=128&d=identicon&r=PG&f=1", "display_name": "user3003238", "link": "https://stackoverflow.com/users/3003238/user3003238"}, "edited": false, "score": 1, "creation_date": 1552213603, "post_id": 55084753, "comment_id": 96918409, "body": "@user3003238 <i>hmm, that&#39;s sad</i> It sounds strange at first, but it&#39;s not an arbitrary limitation, it follows from the fact that Rust&#39;s vector really provides efficient contiguous storage for its values without introducing indirection. (The very same thing applies to a C++ <code>std::vector</code>.) But if you need indirection, it&#39;s easy to get it! Simply store make your vector a <code>Vec&lt;Box&lt;Ord&gt;&gt;</code>. Or create your own <code>ComparableNumber</code> trait that extends <code>Ord</code>, and also provides a way to retrieve the number, and make the vector a <code>Vec&lt;Box&lt;ComparableNumber&gt;&gt;</code>."}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": false, "score": 1, "last_activity_date": 1552195861, "creation_date": 1552195861, "answer_id": 55084753, "question_id": 55084689, "link": "https://stackoverflow.com/questions/55084689/how-to-declare-a-generic-vector-of-comparable-stuffs-in-rust/55084753#55084753", "title": "How to declare a generic vector of comparable stuffs in rust", "body": "<p>The type <code>Vec&lt;Ord&gt;</code> would be a <code>Vec</code> where each item is a trait object. What you'd want to do is do <code>Vec&lt;T&gt;</code> and then set the trait bound on <code>T</code> to be <code>: Ord</code>, e.g.</p>\n\n<pre><code>struct Foo&lt;T: Ord&gt; {\n  arr: Vec&lt;T&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 1262, "user_id": 3003238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88030181cfb775f65d653bb8e2d55fdc?s=128&d=identicon&r=PG&f=1", "display_name": "user3003238", "link": "https://stackoverflow.com/users/3003238/user3003238"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 374, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1552197257, "creation_date": 1552195138, "last_edit_date": 1552197257, "question_id": 55084689, "link": "https://stackoverflow.com/questions/55084689/how-to-declare-a-generic-vector-of-comparable-stuffs-in-rust", "title": "How to declare a generic vector of comparable stuffs in rust", "body": "<p>How can I define a vector of comparable in Rust?</p>\n\n<p>Say, <code>i32</code>, <code>i16</code>...</p>\n\n<p>I tried <code>arr: Vec&lt;Ord&gt;</code> but the compiler complains about <code>the trait \"std::cmp::Ord\" cannot be made into an object</code></p>\n\n<p>Basically I need to store a vector of a vector of comparable objects.\ne.g.</p>\n\n<pre><code>    struct Setup&lt;T: Ord + Copy&gt; {\n        arr: Vec&lt;Vec&lt;T&gt;&gt;\n    }\n\n    impl&lt;T: Ord + Copy&gt; Setup&lt;T&gt; {\n        fn new() -&gt; Self {\n            Self {\n                arr: vec![\n                    vec![1, 2, 3, 4, 5],\n                    vec![1.0, 2.0, 3.0]\n                ]\n            }\n        }\n    }\n</code></pre>\n\n<p>Instead of letting the consumer decide what exactly the type is, I would like they can get a vector of comparable stuffs.</p>\n"}, {"tags": ["rust", "flags", "conditional-compilation"], "comments": [{"owner": {"reputation": 8073, "user_id": 2852624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/682806d261e4f00f77aa8633689a9558?s=128&d=identicon&r=PG&f=1", "display_name": "Matthias247", "link": "https://stackoverflow.com/users/2852624/matthias247"}, "edited": false, "score": 0, "creation_date": 1552193113, "post_id": 55084328, "comment_id": 96914453, "body": "It would definitely work if you move server and other things into a different crate, which then sets different feature flags on a common library. I&#39;m not sure whether it works for a shared crate too."}, {"owner": {"reputation": 788, "user_id": 1391782, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cb4614f0b19bb2ec2a35fd3c065ba8c5?s=128&d=identicon&r=PG", "display_name": "Abdillah", "link": "https://stackoverflow.com/users/1391782/abdillah"}, "reply_to_user": {"reputation": 8073, "user_id": 2852624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/682806d261e4f00f77aa8633689a9558?s=128&d=identicon&r=PG&f=1", "display_name": "Matthias247", "link": "https://stackoverflow.com/users/2852624/matthias247"}, "edited": false, "score": 0, "creation_date": 1552194083, "post_id": 55084328, "comment_id": 96914606, "body": "Shared crate for client and server then? Thanks, noted, in case this has no solution.. My program is just very small, one file each :("}], "owner": {"reputation": 788, "user_id": 1391782, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cb4614f0b19bb2ec2a35fd3c065ba8c5?s=128&d=identicon&r=PG", "display_name": "Abdillah", "link": "https://stackoverflow.com/users/1391782/abdillah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 200, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1552190649, "creation_date": 1552190649, "question_id": 55084328, "link": "https://stackoverflow.com/questions/55084328/conditional-code-compilation-of-specific-binary", "title": "Conditional code compilation of specific binary", "body": "<p>Can we enable <code>--features</code> flag for a specific binary automatically? For example, to build <code>server</code> binary with <code>forserver</code> feature, we're not obliged to,</p>\n\n<pre><code>cargo build --features forserver --bin server\n</code></pre>\n\n<p>Instead, we only need to write in <code>Cargo.toml</code>,</p>\n\n<pre><code>[[bin]]\nname = \"server\"\nfeatures = [ \"forserver\" ]\n</code></pre>\n\n<p>and straight to <code>cargo build --bin server</code>.</p>\n\n<p>Or alternatively, is there <code>#![cfg(bin = \"server\")]</code> notation to enable compilation of a code block just for specific binary?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552201991, "post_id": 55084060, "comment_id": 96915892, "body": "isn&#39;t IPV6 const ? <a href=\"https://doc.rust-lang.org/src/std/net/ip.rs.html#855\" rel=\"nofollow noreferrer\">doc.rust-lang.org/src/std/net/ip.rs.html#855</a>, for some reason IPV4 is not stable... <a href=\"https://doc.rust-lang.org/src/std/net/ip.rs.html#332\" rel=\"nofollow noreferrer\">doc.rust-lang.org/src/std/net/ip.rs.html#332</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1552218099, "post_id": 55084060, "comment_id": 96919474, "body": "@Stargateur it doesn&#39;t matter, the crate doesn&#39;t allow any expression in <code>phf_set!</code> and an <code>enum</code> constructor isn&#39;t one of the allowed one. I guess it needs to computes the hash at compile time, and since the crate existed before <code>const</code>, it could only accept simpler expressions."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1552237995, "post_id": 55084060, "comment_id": 96925175, "body": "If this only IPs, not IP masks, then a <code>u32</code> may be preferable."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1552239123, "post_id": 55084060, "comment_id": 96925522, "body": "@MatthieuM. &quot;If this only IP*v4*s&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552261645, "post_id": 55084060, "comment_id": 96931444, "body": "Couldn&#39;t you just create a newtype around <code>IpAddr</code> and implement <a href=\"https://docs.rs/phf/0.7.24/phf/trait.PhfHash.html\" rel=\"nofollow noreferrer\"><code>PhfHash</code></a> for it?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552298411, "post_id": 55084060, "comment_id": 96941553, "body": "@Shepmaster maybe if you use <code>phf_codegen</code>, but if you use the simpler <code>phf_set!</code> macro, you are <a href=\"https://github.com/sfackler/rust-phf/blob/53000d3dc844968e955fe30272734d3af36efe8f/phf_macros/src/lib.rs#L52-L102\" rel=\"nofollow noreferrer\">limited to simple expressions</a> and <code>enum</code> constructors (or anything function-call-like) aren&#39;t allowed."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 6, "last_activity_date": 1552189146, "last_edit_date": 1552189146, "creation_date": 1552187012, "answer_id": 55084060, "question_id": 55083952, "link": "https://stackoverflow.com/questions/55083952/is-it-possible-to-populate-a-large-set-at-compile-time/55084060#55084060", "title": "Is it possible to populate a large set at compile time?", "body": "<p>The <a href=\"https://docs.rs/phf/0.7.24/phf/\" rel=\"noreferrer\">Rust-PHF</a> crate provides compile-time data structures, including (ordered) maps and sets.</p>\n\n<p>Unfortunately, to date, it does not support initialization of a set of <code>std::net::IpAddr</code>, but can be used with static strings:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>static IP_SET: phf::Set&lt;&amp;'static str&gt; = phf_set! {\n    \"127.0.0.1\",\n    \"::1\",\n};\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552261406, "post_id": 55090316, "comment_id": 96931389, "body": "Why the custom hasher? I don&#39;t see what benefit it brings here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552265070, "post_id": 55090316, "comment_id": 96932038, "body": "Actually, why create a <i>set</i> at all at runtime? Create a set in the build script. Now you know it&#39;s unique and you can just spit out all the data as a big array or slice."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1552290406, "post_id": 55090316, "comment_id": 96937714, "body": "@Shepmaster: I think you may have misunderstood the purpose of the exercise. The goal is not to print a list of unique IPs in the csv (they are likely already unique), but to scrap a lot of log files, looking up any IP we stumble upon in this set. As such, the goal is to optimize look-up speed, and the look-up speed of a hash-map with an optimized hash is <i>much</i> better than the look-up speed in a sorted array... even assuming an Eytzinger layout."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1552238260, "creation_date": 1552238260, "answer_id": 55090316, "question_id": 55083952, "link": "https://stackoverflow.com/questions/55083952/is-it-possible-to-populate-a-large-set-at-compile-time/55090316#55090316", "title": "Is it possible to populate a large set at compile time?", "body": "<p>I would recommend to simply use a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">Build Script</a> to read the CSV and produce a source file containing the initialized of a standard <code>HashSet</code> with a custom hasher (<code>FxHash</code>, for example).</p>\n\n<p>This would let you keep the convenience of editing a CSV file, while still baking all the data into a binary. It would require some initialization time (unlike PHF), but the ability to specify a custom hash is quite beneficial.</p>\n\n<p>Also, depending on the format of IPs in the logs, you may want to store either <code>&amp;'static str</code> or <code>u32</code>; the latter is more efficient (search-wise), but the gain may be negated if a conversion is required.</p>\n"}, {"comments": [{"owner": {"reputation": 1247, "user_id": 538610, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/d618b7ec836ea873e69d0c70353e36c8?s=128&d=identicon&r=PG", "display_name": "ForeverConfused", "link": "https://stackoverflow.com/users/538610/foreverconfused"}, "edited": false, "score": 1, "creation_date": 1552258968, "post_id": 55090751, "comment_id": 96930932, "body": "Is it possible to parse that csv at compile time using Rust-PHF mcarton mentioned?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1247, "user_id": 538610, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/d618b7ec836ea873e69d0c70353e36c8?s=128&d=identicon&r=PG", "display_name": "ForeverConfused", "link": "https://stackoverflow.com/users/538610/foreverconfused"}, "edited": false, "score": 2, "creation_date": 1552262840, "post_id": 55090751, "comment_id": 96931668, "body": "@ForeverConfused nothing special from this answer, but yes, in general. As <a href=\"https://stackoverflow.com/a/55090316/155423\">Matthieu M. mentions</a>, you can use a build script to perform the reading of the CSV itself, then construct the set. That being said, why do you need a <i>set</i> at runtime? Once you&#39;ve ensured there are no duplicates, an array would be sufficient in most cases."}, {"owner": {"reputation": 1247, "user_id": 538610, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/d618b7ec836ea873e69d0c70353e36c8?s=128&d=identicon&r=PG", "display_name": "ForeverConfused", "link": "https://stackoverflow.com/users/538610/foreverconfused"}, "edited": false, "score": 0, "creation_date": 1552285360, "post_id": 55090751, "comment_id": 96935845, "body": "For each log I check if it exists in the set of emails, and I delete it if found. This type of operation is much faster on sorted set. Lambda charges per invocation, so there&#39;s some minimal benefit to having a set generated at compile time."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1552241123, "creation_date": 1552241123, "answer_id": 55090751, "question_id": 55083952, "link": "https://stackoverflow.com/questions/55083952/is-it-possible-to-populate-a-large-set-at-compile-time/55090751#55090751", "title": "Is it possible to populate a large set at compile time?", "body": "<blockquote>\n  <p>have only a single static binary to deploy</p>\n</blockquote>\n\n<p>Inline your entire CSV file using <code>include!</code> or <code>include_str!</code> and then go about the rest of your program as usual.</p>\n\n<pre><code>use csv; // 1.0.5\n\nstatic CSV_FILE: &amp;[u8] = include_bytes!(\"/etc/hosts\");\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let mut rdr = csv::ReaderBuilder::new()\n        .delimiter(b'\\t')\n        .from_reader(CSV_FILE);\n\n    for result in rdr.records() {\n        let record = result?;\n        println!(\"{:?}\", record);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25505275/155423\">Is there a good way to include external resource data into Rust source code?</a></li>\n</ul>\n"}], "owner": {"reputation": 1247, "user_id": 538610, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/d618b7ec836ea873e69d0c70353e36c8?s=128&d=identicon&r=PG", "display_name": "ForeverConfused", "link": "https://stackoverflow.com/users/538610/foreverconfused"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 856, "favorite_count": 0, "accepted_answer_id": 55084060, "answer_count": 3, "score": 6, "last_activity_date": 1552241123, "creation_date": 1552185594, "last_edit_date": 1552240769, "question_id": 55083952, "link": "https://stackoverflow.com/questions/55083952/is-it-possible-to-populate-a-large-set-at-compile-time", "title": "Is it possible to populate a large set at compile time?", "body": "<p>We have a 'delete all my data' feature. I'd like to delete a set of IPs from many many web log files.</p>\n\n<p>Currently at runtime I open a CSV with the IP addresses to delete, turn it into a set, scan through files, and execute the delete logic if log IPs match.</p>\n\n<p>Is there any way I can load the CSV and turn it into a set at compile time? We're trying to migrate things to AWS lambda, and it's nifty to have only a single static binary to deploy with no dependencies.</p>\n"}, {"tags": ["struct", "rust", "initialization", "tuples"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 1, "last_activity_date": 1552189161, "creation_date": 1552189161, "answer_id": 55084211, "question_id": 55083797, "link": "https://stackoverflow.com/questions/55083797/initialize-two-struct-members-with-a-function-that-returns-a-tuple-in-rust/55084211#55084211", "title": "Initialize two struct members with a function that returns a tuple in Rust", "body": "<p>I believe that your existing approach is the correct one. If you name the variables as the struct members, you can avoid the explicit <code>member: value</code> syntax:</p>\n\n<pre><code>let (member1, member2) = function_that_returns_tuple();\nMyStruct { member1, member2, }\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 4203532, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/521456f8fcb4b822c70a4f957d5cabe4?s=128&d=identicon&r=PG", "display_name": "Geom3trik", "link": "https://stackoverflow.com/users/4203532/geom3trik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 432, "favorite_count": 0, "accepted_answer_id": 55084211, "answer_count": 1, "score": 0, "last_activity_date": 1552189161, "creation_date": 1552183269, "question_id": 55083797, "link": "https://stackoverflow.com/questions/55083797/initialize-two-struct-members-with-a-function-that-returns-a-tuple-in-rust", "title": "Initialize two struct members with a function that returns a tuple in Rust", "body": "<p>So I have a function that returns a tuple of 2 values, and I want to assign these values to two different members of a struct. Is there a way to do this without having to call the function twice and extract each value individually?</p>\n\n<p>I'm thinking something like:</p>\n\n<pre><code>let mut my_struct : MyStruct = MyStruct {\n    (member1, member2): function_that_returns_tuple()\n}\n</code></pre>\n\n<p>Currently I am calling the function on two temporary variables and then moving them to the struct members but I'm wondering if there's a way to do it directly in the initialization.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552201540, "post_id": 55083714, "comment_id": 96915803, "body": "<a href=\"https://stackoverflow.com/questions/40014703/why-is-stdrcrc-not-copy\" title=\"why is stdrcrc not copy\">stackoverflow.com/questions/40014703/why-is-stdrcrc-not-copy</a> ? <a href=\"https://stackoverflow.com/questions/40984932/what-happens-when-an-arc-is-cloned\" title=\"what happens when an arc is cloned\">stackoverflow.com/questions/40984932/&hellip;</a> ?"}], "answers": [{"tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": true, "score": 7, "last_activity_date": 1552182274, "creation_date": 1552182274, "answer_id": 55083715, "question_id": 55083714, "link": "https://stackoverflow.com/questions/55083714/expected-struct-stdrcrc-found-reference-how-to-convert/55083715#55083715", "title": "&quot;expected struct `std::rc::Rc`, found reference&quot; - how to convert?", "body": "<p>To convert an <code>&amp;Rc&lt;Foo&gt;</code> -> <code>Rc&lt;Foo&gt;</code>, use <a href=\"https://doc.rust-lang.org/std/rc/index.html#cloning-references\" rel=\"noreferrer\"><code>Rc::clone()</code></a>, which gives you an Rc object of your own, increasing the reference count under the hood:</p>\n\n<pre><code>let ref_to_rc: &amp;Rc&lt;Foo&gt; = &amp;Rc::new(Foo());\nlet new_rc: Rc&lt;Foo&gt; = Rc::clone(ref_to_rc);\n</code></pre>\n\n<p><em><code>rc.clone()</code> is equivalent to <code>Rc::clone(&amp;rc)</code>, but idiomatic Rust uses the latter to make it clear that the code only increases the refcount, not performing a deep copy of the data like some other implementations of <code>.clone()</code> do. (<a href=\"https://github.com/rust-lang/rust-clippy/issues/2048\" rel=\"noreferrer\">Though in some scenarios involving traits you might need to revert to <code>ref_to_rc.clone()</code></a>.)</em></p>\n\n<p>The errors above were about Rust refusing to do the copy implicitly. <a href=\"https://stackoverflow.com/q/40014703/1026\">Why is std::rc::Rc&lt;&gt; not Copy?</a> has an explanation of why it behaves like that.</p>\n"}], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2232, "favorite_count": 0, "accepted_answer_id": 55083715, "answer_count": 1, "score": 5, "last_activity_date": 1552182274, "creation_date": 1552182274, "question_id": 55083714, "link": "https://stackoverflow.com/questions/55083714/expected-struct-stdrcrc-found-reference-how-to-convert", "title": "&quot;expected struct `std::rc::Rc`, found reference&quot; - how to convert?", "body": "<p>I tried to get a reference-counted <code>Rc&lt;Foo&gt;</code> from a hash map and put it into a different container (<code>Vec&lt;Foo&gt;</code>).</p>\n\n<p>Thought this would work (by incrementing the reference count), but instead I got an <strong>\"expected struct <code>std::rc::Rc</code>, found reference\"</strong> error.</p>\n\n<p>How do I convert an <code>&amp;Rc&lt;Foo&gt;</code> to a <code>Rc&lt;Foo&gt;</code>?</p>\n\n<hr>\n\n<p>More info:</p>\n\n<pre><code>struct Foo();\nlet mut foo : HashMap&lt;usize, Rc&lt;Foo&gt;&gt; = HashMap::new();\nlet mut bar : Vec&lt;Rc&lt;Foo&gt;&gt; = Vec::new();\nfoo.insert(0, Rc::new(Foo()));\nif let Some(x) = foo.get(&amp;0) {\n    bar.push(x); // expected struct `std::rc::Rc`, found reference\n                 // note: expected type `std::rc::Rc&lt;Foo&gt;`\n                 //          found type `&amp;std::rc::Rc&lt;Foo&gt;`  rustc(E0308)\n}\n</code></pre>\n\n<p>I get that the hash map returns a <em>reference</em> to the value it owns. But dereferencing it doesn't work: both <code>if let Some(&amp;x)</code> and <code>bar.push(*x);</code> result in a <strong>\"cannot move out of borrowed content\"</strong>.</p>\n\n<p>Curiously, adding a type annotation changes the error to <strong>\"cannot move out of an <code>Rc</code>\"</strong>:</p>\n\n<pre><code>    let x : &amp;Rc&lt;Foo&gt; = x;\n    bar.push(*x); // cannot move out of an `Rc`  rustc(E0507)\n</code></pre>\n\n<p>I need to store a reference to the same object, and not to a copy, so I avoided the <code>.clone()</code> \"escape hatch\".</p>\n"}, {"tags": ["struct", "rust", "tuples"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552201699, "post_id": 55083104, "comment_id": 96915831, "body": "(I will advise to not put a (anonyme) tuple inside a struct but that an opinion)"}], "answers": [{"tags": [], "owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "is_accepted": true, "score": 2, "last_activity_date": 1552175199, "creation_date": 1552175199, "answer_id": 55083119, "question_id": 55083104, "link": "https://stackoverflow.com/questions/55083104/is-it-possible-to-define-tuples-as-members-of-structs-in-rust/55083119#55083119", "title": "Is it possible to define tuples as members of structs in Rust?", "body": "<p>A tuple is a single variable which contains 2 values so when you define it in your struct it is still a single variable/field:</p>\n\n<pre><code>struct MyStruct {\n    x: (u32, f32),\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 4203532, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/521456f8fcb4b822c70a4f957d5cabe4?s=128&d=identicon&r=PG", "display_name": "Geom3trik", "link": "https://stackoverflow.com/users/4203532/geom3trik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "accepted_answer_id": 55083119, "answer_count": 1, "score": 0, "last_activity_date": 1552175199, "creation_date": 1552175016, "question_id": 55083104, "link": "https://stackoverflow.com/questions/55083104/is-it-possible-to-define-tuples-as-members-of-structs-in-rust", "title": "Is it possible to define tuples as members of structs in Rust?", "body": "<p>I am very new to Rust and I was wondering if it's possible to define a tuple as a struct member. Something like: </p>\n\n<pre><code>struct MyStruct {\n    (x, y) : (u32, f32)\n}\n</code></pre>\n\n<p>The compiler complains about the first comma, so this obviously isn't the right syntax. Is it even possible? I Can't find anything in the documentation, and if I search for tuple and struct I get results for tuple structs which is not what I'm looking for.</p>\n\n<p>For anyone interested why I want to know this, I have a function that returns a tuple and I want to store the result inside a member of a struct. Currently I am calling the function on two temporary variables and then moving the results into two different struct members, but not sure if this is the right way to do it.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552169946, "post_id": 55082486, "comment_id": 96910740, "body": "What are the outputs of <code>rustc --version</code> and <code>cargo --version</code>?"}, {"owner": {"reputation": 5821, "user_id": 634135, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/e663a833765a8e904f7fe53827cc376e?s=128&d=identicon&r=PG", "display_name": "cobie", "link": "https://stackoverflow.com/users/634135/cobie"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552170109, "post_id": 55082486, "comment_id": 96910775, "body": "both commandas output <code>1.33</code>"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1552171157, "post_id": 55082486, "comment_id": 96910974, "body": "I observe the same behaviour (Linux, 1.33.0 for <code>rustc</code>). Curiously, if I do <code>rustc --edition 2018 main.rs</code> it compiles."}], "answers": [{"tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": true, "score": 5, "last_activity_date": 1552171259, "creation_date": 1552171259, "answer_id": 55082678, "question_id": 55082486, "link": "https://stackoverflow.com/questions/55082486/why-does-this-rust-2018-code-compile-with-cargo-build-but-not-using-rustc/55082678#55082678", "title": "Why does this Rust 2018 code compile with `cargo build` but not using rustc?", "body": "<p>This function will compile fine if you have <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/ownership-and-lifetimes/non-lexical-lifetimes.html\" rel=\"noreferrer\">non-lexical lifetimes</a> enabled and won't compile without them. The 2018 edition enables them by default. Perhaps you have <code>edition = \"2018\"</code> in your <code>Cargo.toml</code>, but are not passing it as parameter when using rustc directly?</p>\n"}], "owner": {"reputation": 5821, "user_id": 634135, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/e663a833765a8e904f7fe53827cc376e?s=128&d=identicon&r=PG", "display_name": "cobie", "link": "https://stackoverflow.com/users/634135/cobie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 55082678, "answer_count": 1, "score": 2, "last_activity_date": 1552173660, "creation_date": 1552169650, "last_edit_date": 1552173660, "question_id": 55082486, "link": "https://stackoverflow.com/questions/55082486/why-does-this-rust-2018-code-compile-with-cargo-build-but-not-using-rustc", "title": "Why does this Rust 2018 code compile with `cargo build` but not using rustc?", "body": "<p>When compiling this snippet below using cargo build, the borrow checker seems fine but when using rustc I get the error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `char_counts` as mutable because it is also borrowed as immutable\n  --&gt; src/lib.rs:14:17\n   |\n10 |         let count = char_counts.get(&amp;char);\n   |                     ----------- immutable borrow occurs here\n...\n14 |                 char_counts.insert(char, rem);\n   |                 ^^^^^^^^^^^ mutable borrow occurs here\n...\n19 |     }\n   |     - immutable borrow ends here\n</code></pre>\n\n<p>Any ideas why this happens?</p>\n\n<pre><code>use std::collections::HashMap;\n\npub fn anagram(word: &amp;str, another_word: &amp;str) -&gt; i32 {\n    let mut char_counts = HashMap::new();\n    for char in word.chars() {\n        let count = char_counts.entry(char).or_insert(0);\n        *count += 1;\n    }\n    for char in another_word.chars() {\n        let count = char_counts.get(&amp;char);\n        if let Some(val) = count {\n            let rem = val - 1;\n            if rem &gt; 0 {\n                char_counts.insert(char, rem);\n            } else {\n                char_counts.remove(&amp;char);\n            }\n        }\n    }\n    println!(\"{:?}\", char_counts);\n    return char_counts.keys().len() as i32;\n}\n</code></pre>\n\n<p><code>cargo --version</code> and <code>rustc --version</code> commands both output <code>1.33</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1552167574, "post_id": 55082000, "comment_id": 96910163, "body": "<code>?</code> <i>returns from the enclosing function</i>, and <code>!</code> is the return type of a function that <i>never returns</i>. Wouldn&#39;t using <code>?</code> in a function returning <code>!</code> lead to a contradiction of sorts?"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1552167649, "post_id": 55082000, "comment_id": 96910184, "body": "On searching: unless things are drastically different in the nightly, <code>?</code> uses <code>From</code> trait. <code>!</code> itself is called a &quot;never type&quot;. <a href=\"https://doc.rust-lang.org/std/primitive.never.html\" rel=\"nofollow noreferrer\">docs</a>, <a href=\"https://github.com/rust-lang/rust/issues/35121\" rel=\"nofollow noreferrer\">tracking issue</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1552235616, "post_id": 55082000, "comment_id": 96924418, "body": "It is preferred to post separate questions instead of combining your questions into one. That way, it helps the people answering your question as well as others hunting for one of your questions. I&#39;ve focused your question on the specifics of using <code>?</code>. The other aspect of your question is covered in <a href=\"https://stackoverflow.com/q/31082098/155423\">Why would I use divergent functions?</a> and <a href=\"https://stackoverflow.com/q/51832396/155423\">Why does Rust have a \u201cNever\u201d primitive type?</a>."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552222167, "post_id": 55082349, "comment_id": 96920550, "body": "I know you said &quot;roughly&quot;, but it&#39;s worth observing that the <code>?</code> operator doesn&#39;t <i>only</i> work with <code>Result</code>, but with any type that implements <a href=\"https://doc.rust-lang.org/std/ops/trait.Try.html\" rel=\"nofollow noreferrer\"><code>Try</code></a>. (This is different from the <code>try!</code> macro, which <i>does</i> only work with <code>Result</code>.)"}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552226221, "post_id": 55082349, "comment_id": 96921627, "body": "@trentcl Indeed, that&#39;s why I used &quot;roughly&quot;; even the old <code>try!</code> macro was more elaborate than the approximation, because it used <code>From</code> to convert between compatible error types. Do you know where in the docs one can find the precise semantics of <code>?</code>?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552241592, "post_id": 55082349, "comment_id": 96926278, "body": "No, I think there is some hangup about the (non-)stabilization of <code>Try</code> (although the fact that <code>Result</code> and <code>Option</code> both work with <code>?</code> <i>is</i> stable since 1.22, the existence of the <code>Try</code> trait itself is still unstable.) There is, of course, the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0243-trait-based-exception-handling.md\" rel=\"nofollow noreferrer\">RFC</a>, but the description there is not exactly what has been accepted (<code>catch</code> expressions are not, and the <code>Try</code> trait is called <code>ResultCarrier</code> with a slightly different API)."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552244022, "post_id": 55082349, "comment_id": 96926984, "body": "@trentcl At first that looked like a documentation bug - unstable features are still documented, e.g. <code>Try</code>. But <code>?</code> itself is an operator, and operators aren&#39;t documented in the stdlib docs - it&#39;s not like you can find the documentation for <code>+</code> or <code>&amp;mut</code> (as far as I know). Perhaps the <a href=\"https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html#a-shortcut-for-propagating-errors-the--operator\" rel=\"nofollow noreferrer\">description of <code>?</code></a> in the book could be expanded, or at least fixed not to claim that the function must return <code>Result</code> in order to use <code>?</code>."}], "tags": [], "owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "is_accepted": true, "score": 6, "last_activity_date": 1552213765, "last_edit_date": 1552213765, "creation_date": 1552168490, "answer_id": 55082349, "question_id": 55082000, "link": "https://stackoverflow.com/questions/55082000/can-i-use-the-question-mark-operator-in-a-divergent-function-that-returns-th/55082349#55082349", "title": "Can I use the question mark operator (?) in a divergent function that returns the never type (!)?", "body": "<blockquote>\n  <p>can I use <code>?</code> in a <code>() -&gt; !</code> function</p>\n</blockquote>\n\n<p>No. The <code>?</code> operator is an expression where <code>X?</code> is interpreted roughly as:</p>\n\n<pre><code>match X {\n    Ok(success_value) =&gt; success_value,\n    Err(err_value) =&gt; {\n         return Err(err_value);  // returns from the enclosing function\n    }\n}\n</code></pre>\n\n<p>Note how the <code>?</code> expression implies a <em>return</em> from the function that uses it. For <code>X?</code> to compile, the function's return type needs to be a <code>Result</code> whose error variant is compatible with the error variant of <code>X</code>. A function that returns the never type <code>!</code> specifically promises never to return, so its return type is not compatible with the <code>return</code> implied by the <code>?</code> operator.</p>\n\n<p>A function that never returns should either handle error results using <code>match</code> or equivalent to choose the appropriate action, or call <code>.unwrap()</code> or <code>.expect()</code> to convert them into panic.</p>\n"}], "owner": {"reputation": 1818, "user_id": 555631, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/2a6c43efadb77b5b8c8118b57fa411fc?s=128&d=identicon&r=PG", "display_name": "everett1992", "link": "https://stackoverflow.com/users/555631/everett1992"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 55082349, "answer_count": 1, "score": 1, "last_activity_date": 1552235412, "creation_date": 1552165923, "last_edit_date": 1552235412, "question_id": 55082000, "link": "https://stackoverflow.com/questions/55082000/can-i-use-the-question-mark-operator-in-a-divergent-function-that-returns-th", "title": "Can I use the question mark operator (?) in a divergent function that returns the never type (!)?", "body": "<p>I'm writing Rust for an embedded project and my <code>main</code> function's signature is</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[entry]\nfn main() -&gt; !\n</code></pre>\n\n<p>I understand that this means that it will never return, and I generally enter an infinite loop at the end of main.</p>\n\n<p>I want to use the <code>?</code> try operator in my main function, but I couldn't search the docs for <code>rust ? in !</code>. How do I spell this out in words?</p>\n\n<p>Can I use <code>?</code> in a <code>() -&gt; !</code> function?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1552163513, "post_id": 55081599, "comment_id": 96909072, "body": "<a href=\"https://stackoverflow.com/questions/48308759/how-do-i-convert-a-vect-to-a-vecu-without-copying-the-vector/48309116#48309116\">This</a> might be of interest."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1552164505, "post_id": 55081599, "comment_id": 96909306, "body": "Rust does not guarantee that a newtype has the same memory layout as the original type. If you are using a <code>struct</code> for the newtype, you can use <code>#[repr(transparent)]</code> to get this guarantee."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1552166101, "post_id": 55081599, "comment_id": 96909721, "body": "I&#39;ve added an answer to the question Michail linked above, and I voted to close this one as a duplicate."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552166478, "post_id": 55081599, "comment_id": 96909840, "body": "Relevant: <a href=\"https://doc.rust-lang.org/std/slice/fn.from_raw_parts.html\" rel=\"nofollow noreferrer\"><code>slice::from_raw_parts</code></a>"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 40, "favorite_count": 0, "closed_date": 1552167934, "answer_count": 0, "score": 1, "last_activity_date": 1552162854, "creation_date": 1552162854, "question_id": 55081599, "link": "https://stackoverflow.com/questions/55081599/is-there-a-zero-cost-way-of-converting-a-slice-of-structs-into-a-slice-of-newtyp", "closed_reason": "Duplicate", "title": "Is there a zero-cost way of converting a slice of structs into a slice of newtypes over that struct?", "body": "<p>If I have a slice of structs <code>&amp;[Foo]</code>, and I've defined a newtype for <code>Foo</code> called <code>NewFoo</code>, is there a zero-cost way to convert <code>&amp;[Foo]</code> to <code>&amp;[NewFoo]</code>?</p>\n\n<p>The best I've come up with is, which isn't zero-cost:</p>\n\n<pre><code>let _ = foos.iter().map(|foo| NewFoo(*foo)).collect::&lt;Vec&lt;NewFoo&gt;&gt;();\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1593021019, "post_id": 55080089, "comment_id": 110636428, "body": "<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 63, "user_id": 9322491, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-XvOLbgDJBEM/AAAAAAAAAAI/AAAAAAAAAhw/I48jRo-TkW4/photo.jpg?sz=128", "display_name": "Artsiom Shamsutdzinau", "link": "https://stackoverflow.com/users/9322491/artsiom-shamsutdzinau"}, "edited": false, "score": 0, "creation_date": 1552153108, "post_id": 55080135, "comment_id": 96906258, "body": "This is great I totally forgot about this. Thank you very much"}, {"owner": {"reputation": 9108, "user_id": 2148953, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/FeyHn.png?s=128&g=1", "display_name": "aran", "link": "https://stackoverflow.com/users/2148953/aran"}, "edited": false, "score": 0, "creation_date": 1552153326, "post_id": 55080135, "comment_id": 96906320, "body": "mark the answer as correct, it&#39;s benefficial for both! (and google search) : )"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1552165894, "post_id": 55080135, "comment_id": 96909677, "body": "Also note that you could change the type of <code>v</code> to <code>&amp;[i32]</code> (a <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html\" rel=\"nofollow noreferrer\">slice</a> of <code>i32</code>s) - that&#39;s more idiomatic in Rust than taking a reference to a <code>Vec</code>, as it makes the function more flexible. For example, it would allow you to pass in a subsection of a <code>Vec</code>, rather than always processing the entire thing."}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 9, "last_activity_date": 1593020983, "last_edit_date": 1593020983, "creation_date": 1552152983, "answer_id": 55080135, "question_id": 55080089, "link": "https://stackoverflow.com/questions/55080089/how-do-i-convert-an-i32-to-f64/55080135#55080135", "title": "How do I convert an &amp;i32 to f64?", "body": "<p><code>f64</code> only <a href=\"https://doc.rust-lang.org/std/primitive.f64.html#impl-From%3Ci32%3E\" rel=\"nofollow noreferrer\">implements <code>From</code> for <code>i32</code></a>, not <code>&amp;i32</code> (which is a reference to an <code>i32</code>). To get this to work, you will need to dereference <code>val</code>.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn mean(v: &amp;Vec&lt;i32&gt;) -&gt; f64 {\n    let mut sum = 0.0;\n    let mut count = 0.0;\n\n    for val in v {\n        sum += f64::from(*val);\n        count += 1.0;\n    }\n\n    sum / count\n}\n</code></pre>\n<p>The same applies if you try to do <code>val as f64</code>, and in fact, you get a much more helpful error message in that case:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0606]: casting `&amp;i32` as `f64` is invalid\n --&gt; src/main.rs:6:16\n  |\n6 |         sum += val as f64;\n  |                ---^^^^^^^\n  |                |\n  |                cannot cast `&amp;i32` as `f64`\n  |                help: dereference the expression: `*val`\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 23, "user_id": 2626594, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f3fd9930445ba394292d1d991874bc0?s=128&d=identicon&r=PG", "display_name": "Ender Fletcher", "link": "https://stackoverflow.com/users/2626594/ender-fletcher"}, "is_accepted": false, "score": 1, "last_activity_date": 1593021000, "last_edit_date": 1593021000, "creation_date": 1573423518, "answer_id": 58793370, "question_id": 55080089, "link": "https://stackoverflow.com/questions/55080089/how-do-i-convert-an-i32-to-f64/58793370#58793370", "title": "How do I convert an &amp;i32 to f64?", "body": "<p>You can dereference the variable with <code>*val as f64</code>.</p>\n<pre><code>fn mean(v: &amp;Vec&lt;i32&gt;) -&gt; f64 {\n    let mut sum = 0.0;\n    let mut count = 0.0;\n\n    for val in v {\n        sum += *val as f64;\n        count += 1.0;\n    }\n\n    sum / count\n}\n\nfn main() {\n    let v = vec![1, 2, 3, 4];\n\n    println!(&quot;The mean is {}&quot;, mean(&amp;v));\n}\n</code></pre>\n<p>Another way to do it</p>\n<pre><code>fn main() {\n    let v = vec![1, 2, 3, 4];\n    let mean: f64 = v.iter().map(|&amp;val| val as f64).sum::&lt;f64&gt;() / v.len() as f64;\n\n    println!(&quot;The mean is {}&quot;, mean);\n}\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 9322491, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-XvOLbgDJBEM/AAAAAAAAAAI/AAAAAAAAAhw/I48jRo-TkW4/photo.jpg?sz=128", "display_name": "Artsiom Shamsutdzinau", "link": "https://stackoverflow.com/users/9322491/artsiom-shamsutdzinau"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2856, "favorite_count": 0, "accepted_answer_id": 55080135, "answer_count": 2, "score": 3, "last_activity_date": 1593021000, "creation_date": 1552152739, "last_edit_date": 1593020958, "question_id": 55080089, "link": "https://stackoverflow.com/questions/55080089/how-do-i-convert-an-i32-to-f64", "title": "How do I convert an &amp;i32 to f64?", "body": "<p>I'm trying to solve <a href=\"https://doc.rust-lang.org/book/ch08-03-hash-maps.html\" rel=\"nofollow noreferrer\">an exercise at the end of this chapter in the Rust Book</a>.</p>\n<p>Here is a code sample:</p>\n<pre><code>fn mean(v: &amp;Vec&lt;i32&gt;) -&gt; f64 {\n    let mut sum = 0.0;\n    let mut count = 0.0;\n\n    for val in v {\n        sum += &amp;f64::from(val);\n        count += 1.0;\n    }\n\n    sum / count\n}\n\nfn main() {\n    let v = vec![1, 2, 3, 4];\n\n    println!(&quot;The mean is {}&quot;, mean(&amp;v));\n}\n</code></pre>\n<p>The error is:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `f64: std::convert::From&lt;&amp;i32&gt;` is not satisfied\n --&gt; src/main.rs:6:17\n  |\n6 |         sum += &amp;f64::from(val);\n  |                 ^^^^^^^^^ the trait `std::convert::From&lt;&amp;i32&gt;` is not implemented for `f64`\n  |\n  = help: the following implementations were found:\n            &lt;f64 as std::convert::From&lt;f32&gt;&gt;\n            &lt;f64 as std::convert::From&lt;i16&gt;&gt;\n            &lt;f64 as std::convert::From&lt;i32&gt;&gt;\n            &lt;f64 as std::convert::From&lt;i8&gt;&gt;\n          and 3 others\n  = note: required by `std::convert::From::from`\n</code></pre>\n<p>I also tried using the <code>as</code> keyword but it didn't help.</p>\n"}, {"tags": ["string", "rust", "borrowing"], "comments": [{"owner": {"reputation": 3727, "user_id": 500098, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d0f6607a133fa379486fca179ec92c27?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/500098/matthias"}, "edited": false, "score": 0, "creation_date": 1562522274, "post_id": 55079070, "comment_id": 100391365, "body": "It looks like since Rust 1.35.0 the <code>Into&lt;String&gt;</code> variant also works for <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#impl-From%3C%26%27_%20String%3E\" rel=\"nofollow noreferrer\"><code>&amp;String</code></a>."}, {"owner": {"reputation": 395, "user_id": 5228853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c57e75122e8bb0121f3daeb83454bdad?s=128&d=identicon&r=PG&f=1", "display_name": "Ringo Leese", "link": "https://stackoverflow.com/users/5228853/ringo-leese"}, "reply_to_user": {"reputation": 3727, "user_id": 500098, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d0f6607a133fa379486fca179ec92c27?s=128&d=identicon&r=PG", "display_name": "Matthias", "link": "https://stackoverflow.com/users/500098/matthias"}, "edited": false, "score": 0, "creation_date": 1562607366, "post_id": 55079070, "comment_id": 100420145, "body": "Yes, you&#39;re right, I&#39;ve testet it with the current 1.36 version of Rust."}], "answers": [{"comments": [{"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552147502, "post_id": 55079159, "comment_id": 96904612, "body": "@trentcl A <code>String</code> will not be copied, the ownership of it will be passed to the method unless you are using a reference."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552149164, "post_id": 55079159, "comment_id": 96905109, "body": "My mistake, my brain mashed up the body of the OP&#39;s example with the signature of yours."}, {"owner": {"reputation": 678, "user_id": 647151, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/7e5c476f7ed6fcbb67eee738e304f066?s=128&d=identicon&r=PG", "display_name": "malthe", "link": "https://stackoverflow.com/users/647151/malthe"}, "edited": false, "score": 0, "creation_date": 1577700378, "post_id": 55079159, "comment_id": 105227732, "body": "What if the function eventually needs an owned string rather than a reference?"}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "reply_to_user": {"reputation": 678, "user_id": 647151, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/7e5c476f7ed6fcbb67eee738e304f066?s=128&d=identicon&r=PG", "display_name": "malthe", "link": "https://stackoverflow.com/users/647151/malthe"}, "edited": false, "score": 1, "creation_date": 1577712184, "post_id": 55079159, "comment_id": 105232616, "body": "@malthe Personally I typically just use <code>stringlike.as_ref().to_string()</code>, as I like having the same signature regardless of whether I need an owned or borrowed string. I think that might be a bit inefficient with arguments that are already owned strings, so if you want to avoid that you can use other traits, like <code>S: Into&lt;String&gt;</code>."}], "tags": [], "owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "is_accepted": true, "score": 23, "last_activity_date": 1552147530, "last_edit_date": 1552147530, "creation_date": 1552147118, "answer_id": 55079159, "question_id": 55079070, "link": "https://stackoverflow.com/questions/55079070/how-to-accept-str-string-and-string-in-a-single-function/55079159#55079159", "title": "How to accept &amp;str, String and &amp;String in a single function?", "body": "<p>You can use the <a href=\"https://doc.rust-lang.org/std/convert/trait.AsRef.html\" rel=\"noreferrer\"><code>AsRef&lt;str&gt;</code></a> trait:</p>\n\n<pre><code>// will accept any object that implements AsRef&lt;str&gt;\nfn print&lt;S: AsRef&lt;str&gt;&gt;(stringlike: S) {\n    // call as_ref() to get a &amp;str\n    let str_ref = stringlike.as_ref();\n\n    println!(\"got: {:?}\", str_ref)\n}\n\nfn main() {\n    let a: &amp;str = \"str\";\n    let b: String = String::from(\"String\");\n    let c: &amp;String = &amp;b;\n\n    print(a);\n    print(c);\n    print(b);\n}\n</code></pre>\n\n<p>The <code>print</code> function will support any type that implements <code>AsRef&lt;str&gt;</code>, which includes <code>&amp;str</code>, <code>String</code> and <code>&amp;String</code>.</p>\n"}], "owner": {"reputation": 395, "user_id": 5228853, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c57e75122e8bb0121f3daeb83454bdad?s=128&d=identicon&r=PG&f=1", "display_name": "Ringo Leese", "link": "https://stackoverflow.com/users/5228853/ringo-leese"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3188, "favorite_count": 4, "accepted_answer_id": 55079159, "answer_count": 1, "score": 16, "last_activity_date": 1589916005, "creation_date": 1552146608, "last_edit_date": 1589916005, "question_id": 55079070, "link": "https://stackoverflow.com/questions/55079070/how-to-accept-str-string-and-string-in-a-single-function", "title": "How to accept &amp;str, String and &amp;String in a single function?", "body": "<p>I want to write a single function, that accepts a <code>&amp;str</code>, a <code>String</code> and a borrowed <code>&amp;String</code>. I've written the following 2 functions:</p>\n\n<pre><code>fn accept_str_and_ref_string(value: &amp;str) {\n    println!(\"value: {}\", value);\n}\n\nfn accept_str_and_string&lt;S: Into&lt;String&gt;&gt;(value: S) {\n    let string_value: String = value.into();\n    println!(\"string_value: {}\", string_value);\n}\n\nfn main() {\n    let str_foo = \"foo\";\n    let string_foo = String::from(\"foo\");\n\n    accept_str_and_ref_string(str_foo);\n    accept_str_and_ref_string(&amp;string_foo);\n\n    accept_str_and_string(str_foo);\n    accept_str_and_string(string_foo);\n}\n</code></pre>\n\n<p>Is it possible to implement one function so that I can do this:</p>\n\n<pre><code>accept_all_strings(str_foo);\naccept_all_strings(&amp;string_foo);\naccept_all_strings(string_foo);\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": false, "score": 1, "last_activity_date": 1552144672, "creation_date": 1552144672, "answer_id": 55078787, "question_id": 55078691, "link": "https://stackoverflow.com/questions/55078691/what-is-the-best-way-to-iterate-over-alternate-elements-of-a-vec-in-rust/55078787#55078787", "title": "What is the best way to iterate over alternate elements of a Vec in Rust?", "body": "<p>Use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.step_by\" rel=\"nofollow noreferrer\"><code>step_by</code></a>:    </p>\n\n<pre><code>let data = vec![1,2,3,4,5,6,7];\n\nfor x in data.iter().step_by(2) {\n    println!(\"{}\", x)\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>1\n3\n5\n7\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "is_accepted": true, "score": 3, "last_activity_date": 1552144680, "last_edit_date": 1592644375, "creation_date": 1552144680, "answer_id": 55078793, "question_id": 55078691, "link": "https://stackoverflow.com/questions/55078691/what-is-the-best-way-to-iterate-over-alternate-elements-of-a-vec-in-rust/55078793#55078793", "title": "What is the best way to iterate over alternate elements of a Vec in Rust?", "body": "<p>You should use the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.step_by\" rel=\"nofollow noreferrer\"><code>step_by</code></a> iterator method, which will jump in steps:</p>\n<pre><code>let vector: Vec&lt;usize&gt; = vec![1, 4, 9, 16, 25];\n\n// Prints even-indexed numbers from the Vec.\nfor item in vector.iter().step_by(2) {\n    println!(&quot;{:?}&quot;, item); // Prints 1, 9, and 25\n}\n</code></pre>\n<p>To start at a different index than <code>0</code>, combine this with <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.skip\" rel=\"nofollow noreferrer\"><code>skip</code></a>:</p>\n<pre><code>// Prints odd-indexed numbers from the Vec.\nfor item in vector.iter().skip(1).step_by(2) {\n    println!(&quot;{:?}&quot;, item); // Prints 4, 16\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;code=fn%20main()%20%7B%0A%20%20%20%20let%20vector%3A%20Vec%3Cusize%3E%20%3D%20vec!%5B1%2C%204%2C%209%2C%2016%2C%2025%5D%3B%0A%20%20%20%20%0A%20%20%20%20%2F%2F%20Prints%20even-indexed%20numbers%20from%20the%20Vec.%0A%20%20%20%20for%20item%20in%20vector.iter().step_by(2)%20%7B%0A%20%20%20%20%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20item)%3B%20%2F%2F%20Prints%201%2C%209%2C%20and%2025%0A%20%20%20%20%7D%0A%20%20%20%20%0A%20%20%20%20%2F%2F%20Prints%20odd-indexed%20numbers%20from%20the%20Vec.%0A%20%20%20%20for%20item%20in%20vector.iter().skip(1).step_by(2)%20%7B%0A%20%20%20%20%20%20%20%20println!(%22%7B%3A%3F%7D%22%2C%20item)%3B%20%2F%2F%20Prints%204%2C%2016%0A%20%20%20%20%7D%0A%7D\" rel=\"nofollow noreferrer\">(Rust playground link)</a></p>\n"}], "owner": {"reputation": 43, "user_id": 8863160, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e89431ef20705db05b7638d6402ad12?s=128&d=identicon&r=PG&f=1", "display_name": "CoffeeRylan", "link": "https://stackoverflow.com/users/8863160/coffeerylan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1066, "favorite_count": 0, "accepted_answer_id": 55078793, "answer_count": 2, "score": 4, "last_activity_date": 1552144680, "creation_date": 1552144083, "question_id": 55078691, "link": "https://stackoverflow.com/questions/55078691/what-is-the-best-way-to-iterate-over-alternate-elements-of-a-vec-in-rust", "title": "What is the best way to iterate over alternate elements of a Vec in Rust?", "body": "<p>I have a <code>Vec&lt;usize&gt;</code> and would like to iterate over all even-numbered elements in it. Basically I would like to understand the ideal Rust equivalent of the following C++ code:</p>\n\n<pre><code>const std::vector&lt;uint64_t&gt; vector{1, 4, 9, 16, 25};\n\nfor (uint64_t index = 0; index &lt; vector.size(); index += 2) {\n    std::cout &lt;&lt; vector[index] &lt;&lt; std::endl;\n}\n</code></pre>\n\n<hr>\n\n<p>This is what I've got so far with <code>enumerate</code> and <code>filter</code>:</p>\n\n<pre><code>let vector: Vec&lt;usize&gt; = vec![1, 4, 9, 16, 25];\n\n// Prints even-indexed numbers from the Vec.\ntype PredicateType = fn(&amp;(usize, &amp;usize)) -&gt; bool;\nlet predicate: PredicateType = |&amp;tuple| tuple.0 % 2 == 0;\nfor tuple in vector.iter().enumerate().filter(predicate) {\n    println!(\"{:?}\", tuple.1); // Prints 1, 9, and 25\n};\n</code></pre>\n\n<p>This feels a little complex. Is there a simpler way to do this? </p>\n\n<p>Also I see that a tuple is being constructed on every iteration and then discarded on every alternate iteration. This seems inefficient. Is there a way to do this without constructing an intermediate tuple?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1334, "user_id": 2179994, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rCFwO.jpg?s=128&g=1", "display_name": "jake77", "link": "https://stackoverflow.com/users/2179994/jake77"}, "edited": false, "score": 1, "creation_date": 1552518633, "post_id": 55078309, "comment_id": 97045401, "body": "Thank you, all is clear. I&#39;m obviously not the first to ask, but at the beginning of the curve one sometimes struggles to find the right keywords..."}], "tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": true, "score": 9, "last_activity_date": 1552141566, "creation_date": 1552141566, "answer_id": 55078309, "question_id": 55078271, "link": "https://stackoverflow.com/questions/55078271/underscore-in-rust-consider-using/55078309#55078309", "title": "underscore in Rust: &quot;consider using&quot;", "body": "<p>It's just a convention: Rust doesn't emit a warning if a variable whose name starts with an underscore is not used because <a href=\"https://stackoverflow.com/questions/48361537/why-do-underscore-prefixed-variables-exist\">sometimes</a> you may need a variable that won't be used anywhere else in your code.</p>\n"}], "owner": {"reputation": 1334, "user_id": 2179994, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rCFwO.jpg?s=128&g=1", "display_name": "jake77", "link": "https://stackoverflow.com/users/2179994/jake77"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 757, "favorite_count": 0, "accepted_answer_id": 55078309, "answer_count": 1, "score": 3, "last_activity_date": 1552141566, "creation_date": 1552141243, "question_id": 55078271, "link": "https://stackoverflow.com/questions/55078271/underscore-in-rust-consider-using", "title": "underscore in Rust: &quot;consider using&quot;", "body": "<p>Rust newbie here.\nWhen providing a parameter and leaving it unused in a function declaration (e.g. when learning Rust...) the compiler warns about the fact that the variable is unused in the scope, and proposes to consider putting an underline before it. Doing so, the warning disappears.</p>\n\n<pre><code>warning: unused variable: `y`\n--&gt; src/main.rs:23:29\n   |\n23 | fn another_function(x: i32, y: i32) {\n   |                             ^ help: consider using `_y` instead\n   |\n   = note: #[warn(unused_variables)] on by default\n</code></pre>\n\n<p>why? How is the variable treated differently then?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 1, "creation_date": 1552125087, "post_id": 55075846, "comment_id": 96898877, "body": "That&#39;s not the code that produced those errors. You must have the code in a text editor. So copy and paste it (after reducing it to a minimal, but complete example). Don&#39;t type it from memory."}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1552130183, "post_id": 55075846, "comment_id": 96900023, "body": "You&#39;re missing the return type in <code>get_name</code>. Also, if it&#39;s an internal structure and is not going to be exposed to the end user, making the fields public and dropping the getters altogether will be much easier."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1552132325, "post_id": 55075846, "comment_id": 96900536, "body": "Note also that it is not idiomatic to have a <code>get_</code> prefix in getter methods. (<a href=\"https://rust-lang-nursery.github.io/api-guidelines/naming.html#getter-names-follow-rust-convention-c-getter\" rel=\"nofollow noreferrer\">C-GETTER</a>)"}], "answers": [{"tags": [], "owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "is_accepted": false, "score": 3, "last_activity_date": 1552131060, "last_edit_date": 1552131060, "creation_date": 1552127611, "answer_id": 55076410, "question_id": 55075846, "link": "https://stackoverflow.com/questions/55075846/attempting-to-use-self-in-a-rust-program/55076410#55076410", "title": "Attempting to use &amp;self in a Rust program", "body": "<p>The struct from Rust By Example contains only <code>f64</code> fields. A <code>f64</code> implements <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\">Copy</a> trait, so the primitive has copy semantic instead of move semantic. </p>\n\n<p>The struct in your case contains <code>String</code> fields, these implement only <code>Clone</code> trait. So you have to make a clone or return a reference.</p>\n\n<p>Also you should see the <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html#whats-the-difference-between-copy-and-clone\" rel=\"nofollow noreferrer\">difference</a> between <code>Copy</code> and <code>Clone</code> and the <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html#implementors\" rel=\"nofollow noreferrer\">list</a> of <code>Copy</code> implementors </p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1552135582, "post_id": 55077411, "comment_id": 96901383, "body": "You should emphatize that <code>&amp;str</code> is <b>the</b> way to go"}, {"owner": {"reputation": 1538, "user_id": 1046184, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/49c6adaf420d8003e9c2e568f211f7ae?s=128&d=identicon&r=PG", "display_name": "Factor Three", "link": "https://stackoverflow.com/users/1046184/factor-three"}, "edited": false, "score": 0, "creation_date": 1552143465, "post_id": 55077411, "comment_id": 96903480, "body": "The book(s) I am reading in order to learn Rust did warn me about the little &quot;gotchas&quot; I could run into when dealing with borrowing and ownership. This looks like one of those. Ah, well: lesson learned..."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 6, "last_activity_date": 1552134930, "creation_date": 1552134930, "answer_id": 55077411, "question_id": 55075846, "link": "https://stackoverflow.com/questions/55075846/attempting-to-use-self-in-a-rust-program/55077411#55077411", "title": "Attempting to use &amp;self in a Rust program", "body": "<p>There's a few fundamentals you need to brush up on before getting frustrated with the language.</p>\n\n<p>Artemiy above gave you <em>the basic fix</em> .. <code>f64</code> implements <code>Copy</code> and as such, there's no ownership issues when you return them out of a function (they just get copied).</p>\n\n<p><code>String</code> however, does not implement <code>Copy</code> and therefore your code actually says \"move the <code>String</code> values out of the methods and transfer ownership to the caller\". The compiler doesn't let you do this because you've already borrowed the <code>FileInfo</code> struct by calling into the method.</p>\n\n<p>The two ways given above (clone or return a reference) are below:</p>\n\n<pre><code>// clone it:\npub fn get_name(&amp;self) -&gt; String {\n   self.name.clone() // &lt;-- call `clone()` on the `String` instance to return a new copy out\n}\n\n// return a reference:\npub fn get_path(&amp;self) -&gt; &amp;String {\n    &amp;self.path\n}\n</code></pre>\n\n<p>If you're unsure <em>why</em> the above works, then you'll need to consult the source material again to understand references and the differences between things that implement <code>Copy</code> and those that don't. </p>\n\n<p>You might also even benefit from understanding <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/deref-coercions.html\" rel=\"noreferrer\">Deref coercion</a>, because you can return a <code>&amp;str</code> reference too:</p>\n\n<pre><code>// Deref coercion to return a `&amp;str` reference\npub fn get_path(&amp;self) -&gt; &amp;str {\n    &amp;self.path\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b00e4df870b0b165f99481739513d8fe\" rel=\"noreferrer\">Here it is running in the Playground</a></p>\n"}], "owner": {"reputation": 1538, "user_id": 1046184, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/49c6adaf420d8003e9c2e568f211f7ae?s=128&d=identicon&r=PG", "display_name": "Factor Three", "link": "https://stackoverflow.com/users/1046184/factor-three"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "accepted_answer_id": 55077411, "answer_count": 2, "score": 0, "last_activity_date": 1552134930, "creation_date": 1552123512, "question_id": 55075846, "link": "https://stackoverflow.com/questions/55075846/attempting-to-use-self-in-a-rust-program", "title": "Attempting to use &amp;self in a Rust program", "body": "<p>I have a file called info.rs that contains a small test structure intended to represent some basic file information. The code below is learning code for using structs:</p>\n\n<pre><code>pub struct FileInfo {\n    name: String,\n    path: String,\n}\n\nimpl FileInfo {\n    pub fn new(aname: String,apath: String) {\n        FileInfo {\n            name: aname,\n            path: apath\n        }\n    }\n\n    pub fn get_name(&amp;self) {\n       self.name\n    }\n\n    pub fn get_path(&amp;self) -&gt; String {\n        self.path\n    }\n}\n</code></pre>\n\n<p>According to documentation (and several examples!), the &amp;self parameter used in the above functions refers to the calling structure, in this case the FileInfo struct. The intent is to allow my main.rs code to get access to the name and path:</p>\n\n<pre><code>mod info;\n\nuse info::FileInfo;\n\nfn main() {\n    println!(\"Listing files in current directory.\");\n\n    let fdat = FileInfo::new(String::from(\"File.txt\".),String::from(\"./File.txt\"));\n\n    println!(\"Name: {}\",fdat.get_name());\n    println!(\"Path: {}\",fdat.get_path());\n}\n</code></pre>\n\n<p>Unfortunately, compilation fails with the following messages:</p>\n\n<pre><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src\\info.rs:79:9\n   |\n79 |         self.name\n   |         ^^^^^^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src\\info.rs:83:9\n   |\n83 |         self.path\n   |         ^^^^^^^^^ cannot move out of borrowed content\n\nerror: aborting due to 2 previous errors\n</code></pre>\n\n<p>This makes no sense, because code from <a href=\"https://doc.rust-lang.org/rust-by-example/fn/methods.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/rust-by-example/fn/methods.html</a> accesses the &amp;self parameters in the same way that I am:</p>\n\n<pre><code>struct Point {\n   x: f64,\n   y: f64,\n}\n\n// Implementation block, all `Point` methods go in here\nimpl Point {\n    // This is a static method\n    // Static methods don't need to be called by an instance\n    // These methods are generally used as constructors\n    fn origin() -&gt; Point {\n        Point { x: 0.0, y: 0.0 }\n    }\n\n    // Another static method, taking two arguments:\n    fn new(x: f64, y: f64) -&gt; Point {\n        Point { x: x, y: y }\n    }\n}\n\nstruct Rectangle {\n    p1: Point,\n    p2: Point,\n}\n\nimpl Rectangle {\n    // This is an instance method\n    // `&amp;self` is sugar for `self: &amp;Self`, where `Self` is the type of the\n    // caller object. In this case `Self` = `Rectangle`\n    fn area(&amp;self) -&gt; f64 {\n        // `self` gives access to the struct fields via the dot operator\n        let Point { x: x1, y: y1 } = self.p1;\n        let Point { x: x2, y: y2 } = self.p2;\n\n        // `abs` is a `f64` method that returns the absolute value of the\n    // caller\n    ((x1 - x2) * (y1 - y2)).abs()\n}\n\n    fn perimeter(&amp;self) -&gt; f64 {\n        let Point { x: x1, y: y1 } = self.p1;\n        let Point { x: x2, y: y2 } = self.p2;\n\n        2.0 * ((x1 - x2).abs() + (y1 - y2).abs())\n    }\n\n    // This method requires the caller object to be mutable\n    // `&amp;mut self` desugars to `self: &amp;mut Self`\n    fn translate(&amp;mut self, x: f64, y: f64) {\n        self.p1.x += x;\n        self.p2.x += x;\n\n        self.p1.y += y;\n        self.p2.y += y;\n    }\n}\n</code></pre>\n\n<p>This code compiles, while mine does not. Why is this? </p>\n\n<p>Can someone tell me what I am missing here?</p>\n"}, {"tags": ["mysql", "rust", "mariadb", "rust-diesel"], "answers": [{"comments": [{"owner": {"reputation": 145, "user_id": 8874957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMxdN.png?s=128&g=1", "display_name": "the duck", "link": "https://stackoverflow.com/users/8874957/the-duck"}, "edited": false, "score": 0, "creation_date": 1552178473, "post_id": 55082790, "comment_id": 96912457, "body": "Thanks for your answer.  About raw sql, it&#39;s a debate. For me, it&#39;s the best way to ensure the SQL query is perfectly optimized. Of course, we have to make sure that all parameters are correctly escaped to avoid SQL injection."}], "tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": true, "score": 0, "last_activity_date": 1552172158, "creation_date": 1552172158, "answer_id": 55082790, "question_id": 55075636, "link": "https://stackoverflow.com/questions/55075636/i-cannot-make-binding-work-with-diesel-on-mariadb/55082790#55082790", "title": "I cannot make binding work with Diesel on MariaDB", "body": "<p>The <code>bind</code> method does not replace question mark, it appends the value to the end of the query. So it should look like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let query = sql(\"SELECT resa_comment FROM reservation WHERE resa_id = \");\n// ...\n\n</code></pre>\n\n<p>If you need to put value in the middle of the query, then you need to chain <code>bind</code> and <code>sql</code> calls, such as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>sql(\"SELECT resa_comment FROM reservation WHERE resa_id = \")\n    .bind::&lt;Integer, _&gt;(1286)\n    .sql(\" AND something &gt; \")\n    .bind::&lt;Integer, _&gt;(1);\n</code></pre>\n\n<p>But note that you should avoid writing raw sql if it is not necessary.</p>\n"}], "owner": {"reputation": 145, "user_id": 8874957, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMxdN.png?s=128&g=1", "display_name": "the duck", "link": "https://stackoverflow.com/users/8874957/the-duck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "accepted_answer_id": 55082790, "answer_count": 1, "score": 0, "last_activity_date": 1552172158, "creation_date": 1552121900, "question_id": 55075636, "link": "https://stackoverflow.com/questions/55075636/i-cannot-make-binding-work-with-diesel-on-mariadb", "title": "I cannot make binding work with Diesel on MariaDB", "body": "<p>I simply wanted to pass an argument to my sql query.</p>\n\n<pre><code>let query = sql(\"SELECT resa_comment FROM reservation WHERE resa_id = ? \");\n\nlet query2 = query.bind::&lt;Integer, _&gt;(1286);\n\nlet result : Result&lt;std::vec::Vec&lt;String&gt;, _&gt; = query2.load(&amp;connection);\ndbg!(result);\n</code></pre>\n\n<p>But the result is </p>\n\n<pre><code>[src/bin/show_posts.rs:36] result = Err(\n    DatabaseError(\n        __Unknown,\n        \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \\'?\\' at line 1\"\n    )\n)\n</code></pre>\n\n<p>The SQL query is correct because when I replace the \"?\" with a constant and remove the \"bind\", I get a correct result.</p>\n\n<p>I know that I can map the table to a Rust structure but my goal is to pass complex requests with arguments so I was testing Rust and Diesel. </p>\n\n<p>Is there something I missed ? Thanks.</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 11142, "user_id": 2229438, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/629fdde67cb23f9d3799635d89c7b250?s=128&d=identicon&r=PG", "display_name": "Grzegorz Piwowarek", "link": "https://stackoverflow.com/users/2229438/grzegorz-piwowarek"}, "edited": false, "score": 2, "creation_date": 1552121668, "post_id": 55075586, "comment_id": 96898159, "body": "Rust ownership works at compile time"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1552129202, "post_id": 55075586, "comment_id": 96899789, "body": "As the answer below suggests, the <a href=\"https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\" rel=\"nofollow noreferrer\">book</a> covers this particular subject pretty well. It is done at compile time, although it can be made into a run-time construct with some smart pointer types such (e.g. <a href=\"https://doc.rust-lang.org/std/rc/index.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a>). Your second question is too broad and not appropriate for the site. The <a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">official website</a> contains a few experiences from companies who started using Rust. You can also find so many others around the web in the form of blog posts."}], "answers": [{"tags": [], "owner": {"reputation": 391, "user_id": 4100453, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/vAyr8.jpg?s=128&g=1", "display_name": "Alexander Falk", "link": "https://stackoverflow.com/users/4100453/alexander-falk"}, "is_accepted": true, "score": 2, "last_activity_date": 1552122434, "creation_date": 1552122434, "answer_id": 55075713, "question_id": 55075586, "link": "https://stackoverflow.com/questions/55075586/understand-the-design-decision-of-ownership-in-rust/55075713#55075713", "title": "Understand the design decision of ownership in Rust", "body": "<p>Ownership in Rust is done at <a href=\"https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html\" rel=\"nofollow noreferrer\">compile-time</a>. You can see this as static analyzing at compile-time. It can be your best friend, but also your worst enemy. To develop with Rust, one needs patience. But you are also going to become a better programmer, because you are going to start thinking about dangling references, scopes, and memory allocations in general.</p>\n"}], "owner": {"reputation": 6631, "user_id": 1488533, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e063fcfd88a6af736427025f7ac14649?s=128&d=identicon&r=PG&f=1", "display_name": "lllllllllllll", "link": "https://stackoverflow.com/users/1488533/lllllllllllll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "closed_date": 1552779246, "accepted_answer_id": 55075713, "answer_count": 1, "score": -1, "last_activity_date": 1552122434, "creation_date": 1552121473, "last_edit_date": 1552121760, "question_id": 55075586, "link": "https://stackoverflow.com/questions/55075586/understand-the-design-decision-of-ownership-in-rust", "closed_reason": "Needs more focus", "title": "Understand the design decision of ownership in Rust", "body": "<p>I am trying to understand the usage of ownership in Rust. </p>\n\n<p>So from what I can understand, ownership is a runtime mechanism which enforces the programmers to think further and prevent some unexpected and unnoticed read-write hazards or so. </p>\n\n<p>But my question is that, this seems could be figured out by static analysis during compilation, why leave it to the runtime?</p>\n\n<p>Also, could anyone share some experiences on using it during more real-world programming? I am a bit hesitant about using this, largely.</p>\n"}, {"tags": ["rust", "smart-pointers"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552133404, "post_id": 55075458, "comment_id": 96900820, "body": "&quot;it seems that every raw pointers have been <i>automatically wrapped</i> with a smart pointer&quot; -- no, that sounds like there are implicit conversions happening all over the place. Raw pointers still exist, but they aren&#39;t ever used <i>automatically</i>, and most of their use cases have been <i>replaced</i> with some flavor of smart pointer, of which <code>Rc&lt;T&gt;</code>, <code>Box&lt;T&gt;</code> and <code>Ref&lt;T&gt;</code> are examples."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552133583, "post_id": 55075458, "comment_id": 96900877, "body": "&quot;why do we still need such <code>Box&lt;T&gt;</code>, <code>Rc&lt;T&gt;</code>, and <code>Ref&lt;T&gt;</code> stuff?&quot; -- I don&#39;t understand the question. Those <i>are</i> smart pointers. How else would you use them, other than &quot;explicitly&quot;? It sounds like you&#39;re asking in <a href=\"https://stackoverflow.com/questions/tagged/c%2b%2b\">c++</a>, &quot;I know what smart pointers are and how to use them, but I don&#39;t know what we need <code>unique_ptr</code> and <code>shared_ptr</code> for.&quot;"}, {"owner": {"reputation": 6631, "user_id": 1488533, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e063fcfd88a6af736427025f7ac14649?s=128&d=identicon&r=PG&f=1", "display_name": "lllllllllllll", "link": "https://stackoverflow.com/users/1488533/lllllllllllll"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552139282, "post_id": 55075458, "comment_id": 96902311, "body": "@trentcl No, what I means is that. Does compiler use these three to actually implement smart pointers?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1552140579, "post_id": 55075458, "comment_id": 96902680, "body": "Does the compiler use smart pointers to implement smart pointers? Sorry, I still don&#39;t understand. Smart pointers are implemented using raw pointers in Rust, just the same as in C++. You can look at the <a href=\"https://doc.rust-lang.org/src/alloc/rc.rs.html#276-279\" rel=\"nofollow noreferrer\">source code for <code>Rc&lt;T&gt;</code></a>, for example: it contains a <code>NonNull</code>, which is just a <a href=\"https://doc.rust-lang.org/src/core/ptr.rs.html#2890-2892\" rel=\"nofollow noreferrer\">wrapper</a> around a <code>*const</code> (raw) pointer. This is all in the standard library, not in the compiler itself."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1552145968, "post_id": 55075458, "comment_id": 96904195, "body": "If the syntax of the first article is confusing you, that&#39;s because it is very old. I wrote an answer to this effect. Leaving the previous comments in place in case I am wrong"}], "answers": [{"comments": [{"owner": {"reputation": 1309, "user_id": 5055251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f45f990533303b61a6b335198be63a1b?s=128&d=identicon&r=PG&f=1", "display_name": "kingluo", "link": "https://stackoverflow.com/users/5055251/kingluo"}, "edited": false, "score": 0, "creation_date": 1580645074, "post_id": 55075522, "comment_id": 106157968, "body": "The <code>T</code> should be allocated on stack first, and then pass to <code>Box::new()</code>, then if <code>T</code> is large, it does&#39;t help via <code>Box</code>?"}, {"owner": {"reputation": 26917, "user_id": 1892179, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/umfON.jpg?s=128&g=1", "display_name": "Theodoros Chatzigiannakis", "link": "https://stackoverflow.com/users/1892179/theodoros-chatzigiannakis"}, "reply_to_user": {"reputation": 1309, "user_id": 5055251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f45f990533303b61a6b335198be63a1b?s=128&d=identicon&r=PG&f=1", "display_name": "kingluo", "link": "https://stackoverflow.com/users/5055251/kingluo"}, "edited": false, "score": 0, "creation_date": 1580647697, "post_id": 55075522, "comment_id": 106158585, "body": "@kingluo I think you&#39;re right, that seems to be a mistake. I&#39;ve removed it and I&#39;ll try to remember why I wrote it like that when I authored the answer."}], "tags": [], "owner": {"reputation": 26917, "user_id": 1892179, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/umfON.jpg?s=128&g=1", "display_name": "Theodoros Chatzigiannakis", "link": "https://stackoverflow.com/users/1892179/theodoros-chatzigiannakis"}, "is_accepted": true, "score": 12, "last_activity_date": 1597350362, "last_edit_date": 1597350362, "creation_date": 1552120928, "answer_id": 55075522, "question_id": 55075458, "link": "https://stackoverflow.com/questions/55075458/understand-smart-pointers-in-rust/55075522#55075522", "title": "Understand smart pointers in Rust", "body": "<p>You can think about the difference between a <code>T</code> and a <code>Box&lt;T&gt;</code> as the difference between a statically allocated object and a dynamically allocated object (the latter being created via a <code>new</code> expression in C++ terms).</p>\n<p>In Rust, both <code>T</code> and <code>Box&lt;T&gt;</code> represent a variable that has <em>ownership</em> over the referent object (i.e. when the variable goes out of scope, the object will be destroyed, whether it was stored by value or by reference). On the contrary, <code>&amp;T</code> and <code>&amp;mut T</code> represent <em>borrowing</em> of the object (i.e. these variables are not responsible for destroying the object, and they cannot outlive the owner of the object).</p>\n<p>By default, you'd probably want to use <code>T</code>, but sometimes you might want (or have) to use <code>Box&lt;T&gt;</code>. For example, you would use a <code>Box&lt;T&gt;</code> if you want to own a <code>T</code> that's too large to be allocated in place. You would also use it when the object doesn't have a known size at all, which means that your only choice to store it or pass it around is through the &quot;pointer&quot; (the <code>Box&lt;T&gt;</code>).</p>\n<hr />\n<p>In Rust, an object is generally either mutable or aliased, but not both. If you have given out immutable references to an object, you normally need to wait until those references are over before you can mutate that object again.</p>\n<p>Additionally, Rust's immutability is transitive. If you receive an object immutably, it means that you have access to its contents (and the contents of those contents, and so on) also immutably.</p>\n<p>Normally, all of these things are enforced at compile time. This means that you catch errors faster, but you are limited to being able to express only what the compiler can prove statically.</p>\n<p>Like <code>T</code> and <code>Box&lt;T&gt;</code>, you may sometimes use <code>RefCell&lt;T&gt;</code>, which is another ownership type. But unlike <code>T</code> and <code>Box&lt;T&gt;</code>, the <code>RefCell&lt;T&gt;</code> enforces the borrow checking rules <em>at runtime</em> instead of compile time, meaning that sometimes you can do things with it that are safe but wouldn't pass the compiler's static borrow checker. The main example for this is getting a mutable reference to the interior of an object that was received immutably (which, under the statically enforced rules of Rust, would make the entire interior immutable).</p>\n<p>The types <code>Ref&lt;T&gt;</code> and <code>RefMut&lt;T&gt;</code> are the runtime-checked equivalents of <code>&amp;T</code> and <code>&amp;mut T</code> respectively.</p>\n<p>(EDIT: This whole thing is somewhat of a lie. <code>&amp;mut</code> really means &quot;unique borrow&quot; and <code>&amp;</code> means &quot;non-unique borrow&quot;. Certain types, like mutexes, can be non-uniquely but still mutably borrowed, because otherwise they would be useless.)</p>\n<hr />\n<p>Rust's ownership model tries to push you to write programs in which objects' lifetimes are known at compile time. This works well in certain scenarios, but makes other scenarios difficult or impossible to express.</p>\n<p><code>Rc&lt;T&gt;</code> and its atomic sibling <code>Arc&lt;T&gt;</code> are reference-counting wrappers of <code>T</code>. They offer you an alternative to the ownership model.</p>\n<p>They are useful when you want to use and properly dispose an object, but it is not easy (or possible) to determine, at the moment you're writing the code, which specific variable should be the owner of that object (and therefore should take care of disposing it). Much like in C++, this means that there is no single owner of the object and that the object will be disposed by the last reference-counting wrapper that points to it.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1552145902, "creation_date": 1552145902, "answer_id": 55078960, "question_id": 55075458, "link": "https://stackoverflow.com/questions/55075458/understand-smart-pointers-in-rust/55078960#55078960", "title": "Understand smart pointers in Rust", "body": "<p>The article you linked uses outdated syntax. Certain smart pointers used to have special names and associated syntax that has been removed since some time before Rust 1.0:</p>\n\n<ul>\n<li><code>Box&lt;T&gt;</code> replaced <code>~T</code> (\"owned pointers\")</li>\n<li><code>Rc&lt;T&gt;</code> replaced <code>@T</code> (\"managed pointers\")</li>\n</ul>\n\n<p>Because the Internet never forgets, you can still find pre-1.0 documentation and articles (such as the one you linked) that use the old syntax. Check the date of the article: if it's before May 2015, you're dealing with an early, unstable Rust.</p>\n"}], "owner": {"reputation": 6631, "user_id": 1488533, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e063fcfd88a6af736427025f7ac14649?s=128&d=identicon&r=PG&f=1", "display_name": "lllllllllllll", "link": "https://stackoverflow.com/users/1488533/lllllllllllll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2968, "favorite_count": 0, "accepted_answer_id": 55075522, "answer_count": 2, "score": 3, "last_activity_date": 1597350362, "creation_date": 1552120410, "question_id": 55075458, "link": "https://stackoverflow.com/questions/55075458/understand-smart-pointers-in-rust", "title": "Understand smart pointers in Rust", "body": "<p>I am a newbie to Rust and writing to understand the \"Smart pointers\" in Rust. I have basic understanding of how smart pointers works in C++ and has been using it for memory management since a few years ago. But to my very much surprise, Rust also provides such utility <strong>explicitly</strong>. </p>\n\n<p>Because from a tutorial here (<a href=\"https://pcwalton.github.io/2013/03/18/an-overview-of-memory-management-in-rust.html\" rel=\"nofollow noreferrer\">https://pcwalton.github.io/2013/03/18/an-overview-of-memory-management-in-rust.html</a>), it seems that every raw pointers have been automatically wrapped with a smart pointer, which seems very reasonable. Then why do we still need such <code>Box&lt;T&gt;</code>, <code>Rc&lt;T&gt;</code>, and <code>Ref&lt;T&gt;</code> stuff? According to this specification: <a href=\"https://doc.rust-lang.org/book/ch15-00-smart-pointers.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch15-00-smart-pointers.html</a></p>\n\n<p>Any comments will be apprecicated a lot. Thanks.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 89, "user_id": 6684915, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MaDqT.png?s=128&g=1", "display_name": "skypitcher", "link": "https://stackoverflow.com/users/6684915/skypitcher"}, "edited": false, "score": 0, "creation_date": 1552141048, "post_id": 55076271, "comment_id": 96902814, "body": "well looks awesome"}], "tags": [], "owner": {"reputation": 1324, "user_id": 6800156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/144bd2330b7c506ab60c6f9e68250fa0?s=128&d=identicon&r=PG&f=1", "display_name": "Artemiy Rodionov", "link": "https://stackoverflow.com/users/6800156/artemiy-rodionov"}, "is_accepted": true, "score": 1, "last_activity_date": 1552126595, "creation_date": 1552126595, "answer_id": 55076271, "question_id": 55075132, "link": "https://stackoverflow.com/questions/55075132/how-to-repeat-or-concat-two-slice-n-times-in-one-line-via-adapters/55076271#55076271", "title": "How to repeat or concat two slice n times in one line via adapters?", "body": "<p><a href=\"https://doc.rust-lang.org/core/iter/fn.repeat.html\" rel=\"nofollow noreferrer\">std::iter::repeat</a> might help</p>\n\n<pre><code>fn mutiply_bytes(buf_in: &amp;[u8], mul: usize) -&gt; Vec&lt;u8&gt; {\n    std::iter::repeat(buf_in)\n        .take(mul)\n        .flatten()\n        .cloned()\n        .collect::&lt;Vec&lt;u8&gt;&gt;()\n}\n</code></pre>\n"}], "owner": {"reputation": 89, "user_id": 6684915, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MaDqT.png?s=128&g=1", "display_name": "skypitcher", "link": "https://stackoverflow.com/users/6684915/skypitcher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "accepted_answer_id": 55076271, "answer_count": 1, "score": 0, "last_activity_date": 1552126595, "creation_date": 1552117248, "question_id": 55075132, "link": "https://stackoverflow.com/questions/55075132/how-to-repeat-or-concat-two-slice-n-times-in-one-line-via-adapters", "title": "How to repeat or concat two slice n times in one line via adapters?", "body": "<p>Can I do the same work by using iter adapters?</p>\n\n<pre><code>fn mutiply_bytes(buf_in: &amp;[u8], mul: usize) -&gt; Vec&lt;u8&gt; {\n    let length = buf_in.len() * mul;\n    let mut buf_out = Vec::with_capacity(length);\n    for i in 0..length{\n        buf_out.push(buf_in[i%buf_in.len()]);\n    }\n    buf_out\n}\n</code></pre>\n"}, {"tags": ["error-handling", "rust", "refactoring", "rust-cargo"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552150728, "post_id": 55075033, "comment_id": 96905542, "body": "There isn&#39;t a concrete question here other than asking us to review your code. This might be a better fit for Code Review SE."}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552242444, "post_id": 55075033, "comment_id": 96926530, "body": "@E_net4 Sorry for my seemingly toxic behavior. I had never used that part of SE before, I&#39;ll make sure to check it out for future inquiries."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1552245054, "post_id": 55075033, "comment_id": 96927309, "body": "Don&#39;t worry, there was nothing toxic in your behavior. :) I was simply concerned about the question&#39;s fitness on this site."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1579679973, "post_id": 55075033, "comment_id": 105842304, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/48841367/how-do-i-perform-iterator-computations-over-iterators-of-results-without-collect\">How do I perform iterator computations over iterators of Results without collecting to a temporary vector?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "edited": false, "score": 0, "creation_date": 1552245054, "post_id": 55079870, "comment_id": 96927308, "body": "This works for most cases, except for the case when all series products would produce 0. For instance, for lsp(&quot;99099&quot;) it would produce Ok(81) instead of Ok(0), that&#39;s because the state transition would be: [9] -&gt; [9, 9] -&gt; [0, 9, 9] -&gt; [9, 0, 9] -&gt; [9, 9, 0]."}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "edited": false, "score": 0, "creation_date": 1552245203, "post_id": 55079870, "comment_id": 96927356, "body": "The solution would be to pad the first n states (the no. of states before the state.len() == span) with zeros, thus their sp would always be 0 and will not be counted into lsp."}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "edited": false, "score": 0, "creation_date": 1552245243, "post_id": 55079870, "comment_id": 96927367, "body": "As follows: <code>if state.len() == span {                         state.pop_back();                     } else {                         for _i in 1..span {                             state.push_front(0u8);                         }                     }</code>"}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "edited": false, "score": 0, "creation_date": 1552245560, "post_id": 55079870, "comment_id": 96927472, "body": "Also, naming the parsed u8 digits as chars is very misleading :)"}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "edited": false, "score": 0, "creation_date": 1552245586, "post_id": 55079870, "comment_id": 96927485, "body": "Other than that, great job +1"}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "edited": false, "score": 0, "creation_date": 1552246652, "post_id": 55079870, "comment_id": 96927850, "body": "*correction: I meant lsp(&quot;99099&quot;, 3) for the example I gave."}, {"owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "reply_to_user": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "edited": false, "score": 1, "creation_date": 1552310378, "post_id": 55079870, "comment_id": 96948224, "body": "Yep correct, I&#39;ll change the answer to reflect both the corner case and the name."}], "tags": [], "owner": {"reputation": 101, "user_id": 11047410, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e90c9c10d22c03c5e209a238a4ca7335?s=128&d=identicon&r=PG&f=1", "display_name": "darkwisebear", "link": "https://stackoverflow.com/users/11047410/darkwisebear"}, "is_accepted": true, "score": 1, "last_activity_date": 1552310478, "last_edit_date": 1552310478, "creation_date": 1552151363, "answer_id": 55079870, "question_id": 55075033, "link": "https://stackoverflow.com/questions/55075033/i-need-help-refactoring-for-error-handling-in-rust/55079870#55079870", "title": "I need help refactoring for error handling in Rust", "body": "<p>Not sure if this is the most elegant way, but I've given it a try, hope the new version is equivalent to the given program.</p>\n\n<p>Two things will be needed in this case: First, we need a data structure that provides the sliding window \"on the fly\" and second a function that ends the iteration early if the conversion yields an error.</p>\n\n<p>For the former I've chosen a VecDeque since <code>span</code> is dynamic. For the latter there is a function called <a href=\"https://docs.rs/itertools/0.8.0/itertools/structs/struct.ProcessResults.html\" rel=\"nofollow noreferrer\"><code>process_results</code></a> in the itertools crate. It converts an iterator over results to an iterator over the unwrapped type and stops iteration if an error is encountered.</p>\n\n<p>I've also slightly changed the signature of <code>sp</code> to accept any iterator over u8.</p>\n\n<p>This is the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::VecDeque;\nuse itertools::process_results;\n\n#[derive(Debug, PartialEq)]\npub enum Error {\n    SpanTooLong,\n    InvalidDigit(char),\n}\n\nfn sp(w: impl Iterator&lt;Item=u8&gt;) -&gt; u64 {\n    w.fold(1u64, |acc, d| acc * u64::from(d))\n}\n\npub fn lsp(string_digits: &amp;str, span: usize) -&gt; Result&lt;u64, Error&gt; {\n    if span &gt; string_digits.len() {\n        return Err(Error::SpanTooLong);\n    } else if span == 0 || string_digits.is_empty() {\n        return Ok(1);\n    }\n\n    let mut init_state = VecDeque::new();\n    init_state.resize(span, 0);\n\n    process_results(string_digits.chars()\n        .map(|ch| ch.to_digit(10)\n            .map(|d| d as u8)\n            .ok_or(Error::InvalidDigit(ch))),\n        |digits|\n            digits.scan(init_state, |state, digit| {\n                state.pop_back();\n                state.push_front(digit);\n                Some(sp(state.iter().cloned()))\n            })\n            .max()\n            .unwrap()\n    )\n}\n</code></pre>\n"}], "owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 55079870, "answer_count": 1, "score": -1, "last_activity_date": 1552310478, "creation_date": 1552116393, "question_id": 55075033, "link": "https://stackoverflow.com/questions/55075033/i-need-help-refactoring-for-error-handling-in-rust", "title": "I need help refactoring for error handling in Rust", "body": "<p>I would like to refactor this Rust code for calculating the largest series product and make it as efficient and elegant as possible. I feel that</p>\n\n<pre><code>lsp(string_digits: &amp;str, span: usize) -&gt; Result&lt;u64, Error&gt;\n</code></pre>\n\n<p>could be done in a way to make it much more elegant than it is right now. Could lsp be implemented with only one series of chained iterator methods?</p>\n\n<pre><code>#[derive(Debug, PartialEq)]\npub enum Error {\n    SpanTooLong,\n    InvalidDigit(char),\n}\n\nfn sp(w: &amp;[u8]) -&gt; u64 {\n    w.iter().fold(1u64, |acc, &amp;d| acc * u64::from(d))\n}\n\npub fn lsp(string_digits: &amp;str, span: usize) -&gt; Result&lt;u64, Error&gt; {\n    let invalid_chars = string_digits\n        .chars()\n        .filter(|ch| !ch.is_numeric())\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n    if span &gt; string_digits.len() {\n        return Err(Error::SpanTooLong);\n    } else if !invalid_chars.is_empty() {\n        return Err(Error::InvalidDigit(invalid_chars[0]));\n    } else if span == 0 || string_digits.is_empty() {\n        return Ok(1);\n    }\n\n    let vec_of_u8_digits = string_digits\n        .chars()\n        .map(|ch| ch.to_digit(10).unwrap() as u8)\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n    let lsp = vec_of_u8_digits\n        .windows(span)\n        .max_by(|&amp;w1, &amp;w2| sp(w1).cmp(&amp;sp(w2)))\n        .unwrap();\n    Ok(sp(lsp))\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1552094709, "post_id": 55072976, "comment_id": 96893835, "body": "Would you be able to show functional examples of the trait approach you&#39;ve tried so far, so we can understand the issues you had? It&#39;ll be a lot easier than us trying to start from scratch."}, {"owner": {"reputation": 85, "user_id": 1730004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/e1Ltb.jpg?s=128&g=1", "display_name": "Josh", "link": "https://stackoverflow.com/users/1730004/josh"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1552095991, "post_id": 55072976, "comment_id": 96894022, "body": "Yes, I have added the main implementation I had before this one!"}, {"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 0, "creation_date": 1552099948, "post_id": 55072976, "comment_id": 96894607, "body": "Perhaps you could just store a function pointer <code>fn(&amp;Ray, Arc&lt;Shape&gt;) -&gt; Vec&lt;Intersection&gt;</code> in your Shape. I believe <code>fn</code> is <code>Clone + Send</code>. It&#39;s essentially what you&#39;re already doing with dynamic dispatch on empty structs."}, {"owner": {"reputation": 85, "user_id": 1730004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/e1Ltb.jpg?s=128&g=1", "display_name": "Josh", "link": "https://stackoverflow.com/users/1730004/josh"}, "edited": false, "score": 0, "creation_date": 1552112237, "post_id": 55072976, "comment_id": 96896439, "body": "That is a very interesting concept that I hadn&#39;t thought about, I will give it a shot and report back!"}, {"owner": {"reputation": 6538, "user_id": 430418, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/e92dbe16dbf6d5938bd97d561ee7dde4?s=128&d=identicon&r=PG", "display_name": "schmijos", "link": "https://stackoverflow.com/users/430418/schmijos"}, "edited": false, "score": 0, "creation_date": 1608496396, "post_id": 55072976, "comment_id": 115595924, "body": "Ha, I&#39;m there as well now! But a bit less advanced. Struggling with how to extract a shape out of my spheres."}], "answers": [{"tags": [], "owner": {"reputation": 6538, "user_id": 430418, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/e92dbe16dbf6d5938bd97d561ee7dde4?s=128&d=identicon&r=PG", "display_name": "schmijos", "link": "https://stackoverflow.com/users/430418/schmijos"}, "is_accepted": false, "score": 0, "last_activity_date": 1608674785, "creation_date": 1608674785, "answer_id": 65416407, "question_id": 55072976, "link": "https://stackoverflow.com/questions/55072976/idiomatic-way-to-structure-rust-trait/65416407#65416407", "title": "Idiomatic way to structure Rust trait", "body": "<p>I'm also working on &quot;The Ray Tracer Challenge&quot;, a bit further behind than you though. I have no concurrency in mind. I now try to follow the idea of the <a href=\"https://aframe.io/docs/1.1.0/introduction/entity-component-system.html\" rel=\"nofollow noreferrer\"><em>A-Frame</em> <em>ECS</em></a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Primitive {}\n\npub struct Shape&lt;T: Primitive&gt; {\n    pub transformation: M4x4,\n    pub material: Material,\n    pub primitive: T,\n}\n\npub struct Sphere;\nimpl Primitive for Sphere {}\n</code></pre>\n"}], "owner": {"reputation": 85, "user_id": 1730004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/e1Ltb.jpg?s=128&g=1", "display_name": "Josh", "link": "https://stackoverflow.com/users/1730004/josh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 125, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1608674785, "creation_date": 1552093278, "last_edit_date": 1552096188, "question_id": 55072976, "link": "https://stackoverflow.com/questions/55072976/idiomatic-way-to-structure-rust-trait", "title": "Idiomatic way to structure Rust trait", "body": "<p>I have been writing a Ray Caster in Rust following \"The Ray Tracer Challenge\", and I've been having a hard time figuring out the proper way to implement polymorphism in Rust. My priorities are that the object can be used in a multi-threaded program, and that seems to be the main problem.</p>\n\n<p>I have two cases on this, but I'll focus on one: a shape. There are different kinds of shapes (sticking with the <code>able</code> suffix I originally called my trait <code>Intersectable</code>). Here was a working trait object implementation, but it didn't work with multi-threading:</p>\n\n<pre><code>#[derive(Debug)]\npub struct Shape {\n    pub parent: Option&lt;Arc&lt;Shape&gt;&gt;,\n    pub transform: Matrix4,\n    pub material: Material,\n    pub intersectable: Box&lt;Intersectable&gt;,\n}\npub trait Intersectable: Debug + IntersectableClone {\n    fn local_intersect(&amp;self, ray: &amp;Ray, object: Arc&lt;Shape&gt;) -&gt; Vec&lt;Intersection&gt;;\n}\n\npub trait IntersectableClone {\n    fn clone_box(&amp;self) -&gt; Box&lt;Intersectable&gt;;\n}\n\nimpl&lt;T&gt; IntersectableClone for T\nwhere\n    T: 'static + Intersectable + Clone,\n{\n    fn clone_box(&amp;self) -&gt; Box&lt;Intersectable&gt; {\n        Box::new(self.clone())\n    }\n}\n\nimpl Clone for Box&lt;Intersectable&gt; {\n    fn clone(&amp;self) -&gt; Box&lt;Intersectable&gt; {\n        self.clone_box()\n    }\n}\n\n#[derive(Clone, Debug)]\npub struct Sphere {}\n\nimpl Intersectable for Sphere {\n    fn local_intersect(&amp;self, ray: &amp;Ray, object: Arc&lt;Shape&gt;) -&gt; Vec&lt;Intersection&gt; {\n        ...sphere specific code\n    }\n}\n\n#[derive(Clone, Debug)]\npub struct Plane {}\n\nimpl Intersectable for Plane {\n    fn local_intersect(&amp;self, ray: &amp;Ray, object: Arc&lt;Shape&gt;) -&gt; Vec&lt;Intersection&gt; {\n        ...plane specific code\n    }\n}\n\n</code></pre>\n\n<p>As a pure struct, with no official polymorphism, I've written a kind of static dispatch that looks like this:</p>\n\n<pre><code>#[derive(Debug, Clone)]\npub enum IntersectableType {\n    Sphere,\n    Plane,\n}\n\n#[derive(Debug, Clone)]\npub struct Intersectable {\n    intersectable_type: IntersectableType,\n}\n\nimpl Intersectable {\n    pub fn local_intersect(&amp;self, ray: &amp;Ray, object: Arc&lt;Shape&gt;) -&gt; Vec&lt;Intersection&gt; {\n        match self.intersectable_type {\n            IntersectableType::Sphere =&gt; self.local_intersect_sphere(ray, object),\n            IntersectableType::Plane =&gt; self.local_intersect_plane(ray, object),\n            _ =&gt; Vec::new(),\n        }\n    }\n\n    fn local_intersect_sphere(&amp;self, ray: &amp;Ray, object: Arc&lt;Shape&gt;) -&gt; Vec&lt;Intersection&gt; {\n        ...sphere specific code\n    }\n\n    fn local_intersect_plane(&amp;self, ray: &amp;Ray, object: Arc&lt;Shape&gt;) -&gt; Vec&lt;Intersection&gt; {\n        ...plane specific implementation\n    }\n}\n</code></pre>\n\n<p>This works great, but it feels very non-Rusty. I've hit a few problems with using other implementations:\n- Using <code>Box&lt;Intersectable&gt;</code> (when it was a Trait, not a struct), is difficult to clone (I copied <a href=\"https://stackoverflow.com/questions/30353462/how-to-clone-a-struct-storing-a-boxed-trait-object\">How to clone a struct storing a boxed trait object?</a> but didn't love having to use 'static, since that made concurrency impossible).\n- Using <code>Arc&lt;Intersectable&gt;</code> seemed to have the same problems as <code>Box</code>, though maybe there is a way to make that work.</p>\n\n<p>Is there a way to do this in Rust that allows me to take advantage of concurrency and not write manual static dispatch like this?</p>\n"}, {"tags": ["linux", "rust", "centos", "rhel", "rust-cargo"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1552081942, "post_id": 55071283, "comment_id": 96890611, "body": "Did you check that the script actually puts anything onto your <code>$PATH</code>? It might use <code>~&#47;.local&#47;bin</code> or some other non-standard location for binaries."}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1552082145, "post_id": 55071283, "comment_id": 96890696, "body": "<a href=\"https://www.rust-lang.org/tools/install\" rel=\"nofollow noreferrer\">This</a> says it puts binaries into <code>~&#47;.cargo&#47;bin</code>. Is it on your <code>$PATH</code>?"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1552082370, "post_id": 55071283, "comment_id": 96890807, "body": "Put <code>source ~&#47;.cargo&#47;env</code> to your <code>~&#47;.bash_profile</code>. It prepends <code>~&#47;.cargo&#47;bin</code> to your <code>$PATH</code>."}], "answers": [{"comments": [{"owner": {"reputation": 8627, "user_id": 5285068, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/8967c033e617a2fb6f7d8fd7b5a12eb5?s=128&d=identicon&r=PG&f=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/5285068/joe"}, "edited": false, "score": 0, "creation_date": 1552234186, "post_id": 55072245, "comment_id": 96923901, "body": "<code>No package rust-toolset-7 available.</code>"}, {"owner": {"reputation": 31, "user_id": 11173402, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fba12f0269f437864500bbdcd4007c72?s=128&d=identicon&r=PG&f=1", "display_name": "Sandeep Kumar Kar", "link": "https://stackoverflow.com/users/11173402/sandeep-kumar-kar"}, "reply_to_user": {"reputation": 8627, "user_id": 5285068, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/8967c033e617a2fb6f7d8fd7b5a12eb5?s=128&d=identicon&r=PG&f=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/5285068/joe"}, "edited": false, "score": 0, "creation_date": 1552241767, "post_id": 55072245, "comment_id": 96926345, "body": "Please enable the redhat developer tool by using subscription manager"}], "tags": [], "owner": {"reputation": 31, "user_id": 11173402, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fba12f0269f437864500bbdcd4007c72?s=128&d=identicon&r=PG&f=1", "display_name": "Sandeep Kumar Kar", "link": "https://stackoverflow.com/users/11173402/sandeep-kumar-kar"}, "is_accepted": false, "score": 0, "last_activity_date": 1552241851, "last_edit_date": 1552241851, "creation_date": 1552086539, "answer_id": 55072245, "question_id": 55071283, "link": "https://stackoverflow.com/questions/55071283/how-to-install-cargo-on-a-rhel-linux-server/55072245#55072245", "title": "How to install Cargo on a RHEL Linux server?", "body": "<ol>\n<li><p>First enable the <code>rhel-7-variant-devtools-rpms</code> repository</p>\n\n<p><code>subscription-manager repos --enable rhel-7-varient-devtools-rpms</code></p>\n\n<blockquote>\n  <p>Replace <code>variant</code> with the Red Hat Enterprise Linux system variant (<code>server</code> or <code>workstation</code>)</p>\n</blockquote></li>\n<li><p>Enable the <code>rhel-variant-rhscl-7-rpms</code> repository:</p>\n\n<p><code>subscription-manager repos --enable rhel-variant-rhscl-7-rpms</code></p></li>\n<li><p>Add the Red Hat Developer Tools key to your system:</p>\n\n<p><code>cd /etc/pki/rpm-gpg</code></p>\n\n<p><code>wget -O RPM-GPG-KEY-redhat-devel https://www.redhat.com/security/data/a5787476.txt</code></p>\n\n<p><code>rpm --import RPM-GPG-KEY-redhat-devel</code></p>\n\n<p>Once the subscription is attached to the system and repositories enabled, you can install Red Hat Rust Toolset</p></li>\n<li><p>Then install <code>rust-toolset-7</code></p>\n\n<p><code>yum install rust-toolset-7</code></p>\n\n<p>Cargo is provided by the <code>rust-toolset-7-cargo</code> package and is automatically installed with the <code>rust-toolset-7</code> package.</p></li>\n</ol>\n"}], "owner": {"reputation": 8627, "user_id": 5285068, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/8967c033e617a2fb6f7d8fd7b5a12eb5?s=128&d=identicon&r=PG&f=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/5285068/joe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1500, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1552241851, "creation_date": 1552080680, "last_edit_date": 1552241252, "question_id": 55071283, "link": "https://stackoverflow.com/questions/55071283/how-to-install-cargo-on-a-rhel-linux-server", "title": "How to install Cargo on a RHEL Linux server?", "body": "<p>I tried installing Cargo on a RHEL server with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>curl https://sh.rustup.rs -sSf | sh\n</code></pre>\n\n<p>but after finishing, I get the response:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo\n-bash: cargo: command not found\n</code></pre>\n\n<p>Is there a different way to install?</p>\n"}, {"tags": ["module", "compiler-errors", "rust"], "comments": [{"owner": {"reputation": 277, "user_id": 3609976, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/daa3e65bc033fcbde9face45fa26ceba?s=128&d=identicon&r=PG&f=1", "display_name": "onlycparra", "link": "https://stackoverflow.com/users/3609976/onlycparra"}, "edited": false, "score": 0, "creation_date": 1552340364, "post_id": 55069391, "comment_id": 96964371, "body": "It certainly is a duplicate, I didn&#39;t catch it before. What should I do with my question? Delete it?"}], "answers": [{"tags": [], "owner": {"reputation": 277, "user_id": 3609976, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/daa3e65bc033fcbde9face45fa26ceba?s=128&d=identicon&r=PG&f=1", "display_name": "onlycparra", "link": "https://stackoverflow.com/users/3609976/onlycparra"}, "is_accepted": false, "score": 1, "last_activity_date": 1552071864, "last_edit_date": 1552071864, "creation_date": 1552071542, "answer_id": 55069392, "question_id": 55069391, "link": "https://stackoverflow.com/questions/55069391/how-to-split-the-code-in-modules-in-rust/55069392#55069392", "title": "How to split the code in modules in Rust?", "body": "<p>When you have everything in one file, like this:</p>\n\n<p>main.rs</p>\n\n<pre><code>pub mod m {\n    pub struct St {\n        a:i32,\n        b:i32,\n    }\n    impl St {\n        pub fn new() -&gt; St{\n            println!(\"New St!\");\n            St {\n                a: 12,\n                b: 13,\n            }\n        }\n    }\n}\n\nmod m;\nfn main() {\n  let st_0 = m::St::new();\n}\n</code></pre>\n\n<p>you wrap the module with the</p>\n\n<pre><code>pub mod mode_name {\n    //code...\n}\n</code></pre>\n\n<p>Once you put the module in another file, <strong>that wrapping goes away</strong>. <a href=\"https://doc.rust-lang.org/book/ch07-02-modules-and-use-to-control-scope-and-privacy.html#separating-modules-into-different-files\" rel=\"nofollow noreferrer\">The Rust book</a>, shows it, but if you don't look carefully <strike>or if you are programming drunk</strike>, you may get confused with the <code>pub mod instrument {...}</code> of the nested module.</p>\n\n<p>So m.rs has to look like this:</p>\n\n<pre><code>pub struct St {\n    a:i32,\n    b:i32,\n}\nimpl St {\n    pub fn new() -&gt; St{\n        println!(\"New St!\");\n        St {\n            a: 12,\n            b: 13,\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 277, "user_id": 3609976, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/daa3e65bc033fcbde9face45fa26ceba?s=128&d=identicon&r=PG&f=1", "display_name": "onlycparra", "link": "https://stackoverflow.com/users/3609976/onlycparra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "closed_date": 1552138279, "answer_count": 1, "score": 1, "last_activity_date": 1552071864, "creation_date": 1552071542, "question_id": 55069391, "link": "https://stackoverflow.com/questions/55069391/how-to-split-the-code-in-modules-in-rust", "closed_reason": "Duplicate", "title": "How to split the code in modules in Rust?", "body": "<p>I am reading the <a href=\"https://doc.rust-lang.org/book/ch07-02-modules-and-use-to-control-scope-and-privacy.html#separating-modules-into-different-files\" rel=\"nofollow noreferrer\">Rust Book</a>, I am in the chapter 7.2, but I must be missing something, because I cannot organize my code in modules, the compiler (rustc 1.32.0) keeps giving me errors.</p>\n\n<h2>What I have read</h2>\n\n<ul>\n<li>I read <code>rustc --explain E0433</code>, which is the advice of the compiler, but I still cannot solve it.</li>\n<li>I checked <a href=\"https://doc.rust-lang.org/stable/rust-by-example/mod/split.html\" rel=\"nofollow noreferrer\">Rust by examples</a>, and it seems that my code is correct, (<code>my/mod.rs</code> is using module <code>my/nested.rs</code> in its own folder)</li>\n<li>I found some info on Internet, but it is of 4 years ago, and include the use of <code>use</code>, which is not yet in the book.</li>\n<li>I also checked <a href=\"https://stackoverflow.com/questions/48136879/module-visibility-in-rust\">this question</a>, but I am not using folders, and again, it gets away from the book explanation.</li>\n</ul>\n\n<h2>Minimal example</h2>\n\n<p>This is a minimal example that tries to mimic the \"sound\" example of the book, there is only two files: <code>/src/main.rs</code> and <code>/src/m.rs</code>.</p>\n\n<p>main.rs</p>\n\n<pre><code>mod m;\nfn main() {\n  let st_0 = m::St::new();\n}\n</code></pre>\n\n<p>m.rs</p>\n\n<pre><code>pub mod m {\n    pub struct St {\n        a:i32,\n        b:i32,\n    }\n    impl St {\n        pub fn new() -&gt; St{\n            println!(\"New St!\");\n            St {\n                a: 12,\n                b: 13,\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>And this is what <code>cargo</code> tells me:</p>\n\n<pre><code>   Compiling min v0.1.0 (/home/user/min)\nerror[E0433]: failed to resolve: could not find `St` in `m`\n --&gt; src/main.rs:3:19\n  |\n3 |     let st_0 = m::St::new();\n  |                   ^^ could not find `St` in `m`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\nerror: Could not compile `min`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 1211, "user_id": 920545, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f5406e58c35a73af9dfdbd64d435f6b?s=128&d=identicon&r=PG", "display_name": "Paul Molodowitch", "link": "https://stackoverflow.com/users/920545/paul-molodowitch"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1552064279, "post_id": 55066744, "comment_id": 96882844, "body": "Cross-compilation refers to building for a different platform than the one the compiler is running on.  What I&#39;m looking to do is similar, but slightly different - in my case, I&#39;m always compiling for the same platform that I&#39;m building on... I just want to do that using the same source directory for both platforms."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1552115672, "post_id": 55066744, "comment_id": 96896978, "body": "Sorry, I misread your question."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1552233242, "last_edit_date": 1552233242, "creation_date": 1552061091, "answer_id": 55066868, "question_id": 55066744, "link": "https://stackoverflow.com/questions/55066744/whats-the-best-way-to-use-cargo-to-build-for-multiple-platforms-using-the-same/55066868#55066868", "title": "What&#39;s the best way to use Cargo to build for multiple platforms using the same source directory?", "body": "<p>I would recommend looking at out-of-tree builds.</p>\n\n<p>If you have a project such as:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>project/\n    Cargo.toml\n</code></pre>\n\n<p>You can add a <code>.cargo</code> directory:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>project/\n    .cargo/\n        config\n    Cargo.toml\n</code></pre>\n\n<p>And put the following into the <code>config</code> file:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[build]\ntarget-dir = \"/tmp/build/dir\"\n</code></pre>\n\n<p>As long as the path is valid for both operating systems, then each will point to a <em>local</em> build.</p>\n\n<p>Plus... you'll avoid syncing MBs/GBs of binaries to your Dropbox account.</p>\n"}, {"tags": [], "owner": {"reputation": 1211, "user_id": 920545, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f5406e58c35a73af9dfdbd64d435f6b?s=128&d=identicon&r=PG", "display_name": "Paul Molodowitch", "link": "https://stackoverflow.com/users/920545/paul-molodowitch"}, "is_accepted": false, "score": 1, "last_activity_date": 1581273779, "last_edit_date": 1581273779, "creation_date": 1552064104, "answer_id": 55067650, "question_id": 55066744, "link": "https://stackoverflow.com/questions/55066744/whats-the-best-way-to-use-cargo-to-build-for-multiple-platforms-using-the-same/55067650#55067650", "title": "What&#39;s the best way to use Cargo to build for multiple platforms using the same source directory?", "body": "<p>I accepted <a href=\"https://stackoverflow.com/a/55066868/920545\">Matthieu M.'s suggestion</a> because it was elegant, functional, and made use of Cargo's features... but I realized that it didn't apply to my situation, where I wanted to sync between Mac and Windows, because Windows paths always start with, ie, \"C:\\\".</p>\n\n<p>Also, I realized there's another easy way to solve this problem although it's Dropbox-specific:</p>\n\n<p>Dropbox has a way to set files to be ignored, using file-system specific alternate streams / attributes.  Details can be found here:</p>\n\n<p><a href=\"https://help.dropbox.com/en-US/files-folders/restore-delete/ignored-files\" rel=\"nofollow noreferrer\">https://help.dropbox.com/en-US/files-folders/restore-delete/ignored-files</a></p>\n\n<p>(Note: I formerly recommended using Dropbox's \"<a href=\"https://www.dropbox.com/help/syncing-uploads/selective-sync-overview\" rel=\"nofollow noreferrer\">selective sync</a>\" feature, to disable syncing of the <code>target</code> directory, but they changed the way this works, so that you can't have a directory with the same name as your \"selective sync\" directory.)</p>\n\n<p>You can make use of </p>\n"}], "owner": {"reputation": 1211, "user_id": 920545, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f5406e58c35a73af9dfdbd64d435f6b?s=128&d=identicon&r=PG", "display_name": "Paul Molodowitch", "link": "https://stackoverflow.com/users/920545/paul-molodowitch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 640, "favorite_count": 0, "accepted_answer_id": 55066868, "answer_count": 2, "score": 2, "last_activity_date": 1581273779, "creation_date": 1552060532, "last_edit_date": 1552233165, "question_id": 55066744, "link": "https://stackoverflow.com/questions/55066744/whats-the-best-way-to-use-cargo-to-build-for-multiple-platforms-using-the-same", "title": "What&#39;s the best way to use Cargo to build for multiple platforms using the same source directory?", "body": "<p>I frequently flip between my desktop and laptop, which have different operating systems. To coordinate, I like to keep my development / project directories stored in Dropbox.</p>\n\n<p>Cargo will try to build to the same directory (i.e. <code>target/debug</code>) from both operating systems.  Ideally, I want a way that would allow me to automatically build to platform-specific build directories on each platform:</p>\n\n<ul>\n<li><code>target/x86_64-apple-darwin</code></li>\n<li><code>target/x86_64-pc-windows-msvc</code></li>\n<li><code>target/x86_64-unknown-linux-gnu</code></li>\n</ul>\n\n<p>...or something similar.</p>\n"}, {"tags": ["rust", "rust-tokio", "hyper"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552045999, "post_id": 55062400, "comment_id": 96873324, "body": "Please try to make a better <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, so that there is everything we need to reproduce the problem is in the question itself. That code snippet alone does not compile."}], "answers": [{"comments": [{"owner": {"reputation": 1147, "user_id": 1121179, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5bc266ac8edc3e0e540440c4b2a1314b?s=128&d=identicon&r=PG&f=1", "display_name": "J&#233;r&#244;me R", "link": "https://stackoverflow.com/users/1121179/j%c3%a9r%c3%b4me-r"}, "edited": false, "score": 0, "creation_date": 1552052560, "post_id": 55064385, "comment_id": 96876799, "body": "Ok I see what you mean. Thanks for the help :)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552055292, "post_id": 55064385, "comment_id": 96878220, "body": "damm the error message is non sense. Also the double clone sux a little didn&#39;t find why I can&#39;t fix the error cause of that"}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1552162572, "post_id": 55064385, "comment_id": 96908826, "body": "The cloning looks bad, but it is inevitable. Both of the closures can be called multiple times (they are <code>Fn</code>, not <code>FnOnce</code>), so they can not give out their own instance of <code>tx_queue</code> because they would not have it the next time they are called. So they keep one instance as a template and clone it when called. The clone is then moved/consumed."}], "tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": true, "score": 2, "last_activity_date": 1552052279, "creation_date": 1552052279, "answer_id": 55064385, "question_id": 55062400, "link": "https://stackoverflow.com/questions/55062400/channel-communication-between-tasks/55064385#55064385", "title": "Channel communication between tasks", "body": "<p>The <code>futures::sync::mpsc::Sender::send</code> consumes the <code>Sender</code> and produces a <code>Send</code> object, which is a future that has to be run to completion to actually send the data. If the channel is full, it will block until someone else receives from the channel. Upon completion it gives you back the <code>Sender</code> which you could use to send more data in.</p>\n\n<p>In this case I don't think you can structure the code with just single instance of the <code>Sender</code>. You need to clone it so that there is new clone for every call of the service function. Notice both closures are <code>move</code> now:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let http_server = Server::bind(&amp;([127, 0, 0, 1], 3000).into()).serve(move || {\n        // This closure has one instance of tx_queue that was moved-in here.\n        // Now we make a copy to be moved into the closure below.\n        let tx_queue = tx_queue.clone();\n        service_fn_ok(move |_: Request&lt;Body&gt;| {\n            // This closure has one instance of tx_queue, but it will be called\n            // multiple times, so it can not consume it. It must make a copy\n            // before consuming it.\n            tx_queue.clone().send(111);\n            Response::new(Body::from(\"Hello World!\"))\n        })\n    });\n</code></pre>\n\n<p>But, this would give you following warning:</p>\n\n<pre><code>warning: unused `futures::sink::send::Send` that must be used\n</code></pre>\n\n<p>As I said, the <code>send</code> just gives you a future that must be run to actually perform the sending. If you ignore the return value, nothing will happen. In this case, it would be best to <code>spawn</code> it as a separate task (so it doesn't block responding to the client). To spawn it, you need an executor from the runtime, which also has to be cloned for the inner closure:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let executor = runtime.executor();\n    let http_server = Server::bind(&amp;([127, 0, 0, 1], 3000).into()).serve(move || {\n        let tx_queue = tx_queue.clone();\n        let executor = executor.clone();\n        service_fn_ok(move |_: Request&lt;Body&gt;| {\n            executor.spawn(tx_queue.clone().send(111).map(|_| ()).map_err(|err| {\n                // TODO: Handle the error differenty!\n                panic!(\"Error in mpsc {:?}\", err);\n            }));\n            Response::new(Body::from(\"Hello World!\"))\n        })\n    });\n</code></pre>\n"}], "owner": {"reputation": 1147, "user_id": 1121179, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5bc266ac8edc3e0e540440c4b2a1314b?s=128&d=identicon&r=PG&f=1", "display_name": "J&#233;r&#244;me R", "link": "https://stackoverflow.com/users/1121179/j%c3%a9r%c3%b4me-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 471, "favorite_count": 0, "accepted_answer_id": 55064385, "answer_count": 1, "score": 0, "last_activity_date": 1552052422, "creation_date": 1552044829, "last_edit_date": 1552052422, "question_id": 55062400, "link": "https://stackoverflow.com/questions/55062400/channel-communication-between-tasks", "title": "Channel communication between tasks", "body": "<p>I am trying to set up a channel based communication between one <a href=\"https://hyper.rs/\" rel=\"nofollow noreferrer\">hyper</a> service and one <a href=\"https://tokio.rs/\" rel=\"nofollow noreferrer\">tokio</a> stream. The problem is that the compiler rants with the following error:</p>\n\n<blockquote>\n  <p>closure is <code>FnOnce</code> because it moves the variable <code>tx_queue</code> out of\n  its environment.</p>\n</blockquote>\n\n<p>After reading the explanation provided by <code>rustc --explain E0525</code> it appears that <a href=\"https://docs.rs/tokio/0.1.16/tokio/sync/mpsc/struct.Sender.html\" rel=\"nofollow noreferrer\">tokio::sync::mpsc::Sender</a> implements <code>Clone</code> but does not implement <code>Copy</code> (unless I overlooked something).</p>\n\n<p>So I am a bit stuck. How can I get my service send messages to a tokio stream via a <code>tokio::sync::mpsc</code> channel ? I am sure I miss something obvious but can not see what :/</p>\n\n<p>An excerpt of the problematic code (modified to make it shorter as @E_net4 requested):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    extern crate hyper;\n    extern crate tokio;\n    extern crate tokio_signal;\n\n    use futures::Stream;\n    use hyper::rt::Future;\n    use hyper::service::service_fn_ok;\n    use hyper::{Body, Request, Response, Server};\n\n    use futures::sink::Sink;\n    use futures::sync::{mpsc, oneshot};\n    use futures::{future, stream};\n\n    fn main() {\n        let mut runtime = tokio::runtime::Runtime::new().unwrap();\n\n        let (tx1, rx1) = oneshot::channel::&lt;()&gt;();\n\n        let (tx_queue, rx_queue) = mpsc::channel(10);\n\n        // ----\n\n        runtime.spawn(start_queue(rx_queue));\n\n        // ----\n\n        let http_server = Server::bind(&amp;([127, 0, 0, 1], 3000).into()).serve(|| {\n            service_fn_ok(move |_: Request&lt;Body&gt;| {\n                tx_queue.send(1);\n                Response::new(Body::from(\"Hello World!\"))\n            })\n        });\n\n        let graceful = http_server\n            .with_graceful_shutdown(rx1)\n            .map_err(|err| eprintln!(\"server error: {}\", err))\n            .and_then(|_| {\n                dbg!(\"stopped\");\n                // TODO: stop order queue listener\n                Ok(())\n            });\n\n        dbg!(\"HTTP server listening ...\");\n\n        runtime.spawn(graceful);\n\n        // ----\n\n        tx1.send(()).unwrap();\n\n        dbg!(\"exited\");\n    }\n\n    pub fn start_queue(rx: mpsc::Receiver&lt;usize&gt;) -&gt; impl Future&lt;Item = (), Error = ()&gt; {\n        #[derive(Eq, PartialEq)]\n        enum Item {\n            Value(usize),\n            Tick,\n            Done,\n        }\n\n        let items = rx\n            .map(Item::Value)\n            .chain(stream::once(Ok(Item::Done)))\n            .take_while(|item| future::ok(*item != Item::Done));\n\n        items\n            .fold(0, |num, _item| {\n                dbg!(\"x\");\n                future::ok(num)\n            })\n            .map(|_| ())\n    }\n</code></pre>\n\n<p>The entire code is available here : <a href=\"https://gist.github.com/jeromer/52aa2da43c5c93584c6ee55be68dd04e\" rel=\"nofollow noreferrer\">https://gist.github.com/jeromer/52aa2da43c5c93584c6ee55be68dd04e</a></p>\n\n<p>Thanks :)</p>\n"}, {"tags": ["linked-list", "rust", "singly-linked-list"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1552044276, "post_id": 55062035, "comment_id": 96872394, "body": "linked list is the functional way to represent data. Rust borrow checker will make your life complicated if you try to use imperatif to implemente it in Rust. See, <a href=\"https://codereview.stackexchange.com/questions/207418/merge-two-sorted-lists-in-rust/207428#207428\" title=\"merge two sorted lists in rust\">codereview.stackexchange.com/questions/207418/&hellip;</a>. With functionnal style all is cleaner, of course maybe not faster, rust linked list require unsafe I think to make it fast (and readable)."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552044418, "post_id": 55062035, "comment_id": 96872458, "body": "I&#39;m voting to close this question as off-topic because already answer <a href=\"https://codereview.stackexchange.com/questions/207418/merge-two-sorted-lists-in-rust/207428#207428\">here</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1552044453, "post_id": 55062035, "comment_id": 96872477, "body": "Near-mandatory reading: <a href=\"https://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\">Learning Rust with entirely too many linked lists</a>"}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1552045912, "post_id": 55062035, "comment_id": 96873277, "body": "@E_net4 That looks like an awesome read! I will certainly make time to read it in the upcoming days"}, {"owner": {"reputation": 2591, "user_id": 227224, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/641a3c5c6bf3402b88999ae9b0e8d7d4?s=128&d=identicon&r=PG", "display_name": "jelford", "link": "https://stackoverflow.com/users/227224/jelford"}, "edited": false, "score": 1, "creation_date": 1552156615, "post_id": 55062035, "comment_id": 96907257, "body": "Thanks for posting a link that included your tests."}], "answers": [{"tags": [], "owner": {"reputation": 2591, "user_id": 227224, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/641a3c5c6bf3402b88999ae9b0e8d7d4?s=128&d=identicon&r=PG", "display_name": "jelford", "link": "https://stackoverflow.com/users/227224/jelford"}, "is_accepted": false, "score": 2, "last_activity_date": 1552156720, "last_edit_date": 1552156720, "creation_date": 1552156093, "answer_id": 55080627, "question_id": 55062035, "link": "https://stackoverflow.com/questions/55062035/what-would-be-a-better-way-to-implement-pop-in-my-single-linked-list-in-rust/55080627#55080627", "title": "What would be a better way to implement .pop() in my single linked list in Rust?", "body": "<p>You can avoid re-traversing the list by keeping track of the last element you saw as you go (and then updating that at the end). </p>\n\n<p>If you are naive about how you do that, you will run into trouble; your \"previous\" pointer retains ownership of the rest of the list and the borrow checker won't allow that. The trick is to break that link as you go - and to do that you can use the <code>mem::replace</code> function. Once you've done that, you have to put it back before you lose track of your previous node again.</p>\n\n<p>Here's what that could look like in full (you'll have to forgive my liberal use of <code>unwrap</code> - I do think it makes things clearer):</p>\n\n<pre><code>pub fn pop(&amp;mut self) -&gt; Option&lt;T&gt;\n    where T : Copy,\n{\n    use std::mem::replace;\n\n    let curr = replace(&amp;mut self.head, None);\n\n    if curr.is_none() { // list started off empty; nothing to pop\n        return None;\n    }\n\n    let mut curr = curr.unwrap(); // safe because of the check above\n\n    if let None = curr.next { // popped the last element\n        return Some(curr.data);\n    }\n\n    let mut prev_next = &amp;mut self.head;\n\n    while curr.next.is_some() {\n        // Take ownership of the next element\n        let nnext = replace(&amp;mut curr.next, None).unwrap();\n\n        // Update the previous element's \"next\" field\n        *prev_next = Some(curr);\n\n        // Progress to the next element\n        curr = nnext;\n\n        // Progress our pointer to the previous element's \"next\" field\n        prev_next = &amp;mut prev_next.as_mut().unwrap().next;\n\n    }\n\n    return Some(curr.data);\n}\n</code></pre>\n\n<p>As an aside, all this pointer shuffling simplifies a lot if you're willing to change the interface a little so that we return a \"new\" list each time (taking ownership in the <code>pop</code> function), or use a persistent datastructure, as they do in <a href=\"https://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\">Learning Rust with entirely too many linked lists</a> (already mentioned in a comment):</p>\n\n<pre><code>pub fn pop_replace(self) -&gt; (Option&lt;T&gt;, Self) {\n    // freely mutate self and all the nodes\n}\n</code></pre>\n\n<p>Which you would use like:</p>\n\n<pre><code>let elem, list = list.pop();\n</code></pre>\n"}], "owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 264, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1552156720, "creation_date": 1552043593, "last_edit_date": 1552046546, "question_id": 55062035, "link": "https://stackoverflow.com/questions/55062035/what-would-be-a-better-way-to-implement-pop-in-my-single-linked-list-in-rust", "title": "What would be a better way to implement .pop() in my single linked list in Rust?", "body": "<p>I've implemented my own version of a singly linked list in Rust as one of the challenges for me to learn it, and I'm satisfied with everything I have there except for the .pop() method. Using 2 while loops is very ugly and inefficient, but I found no other way to overcome the problem of setting the node at the index len() - 2 to None (popping the list), and using the data from the node at the index len() - 1 for the Some(data) return value (returns the element that was popped).</p>\n\n<p><a href=\"https://github.com/scorpion9979/rust-singly-linked-list\" rel=\"nofollow noreferrer\">GitHub Link</a></p>\n\n<pre><code>pub struct SimpleLinkedList&lt;T&gt; {\n    head: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nstruct Node&lt;T&gt; {\n    data: T,\n    next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; Default for SimpleLinkedList&lt;T&gt; {\n    fn default() -&gt; Self {\n        SimpleLinkedList { head: None }\n    }\n}\n\nimpl&lt;T: Copy&gt; Clone for SimpleLinkedList&lt;T&gt; {\n    fn clone(&amp;self) -&gt; SimpleLinkedList&lt;T&gt; {\n        let mut out: SimpleLinkedList&lt;T&gt; = SimpleLinkedList::new();\n        let mut cur = &amp;self.head;\n        while let Some(node) = cur {\n            cur = &amp;node.next;\n            out.push(node.data)\n        }\n        out\n    }\n}\n\nimpl&lt;T&gt; SimpleLinkedList&lt;T&gt; {\n    pub fn new() -&gt; Self {\n        Default::default()\n    }\n\n    pub fn len(&amp;self) -&gt; usize {\n        let mut c = 0;\n        let mut cur = &amp;self.head;\n        while let Some(node) = cur {\n            cur = &amp;node.next;\n            c += 1;\n        }\n        c\n    }\n\n    pub fn is_empty(&amp;self) -&gt; bool {\n        self.len() == 0\n    }\n\n    pub fn push(&amp;mut self, _element: T) {\n        let mut cur = &amp;mut self.head;\n        match cur {\n            Some(_) =&gt; {\n                while let Some(node) = cur {\n                    cur = &amp;mut node.next;\n                }\n            }\n            None =&gt; (),\n        }\n        *cur = Some(Box::from(Node {\n            data: _element,\n            next: None,\n        }));\n    }\n\n    pub fn pop(&amp;mut self) -&gt; Option&lt;T&gt;\n    where\n        T: Copy,\n    {\n        let length = &amp;self.len();\n        let mut cur = &amp;mut self.head;\n        let mut out = None;\n        match cur {\n            Some(_) if *length &gt; 1usize =&gt; {\n                let mut c = 0usize;\n                while let Some(node) = cur {\n                    cur = &amp;mut node.next;\n                    if c &gt;= length - 1 {\n                        out = Some(node.data);\n                        break;\n                    }\n                    c += 1;\n                }\n\n                c = 0usize;\n                cur = &amp;mut self.head;\n                while let Some(node) = cur {\n                    cur = &amp;mut node.next;\n                    if c == length - 2 {\n                        break;\n                    }\n                    c += 1;\n                }\n            }\n            Some(node) =&gt; out = Some(node.data),\n            None =&gt; (),\n        }\n        *cur = None;\n        out\n    }\n\n    pub fn peek(&amp;self) -&gt; Option&lt;&amp;T&gt; {\n        let cur = &amp;self.head;\n        match cur {\n            Some(node) =&gt; Some(&amp;node.data),\n            None =&gt; None,\n        }\n    }\n}\n\nimpl&lt;T: Copy&gt; SimpleLinkedList&lt;T&gt; {\n    pub fn rev(&amp;self) -&gt; SimpleLinkedList&lt;T&gt; {\n        let mut clone = self.clone();\n        let mut out: SimpleLinkedList&lt;T&gt; = SimpleLinkedList::new();\n        while let Some(val) = clone.pop() {\n            out.push(val)\n        }\n        out\n    }\n}\n\nimpl&lt;'a, T: Copy&gt; From&lt;&amp;'a [T]&gt; for SimpleLinkedList&lt;T&gt; {\n    fn from(_item: &amp;[T]) -&gt; Self {\n        let mut out: SimpleLinkedList&lt;T&gt; = SimpleLinkedList::new();\n        for &amp;e in _item.iter() {\n            out.push(e);\n        }\n        out\n    }\n}\n\nimpl&lt;T&gt; Into&lt;Vec&lt;T&gt;&gt; for SimpleLinkedList&lt;T&gt; {\n    fn into(self) -&gt; Vec&lt;T&gt; {\n        let mut out: Vec&lt;T&gt; = Vec::new();\n        let mut cur = self.head;\n        while let Some(node) = cur {\n            cur = node.next;\n            out.push(node.data)\n        }\n        out\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "traits", "smart-pointers", "trait-objects"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1552043384, "post_id": 55061664, "comment_id": 96871877, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/32446485/coremarkersized-not-implemented-for-foo\">core::marker::Sized not implemented for Foo</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1552043623, "post_id": 55061664, "comment_id": 96872016, "body": "Applied to this question: <code>T</code> has a <code>Sized</code> constraint by default, which should be removed when implementing <code>new(rhs: Rc&lt;T&gt;)</code>:  <code>impl&lt;T: ?Sized&gt; Bar&lt;T&gt; where T: Foo { ... }</code>."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1552056036, "creation_date": 1552056036, "answer_id": 55065472, "question_id": 55061664, "link": "https://stackoverflow.com/questions/55061664/why-sized-trait-is-required-for-a-builder-function-to-generate-rct/55065472#55065472", "title": "Why sized trait is required for a builder function to generate Rc&lt;T&gt;?", "body": "<p>By default, all type variables are assumed to be <code>Sized</code>. For example, in the definition of the <code>Bar</code> struct, there is an implicit <code>Sized</code> constraint, like this:</p>\n\n<pre><code>struct Bar&lt;T: Sized&gt; {\n    v: Rc&lt;T&gt;,\n}\n</code></pre>\n\n<p>The object <code>dyn Foo</code> <em>cannot</em> be <code>Sized</code> since each possible implementation of <code>Foo</code> could have a different size, so there isn't one size that can be chosen. But you are trying to instantiate a <code>Bar&lt;dyn Foo&gt;</code>.</p>\n\n<p>The fix is to opt out of the <code>Sized</code> trait for <code>T</code>:</p>\n\n<pre><code>struct Bar&lt;T: ?Sized&gt; {\n    v: Rc&lt;T&gt;,\n}\n</code></pre>\n\n<p>And also in the context of the implementations:</p>\n\n<pre><code>impl&lt;T: ?Sized&gt; Bar&lt;T&gt;\nwhere \n    T: Foo \n</code></pre>\n\n<p><code>?Sized</code> is actually not a constraint, but relaxing the existing <code>Sized</code> constraint, so that it is not required.</p>\n\n<p>A consequence of opting out of <code>Sized</code> is that none of <code>Bar</code>'s methods from that <code>impl</code> block can use <code>T</code>, except by reference.</p>\n"}], "owner": {"reputation": 15, "user_id": 3966418, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69e01d8383ed092d211255f88fb7afd3?s=128&d=identicon&r=PG&f=1", "display_name": "Eric Wu", "link": "https://stackoverflow.com/users/3966418/eric-wu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 55065472, "answer_count": 1, "score": 1, "last_activity_date": 1552668315, "creation_date": 1552042353, "last_edit_date": 1552668315, "question_id": 55061664, "link": "https://stackoverflow.com/questions/55061664/why-sized-trait-is-required-for-a-builder-function-to-generate-rct", "title": "Why sized trait is required for a builder function to generate Rc&lt;T&gt;?", "body": "<p>This code works fine (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=7bdad61d33a9e48e33558024afedf138\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>use std::rc::Rc;\n\ntrait Foo {\n    fn foo(&amp;self);\n}\n\nstruct Bar&lt;T&gt; {\n    v: Rc&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Bar&lt;T&gt; where\nT: Foo {\n    fn new(rhs: Rc&lt;T&gt;) -&gt; Bar&lt;T&gt; {\n        Bar{v: rhs}\n    }\n}\n\nstruct Zzz {\n}\n\nimpl Zzz {\n    fn new() -&gt; Zzz {\n        Zzz{}\n    }\n}\n\nimpl Foo for Zzz {\n    fn foo(&amp;self) {\n        println!(\"Zzz foo\");\n    }\n}\n\nfn make_foo() -&gt; Rc&lt;Foo&gt; {\n    Rc::new(Zzz{})\n}\n\nfn main() {\n    let a = Bar::new(Rc::new(Zzz::new()));\n    a.v.as_ref().foo()\n}\n</code></pre>\n\n<p>but if I make a wrapper to generate Rc like below, the compiler complains about missing sized trait (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=bf343359ba4c2478200c00cbcf2f544c\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre><code>fn make_foo() -&gt; Rc&lt;dyn Foo&gt; {\n    Rc::new(Zzz::new())\n}\n\nfn main() {\n    let a = Bar::new(make_foo());\n    a.v.as_ref().foo()\n}\n</code></pre>\n\n<p>in both cases, Bar::new received parameters with same type Rc, why the rust compiler reacts different?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1552038337, "post_id": 55060328, "comment_id": 96869226, "body": "If you write <code>|n_squared|</code>, you&#39;ll get the expected error and using <code>*n_squared</code> in the body will fix it. See <a href=\"https://www.reddit.com/r/rust/comments/16b9wh/tutorial_question_destructuring_in_stack_closures/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/16b9wh/&hellip;</a>"}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 1, "creation_date": 1552038796, "post_id": 55060328, "comment_id": 96869461, "body": "Since I edited the comment and you might not have seen it: I&#39;ve added a link to an old Reddit discussion of exactly this issue <a href=\"https://www.reddit.com/r/rust/comments/16b9wh/tutorial_question_destructuring_in_stack_closures/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/16b9wh/&hellip;</a>. While Rust has changed a lot, this seems to still be what&#39;s going happening."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 2, "creation_date": 1552044904, "post_id": 55060328, "comment_id": 96872705, "body": "The documentation is in <a href=\"https://doc.rust-lang.org/1.30.0/book/2018-edition/ch18-01-all-the-places-for-patterns.html#function-parameters\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.30.0/book/2018-edition/&hellip;</a>.`"}, {"owner": {"reputation": 6220, "user_id": 961781, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/H9EgK.jpg?s=128&g=1", "display_name": "djf", "link": "https://stackoverflow.com/users/961781/djf"}, "reply_to_user": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1552045698, "post_id": 55060328, "comment_id": 96873165, "body": "@AlexeyRomanov Perfect! That&#39;s what I was looking for."}], "answers": [{"tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": true, "score": 5, "last_activity_date": 1552045814, "last_edit_date": 1552045814, "creation_date": 1552039932, "answer_id": 55060977, "question_id": 55060328, "link": "https://stackoverflow.com/questions/55060328/understanding-rust-function-parameter-type-declaration/55060977#55060977", "title": "Understanding Rust function parameter type declaration", "body": "<p>You are using <a href=\"https://doc.rust-lang.org/1.30.0/book/2018-edition/ch18-01-all-the-places-for-patterns.html#function-parameters\" rel=\"nofollow noreferrer\">function parameter destructuring</a>:</p>\n\n<pre><code>|&amp;n_squared| n_squared &lt; upper\n</code></pre>\n\n<p>is functionally equivalent to:</p>\n\n<pre><code>|n_squared| *n_squared &lt; upper\n</code></pre>\n\n<p>To understand this better, imagine you're passing a tuple of type &amp;(i32, i32) to a lambda:</p>\n\n<pre><code>|&amp;(x, y) : &amp;(i32, i32)| x + y\n</code></pre>\n"}], "owner": {"reputation": 6220, "user_id": 961781, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/H9EgK.jpg?s=128&g=1", "display_name": "djf", "link": "https://stackoverflow.com/users/961781/djf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 0, "accepted_answer_id": 55060977, "answer_count": 1, "score": 1, "last_activity_date": 1593120177, "creation_date": 1552037606, "last_edit_date": 1593120177, "question_id": 55060328, "link": "https://stackoverflow.com/questions/55060328/understanding-rust-function-parameter-type-declaration", "title": "Understanding Rust function parameter type declaration", "body": "<p>I was reading the <a href=\"https://doc.rust-lang.org/stable/rust-by-example/fn/hof.html\" rel=\"nofollow noreferrer\">chapter on higher order functions of Rust by Example</a>. Where they present the following canonical example:</p>\n<pre><code>fn is_odd(n: u32) -&gt; bool {\n    n % 2 == 1\n}\n\nfn main() {\n   let upper = 1000;\n\n   println!(&quot;imperative style: {}&quot;, acc);\n\n   let sum_of_squared_odd_numbers: u32 =\n       (0..).map(|n| n * n)                             // All natural numbers squared\n            .take_while(|&amp;n_squared| n_squared &lt; upper) // Below upper limit\n            .filter(|&amp;n_squared| is_odd(n_squared))     // That are odd\n            .fold(0, |acc, n_squared| acc + n_squared); // Sum them\n}\n</code></pre>\n<p>Simple enough. But I realized that I don't understand the type of parameter <code>n_squared</code>. Both <code>take_while</code> and <code>filter</code> accept a function that takes a parameter by reference. That makes sense to me, you want to borrow instead of consuming the values in the map.</p>\n<p>However, if <code>n_squared</code> is a reference, why don't I have to dereference it before comparing its value to limit or equally surprising; why can I pass it directly to <code>is_odd()</code> without dereferencing?</p>\n<p>I.e. why isn't it?</p>\n<pre><code>   |&amp;n_squared| *n_squared &lt; upper\n</code></pre>\n<p>When I try that the compiler gives the following error:</p>\n<pre><code>error[E0614]: type `{integer}` cannot be dereferenced\n  --&gt; src\\higherorder.rs:13:34\n   |\n13 |         .take_while(|&amp;n_squared| *n_squared &lt;= upper)\n   |      \n</code></pre>\n<p>Indicating that <code>n_squared</code> is an <code>i32</code> and not <code>&amp;i32</code>. Looks like some sort pattern matching/destructuring is happening here, but I was unable to find the relevant documentation.</p>\n"}, {"tags": ["arrays", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 4, "creation_date": 1552037200, "post_id": 55059915, "comment_id": 96868650, "body": "Might be an X/Y problem. Why would you need to support so many arrays in the first place?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1552040407, "post_id": 55059915, "comment_id": 96870349, "body": "It sounds bad to have to provide implementations of a trait for 5000 different arrays. The usual is up to 32 elements, and I&#39;ve also seen some crates doing only powers of 2 after that (<code>[T; 64]</code>, <code>[T; 128]</code>, <code>[T; 256]</code>, etc.). And of course, there is always the slice type."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552041825, "post_id": 55059915, "comment_id": 96871065, "body": "Why wait for rfc 2000 is unacceptable, we all wait for it."}], "answers": [{"tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 1, "last_activity_date": 1552040374, "creation_date": 1552040374, "answer_id": 55061088, "question_id": 55059915, "link": "https://stackoverflow.com/questions/55059915/what-is-the-idiomatic-way-to-implement-a-trait-for-a-large-number-of-arrays-in-s/55061088#55061088", "title": "What is the idiomatic way to implement a trait for a large number of arrays in stable Rust?", "body": "<blockquote>\n  <p>Is using features and manual implementations the most idiomatic way to handle this problem on stable rust</p>\n</blockquote>\n\n<p>Yes. For example, check <a href=\"https://doc.rust-lang.org/stable/std/fmt/trait.Debug.html\" rel=\"nofollow noreferrer\">Debug</a> trait and its sources  - as you can see rust uses special macro to implement it for arrays with length &lt;= 32</p>\n"}], "owner": {"reputation": 709, "user_id": 10126273, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6trXt.png?s=128&g=1", "display_name": "Tenders McChiken", "link": "https://stackoverflow.com/users/10126273/tenders-mcchiken"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 0, "accepted_answer_id": 55061088, "answer_count": 1, "score": 1, "last_activity_date": 1552040374, "creation_date": 1552036195, "question_id": 55059915, "link": "https://stackoverflow.com/questions/55059915/what-is-the-idiomatic-way-to-implement-a-trait-for-a-large-number-of-arrays-in-s", "title": "What is the idiomatic way to implement a trait for a large number of arrays in stable Rust?", "body": "<p>Given my trait <code>T</code> and a large set of <code>std</code>/<code>core</code> arrays (<em>not slices</em>), How can I make implementations of <code>T</code> for these arrays available to other crates on stable Rust?</p>\n\n<p>From searching around, it seems my only options (that don't sidestep this problem) are to:</p>\n\n<ol>\n<li>wait for a release of rust with a stable implementation of rfc 2000: <a href=\"https://github.com/rust-lang/rust/issues/44580\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/44580</a></li>\n<li>implement the trait manually for each and every array. </li>\n</ol>\n\n<p>Option 1 is not acceptable. Option 2 leads to very long compile times (especially when the set of arrays exceeds 5000 types). Hiding every single implementation behind its own feature, i.e. feature <code>impl-t-for-array-N</code> conditionally compiles in an implementation of <code>T</code> for array <code>[U;N]</code>, does considerably lower compilation time. (Compilation times went from from tens of minutes to a couple of seconds). However, the delay caused by processing thousands of features is still noticeable.</p>\n\n<p>Is using features and manual implementations the most idiomatic way to handle this problem on stable rust, or is there a more idiomatic way I'm missing?</p>\n"}, {"tags": ["rust", "protocol-buffers", "grpc"], "comments": [{"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 0, "creation_date": 1552024104, "post_id": 55056998, "comment_id": 96863486, "body": "Looking at <code>write_message</code>&#39;s description, it only writes one field. Try <code>rmsg.write_to(&amp;mut str)</code>, I&#39;m just guessing that may work based on the docs."}, {"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "reply_to_user": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 0, "creation_date": 1552041341, "post_id": 55056998, "comment_id": 96870799, "body": "Why do you think it is the Nick field instead of Id which is index one that still remains a mystery:)"}, {"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "reply_to_user": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 0, "creation_date": 1552067532, "post_id": 55056998, "comment_id": 96884443, "body": "@JayDepp btw write_to does not exist"}, {"owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 0, "creation_date": 1552068094, "post_id": 55056998, "comment_id": 96884697, "body": "Do you have the Message trait in scope? <a href=\"https://docs.rs/protobuf/%2A/protobuf/trait.Message.html#method.write_to\" rel=\"nofollow noreferrer\">Here&#39;s the method.</a>"}, {"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "reply_to_user": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "edited": false, "score": 0, "creation_date": 1552068383, "post_id": 55056998, "comment_id": 96884826, "body": "I included that now but the output remains the same write_to and write_message both behave incorrectly"}], "answers": [{"comments": [{"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 0, "creation_date": 1552070951, "post_id": 55069211, "comment_id": 96885987, "body": "unfortunately, it does not change anything the result is still wrong @jpa"}], "tags": [], "owner": {"reputation": 7877, "user_id": 914716, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0ed96380268ce904eb69d0895915cfa?s=128&d=identicon&r=PG", "display_name": "jpa", "link": "https://stackoverflow.com/users/914716/jpa"}, "is_accepted": false, "score": 1, "last_activity_date": 1552070654, "creation_date": 1552070654, "answer_id": 55069211, "question_id": 55056998, "link": "https://stackoverflow.com/questions/55056998/rust-protobuf-serialization-is-all-messed-up/55069211#55069211", "title": "Rust protobuf serialization is all messed up", "body": "<p>This line:</p>\n\n<pre><code>str.write_message(1, &amp;rmsg).unwrap();\n</code></pre>\n\n<p>writes the message <code>rmsg</code> as a submessage with field id <code>1</code>. So the fields end up one nesting level deeper, as if your <code>.proto</code> was:</p>\n\n<pre><code>message wrappermsg {\n    user_data msg = 1;\n}\n</code></pre>\n\n<p>The correct method is:</p>\n\n<pre><code>rmsg.write_to(&amp;mut str);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 0, "creation_date": 1552072300, "post_id": 55069481, "comment_id": 96886633, "body": "I still get the exact same result id is used as nick and id does not exist in the deserialized struct."}, {"owner": {"reputation": 769, "user_id": 5433623, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-0jplvxnVu04/AAAAAAAAAAI/AAAAAAAAGvQ/VLbN9V7SMJ8/photo.jpg?sz=128", "display_name": "Matt Brubeck", "link": "https://stackoverflow.com/users/5433623/matt-brubeck"}, "reply_to_user": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 1, "creation_date": 1552073280, "post_id": 55069481, "comment_id": 96887099, "body": "Your code still uses <code>user_data</code> for the serialized value and <code>register_msg</code> for the deserialized value.  Using two different types like this will not work.  Use the same type for both values."}, {"owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "edited": false, "score": 0, "creation_date": 1552073452, "post_id": 55069481, "comment_id": 96887186, "body": "Oh such a silly stupid mistake. How didnt i see that. Thank you for your help"}], "tags": [], "owner": {"reputation": 769, "user_id": 5433623, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-0jplvxnVu04/AAAAAAAAAAI/AAAAAAAAGvQ/VLbN9V7SMJ8/photo.jpg?sz=128", "display_name": "Matt Brubeck", "link": "https://stackoverflow.com/users/5433623/matt-brubeck"}, "is_accepted": true, "score": 3, "last_activity_date": 1552072004, "creation_date": 1552072004, "answer_id": 55069481, "question_id": 55056998, "link": "https://stackoverflow.com/questions/55056998/rust-protobuf-serialization-is-all-messed-up/55069481#55069481", "title": "Rust protobuf serialization is all messed up", "body": "<p>You can use <code>Message::write_to_bytes</code> to serialize a message that can be parsed with <code>parse_from_bytes</code>.</p>\n\n<p>Also, make sure that you are deserializing the same type that you serialized.</p>\n\n<p>Here's an example program that works correctly:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod protos;\nuse protobuf::Message;\nuse protos::user_data::user_data;\n\nfn main() {\n    let mut rmsg = user_data::new();\n    rmsg.set_id(\"1234\".into());\n    rmsg.set_nick(\"test\".into());\n\n    let msg = rmsg.write_to_bytes().unwrap();\n    println!(\"{:?}\", msg);\n\n    let test: user_data = protobuf::parse_from_bytes(&amp;msg).unwrap();\n    println!(\"serialized: {:?}\\noriginal: {:?}\", test, rmsg);\n}\n</code></pre>\n"}], "owner": {"reputation": 2384, "user_id": 3553432, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/fb2106952e54afdb0d370799f988ba25?s=128&d=identicon&r=PG", "display_name": "nikoss", "link": "https://stackoverflow.com/users/3553432/nikoss"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 761, "favorite_count": 1, "accepted_answer_id": 55069481, "answer_count": 2, "score": 2, "last_activity_date": 1552072475, "creation_date": 1552021329, "last_edit_date": 1552072475, "question_id": 55056998, "link": "https://stackoverflow.com/questions/55056998/rust-protobuf-serialization-is-all-messed-up", "title": "Rust protobuf serialization is all messed up", "body": "<p>I am using <code>rust-protobuf</code> version <code>2.4</code>\nI have following code</p>\n\n<pre><code>let mut msg = vec![];\nlet mut str = protobuf::CodedOutputStream::vec(&amp;mut msg);\nlet mut rmsg = user_manager::user::user_data::new();\nrmsg.set_id(\"1234\".into());\nrmsg.set_nick(\"test\".into());\nstr.write_message(1, &amp;rmsg).unwrap();\nstr.flush().unwrap();\nprintln!(\"{:?}\", msg);\nlet test: register_msg = protobuf::parse_from_bytes(&amp;msg[..]).unwrap();\nprintln!(\"serialized: {:?}\\noriginal: {:?}\", test, rmsg);\n</code></pre>\n\n<p>and the relevant proto description is as follows</p>\n\n<pre><code>message user_data{\n    string id           = 1; //required\n    string nick         = 2;\n    string theme        = 3;\n    string admin_id     = 4;\n    string lang         = 5;\n    double credit       = 6; //required\n    double bonus_credit = 7; //required\n};\n</code></pre>\n\n<p>and what i get as a result is all messed up \n<a href=\"https://i.stack.imgur.com/jJ676.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/jJ676.png\" alt=\"output\"></a></p>\n\n<p>First of all, why do I need to enter a number if im serializing the entire message? that's a really weird design.</p>\n\n<p>Secondly, the first field as you may see in the proto file is the id but output from serialization shows the protobuf package serialized everything into the nick field which is the second field.</p>\n\n<p>Am I doing something wrong or might this be a bug in the library?</p>\n\n<p>UPDATE 1:</p>\n\n<p>I have changed <code>write_msg</code> to <code>write_to_bytes</code>\nthis is how my code looks now.</p>\n\n<pre><code>let mut rmsg = user_manager::user::user_data::new();\nrmsg.set_id(\"1234\".into());\nrmsg.set_nick(\"test\".into());\nlet msg = rmsg.write_to_bytes().unwrap();\nprintln!(\"{:?}\", msg);\nprintln!(\"{:?}\", &amp;msg[..]);\nlet test: register_msg = protobuf::parse_from_bytes(&amp;msg).unwrap();\nprintln!(\"serialized: {:?}\\noriginal: {:?}\", test, rmsg);\n</code></pre>\n\n<p>and still, the output is all messed up.\n<a href=\"https://i.stack.imgur.com/Qlses.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Qlses.png\" alt=\"out\"></a></p>\n"}, {"tags": ["vector", "rust", "ownership"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552042213, "post_id": 55056232, "comment_id": 96871267, "body": "&quot;But, conceptually, it should work, because I&#39;m not using data afterwards anyway.&quot; and how drop from Vec will know to drop only the string you didn&#39;t remove ?"}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552055449, "post_id": 55056232, "comment_id": 96878309, "body": "@Stargateur It doesn&#39;t know, which is why it doesn&#39;t compile. But, undefined data only matters if it is used, and it is not used in my example, which is why a smarter compiler should see this code as valid."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552055787, "post_id": 55056232, "comment_id": 96878483, "body": "You didn&#39;t undertand, String HAVE a drop implementation, as Vec isn&#39;t a compiler internal, it can&#39;t have this level of understanding. That doesn&#39;t matter that you don&#39;t use the data the compiler still need to call drop implementation. And it do that on Vec, and Vec will call drop on all its element, Vec have no way to know that you move two values"}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552064214, "post_id": 55056232, "comment_id": 96882820, "body": "@Stargateur You are speaking for the current compiler implementation, which has all sorts of limitations. I was speaking for the the concept of data safety. Undefined data that is never accessed is not unsafe. A smarter compiler, i.e. one able to understand this, would recognize this."}], "answers": [{"comments": [{"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1552063215, "post_id": 55056799, "comment_id": 96882356, "body": "The problem with <code>remove</code> and <code>drain</code> is that the indices change. Hence, I cannot pull data out with an arbitrary unordered set of indices without tracking how those indices change. However, this seems to be the best compromise possible in Rust. Thanks."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": true, "score": 4, "last_activity_date": 1552019804, "creation_date": 1552019804, "answer_id": 55056799, "question_id": 55056232, "link": "https://stackoverflow.com/questions/55056232/how-to-extract-elements-of-a-vector-of-strings-in-rust/55056799#55056799", "title": "How to extract elements of a vector of strings in Rust?", "body": "<p><code>Vec</code> has special methods for that. <code>swap_remove</code>, <code>remove</code> (warning, linear complexity), <code>drain</code>. For example, </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn extract() -&gt; Vec&lt;String&gt; {\n    let mut data = vec![\"aaa\".to_string(), \"bbb\".to_string(), \"ccc\".to_string()];\n    // order does matter\n    vec![data.swap_remove(2), data.swap_remove(0)]\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1552023482, "post_id": 55056913, "comment_id": 96863314, "body": "Because my use case does not fit that model. I am selecting a few key elements from vectors of thousands of strings."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1552042090, "post_id": 55056913, "comment_id": 96871191, "body": "&quot;If you really want to avoid copying any strings, you can wrap them in Rc so that only pointers are copied.&quot; nope, don&#39;t do that, rust move semantic will not reallocate String."}, {"owner": {"reputation": 2110, "user_id": 52603, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/394a0290d36a5f51f25d534b24d42794?s=128&d=identicon&r=PG", "display_name": "Hong Jiang", "link": "https://stackoverflow.com/users/52603/hong-jiang"}, "edited": false, "score": 0, "creation_date": 1552447842, "post_id": 55056913, "comment_id": 97008823, "body": "The OP may not be able to use move though. I think it depends on the context."}], "tags": [], "owner": {"reputation": 2110, "user_id": 52603, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/394a0290d36a5f51f25d534b24d42794?s=128&d=identicon&r=PG", "display_name": "Hong Jiang", "link": "https://stackoverflow.com/users/52603/hong-jiang"}, "is_accepted": false, "score": 1, "last_activity_date": 1552020674, "creation_date": 1552020674, "answer_id": 55056913, "question_id": 55056232, "link": "https://stackoverflow.com/questions/55056232/how-to-extract-elements-of-a-vector-of-strings-in-rust/55056913#55056913", "title": "How to extract elements of a vector of strings in Rust?", "body": "<p>You cannot have \"holes\" in a vector. So when you move something out of it, you either change the indices of the remaining elements (using <code>remove</code> or <code>swap_remove</code>), or replace it with something else.</p>\n\n<p>Why don't you just consume the vector in order and ignore what you don't need? If you need to save some of the elements for later use, you can use <code>data.iter().filter(...).collect()</code>. If you really want to avoid copying any strings, you can wrap them in <code>Rc</code> so that only pointers are copied.</p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 993, "favorite_count": 0, "accepted_answer_id": 55056799, "answer_count": 2, "score": 2, "last_activity_date": 1552020674, "creation_date": 1552015089, "question_id": 55056232, "link": "https://stackoverflow.com/questions/55056232/how-to-extract-elements-of-a-vector-of-strings-in-rust", "title": "How to extract elements of a vector of strings in Rust?", "body": "<p>Let's say I have the following <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=699e45494bb6578f5ca9ee10cae4117b\" rel=\"nofollow noreferrer\">code</a>:</p>\n\n<pre><code>fn extract() -&gt; Vec&lt;String&gt; {\n    let data = vec![\"aaa\".to_string(), \"bbb\".to_string(), \"ccc\".to_string()];\n    vec![data[0], data[2]]\n}\n</code></pre>\n\n<p>In practice, I read <code>data</code> from a file.</p>\n\n<p>Obviously, this doesn't compile because I'm pulling strings out of the vector <code>data</code>, leaving the vector in an undefined state. But, conceptually, it should work, because I'm not using <code>data</code> afterwards anyway.</p>\n\n<p>I can use <code>mem::replace</code>, but this seems crazy:</p>\n\n<pre><code>fn extract() -&gt; Vec&lt;String&gt; {\n    let mut data = vec![\"aaa\".to_string(), \"bbb\".to_string(), \"ccc\".to_string()];\n    let a = mem::replace(&amp;mut data[0], \"\".to_string());\n    let c = mem::replace(&amp;mut data[2], \"\".to_string());\n    vec![a, c]\n}\n</code></pre>\n\n<p>How do I go about extracting specific elements from the vector without having to clone the strings?</p>\n"}, {"tags": ["rust", "rust-cargo", "terminal-emulator", "secure-crt"], "comments": [{"owner": {"reputation": 6451, "user_id": 1827457, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/36a4fa28b2cfce2c219592f7880e4008?s=128&d=identicon&r=PG", "display_name": "LtWorf", "link": "https://stackoverflow.com/users/1827457/ltworf"}, "edited": false, "score": 2, "creation_date": 1551983378, "post_id": 55050435, "comment_id": 96851046, "body": "Probably your terminal is shit. Which are you using?"}, {"owner": {"reputation": 2037, "user_id": 9812548, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VS24T.jpg?s=128&g=1", "display_name": "Dan Anderson", "link": "https://stackoverflow.com/users/9812548/dan-anderson"}, "reply_to_user": {"reputation": 6451, "user_id": 1827457, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/36a4fa28b2cfce2c219592f7880e4008?s=128&d=identicon&r=PG", "display_name": "LtWorf", "link": "https://stackoverflow.com/users/1827457/ltworf"}, "edited": false, "score": 1, "creation_date": 1551984036, "post_id": 55050435, "comment_id": 96851348, "body": "I was using TERM=ansi through a ssh client, SecureCRT. I changed it to something simple (without color), TERM=vt100 and it works OK."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1551988365, "post_id": 55050435, "comment_id": 96853438, "body": "Terminal setting issues are (usually) nigh-impossible to reproduce and (usually) have little to do with the program you&#39;re running, but have something to do with your environment. What about <code>ls --color=always</code>? What terminal program are you running in (Konsole, xterm, PuTTY...)?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1551995784, "post_id": 55050435, "comment_id": 96856556, "body": "My mistake, I didn&#39;t realize that your SSH client was also a terminal emulator. I would suggest asking on some forum or documentation specific to SecureCRT because it likely has something to do with the terminal emulation mode."}, {"owner": {"reputation": 2037, "user_id": 9812548, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VS24T.jpg?s=128&g=1", "display_name": "Dan Anderson", "link": "https://stackoverflow.com/users/9812548/dan-anderson"}, "edited": false, "score": 0, "creation_date": 1552069653, "post_id": 55050435, "comment_id": 96885393, "body": "I run SecureCRT, which is similar to PuTTY and other terminal programs.  <code>ls --color=always</code> works, as does all the other color output.  Just <code>rustc</code> is broken. Of course, maybe <code>rustc</code> uses something the other color output programs do not use.  The workaround, for the benefit of others, is to pipe the stderr output to <code>cat -v</code> so <code>rustc</code> cannot corrupt the terminal.  For example, <code>cargo build 2&gt;&amp;1 | cat -v</code>"}, {"owner": {"reputation": 6451, "user_id": 1827457, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/36a4fa28b2cfce2c219592f7880e4008?s=128&d=identicon&r=PG", "display_name": "LtWorf", "link": "https://stackoverflow.com/users/1827457/ltworf"}, "edited": false, "score": 0, "creation_date": 1552087212, "post_id": 55050435, "comment_id": 96892316, "body": "Maybe TERM is set wrong\u2026 try setting it to xterm?"}], "owner": {"reputation": 2037, "user_id": 9812548, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/VS24T.jpg?s=128&g=1", "display_name": "Dan Anderson", "link": "https://stackoverflow.com/users/9812548/dan-anderson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 83, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1552090473, "creation_date": 1551982854, "last_edit_date": 1552090473, "question_id": 55050435, "link": "https://stackoverflow.com/questions/55050435/why-is-rust-cargo-build-output-corrupted-in-securecrt", "title": "Why is Rust `cargo build` output corrupted in SecureCRT?", "body": "<p>When I run <code>cargo build</code> it prints non-printable characters, which lock the terminal.  I can workaround it, but I wonder why a tool would do that and how do I prevent it?</p>\n\n<p>For example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\n   Compiling crypto-speed v0.1.0 (/home/dano/rust/speed)\nerror[E0277]: `std::time::Duration` doesn't implement `std::fmt::Display`\n  \ud34a     \u06fd\u06f0\u06f0\ud34a     \u06fd\u06f0      \u06fd\u06f0                                              \ud34a     \u06fd\u06f0\u06f0\ud34a     \u06fd\u06f0\u5eba\ud34a     \u06fd\u06f0  \u06f0\ud34a     \u06fd\u06f0  \u06fd   \u06fd\u06f0\u06f0\ud34a     \u06fd   \u06fd\u06f0   \ud34a     \u06fd \u5b8d\n                                                                         \u06f0 \n</code></pre>\n\n<p>I run SecureCRT, which is similar to PuTTY and other terminal programs. <code>ls --color=always</code> works, as does all the other color output. Just <code>rustc</code> is broken.</p>\n"}, {"tags": ["c", "rust", "ptrace"], "answers": [{"tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 3, "last_activity_date": 1552035070, "last_edit_date": 1552035070, "creation_date": 1551997737, "answer_id": 55053835, "question_id": 55048715, "link": "https://stackoverflow.com/questions/55048715/how-to-get-the-offset-of-a-given-cpu-register-in-rust/55053835#55053835", "title": "How to get the offset of a given CPU register in Rust", "body": "<blockquote>\n  <p>It's been a long time since I poked Linux kernel (Mac user now). Buf if I remember it correctly then ...</p>\n</blockquote>\n\n<h1>Kernel headers</h1>\n\n<p>Install kernel headers with something like <code>sudo apt-get install linux-headers-$(uname -r)</code>. Let's say that you're on <code>x86_64-linux-gnu</code> (guess based on your <code>rax</code> interest).</p>\n\n<p>Open <code>/usr/include/x86_64-linux-gnu/sys/reg.h</code> header:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>...\n#ifdef __x86_64__\n/* Index into an array of 8 byte longs returned from ptrace for\n   location of the users' stored general purpose registers.  */\n\n# define R15    0\n# define R14    1\n# define R13    2\n# define R12    3\n# define RBP    4\n# define RBX    5\n# define R11    6\n# define R10    7\n# define R9     8\n# define R8     9\n# define RAX    10\n...\n</code></pre>\n\n<p>And the comment says:</p>\n\n<blockquote>\n  <p>Index into an array of 8 byte longs returned from ptrace for location of the users' stored general purpose registers.</p>\n</blockquote>\n\n<p>All those macros (<code>RAX</code>, <code>RCX</code>, ...) define <strong>indexes</strong> for particular registers. And because each one is 8 byte long (<code>x86_64</code> only), the offset is <code>8 * $index</code>. In case of <code>rax</code> register, the offset is calculcated as <code>8 * RAX = 8 * 10 = 80</code>. <code>80</code> is what you should use for the <code>addr</code> argument in the <code>ptrace</code> function call. This is how it works. Be aware that it differs for other architectures, etc.</p>\n\n<h1>PTRACE_*</h1>\n\n<p><code>PTRACE_PEEKUSER</code> - use for registers and other debug info.</p>\n\n<p><code>PTRACE_PEEKDATA</code> - use for program data &amp; code.</p>\n\n<p><code>PTRACE_PEEKTEXT</code> - <code>man ptrace</code> (Linux) says - <em>Copy the word data to the address addr in the tracee's memory. As for <code>PTRACE_PEEKTEXT</code> and <code>PTRACE_PEEKDATA</code>, these two requests are currently equivalent.</em> That's because Linux doesn't have separate address spaces for text and data.</p>\n\n<h1>Rust &amp; PTRACE_PEEKUSER</h1>\n\n<p>The <code>nix</code> crate offers <a href=\"https://docs.rs/nix/0.13.0/nix/sys/ptrace/fn.getregs.html\" rel=\"nofollow noreferrer\">getregs</a> function to read all of them. It returns <code>libc</code> <a href=\"https://docs.rs/libc/0.2.50/libc/struct.user_regs_struct.html\" rel=\"nofollow noreferrer\">user_regs_struct</a>. Which is supported for Linux only:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/libc/blob/0.2.50/src/unix/notbsd/linux/other/b32/x86.rs#L34\" rel=\"nofollow noreferrer\">x86 user_regs_struct</a></li>\n<li><a href=\"https://github.com/rust-lang/libc/blob/0.2.50/src/unix/notbsd/linux/other/b64/x86_64.rs#L115\" rel=\"nofollow noreferrer\">x86_64 user_regs_struct</a></li>\n</ul>\n\n<p><code>libc</code> crate also contains those indexes as well:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/libc/blob/0.2.50/src/unix/notbsd/linux/other/b32/x86.rs#L843\" rel=\"nofollow noreferrer\">x86 indexes</a></li>\n<li><a href=\"https://github.com/rust-lang/libc/blob/0.2.50/src/unix/notbsd/linux/other/b64/x86_64.rs#L715\" rel=\"nofollow noreferrer\">x86_64 indexes</a></li>\n</ul>\n\n<p>If you're interested in one register only, you can use this index to calculate offset / addr for the <a href=\"https://docs.rs/nix/0.13.0/nix/sys/ptrace/fn.ptrace.html\" rel=\"nofollow noreferrer\">ptrace</a> function. Multiply it with <code>8</code> (<code>#[cfg(target_arch = \"x86_64\")]</code>) / <code>4</code> (<code>#[cfg(target_arch = \"x86\")]</code>) and use <code>PTRACE_PEEKUSER</code> to read it (see <a href=\"https://docs.rs/nix/0.13.0/nix/sys/ptrace/enum.Request.html\" rel=\"nofollow noreferrer\">Request</a>).</p>\n\n<h1>Rust &amp; PTRACE_PEEKDATA</h1>\n\n<p>Read <a href=\"https://stackoverflow.com/questions/2535989/what-are-the-calling-conventions-for-unix-linux-system-calls-on-i386-and-x86-6/2538212#2538212\">What are the calling conventions for UNIX &amp; Linux system calls on i386 and x86-64</a>. In other words, you're interested in <code>rdi</code>, <code>rsi</code>, <code>rdx</code>, ... registers. The <code>nix</code> crate provides specialized <a href=\"https://docs.rs/nix/0.13.0/nix/sys/ptrace/fn.read.html\" rel=\"nofollow noreferrer\">read</a> function, which <a href=\"https://docs.rs/nix/0.13.0/src/nix/sys/ptrace/linux.rs.html#399-401\" rel=\"nofollow noreferrer\">internally calls</a> <code>ptrace</code> function with <code>PTRACE_PEEKDATA</code>.</p>\n\n<h1>nix crate</h1>\n\n<p><code>ptrace</code> function is deprecated. Documentation note:</p>\n\n<blockquote>\n  <p>Deprecated since 0.10.0: usages of ptrace() should be replaced with the specialized helper functions instead</p>\n</blockquote>\n\n<p>You should use specialized functions like <code>getregs</code> &amp; <code>read</code>. You can find list of them <a href=\"https://docs.rs/nix/0.13.0/nix/sys/ptrace/index.html#functions\" rel=\"nofollow noreferrer\">in the documentation</a>.</p>\n"}], "owner": {"reputation": 43, "user_id": 4425470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7vTwK.jpg?s=128&g=1", "display_name": "TheWhiteCong", "link": "https://stackoverflow.com/users/4425470/thewhitecong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 462, "favorite_count": 0, "accepted_answer_id": 55053835, "answer_count": 1, "score": 4, "last_activity_date": 1552035070, "creation_date": 1551976506, "question_id": 55048715, "link": "https://stackoverflow.com/questions/55048715/how-to-get-the-offset-of-a-given-cpu-register-in-rust", "title": "How to get the offset of a given CPU register in Rust", "body": "<p>As an exercise, I've been trying to use Rust's <code>nix::sys::ptrace::ptrace</code> (which is pretty much identical to C's ptrace) to emulate <code>strace</code>'s syscall logging functionality by reading the contents of the RAX/RBX/RCX/RDX registers at the time of each syscall.  My desired output would be something similar to this:</p>\n\n<pre><code>Found syscall: 4\nArg1: 1\nArg2: Hello World!\n</code></pre>\n\n<p>From the examples I've found online, it seems that a combination of <code>PTRACE_PEEKUSER</code> and <code>PTRACE_PEEKDATA</code> would be best for accomplishing this (maybe <code>PTRACE_GETREGS</code> too?), but I'm having a hard time understanding how to satisfy the 3rd argument that I need to pass to these functions in order to make it work.</p>\n\n<p><code>ptrace</code>'s man pages list this example demonstrating the proper usage:</p>\n\n<pre><code>ptrace(PTRACE_PEEKTEXT/PEEKDATA/PEEKUSER, pid, addr, 0);\n</code></pre>\n\n<p>The man page just says, \"Read a word at the address <code>addr</code> in the tracee's memory.\" But what is <code>addr</code> supposed to be?  How can I determine the correct address to satisfy this argument?</p>\n\n<p>The examples that I've found online all have something like:</p>\n\n<pre><code>ptrace(PTRACE_PEEKUSER, pid, sizeof(long)*ORIG_EAX, 0);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>ptrace(PTRACE_PEEKUSER, pid, somenumber*RAX, 0)\n</code></pre>\n\n<p>How can I find/calculate the offset of these registers during runtime? (in Rust!)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1551959939, "post_id": 55043020, "comment_id": 96837220, "body": "The second question is answered <a href=\"https://stackoverflow.com/q/29428227/1233251\">here</a>. You might want to stick to the first one."}], "answers": [{"comments": [{"owner": {"reputation": 139, "user_id": 10907660, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UljqA.png?s=128&g=1", "display_name": "Julia O", "link": "https://stackoverflow.com/users/10907660/julia-o"}, "edited": false, "score": 0, "creation_date": 1552187559, "post_id": 55044697, "comment_id": 96913748, "body": "Thanks for your comment @phimuemue. What is the difference between &#39;return&#39; and &#39;break&#39; with return value? Either makes any difference?"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "reply_to_user": {"reputation": 139, "user_id": 10907660, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UljqA.png?s=128&g=1", "display_name": "Julia O", "link": "https://stackoverflow.com/users/10907660/julia-o"}, "edited": false, "score": 0, "creation_date": 1552225412, "post_id": 55044697, "comment_id": 96921425, "body": "@JuliaO <code>return</code> returns from the whole function, while <code>break</code> prematurely exits a loop."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1551964449, "creation_date": 1551964449, "answer_id": 55044697, "question_id": 55043020, "link": "https://stackoverflow.com/questions/55043020/scope-of-let-with-shadowing-and-string-str-conversion/55044697#55044697", "title": "Scope of &#39;let&#39; with shadowing and String -&gt; &amp;str conversion", "body": "<p>Regarding question 1, you can <code>break</code> out of the loop with a value:</p>\n\n<pre><code>fn gettemp() -&gt; f32 {\n    let mut temp = String::new();\n\n    loop {\n        println!(\"What is your temperature?\");\n\n        io::stdin().read_line(&amp;mut temp).expect(\"Failed to read the line\");\n\n        let temp = temp.trim().parse::&lt;f32&gt;();\n\n        if !temp.is_ok() {\n            println!(\"Not a number!\");\n        } else {\n            break temp.unwrap() // yield value when breaking out of loop\n        }\n    }\n}\n</code></pre>\n\n<p>This way, the whole loop's value is the thing you passed along with <code>break</code>.</p>\n\n<p>Regarding question 2, I am not sure if you really want to do this, because <code>&amp;str</code> is a borrowed type. I think you want to return an <code>String</code> in this case which owns the data.</p>\n"}, {"comments": [{"owner": {"reputation": 139, "user_id": 10907660, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UljqA.png?s=128&g=1", "display_name": "Julia O", "link": "https://stackoverflow.com/users/10907660/julia-o"}, "edited": false, "score": 0, "creation_date": 1552191732, "post_id": 55051149, "comment_id": 96914291, "body": "My question is why we don&#39;t need to explicitly state &lt;f32&gt; in &#39;temp.trim().parse()&#39; I looked at documentation that states &quot;Parses this string slice into another type.&quot; Can you elaborate on this, please?"}, {"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "reply_to_user": {"reputation": 139, "user_id": 10907660, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UljqA.png?s=128&g=1", "display_name": "Julia O", "link": "https://stackoverflow.com/users/10907660/julia-o"}, "edited": false, "score": 0, "creation_date": 1552209813, "post_id": 55051149, "comment_id": 96917492, "body": "@JuliaO I updated my answer. Check the <i>A3 - Why we don&#39;t need to explicitly state &lt;f32&gt; in temp.trim().parse()</i> at the end."}], "tags": [], "owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "is_accepted": true, "score": 1, "last_activity_date": 1552209759, "last_edit_date": 1552209759, "creation_date": 1551985698, "answer_id": 55051149, "question_id": 55043020, "link": "https://stackoverflow.com/questions/55043020/scope-of-let-with-shadowing-and-string-str-conversion/55051149#55051149", "title": "Scope of &#39;let&#39; with shadowing and String -&gt; &amp;str conversion", "body": "<p>A1 - nope, that's not how shadowing works. Let's look at your code with comments.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn gettemp() -&gt; f32 {\n    let temp = String::new(); // Outer\n\n    loop {\n        // There's no inner temp at this point, even in the second\n        // loop pass, etc.\n\n        println!(\"What is your temperature?\");\n\n        // Here temp refers to the outer one (outside of the loop)\n        io::stdin().read_line(&amp;mut temp).expect(\"Failed to read the line\");\n\n        // Shadowed temp = let's call it inner temp\n        let temp = temp.trim().parse::&lt;f32&gt;();\n        //    ^      ^\n        //    |      |- Outer temp\n        //    |- New inner temp\n\n        // temp refers to inner temp\n        if !temp.is_ok() {\n            println!(\"Not a number!\");\n        } else {\n            // Inner temp goes out of scope\n            break;\n        }\n\n        // Inner temp goes out of scope\n    }\n\n    // Here temp refers to outer one (String)\n    temp\n}\n</code></pre>\n\n<hr>\n\n<p>A2 - you can't return <code>&amp;str</code>. @E_net4 posted a link to the answer why. However, you can return <code>String</code>. You can do something like this nn case you'd like to have a validated <code>String</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn gettemp() -&gt; String {\n    loop {\n        println!(\"What is your temperature?\");\n\n        let mut temp = String::new();\n        io::stdin()\n            .read_line(&amp;mut temp)\n            .expect(\"Failed to read the line\");\n\n        let trimmed = temp.trim();\n\n        match trimmed.parse::&lt;f32&gt;() {\n            Ok(_) =&gt; return trimmed.to_string(),\n            Err(_) =&gt; println!(\"Not a number!\"),\n        };\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>I see couple of another problems in your code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let temp = String::new();\n</code></pre>\n\n<p>Should be <code>let mut temp</code>, because you'd like to borrow mutable reference later (<code>&amp;mut temp</code> in the <code>read_line</code> call).</p>\n\n<p>Another issue is the <code>loop</code> &amp; <code>read_line</code>. <code>read_line</code> appends to the <code>String</code>. Run this code ...</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut temp = \"foo\".to_string();\nio::stdin().read_line(&amp;mut temp).unwrap();\nprintln!(\"-&gt;{}&lt;-\", temp);\n</code></pre>\n\n<p>... and enter <code>10</code> for example. You'll see following output ...</p>\n\n<pre><code>-&gt;foo10\n&lt;-\n</code></pre>\n\n<p>... which is not what you want. I'd rewrite <code>gettemp()</code> in this way:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn gettemp() -&gt; f32 {\n    loop {\n        println!(\"What is your temperature?\");\n\n        let mut temp = String::new();\n        io::stdin()\n            .read_line(&amp;mut temp)\n            .expect(\"Failed to read the line\");\n\n        match temp.trim().parse() {\n            Ok(temp) =&gt; return temp,\n            Err(_) =&gt; println!(\"Not a number!\"),\n        };\n    }\n}\n</code></pre>\n\n<p>IMHO explicit <code>return temp</code> is much cleaner &amp; readable (compared to suggested break out of the loop with a value).</p>\n\n<hr>\n\n<p>A3 - Why we don't need to explicitly state <code>&lt;f32&gt;</code> in <code>temp.trim().parse()</code></p>\n\n<p>It's inferred by the compiler.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn gettemp() -&gt; f32 { // 1. f32 is return type\n    loop {\n        println!(\"What is your temperature?\");\n\n        let mut temp = String::new();\n        io::stdin()\n            .read_line(&amp;mut temp)\n            .expect(\"Failed to read the line\");\n\n        match temp.trim().parse() {\n        // 4. parse signature is pub fn parse&lt;F&gt;(&amp;self) -&gt; Result&lt;F, ...&gt;\n        //    compiler knows it must be Result&lt;f32, ...&gt;\n        //    Result&lt;f32, ...&gt; = Result&lt;F, ...&gt; =&gt; F = f32\n        //    F was inferred and there's no need to explicitly state it\n            Ok(temp) =&gt; return temp,\n            //  |                |\n            //  |      2. return type is f32, temp must be f32\n            //  |\n            //  | 3. temp must be f32, the parse result must be Result&lt;f32, ...&gt;            \n            Err(_) =&gt; println!(\"Not a number!\"),\n        };\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1552035656, "post_id": 55056301, "comment_id": 96867886, "body": "It&#39;s wrong, see my answer. First - <code>read_line</code> appends to the <code>temp</code> - try to enter <code>a&lt;enter&gt;10&lt;enter&gt;</code>. <code>temp</code> will contain <code>a\\n10\\n</code> and this <code>loop</code> will never end. Second - you&#39;re matching <code>temp.trim().parse::&lt;f32&gt;()</code> result and then you&#39;re returing untrimmed <code>temp</code> - try to enter <code>10&lt;enter&gt;</code> and the return value will be <code>&quot;10\\n&quot;</code>, not <code>&quot;10&quot;</code>, which isn&#39;t probably what you want."}, {"owner": {"reputation": 2110, "user_id": 52603, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/394a0290d36a5f51f25d534b24d42794?s=128&d=identicon&r=PG", "display_name": "Hong Jiang", "link": "https://stackoverflow.com/users/52603/hong-jiang"}, "reply_to_user": {"reputation": 17135, "user_id": 581190, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a503f14866aaa083332c81264860ac8e?s=128&d=identicon&r=PG", "display_name": "zrzka", "link": "https://stackoverflow.com/users/581190/zrzka"}, "edited": false, "score": 0, "creation_date": 1552040821, "post_id": 55056301, "comment_id": 96870548, "body": "@zrzka you&#39;re right. I didn&#39;t realize read_line appends to the buffer."}], "tags": [], "owner": {"reputation": 2110, "user_id": 52603, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/394a0290d36a5f51f25d534b24d42794?s=128&d=identicon&r=PG", "display_name": "Hong Jiang", "link": "https://stackoverflow.com/users/52603/hong-jiang"}, "is_accepted": false, "score": 0, "last_activity_date": 1552040949, "last_edit_date": 1552040949, "creation_date": 1552015709, "answer_id": 55056301, "question_id": 55043020, "link": "https://stackoverflow.com/questions/55043020/scope-of-let-with-shadowing-and-string-str-conversion/55056301#55056301", "title": "Scope of &#39;let&#39; with shadowing and String -&gt; &amp;str conversion", "body": "<p>In your program, <code>loop { ... }</code> creates a new scope. The scope of the second <code>temp</code> starts where it's defined and ends when <code>loop</code> ends. See the following example:</p>\n\n<pre><code>fn main() {\n    let a = 1;\n    {\n        let a = 2;\n        println!(\"{}\", a);\n    }\n    println!(\"{}\", a);\n}\n</code></pre>\n\n<p>This prints 2, 1\u3002</p>\n\n<p>If you want to return a string, use (the code is fixed according to the comment below):</p>\n\n<pre><code>fn gettemp() -&gt; String {\n    loop {\n        let mut temp = String::new();\n        println!(\"What is your temperature?\");\n        std::io::stdin().read_line(&amp;mut temp).expect(\"Failed to read the line\");\n        temp = temp.trim().to_string();\n        match temp.parse::&lt;f32&gt;() {\n            Err(_) =&gt; println!(\"Not a number!\"),\n            _ =&gt; return temp,\n        }\n    }\n}\n</code></pre>\n\n<p><code>&amp;str</code> is a borrowed reference. You cannot return a borrowed reference to a local variable which will be released when the function returns.</p>\n"}], "owner": {"reputation": 139, "user_id": 10907660, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UljqA.png?s=128&g=1", "display_name": "Julia O", "link": "https://stackoverflow.com/users/10907660/julia-o"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 55051149, "answer_count": 3, "score": 0, "last_activity_date": 1552209759, "creation_date": 1551959149, "last_edit_date": 1551996706, "question_id": 55043020, "link": "https://stackoverflow.com/questions/55043020/scope-of-let-with-shadowing-and-string-str-conversion", "title": "Scope of &#39;let&#39; with shadowing and String -&gt; &amp;str conversion", "body": "<p>With the following code, I tried to return &amp;str of temperature of user input, but in vain. Then, I am trying to return f32, but still struggle...</p>\n\n<p>Q1. The reason I am getting the error at the bottom is because the scope of '<code>let temp = String::new();</code>' still persists, even I 'shadow' it later by '<code>let temp = temp.trim().parse::&lt;f32&gt;();</code>' within the loop?</p>\n\n<p>Q2. How can I rewrite the code so that it returns &amp;str?</p>\n\n<pre><code>fn gettemp() -&gt; f32 {\n    let temp = String::new();\n\n    loop {\n        println!(\"What is your temperature?\");\n\n        io::stdin().read_line(&amp;mut temp).expect(\"Failed to read the line\");\n\n        let temp = temp.trim().parse::&lt;f32&gt;();\n\n        if !temp.is_ok() {\n            println!(\"Not a number!\");\n        } else {\n            break;\n        }\n    }\n\n    temp\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:70:5\n   |\n49 | fn gettemp() -&gt; f32 {\n   |                 --- expected `f32` because of return type\n...\n70 |     temp\n   |     ^^^^ expected f32, found struct `std::string::String`\n   |\n   = note: expected type `f32`\n              found type `std::string::String`\n</code></pre>\n"}, {"tags": ["c++", "gcc", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1551958590, "post_id": 55042666, "comment_id": 96836440, "body": "Have you tried &quot;cdylib&quot; as the <code>crate-type</code> instead of &quot;dylib&quot;?"}, {"owner": {"reputation": 1317, "user_id": 491709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1b07c5e8c90cd1d0e11e229c423f5cb?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/491709/stefan"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1551961605, "post_id": 55042666, "comment_id": 96838239, "body": "Same problem with &quot;cdylib&quot;"}, {"owner": {"reputation": 2531, "user_id": 1555662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7046fb9264a333e4c8ac89180f7fed20?s=128&d=identicon&r=PG", "display_name": "olivecoder", "link": "https://stackoverflow.com/users/1555662/olivecoder"}, "edited": false, "score": 0, "creation_date": 1551969699, "post_id": 55042666, "comment_id": 96843158, "body": "it works for me with gcc 8.2.0 on a mac"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 3, "creation_date": 1551975100, "post_id": 55042666, "comment_id": 96846629, "body": "Try putting the <code>-l gcc_linking</code> <i>after</i> the <code>hello.cpp</code> on the gcc command-line."}, {"owner": {"reputation": 1317, "user_id": 491709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1b07c5e8c90cd1d0e11e229c423f5cb?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/491709/stefan"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1551979693, "post_id": 55042666, "comment_id": 96849257, "body": "OMG, putting <code>-l gcc_linking</code> after <code>hello.cpp</code> <i>did</i> indeed work. Thank you very much @Jmb"}], "answers": [{"tags": [], "owner": {"reputation": 1317, "user_id": 491709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1b07c5e8c90cd1d0e11e229c423f5cb?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/491709/stefan"}, "is_accepted": true, "score": 0, "last_activity_date": 1552493914, "creation_date": 1552493914, "answer_id": 55146605, "question_id": 55042666, "link": "https://stackoverflow.com/questions/55042666/linking-a-dynamic-library-compiled-from-rust-with-gcc/55146605#55146605", "title": "Linking a dynamic library compiled from Rust with gcc", "body": "<p>As @Jmb suggested, the solution was to change the order of arguments to <code>gcc</code> and list the shared library <em>after</em> the C++ file:</p>\n\n<pre><code>gcc -L target/debug hello.cpp -l gcc_linking -o hello\n</code></pre>\n"}], "owner": {"reputation": 1317, "user_id": 491709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1b07c5e8c90cd1d0e11e229c423f5cb?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/491709/stefan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 446, "favorite_count": 0, "accepted_answer_id": 55146605, "answer_count": 1, "score": 5, "last_activity_date": 1552493914, "creation_date": 1551957872, "last_edit_date": 1551967616, "question_id": 55042666, "link": "https://stackoverflow.com/questions/55042666/linking-a-dynamic-library-compiled-from-rust-with-gcc", "title": "Linking a dynamic library compiled from Rust with gcc", "body": "<p>I'd like to build a dynamic library from a Rust program and link it to an existing C++ project. \nFor the C++ project, we are stuck on using gcc for compilation (a relatively old gcc 4.8.2, but I'm also trying with gcc 7.3.0 with the same issue).</p>\n\n<p>This is a minimal example of the issue:</p>\n\n<p>src/lib.rs</p>\n\n<pre><code>#[no_mangle]\npub unsafe extern \"C\" fn hello() {\n  println!(\"Hello World, Rust here!\");\n}\n</code></pre>\n\n<p>Cargo.toml</p>\n\n<pre><code>[package]\nname = \"gcc-linking\"\nversion = \"0.1.0\"\nauthors = ..\nedition = \"2018\"\n\n[lib]\ncrate-type = [\"dylib\"]\n\n[dependencies]\n</code></pre>\n\n<p>hello.cpp:</p>\n\n<pre><code>extern \"C\" void hello();\n\nint main() {\n\n    hello();\n    return 0;\n}\n</code></pre>\n\n<p>Now, when I link with <code>clang</code>, everything is fine:</p>\n\n<pre><code>cargo build --lib\nclang -L target/debug -l gcc_linking hello.cpp -o hello\nLD_LIBRARY_PATH=target/debug:$LD_LIBRARY_PATH ./hello\n</code></pre>\n\n<p>As expected, this results in:</p>\n\n<pre><code>Hello World, Rust here!\n</code></pre>\n\n<p>But if I try to link this with <code>gcc</code>, I get the following linking error:</p>\n\n<pre><code>gcc -L target/debug -l gcc_linking hello.cpp -o hello\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>/tmp/ccRdGJOK.o: In function `main':\nhello.cpp:(.text+0x5): undefined reference to `hello'\ncollect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>Looking at the dynamical library:</p>\n\n<pre><code># objdump -T output\n0000000000043f60 g    DF .text  0000000000000043  Base        hello\n# nm -gC output\n0000000000043f60 T hello\n</code></pre>\n\n<p>I suspect the problem has something to do with mangling of function names, but I cannot figure out how to solve it.</p>\n\n<p>Any ideas?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1788, "user_id": 2789560, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/46a017cbbb040e568f0e4f6c595f46d1?s=128&d=identicon&r=PG&f=1", "display_name": "Henning Koehler", "link": "https://stackoverflow.com/users/2789560/henning-koehler"}, "edited": false, "score": 0, "creation_date": 1551942028, "post_id": 55036950, "comment_id": 96826943, "body": "Thanks, the line I ended up with was <code>type BinaryMinHeap&lt;T&gt; = binary_heap_plus::BinaryHeap&lt;T, binary_heap_plus::MinComparator&gt;;</code>. I guess the answer is the <code>type</code> is more powerful than <code>use</code>."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 3, "last_activity_date": 1551938535, "last_edit_date": 1551938535, "creation_date": 1551938092, "answer_id": 55036950, "question_id": 55036744, "link": "https://stackoverflow.com/questions/55036744/rust-specify-template-arguments-during-use-as-import/55036950#55036950", "title": "Rust: specify template arguments during &quot;use ... as&quot; import", "body": "<blockquote>\n  <p>Is this possible?</p>\n</blockquote>\n\n<p>Yes it is possible like following:</p>\n\n<pre><code>pub type CustomResult&lt;T&gt; = Result&lt;T, MyError&gt;;\n\n#[derive(Debug)]\npub enum MyError {\n    MyError1,\n}\n\nfn result_returner(prm: i32) -&gt; CustomResult&lt;i32&gt; {\n    if prm == 1 {\n        Ok(5)\n    } else {\n        Err(MyError::MyError1)\n    }\n}\n</code></pre>\n\n<p>And also you can make such like type name changings on import as well:</p>\n\n<pre><code>use std::collections::HashMap as CustomNamedMap;\n\nfn main() {\n    let mut my_map = CustomNamedMap::new();\n    my_map.insert(1, 2);\n\n    println!(\"Value: {:?}\", my_map[&amp;1]);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8eca997ab5131727f4f13623331960a4\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 1788, "user_id": 2789560, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/46a017cbbb040e568f0e4f6c595f46d1?s=128&d=identicon&r=PG&f=1", "display_name": "Henning Koehler", "link": "https://stackoverflow.com/users/2789560/henning-koehler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 55036950, "answer_count": 1, "score": 3, "last_activity_date": 1551938535, "creation_date": 1551937052, "question_id": 55036744, "link": "https://stackoverflow.com/questions/55036744/rust-specify-template-arguments-during-use-as-import", "title": "Rust: specify template arguments during &quot;use ... as&quot; import", "body": "<p>I'm trying to specify a template parameter of an imported class, so that I don't need to specify it each time I want to use it. Something like this:</p>\n\n<pre><code>use self::binary_heap_plus::BinaryHeap&lt;T,MinComparator&gt; as BinaryMinHeap&lt;T&gt;;\n</code></pre>\n\n<p>Is this possible?</p>\n"}]