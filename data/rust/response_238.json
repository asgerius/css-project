[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564629981, "post_id": 57299622, "comment_id": 101096165, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=470002f8bde074ada9709524a83f0ea8\" rel=\"nofollow noreferrer\">The duplicate applied to your situation</a>, but I <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=617ccdade56b3dd6469f9881d044d203\" rel=\"nofollow noreferrer\">wouldn&#39;t use <code>collect</code> at all</a>"}, {"owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564685322, "post_id": 57299622, "comment_id": 101122450, "body": "did not realize that this had anything to do with the strings"}], "answers": [{"comments": [{"owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "edited": false, "score": 0, "creation_date": 1564684064, "post_id": 57300536, "comment_id": 101121894, "body": "Thanks. In the line in <code>parse</code>, <code>let query = args[1];</code>, does this mean that <code>query</code> is a reference?"}, {"owner": {"reputation": 6379, "user_id": 1619796, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/7e12dc9fccee496e5fffd2b6fc211a9d?s=128&d=identicon&r=PG", "display_name": "gregates", "link": "https://stackoverflow.com/users/1619796/gregates"}, "reply_to_user": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "edited": false, "score": 1, "creation_date": 1564700008, "post_id": 57300536, "comment_id": 101127160, "body": "What shows that <code>query</code> is a reference is the doc for <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html#tymethod.index\" rel=\"nofollow noreferrer\">std::ops::Index</a>, which is the trait that allows you to write <code>args[1]</code>. The return type for the <code>index</code> method (<code>[index]</code> is syntactic sugar) is <code>&amp;Self::Output</code>, which is indeed a reference."}], "tags": [], "owner": {"reputation": 6379, "user_id": 1619796, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/7e12dc9fccee496e5fffd2b6fc211a9d?s=128&d=identicon&r=PG", "display_name": "gregates", "link": "https://stackoverflow.com/users/1619796/gregates"}, "is_accepted": true, "score": 2, "last_activity_date": 1564620583, "creation_date": 1564620583, "answer_id": 57300536, "question_id": 57299622, "link": "https://stackoverflow.com/questions/57299622/unable-to-return-command-line-args-from-function/57300536#57300536", "title": "Unable to return command line args from function", "body": "<p>Strings are tricky in rust. First, let's review <a href=\"https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html\" rel=\"nofollow noreferrer\">\"What is Ownership?\"</a>, <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html#string-slices\" rel=\"nofollow noreferrer\">\"The Slice Type\"</a>, and <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">\"Lifetime Syntax\"</a> from the Rust Book.</p>\n\n<p>The problem is that an <code>&amp;str</code> is a borrow (indicated by the <code>&amp;</code>) of an object. The rust compiler needs to know how long it will be borrowed for. Now, rust will actually attempt <a href=\"https://doc.rust-lang.org/stable/error-index.html#E0106\" rel=\"nofollow noreferrer\">\"lifetime elision\"</a>, by assuming that the lifetime of the return value will match the lifetime of an input value, but in this case there are no input values, so it can't infer. It needs you to annotate the return type with an lifetime. You <em>can</em> use <code>'static</code>, but you can also give your function a generic lifetime specifier. Here's a simplified example:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=adbf65b4c610b83573e50b62e196915a\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    println!(\"{}\", gimme_str());\n}\n\nfn gimme_str() -&gt; &amp;str {\n    return \"foo\";\n}\n</code></pre>\n\n<p>That won't compile, either. But all you need to do to get it to compile is to add a lifetime, like so:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6cb72b0e10b4f7113722fb18fca0b003\" rel=\"nofollow noreferrer\">with Lifetime Specifier</a></p>\n\n<pre><code>fn main() {\n    println!(\"{}\", gimme_str());\n}\n\nfn gimme_str&lt;'a&gt;() -&gt; &amp;'a str {\n    return \"foo\";\n}\n</code></pre>\n\n<p>Alternatively, you could let the lifetime be inferred from the input, although in this case that's pretty weird since the input is unused:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2c7dfb05718ef038f586fe6eaed19feb\" rel=\"nofollow noreferrer\">with Lifetime Elision (inferred from input)</a></p>\n\n<pre><code>fn main() {\n    println!(\"{}\", gimme_str(\"bar\"));\n}\n\nfn gimme_str(_input: &amp;str) -&gt; &amp;str {\n    return \"foo\";\n}\n</code></pre>\n\n<p>So that's the lifetime specifier. But you have another issue, which is that your return values are slices of strings that are owned by the function. We can demonstrate the error in simplified form by modifying the previous rust playground code (the one with lifetime specifiers):</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=19804926be9e4056bc6b457875181fe3\" rel=\"nofollow noreferrer\">can't borrow local variables</a></p>\n\n<pre><code>fn main() {\n    println!(\"{}\", gimme_str());\n}\n\nfn gimme_str&lt;'a&gt;() -&gt; &amp;'a str {\n    let foo = String::from(\"foo\");\n    return &amp;foo;\n}\n</code></pre>\n\n<p>A borrow is always a borrow <em>of</em> something. In the previous example code, where I used a string literal, the <code>&amp;str</code> is a borrow of the <em>immutable string literal</em>. That's a part of the rust binary the compiler generates, and the <code>&amp;str</code> can just point to that part of the binary. You can think of the underlying memory as being \"owned\" by the binary itself, meaning that it never goes out of scope (i.e., the lifetime of a string literal is <code>'static</code>).</p>\n\n<p>However, in the modified example, <code>&amp;foo</code> is a borrow not of a string literal, but of a <code>String</code> object. That <code>String</code> object is assigned to a local variable, so its owner is the owner of that variable -- the function. That means that it will go out of scope and be dropped when the function exits. But once the <code>String</code> object no longer exists, it's not valid to borrow it.</p>\n\n<p>In order for the <code>String</code> to live beyond the scope of the function, we have to return the <code>String</code> itself, so that ownership is transferred to the caller. We can't just return a borrow. See example code:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cd0401ccfbecb0bb0d742bc7f2fea0f7\" rel=\"nofollow noreferrer\">transferring ownership from a function</a></p>\n\n<pre><code>fn main() {\n    println!(\"{}\", gimme_str());\n}\n\nfn gimme_str() -&gt; String {\n    let foo = String::from(\"foo\");\n    return foo;\n}\n</code></pre>\n\n<p>To apply that to your case, you're going to have to return <code>String</code> from your function, not <code>&amp;str</code>.</p>\n"}], "owner": {"reputation": 2446, "user_id": 5359531, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/b7636325b68a8f82a8f7b30fdfff251a?s=128&d=identicon&r=PG&f=1", "display_name": "user5359531", "link": "https://stackoverflow.com/users/5359531/user5359531"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 197, "favorite_count": 0, "closed_date": 1564629726, "accepted_answer_id": 57300536, "answer_count": 1, "score": 0, "last_activity_date": 1564629774, "creation_date": 1564612318, "last_edit_date": 1564629774, "question_id": 57299622, "link": "https://stackoverflow.com/questions/57299622/unable-to-return-command-line-args-from-function", "closed_reason": "Duplicate", "title": "Unable to return command line args from function", "body": "<p>I am trying to make a simple function to return the command line arguments. Code looks like this:</p>\n\n<pre><code>use std::env;\n\nfn main() {\n    let (query, filename) = parse();\n}\n\nfn parse() -&gt; (&amp;str, &amp;str) {\n    let args: Vec&lt;String&gt; = env::args().collect();\n    let query = args[1];\n    let filename = args[2];\n\n    return (query, filename)\n}\n</code></pre>\n\n<p>However it will not compile, the errors look like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n  --&gt; src/main.rs:15:22\n   |\n15 | fn parse() -&gt; (&amp;str, &amp;str) {\n   |                      ^ help: consider giving it a 'static lifetime: `&amp;'static`\n   |\n   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n</code></pre>\n\n<p>It suggests that I need to add <code>&amp;'static</code> to the function declaration, like this:</p>\n\n<pre><code>fn parse() -&gt; (&amp;'static str, &amp;'static str) {\n</code></pre>\n\n<p>But that does not work either;</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:20:13\n   |\n20 |     return (query, filename)\n   |             ^^^^^\n   |             |\n   |             expected reference, found struct `std::string::String`\n   |             help: consider borrowing here: `&amp;query`\n   |\n   = note: expected type `&amp;'static str`\n              found type `std::string::String`\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:20:20\n   |\n20 |     return (query, filename)\n   |                    ^^^^^^^^\n   |                    |\n   |                    expected reference, found struct `std::string::String`\n   |                    help: consider borrowing here: `&amp;filename`\n   |\n   = note: expected type `&amp;'static str`\n              found type `std::string::String`\n</code></pre>\n\n<p>It says I need to add borrowing, like this:</p>\n\n<pre><code>return (&amp;query, &amp;filename)\n</code></pre>\n\n<p>But that does not work either;</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused variable: `query`\n --&gt; src/main.rs:5:10\n  |\n5 |     let (query, filename) = parse();\n  |          ^^^^^ help: consider prefixing with an underscore: `_query`\n  |\n  = note: #[warn(unused_variables)] on by default\n\nwarning: unused variable: `filename`\n --&gt; src/main.rs:5:17\n  |\n5 |     let (query, filename) = parse();\n  |                 ^^^^^^^^ help: consider prefixing with an underscore: `_filename`\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:17:17\n   |\n17 |     let query = args[1];\n   |                 ^^^^^^^\n   |                 |\n   |                 cannot move out of borrowed content\n   |                 help: consider borrowing here: `&amp;args[1]`\n\nerror[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:18:20\n   |\n18 |     let filename = args[2];\n   |                    ^^^^^^^\n   |                    |\n   |                    cannot move out of borrowed content\n   |                    help: consider borrowing here: `&amp;args[2]`\n\nerror[E0515]: cannot return value referencing local variable `filename`\n  --&gt; src/main.rs:20:12\n   |\n20 |     return (&amp;query, &amp;filename)\n   |            ^^^^^^^^^---------^\n   |            |        |\n   |            |        `filename` is borrowed here\n   |            returns a value referencing data owned by the current function\n\nerror[E0515]: cannot return value referencing local variable `query`\n  --&gt; src/main.rs:20:12\n   |\n20 |     return (&amp;query, &amp;filename)\n   |            ^------^^^^^^^^^^^^\n   |            ||\n   |            |`query` is borrowed here\n   |            returns a value referencing data owned by the current function\n</code></pre>\n\n<p>No clue what is going on or why it does not work, I copied the example straight from the tutorial as well. </p>\n"}, {"tags": ["compiler-errors", "rust", "closures"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564628185, "post_id": 57299522, "comment_id": 101095892, "body": "Don&#39;t put line numbers in your code snippets. Code should be runnable, and random numbers in the source do not help that goal."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564628272, "post_id": 57299522, "comment_id": 101095908, "body": "By the way, idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, fields and modules; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564628409, "post_id": 57299522, "comment_id": 101095925, "body": "Your question is the same as the linked duplicate with <code>s&#47;constant&#47;function&#47;</code>."}], "owner": {"reputation": 198, "user_id": 3927292, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b59d9496cfeb2aa7167980b79854ec9b?s=128&d=identicon&r=PG&f=1", "display_name": "m1cky22", "link": "https://stackoverflow.com/users/3927292/m1cky22"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 109, "favorite_count": 0, "closed_date": 1564628383, "answer_count": 0, "score": 0, "last_activity_date": 1564629005, "creation_date": 1564611502, "last_edit_date": 1564628155, "question_id": 57299522, "link": "https://stackoverflow.com/questions/57299522/why-does-calling-a-closure-vs-a-function-defined-inside-a-macro-yield-different", "closed_reason": "Duplicate", "title": "Why does calling a closure vs a function defined inside a macro yield different results?", "body": "<p>This is a simplified example from some library code. For some reason, the function <code>m</code> is callable in that scope but the closure <code>n</code> isn't:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait TestTrait {\n    fn testFunc();\n}\n\nmacro_rules! custom {\n    ($body:expr) =&gt; {\n        fn testFunc() {\n            fn m() {}\n            let n = || {};\n            $body\n        }\n    };\n}\n\nmacro_rules! int_custom {\n    () =&gt; {\n        impl TestTrait for i32 {\n            custom!({\n                m();\n                n();\n            });\n        }\n    };\n}\n\nint_custom!();\n\nfn main() {\n    println!(\"Test\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find function `n` in this scope\n  --&gt; src/main.rs:20:17\n   |\n20 |                 n();\n   |                 ^ not found in this scope\n...\n26 | int_custom!();\n   | -------------- in this macro invocation\n</code></pre>\n\n<p>Why is this the case?</p>\n"}, {"tags": ["rust", "rust-proc-macros"], "answers": [{"tags": [], "owner": {"reputation": 33, "user_id": 7613834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fea8158e7d0ab6914cced8325d33174d?s=128&d=identicon&r=PG&f=1", "display_name": "Mitchell Turner", "link": "https://stackoverflow.com/users/7613834/mitchell-turner"}, "is_accepted": false, "score": 0, "last_activity_date": 1564609074, "creation_date": 1564609074, "answer_id": 57299165, "question_id": 57299112, "link": "https://stackoverflow.com/questions/57299112/convert-enum-variants-with-named-data-into-separate-structs-using-procedural-mac/57299165#57299165", "title": "Convert enum variants with named data into separate structs using procedural macros", "body": "<p>The problem is in the semi-colon in the <code>quote!()</code>.</p>\n\n<p>Structs with unnamed fields should be terminated with a semicolon:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct MultiUnNamed(bool, bool, bool);\n</code></pre>\n\n<p>But structs with named fields shouldn't:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct MultiNamed {\n    _thing: bool,\n    _thing2: bool\n}\n</code></pre>\n\n<p>The problem was solved by replacing:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>quote! {\n    pub struct #var_id #fields;\n}\n</code></pre>\n\n<p>with</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match &amp;v.fields {\n    Fields::Named(_) =&gt; {\n        quote! {\n            pub struct #var_id #fields\n        }\n    },\n    _ =&gt; {\n        quote! {\n            pub struct #var_id #fields;\n        }\n    }\n}\n</code></pre>\n\n<p>(Also had to import <code>syn::Fields</code>)</p>\n"}], "owner": {"reputation": 33, "user_id": 7613834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fea8158e7d0ab6914cced8325d33174d?s=128&d=identicon&r=PG&f=1", "display_name": "Mitchell Turner", "link": "https://stackoverflow.com/users/7613834/mitchell-turner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 169, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1564609074, "creation_date": 1564608697, "question_id": 57299112, "link": "https://stackoverflow.com/questions/57299112/convert-enum-variants-with-named-data-into-separate-structs-using-procedural-mac", "title": "Convert enum variants with named data into separate structs using procedural macros", "body": "<p>I'm writing a procedural macro to convert the variants of an enum into individual structs and implement some traits for that struct. </p>\n\n<p>This works fine for unit and unnamed variants, but variants with named data will cause it to silently fail :).</p>\n\n<p>Here is an example proc_macro definition:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate proc_macro;\nuse quote::ToTokens;\n\nuse proc_macro::TokenStream;\nuse quote::quote;\nuse syn::{Data, DataEnum, DeriveInput};\n\n#[proc_macro_derive(MyProcMacro)]\npub fn derive_my_proc_macro(input: TokenStream) -&gt; TokenStream {\n    let ast: DeriveInput = syn::parse(input).unwrap();\n\n    // Error out if we're not annotating an enum\n    let data: DataEnum = match ast.data {\n        Data::Enum(d) =&gt; d,\n        _ =&gt; panic!(\"My structs can only be derived for enums\"),\n    };\n    let variants = data.variants.iter();\n    let variant_structs = variants.map(|v| {\n        let var_id = &amp;v.ident;\n        let fields = v.fields.clone().into_token_stream();\n        quote! {\n            pub struct #var_id #fields;\n            /* Implement traits for the new struct and stuff */\n        }\n    });\n    let gen = quote! {\n        #(#variant_structs)*\n    };\n    gen.into()\n}\n</code></pre>\n\n<p>When I run it on this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(MyProcMacro)]\nenum AllTypesOfVariants {\n    Unit,\n    OneUnNamed(bool),\n    MultiUnNamed(bool, bool, bool),\n    Named { _thing: bool },\n    MultiNamed { _thing: bool, _thing2: bool },\n}\n</code></pre>\n\n<p>I get this expanded code (via <code>cargo expand</code>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\npub struct Unit;\npub struct OneUnNamed(bool);\npub struct MultiUnNamed(bool, bool, bool);\npub struct Named {\n    _thing: bool,\n}\n\n</code></pre>\n\n<p>The expected result however would be:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Unit;\npub struct OneUnNamed(bool);\npub struct MultiUnNamed(bool, bool, bool);\npub struct Named {\n    _thing: bool,\n}\npub struct MultiNamed {\n    _thing: bool,\n    _thing2: bool\n}\n</code></pre>\n"}, {"tags": ["testing", "rust", "closures", "ownership", "proptest"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564603693, "post_id": 57298078, "comment_id": 101090339, "body": "<i>Is there some mechanism available in no_std land like cell</i> \u2014 do you mean like <a href=\"https://doc.rust-lang.org/core/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>core::cell::Cell</code></a>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564603737, "post_id": 57298078, "comment_id": 101090360, "body": "Welcome to Stack Overflow! It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/57298078/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 11, "user_id": 11865349, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b806bafc5b4823a9751f367c7cefbf45?s=128&d=identicon&r=PG&f=1", "display_name": "rusty_prawn", "link": "https://stackoverflow.com/users/11865349/rusty-prawn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564603791, "post_id": 57298078, "comment_id": 101090380, "body": "Yea, would that work here to get around the function signature issue?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564604058, "post_id": 57298078, "comment_id": 101090475, "body": "We cannot tell you that because of my other comment. Without a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, anything we attempt is merely a guess. I would believe that you don&#39;t need <code>no_std</code> to reproduce your problem whatsoever. I&#39;d also believe that you could write 30-50 lines of code <b>total</b> in a brand new Cargo project that only uses proptest to reproduce the problem you are having."}, {"owner": {"reputation": 11, "user_id": 11865349, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b806bafc5b4823a9751f367c7cefbf45?s=128&d=identicon&r=PG&f=1", "display_name": "rusty_prawn", "link": "https://stackoverflow.com/users/11865349/rusty-prawn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564604478, "post_id": 57298078, "comment_id": 101090612, "body": "Sorry about that, it is a very large project with some restrictive IP issues that prevent me from posting large amounts of the code. I&#39;ll read your tips and try to narrow down a better more succinct code chunk if I am able.  Generally i am using nightly-7-14-2019, and the most recent versions of all crates although there are only about 3 of them &amp; they are not involved in what I am trying to test."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1564604707, "post_id": 57298078, "comment_id": 101090703, "body": "To be clear, we <b>do not want your code</b>. Period. Especially &quot;large amounts&quot;. There should be zero IP issues, because you take your code locally, minimize it, minimize it, minimize it, then give it some new names at the end (then minimize some more). That&#39;s what you post. It generally also cleans up your question because the fact that you are (a) using ARM (b) using <code>no_std</code> (c) using proptest (d) using nightly (e) using custom test frameworks simply isn&#39;t likely to be important to the root problem."}, {"owner": {"reputation": 11, "user_id": 11865349, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b806bafc5b4823a9751f367c7cefbf45?s=128&d=identicon&r=PG&f=1", "display_name": "rusty_prawn", "link": "https://stackoverflow.com/users/11865349/rusty-prawn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564606274, "post_id": 57298078, "comment_id": 101091276, "body": "I do not yet have the experience to determine on my own whether or not a)-e) might be relevant to the problem, so creating an MRE that excludes those things did not seem entirely possible. But I appreciate your feedback on how to post to stackoverflow so that people can more easily answer."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564607147, "post_id": 57298078, "comment_id": 101091593, "body": "no real experience is required, that\u2019s the best part! It\u2019s a fairly mechanical set of transformations: delete this argument, inline that function, hard code this value, etc. Everyone is capable of deleting code. The tips I link to mostly serve as a checklist to remind people what is available to minimize."}], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 11865349, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b806bafc5b4823a9751f367c7cefbf45?s=128&d=identicon&r=PG&f=1", "display_name": "rusty_prawn", "link": "https://stackoverflow.com/users/11865349/rusty-prawn"}, "is_accepted": false, "score": 0, "last_activity_date": 1564672722, "creation_date": 1564672722, "answer_id": 57312215, "question_id": 57298078, "link": "https://stackoverflow.com/questions/57298078/how-to-handle-passing-a-mutably-borrowed-struct-to-function-closure/57312215#57312215", "title": "How to handle passing a mutably borrowed struct to function closure?", "body": "<p>Found an answer that works, although there are likely others. What I found works is to use <code>core::cell::RefCell::new(obj)</code> to wrap the object. Then pass the <code>RefCell</code>-wrapped object to the function as a mutable borrow, by calling the <code>borrow_mut()</code> method provided by <code>RefCell</code></p>\n"}], "owner": {"reputation": 11, "user_id": 11865349, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b806bafc5b4823a9751f367c7cefbf45?s=128&d=identicon&r=PG&f=1", "display_name": "rusty_prawn", "link": "https://stackoverflow.com/users/11865349/rusty-prawn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1600236173, "creation_date": 1564603324, "last_edit_date": 1600236173, "question_id": 57298078, "link": "https://stackoverflow.com/questions/57298078/how-to-handle-passing-a-mutably-borrowed-struct-to-function-closure", "title": "How to handle passing a mutably borrowed struct to function closure?", "body": "<p>I am using the proptest crate to run some property tests in a no_std environment. proptest's  default <code>test_runner::TestRunner::run()</code> implementation takes some input (as a <code>Strategy</code> or <code>ValueTree</code> object defined in proptest) and a function closure as parameters so you can run however many tests you want with the values in the value tree or strategy. </p>\n\n<p>I need to test a function call that takes as an argument a mutably borrowed struct. This won't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow `*&lt;obj&gt;` as mutable, as it is a captured variable in a 'Fn' closure\n</code></pre>\n\n<p><code>obj</code> is the struct passed to <code>test_runner</code> via a function call one level up as a mutably borrowed object. </p>\n\n<p>Digging into the source code for proptest, it is clear the compilation error arises due to the function signature for <code>test_runner::TestRunner::run()</code> :</p>\n\n<pre><code>pub fn run&lt;S: Strategy&gt;(\n    &amp;mut self,\n    strategy: &amp;S,\n    test: impl Fn(S::Value) -&gt; TestCaseResult,\n) -&gt; TestRunResult&lt;S&gt;\n</code></pre>\n\n<p>The parameter would need to be <code>FnMut</code> so that captured variables can be mutable in the function call. My question is: is there an idomatic rust way of doing this?</p>\n\n<p>Here is the function passed from a conditionally compiled run func:</p>\n\n<pre><code>fn test_mod(runner: &amp;mut TestRunner, obj: &amp;mut MyObjStruct) -&gt; Result&lt;(), TestError(u32)&gt;&gt;{\n    runner.run(&amp;(0x400_0000u32..0xe00_0000u32), |addr| {\n        if mod::test::test_page_map(addr, obj).is_ok() {\n            Ok(())\n        } else {\n            Err(TestCaseError::fail(Reason::from(\"Failed to map address\")))\n        }\n    })\n}\n</code></pre>\n\n<p><code>mod::test::test_page_map</code> takes <code>obj</code>, uses relevant metadata in the struct, updates that data accordingly, and maps a page to the input address. It returns a result based on whether or not the map succeeded. It is  worth noting that I am not able to clone the object. </p>\n\n<p>Does anyone see a way around this problem that is in line with 'the Rust way'? Is there some mechanism available in no_std land like <code>Cell</code> or something that I can wrap the mutable object with so it has interior mutability but can be passed as a captured variable to a 'Fn' closure? I am very new to Rust so unsure how this sort of thing is usually handled.</p>\n\n<p></p>\n"}, {"tags": ["json", "rust", "llvm", "cross-compiling"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1564602858, "post_id": 57297881, "comment_id": 101090042, "body": "Some cursory internet searches for <a href=\"https://www.google.com/search?q=avr+rust\" rel=\"nofollow noreferrer\">&quot;avr rust&quot;</a> lead to the <a href=\"https://github.com/avr-rust/\" rel=\"nofollow noreferrer\">AVR Rust project</a>, where you will learn that <i>Rust doesn&#39;t support AVR yet</i>. Clicking through the READMEs (which you should read) will get you to <a href=\"https://github.com/avr-rust/blink/blob/master/avr-atmega328p.json\" rel=\"nofollow noreferrer\">one of many possible JSON target files</a>"}, {"owner": {"reputation": 72, "user_id": 9841127, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "jgh fun-run", "link": "https://stackoverflow.com/users/9841127/jgh-fun-run"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564604561, "post_id": 57297881, "comment_id": 101090651, "body": "I&#39;ve actually seen that project, but I didn&#39;t see the JSON file, thanks for that. I still would like to know how the formatting works, but I will look at this thank you."}], "answers": [{"comments": [{"owner": {"reputation": 21162, "user_id": 7733418, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b08876b87c096cd006f66820ffc67f27?s=128&d=identicon&r=PG", "display_name": "Yunnosch", "link": "https://stackoverflow.com/users/7733418/yunnosch"}, "edited": false, "score": 0, "creation_date": 1605170592, "post_id": 64799885, "comment_id": 114570708, "body": "A link to a solution is welcome, but please ensure your answer is useful without it: <a href=\"//meta.stackexchange.com/a/8259\">add context around the link</a> so your fellow users will have some idea what it is and why it\u2019s there, then quote the most relevant part of the page you&#39;re linking to in case the target page is unavailable. <a href=\"/help/deleted-answers\">Answers that are little more than a link may be deleted.</a>"}, {"owner": {"reputation": 21162, "user_id": 7733418, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b08876b87c096cd006f66820ffc67f27?s=128&d=identicon&r=PG", "display_name": "Yunnosch", "link": "https://stackoverflow.com/users/7733418/yunnosch"}, "edited": false, "score": 0, "creation_date": 1605170631, "post_id": 64799885, "comment_id": 114570727, "body": "If linking to a file in the web is the only possible answer to this question, then the question would be off-topic for asking for a reference to a resource, i.e. it would be flaggable as &quot;Seeking recommendations for books, tools, software libraries, and more&quot;."}], "tags": [], "owner": {"reputation": 93, "user_id": 10960543, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2HzwlE_ed1Q/AAAAAAAAAAI/AAAAAAAAC94/cRKOwCvFKkw/photo.jpg?sz=128", "display_name": "Pawan Bisht", "link": "https://stackoverflow.com/users/10960543/pawan-bisht"}, "is_accepted": false, "score": 0, "last_activity_date": 1605276024, "last_edit_date": 1605276024, "creation_date": 1605167712, "answer_id": 64799885, "question_id": 57297881, "link": "https://stackoverflow.com/questions/57297881/how-do-i-set-up-a-custom-target-triplet-for-rust-using-json/64799885#64799885", "title": "How do I set up a custom target triplet for Rust, using JSON?", "body": "<p>You can find JSON file where you can put multiple configuration to create you custom target triple: <a href=\"https://book.avr-rust.com/005.1-the-target-specification-json-file.html\" rel=\"nofollow noreferrer\">https://book.avr-rust.com/005.1-the-target-specification-json-file.html</a>\nAnd if you still need to understand some basic details then you can refer to this tutorial as well: <a href=\"https://os.phil-opp.com/minimal-rust-kernel/#target-specification\" rel=\"nofollow noreferrer\">https://os.phil-opp.com/minimal-rust-kernel/#target-specification</a></p>\n"}], "owner": {"reputation": 72, "user_id": 9841127, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "jgh fun-run", "link": "https://stackoverflow.com/users/9841127/jgh-fun-run"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 279, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1605276024, "creation_date": 1564602187, "last_edit_date": 1571859740, "question_id": 57297881, "link": "https://stackoverflow.com/questions/57297881/how-do-i-set-up-a-custom-target-triplet-for-rust-using-json", "title": "How do I set up a custom target triplet for Rust, using JSON?", "body": "<p>I have done cross compilation with Rust before, but <a href=\"https://os.phil-opp.com/minimal-rust-kernel/#putting-it-together\" rel=\"nofollow noreferrer\">where I got the JSON</a> didn't explain anything about creating one outside of what we need to change from the x86_64 Linux target, but I need an avr8 target. This requires rewriting most of the file.</p>\n\n<p>That blog post is all I know about cross-compilation with Rust, but I have setup GCC cross compilers.</p>\n"}, {"tags": ["build", "rust", "embedded"], "answers": [{"comments": [{"owner": {"reputation": 309, "user_id": 4112863, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93f4664550548f6a59c647dd20b0484e?s=128&d=identicon&r=PG", "display_name": "pyrsmk", "link": "https://stackoverflow.com/users/4112863/pyrsmk"}, "edited": false, "score": 0, "creation_date": 1594886387, "post_id": 57297283, "comment_id": 111285162, "body": "To be more compliant with Rust good practices, and also to avoid panics, your example should match against <code>std::env::var(&quot;PROFILE&quot;)</code> directly, so it can take actions when an Err is returned."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 2, "last_activity_date": 1564599392, "creation_date": 1564599392, "answer_id": 57297283, "question_id": 57296104, "link": "https://stackoverflow.com/questions/57296104/how-to-access-current-cargo-profile-debug-release-from-the-build-script-bu/57297283#57297283", "title": "How to access current cargo profile (debug/release, \u2026) from the build script (build.rs)", "body": "<p>It's written in the <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-build-scripts\" rel=\"nofollow noreferrer\">doc</a>:</p>\n\n<blockquote>\n  <p><code>PROFILE</code> - <code>\"release\"</code> for release builds, <code>\"debug\"</code> for other builds.</p>\n</blockquote>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let profile = std::env::var(\"PROFILE\").unwrap();\n    match profile.as_str() {\n        \"debug\" =&gt; (),\n        \"release\" =&gt; (),\n        _ =&gt; (),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1315, "user_id": 1726544, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/aaa0d23522b46dfe52e90c41cfeff2a3?s=128&d=identicon&r=PG", "display_name": "&#193;kos Vandra", "link": "https://stackoverflow.com/users/1726544/%c3%81kos-vandra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 346, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1564599392, "creation_date": 1564593908, "question_id": 57296104, "link": "https://stackoverflow.com/questions/57296104/how-to-access-current-cargo-profile-debug-release-from-the-build-script-bu", "title": "How to access current cargo profile (debug/release, \u2026) from the build script (build.rs)", "body": "<p>In an embedded project, I usually run the debug mode with qemu, but need to build the release for a concrete microcontroller.</p>\n\n<p>The build.rs would need to know what the actual mode is (debug or release) to generate the correct memory layout. </p>\n\n<p>How can the build.rs make this decision?</p>\n\n<p>Related: <a href=\"https://stackoverflow.com/questions/36446642/how-to-access-current-cargo-profile-build-test-bench-doc-from-the-bui\">How to access current cargo profile (build, test, bench, doc, ....) from the build script (build.rs)</a></p>\n"}, {"tags": ["ssl", "rust", "rust-cargo", "certificate-authority"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564588769, "post_id": 57294283, "comment_id": 101083850, "body": "Hopefully you are already aware of the giant security risk you are in. Does your company have a proxy? In that case, use <a href=\"https://stackoverflow.com/q/47221811/155423\">cargo ssl download error behind proxy on windows</a> <a href=\"https://stackoverflow.com/q/39220694/155423\">Cargo on Windows behind a corporate proxy</a>"}, {"owner": {"reputation": 400, "user_id": 274825, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/Qr7cy.jpg?s=128&g=1", "display_name": "Krum", "link": "https://stackoverflow.com/users/274825/krum"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564588973, "post_id": 57294283, "comment_id": 101083960, "body": "No it&#39;s not a proxy.  It&#39;s an interception appliance."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 3, "last_activity_date": 1564590494, "last_edit_date": 1564590494, "creation_date": 1564589836, "answer_id": 57295149, "question_id": 57294283, "link": "https://stackoverflow.com/questions/57294283/where-is-cargos-certificate-authority-store/57295149#57295149", "title": "Where is Cargo&#39;s certificate authority store?", "body": "<p>I started <code>strace cargo fetch</code> in a random project, and it looks like, on Linux at least, <code>cargo</code> is just using my system certificates:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> 524 stat(\"/etc/pki/ca-trust/extracted/pem\", 0x7ffccad52c70) = -1 ENOENT (No such file or directory)\n 529 stat(\"/usr/local/share/cert.pem\", 0x7ffccad52da0) = -1 ENOENT (No such file or directory)\n 530 stat(\"/usr/local/share/certs.pem\", 0x7ffccad52da0) = -1 ENOENT (No such file or directory)\n 531 stat(\"/usr/local/share/certs/ca-certificates.crt\", 0x7ffccad52da0) = -1 ENOENT (No such file or directory)\n 532 stat(\"/usr/local/share/certs/ca-root-nss.crt\", 0x7ffccad52da0) = -1 ENOENT (No such file or directory)\n 533 stat(\"/usr/local/share/certs/ca-bundle.crt\", 0x7ffccad52da0) = -1 ENOENT (No such file or directory)\n 534 stat(\"/usr/local/share/CARootCertificates.pem\", 0x7ffccad52da0) = -1 ENOENT (No such file or directory)\n 535 stat(\"/usr/local/share/tls-ca-bundle.pem\", 0x7ffccad52da0) = -1 ENOENT (No such file or directory)\n 537 stat(\"/etc/ssl/cert.pem\", {st_mode=S_IFREG|0444, st_size=220132, ...}) = 0\n 571 openat(AT_FDCWD, \"/etc/ssl/cert.pem\", O_RDONLY) = 3\n</code></pre>\n\n<p><code>/etc/ssl/cert.pem</code> contains many certificates, and one of them is good enough for <code>cargo</code> by default.</p>\n\n<p>The registry is hosted by default on GitHub, which is ultimately signed by \"DigiCert High Assurance EV Root CA\" which is indeed contained in this file.</p>\n\n<p>On some distributions (although I do not know how standard that is), you can add a certificate to the system store using the command:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code># trust anchor your-cert.crt\n</code></pre>\n"}], "owner": {"reputation": 400, "user_id": 274825, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/Qr7cy.jpg?s=128&g=1", "display_name": "Krum", "link": "https://stackoverflow.com/users/274825/krum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 57295149, "answer_count": 1, "score": 3, "last_activity_date": 1564590494, "creation_date": 1564586961, "last_edit_date": 1564588823, "question_id": 57294283, "link": "https://stackoverflow.com/questions/57294283/where-is-cargos-certificate-authority-store", "title": "Where is Cargo&#39;s certificate authority store?", "body": "<p>We are unable to use Cargo because our IT department intercepts all HTTPS traffic and replaces the certificates.  I need to add the corporate root CA to Cargo's list of trusted CAs.  Where is the file Cargo uses to store these?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1564586489, "post_id": 57294038, "comment_id": 101082605, "body": "You could <code>impl Deref</code> and use <code>*a1</code>, I imagine?"}, {"owner": {"reputation": 6515, "user_id": 272924, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/WYhVU.jpg?s=128&g=1", "display_name": "dark_ruby", "link": "https://stackoverflow.com/users/272924/dark-ruby"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1564586540, "post_id": 57294038, "comment_id": 101082635, "body": "@jhpratt can you elaborate on your answer pls, and maybe provide an example implementation?"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1564586743, "post_id": 57294038, "comment_id": 101082726, "body": "Ryan&#39;s answer should suffice, but I&#39;ll give you an example of what I mentioned as well."}], "answers": [{"tags": [], "owner": {"reputation": 2208, "user_id": 401203, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/04af9d112970332f1413c5ee05e80f08?s=128&d=identicon&r=PG", "display_name": "Ryan S", "link": "https://stackoverflow.com/users/401203/ryan-s"}, "is_accepted": true, "score": 2, "last_activity_date": 1564586624, "creation_date": 1564586624, "answer_id": 57294171, "question_id": 57294038, "link": "https://stackoverflow.com/questions/57294038/how-to-implement-add-trait-without-consuming-the-value/57294171#57294171", "title": "How to implement Add trait without consuming the value", "body": "<p>You should be able to add <code>#[derive(Copy, Clone)]</code> to the struct, and then instead of consuming the value, it'll consume a copy.</p>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564588287, "post_id": 57294274, "comment_id": 101083589, "body": "I think it&#39;s quite odd to do that like that you just write <code>a1.0 + a1.0</code> that doesn&#39;t really solve the problem if your type is not <code>Copy</code>"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564588522, "post_id": 57294274, "comment_id": 101083730, "body": "@Stargateur Things aren&#39;t always in the same module."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564589257, "post_id": 57294274, "comment_id": 101084111, "body": "<a href=\"https://stackoverflow.com/q/45086595/155423\">Is it considered a bad practice to implement Deref for newtypes?</a>"}], "tags": [], "owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "is_accepted": false, "score": 1, "last_activity_date": 1564589243, "last_edit_date": 1564589243, "creation_date": 1564586945, "answer_id": 57294274, "question_id": 57294038, "link": "https://stackoverflow.com/questions/57294038/how-to-implement-add-trait-without-consuming-the-value/57294274#57294274", "title": "How to implement Add trait without consuming the value", "body": "<p>You can <code>impl Deref</code> and dereference the value. This will work for types that are simple wrappers around an <code>Add</code> type.</p>\n\n<pre><code>use std::ops::{Add, Deref};\n\nstruct I(usize);\nimpl Add for I {\n    type Output = Self;\n    fn add(self, rhs: Self) -&gt; Self {\n        I(self.0 + rhs.0)\n    }\n}\n\nimpl Deref for I {\n    type Target = usize;\n\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;self.0\n    }\n}\n\nfn main() {\n    let a = 123;\n    let b = a + a; // no error\n\n    let a1 = I(123);\n\n    // Note the dereferences.\n    let b1 = *a1 + *a1;\n\n    println!(\"b={}\", b);\n}\n</code></pre>\n\n<p>NB: Ryan's answer should suffice in this case, as <code>usize</code> is a clone type.</p>\n"}], "owner": {"reputation": 6515, "user_id": 272924, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/WYhVU.jpg?s=128&g=1", "display_name": "dark_ruby", "link": "https://stackoverflow.com/users/272924/dark-ruby"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "closed_date": 1564588976, "accepted_answer_id": 57294171, "answer_count": 2, "score": 1, "last_activity_date": 1564589243, "creation_date": 1564586204, "last_edit_date": 1564589018, "question_id": 57294038, "link": "https://stackoverflow.com/questions/57294038/how-to-implement-add-trait-without-consuming-the-value", "closed_reason": "Duplicate", "title": "How to implement Add trait without consuming the value", "body": "<p>When implementing the <code>Add</code> trait (and a few others, like <code>Mul</code>, <code>Sub</code>, etc.) for a simple struct one has to fully consume the struct value, thus its later use is  not possible.</p>\n\n<p>At the same time, built in primitives (<code>u8</code>, <code>usize</code>, etc.) implement <code>Add</code> while allowing using it after <code>add</code> was called.</p>\n\n<p>How can I implement <code>Add</code> for my structs to be able to use it after calling <code>add</code>?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Add;\n\nstruct I(usize);\nimpl Add for I {\n    type Output = Self;\n    fn add(self, rhs: Self) -&gt; Self {\n        I(self.0 + rhs.0)\n    }\n}\n\nfn main() {\n    let a = 123;\n    let b = a + a; // no error\n\n    let a1 = I(123);\n    let b1 = a1 + a1;\n\n    println!(\"b={}\", b);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `a1`\n  --&gt; src/main.rs:16:19\n   |\n15 |     let a1 = I(123);\n   |         -- move occurs because `a1` has type `I`, which does not implement the `Copy` trait\n16 |     let b1 = a1 + a1;\n   |              --   ^^ value used here after move\n   |              |\n   |              value moved here\n</code></pre>\n"}, {"tags": ["rust", "automated-tests", "rust-crates", "holochain-rust"], "comments": [{"owner": {"reputation": 1525, "user_id": 142571, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/AiXMr.jpg?s=128&g=1", "display_name": "Brian Takita", "link": "https://stackoverflow.com/users/142571/brian-takita"}, "edited": false, "score": 0, "creation_date": 1576810074, "post_id": 57293329, "comment_id": 105025683, "body": "Have you figured out the cause &amp; fix for this issue?"}], "owner": {"reputation": 21, "user_id": 10309218, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-MCULQqs1Aj0/AAAAAAAAAAI/AAAAAAAAAB8/MNcq5tG70jg/photo.jpg?sz=128", "display_name": "Tatsuya Sato", "link": "https://stackoverflow.com/users/10309218/tatsuya-sato"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 70, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1564592067, "creation_date": 1564583907, "last_edit_date": 1564592067, "question_id": 57293329, "link": "https://stackoverflow.com/questions/57293329/rust-holochain-diorama-testing-fails-because-of-a-function-that-uses-chrono-crat", "title": "rust holochain diorama testing fails because of a function that uses chrono crate", "body": "<p>I'm running on Mac OS V10.14.6 and running v0.0.21-alpha1 on nixOS. So, I've been trying to make a create_user_entry zome function and it takes User struct(with nested UserInfo struct). All my unit tests in rust are passing but then the diorama test is failing apparently because of a function that uses chrono crate. Here is the code,</p>\n\n<pre><code>use chrono::{offset::Local, Date, Datelike, TimeZone};\nuse hdk::holochain_json_api::{error::JsonError, json::JsonString};\n\n// This is the User entry\n#[derive(Serialize, Deserialize, Debug, DefaultJson, Clone)]\npub struct User {\n    pub agent: Address,\n    pub handle: String,\n    pub user_info: user_info::UserInfo,\n}\n\n//Within this struct is the birth_date key with BirthDate struct value which has the get_age() associated function that uses a chrono crate.\n#[derive(Serialize, Deserialize, Debug, DefaultJson, Clone, PartialEq)]\npub struct UserInfo {\n    pub first_name: String,\n    pub last_name: String,\n    pub birth_date: BirthDate,\n    pub age: u32,\n}\n\n//This is the BirthDate struct with its associated function get_age\n#[derive(Serialize, Deserialize, Debug, DefaultJson, Clone, PartialEq)]\npub struct BirthDate {\n    birth_year: i32,\n    birth_month: u32,\n    birth_day: u32,\n}\n\nimpl BirthDate {\n    //This is causing the Holochain Instance Error: WASM invocation failed: Trap: Trap { kind: Unreachable error\n    pub fn get_age(birth_year: i32, birth_month: u32, birth_day: u32) -&gt; u32 {\n        let birthday_dt: Date&lt;Local&gt; =\n            Local.ymd(birth_year.clone(), birth_month.clone(), birth_day.clone());\n        let local_dt: Date&lt;Local&gt; = Local::today();\n        let year_diff: i32 = local_dt.year() - birthday_dt.year();\n        if birthday_dt.month() &lt; local_dt.month() {\n            return year_diff as u32;\n        } else if birthday_dt.month() == local_dt.month() {\n            if birthday_dt.day() &gt;= local_dt.day() {\n                return year_diff as u32;\n            } else {\n                return year_diff as u32 - 1;\n            }\n        } else {\n            return year_diff as u32 - 1;\n        }\n    }\n\n}\n}\n</code></pre>\n\n<p>I expected the Diorama test to succeed but i got </p>\n\n<pre><code>info: [C] Starting instance \"alice-3\"...\ninfo: [C] Starting instance \"bob-3\"...\ninfo: [C] 2019-07-31 20:54:14 ThreadId(1):alice-3: debug/dna: 'called `Option::unwrap()` on a `None` value'\ninfo: [C] 2019-07-31 20:54:14 ThreadId(1):alice-3: debug/dna: 'panic occurred in file 'src/libcore/option.rs' at line 345'\ngot unhandledRejection: { code: -32602,\n  message:\n   'Holochain Instance Error: WASM invocation failed: Trap: Trap { kind: Unreachable }' }\nerror: Test failed while running: \"zome call timed out after 60 seconds: alice-3/main/create_user\"\nnot ok 1 (unnamed assert)\n  ---\n    operator: fail\n    at: run.catch (/Users/lc/Desktop/kiretter-test/test/node_modules/@holochain/diorama/lib/executors.js:18:19)...\n</code></pre>\n\n<p>Also tried replacing get_age() with get_age_test() which is defined this way. Diorama passed so chrono is probably the problem...</p>\n\n<pre><code> pub fn get_age_test(birth_year: i32, birth_month: u32, birth_day: u32) -&gt; u32 {\n    // let birthday_dt: Date&lt;Local&gt; =\n    //     Local.ymd(birth_year.clone(), birth_month.clone(), birth_day.clone());\n    let birthday_dummy: (i32, u32, u32) = (birth_year, birth_month, birth_day);\n    let local_dummy: (i32, u32, u32) = (2019, 07, 31);\n    let year_diff: i32 = local_dummy.0 - birthday_dummy.0;\n    if birthday_dummy.1 &lt; local_dummy.1 {\n        return year_diff as u32;\n    } else if birthday_dummy.1 == local_dummy.1 {\n        if birthday_dummy.2 &gt;= birthday_dummy.2 {\n            return year_diff as u32;\n        } else {\n            return year_diff as u32 - 1;\n        }\n    } else {\n        return year_diff as u32 - 1;\n    }\n}\n</code></pre>\n\n<p>also, here's the get_age() function that's working in rust playground as well just for reference</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d1296988a600251b01fd2dc9a0777df1\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d1296988a600251b01fd2dc9a0777df1</a></p>\n\n<p>also tried using json-rpc and get_age() worked.</p>\n\n<p><a href=\"https://i.stack.imgur.com/zdlbn.png\" rel=\"nofollow noreferrer\">jsonrpc result</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1564584354, "post_id": 57292679, "comment_id": 101081275, "body": "You only need a trivial change to your code: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ba63bddf6ad7ea9476b09e48b01c54d1\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1564584532, "post_id": 57292679, "comment_id": 101081382, "body": "@SvenMarnach that&#39;s shep&#39;s answer. And yes it&#39;s trivial but I didn&#39;t knew this was allowed"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1564585248, "post_id": 57292679, "comment_id": 101081865, "body": "There are two good answers here, both with zero cost thanks to compiler optimizations. I suggest future readers look at both answers."}], "answers": [{"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564582635, "post_id": 57292767, "comment_id": 101080129, "body": "A cow is an enum. Instead of one test, we now have two. Or is the compiler able to simplify this ?"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564582816, "post_id": 57292767, "comment_id": 101080243, "body": "If there&#39;s reason to think the compiler can remove the second test, please that information part of the answer."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564583977, "post_id": 57292767, "comment_id": 101081009, "body": "As I didn&#39;t trust too simple cases (which can be statically totally computed), I compared the ASM in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=21314881243dc538b75d46477b57e97b\" rel=\"nofollow noreferrer\">my code</a> and <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2b16f498c3f401a6f1e233b868e03e23\" rel=\"nofollow noreferrer\">the COW solution</a>. The ASM is the same. So it looks like the compiler is really able to solve this case."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1564584138, "post_id": 57292767, "comment_id": 101081121, "body": "@WesleyWiser Zero cost abstractions is not about optimized code, it&#39;s about you don&#39;t pay more for a feature that what you would have pay by doing it at hand. Cow add a overhead if you use its features. However here we don&#39;t really use its feature but its logic, the compiler is able to see and remove the overhead but that not about zero cost, just about optimization, you can&#39;t expect the compiler will be able to do this on every CoW. But you can expect it when you don&#39;t actually use the feature of CoW like here"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564584878, "post_id": 57292767, "comment_id": 101081635, "body": "I think it&#39;s important to be clear that Cow isn&#39;t a ZCA in general (stargateur&#39;s comment is useful for that). But that it the cost is removed by the compiler&#39;s optimization (hence why it&#39;s a valid answer)."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1564585100, "post_id": 57292767, "comment_id": 101081774, "body": "@DenysS&#233;guret CoW is ZCA, but not &quot;free&quot; ;)"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1564585362, "post_id": 57292767, "comment_id": 101081939, "body": "ZCA does not mean &quot;compiles to zero assembly&quot; it means it doesn&#39;t impose additional overhead than if you&#39;d written it from scratch yourself. In Rust, enums, structs, and functions are generally ZCA&#39;s. As far as I can tell, <code>Cow</code> is a ZCA. Its implementation does exactly what you&#39;d expect it to do and nothing more. @Stargateur can you provide an example where it is not a ZCA?"}], "tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": true, "score": 3, "last_activity_date": 1564584351, "last_edit_date": 1564584351, "creation_date": 1564582121, "answer_id": 57292767, "question_id": 57292679, "link": "https://stackoverflow.com/questions/57292679/conditionally-clone-when-you-need-a-reference/57292767#57292767", "title": "Conditionally clone when you need a reference", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>std::borrow::Cow</code></a> to abstract over a value which is either borrowed or owned:</p>\n\n<pre><code>fn do_big_thing(b: Cow&lt;Big&gt;, a: usize) {\n    println!(\"{}\", a + b.c);\n}\n\nfn do_huge_thing(original: &amp;Big, a: usize, condition: bool) {\n    if condition {\n        let mut copy = original.clone();\n        copy.select();\n        do_big_thing(Cow::Owned(copy), a);\n    } else {\n        do_big_thing(Cow::Borrowed(original), a);\n    }\n}\n</code></pre>\n\n<p>Which you can then refactor to something like:</p>\n\n<pre><code>pub fn do_huge_thing_cow(original: &amp;Big, a: usize, condition: bool) {\n    let mut r = Cow::Borrowed(original);\n\n    if condition {\n        r.to_mut().select();\n    }\n\n    do_big_thing(&amp;r, a);\n}\n</code></pre>\n\n<p>As <a href=\"https://rust.godbolt.org/z/QBA2L2\" rel=\"nofollow noreferrer\">you can see</a>, this is optimized away.</p>\n"}, {"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564584207, "post_id": 57293411, "comment_id": 101081175, "body": "But... this is allowed ? This is really what I wanted to do but I didn&#39;t know it was possible to define a variable without value."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564584670, "post_id": 57293411, "comment_id": 101081489, "body": "@DenysS&#233;guret and note that this coding pattern doesn&#39;t require that <code>copy</code> be mutable. We only need <code>mut</code> because <code>select</code> requires it."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1564584280, "last_edit_date": 1564584280, "creation_date": 1564584168, "answer_id": 57293411, "question_id": 57292679, "link": "https://stackoverflow.com/questions/57292679/conditionally-clone-when-you-need-a-reference/57293411#57293411", "title": "Conditionally clone when you need a reference", "body": "<p>Since you don't intend to return the value from your function (which is shown in <a href=\"https://stackoverflow.com/q/36706429/155423\">Is it possible to return either a borrowed or owned type in Rust?</a>), you don't <em>need</em> to use <code>Cow</code>. Instead, you can declare the <code>copy</code> variable outside of the conditional:</p>\n\n<pre><code>fn do_huge_thing_stack(original: &amp;Big, a: usize, condition: bool) {\n    let mut copy;\n\n    let r = if condition {\n        copy = original.clone();\n        copy.select();\n        &amp;copy\n    } else {\n        original\n    };\n\n    do_big_thing(r, a);\n}\n</code></pre>\n\n<p>The compiler will ensure that a reference is only taken when the value is valid. This generates the same assembly as the <code>Cow</code> version, and I think <a href=\"https://stackoverflow.com/a/57292767/155423\">the <code>Cow</code> version is more obvious</a>, but it's still a useful technique to know.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/a/28220053/155423\">Are polymorphic variables allowed?</a></li>\n</ul>\n"}], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 2, "accepted_answer_id": 57292767, "answer_count": 2, "score": 2, "last_activity_date": 1566739165, "creation_date": 1564581874, "last_edit_date": 1566739165, "question_id": 57292679, "link": "https://stackoverflow.com/questions/57292679/conditionally-clone-when-you-need-a-reference", "title": "Conditionally clone when you need a reference", "body": "<p>I have a reference to a struct.</p>\n\n<p>I need a reference to a struct. Sometimes it's the same, but sometimes it's a cloned then modified one.</p>\n\n<p>Right now, I do</p>\n\n<pre><code>if condition {\n    let mut copy = original.clone();\n    copy.select();\n    do_big_thing(&amp;copy);\n} else {\n    do_big_thing(original);\n}\n</code></pre>\n\n<p>But <code>do_big_thing</code> takes other arguments, I don't like to duplicate this line.</p>\n\n<p>Is there a way to</p>\n\n<ul>\n<li>first build the reference, which would either be the original one or a reference to a local modified clone</li>\n<li>then use it in <code>do_big_thing</code> (it doesn't have to live longer)</li>\n</ul>\n\n<p>?</p>\n\n<p>Of course this doesn't work because <code>copy</code> doesn't live long enough:</p>\n\n<pre><code>let mut reference = if condition {\n    let mut copy = original.clone();\n    copy.select();\n    &amp;copy\n} else {\n    original\n};\ndo_big_thing(reference);\n</code></pre>\n\n<p>As this question is about finding a cleaner and less cluttered way to write the same thing (either use the original reference or clone), I can't accept a solution which would add overhead at runtime or some <code>unsafe</code>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=21314881243dc538b75d46477b57e97b\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564581411, "post_id": 57291977, "comment_id": 101079309, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/25339603/155423\">How to test for equality between trait objects?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57291977/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564581438, "post_id": 57291977, "comment_id": 101079322, "body": "Also <code>pub trait ShyAssociation&lt;&#39;a&gt;: Debug {...}</code>"}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564587710, "post_id": 57291977, "comment_id": 101083271, "body": "I will consult that solution and see if I can compose it with the Clone solution. My problem has not been individually implementing the Traits, it is getting all of them to work together without a compile error."}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 119, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1564599609, "creation_date": 1564579831, "last_edit_date": 1564599609, "question_id": 57291977, "link": "https://stackoverflow.com/questions/57291977/implement-a-mutable-tree-structure-using-a-trait-object", "title": "Implement a mutable tree structure using a trait object", "body": "<p>I am trying to implement a tree structure in Rust. My structure is like a JSON object, where properties can be simple values or subtrees of other JSON objects.</p>\n\n<p>For leaves, I have an enum called <code>ShyScalar</code>:</p>\n\n<pre><code>#[derive(Clone, PartialEq, Debug)]\npub enum ShyScalar {\n    Boolean(bool),\n    Integer(i64),\n    Rational(f64),\n    String(String),\n    Error(String)\n}\n</code></pre>\n\n<p>For nodes, I am trying to create another enum, <code>ShyValue</code>. It can be a <code>Scalar(ShyScalar)</code> or an <code>Object</code> and I am trying to figure out how to implement the <code>Object</code> part. The core of it is the trait <code>ShyAssociation</code>, which lets me get or set properties using a string name, a crude form of reflection. Here is part of the implementation of the <code>ShyAssociation</code> trait, with a sample implementation using a <code>HashMap</code>. </p>\n\n<pre><code>pub trait ShyAssociation&lt;'a&gt; {\n    /// Set the named property to a new value and return the previous value.\n    /// If it is not permitted to set this property or it had no value previously, return None.\n    fn set(&amp;mut self, property_name: &amp;'a str, property_value: ShyValue) -&gt; Option&lt;ShyValue&gt;;\n\n    /// Get the value of the named property.\n    /// If the property has no value or the property does not exist, return None.\n    fn get(&amp;self, property_name: &amp;'a str) -&gt; Option&lt;&amp;ShyValue&gt;;\n\n    /// True if is is possible to set the named property. \n    /// This may be true even if the property does not currently have a value.\n    fn can_set_property(&amp;self, property_name: &amp;'a str) -&gt; bool;\n\n    /// True if the property currently has a value that can be retrieved, false otherwise.\n    fn can_get_property(&amp;self, property_name: &amp;'a str) -&gt; bool;\n}\n\nimpl&lt;'a&gt; ShyAssociation&lt;'a&gt; for HashMap&lt;&amp;'a str, ShyValue&gt; {\n    fn set(&amp;mut self, property_name: &amp;'a str, property_value: ShyValue) -&gt; Option&lt;ShyValue&gt; {\n        self.insert(property_name, property_value)\n    }\n\n    fn get(&amp;self, property_name: &amp;'a str) -&gt; Option&lt;&amp;ShyValue&gt; {\n        HashMap::get(self, property_name)\n    }\n\n    fn can_set_property(&amp;self, _property_name: &amp;'a str) -&gt; bool {\n        true\n    }\n\n    fn can_get_property(&amp;self, property_name: &amp;'a str) -&gt; bool {\n        self.contains_key(property_name)\n    }\n}\n</code></pre>\n\n<p>This worked before the <code>ShyValue</code> included the <code>Object</code> variant. </p>\n\n<p>I have tried using <code>Box</code>, and am investigating <code>Rc</code> and <code>RefCell</code>, but do not know how to compose things so that I can implement the three essential traits for <code>Object</code>: <code>Clone</code>, <code>PartialEq</code> and <code>Debug</code>.</p>\n\n<p>I was able to get <code>Clone</code> working if I use the <a href=\"https://github.com/dtolnay/objekt\" rel=\"nofollow noreferrer\">objekt crate</a>, which implements ideas from <a href=\"https://stackoverflow.com/questions/30353462/how-to-clone-a-struct-storing-a-boxed-trait-object\">How to clone a struct storing a boxed trait object?</a>.</p>\n\n<p>I cannot figure out how to compose things so as to implement all three traits.</p>\n\n<hr>\n\n<p>The larger problem I am trying to solve is to build the context object (symbol table) for a rules engine. I need to be able to supply arbitrary objects that implement <code>ShyAssociation</code> to permit the rules engine to extract values using dot notation and set the results back into the objects. I am trying to get around the fact that Rust does not support reflection.</p>\n\n<hr>\n\n<p>Additional information.</p>\n\n<p>When I use objekt_clonable crate and try to compose with PartialEq and Debug, I get these errors:</p>\n\n<blockquote>\n  <p>the trait <code>parser::shy_association::ShyAssociation</code> cannot be made\n  into an object</p>\n  \n  <p>the trait <code>parser::shy_association::ShyAssociation</code> cannot be made\n  into an object</p>\n  \n  <p>note: the trait cannot use <code>Self</code> as a type parameter in the\n  supertraits or where-clausesrustc(E0038)\n  &lt;::objekt::macros::__internal_clone_trait_object macros>(38, 55): the\n  trait <code>parser::shy_association::ShyAssociation</code> cannot be made into an\n  object</p>\n</blockquote>\n\n<p>Here is some of the code I use:</p>\n\n<pre><code>use objekt_clonable::*;\n#[clonable]\npub trait ShyAssociation&lt;'a&gt; :  Clone + PartialEq + Debug  {\n    /// Set the named property to a new value and return the previous value.\n    /// If it is not permitted to set this property or it had no value previously, return None.\n    fn set(&amp;mut self, property_name: &amp;'a str, property_value: ShyValue) -&gt; Option&lt;ShyValue&gt;;\n\n    /// Get the value of the named property.\n    /// If the property has no value or the property does not exist, return None.\n    fn get(&amp;self, property_name: &amp;'a str) -&gt; Option&lt;&amp;ShyValue&gt;;\n\n    /// True if is is possible to set the named property. \n    /// This may be true even if the property does not currently have a value.\n    fn can_set_property(&amp;self, property_name: &amp;'a str) -&gt; bool;\n\n    /// True if the property currently has a value that can be retrieved, false otherwise.\n    fn can_get_property(&amp;self, property_name: &amp;'a str) -&gt; bool;\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1564576491, "post_id": 57290802, "comment_id": 101076149, "body": "If that doesn&#39;t bother you, you can leak it: <a href=\"https://stackoverflow.com/a/30527289/4498831\">stackoverflow.com/a/30527289/4498831</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1564576791, "post_id": 57290802, "comment_id": 101076318, "body": "Why not just <code>lazy_static! {    static ref DATA: Option&lt;MyData&gt; = load_data().ok(); }</code> ?"}], "owner": {"reputation": 21716, "user_id": 2401769, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/wkEbw.jpg?s=128&g=1", "display_name": "Matias Cicero", "link": "https://stackoverflow.com/users/2401769/matias-cicero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "closed_date": 1564576915, "answer_count": 0, "score": 1, "last_activity_date": 1564577625, "creation_date": 1564576295, "last_edit_date": 1564577605, "question_id": 57290802, "link": "https://stackoverflow.com/questions/57290802/static-lifetime-for-a-temporary-variable", "closed_reason": "Duplicate", "title": "Static lifetime for a temporary variable?", "body": "<p>I have the following function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn load_data() -&gt; Result&lt;MyData&gt; {\n    // ...\n    Ok(my_data)\n}\n</code></pre>\n\n<p>I want to call this function only once during the execution of my program and save the result in a <code>static</code> variable.\nIt'd be nice if the result is of type <code>Option&lt;MyData&gt;</code>, so the consumer just needs to check if the data is there or not, regardless of the reason of why it's not there.</p>\n\n<p>I have came up with the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>lazy_static! {\n    static ref DATA: Option&lt;&amp;'static MyData&gt; = load_data().ok().as_ref();\n}\n</code></pre>\n\n<p>However, that line fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>35 |     static ref DATA: Option&lt;&amp;'static MyData&gt; = load_data().ok().as_ref();\n   |                                                ----------------^^^^^^^^^\n   |                                                |               returns a value referencing data owned by the current function\n   |                                                |\n   |                                                |\n   |                                                temporary value created here\n</code></pre>\n\n<p>Is there a way to achieve what I want or am I conceptually wrong?</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564578645, "post_id": 57289164, "comment_id": 101077465, "body": "This is the same question as <a href=\"https://stackoverflow.com/q/56469502/155423\">How to store a hyper::server::Server as a field in a struct?</a>, where it is demonstrated that storing a <code>hyper::Server</code> as a trait object is really hard."}], "owner": {"reputation": 116, "user_id": 2327063, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bde3efc111da54a2acaf8b6d69549d0d?s=128&d=identicon&r=PG", "display_name": "user2327063", "link": "https://stackoverflow.com/users/2327063/user2327063"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 198, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1564578542, "creation_date": 1564570605, "last_edit_date": 1564578542, "question_id": 57289164, "link": "https://stackoverflow.com/questions/57289164/how-to-store-multiple-hyper-servers-in-a-single-vector", "title": "How to store multiple hyper servers in a single vector?", "body": "<p>I'm trying to write a simple application to read a config file then spin up a hyper reverse proxy for each entry in that file</p>\n\n<p>I'm parsing the config in a loop and want to be able to keep track of every server I have created, probably in a <code>Vec</code>. I can't figure out what type the <code>Vec</code> should be as each server is a different type. I have tried boxing the result of <code>map_error</code> and storing that but I'm not getting anywhere. The hyper example on GitHub only uses statically created servers.</p>\n\n<p>This is a simplified version of what I am trying to do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::{self, Future};\nuse hyper::service::{make_service_fn, service_fn};\nuse hyper::{Body, Request, Response, Server};\n\ntype BoxFut = Box&lt;Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt; + Send&gt;;\n\nfn debug_request(req: Request&lt;Body&gt;) -&gt; BoxFut {\n    let body_str = format!(\"{:?}\", req);\n    let response = Response::new(Body::from(body_str));\n    Box::new(future::ok(response))\n}\n\nfn main() {\n    // This is our socket address...\n    let local_address = ([127, 0, 0, 1], 9001).into();\n\n    // A `Service` is needed for every connection.\n    let make_svc = make_service_fn(|socket: &amp;AddrStream| {\n        let remote_addr = socket.remote_addr();\n        service_fn(move |req: Request&lt;Body&gt;| {\n            // returns BoxFut\n\n            return hyper_reverse_proxy::call(remote_addr.ip(), \"http://192.9.200.162:80\", req);\n        })\n    });\n\n    let server = Box::new(\n        Server::bind(&amp;local_address)\n            .serve(make_svc)\n            .map_err(|e| eprintln!(\"server error: {}\", e)),\n    );\n\n    let server2 = Box::new(\n        Server::bind(&amp;local_address)\n            .serve(make_svc)\n            .map_err(|e| eprintln!(\"server error: {}\", e)),\n    );\n\n    let vec = vec![server, server2];\n\n    println!(\"Running server on {:?}\", local_address);\n\n    // Run this server for... forever!\n    let all_servers = future::join_all(vec);\n    hyper::rt::run(all_servers);\n}\n</code></pre>\n\n<p><code>vec</code> can't hold both severs as they have different types and I'm not sure how to best do the <code>hyper::rt::run</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564536687, "post_id": 57281837, "comment_id": 101059947, "body": "that exactly what Display is for"}], "answers": [{"comments": [{"owner": {"reputation": 5099, "user_id": 53744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3239a9b21ef06fa6983b461b742e6017?s=128&d=identicon&r=PG", "display_name": "Will", "link": "https://stackoverflow.com/users/53744/will"}, "edited": false, "score": 0, "creation_date": 1564620671, "post_id": 57285999, "comment_id": 101094600, "body": "In this case, my text-producing function isn&#39;t really associated with any particular type, so the choice of which type to implement Display is non-obvious. I guess I can just define an empty dummy struct and implement Display on that."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 5099, "user_id": 53744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3239a9b21ef06fa6983b461b742e6017?s=128&d=identicon&r=PG", "display_name": "Will", "link": "https://stackoverflow.com/users/53744/will"}, "edited": false, "score": 0, "creation_date": 1564635456, "post_id": 57285999, "comment_id": 101097271, "body": "@Will There&#39;s usually a semantic association which makes it possible to define a useful enough struct which implements Display. And reuse it in other Display. It doesn&#39;t have to own its data. I do that in Termimad: <a href=\"https://github.com/Canop/termimad/blob/master/src/displayable_line.rs\" rel=\"nofollow noreferrer\">github.com/Canop/termimad/blob/master/src/displayable_line.r&zwnj;&#8203;s</a>"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 5, "last_activity_date": 1564577527, "last_edit_date": 1564577527, "creation_date": 1564560302, "answer_id": 57285999, "question_id": 57281837, "link": "https://stackoverflow.com/questions/57281837/is-there-any-way-to-write-a-function-that-can-output-to-either-stdiowrite-or/57285999#57285999", "title": "Is there any way to write a function that can output to either std::io::Write or std::fmt::Formatter?", "body": "<p>You just have to implement <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html\" rel=\"nofollow noreferrer\"><code>Display</code></a>.</p>\n\n<p>When your <code>Foo</code> implements <code>Display</code>, you can use it with any implementation of <code>Write</code>, including <code>io::Stdout</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n    io::{self, Write},\n    fmt,\n};\n\nstruct Foo {\n    field: u16,\n}\nimpl fmt::Display for Foo {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Foo({})\", self.field)\n    }\n}\n\nfn main() {\n    write!(io::stdout(), \"{}\", Foo{field: 3}).unwrap();\n}\n</code></pre>\n\n<p>You don't have to write your own macro; just use <code>write!</code>. This should not feel wrong, it's the normal way.</p>\n\n<p>There's no runtime cost related to the <code>\"{}\"</code> argument: it's parsed at compile time (in a compiler built-in), which makes the <code>write!(w, \"{}\", displayable)</code> call efficient.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e5b2c76c99b7f9765e42ef83512c7e45\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 5099, "user_id": 53744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3239a9b21ef06fa6983b461b742e6017?s=128&d=identicon&r=PG", "display_name": "Will", "link": "https://stackoverflow.com/users/53744/will"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "accepted_answer_id": 57285999, "answer_count": 1, "score": 6, "last_activity_date": 1564577527, "creation_date": 1564535155, "last_edit_date": 1564535411, "question_id": 57281837, "link": "https://stackoverflow.com/questions/57281837/is-there-any-way-to-write-a-function-that-can-output-to-either-stdiowrite-or", "title": "Is there any way to write a function that can output to either std::io::Write or std::fmt::Formatter?", "body": "<p>I want to write a function that produces some text, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn produce_stuff(/* ??? */) -&gt; Result&lt;()&gt; {\n    write!(...);\n    write!(...);\n    write!(...);\n    ...\n}\n</code></pre>\n\n<p>I want to be able to use this function in two contexts:</p>\n\n<ol>\n<li>Use it to output to an IO writer\u2014something like <code>produce_text(io.stdout())</code>.</li>\n<li>Use it as a helper function when implementing <code>Display</code> \u2014 something like this:</li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo { ... }\nimpl Display for Foo {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {\n        ...\n        produce_text(f);\n        ...\n    }\n}\n</code></pre>\n\n<p>It seems like each of these use cases would require a different signature for <code>produce_text</code>. For #1, the function would need to take something that implements <code>std::io::Write</code>, and for #2 it would need to take a <code>std::fmt::Formatter</code>.</p>\n\n<p>I suppose I could write it as a macro instead of as a function (similar to how <code>write!</code> is a macro that works both in both contexts), but it somehow feels wrong to use a macro for this.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564531939, "post_id": 57281376, "comment_id": 101059157, "body": "<a href=\"https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564532058, "post_id": 57281376, "comment_id": 101059174, "body": "That really basic stuff: <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0295151cc61c97c436382c8b9f77bfa2\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1587, "user_id": 956856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64eec6ff41ec4774fa9db39daf8c386b?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner-Hall", "link": "https://stackoverflow.com/users/956856/daniel-wagner-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1564532114, "last_edit_date": 1564532114, "creation_date": 1564531655, "answer_id": 57281524, "question_id": 57281376, "link": "https://stackoverflow.com/questions/57281376/is-there-a-way-to-give-a-parameter-back-to-the-caller-if-the-method-fails-inste/57281524#57281524", "title": "Is there a way to give a parameter back to the caller if the method fails, instead of panicking?", "body": "<p>A common idiom is to return the item as the <code>Err</code> variant of a <code>Result</code>, or embedded in it (like is used in <code>std::sync::Arc::try_unwrap</code>, so you could do something like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl PropertySet {\n    /// This function will panic if a card is added and the set is already full, so\n    /// you should always check the set size first.\n    fn add&lt;T: Property&gt;(&amp;mut self, property: T) -&gt; Result&lt;(), T&gt; {\n        if self.properties.len() + 1 &lt; self.max {\n            self.properties.push(Box::new(property));\n            Ok(())\n        } else {\n            Err(property)\n        }\n    }\n}\n</code></pre>\n\n<p>If you want to adorn the error with more information, you could use a small <code>enum</code>, like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum HandError&lt;T: Property&gt; {\n    HandFull(T),\n    InsufficientBet,\n    // ...\n}\n</code></pre>\n\n<pre><code>fn add&lt;T: Property&gt;(&amp;mut self, property: T) -&gt; Result&lt;(), HandError&lt;T&gt;&gt; {\n    // ...\n    Err(HandError::HandFull(property))\n    // ...\n}\n</code></pre>\n"}], "owner": {"reputation": 4172, "user_id": 3508956, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/umLTo.jpg?s=128&g=1", "display_name": "laptou", "link": "https://stackoverflow.com/users/3508956/laptou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1564532114, "creation_date": 1564530222, "last_edit_date": 1564532023, "question_id": 57281376, "link": "https://stackoverflow.com/questions/57281376/is-there-a-way-to-give-a-parameter-back-to-the-caller-if-the-method-fails-inste", "title": "Is there a way to give a parameter back to the caller if the method fails, instead of panicking?", "body": "<p>This <code>impl</code> is for a struct which is intended to hold a list of cards, but has a maximum number of cards that can be added to it:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Property {}\n\npub struct PropertySet {\n    max: usize,\n    properties: Vec&lt;Box&lt;dyn Property&gt;&gt;,\n}\n\nimpl PropertySet {\n    // ...\n\n    /// This function will panic if a card is added and the set is already full, so\n    /// you should always check the set size first.\n    fn add&lt;T: Property&gt;(&amp;mut self, property: T) {\n        if self.properties.len() + 1 &lt; self.max {\n            self.properties.push(Box::new(property))\n        } else {\n            panic!(\"The card could not be added to the set; it is full.\")\n        }\n    }\n\n    // ...\n}\n</code></pre>\n\n<p>Panicking seems like an unnecessarily drastic response to the error of trying to add a card to a full set, so I would like to return an <code>Err</code> instead, but that presents a problem because this method moves <code>card</code>. <code>card</code> has to be passed by value because this is the only way I can add it to the <code>Vec</code>.</p>\n"}, {"tags": ["visual-studio-code", "rust"], "comments": [{"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1564527873, "post_id": 57280919, "comment_id": 101058391, "body": "It is hard to tell what is a project. For example, it is possible to have a set of rust files, compile them using <code>Rustc</code> (compiler) and call it a project. What people usually do is use the <code>Cargo</code> layout, which is a <code>Cargo.toml</code> and <code>src&#47;(main|lib).rs</code> file."}, {"owner": {"reputation": 1171, "user_id": 114754, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9bc0d070629e1c27f4d645e462358974?s=128&d=identicon&r=PG", "display_name": "Varuna", "link": "https://stackoverflow.com/users/114754/varuna"}, "reply_to_user": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 1, "creation_date": 1564530711, "post_id": 57280919, "comment_id": 101058961, "body": "The post is about whether it&#39;s possible to create a Rust project from the VS Code. But sure, I was thinking about how to create the project as described by The Rust Programming Language book at <a href=\"https://doc.rust-lang.org/book/ch01-03-hello-cargo.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch01-03-hello-cargo.html</a>. At the time of making the post, I was not aware of what you say by &quot;it is possible to have a set of rust files, compile them using Rustc (compiler) and call it a project.&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564531488, "post_id": 57280919, "comment_id": 101059087, "body": "<i>Why</i>? Does something prevent you from opening the command line and typing <code>cargo new</code>?"}, {"owner": {"reputation": 1171, "user_id": 114754, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9bc0d070629e1c27f4d645e462358974?s=128&d=identicon&r=PG", "display_name": "Varuna", "link": "https://stackoverflow.com/users/114754/varuna"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564538512, "post_id": 57280919, "comment_id": 101060253, "body": "@Shepmaster, No nothing, Just curious whether it&#39;s possible."}], "answers": [{"tags": [], "owner": {"reputation": 1255, "user_id": 4982148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/X52Wq.jpg?s=128&g=1", "display_name": "atakanyenel", "link": "https://stackoverflow.com/users/4982148/atakanyenel"}, "is_accepted": false, "score": 0, "last_activity_date": 1564533061, "creation_date": 1564533061, "answer_id": 57281649, "question_id": 57280919, "link": "https://stackoverflow.com/questions/57280919/how-to-create-a-new-rust-project-from-the-vs-code-and-not-through-the-command-l/57281649#57281649", "title": "How to create a new Rust project from the VS Code, and not through the command-line?", "body": "<p><a href=\"https://github.com/panicbit/vscode-cargo\" rel=\"nofollow noreferrer\">This extension</a> has <code>cargo new</code> command as their planned feature.</p>\n\n<p>You can write your own extension for simple tasks like this, it's quite easy to write one.(I wrote before) But it's still overkill two create a directory(src) and 2 files (main.rs,cargo.toml).</p>\n\n<p>You can create files/folder manually with <code>new file</code> button and add a snippet for each boilerplate code in the files. Snippets can take parameters, you can give your project name there.</p>\n\n<p>If you are going to use this feature a lot, you can write a global task, that can create and populate those files for you.</p>\n\n<p>In the <code>source control</code> pane, when you click the icon near <code>SOURCE CONTROL</code> title, it will create a <code>.git</code> folder for you, which is also done by <code>cargo new</code>. </p>\n\n<p>If you are looking to specifically create a project with the Rust official extension, it's language server and it doesn't have that functionality.</p>\n"}], "owner": {"reputation": 1171, "user_id": 114754, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9bc0d070629e1c27f4d645e462358974?s=128&d=identicon&r=PG", "display_name": "Varuna", "link": "https://stackoverflow.com/users/114754/varuna"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1038, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1564533061, "creation_date": 1564526375, "last_edit_date": 1564531458, "question_id": 57280919, "link": "https://stackoverflow.com/questions/57280919/how-to-create-a-new-rust-project-from-the-vs-code-and-not-through-the-command-l", "title": "How to create a new Rust project from the VS Code, and not through the command-line?", "body": "<p>The Rust Programming Language book explains <a href=\"https://doc.rust-lang.org/book/ch01-03-hello-cargo.html\" rel=\"nofollow noreferrer\">how to create a project on the command-line</a>. The same section is referred by the explanation of <a href=\"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust\" rel=\"nofollow noreferrer\">how to Quickstart using the extension of the VS Code for Rust</a>. </p>\n\n<p>How can I create a new Rust project from within VS Code, and not through the command-line?</p>\n"}, {"tags": ["rust", "serde-json"], "answers": [{"comments": [{"owner": {"reputation": 155, "user_id": 4651510, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/i0do2.jpg?s=128&g=1", "display_name": "Gabor Farkas", "link": "https://stackoverflow.com/users/4651510/gabor-farkas"}, "edited": false, "score": 1, "creation_date": 1564521684, "post_id": 57280167, "comment_id": 101056668, "body": "Thank you for the quick response. Cloning solved the problem. I will accept ASAP."}, {"owner": {"reputation": 163, "user_id": 11944425, "user_type": "registered", "profile_image": "https://graph.facebook.com/2023412124609423/picture?type=large", "display_name": "David Golembiowski", "link": "https://stackoverflow.com/users/11944425/david-golembiowski"}, "edited": false, "score": 0, "creation_date": 1576719835, "post_id": 57280167, "comment_id": 104993469, "body": "Likewise, you might consider updating your <code>read_config</code> function signature to <code>pub fn read_config(path: &amp;str) -&gt; Result&lt;Map&lt;String, Value&gt;, Box&lt;dyn Error&gt;&gt;</code> to satisfy the compiler&#39;s warning message:  <code>warning: trait objects without an explicit &#39;dyn&#39; are deprecated</code>."}], "tags": [], "owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "is_accepted": true, "score": 6, "last_activity_date": 1564521456, "creation_date": 1564521456, "answer_id": 57280167, "question_id": 57280100, "link": "https://stackoverflow.com/questions/57280100/parsing-a-json-into-a-map-in-rust/57280167#57280167", "title": "Parsing a JSON into a Map in rust", "body": "<p>Since <code>as_object</code> returns a reference and you need an owned value, you will need to clone the map. Luckily <code>Map</code> provides a <code>Clone</code> implementation so you can do this:</p>\n\n<pre><code>let obj: Map&lt;String, Value&gt; = parsed.as_object().unwrap().clone();\n</code></pre>\n"}], "owner": {"reputation": 155, "user_id": 4651510, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/i0do2.jpg?s=128&g=1", "display_name": "Gabor Farkas", "link": "https://stackoverflow.com/users/4651510/gabor-farkas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2685, "favorite_count": 0, "accepted_answer_id": 57280167, "answer_count": 1, "score": 5, "last_activity_date": 1564521456, "creation_date": 1564521123, "question_id": 57280100, "link": "https://stackoverflow.com/questions/57280100/parsing-a-json-into-a-map-in-rust", "title": "Parsing a JSON into a Map in rust", "body": "<p>I'm quite a beginner in Rust, and just have encountered a problem with parsing JSON files. I tried using serde_json for the task. I know how to parse an ASCII file as a string, and how to parse its content as a <code>Value</code>, but I need a <code>Map&lt;String, Value&gt;</code> to iterate over the KVPs. I did not get too far, as I stumbled into a reference error. The method I tried is the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fs;\nuse std::error::Error;\nuse serde_json::{Value, Map};\n\npub struct ConfigSerde;\n\nimpl ConfigSerde {\n    pub fn read_config(path: &amp;str) -&gt; Result&lt;Map&lt;String, Value&gt;, Box&lt;Error&gt;&gt; {\n        let config = fs::read_to_string(path)?;\n        let parsed: Value = serde_json::from_str(&amp;config)?;\n        let obj: Map&lt;String, Value&gt; = parsed.as_object().unwrap();\n        Ok(obj)\n    }\n}\n</code></pre>\n\n<p>Once I tried to run this code, the compiler threw the following error:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/config/serde.rs:11:39\n   |\n11 |         let obj: Map&lt;String, Value&gt; = parsed.as_object().unwrap();\n   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `serde_json::map::Map`, found reference\n   |\n   = note: expected type `serde_json::map::Map&lt;std::string::String, serde_json::value::Value&gt;`\n              found type `&amp;serde_json::map::Map&lt;std::string::String, serde_json::value::Value&gt;`\n</code></pre>\n\n<p>How can I parse a JSON to a <code>Map</code> in rust? I'm open to using alternative crates, although serde_json is the preferred one, as it seems the most robust of all.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564510751, "post_id": 57277497, "comment_id": 101052266, "body": "Thanks for edits @Shepmaster"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1564510771, "post_id": 57277497, "comment_id": 101052273, "body": "Your second example doesn&#39;t work because <code>impl Trait</code> as the return type <a href=\"https://stackoverflow.com/q/52001592/1233251\">cannot be used for multiple conditional types</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1564531369, "last_edit_date": 1564531369, "creation_date": 1564510760, "answer_id": 57277830, "question_id": 57277497, "link": "https://stackoverflow.com/questions/57277497/how-do-i-return-one-of-multiple-types-that-implement-a-non-object-safe-trait/57277830#57277830", "title": "How do I return one of multiple types that implement a non-object-safe trait?", "body": "<p>You don't. You <strong>cannot</strong> return a trait object for traits that are not object-safe. This is thoroughly explained already:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/45116984/155423\">The trait cannot be made into an object</a></li>\n<li><a href=\"https://stackoverflow.com/q/42620022/155423\">Why does a generic method inside a trait require trait object to be sized?</a></li>\n<li><a href=\"https://stackoverflow.com/q/57252674/155423\">What is the cited problem with using generic type parameters in trait objects?</a></li>\n</ul>\n\n<p>Instead, define your own object-safe trait and implement it in terms of the non-object-safe one:</p>\n\n<pre><code>use std::ops::{Range, RangeBounds};\n\ntrait MyBounds {\n    fn contains(&amp;self, v: &amp;isize) -&gt; bool;\n}\n\nimpl&lt;T&gt; MyBounds for T\nwhere\n    T: RangeBounds&lt;isize&gt;,\n{\n    fn contains(&amp;self, v: &amp;isize) -&gt; bool {\n        RangeBounds::contains(self, v)\n    }\n}\n\nfn range(start: Option&lt;isize&gt;, end: Option&lt;isize&gt;) -&gt; Box&lt;dyn MyBounds&gt; {\n    match (start, end) {\n        (Some(start), Some(end)) =&gt; Box::new(Range { start, end }),\n        // other options here\n        _ =&gt; panic!(),\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/46235975/155423\">Create an Object-safe Trait in Rust with a method that accepts a closure</a></li>\n<li><a href=\"https://stackoverflow.com/q/52001592/155423\">Why can impl trait not be used to return multiple / conditional types?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29760668/155423\">Conditionally iterate over one of several possible iterators</a></li>\n<li><a href=\"https://stackoverflow.com/q/30661046/155423\">How do I return an instance of a trait from a method?</a></li>\n</ul>\n"}], "owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 413, "favorite_count": 1, "accepted_answer_id": 57277830, "answer_count": 1, "score": 2, "last_activity_date": 1564531369, "creation_date": 1564509526, "last_edit_date": 1564510805, "question_id": 57277497, "link": "https://stackoverflow.com/questions/57277497/how-do-i-return-one-of-multiple-types-that-implement-a-non-object-safe-trait", "title": "How do I return one of multiple types that implement a non-object-safe trait?", "body": "<p>I want a function that returns multiple types of <code>Range</code>s (e.g. <code>Range</code>, <code>RangeFrom</code>, <code>RangeTo</code>). My goal is to check whether values are within ranges which we don't know at compile time if they are open or closed.</p>\n\n<p>I tried to do this by specifying the return type of <code>RangeBounds</code>. Unfortunately, because <code>.contains</code> is generic, I don't think that's possible. </p>\n\n<p>Is there another way? Or should I just pass around <code>(Option&lt;isize&gt;, Option&lt;isize&gt;)</code>, and check values against them manually?</p>\n\n<p>This question is broader than explaining this specific error - I'm trying to find if there's another way of accomplishing the goal. I want to use the standard libraries <code>Range</code> tools rather than a custom implementation.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::{Range, RangeBounds};\n\nfn range(start: Option&lt;isize&gt;, end: Option&lt;isize&gt;) -&gt; dyn RangeBounds&lt;isize&gt; {\n    match (start, end) {\n        (Some(s), Some(e)) =&gt; Range { s, e },\n        // other options here\n        _ =&gt; panic!(),\n    }\n}\n</code></pre>\n\n<p>Causes:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `std::ops::RangeBounds` cannot be made into an object\n --&gt; src/lib.rs:3:1\n  |\n3 | fn range(start: Option&lt;isize&gt;, end: Option&lt;isize&gt;) -&gt; dyn RangeBounds&lt;isize&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::ops::RangeBounds` cannot be made into an object\n  |\n  = note: method `contains` has generic type parameters\n</code></pre>\n\n<p>Another approach that doesn't work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::{Range, RangeBounds, RangeFrom, RangeTo};\nfn range(start: Option&lt;isize&gt;, end: Option&lt;isize&gt;) -&gt; impl RangeBounds&lt;isize&gt; {\n    match (start, end) {\n        (Some(s), Some(e)) =&gt; Range { start: s, end: e },\n        (Some(s), None) =&gt; RangeFrom { start: s },\n        // other options here\n        _ =&gt; panic!(),\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: match arms have incompatible types\n  --&gt; src/main.rs:18:28\n   |\n16 | /     match (start, end) {\n17 | |         (Some(s), Some(e)) =&gt; Range { start: s, end: e  },\n   | |                               --------------------------- this is found to be of type `std::ops::Range&lt;isize&gt;`\n18 | |         (Some(s), None) =&gt; RangeFrom { start: s },\n   | |                            ^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::ops::Range`, found struct `std::ops::RangeFrom`\n19 | |         // other options here\n20 | |         _ =&gt; panic!(),\n21 | |     }\n   | |_____- `match` arms have incompatible types\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564499614, "post_id": 57274864, "comment_id": 101047779, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/29256519/155423\">I implemented a trait for another trait but cannot call methods from both traits</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57274864/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564500860, "post_id": 57274864, "comment_id": 101048451, "body": "Making more guesses about what your failure is, your question may be answered by the answers of <a href=\"https://stackoverflow.com/q/37347311/155423\">How is there a conflicting implementation of <code>From</code> when using a generic type?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57274864/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564509170, "post_id": 57274864, "comment_id": 101051574, "body": "Perhaps you could explain what you don&#39;t understand about the compiler&#39;s help messages?"}, {"owner": {"reputation": 4088, "user_id": 466464, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/bc5702cce57af88287cfc9326f285c1b?s=128&d=identicon&r=PG", "display_name": "dzada", "link": "https://stackoverflow.com/users/466464/dzada"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564509184, "post_id": 57274864, "comment_id": 101051578, "body": "@Shepmaster Thank you for your comments, I made a playground example and compile-able example (no crate needed). The issues is a Conflict, although the error message: T must be used in Local type makes little sens to me as T is used as a local type. thanks again"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564511244, "post_id": 57274864, "comment_id": 101052511, "body": "Currently, this is a dupe of <a href=\"https://stackoverflow.com/q/25413201/3650362\">How do I implement a trait I don&#39;t own for a type I don&#39;t own?</a> (answer: you don&#39;t, but there are workarounds). More broadly, I think your problem is addressed by one or both of <a href=\"https://stackoverflow.com/q/51966865/3650362\">How do I make many different structs that all implement the same trait comparable to each other?</a> and <a href=\"https://stackoverflow.com/q/25339603/3650362\">How to test for equality between trait objects?</a> (be sure to read <i>all</i> the answers)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564511406, "post_id": 57274864, "comment_id": 101052616, "body": "You may want to use <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a2ea6132f512b43052bda6eb9734726f\" rel=\"nofollow noreferrer\"><code>enum</code>, instead of a trait</a> or <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=64c505d3444e3785ac54eea384a0db09\" rel=\"nofollow noreferrer\">implement <code>PartialEq</code> for the trait object type</a>."}, {"owner": {"reputation": 4088, "user_id": 466464, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/bc5702cce57af88287cfc9326f285c1b?s=128&d=identicon&r=PG", "display_name": "dzada", "link": "https://stackoverflow.com/users/466464/dzada"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564511820, "post_id": 57274864, "comment_id": 101052827, "body": "@trentcl I do not think this is a duplicate of <a href=\"https://stackoverflow.com/q/25413201/3650362\">stackoverflow.com/q/25413201/3650362</a>, as i own that trait (Event). I would say it does look more like <a href=\"https://stackoverflow.com/q/51966865/3650362\">stackoverflow.com/q/51966865/3650362</a> but if i understand what is written in that post the answer to my question is This is not possible in rust"}, {"owner": {"reputation": 4088, "user_id": 466464, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/bc5702cce57af88287cfc9326f285c1b?s=128&d=identicon&r=PG", "display_name": "dzada", "link": "https://stackoverflow.com/users/466464/dzada"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564512082, "post_id": 57274864, "comment_id": 101052939, "body": "@trentcl thank you for your suggestion about Enum and for the usage of dyn; I will have to add that if the actual type of Event (NoteOn, NoteOff) is different, it should return false. The suggestion with the usage of Enum does not match my need really as I have in the actual implementation not shortened other attributes in this structs. So I guess I will see how to workaround the issue"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564512613, "post_id": 57274864, "comment_id": 101053194, "body": "<code>Event</code> is not relevant; you don&#39;t own <code>PartialEq</code> or <code>T</code> (for some hypothetical <code>T</code>), so you can&#39;t implement <code>PartialEq</code> for <code>T</code>."}, {"owner": {"reputation": 4088, "user_id": 466464, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/bc5702cce57af88287cfc9326f285c1b?s=128&d=identicon&r=PG", "display_name": "dzada", "link": "https://stackoverflow.com/users/466464/dzada"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564512763, "post_id": 57274864, "comment_id": 101053250, "body": "I understand that, @trentcl thank you. About dyn too, This code shoud be not dynamic and generate the PartialEq for each type implementing Event but should in anyway require dynamic dispatch of the type, as this would just mean i should type both implementation manually."}], "answers": [{"tags": [], "owner": {"reputation": 4088, "user_id": 466464, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/bc5702cce57af88287cfc9326f285c1b?s=128&d=identicon&r=PG", "display_name": "dzada", "link": "https://stackoverflow.com/users/466464/dzada"}, "is_accepted": false, "score": 1, "last_activity_date": 1564524194, "creation_date": 1564524194, "answer_id": 57280631, "question_id": 57274864, "link": "https://stackoverflow.com/questions/57274864/implement-a-trait-for-all-types-implementing-a-trait/57280631#57280631", "title": "Implement a trait for all types implementing a trait", "body": "<p>Here is my best \"attempt\" at a possible way to do what i wanted, but in a different way following the remarks from @trentcl and @Shepmaster.</p>\n\n<p>I used an Enum as mentioned by @trentctl to be able to switch between the different types,\nI keep the enum value within a common struct Event so I can easily wrap the different objects and add more code to the Event.\nDoing this also helps to make an easy Vec type.</p>\n\n<p><strong>Here i imagine that i only need the Enum, and not Event and an attribute with the enum, I am still learning the variant enum usage</strong></p>\n\n<p>I also had issues mentioned by @trentcl about the fact i did not own the Vec type, so i wrapped the Vec in a struct Sec instead of simply aliasing the type.\nThis makes my implementation of PartialEq seperated from the type Vec (if i understand, but i m not sure)\n=> the reason i am troubled here is that I thought that using <code>type A = B;</code>did create a new type, but the documentation does state it s aliasing (which could make send to why i m not able to implement PartialEq for Vec)\n<strong>although in the end I imagine i may be very wrong on that too as the fact i created an artificial struct to just wrap 1 attribute also seems counter productive</strong></p>\n\n<p>=> So to conclude for now thank you everyone, I will keep working on this to see how it could be more efficient, but I guess I was simply using the wrong stuff for the context of Rust, <strong>I am not sure this is a good answer and would appreciate feedbacks or other suggestions</strong>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d67b7d993fa6b6285962ee58e9b215e5\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d67b7d993fa6b6285962ee58e9b215e5</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Data = Vec&lt;u8&gt;;\n\n#[derive(Debug)]\nenum EventImpl{\n    NoteOn(u8),\n    NoteOff(u8)\n}\n#[derive(Debug)]\nstruct Event{\n    data:Data,\n    i:EventImpl\n}\n\nimpl Event{\n    fn new(data:Data)-&gt;Self{\n        Event{\n            i: match data[0]{\n                0 =&gt; EventImpl::NoteOn(data[1]),\n                1 =&gt; EventImpl::NoteOff(data[1]),\n                _ =&gt; panic!(\"unk\")\n            },\n            data:data\n        }\n    }\n\n    fn data(&amp;self)-&gt;&amp;Data{\n        &amp;self.data\n    }\n}\n#[derive(Debug)]\nstruct Seq{\n    pub things:Vec&lt;Event&gt;\n}\n\nimpl PartialEq for Seq{\n    fn eq(&amp;self,o:&amp;Self)-&gt;bool{\n    // i have to learn the iterator implementation    \n        let mut r=o.things.len()==self.things.len();\n        if ! r{\n            return false;\n        }\n        for i in 0..o.things.len() {\n            r = r &amp;&amp; o.things[i]==self.things[i];\n        }\n        r\n    }\n}\nimpl PartialEq for Event{\n    fn eq(&amp;self,o:&amp;Self)-&gt;bool{\n    // i have to learn the iterator implementation    \n        std::mem::discriminant(&amp;self.i) == std::mem::discriminant(&amp;o.i) &amp;&amp; o.data()==self.data()\n    }\n}\n\n\nfn main() {\n    let mut s:Seq=Seq{things:vec![Event::new(vec![1,2,3])]};\n    s.things.push(Event::new(vec![0,1,2]));\n    let s2:Seq=Seq{things:vec![Event::new(vec![1,2,3]),Event::new(vec![0,1,2])]};\n\n    println!(\"Hello, world! {:?} {:?}\",s, s.things[1].data());\n    println!(\"S1 == S2 ? {}\",s==s2);\n}\n\n</code></pre>\n"}], "owner": {"reputation": 4088, "user_id": 466464, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/bc5702cce57af88287cfc9326f285c1b?s=128&d=identicon&r=PG", "display_name": "dzada", "link": "https://stackoverflow.com/users/466464/dzada"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 598, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1564524194, "creation_date": 1564499442, "last_edit_date": 1564511533, "question_id": 57274864, "link": "https://stackoverflow.com/questions/57274864/implement-a-trait-for-all-types-implementing-a-trait", "title": "Implement a trait for all types implementing a trait", "body": "<p>I have this issue:</p>\n\n<ul>\n<li>multiple structs implementing a trait <code>Event</code></li>\n<li>all can implement <code>PartialEq</code> trait the same way</li>\n</ul>\n\n<p>I considered writing this (short version)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Data = Vec&lt;u8&gt;;\n\ntrait Event {\n    fn data(&amp;self) -&gt; &amp;Data;\n}\n\nstruct NoteOn {\n    data: Data,\n}\nstruct NoteOff {\n    data: Data,\n}\nimpl Event for NoteOn {\n    fn data(&amp;self) -&gt; &amp;Data {\n        &amp;self.data\n    }\n}\nimpl Event for NoteOff {\n    fn data(&amp;self) -&gt; &amp;Data {\n        &amp;self.data\n    }\n}\nimpl&lt;T: Event&gt; PartialEq for T {\n    fn eq(&amp;self, b: &amp;T) -&gt; bool {\n        self.data() == b.data()\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=181a167f38dd84f83d20466e5fae5790\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `std::cmp::PartialEq&lt;&amp;_&gt;` for type `&amp;_`:\n  --&gt; src/main.rs:23:1\n   |\n23 | impl&lt;T: Event&gt; PartialEq for T {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: conflicting implementation in crate `core`:\n           - impl&lt;A, B&gt; std::cmp::PartialEq&lt;&amp;B&gt; for &amp;A\n             where A: std::cmp::PartialEq&lt;B&gt;, A: ?Sized, B: ?Sized;\n   = note: downstream crates may implement trait `Event` for type `&amp;_`\n\nerror[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct&lt;T&gt;`)\n  --&gt; src/main.rs:23:1\n   |\n23 | impl&lt;T: Event&gt; PartialEq for T {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n   |\n   = note: only traits defined in the current crate can be implemented for a type parameter\n</code></pre>\n\n<p>What is wrong here?\nOr is there another way to implement generically this <code>PartialEq</code> without having to type it once for <code>NoteOn</code> and once for <code>Noteff</code>?</p>\n\n<p>thank you</p>\n"}, {"tags": ["loops", "recursion", "rust", "hashmap", "serde"], "comments": [{"owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564500070, "post_id": 57274688, "comment_id": 101048021, "body": "@Shepmaster Sorry I tried to simplify the json for the question and made a typo <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=89478f07b88bd06fc10a5a648688244c\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564500150, "post_id": 57274688, "comment_id": 101048062, "body": "You&#39;ve tagged this as <a href=\"https://stackoverflow.com/questions/tagged/recursion\">recursion</a>, but I don&#39;t see any attempts at a recursive function. What happens if you try one?"}, {"owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564501220, "post_id": 57274688, "comment_id": 101048634, "body": "@Shepmaster I tried recursion before but I wasn&#39;t sure if that was the only way to solve and I couldn&#39;t get it to work.  I&#39;ve updated the answer with my recursive attempt but I didn&#39;t get very far because of the coercing/static types."}, {"owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564501550, "post_id": 57274688, "comment_id": 101048826, "body": "if it helps im trying to recreate <a href=\"https://github.com/deoxxa/dotty/blob/master/lib/index.js#L234\" rel=\"nofollow noreferrer\">github.com/deoxxa/dotty/blob/master/lib/index.js#L234</a> in rust"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564501980, "post_id": 57274688, "comment_id": 101049049, "body": "See the lines like <code>if (typeof object[k] === &quot;object&quot; &amp;&amp; object[k] !== null)</code>? Replace those with pattern matching."}, {"owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564502091, "post_id": 57274688, "comment_id": 101049089, "body": "interesting!  Is &quot;object&quot; now Value ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564502175, "post_id": 57274688, "comment_id": 101049133, "body": "No, but it&#39;s one of the variants of <a href=\"https://docs.rs/serde_json/1.0.40/serde_json/enum.Value.html\" rel=\"nofollow noreferrer\"><code>Value</code></a>."}, {"owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564502999, "post_id": 57274688, "comment_id": 101049529, "body": "This is awesome \ud83d\ude4c is there a equivalent to concat in rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564503256, "post_id": 57274688, "comment_id": 101049671, "body": "<a href=\"https://stackoverflow.com/q/30154541/155423\">How do I concatenate strings?</a>; <a href=\"https://stackoverflow.com/q/40792801/155423\">Best way to concatenate vectors in Rust</a>;"}, {"owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564511707, "post_id": 57274688, "comment_id": 101052786, "body": "@Shepmaster is there any way I can get more help... I&#39;m still struggling to accomplish the pattern matching w/ recusion. Static typing is messing me up."}], "answers": [{"comments": [{"owner": {"reputation": 1961, "user_id": 132408, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/88d5f8f803895f9f22612570f6d1c363?s=128&d=identicon&r=PG", "display_name": "jsh", "link": "https://stackoverflow.com/users/132408/jsh"}, "edited": false, "score": 0, "creation_date": 1571171203, "post_id": 57275829, "comment_id": 103149335, "body": "this was useful to me in a similar situation.... also found it helpful to differentiate <code>Value::Null</code>.  value types are detailed at <a href=\"https://docs.serde.rs/serde_json/value/enum.Value.html\" rel=\"nofollow noreferrer\">docs.serde.rs/serde_json/value/enum.Value.html</a> and i&#39;m guessing are just variants on the underlying <code>serde</code> types..."}], "tags": [], "owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "is_accepted": true, "score": 2, "last_activity_date": 1564530578, "last_edit_date": 1564530578, "creation_date": 1564502894, "answer_id": 57275829, "question_id": 57274688, "link": "https://stackoverflow.com/questions/57274688/how-to-iterate-over-all-keys-in-a-recursive-nested-hashmap/57275829#57275829", "title": "How to iterate over all keys in a recursive / nested hashmap?", "body": "<pre><code>use serde_json::{Value};\nuse std::fs;\n//use std::path::Path;\nuse std::io::Read;\n\nfn deep_keys(value: &amp;Value, current_path: Vec&lt;String&gt;, output: &amp;mut Vec&lt;Vec&lt;String&gt;&gt;) {\n    if current_path.len() &gt; 0 {\n        output.push(current_path.clone());\n    }\n\n    match value {\n        Value::Object(map) =&gt; {\n            for (k, v) in map {\n                let mut new_path = current_path.clone();\n                new_path.push(k.to_owned());\n                deep_keys(v,  new_path, output);\n\n            }\n        },\n        Value::Array(array) =&gt; {\n            for (i, v) in array.iter().enumerate() {\n                let mut new_path = current_path.clone();\n                new_path.push(i.to_string().to_owned());\n                deep_keys(v,  new_path, output);\n            }\n        },\n        _ =&gt; ()\n    }\n}\n\nfn main() {\n    let mut output = vec![vec![]];\n    let current_path = vec![];\n    let mut file = fs::File::open(\"src/geo.json\").unwrap();\n    let mut data = String::new();\n    file.read_to_string(&amp;mut data).unwrap();\n\n    let value:Value = serde_json::from_str(&amp;data).expect(\"error\");\n    deep_keys(&amp;value, current_path, &amp;mut output);\n    println!(\"{:?}\", output);\n}\n</code></pre>\n"}], "owner": {"reputation": 15015, "user_id": 1191635, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/I8bEt.jpg?s=128&g=1", "display_name": "Armeen Harwood", "link": "https://stackoverflow.com/users/1191635/armeen-harwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1165, "favorite_count": 0, "accepted_answer_id": 57275829, "answer_count": 1, "score": 1, "last_activity_date": 1564530578, "creation_date": 1564498831, "last_edit_date": 1564515404, "question_id": 57274688, "link": "https://stackoverflow.com/questions/57274688/how-to-iterate-over-all-keys-in-a-recursive-nested-hashmap", "title": "How to iterate over all keys in a recursive / nested hashmap?", "body": "<p>I'm looking to create a <code>Vec&lt;Vec&lt;String&gt;&gt;</code> from a <code>HashMap&lt;String, Value&gt;</code>. The <code>Value</code> type is from <a href=\"https://docs.serde.rs/serde_json/\" rel=\"nofollow noreferrer\">serde_json</a>.</p>\n\n<p>The expected output is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[\n [\"name\"]\n [\"age\"]\n [\"phones\"]\n [\"phones\", \"0\"]\n [\"phones\", \"1\"]\n [\"friends\"]\n [\"friends\", \"0\"]\n [\"friends\", \"0\", \"name\"]\n [\"friends\", \"0\", \"age\"]\n [\"friends\", \"0\", \"phones\"]\n [\"friends\", \"0\", \"phones\", \"0\"]\n [\"friends\", \"0\", \"phones\", \"1\"]\n [\"friends\", \"0\", \"friends\"]\n [\"friends\", \"0\", \"friends\", \"0\"]\n [\"friends\", \"0\", \"friends\", \"0\", \"name\"]\n [\"friends\", \"0\", \"friends\", \"0\", \"age\"]\n [\"friends\", \"0\", \"friends\", \"0\", \"phones\"]\n [\"friends\", \"0\", \"friends\", \"0\", \"phones\", \"0\"]\n [\"friends\", \"0\", \"friends\", \"0\", \"friends\"]\n [\"friends\", \"0\", \"friends\", \"1\"]\n [\"friends\", \"0\", \"friends\", \"1\", \"name\"]\n [\"friends\", \"0\", \"friends\", \"1\", \"age\"]\n [\"friends\", \"0\", \"friends\", \"1\", \"phones\"]\n [\"friends\", \"0\", \"friends\", \"1\", \"phones\", \"0\"]\n [\"friends\", \"0\", \"friends\", \"1\", \"friends\"]\n [\"friends\", \"0\", \"friends\", \"2\"]\n [\"friends\", \"0\", \"friends\", \"2\", \"name\"]\n [\"friends\", \"0\", \"friends\", \"2\", \"age\"]\n [\"friends\", \"0\", \"friends\", \"2\", \"phones\"]\n [\"friends\", \"0\", \"friends\", \"2\", \"phones\", \"0\"]\n [\"friends\", \"0\", \"friends\", \"2\", \"friends\"]\n];\n</code></pre>\n\n<p><strong>Question:</strong> How to iterate over all keys in a recursive / nested hashmap and match the expect output above?</p>\n\n<pre><code>use serde_json::{Result, Value};\nuse std::collections::HashMap;\n\nfn deep_keys(data: HashMap&lt;String, Value&gt;) -&gt; Vec&lt;Vec&lt;String&gt;&gt;{\n    let mut vec = Vec::new();\n    vec.push(Vec::new());\n\n    // logic\n\n    for (str, val) in data {\n        match &amp;val {\n            Value::String(string) =&gt; vec[0].push(str),\n            Value::Number(Number) =&gt; vec[0].push(str),\n            Value::Bool(bool) =&gt; vec[0].push(str),\n            _ =&gt; {\n                let mut map = HashMap::new();\n                for (innerStr, innerVal) in val {\n                    let mut map = HashMap::new();\n                    map.insert(str, innerVal);\n                    deep_keys(map);\n                }\n\n            }\n        };\n    }\n    vec\n}\n\nfn main() {\n    let data = r#\"\n    {\n        \"name\": \"John Doe\",\n        \"age\": 43,\n        \"phones\": [\n            \"+44 1234567\",\n            \"+44 2345678\"\n        ],\n        \"friends\": [\n            {\n                \"name\": \"Jenn Doe\",\n                \"age\": 15,\n                \"phones\": [\"+44 1234567\", \"+44 2345678\"],\n                \"friends\": [\n                    {\n                        \"name\": \"Richard Carter\",\n                        \"age\": 20,\n                        \"phones\": [\"+1 1234567\"],\n                        \"friends\": []\n                    },\n                      {\n                        \"name\": \"Angus Yik\",\n                        \"age\": 21,\n                        \"phones\": [\"+1 1234567\"],\n                        \"friends\": []\n                    },\n                    {\n                        \"name\": \"Diana White\",\n                        \"age\": 24,\n                        \"phones\": [\"+1 12345673\"],\n                        \"friends\": []\n                    }\n                ]\n            }\n        ]\n    }\"#;\n    let v: HashMap&lt;String, Value&gt; = serde_json::from_str(data).expect(\"error\");\n    println!(\"{:?}\", deep_keys(v));\n}\n</code></pre>\n\n<p>When I try to make <code>deep_keys</code> recursive, it reports an error about mismatching types that I'm not sure how to fix:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rror[E0277]: `serde_json::value::Value` is not an iterator\n  --&gt; src/main.rs:17:45\n   |\n17 |                 for (innerStr, innerVal) in val {\n   |                                             ^^^ `serde_json::value::Value` is not an iterator\n   |\n   = help: the trait `std::iter::Iterator` is not implemented for `serde_json::value::Value`\n   = note: required by `std::iter::IntoIterator::into_iter`\n</code></pre>\n"}, {"tags": ["rust", "macros"], "comments": [{"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1564497932, "post_id": 57274312, "comment_id": 101046742, "body": "Not quite getting the context here.. <code>format!</code> requires the format string to be static, which means a macro can determine the names in it. If you have values that are neither displayable nor used, why pass them to <code>format!</code>?"}, {"owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "reply_to_user": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1564498195, "post_id": 57274312, "comment_id": 101046908, "body": "This is for a macro that is available as a library. The format string is known by the user of the library, but is opaque to the macro. The values are the fields in a struct, so there is no way for the macro to know which fields are used in the format string and which aren&#39;t."}, {"owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "reply_to_user": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1564498295, "post_id": 57274312, "comment_id": 101046989, "body": "I didn&#39;t want to make the question unreadable by adding a huge macro, but the exact place where it is needed is here: <a href=\"https://github.com/lovasoa/custom_error/blob/master/src/lib.rs#L383-L392\" rel=\"nofollow noreferrer\">github.com/lovasoa/custom_error/blob/master/src/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1564498373, "post_id": 57274312, "comment_id": 101047028, "body": "Your question is reasonable, but I think that you are solving the wrong problem. By doing the hardcoding this way, it appears that you will prevent being able to call methods on the error values, such as <code>Path::display</code>. SNAFU avoids this problem by <a href=\"https://github.com/shepmaster/snafu/blob/31ac98aa3b4aff990fc8c5f416489f485cebf8cb/snafu-derive/src/lib.rs#L1386-L1391\" rel=\"nofollow noreferrer\">allowing the user to specify all the arguments to <code>write!</code> and allowing unused variables</a>. (I also recommend just <i>using</i> SNAFU instead of writing a new crate, but I&#39;m biased there)"}, {"owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "edited": false, "score": 0, "creation_date": 1564498648, "post_id": 57274312, "comment_id": 101047210, "body": "The sole goal of custom-error is to remove boilerplate. There are many other error libraries that help define error types, but all of them involve writing more code, and result in code that is in my opinion not as clear and readable. So I would really like being able to keep the simple syntax that is currently implemented."}, {"owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "edited": false, "score": 1, "creation_date": 1564498769, "post_id": 57274312, "comment_id": 101047292, "body": "custom-error doesn&#39;t prevent writing custom error formatting code, it is simply not the default:  <a href=\"https://docs.rs/custom_error/1.7.0/custom_error/macro.custom_error.html#custom-formatting-function-for-error-messages\" rel=\"nofollow noreferrer\">docs.rs/custom_error/1.7.0/custom_error/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564513919, "post_id": 57274312, "comment_id": 101053742, "body": "&quot;How can I allow unused named arguments that do not implement Display in a call to format!?&quot; no"}], "owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1564498060, "creation_date": 1564497737, "last_edit_date": 1564498060, "question_id": 57274312, "link": "https://stackoverflow.com/questions/57274312/how-can-i-allow-unused-named-arguments-that-do-not-implement-display-in-a-call-t", "title": "How can I allow unused named arguments that do not implement Display in a call to format!?", "body": "<p>In a macro, given an opaque format string and some variables, how do I format a string even if the format string does not reference all the variables?</p>\n\n<p>For instance, given the string <code>\"You are {age} years old\"</code>, <code>age</code> and <code>birthday</code> :</p>\n\n<ul>\n<li>I cannot generate <code>format!(\"You are {age} years old\", age=age, birthday=birthday)</code>, because I would get: <code>error: named argument never used</code>.</li>\n<li>I cannot generate <code>format!(\"You are {age} years old\", age=age)</code>, because I have no way of knowing statically in the macro whether the format string references <code>birthday</code> or not.</li>\n<li>I cannot use <a href=\"https://stackoverflow.com/questions/41841400/allow-unused-named-arguments-in-rusts-format-family?answertab=active#tab-top\">this trick</a> and generate <code>format!(\"You are {age} years old{age:.0}{birthday:.0}\", age=age.to_string(), birthday=birthday.to_string())</code> because <code>birthday</code> is a variable of a type that does not implement <code>std::fmt::Display</code>.</li>\n</ul>\n\n<p>I need this in order to add support for non-displayable parameters to my <a href=\"https://github.com/lovasoa/custom_error\" rel=\"nofollow noreferrer\">custom-error</a> crate.</p>\n\n<p>This question is similar to <a href=\"https://stackoverflow.com/questions/41841400/allow-unused-named-arguments-in-rusts-format-family\">Allow unused named arguments in Rust's format!() family</a>, but is about non-displayable arguments.</p>\n"}, {"tags": ["callback", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1564486247, "post_id": 57270635, "comment_id": 101039313, "body": "Why is all the code commented out? Please don&#39;t do that! Also, please use <code>rustfmt</code> in the upper right corner of the playground or by using <code>cargo fmt</code> on your machine."}, {"owner": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564490424, "post_id": 57270635, "comment_id": 101041815, "body": "@hellow Thanks for the advise. I am new to Rust, didn&#39;t know that. The Play Ground is Brilliant Idea."}], "answers": [{"comments": [{"owner": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "edited": false, "score": 0, "creation_date": 1564489705, "post_id": 57271524, "comment_id": 101041372, "body": "Thanks, can you please give more insight about the usage of Box&lt;Fn()&gt;."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "edited": false, "score": 1, "creation_date": 1564489897, "post_id": 57271524, "comment_id": 101041509, "body": "@Ian.Zhang A Box is useful to store non Sized values. A <code>Fn(String)</code> struct parameter doesn&#39;t have a size known at compile time, which is why you need to box it. If you store a reference, there&#39;s no need for it: references have a constant size."}, {"owner": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "edited": false, "score": 0, "creation_date": 1564490097, "post_id": 57271524, "comment_id": 101041627, "body": "Yes, originally I started a thread and tried using callback gather results, but failed. Then solve that using channels. I wander if callback would work too."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "edited": false, "score": 2, "creation_date": 1564490197, "post_id": 57271524, "comment_id": 101041685, "body": "The easy and clean solution is to use channels rather than try to pass your callbacks to other threads."}, {"owner": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "edited": false, "score": 0, "creation_date": 1564490199, "post_id": 57271524, "comment_id": 101041687, "body": "I See, Thanks again"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 4, "last_activity_date": 1564489764, "last_edit_date": 1564489764, "creation_date": 1564489154, "answer_id": 57271524, "question_id": 57270635, "link": "https://stackoverflow.com/questions/57270635/how-to-pass-a-method-as-callback/57271524#57271524", "title": "How to pass a method as callback", "body": "<p>Yes you can pass a method as callback to your struct and call it from this struct's method. And you don't need to box the closure as you pass a reference:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A {}\n\nimpl A {\n    fn finish(&amp;self, msg: String) {\n        println!(\"{}\", msg);\n    }\n\n    fn test(&amp;self) {\n        let fun = |msg: String| self.finish(msg);\n        let b = B::new(&amp;fun);\n        b.start(\"hi\".to_string().clone());\n    }\n}\n\nstruct B&lt;'b&gt; {\n    cb: &amp;'b Fn(String),\n}\n\nimpl&lt;'b&gt; B&lt;'b&gt; {\n    fn new(cb: &amp;'b Fn(String)) -&gt; B&lt;'b&gt; {\n        B { cb }\n    }\n\n    fn start(&amp;self, msg: String) {\n        (self.cb)(msg);\n    }\n}\n\nfn main() {\n    let a = A {};\n    a.test();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0c06b78763dcb75e377da60df8f88c59\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The box is useful when you move your function to the new struct, which is not your case.</p>\n\n<p><strong>Note:</strong> As your function is called <code>start</code>, I suspect in your real use case you want to start a thread, in which case you should probably look at <a href=\"https://docs.rs/crossbeam/0.7.2/crossbeam/channel/index.html\" rel=\"nofollow noreferrer\">channels</a> instead of callbacks.</p>\n"}], "owner": {"reputation": 121, "user_id": 1142424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1c58885379469c37242a7ab6819f1b3?s=128&d=identicon&r=PG", "display_name": "Ian.Zhang", "link": "https://stackoverflow.com/users/1142424/ian-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 1, "accepted_answer_id": 57271524, "answer_count": 1, "score": 3, "last_activity_date": 1564490275, "creation_date": 1564486198, "last_edit_date": 1564490275, "question_id": 57270635, "link": "https://stackoverflow.com/questions/57270635/how-to-pass-a-method-as-callback", "title": "How to pass a method as callback", "body": "<p>In Python or C++, a class say A can delegate some work to another instance of class Say B, and set a callback method of A in B.\nI try to do this in Rust, but so far I got nowhere, beaten by Rust compiler.</p>\n\n<p>Here is Code I have tried, remaining code is at the end of this post.</p>\n\n<p>In A::test I tried using closure to get a Fn() trait object as callback.</p>\n\n<pre><code>// let b = B::new(self.finish)); // ideally but would not compile\n\n// let test :Box&lt;Fn(String)&gt; = Box::new(move |msg| {self.finish(msg);}); // cannot infer an appropriate lifetime due to conflicting requirements\n// let b = B::new(&amp;test);\n\n// let b = B::new(&amp;Box::new( |msg| {A::finish(&amp;self, msg);} )); // expected trait std::ops::Fn, found closure\n// let b = B::new(&amp;Box::new( |msg| {self.finish(msg);} )); // expected trait std::ops::Fn, found closure\n</code></pre>\n\n<p>Nothing work yet. Is there a way doing this?</p>\n\n<p>Any help would be appreciated!</p>\n\n<p>Or Am I fundamentally wrong? Do Rust request an other way to implement the idea here? </p>\n\n<p>Here is my testing code</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=496829a5ae65eca989fdaa3c0c9dd1db\" rel=\"nofollow noreferrer\">Play Ground Link</a></p>\n\n<pre><code>struct A {}\n\nimpl A {\n    fn finish(&amp;self, msg: String) {\n        println!(\"{}\", msg);\n    }\n\n    fn test(&amp;self) {\n\n        //let b = B::new(self.finish)); // would not compile\n\n        // let test :Box&lt;Fn(String)&gt; = Box::new(move |msg| {self.finish(msg);}); // cannot infer an appropriate lifetime due to conflicting requirements\n        // let b = B::new(&amp;test);\n\n        // let b = B::new(&amp;Box::new( |msg| {A::finish(&amp;self, msg);} )); // expected trait std::ops::Fn, found closure\n        let b = B::new(&amp;Box::new( |msg| {self.finish(msg);} )); // expected trait std::ops::Fn, found closure\n\n        b.start(\"hi\".to_string().clone());\n    }\n}\n\nstruct B&lt;'b&gt; {\n    // cb:fn(msg:String),\n    cb: &amp;'b Box&lt;Fn(String)&gt;,\n}\n\nimpl&lt;'b&gt; B&lt;'b&gt; {\n    fn new(cb: &amp;'b Box&lt;Fn(String)&gt;) -&gt; B&lt;'b&gt; {\n        B { cb: cb }\n    }\n\n    fn start(&amp;self, msg: String) {\n        (self.cb)(msg);\n    }\n}\n\nfn main() {\n    let a = A {};\n    a.test();\n}\n</code></pre>\n"}, {"tags": ["rust", "metaprogramming"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1564483734, "post_id": 57269765, "comment_id": 101037974, "body": "You can use the <a href=\"https://docs.rs/restruct_derive/0.1.0/restruct_derive/\" rel=\"nofollow noreferrer\">restruct</a>-crate, which gives you compile-time/const packing and unpacking. As of now, it does require nightly, though."}], "answers": [{"comments": [{"owner": {"reputation": 18493, "user_id": 388661, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/61df8d728c699c39c4c73507da598712?s=128&d=identicon&r=PG", "display_name": "davmac", "link": "https://stackoverflow.com/users/388661/davmac"}, "edited": false, "score": 0, "creation_date": 1564651158, "post_id": 57270359, "comment_id": 101104128, "body": "This is in fact decently close to what I was looking for, thanks. If it wasn&#39;t for requiring Nightly this would be just about perfect. It&#39;s interesting how large the implementation of the crate is compared to the C++ template, though!"}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 4, "last_activity_date": 1564485310, "creation_date": 1564485310, "answer_id": 57270359, "question_id": 57269765, "link": "https://stackoverflow.com/questions/57269765/compile-time-packet-construction-in-rust/57270359#57270359", "title": "Compile-time packet construction in Rust", "body": "<p>Slightly enlarging my comment with actual code: The <a href=\"https://docs.rs/restruct_derive/0.1.0/restruct_derive/\" rel=\"nofollow noreferrer\"><code>restruct</code></a>-crate can do what you ask for; it does, however, require nightly as of now, as packing und unpacking are <code>const</code>-functions, which are not stable yet.</p>\n\n<p>Given your example, after adding <code>restruct</code> and <code>restruct_derive</code> to the dependencies:</p>\n\n<pre><code>#![feature(const_int_conversion)]\n#![feature(const_fn)]\n#![feature(const_slice_len)]\n#![feature(const_transmute)]\n\n\n/// A packer/unpacker for two unsigned bytes, a group of eight unsigned bytes, a group of\n/// four unsigned bytes and four padding bytes; all in little endian.\n#[derive(restruct_derive::Struct)]\n#[fmt=\"&lt; 2B 8s 4s 4x\"]\nstruct Foo;\n\n\nfn main() {\n    let data = (0xAA, 0xBB, [1,2,3,4,5,6,7,8], [4,3,2,1]);\n\n    println!(\"The buffer has a size of {}\", Foo::SIZE);\n\n    let buf: [u8; Foo::SIZE] = Foo::pack(data);\n    println!(\"Packed as {:?}\", buf);\n\n    let unpacked: &lt;Foo as restruct::Struct&gt;::Unpacked = Foo::unpack(buf);\n    println!(\"Unpacked as {:?}\", unpacked);\n}\n</code></pre>\n"}], "owner": {"reputation": 18493, "user_id": 388661, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/61df8d728c699c39c4c73507da598712?s=128&d=identicon&r=PG", "display_name": "davmac", "link": "https://stackoverflow.com/users/388661/davmac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 3, "accepted_answer_id": 57270359, "answer_count": 1, "score": 5, "last_activity_date": 1564485310, "creation_date": 1564483112, "last_edit_date": 1564484288, "question_id": 57269765, "link": "https://stackoverflow.com/questions/57269765/compile-time-packet-construction-in-rust", "title": "Compile-time packet construction in Rust", "body": "<p>I have a C++ program where I've used template metaprogramming to generate small binary-format packets to be sent \"over the wire\", which gives better safety and clarity than a more naive approach of allocating a fixed-size buffer and copying various data items into it using calculated-by-hand offsets.</p>\n\n<pre><code>int foo(int fd, long long data1, float f1)\n{\n    auto m = membuf()\n             .append&lt;char&gt;(0xAA).append&lt;char&gt;(0xBB)  // header\n             .append(data1)\n             .append(f1)\n             .append(555); // in the pipe (arbitary extra data)\n    return write(fd, m.data(), m.size());\n}\n</code></pre>\n\n<p>This would send a packet consisting of the two bytes <code>0xAA</code> and <code>0xBB</code>, (for example) 8 bytes from <code>data1</code>, 4 bytes from <code>f1</code>, and 4 bytes forming <code>555</code>. (Actual sizes of <code>int</code> and so on would depend on compiler/architecture details of course, but I could also use eg <code>uint64_t</code> type for precise control).</p>\n\n<p>(Note: The full implementation of <code>membuf</code> isn't really relevant to the question, but you can see it here if interested: <a href=\"https://godbolt.org/z/sr0Cuu\" rel=\"nofollow noreferrer\">https://godbolt.org/z/sr0Cuu</a>)</p>\n\n<p>The important characteristics in this case are that:</p>\n\n<ul>\n<li>no heap allocation is involved, and</li>\n<li>the size of the data packet and the offsets of each of the values are calculated at compile time</li>\n<li>it's all standard C++, no extensions, no experimental features (in fact it's C++11)</li>\n</ul>\n\n<p>As it happens, this is compiled into a very efficient sequence of instructions which simply allocates the buffer on the stack and writes each value to the correct place within it:</p>\n\n<pre><code>foo(int, long long, float):\n        subq    $40, %rsp\n        movl    $-17494, %eax\n        movl    $18, %edx\n        movq    %rsi, 2(%rsp)\n        movq    %rsp, %rsi\n        movw    %ax, (%rsp)\n        movl    $555, 14(%rsp)\n        movd    %xmm0, 10(%rsp)\n        call    write\n        addq    $40, %rsp\n        ret\n</code></pre>\n\n<p>What I am looking for is a Rust solution to achieve the same thing. I don't mind necessarily if the Rust compiler can't currently produce code that is quite as efficient as above, but it is important that the above requirements are met: no heap allocation, no dynamic calculation of packet size or data offsets, no use of experimental/\"unstable\" language features.</p>\n\n<p>I've been reading <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">the Rust book</a> and trying to understand if and how I could do this in Rust, but so far I've gotten nowhere:</p>\n\n<ul>\n<li>Generic types don't seem to help, as they are more like \"templates\" in the original sense of the word than in the C++ sense. They also don't seem to allow parameterising by anything but types.</li>\n<li>Macros seem to be the metaprogramming tool of choice in Rust, but unless I'm not understanding correctly they operate on token streams and, unless there's a way I'm missing, they can't do the kind of thing that the <code>membuf</code> example does.</li>\n</ul>\n\n<p>Essentially: I want a generic type, parameterised by buffer size, which can take a value and return a larger, fixed-size buffer, with the data appended at the end. But maybe that specification is too C++-centric and there's another tack that can be taken in Rust - I just need to figure out what it is!</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564472151, "post_id": 57266481, "comment_id": 101031584, "body": "The first snippet does <b>not</b> compile as well as the second one!"}, {"owner": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564473911, "post_id": 57266481, "comment_id": 101032499, "body": "@hellow that&#39;s because I didn&#39;t add the rest of fn main which I thought was not helpful."}, {"owner": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564474436, "post_id": 57266481, "comment_id": 101032780, "body": "@hellow added complete source code."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564474465, "post_id": 57266481, "comment_id": 101032797, "body": "@Sajuuk The message is clear: <i>&quot;expected lifetime parameter&quot;</i>. Did you search for it ?"}, {"owner": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564474583, "post_id": 57266481, "comment_id": 101032862, "body": "@DenysS&#233;guret I did quite a lot of search about it,  theory be that I need to annotate lifetime for <code>&amp;str</code> in <code>Vec&lt;&amp;str&gt;</code> like <code>Vec&lt;&amp;&#39;a str&gt;</code> but that just brought in more problem. the difference between my sitation and that post is that I have no explicit use for &amp;str in my struct.."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564474627, "post_id": 57266481, "comment_id": 101032888, "body": "@Sajuuk this second QA should help with the additional problems: <a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\" title=\"what are the differences between rusts string and str\">stackoverflow.com/questions/24158114/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564475325, "post_id": 57266481, "comment_id": 101033275, "body": "@Sajuuk <i>&quot;that&#39;s because I didn&#39;t add the rest of fn main&quot;</i>: no! Because of you changed it from <code>&amp;u8</code> to <code>u8</code>. The first one is a reference, whilst the second one isn&#39;t one. That&#39;s the difference."}], "answers": [{"comments": [{"owner": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "edited": false, "score": 0, "creation_date": 1564475096, "post_id": 57267192, "comment_id": 101033142, "body": "That&#39;s it except a final step to be performed: I have to add anonymous lifetime:``&lt;&#39;_&gt;` after the <code>StrDisplayable</code> in <code>impl</code> statement before the code can compile. thanks!"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "edited": false, "score": 0, "creation_date": 1564475181, "post_id": 57267192, "comment_id": 101033188, "body": "Yeah, if you&#39;re using Rust 2018 (hopefully you are), you should (need?) to add the anonymous lifetime, which can then be inferred by the compiler."}, {"owner": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "edited": false, "score": 0, "creation_date": 1564475210, "post_id": 57267192, "comment_id": 101033204, "body": "can you explain why only write like this is not sufficient?: <code>struct StrDisplayable(Vec&lt;&amp;&#39;a str&gt;);</code> alsp please edit the &lt;&#39;_&gt; into answer for more clarity perhaps"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "edited": false, "score": 0, "creation_date": 1564475238, "post_id": 57267192, "comment_id": 101033224, "body": "In that case, you&#39;re referencing a lifetime that isn&#39;t defined anywhere."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1564475598, "post_id": 57267192, "comment_id": 101033419, "body": "How does your answer differ from the <a href=\"https://stackoverflow.com/questions/33485203/what-does-missing-lifetime-specifier-mean-when-storing-a-str-in-a-structure\">suggested duplicate</a>?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1564475599, "post_id": 57267192, "comment_id": 101033420, "body": "While the string slices in the vector will only live as long as the struct, it is incorrect to say the same for the strings themselves. The only requirement is that they must only outlive the lifetime <code>&#39;a</code>, which can be wider than the lifetime of a value of type <code>StrDisplayable</code>."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1564475718, "post_id": 57267192, "comment_id": 101033498, "body": "@E_net4 Corrected, it now says it lives for at least that long."}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564475774, "post_id": 57267192, "comment_id": 101033532, "body": "@hellow That dupe was suggested seconds before I posted my answer."}], "tags": [], "owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "is_accepted": true, "score": 0, "last_activity_date": 1564475686, "last_edit_date": 1564475686, "creation_date": 1564474620, "answer_id": 57267192, "question_id": 57266481, "link": "https://stackoverflow.com/questions/57266481/why-is-vecstr-missing-lifetime-specifier-here/57267192#57267192", "title": "Why is Vec&lt;&amp;str&gt; missing lifetime specifier here?", "body": "<p>The compiler is told that you're borrowing a value, but not for how long it will live. Should it be static? Something else?</p>\n\n<p>I presume you're trying to do the following.</p>\n\n<pre><code>struct StrDisplayable&lt;'a&gt;(Vec&lt;&amp;'a str&gt;);\n</code></pre>\n\n<p>This way, you're explicitly telling the compiler that the strings will live at least as long as the struct, no less.</p>\n\n<p>You'll also need to add in a lifetime in the implementation of the trait, which can by anonymous if using Rust 2018.</p>\n"}], "owner": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 498, "favorite_count": 1, "closed_date": 1564487172, "accepted_answer_id": 57267192, "answer_count": 1, "score": -1, "last_activity_date": 1564476329, "creation_date": 1564471921, "last_edit_date": 1564476329, "question_id": 57266481, "link": "https://stackoverflow.com/questions/57266481/why-is-vecstr-missing-lifetime-specifier-here", "closed_reason": "Duplicate", "title": "Why is Vec&lt;&amp;str&gt; missing lifetime specifier here?", "body": "<p>This code compiles:</p>\n\n<pre><code>struct IntDisplayable(Vec&lt;u8&gt;);\n\nimpl fmt::Display for IntDisplayable {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        for v in &amp;self.0 {\n            write!(f, \"\\n{}\", v)?;\n        }\n        Ok(())\n    }\n}\n\nfn main() {\n        let vec: Vec&lt;u8&gt; = vec![1,2,3,4,5];\n        let vec_Foo = IntDisplayable(vec);\n        println!(\"{}\",vec_Foo);\n}\n</code></pre>\n\n<p>whilst this code doesn't:</p>\n\n<pre><code>struct StrDisplayable(Vec&lt;&amp;str&gt;);\n\nimpl fmt::Display for StrDisplayable {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        for v in &amp;self.0 {\n            write!(f, \"\\n{}\", v)?;\n        }\n        Ok(())\n    }\n}\n\nfn main() {\n        let vec: Vec&lt;&amp;str&gt; = vec![\"a\",\"bc\",\"def\"];\n        let vec_Foo = StrDisplayable(vec);\n        println!(\"{}\",vec_Foo);\n}\n</code></pre>\n\n<p>error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/lib.rs:3:27\n  |\n3 | struct StrDisplayable(Vec&lt;&amp;str&gt;);\n  |                           ^ expected lifetime parameter\n</code></pre>\n\n<p>What I'm trying to do is to implement <code>fmt::Display</code> for a <code>Vec&lt;&amp;str&gt;</code>, which generally required wrapping <code>Vec</code> like <a href=\"https://stackoverflow.com/questions/30633177/implement-fmtdisplay-for-vect\">this</a>, however it only works for <code>Vec&lt;u8&gt;</code>, why substitute <code>Vec&lt;u8&gt;</code> into <code>Vec&lt;&amp;str&gt;</code> led to such compile error?</p>\n"}, {"tags": ["testing", "rust", "mocking", "monkeypatching"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1564487538, "post_id": 57266253, "comment_id": 101040057, "body": "You may also find it useful to use <code>#[cfg(test)]</code> to mark code as compiled only in test builds."}], "owner": {"reputation": 607, "user_id": 1632547, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0981a6be0e2247d9a87190b219c0a6c6?s=128&d=identicon&r=PG", "display_name": "Philip Ridout", "link": "https://stackoverflow.com/users/1632547/philip-ridout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 57, "favorite_count": 0, "closed_date": 1564511988, "answer_count": 0, "score": 1, "last_activity_date": 1564471433, "creation_date": 1564471120, "last_edit_date": 1564471433, "question_id": 57266253, "link": "https://stackoverflow.com/questions/57266253/rust-replace-function-on-struct", "closed_reason": "Duplicate", "title": "Rust: Replace function on struct", "body": "<p>I have the following code which I'm trying to test. My question is how do I replace the function something that's implemented on B? So that under test B.something does nothing, or returns a specified value?</p>\n\n<pre><code>trait DoSomething {\n    fn something(&amp;mut self);\n}\n\nstruct A {}\nstruct B {}\n\nimpl DoSomething for A {\n    fn something(&amp;mut self) {\n        println!(\"doing something on A\");\n        let mut b = B{};\n        b.something();\n    }\n}\n\nimpl DoSomething for B {\n    fn something(&amp;mut self) {\n        println!(\"doing something on B\");\n    }\n}\n\nfn main() {\n    let mut a = A{};\n    a.something();\n}\n</code></pre>\n\n<p>The above code is available in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b1ece308073b127ea675cadae13dc9e0\" rel=\"nofollow noreferrer\">rust playground</a></p>\n\n<p>Coming from python I would simply patch.object(b, 'something')</p>\n"}, {"tags": ["sockets", "rust", "type-conversion"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1564453076, "last_edit_date": 1564453076, "creation_date": 1564451856, "answer_id": 57263371, "question_id": 57263316, "link": "https://stackoverflow.com/questions/57263316/how-to-convert-a-socketaddr-to-a-string-in-rust/57263371#57263371", "title": "How to convert a SocketAddr to a String in Rust?", "body": "<p>You convert it to a string by calling <a href=\"https://doc.rust-lang.org/std/string/trait.ToString.html#tymethod.to_string\" rel=\"nofollow noreferrer\"><code>to_string</code></a>:</p>\n\n<pre><code>fn example(addr: &amp;SocketAddr) -&gt; String {\n    addr.to_string()\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27974327/155423\">How to find in documentation that to_string is available for &amp;str?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27769681/155423\">Should I implement Display or ToString to render a type as a string?</a></li>\n</ul>\n"}], "owner": {"reputation": 31, "user_id": 7786405, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c8fd4a9a68b261e23c1bca2d9842ef6e?s=128&d=identicon&r=PG&f=1", "display_name": "CollaborativeLearner", "link": "https://stackoverflow.com/users/7786405/collaborativelearner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 494, "favorite_count": 1, "accepted_answer_id": 57263371, "answer_count": 1, "score": -1, "last_activity_date": 1564453076, "creation_date": 1564451312, "last_edit_date": 1564451981, "question_id": 57263316, "link": "https://stackoverflow.com/questions/57263316/how-to-convert-a-socketaddr-to-a-string-in-rust", "title": "How to convert a SocketAddr to a String in Rust?", "body": "<p>How can I convert a <code>SocketAddr</code> into a <code>String</code>? I know <a href=\"https://stackoverflow.com/q/28255861/155423\">how to do the conversion the other way round</a>.</p>\n"}, {"tags": ["generics", "types", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564450059, "post_id": 57262540, "comment_id": 101025417, "body": "See <a href=\"https://stackoverflow.com/q/41794800/155423\">Why is the bound <code>T: &#39;a</code> required in order to store a reference <code>&amp;&#39;a T</code>?</a> for a similar case that was streamlined."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564449754, "post_id": 57262628, "comment_id": 101025352, "body": "When you find an answer, please <a href=\"https://www.google.com/search?q=site:stackoverflow.com%20rust%20RFC%202089\" rel=\"nofollow noreferrer\">search for existing answers</a> that match. This is the single best way to identify duplicates and avoid repeating information across many SO Q&amp;A."}], "tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": false, "score": 0, "last_activity_date": 1564449999, "last_edit_date": 1564449999, "creation_date": 1564444538, "answer_id": 57262628, "question_id": 57262540, "link": "https://stackoverflow.com/questions/57262540/why-do-i-need-to-repeat-my-generic-type-constraint-when-implementing-a-trait/57262628#57262628", "title": "Why do I need to repeat my generic type constraint when implementing a trait?", "body": "<p>There's the \"Implied bounds\" <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2089-implied-bounds.md\" rel=\"nofollow noreferrer\">RFC 2089</a>, which - when implemented - will make the duplication unnecessary.</p>\n\n<p>Specifically for the <code>T: Debug</code> case I wouldn't have that bound in the struct definition.</p>\n"}], "owner": {"reputation": 21716, "user_id": 2401769, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/wkEbw.jpg?s=128&g=1", "display_name": "Matias Cicero", "link": "https://stackoverflow.com/users/2401769/matias-cicero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 423, "favorite_count": 0, "closed_date": 1564449690, "answer_count": 1, "score": 2, "last_activity_date": 1564449999, "creation_date": 1564443643, "last_edit_date": 1564449859, "question_id": 57262540, "link": "https://stackoverflow.com/questions/57262540/why-do-i-need-to-repeat-my-generic-type-constraint-when-implementing-a-trait", "closed_reason": "Duplicate", "title": "Why do I need to repeat my generic type constraint when implementing a trait?", "body": "<p>While learning Rust, I stumbled upon the following scenario.</p>\n\n<p>Consider this example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt::Debug;\n\nstruct Foo&lt;T&gt;\nwhere\n    T: Debug,\n{\n    data: T,\n}\n\nimpl&lt;T&gt; Drop for Foo&lt;T&gt; {\n    fn drop(&amp;mut self) {\n        println!(\"Dropping Foo with data: '{:?}'!\", self.data);\n    }\n}\n</code></pre>\n\n<p>This does not compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `T` doesn't implement `std::fmt::Debug`\n  --&gt; src/lib.rs:10:9\n   |\n10 | impl&lt;T&gt; Drop for Foo&lt;T&gt; {\n   |         ^^^^ `T` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`\n   |\n   = help: the trait `std::fmt::Debug` is not implemented for `T`\n   = help: consider adding a `where T: std::fmt::Debug` bound\nnote: required by `Foo`\n  --&gt; src/lib.rs:3:1\n   |\n3  | / struct Foo&lt;T&gt;\n4  | | where\n5  | |     T: Debug,\n6  | | {\n7  | |     data: T,\n8  | | }\n   | |_^\n</code></pre>\n\n<p>The way to fix this is to explicitly define the type constraint when implementing <code>Drop</code>:</p>\n\n<pre><code>impl&lt;T&gt; Drop for Foo&lt;T&gt;\nwhere\n    T: Debug,\n{\n    fn drop(&amp;mut self) {\n        println!(\"Dropping Foo with data: '{:?}'!\", self.data);\n    }\n}\n</code></pre>\n\n<p>However, I end up with the same constraint on multiple places, which does not make much sense to me.</p>\n\n<p>Defining the constraint at struct declaration level should be enough, and the compiler should assume that <code>T</code> is always going to implement <code>Debug</code>, because there's simply no way that we can initialize <code>Foo</code> without a <code>T: Debug</code></p>\n\n<p>Why is this explicitness required? Is this intentional or is this a current compiler limitation?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 9915712, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lnqd4.jpg?s=128&g=1", "display_name": "Samuel Warfield", "link": "https://stackoverflow.com/users/9915712/samuel-warfield"}, "edited": false, "score": 0, "creation_date": 1564443475, "post_id": 57262449, "comment_id": 101024232, "body": "That would work but it seems a little messy. The struct is being generated via a build.rs invocation of protoc-rust. It would be nice to dynamically change the source files generated, before the main compilation so that the definition is added prior to compile time. (Ie. also in the build.rs)"}, {"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "reply_to_user": {"reputation": 3, "user_id": 9915712, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lnqd4.jpg?s=128&g=1", "display_name": "Samuel Warfield", "link": "https://stackoverflow.com/users/9915712/samuel-warfield"}, "edited": false, "score": 0, "creation_date": 1564443789, "post_id": 57262449, "comment_id": 101024310, "body": "If you&#39;re looking for a way to ask <code>protoc-rust</code> to do this, perhaps mentioning it in the summary would help the right people see this question?"}, {"owner": {"reputation": 3, "user_id": 9915712, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lnqd4.jpg?s=128&g=1", "display_name": "Samuel Warfield", "link": "https://stackoverflow.com/users/9915712/samuel-warfield"}, "edited": false, "score": 0, "creation_date": 1564444429, "post_id": 57262449, "comment_id": 101024445, "body": "That&#39;s certainly an option thats better than hard coding a line insertion, The best solution would be a lib that could parse rust code and dynamically find the struct by name and do the insertion"}], "tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": true, "score": 0, "last_activity_date": 1564442588, "creation_date": 1564442588, "answer_id": 57262449, "question_id": 57262376, "link": "https://stackoverflow.com/questions/57262376/add-new-member-variable-to-struct/57262449#57262449", "title": "Add new member variable to struct", "body": "<blockquote>\n  <p>I'm trying to add new member variables to a struct in an impl block.</p>\n</blockquote>\n\n<p>Rust does not allow that.</p>\n\n<p>What you can do is define another struct:</p>\n\n<pre><code>struct ModuleInstance {\n    wasm_instance: WebAssembly::Instance,\n    module: RPC_Module::Module\n}\n</code></pre>\n\n<p>.. and return it from your <code>init</code> function.</p>\n"}], "owner": {"reputation": 3, "user_id": 9915712, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lnqd4.jpg?s=128&g=1", "display_name": "Samuel Warfield", "link": "https://stackoverflow.com/users/9915712/samuel-warfield"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 429, "favorite_count": 0, "closed_date": 1564450109, "accepted_answer_id": 57262449, "answer_count": 1, "score": 0, "last_activity_date": 1564450164, "creation_date": 1564441845, "last_edit_date": 1564450164, "question_id": 57262376, "link": "https://stackoverflow.com/questions/57262376/add-new-member-variable-to-struct", "closed_reason": "Duplicate", "title": "Add new member variable to struct", "body": "<p>I'm trying to add new member variables to a struct in an impl block.</p>\n\n<p>I'm using <a href=\"https://github.com/stepancheg/rust-protobuf/tree/master/protoc-rust\" rel=\"nofollow noreferrer\">protoc-rust</a> to procedurally generate Rust code from protocol buffers. In particular, it generates structs and methods for the messages defined in the protos. I need to add new members to these structs to initialize some <code>WebAssembly::Instance</code>s off of a bytes object in the struct</p>\n\n<p>The struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Module {\n    // message fields\n    pub module_name: ::std::string::String,\n    pub init_script: ::std::string::String,\n    pub JS_boiler_plate: ::std::string::String,\n    pub functions: ::protobuf::RepeatedField&lt;Function&gt;,\n    pub meta_data: ::std::string::String,\n    pub packager: ::std::string::String,\n    pub pure_wasm: bool,\n    pub wasm_binary: ::std::vec::Vec&lt;u8&gt;,\n    // special fields\n    pub unknown_fields: ::protobuf::UnknownFields,\n    pub cached_size: ::protobuf::CachedSize,\n}\n</code></pre>\n\n<p>What I want to do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl RPC_Module::Module {\n    self.wasm_instance: WebAssembly::Instance;\n\n    pub fn init(&amp;mut self) -&gt; Result&lt;(), &amp;'static str&gt; {\n        // Init the instance based off of wasm_binary\n        let self.wasm_instance = WebAssembly::Instance::new()\n    }\n\n}\n</code></pre>\n\n<p>What I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling wRPC v0.1.0 (/Users/swarfield/Code/wRPC-Core/w-rpc-core)\nerror: expected one of `async`, `const`, `crate`, `default`, `existential`, `extern`, `fn`, `pub`, `type`, `unsafe`, or `}`, found `let`\n  --&gt; src/protos/mod.rs:12:5\n   |\n11 | impl RPC_Module::Module {\n   |                          - expected one of 11 possible tokens here\n12 |     let self.wasm_instance: WebAssembly::Instance;\n   |     ^^^ unexpected token\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "edited": false, "score": 0, "creation_date": 1564430531, "post_id": 57260620, "comment_id": 101020513, "body": "I suggest reading this section from the rust book: <a href=\"https://doc.rust-lang.org/book/ch15-01-box.html#enabling-recursive-types-with-boxes\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1564440521, "post_id": 57260620, "comment_id": 101023634, "body": "An arena is a data structure to contain many objects of the same type, you can then refer to them by index instead of using referenes. Take a look at the <a href=\"https://crates.io/crates/slab\" rel=\"nofollow noreferrer\">slab crate</a>."}], "owner": {"reputation": 3212, "user_id": 661424, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0872cd40f4cd1d7e081bdd460edb2e5c?s=128&d=identicon&r=PG", "display_name": "madprops", "link": "https://stackoverflow.com/users/661424/madprops"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1564449562, "answer_count": 0, "score": 2, "last_activity_date": 1564449517, "creation_date": 1564430249, "last_edit_date": 1564449517, "question_id": 57260620, "link": "https://stackoverflow.com/questions/57260620/whats-the-best-way-to-have-a-struct-that-contains-a-reference-to-another-struct", "closed_reason": "Duplicate", "title": "What&#39;s the best way to have a struct that contains a reference to another struct of the same type?", "body": "<p>I have a root <code>Node</code>, and I store other <code>Node</code>s as children:</p>\n\n<pre><code>struct Node {\n    header: Header,\n    children: Vec&lt;Node&gt;,\n    metadata: Vec&lt;usize&gt;,\n    parent: &amp;Node,\n}\n</code></pre>\n\n<p>I want to have a way to go upwards to parent <code>Node</code>s, so I wanted to have a parent that is a reference to another <code>Node</code>. Asking around, this seems to be like a bad idea. I know I have to use lifetime declarations if I want to achieve this, but I'm not sure if the reference idea is the correct approach.</p>\n\n<p>Making them <code>'static</code> would be OK in this current small program, which is a way to solve Day 8b of Advent of Code 2018.</p>\n\n<p>I received this piece of information:</p>\n\n<blockquote>\n  <p>just remember that you can't have 2 mutable references to the same\n  object at the same time. Those kinds of structures are easy to get\n  wrong when designed with a bunch of back pointers. Consider a memory\n  arena instead, where your relations are defined in terms of indices\n  inside that arena</p>\n</blockquote>\n\n<p>I have no idea what a memory arena is or how I would implement, nor if it's actually the best way to achieve this.</p>\n"}, {"tags": ["rust", "compiler-optimization", "llvm-codegen"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1564423614, "post_id": 57259126, "comment_id": 101017743, "body": "<a href=\"https://godbolt.org/z/aEDINX\" rel=\"nofollow noreferrer\">godbolt.org/z/aEDINX</a>, strange"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 90, "creation_date": 1564428038, "post_id": 57259126, "comment_id": 101019517, "body": "Side remark: &quot;<i>Since Rust makes sure (except in unsafe code) that two mutable references cannot alias</i>&quot; -- it is worth mentioning that even in <code>unsafe</code> code, aliasing mutable references are not allowed and result in undefined behavior. You can have aliasing raw pointers, but <code>unsafe</code> code does not actually allow you to ignore Rust standard rules. It&#39;s just a common misconception and thus worth pointing out."}, {"owner": {"reputation": 598, "user_id": 1826241, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/2aaac949383a1f98d77696b8e80b9fe4?s=128&d=identicon&r=PG", "display_name": "dlukes", "link": "https://stackoverflow.com/users/1826241/dlukes"}, "edited": false, "score": 8, "creation_date": 1564749876, "post_id": 57259126, "comment_id": 101143340, "body": "It took me a while to figure out what the example is getting at, because I&#39;m not skilled at reading asm, so in case it helps anyone else: it boils down to whether the two <code>+=</code> operations in the body of <code>adds</code> can be reinterpreted as <code>*a = *a + *b + *b</code>. If the pointers don&#39;t alias, they can, you can even see what amounts to <code>b* + *b</code> in the second asm listing: <code>2: 01 c0  add  %eax,%eax</code>. But if they do alias, they can&#39;t, because by the time you add <code>*b</code> for the second time, it will contain a different value than the first time around (the one you store on line <code>4:</code> of the first asm listing)."}], "answers": [{"comments": [{"owner": {"reputation": 77588, "user_id": 32914, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/50facfccdffe2e9cabaa589205959d30?s=128&d=identicon&r=PG", "display_name": "Mason Wheeler", "link": "https://stackoverflow.com/users/32914/mason-wheeler"}, "edited": false, "score": 17, "creation_date": 1564522693, "post_id": 57259339, "comment_id": 101057003, "body": "This is not surprising.  Its broadly-scoped claims of multi-language-friendliness notwithstanding, LLVM was specifically designed as a C++ backend and it has always had a strong tendency to choke on things that don&#39;t look enough like C++."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 77588, "user_id": 32914, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/50facfccdffe2e9cabaa589205959d30?s=128&d=identicon&r=PG", "display_name": "Mason Wheeler", "link": "https://stackoverflow.com/users/32914/mason-wheeler"}, "edited": false, "score": 59, "creation_date": 1564523065, "post_id": 57259339, "comment_id": 101057125, "body": "@MasonWheeler if you click through to some of the issues, you can find C code examples that use <code>restrict</code> and miscompile on both Clang and GCC. It\u2019s not limited to languages that aren\u2019t \u201cC++ enough\u201d, unless <a href=\"https://en.wikipedia.org/wiki/No_true_Scotsman\" rel=\"nofollow noreferrer\">you count C++ itself in that group</a>."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 0, "creation_date": 1564524138, "post_id": 57259339, "comment_id": 101057452, "body": "@Shepmaster: Both clang and gcc seem to be designed around the language which is defined by the C Standard, rather than the language the C Standard was written to describe.  Every standard since C89 has treated as a quality of implementation issue, outside its jurisdiction, the question of how implementations should behave if one part of the Standard or an implementation&#39;s documentation describe the behavior of some action but another part of the Standard specifies that an overlapping category of actions invoke UB.  As a consequence..."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 0, "creation_date": 1564524274, "post_id": 57259339, "comment_id": 101057485, "body": "...there was no effort to exclude useful behaviors from the broader categories of UB, since good-quality compilers were expected to process them meaningfully anyway, and there was no point trying to write rules about what low-quality compilers could do."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "reply_to_user": {"reputation": 77588, "user_id": 32914, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/50facfccdffe2e9cabaa589205959d30?s=128&d=identicon&r=PG", "display_name": "Mason Wheeler", "link": "https://stackoverflow.com/users/32914/mason-wheeler"}, "edited": false, "score": 6, "creation_date": 1564525211, "post_id": 57259339, "comment_id": 101057749, "body": "@MasonWheeler: I don&#39;t think LLVM was really designed around the rules of C or C++, but rather around the rules of LLVM.  It makes assumptions that <i>usually</i> hold true for C or C++ code, but from what I can tell the design is predicated upon a static-data-dependencies model which can&#39;t handle tricky corner cases.  That would be okay if it pessimistically assumed data dependencies that can&#39;t be disproven, but instead it treats as no-ops actions which would write storage with the same bit pattern as it held, and which have potential but not provable data dependencies on the read and the write."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 9, "creation_date": 1564580509, "post_id": 57259339, "comment_id": 101078657, "body": "@supercat I&#39;ve read your comments a few times, but I admit I&#39;m stumped \u2014 I have no idea what they have to do with this question or answer. Undefined behavior doesn&#39;t come into play here, this is &quot;just&quot; a case of multiple optimization passes interacting poorly with each other."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 0, "creation_date": 1564584852, "post_id": 57259339, "comment_id": 101081618, "body": "@Shepmaster: From what I can tell, LLVM assumes that it is impossible for various combinations of references to be used in certain way that would be uncommon in C, but are nonetheless defined by the Standard.  One could construct a language that would be useful for many purposes, in which such assumptions would hold in all defined cases, but C is not such a language.  For example, if one had a language in which equality-comparing a pointer to one object with a pointer &quot;just past&quot; another would yield UB, then it would be reasonable for a compiler to assume that if two pointers compare equal..."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 0, "creation_date": 1564585216, "post_id": 57259339, "comment_id": 101081835, "body": "...and one is known to point just past some unknown object, no &quot;standalone&quot; object could be accessed by directly dereferencing the second pointer.  While the C Standard does not specify any means by which one could create an object immediately preceding a stand-alone object, it explicitly recognizes that such objects could exist, and specifies the comparison of comparing a pointer &quot;just past&quot; such an object with a pointer &quot;to&quot; its successor.  Such a comparison, however, will cause clang&#39;s optimizer to jump the rails."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 1, "creation_date": 1564588015, "post_id": 57259339, "comment_id": 101083459, "body": "@Shepmaster: I think the simplest way to describe the fundamental problem with LLVM is that it is focused on recognizing equivalent references that can be merged to convert a program to single-static-assignment form, but can&#39;t accommodate the possibility of references that can be proven to identify the same storage, but are derived and used at different times and are not equivalent."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "reply_to_user": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 0, "creation_date": 1565005756, "post_id": 57259339, "comment_id": 101202765, "body": "@supercat : That sounds very interesting. Have any good links for me to read up on? Because I don&#39;t understand. Let&#39;s say you have an array of objects. A pointer &quot;just past&quot; the first element of the array, would point on the second object in the array, and surely an object can be accessed through that pointer? Is that what you mean by &quot;standalone&quot;? Objects not in arrays? Couldn&#39;t a custom allocator arrange so that objects are &quot;back to back&quot; even if not in arrays?"}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "reply_to_user": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1565018137, "post_id": 57259339, "comment_id": 101209735, "body": "@avl_sweden: By standalone, I mean named objects that are not parts of structures or unions, e.g. <code>static int a[1],b[1],c[1];</code>.  An implementation could place such objects in arbitrary order, consecutively or not, at its leisure.  If an implementation ensured that objects whose address was taken were never placed consecutively, it could assume that a pointer just past one object could never identify another standalone object, but neither clang nor gcc does anything to prevent addressable objects being placed consecutively."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "reply_to_user": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1565018304, "post_id": 57259339, "comment_id": 101209817, "body": "@avl_sweden: As for links, I don&#39;t have any to offer, but I&#39;ve done a fair amount of experimentation with the compilers at godbolt.org, and found that if code compares the address of a pointer with an address just past one array object, the compiler will reorder accesses made with that pointer across addresses made with another array object without regard for whether the arrays might be stored consecutively, even if the arrays are declared in the same translation unit and are, in fact, stored consecutively."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "reply_to_user": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 1, "creation_date": 1565182121, "post_id": 57259339, "comment_id": 101271209, "body": "@supercat: So LLVM makes incorrect assumptions in these cases? And this causes incorrect behavior? Is this only when using &#39;restrict&#39; keyword? Do you perhaps have an example?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 4, "creation_date": 1565182402, "post_id": 57259339, "comment_id": 101271407, "body": "@avl_sweden to reiterate, it&#39;s <a href=\"https://bugs.llvm.org/show_bug.cgi?id=39282\" rel=\"nofollow noreferrer\"><i>just a bug</i></a>. The loop unrolling optimization step did (does?) not fully take <code>noalias</code> pointers into account when executing. It created new pointers based on input pointers, improperly copying the <code>noalias</code> attribute even though the new pointers did alias."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 1, "creation_date": 1565191409, "post_id": 57259339, "comment_id": 101277001, "body": "@Shepmaster: Many of the problematic behaviors I&#39;ve seen didn&#39;t occur by happenstance; they are a result of the optimizer making assumptions, without any particular evidence to justify them, that will usually be correct, but are not sound in the general case.  A common pattern is that if a compiler can show that ref1 and ref2 have the same address, and it would be entitled to assume accesses via ref1 won&#39;t interact with ref3, it is prone to ignore the possibility that accesses via ref2 might interact with ref3."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "reply_to_user": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 0, "creation_date": 1565275645, "post_id": 57259339, "comment_id": 101310555, "body": "@supercat: Ah, now I get it, I think. Pointer value isn&#39;t the full story, since time of access may also affect whether or not aliasing occurs. Thanks for clarifying!"}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "reply_to_user": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1565277610, "post_id": 57259339, "comment_id": 101311671, "body": "@avl_sweden: Not just the timing of access, but also the timing of when pointers are used to derive other pointers.  While the authors of the Standard didn&#39;t explicitly specify transitive sequencing relationships between the derivation of a pointer to part of an object and any use of the pointer, or between such derivation and any preceding conflicting actions on the parent object, I doubt they imagined anyone would fail to regard such sequencing relationships as obvious."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "reply_to_user": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 1, "creation_date": 1565279977, "post_id": 57259339, "comment_id": 101312999, "body": "@avl_sweden: There are some cases, though, that don&#39;t involve the timing of pointer derivation.  Given <code>int a[1],b[1],c[1],*p;</code> at file scope, the Standard explicitly recognizes the possibility that <code>p==b+1</code> could be true at the same time as either <code>p==a</code> or <code>p==c</code>, but neither clang nor gcc does so.  Given <code>int temp = a[0]+c[0]; if (p==b+1) *p+=1; return temp+a[0]+c[0];</code> both clang and gcc are prone to generate code that simply returns <code>temp+temp</code> without regard for whether they placed <code>a[]</code> or <code>c[]</code> immediately after <code>b[]</code>."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "reply_to_user": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 1, "creation_date": 1565280451, "post_id": 57259339, "comment_id": 101313230, "body": "@avl_sweden: That&#39;s not a case of a compiler failing to notice something.  That&#39;s a case of an implementation making a deliberate inference that would usually happen to be correct (and which it could cause to be correct, if placed something other than <code>a</code> or <code>c</code> in the space after <code>b</code>) but is unsound in the general case."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1608617070, "post_id": 57259339, "comment_id": 115631138, "body": "Hey shepmaster, could you  update your question with up to date info about noalias settings in the latest versions?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1608647115, "post_id": 57259339, "comment_id": 115642742, "body": "@hellow there is no update that I am aware of. The behavior is still as described in Rust 1.47, the issue tracking re-enabling aliasing is still open, and LLVM still has not merged a PR fixing the underlying issue. Why do you think there is up-to-date information?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1608735745, "post_id": 57259339, "comment_id": 115670842, "body": "Because the last version you tracked was 1.30, I was curios"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 400, "last_activity_date": 1616432196, "last_edit_date": 1616432196, "creation_date": 1564424017, "answer_id": 57259339, "question_id": 57259126, "link": "https://stackoverflow.com/questions/57259126/why-does-the-rust-compiler-not-optimize-code-assuming-that-two-mutable-reference/57259339#57259339", "title": "Why does the Rust compiler not optimize code assuming that two mutable references cannot alias?", "body": "<p>Rust originally <em>did</em> enable LLVM's <code>noalias</code> attribute, but this <a href=\"https://github.com/rust-lang/rust/issues/54462\" rel=\"nofollow noreferrer\">caused miscompiled code</a>. When all supported LLVM versions no longer miscompile the code, <a href=\"https://github.com/rust-lang/rust/issues/54878\" rel=\"nofollow noreferrer\">it will be re-enabled</a>.</p>\n<p>If you add <code>-Zmutable-noalias=yes</code> to the compiler options, you get the expected assembly:</p>\n<pre class=\"lang-none prettyprint-override\"><code>adds:\n        mov     eax, dword ptr [rsi]\n        add     eax, eax\n        add     dword ptr [rdi], eax\n        ret\n</code></pre>\n<p>Simply put, Rust put the equivalent of C's <code>restrict</code> keyword <strong>everywhere</strong>, far more prevalent than any usual C program. This exercised corner cases of LLVM more than it was able to handle correctly. It turns out that C and C++ programmers simply don't use <code>restrict</code> as frequently as <code>&amp;mut</code> is used in Rust.</p>\n<p>This has happened <strong>multiple times</strong>.</p>\n<ul>\n<li>Rust 1.0 through 1.7 \u2014 <code>noalias</code> enabled</li>\n<li>Rust 1.8 through 1.27 \u2014 <code>noalias</code> disabled</li>\n<li>Rust 1.28 through 1.29 \u2014 <code>noalias</code> enabled</li>\n<li>Rust 1.30 through 1.53 \u2014 <code>noalias</code> disabled</li>\n<li>Rust 1.53 through ??? \u2014 <code>noalias</code> conditionally enabled</li>\n</ul>\n<h3>Related Rust issues</h3>\n<ul>\n<li><p>Current case</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/54462\" rel=\"nofollow noreferrer\">Incorrect code generation for nalgebra's Matrix::swap_rows() #54462</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/54878\" rel=\"nofollow noreferrer\">Re-enable noalias annotations by default once LLVM no longer miscompiles them #54878</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/82834\" rel=\"nofollow noreferrer\">Enable mutable noalias for LLVM &gt;= 12 #82834</a></li>\n</ul>\n</li>\n<li><p>Previous case</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/31545\" rel=\"nofollow noreferrer\">Workaround LLVM optimizer bug by not marking &amp;mut pointers as noalias #31545</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/31681\" rel=\"nofollow noreferrer\">Mark &amp;mut pointers as noalias once LLVM no longer miscompiles them #31681</a></li>\n</ul>\n</li>\n<li><p>Other</p>\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/16515\" rel=\"nofollow noreferrer\">make use of LLVM's scoped noalias metadata #16515</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/38941\" rel=\"nofollow noreferrer\">Missed optimization: references from pointers aren't treated as noalias #38941</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/53105\" rel=\"nofollow noreferrer\">noalias is not enough #53105</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/45029\" rel=\"nofollow noreferrer\">mutable noalias: re-enable permanently, only for panic=abort, or stabilize flag? #45029</a></li>\n</ul>\n</li>\n</ul>\n"}], "owner": {"reputation": 2792, "user_id": 8626243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LYirU.jpg?s=128&g=1", "display_name": "Zhiyao", "link": "https://stackoverflow.com/users/8626243/zhiyao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 40862, "favorite_count": 53, "accepted_answer_id": 57259339, "answer_count": 1, "score": 338, "last_activity_date": 1616432196, "creation_date": 1564423064, "last_edit_date": 1565351460, "question_id": 57259126, "link": "https://stackoverflow.com/questions/57259126/why-does-the-rust-compiler-not-optimize-code-assuming-that-two-mutable-reference", "title": "Why does the Rust compiler not optimize code assuming that two mutable references cannot alias?", "body": "<p>As far as I know, reference/pointer aliasing can hinder the compiler's ability to generate optimized code, since they must ensure the generated binary behaves correctly in the case where the two references/pointers indeed alias. For instance, in the following C code,</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>void adds(int  *a, int *b) {\n    *a += *b;\n    *a += *b;\n}\n</code></pre>\n\n<p>when compiled by <code>clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)</code> with the <code>-O3</code> flag, it emits</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0000000000000000 &lt;adds&gt;:\n   0:    8b 07                    mov    (%rdi),%eax\n   2:    03 06                    add    (%rsi),%eax\n   4:    89 07                    mov    %eax,(%rdi)  # The first time\n   6:    03 06                    add    (%rsi),%eax\n   8:    89 07                    mov    %eax,(%rdi)  # The second time\n   a:    c3                       retq\n</code></pre>\n\n<p>Here the code stores back to <code>(%rdi)</code> twice in case <code>int *a</code> and <code>int *b</code> alias.</p>\n\n<p>When we explicitly tell the compiler that these two pointers cannot alias with the <code>restrict</code> keyword:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>void adds(int * restrict a, int * restrict b) {\n    *a += *b;\n    *a += *b;\n}\n</code></pre>\n\n<p>Then Clang will emit a more optimized version of the binary code:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0000000000000000 &lt;adds&gt;:\n   0:    8b 06                    mov    (%rsi),%eax\n   2:    01 c0                    add    %eax,%eax\n   4:    01 07                    add    %eax,(%rdi)\n   6:    c3                       retq\n</code></pre>\n\n<p>Since Rust makes sure (except in unsafe code) that two mutable references cannot alias, I would think that the compiler should be able to emit the more optimized version of the code.</p>\n\n<p>When I test with the code below and compile it with <code>rustc 1.35.0</code> with <code>-C opt-level=3 --emit obj</code>,</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![crate_type = \"staticlib\"]\n#[no_mangle]\nfn adds(a: &amp;mut i32, b: &amp;mut i32) {\n    *a += *b;\n    *a += *b;\n}\n</code></pre>\n\n<p>it generates:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0000000000000000 &lt;adds&gt;:\n   0:    8b 07                    mov    (%rdi),%eax\n   2:    03 06                    add    (%rsi),%eax\n   4:    89 07                    mov    %eax,(%rdi)\n   6:    03 06                    add    (%rsi),%eax\n   8:    89 07                    mov    %eax,(%rdi)\n   a:    c3                       retq\n</code></pre>\n\n<p>This does not take advantage of the guarantee that <code>a</code> and <code>b</code> cannot alias.</p>\n\n<p>Is this because the current Rust compiler is still in development and has not yet incorporated alias analysis to do the optimization?</p>\n\n<p>Is this because there is still a chance that <code>a</code> and <code>b</code> could alias, even in safe Rust?</p>\n"}, {"tags": ["rust", "x86-64", "sse", "simd"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1564412530, "last_edit_date": 1564412530, "creation_date": 1564412272, "answer_id": 57256424, "question_id": 57256251, "link": "https://stackoverflow.com/questions/57256251/will-a-default-release-build-always-use-up-to-ssse3-instructions/57256424#57256424", "title": "Will a default release build always use up to SSSE3 instructions?", "body": "<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>target_os=\"macos\"\n</code></pre>\n</blockquote>\n\n<p>A default release build on <strong>macOS</strong> will, yes. </p>\n\n<blockquote>\n  <p>Since Apple has never sold any AMD or Pentium4 CPUs, x86-64 on OS X also implies SSSE3 (first-gen Core2). The first x86 Macs were Core (not Core2), but they were 32-bit only. You unfortunately can't assume SSE4.1 or <code>-mpopcnt</code>.</p>\n  \n  <ul>\n  <li><a href=\"https://stackoverflow.com/q/45917280/155423\">What is the minimum supported SSE flag that can be enabled on macOS?</a></li>\n  </ul>\n</blockquote>\n"}], "owner": {"reputation": 11483, "user_id": 161331, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/cd3e90ded5f2669762a18d97d447e219?s=128&d=identicon&r=PG", "display_name": "Stringer", "link": "https://stackoverflow.com/users/161331/stringer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 0, "accepted_answer_id": 57256424, "answer_count": 1, "score": 4, "last_activity_date": 1564464365, "creation_date": 1564411685, "last_edit_date": 1564464365, "question_id": 57256251, "link": "https://stackoverflow.com/questions/57256251/will-a-default-release-build-always-use-up-to-ssse3-instructions", "title": "Will a default release build always use up to SSSE3 instructions?", "body": "<p>Looking at the code of a binary produced by <code>cargo</code> (<code>cargo build --release</code>). I found in the binary that <code>SSSE3</code> instructions like <code>pshufb</code>  were used.</p>\n\n<p>Looking at cfg I have:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc --print cfg\ndebug_assertions\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_family=\"unix\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"sse\"\ntarget_feature=\"sse2\"\ntarget_feature=\"sse3\"\ntarget_feature=\"ssse3\"\ntarget_os=\"macos\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"apple\"\nunix\n</code></pre>\n\n<p>I have different paths given the SIMD ISA (AVX2 or SSSE3) and expected to have a non SIMD one with the default build.</p>\n\n<pre><code>#[cfg(target_feature = \"avx2\")]\n{\n    ...\n    return;\n}\n#[cfg(target_feature = \"ssse3\")]\n{\n    ...\n    return;\n}\n// portable Rust code at the end\n...\n</code></pre>\n\n<p>Does this mean that a default release build will always use up to SSSE3 instructions, and not just SSE2 which is mandatory on x86_64?</p>\n"}, {"tags": ["rust", "locking", "mutex"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1564411187, "post_id": 57256035, "comment_id": 101011794, "body": "This question doesn&#39;t show research effort. <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html?search=rwmutex\" rel=\"nofollow noreferrer\">Searching the Rust docs for &quot;rwmutex&quot;</a> points to <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a> which has examples. There&#39;s also <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\"><code>RwLock</code></a> in the same module, also with examples."}, {"owner": {"reputation": 69, "user_id": 9692781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "James Smith", "link": "https://stackoverflow.com/users/9692781/james-smith"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564411410, "post_id": 57256035, "comment_id": 101011940, "body": "@Shepmaster I don&#39;t understand how those examples relate to structs, sorry."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 12, "last_activity_date": 1564411608, "creation_date": 1564411608, "answer_id": 57256225, "question_id": 57256035, "link": "https://stackoverflow.com/questions/57256035/how-to-lock-a-rust-struct-the-way-a-struct-is-locked-in-go/57256225#57256225", "title": "How to lock a Rust struct the way a struct is locked in Go?", "body": "<p>Don't do it the Go way, do it the Rust way. <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"noreferrer\"><code>Mutex</code></a> and <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"noreferrer\"><code>RwLock</code></a> are generic types; you put the data to be locked <strong>inside</strong> of them. Later, you access the data through the <em>lock guard</em>. When the lock guard goes out of scope, the lock is released:</p>\n\n<pre><code>use std::sync::RwLock;\n\n#[derive(Debug, Default)]\nstruct Info {\n    data: RwLock&lt;InfoData&gt;,\n}\n\n#[derive(Debug, Default)]\nstruct InfoData {\n    height: u64,\n    verify: bool,\n}\n\nfn main() {\n    let info = Info::default();\n    let mut data = info.data.write().expect(\"Lock is poisoned\");\n    data.height += 42;\n}\n</code></pre>\n\n<p>The Go solution is suboptimal as nothing forces you to actually use the lock; you can trivially forget to acquire the lock and access data that should only be used when locked.</p>\n\n<p>If you <strong>must</strong> lock something that isn't the data, you can just lock the empty tuple:</p>\n\n<pre><code>use std::sync::RwLock;\n\n#[derive(Debug, Default)]\nstruct Info {\n    lock: RwLock&lt;()&gt;,\n    height: u64,\n    verify: bool,\n}\n\nfn main() {\n    let mut info = Info::default();\n    let _lock = info.lock.write().expect(\"Lock is poisoned\");\n    info.height += 42;\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27359586/155423\">What do I use to share an object with many threads and one writer in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/50704279/155423\">When or why should I use a Mutex over an RwLock?</a></li>\n</ul>\n"}], "owner": {"reputation": 69, "user_id": 9692781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "James Smith", "link": "https://stackoverflow.com/users/9692781/james-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 673, "favorite_count": 1, "accepted_answer_id": 57256225, "answer_count": 1, "score": -3, "last_activity_date": 1564412903, "creation_date": 1564410932, "last_edit_date": 1564412903, "question_id": 57256035, "link": "https://stackoverflow.com/questions/57256035/how-to-lock-a-rust-struct-the-way-a-struct-is-locked-in-go", "title": "How to lock a Rust struct the way a struct is locked in Go?", "body": "<p>I'm trying to learn how to do locks in Rust the way they work in Go. With Go I can do something like:</p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>type Info struct {\n    sync.RWMutex\n    height    uint64 \n    verify bool\n}\n</code></pre>\n\n<p>If I have some function/method acting on info I can do this:</p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>func (i *Info) DoStuff(myType Data) error {\n    i.Lock()\n    //do my stuff\n}\n</code></pre>\n\n<p>It seems like what I need is the sync.RWMutex, so this is what I have tried:</p>\n\n<pre><code>pub struct Info {\n    pub lock: sync.RWMutex,\n    pub height: u64,\n    pub verify: bool,\n}\n</code></pre>\n\n<p>Is this the correct approach? How would I proceed from here?</p>\n"}, {"tags": ["docker", "rust", "rust-cargo", "azure-iot-edge"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1564403446, "post_id": 57253853, "comment_id": 101007506, "body": "You seem to use a very old version of rustc as the inclusinve syntax is no more experimental. Your base image is probably too old."}, {"owner": {"reputation": 533, "user_id": 3829303, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/a7bdc161e057c73910df559cf944d1f7?s=128&d=identicon&r=PG&f=1", "display_name": "Chirag Dhyani", "link": "https://stackoverflow.com/users/3829303/chirag-dhyani"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564403747, "post_id": 57253853, "comment_id": 101007685, "body": "@DenysS&#233;guret: Do you think that apt-get install cargo might be causing the issue as rust is getting installed through curl which will be up to date."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1564404290, "post_id": 57253853, "comment_id": 101007997, "body": "Try <code>rustup update</code>"}], "answers": [{"tags": [], "owner": {"reputation": 2072, "user_id": 6409041, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7db77a32274727bdb912a64e7b99335e?s=128&d=identicon&r=PG&f=1", "display_name": "MaxV", "link": "https://stackoverflow.com/users/6409041/maxv"}, "is_accepted": false, "score": 0, "last_activity_date": 1564600645, "creation_date": 1564600645, "answer_id": 57297558, "question_id": 57253853, "link": "https://stackoverflow.com/questions/57253853/cargo-error-while-compiling-edgelet-module-of-azure-iot-edge/57297558#57297558", "title": "Cargo error while compiling edgelet module of azure iot edge", "body": "<p>Please check rustc's version which used in your docker image and version of the compiler on your Ubuntu machine.</p>\n\n<p>The only possible reason for that behavior is you have old version of rustc in your docker image.</p>\n"}], "owner": {"reputation": 533, "user_id": 3829303, "user_type": "registered", "accept_rate": 23, "profile_image": "https://www.gravatar.com/avatar/a7bdc161e057c73910df559cf944d1f7?s=128&d=identicon&r=PG&f=1", "display_name": "Chirag Dhyani", "link": "https://stackoverflow.com/users/3829303/chirag-dhyani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 76, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1564697889, "creation_date": 1564403118, "last_edit_date": 1564697889, "question_id": 57253853, "link": "https://stackoverflow.com/questions/57253853/cargo-error-while-compiling-edgelet-module-of-azure-iot-edge", "title": "Cargo error while compiling edgelet module of azure iot edge", "body": "<p>I am trying to <code>cargo build</code> Azure IoT edge security daemon code (edgelet) in a docker. This goes smoothly on my Ubuntu machine. However, an issue occurs when I try to compile in Docker. </p>\n\n<p>Here is the issue:</p>\n\n<pre><code> Compiling k8s-openapi v0.4.0\n error: inclusive range syntax is experimental (see issue #28237)\n --&gt; /root/.cargo/registry/src/github.com-1ecc6299db9ec823/k8s-openapi-0.4.0/build.rs:10:19\n |\n 10 |         for v2 in MIN..=MAX {\n |                   ^^^^^^^^^\n\n error: inclusive range syntax is experimental (see issue #28237)\n --&gt; /root/.cargo/registry/src/github.com-1ecc6299db9ec823/k8s-openapi-0.4.0/build.rs:32:14\n |\n 32 |     for v in MIN..=MAX {\n |              ^^^^^^^^^\n\n error: inclusive range syntax is experimental (see issue #28237)\n --&gt; /root/.cargo/registry/src/github.com-1ecc6299db9ec823/k8s- \n openapi-0.4.0/build.rs:117:14\n|\n117 |     for v in MIN..=MAX {\n|              ^^^^^^^^^\n\nerror: aborting due to 3 previous errors\n\nerror: Could not compile `k8s-openapi`.\n</code></pre>\n\n<p>Here is a portion of my Docker file:</p>\n\n<pre><code>RUN apt-get update  &amp;&amp; \\\napt-get install -y --no-install-recommends --allow-unauthenticated\\\n curl\\\n cargo\nWORKDIR /usr/app\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nCOPY edgelet .\nRUN cargo build\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits", "trait-objects"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1564400111, "post_id": 57252909, "comment_id": 101005755, "body": "I think I agree the original paragraph is fairly confusing. Maybe someone should send a PR?"}, {"owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "edited": false, "score": 0, "creation_date": 1564401853, "post_id": 57252909, "comment_id": 101006653, "body": "Can I say the problem is that the compiler can&#39;t trace all the calls to <code>foo</code> (as the dispatch is dynamic) and so it can&#39;t know which T types it should monomorphize <code>foo</code> for? I&#39;m not sure I understand what is the &quot;caller of <code>foo</code>&quot;."}, {"owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "edited": false, "score": 0, "creation_date": 1564402655, "post_id": 57252909, "comment_id": 101007098, "body": "Because as far as I understand, the specific implementation for a specific function call is available in runtime (via the lookup table) which should be enough, except for generics it isn&#39;t - as the code should be monomorphized which happens compile time (?)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "edited": false, "score": 0, "creation_date": 1564409001, "post_id": 57252909, "comment_id": 101010672, "body": "@Neo I changed the last paragraph to hopefully clear that up."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1564408976, "last_edit_date": 1564408976, "creation_date": 1564399757, "answer_id": 57252909, "question_id": 57252674, "link": "https://stackoverflow.com/questions/57252674/what-is-the-cited-problem-with-using-generic-type-parameters-in-trait-objects/57252909#57252909", "title": "What is the cited problem with using generic type parameters in trait objects?", "body": "<blockquote>\n  <p>what does it mean \"generic type parameters that are filled in with concrete type parameters when the trait is used\"</p>\n</blockquote>\n\n<p>An example that won't work is when the type parameter is part of a method:</p>\n\n<pre><code>trait Foo {\n    fn foo&lt;T&gt;(t: T) {}\n}\n</code></pre>\n\n<p>When a function has a type parameter, Rust will monomorphize the function (make a new copy) for each type that it is actually called with. This isn't compatible with trait objects because Rust doesn't know which impl the method belongs to until runtime.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564412927, "post_id": 57255955, "comment_id": 101012816, "body": "<i>simply an implementation limitation</i> \u2014 this makes it seem like with the right pull request, Rust could support it, but I don&#39;t believe that&#39;s the case. Maybe you could clarify how the limitation could be lifted?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1564414072, "post_id": 57255955, "comment_id": 101013492, "body": "@Shepmaster: I was wondering if I should. Whole Program Analysis would allow obtaining the set of instantiations of <code>foo</code> and create a pointer-to-function for each; forever precluding DLLs. HashMaps keyed on TypeId would allow fully dynamic look-up, at the cost of increased look-up times. It is a solvable problem, but the &quot;solutions&quot; have costs of their own."}, {"owner": {"reputation": 657, "user_id": 2833557, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07ee23e2b9005e9e0e0b95c41e4ab297?s=128&d=identicon&r=PG&f=1", "display_name": "user2833557", "link": "https://stackoverflow.com/users/2833557/user2833557"}, "edited": false, "score": 1, "creation_date": 1596815731, "post_id": 57255955, "comment_id": 111941569, "body": "C++ does not even need this because C++ has inheritance. Task:- define an API that has a call put(&amp;self, k:&amp;dyn Serialize, v:&amp;dyn Serialize) - not possible in rust. In C++, you would do abstract class API {virtual void put(Serialize k, Serialize v); }. There is no way to do the equivalent thing in rust. Quite lacking in my opinion. Anyone implementing the API must implement that method. How do you do the same in rust? Or is there no way to create this API definition?"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1564410668, "creation_date": 1564410668, "answer_id": 57255955, "question_id": 57252674, "link": "https://stackoverflow.com/questions/57252674/what-is-the-cited-problem-with-using-generic-type-parameters-in-trait-objects/57255955#57255955", "title": "What is the cited problem with using generic type parameters in trait objects?", "body": "<p>As <a href=\"https://stackoverflow.com/a/57252909/147192\">@PeterHall</a> mentioned, with a generic method the trait cannot be object-safe.</p>\n\n<p>The reason, it turns out, is simply an implementation limitation.</p>\n\n<p>Efficient dispatch to the correct implementation of a trait method is achieved by using a virtual-table, which is essentially a table of pointer-to-functions. Each method in the trait object gets <strong>one</strong> slot in the virtual-table to store <strong>one</strong> pointer-to-function.</p>\n\n<p>On the other hand, a generic function or method is no function or method at all. It's a blueprint to create as many different functions or methods as one wishes by substituting the generic parameters with actual, concrete, parameters.</p>\n\n<p>This means that it is not possible to have a pointer-to-function for <code>fn foo&lt;T&gt;() -&gt; T;</code> as there is no <em>code</em> for it, instead you may have a pointer-to-function for one <code>fn foo&lt;i32&gt;() -&gt; i32</code>, and <em>another</em> pointer-to-function for one <code>fn foo&lt;String&gt;() -&gt; String</code>, and another...</p>\n\n<p>The impossibility to have a pointer-to-function, and thus a v-table entry, for a generic method makes it impossible to call that method via run-time dispatch, that is, on a <code>dyn Trait</code>.</p>\n\n<p><em>It is notable that other languages also suffer the same restriction, for the same reasons; C++ cannot have template virtual methods either, for example.</em></p>\n"}], "owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 887, "favorite_count": 0, "accepted_answer_id": 57252909, "answer_count": 2, "score": 3, "last_activity_date": 1564410668, "creation_date": 1564398932, "last_edit_date": 1564406147, "question_id": 57252674, "link": "https://stackoverflow.com/questions/57252674/what-is-the-cited-problem-with-using-generic-type-parameters-in-trait-objects", "title": "What is the cited problem with using generic type parameters in trait objects?", "body": "<p>I am reading <a href=\"https://doc.rust-lang.org/beta/book/ch17-02-trait-objects.html#object-safety-is-required-for-trait-objects\" rel=\"nofollow noreferrer\">Object Safety Is Required for Trait Objects</a> and I don't understand the problem with generic type parameters.</p>\n\n<blockquote>\n  <p>The same is true of generic type parameters that are filled in with concrete type parameters when the trait is used: the concrete types become part of the type that implements the trait. When the type is forgotten through the use of a trait object, there is no way to know what types to fill in the generic type parameters with.</p>\n</blockquote>\n\n<p>I am trying to code an example but I can't make sense of it. Generic type parameters for <em>what</em>?  </p>\n\n<p>I tried to make a trait object out of a parameterized trait, but once the parameter is given a concrete value it works just fine:</p>\n\n<pre><code>trait Creator&lt;T&gt; {\n    fn create(&amp;self) -&gt; T;\n}\n\nstruct CreationHouse {\n    creators: Vec&lt;Box&lt;dyn Creator&lt;u32&gt;&gt;&gt;\n}\n\nstruct NumCreator { seed: u32 }\n\nimpl Creator&lt;u32&gt; for NumCreator {\n    fn create(&amp;self) -&gt; u32 {\n        return self.seed;\n    }\n}\n\nfn main() {\n    let ch = CreationHouse{\n        creators: vec![Box::new(NumCreator{seed: 3})]\n    };\n}\n</code></pre>\n\n<p>(Compiles well, except \"unused\" warnings)</p>\n\n<p>What I don't get is what does it mean \"generic type parameters that are filled in with concrete type parameters when the trait is used\" and how could the generic types be lost (as the trait \"carries\" them with itself). If you could write an example of the case described in the paragraph I'd be grateful.</p>\n"}, {"tags": ["rust", "move"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1564395709, "post_id": 57251728, "comment_id": 101003446, "body": "Don&#39;t you need another <code>move</code> there? I&#39;m actually not familiar with that syntax, but it looks like it should be <code>connect(url, move |sender| Client { ...</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1564395781, "post_id": 57251728, "comment_id": 101003497, "body": "If you add a <code>move</code> to the closure in the <code>connect(url, move |sender| ...)</code> call, do you still need the <code>clone</code>?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1564398972, "post_id": 57251728, "comment_id": 101005213, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We don&#39;t know how <code>connect</code> or <code>Client</code> is defined. Furthermore, the <code>url</code> part is (presumably) not needed to reproduce the error. Without knowing all information, we cannot help you. I tried to reproduce the error (guessing that it has to do with the second closure), but I couldn&#39;t. It always worked for me. So please <a href=\"https://stackoverflow.com/posts/57251728/edit\">edit</a> your question to provide all information."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 3, "creation_date": 1564399332, "post_id": 57251728, "comment_id": 101005378, "body": "Ok I think I found a minimal example: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e3ee886580739a4c5095942b7d7f9777\" rel=\"nofollow noreferrer\">playground</a>. Is that the error you are getting? If so, simply <a href=\"https://stackoverflow.com/posts/57251728/edit\">edit</a> your question to include this minimal example. And next time, please provide a minimal example or at least the exact error message in your question. This error message in particular could have helped answer the question even without reproducible example."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1564399436, "post_id": 57251728, "comment_id": 101005427, "body": "I presume the connect function spawns threads when needed. If the connect function calls the closure several times for use in different threads, there&#39;s no other solution than cloning the sender as you can&#39;t share a sender between threads. The initial move could be avoided using crossbeam&#39;s scope but that&#39;s a detail."}, {"owner": {"reputation": 49, "user_id": 5588832, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206326905104734/picture?type=large", "display_name": "Marco", "link": "https://stackoverflow.com/users/5588832/marco"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1564422814, "post_id": 57251728, "comment_id": 101017427, "body": "@LukasKalbertodt, yes you got it!. I made a little modification (probably useless) to your playground. Thank you. The minimal reproducible example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b4ff97e8e2fbba294a44b1cd042896b7\" rel=\"nofollow noreferrer\">here</a>.  NB: I will add this to the original question!."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564423273, "post_id": 57251728, "comment_id": 101017610, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/53038935/155423\">Cannot move out of captured variables in an <code>FnMut</code> closure</a> or <a href=\"https://stackoverflow.com/q/28521637/155423\">How can I move a captured variable into a closure within a closure?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/57251728/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564423365, "post_id": 57251728, "comment_id": 101017655, "body": "I encourage you to <i>search for your error message</i> in the future. Doing so quickly leads to existing questions that likely solve your problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564423507, "post_id": 57251728, "comment_id": 101017699, "body": "Conceptually, what should happen when the closure is called multiple times? What value should <code>tx</code> be on the second and every subsequent call?"}, {"owner": {"reputation": 49, "user_id": 5588832, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206326905104734/picture?type=large", "display_name": "Marco", "link": "https://stackoverflow.com/users/5588832/marco"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1564423933, "post_id": 57251728, "comment_id": 101017877, "body": "@Shepmaster You can mark this question as Already answered. Denis S&#233;guret made it clear: if I don&#39;t clone it, it works only for the first spawned thread. Not for the others... Thank you"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1564427798, "post_id": 57251728, "comment_id": 101019433, "body": "@Marco Thank you for editing your question and keeping cool despite our critical comments :) Creating a good question on StackOverflow is not trivial and we just want to improve questions, that&#39;s why we comment like this. Happy hacking in Rust!"}], "owner": {"reputation": 49, "user_id": 5588832, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206326905104734/picture?type=large", "display_name": "Marco", "link": "https://stackoverflow.com/users/5588832/marco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 105, "favorite_count": 2, "closed_date": 1564424625, "answer_count": 0, "score": 0, "last_activity_date": 1564427619, "creation_date": 1564395521, "last_edit_date": 1564423185, "question_id": 57251728, "link": "https://stackoverflow.com/questions/57251728/why-do-i-need-to-clone-a-moved-variable", "closed_reason": "Duplicate", "title": "Why do I need to clone a moved variable?", "body": "<p>Why do I need to clone <code>tx</code>? I moved it. I cannot use it in my main thread anymore.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::mpsc::{channel, Sender};\n\nfn main() {\n    let (tx, _rx) = channel();\n\n    std::thread::spawn(move || {\n        takes_closure(|| Foo { sender: tx });\n    });\n}\n\nstruct Foo {\n    sender: Sender&lt;()&gt;,\n}\n\nfn takes_closure(_: impl FnMut() -&gt; Foo) {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b4ff97e8e2fbba294a44b1cd042896b7\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>This has the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of captured variable in an `FnMut` closure\n --&gt; src/main.rs:7:40\n  |\n4 |     let (tx, _rx) = channel();\n  |          -- captured outer variable\n...\n7 |         takes_closure(|| Foo { sender: tx });\n  |                                        ^^ cannot move out of captured variable in an `FnMut` closure\n</code></pre>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1564393381, "post_id": 57250993, "comment_id": 101002209, "body": "It&#39;s also worth noting that this happens with <code>Arc</code>s as well (this is actually how I encountered this behavior), so while I know that both pointers and floating point numbers are a bit special, I don&#39;t know how they relate that would cause this issue exactly."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1564393976, "post_id": 57250993, "comment_id": 101002505, "body": "Simpler example: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=93149c5ba46630d058706762a17f35ac\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1564394085, "post_id": 57250993, "comment_id": 101002567, "body": "I also found a great tool to help with this: <code>rustc</code> comes with a <code>print-type-sizes</code> debug flag, which can be run like this: <code>cargo +nightly-2019-07-19 rustc --release -- -Z print-type-sizes</code> (the <code>+nightly...</code> is only necessary if it&#39;s not your default)"}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1564394823, "post_id": 57250993, "comment_id": 101002953, "body": "For posterity, <a href=\"https://gist.github.com/rivertam/0f3548b687865514aa3d1dab0c7b2b26\" rel=\"nofollow noreferrer\">here</a> is the relevant part of the output of the command I posted above for the example i posted in the original question. (I prefer to use the less simple example because it&#39;s easier to see how some fields make a difference and others don&#39;t)"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1564398542, "post_id": 57250993, "comment_id": 101004984, "body": "<a href=\"https://i.imgur.com/GTpHKYQ.jpg\" rel=\"nofollow noreferrer\">Smol :3</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 2, "creation_date": 1564393983, "post_id": 57251259, "comment_id": 101002510, "body": "I see, so the differences between them can be explained by alignment -- <code>f64</code> requires 8 byte alignment, <code>f32</code> requires 4 byte alignment, and <code>u8</code> does not require any alignment. I guess my next question has to be... why does the whole thing have to be aligned? Can&#39;t you treat the first (or second; we have 17 of them) 8 bytes like an aligned float and not align the entire enum?"}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 2, "creation_date": 1564394502, "post_id": 57251259, "comment_id": 101002780, "body": "Got it -- as @rodrigo notes (and the page you linked to also covers), the whole struct/enum must be aligned because if it&#39;s not aligned, arrays of the value will have their inner members be unaligned. Even if the <code>Big</code> starts with the float, if the whole enum is 17 bytes, the next <code>Big</code> in the <code>[Big]</code> would start on byte 18, so <i>its</i> alignment would be wrong, even if its internal alignment is fine. Thanks for your and @rodrigo&#39;s help!"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 9, "last_activity_date": 1564398423, "last_edit_date": 1564398423, "creation_date": 1564393862, "answer_id": 57251259, "question_id": 57250993, "link": "https://stackoverflow.com/questions/57250993/why-does-making-one-enum-variant-an-f64-increase-the-size-of-this-enum/57251259#57251259", "title": "Why does making one enum variant an `f64` increase the size of this enum?", "body": "<p>The size must be at least 17 bytes, because its biggest variant is 16 bytes big, and it needs an extra byte for the discriminant (the compiler can be smart in some cases, and put the discriminant in unused bits of the variants, but it can't do this here).</p>\n\n<p>Also, the size of <code>Big</code> must be a multiple of 8 bytes to <a href=\"https://en.wikipedia.org/wiki/Data_structure_alignment\" rel=\"noreferrer\">align</a> <code>f64</code> properly. The smaller multiple of 8 bigger than 17 is 24.\nSimilarly, <code>Smol</code> cannot be only 17 bytes, because its size must be a multiple of 4 bytes (the size of <code>f32</code>). <code>Smoller</code> only contains <code>u8</code> so it can be aligned to 1 byte.</p>\n"}, {"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 4, "last_activity_date": 1564394120, "creation_date": 1564394120, "answer_id": 57251329, "question_id": 57250993, "link": "https://stackoverflow.com/questions/57250993/why-does-making-one-enum-variant-an-f64-increase-the-size-of-this-enum/57251329#57251329", "title": "Why does making one enum variant an `f64` increase the size of this enum?", "body": "<p>I think that it is because of the alignment requirements of the inner values.</p>\n\n<p><code>u8</code> has an alignment of <code>1</code>, so all works as you expect, and you get a whole size of 17 bytes.</p>\n\n<p>But <code>f32</code> has an alignment of <code>4</code> (technically it is arch-dependent, but that is the most likely value). So even if the discriminant is just 1 byte you get this layout for <code>Smol::Float</code>:</p>\n\n<pre><code>[discriminant x 1] [padding x 3] [f32 x 4] = 8 bytes\n</code></pre>\n\n<p>And then for <code>Smol::Sixteen</code>:</p>\n\n<pre><code>[discriminant x 1] [u8 x 16] [padding x 3] = 20 bytes\n</code></pre>\n\n<p>Why is this padding really necessary? Because it is a requirement that the size of a type must be a multiple of the alignment, or else arrays of this type will misalign.</p>\n\n<p>Similarly, the alignment for <code>f64</code> is 8, so you get a full size of 24, that is the smallest multiple of 8 that fits all the enums.</p>\n"}, {"comments": [{"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1564401467, "post_id": 57252734, "comment_id": 101006434, "body": "&gt;It&#39;s interesting to note that Swift decided to define a separate intrinsic, strideof, to represent the stride in an array  I&#39;m glad you mentioned this, as this is really interesting to me. Of course, this morning, I&#39;ve been thinking about ways one could get around it. In practice, I won&#39;t bother (not worth it; this size is fine, in reality) but I&#39;m glad to see some languages have this as well-supported behavior."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564405251, "post_id": 57252734, "comment_id": 101008479, "body": "C doesn&#39;t have such requirement. You mix C requirement and machine requirement to produce optimized code. If you ask to the compile to pack the structure you can get all 3 structures to have 17 bytes. <a href=\"https://rextester.com/XNVHF93560\" rel=\"nofollow noreferrer\">rextester.com/XNVHF93560</a>, and it&#39;s still correct C code."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564406348, "post_id": 57252734, "comment_id": 101009130, "body": "@Stargateur: Note that <code>pack</code> also changes the alignment, so you are not invalidating my point. There is no explicit requirement that <code>sizeof</code> return a number that is a multiple of <code>alignof</code> AFAIK. In C++ it can be deduced from 5.3.3/2 (<a href=\"https://stackoverflow.com/a/4638295/147192\">stackoverflow.com/a/4638295/147192</a>). In C, I expect 6.5.3.4/3 to enforce the same semantics: &quot;When applied to an operand that has structure or union type, the result is the total number of bytes in such an object, including internal <b>and trailing padding</b>&quot; combined with alignment and arrays."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1564399102, "last_edit_date": 1592644375, "creation_date": 1564399102, "answer_id": 57252734, "question_id": 57250993, "link": "https://stackoverflow.com/questions/57250993/why-does-making-one-enum-variant-an-f64-increase-the-size-of-this-enum/57252734#57252734", "title": "Why does making one enum variant an `f64` increase the size of this enum?", "body": "<p>As <a href=\"https://stackoverflow.com/a/57251259/147192\">mcarton</a> mentions, this is an effect of alignment of internal fields and alignment/size rules.</p>\n<hr />\n<h3>Alignment</h3>\n<p>Specifically, common alignments for built-in types are:</p>\n<ul>\n<li>1: i8, u8.</li>\n<li>2: i16, u16.</li>\n<li>4: i32, u32, f32.</li>\n<li>8: i64, u64, f64.</li>\n</ul>\n<p>Do note that I say common, in practice alignment is dictated by hardware, and on 32-bits architectures you could reasonably expect f64 to be 4-bytes aligned. Further, the alignment of <code>isize</code>, <code>usize</code> and pointers will vary based on 32-bits vs 64-bits architecture.</p>\n<p>In general, for ease of use, the alignment of a compound type is the largest alignment of any of its fields, recursively.</p>\n<p>Access to unaligned values is generally architecture specific; on some architecture it will crash (SIGBUS) or return erroneous data, on some it will be slower (x86/x64 not so long ago) and on others it may be just fine (newer x64, on some instructions).</p>\n<hr />\n<h3>Size and Alignment</h3>\n<p>In C, the size must always be a multiple of the alignment, because of the way arrays are laid out and iterated over:</p>\n<ul>\n<li>Each element in the array must be at its correct alignment.</li>\n<li>Iterating is done by incrementing the pointer by <code>sizeof(T)</code> bytes.</li>\n<li>Thus the size must be a multiple of the alignment.</li>\n</ul>\n<p>Rust has inherited this behavior^1 .</p>\n<p>It's interesting to note that Swift decided to define a separate intrinsic, <code>strideof</code>, to represent the stride in an array, which allowed them to remove any tail-padding from the result of <code>sizeof</code>. It did cause some confusions, as people expected <code>sizeof</code> to behave like C, but allows compacting memory more efficiently.</p>\n<p>Thus, in Swift, your enums could be represented as:</p>\n<ul>\n<li><code>Smoller</code>: <code>[u8 x 16][discriminant]</code> =&gt; sizeof 17 bytes, strideof 17 bytes, alignof 1 byte.</li>\n<li><code>Smol</code>: <code>[u8 x 16][discriminant]</code> =&gt; sizeof 17 bytes, strideof 20 bytes, alignof 4 bytes.</li>\n<li><code>Big</code>: <code>[u8 x 16][discriminant]</code> =&gt; sizeof 17 bytes, strideof 24 bytes, alignof 8 bytes.</li>\n</ul>\n<p>Which clearly shows the difference between the <em>size</em> and the <em>stride</em>, which are conflated in C and Rust.</p>\n<p>^1 <em>I seem to remember some discussions over the possible switch to <code>strideof</code>, which did not come to fruition as we can see, but could not find a link to them.</em></p>\n"}], "owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "accepted_answer_id": 57252734, "answer_count": 3, "score": 4, "last_activity_date": 1564399102, "creation_date": 1564392984, "question_id": 57250993, "link": "https://stackoverflow.com/questions/57250993/why-does-making-one-enum-variant-an-f64-increase-the-size-of-this-enum", "title": "Why does making one enum variant an `f64` increase the size of this enum?", "body": "<p>I have created three enums that are nearly identical:</p>\n\n<pre><code>#[derive(Clone, Debug)]\npub enum Smoller {\n    Int(u8),\n    Four([u8; 4]),\n    Eight([u8; 8]),\n    Twelve([u8; 12]),\n    Sixteen([u8; 16]),\n}\n\n#[derive(Clone, Debug)]\npub enum Smol {\n    Float(f32),\n    Four([u8; 4]),\n    Eight([u8; 8]),\n    Twelve([u8; 12]),\n    Sixteen([u8; 16]),\n}\n\n#[derive(Clone, Debug)]\npub enum Big {\n    Float(f64),\n    Four([u8; 4]),\n    Eight([u8; 8]),\n    Twelve([u8; 12]),\n    Sixteen([u8; 16]),\n}\n\npub fn main() {\n    println!(\"Smoller: {}\", std::mem::size_of::&lt;Smoller&gt;()); // =&gt; Smoller: 17\n    println!(\"Smol: {}\", std::mem::size_of::&lt;Smol&gt;()); // =&gt; Smol: 20\n    println!(\"Big: {}\", std::mem::size_of::&lt;Big&gt;()); // =&gt; Big: 24\n}\n</code></pre>\n\n<p>What I expect, given my understanding of computers and memory, is that these should be the same size. The biggest variant is the <code>[u8; 16]</code> with a size of 16. Therefore, while these enums do have a different size first variant, they have the same size of their biggest variants and the same number of variants total.</p>\n\n<p>I know that Rust can do some optimizations to acknowledge when some types have gaps (e.g. pointers can collapse because we know that they won't be valid and 0), but this is really the opposite of that. I think if I were constructing this enum by hand, I could fit it into 17 bytes (only one byte being necessary for the discrimination), so both the 20 bytes and the 24 bytes are perplexing to me.</p>\n\n<p>I suspect this might have something to do with alignment, but I don't know why and I don't know why it would be necessary.</p>\n\n<p>Can someone explain this?</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["c++", "node.js", "rust", "static-linking"], "answers": [{"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user3724182"}, "is_accepted": true, "score": 3, "last_activity_date": 1564606937, "last_edit_date": 1592644375, "creation_date": 1564606937, "answer_id": 57298788, "question_id": 57246454, "link": "https://stackoverflow.com/questions/57246454/how-to-statically-link-node-js-in-rust/57298788#57298788", "title": "How to statically link node.js in rust?", "body": "<p>I found a number of issues that once resolved allows successful static linking of node.js in Rust.</p>\n<h3><code>node_main.cc</code> is not included in the <code>libnode.a</code> output</h3>\n<p>I found this by using <code>nm</code> to lookup symbols. I was not able to find <code>node_main()</code> and neither <code>node_main.o</code> in the symbols list. Thus I realized that nothing in <code>node_main.cc</code> would ever be exported.</p>\n<p>Fix: Expose a library entry point C function in another file like <code>node.cc</code>. Note that here we are adding a completely new function that calls <code>node::Start()</code></p>\n<p>node.cc</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>extern &quot;C&quot; int node_main(int argc, char** argv) {\n    return node::Start(argc, argv);\n}\n</code></pre>\n<h3>need <code>extern &quot;C&quot;</code> because of c++ name symbol mangling</h3>\n<p>Again, using the <code>nm</code> tool to search through all symbols in the <code>libnode.a</code> file I was able to discover that <code>node_main()</code> function symbol was mangled. In order to find this symbol from Rust it must not be mangled, and this is accomplished with  <code>extern &quot;C&quot;</code></p>\n<p>Fix: make sure to prepend functions intended to be exposed to Rust with <code>extern &quot;C&quot;</code></p>\n<p>node.cc</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>extern &quot;C&quot; int node_main()\n</code></pre>\n<h3>depending on node version, some additional symbols are missing</h3>\n<p>According to node.js Github issue <a href=\"https://github.com/nodejs/node/issues/27431\" rel=\"nofollow noreferrer\">#27431</a> some symbol stubs do not get output in the static library. I was working with node.js v13.x.x tags where this is an issue, so I had to create libraries for these extra stubs and link them in the rust build configuration.</p>\n<p>Fix: Create static libraries from the stubs and link them in <code>build.rs</code></p>\n<pre class=\"lang-sh prettyprint-override\"><code>ar rcs obj/Release/lib_stub_code_cache.a obj/Release/obj.target/cctest/src/node_code_cache_stub.o\nar rcs obj/Release/lib_stub_snapshot.a obj/Release/obj.target/cctest/src/node_snapshot_stub.o\n</code></pre>\n<h2>Final result</h2>\n<p>building node.js</p>\n<pre class=\"lang-sh prettyprint-override\"><code>git clone https://github.com/nodejs/node\ncd node\nprintf 'extern &quot;C&quot; int node_main(int argc, char** argv) { return node::Start(argc, argv); }' &gt;&gt; src/node.cc\n./configure --enable-static\nmake -j4\n\n# temporary fix: https://github.com/nodejs/node/issues/27431#issuecomment-487288275\nREL=obj/Release\nSTUBS=$REL/obj.target/cctest/src\nar rcs &quot;$REL/lib_stub_code_cache.a $STUBS/node_code_cache_stub.o&quot;\nar rcs &quot;$REL/lib_stub_snapshot.a $STUBS/node_snapshot_stub.o&quot;\n</code></pre>\n<p>wrapper.cpp</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nextern &quot;C&quot; {\n  int node_main(int argc, char** argv);\n\n  void run_node() {\n    cout &lt;&lt; &quot;hello there! general kenobi...\\n&quot;;\n    char *args[] = { (char*)&quot;tester.js&quot;, NULL };\n    node_main(1, args);\n  }\n}\n</code></pre>\n<p>build.rs</p>\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate cc;\n\nfn main() {\n  cc::Build::new()\n    .cpp(true)\n    .file(&quot;wrapper.cpp&quot;)\n    .compile(&quot;libwrapper.a&quot;);\n\n  println!(&quot;cargo:rustc-link-search=native=../node/out/Release&quot;);\n\n  println!(&quot;cargo:rustc-link-lib=static=node&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=uv&quot;);\n\n  // temporary fix - https://github.com/nodejs/node/issues/27431#issuecomment-487288275\n  println!(&quot;cargo:rustc-link-lib=static=_stub_code_cache&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=_stub_snapshot&quot;);\n  // end temporary fix\n\n  println!(&quot;cargo:rustc-link-lib=static=v8_base_without_compiler&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=v8_compiler&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=v8_initializers&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=v8_libbase&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=v8_libplatform&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=v8_libsampler&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=v8_snapshot&quot;);\n\n  println!(&quot;cargo:rustc-link-lib=static=icuucx&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=icui18n&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=icudata&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=icustubdata&quot;);\n\n  println!(&quot;cargo:rustc-link-lib=static=zlib&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=brotli&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=cares&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=histogram&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=http_parser&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=llhttp&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=nghttp2&quot;);\n  println!(&quot;cargo:rustc-link-lib=static=openssl&quot;);\n}\n\n</code></pre>\n<p>main.rs</p>\n<pre class=\"lang-rust prettyprint-override\"><code>extern {\n  fn run_node();\n}\n\nfn main() {\n  println!(&quot;a surprise to be sure, but a welcome one&quot;);\n  unsafe { run_node(); }\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user3724182"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 649, "favorite_count": 1, "accepted_answer_id": 57298788, "answer_count": 1, "score": 4, "last_activity_date": 1564606937, "creation_date": 1564365989, "last_edit_date": 1564384528, "question_id": 57246454, "link": "https://stackoverflow.com/questions/57246454/how-to-statically-link-node-js-in-rust", "title": "How to statically link node.js in rust?", "body": "<p>I would like to embed node.js in Rust. I'm <strong>not</strong> interested in writing a node.js addon with NAPI or controlling node.js extensively from within rust. All I need is the node.js <code>main()</code> start method - the equivalent of doing <code>node myscript.js</code>.</p>\n\n<p>Why? I am building a self-contained single-file binary desktop application in Rust and would like to run node.js scripts with an embeded node.js runtime. Node.js is not guaranteed to be on the end user's computer, and startup time is sensitive so extracting a self-contained zip of node.js from within the binary to the filesystem is undesirable.</p>\n\n<p>I believe I am having problems with statically linking node.js in my rust (binary) project.</p>\n\n<p>I pull down the nodejs source code</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>git clone https://github.com/nodejs/node\n</code></pre>\n\n<p>And rename the main method in <code>node_main.cc</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>sed -i .bak \"s/int main(/int node_main(/g\" ./src/node_main.cc\n</code></pre>\n\n<p>Then I build node.js as static libraries</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./configure --enable-static\nmake -j4\n</code></pre>\n\n<p>I have a c++ wrapper file <code>wrapper.cpp</code> to expose the <code>node_main()</code> method via <code>extern c</code></p>\n\n<p>wrapper.cpp:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nint node_main(int argc, char **argv);\n\nextern \"C\" {\n  void run_node() {\n    cout &lt;&lt; \"hello there! general kenobi...\" &lt;&lt; endl;\n    char *args[] = { (char*)\"tester.js\", NULL };\n    node_main(1, args);\n  }\n}\n</code></pre>\n\n<p>At this point I was able to successfully build the c++ wrapper as a binary while statically linking node.js libs and run node.js from c++ successfully. However, from rust...</p>\n\n<p>main.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern {\n  fn run_node();\n}\n\nfn main() {\n  println!(\"hey there this is RUST\");\n  unsafe { run_node(); }\n}\n</code></pre>\n\n<p>build.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate cc;\n\nfn main() {\n  println!(\"cargo:rustc-link-search=native=../node/out/Release\");\n\n  println!(\"cargo:rustc-link-lib=static=node\");\n  println!(\"cargo:rustc-link-lib=static=uv\");\n\n  println!(\"cargo:rustc-link-lib=static=v8_base\");\n  println!(\"cargo:rustc-link-lib=static=v8_libbase\");\n  println!(\"cargo:rustc-link-lib=static=v8_snapshot\");\n  println!(\"cargo:rustc-link-lib=static=v8_libplatform\");\n\n  println!(\"cargo:rustc-link-lib=static=icuucx\");\n  println!(\"cargo:rustc-link-lib=static=icui18n\");\n  println!(\"cargo:rustc-link-lib=static=icudata\");\n  println!(\"cargo:rustc-link-lib=static=icustubdata\");\n\n  println!(\"cargo:rustc-link-lib=static=brotli\");\n  println!(\"cargo:rustc-link-lib=static=nghttp2\");\n\n  cc::Build::new()\n    .cpp(true)\n    .file(\"wrapper.cpp\")\n    .compile(\"libwrapper.a\");\n}\n</code></pre>\n\n<p>Note the <code>rustc-link-search</code> path is relative above.</p>\n\n<p>When I run <code>cargo build</code> I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>= note: Undefined symbols for architecture x86_64:\n          \"node_main(int, char**)\", referenced from:\n              _run_node in libwrapper.a(wrapper.o)\n        ld: symbol(s) not found for architecture x86_64\n        clang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n\n<p>I'm not sure if linker order is important, but I tried some different ordering combinations with no luck. I also tried linking all the lib <code>.a</code> files from <code>node/out/Release</code> but no difference. I also tried combining all the <code>.a</code> files from <code>node/out/Release</code> into one lib <code>.a</code> file but received duplicate symbol errors. I tried different tags of node.js (like <code>v11.15.0</code>) with no difference.</p>\n\n<p>I am doing this on MacOS 10.14.5</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustc --version\nrustc 1.36.0 (a53f9df32 2019-07-03)\n$ cargo --version\ncargo 1.36.0 (c4fcfb725 2019-05-15)\n$ g++ --version\nConfigured with: --prefix=/Library/Developer/CommandLineTools/usr --with-gxx-include-dir=/Library/Devel\noper/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/c++/4.2.1\nApple LLVM version 10.0.1 (clang-1001.0.46.4)\nTarget: x86_64-apple-darwin18.6.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\n</code></pre>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[build-dependencies]\ncc = \"1.0\"\n</code></pre>\n\n<p>I'm open to better ways of embedding node.js in rust if there are any good ideas.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 371, "user_id": 9482601, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0fc8ace82b35ce6a8a1bbe1494c2a11?s=128&d=identicon&r=PG&f=1", "display_name": "javajav", "link": "https://stackoverflow.com/users/9482601/javajav"}, "edited": false, "score": 0, "creation_date": 1564351086, "post_id": 57245215, "comment_id": 100991148, "body": "<a href=\"https://www.reddit.com/r/rust/comments/8oz7md/make_cargo_fail_on_warning/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/8oz7md/make_cargo_fail_on_warning</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1564351546, "post_id": 57245215, "comment_id": 100991227, "body": "Hi there! I think your question is answered by the linked Q&amp;A. If that is not the case, just tell us here in the comments so that your question can be reopened! In short: <code>--deny warnings</code> as <code>rustc</code> flag (or via <code>RUSTFLAGS=&quot;--deny warnings&quot;</code>) or <code>#![deny(warnings)]</code> as crate attribute."}], "owner": {"reputation": 523, "user_id": 10998312, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a629534f2e86430525c30c60a11d6a6?s=128&d=identicon&r=PG&f=1", "display_name": "KAction", "link": "https://stackoverflow.com/users/10998312/kaction"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 111, "favorite_count": 0, "closed_date": 1564351517, "answer_count": 0, "score": 2, "last_activity_date": 1565619668, "creation_date": 1564350537, "last_edit_date": 1565619668, "question_id": 57245215, "link": "https://stackoverflow.com/questions/57245215/how-to-treat-warnings-as-errors-in-rust", "closed_reason": "Duplicate", "title": "How to treat warnings as errors in Rust", "body": "<p>How make <code>cargo build</code> treat warnings as fatal errors? I am looking for option that is commonly named <code>-Werror</code> in other languages.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "edited": false, "score": 3, "creation_date": 1564342094, "post_id": 57244266, "comment_id": 100989230, "body": "Isn&#39;t this a vector of arrays, a.k.a. <code>Vector&lt;[i32; 3]&gt;</code>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1564390327, "post_id": 57244266, "comment_id": 101000601, "body": "FYI, the better way to have a two dimensional vector is to have a 1-dimensional vector with an API that let it use as a 2-dimensional one. I&#39;m pretty sure that some crates exist to do that."}], "answers": [{"tags": [], "owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "is_accepted": true, "score": 4, "last_activity_date": 1564574138, "last_edit_date": 1564574138, "creation_date": 1564342553, "answer_id": 57244342, "question_id": 57244266, "link": "https://stackoverflow.com/questions/57244266/how-to-pass-a-2-dimensional-vector-to-a-function-in-rust/57244342#57244342", "title": "How to pass a 2-dimensional Vector to a function in rust?", "body": "<p>You don't actually have a two dimensional vector there. You have a vector of integer arrays. You need to change your code to actually use a vector with integer vectors in it:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let ker = vec![vec![-1, -1, -1], vec![-1, 8, -1], vec![-1, -1, -1]];     \n    do_schtuff(ker);\n}\n\nfn do_schtuff(k: Vec&lt;Vec&lt;i32&gt;&gt;) {\n    println!(\"{:?}\", k);\n}\n</code></pre>\n\n<p>Though it almost certainly would be better to not move the vector and give ownership to the <code>do_schtuff</code> function, but instead to pass the vector as a reference to a slice:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let ker = vec![vec![-1, -1, -1], vec![-1, 8, -1], vec![-1, -1, -1]];     \n    do_schtuff(&amp;ker[..]);\n}\n\nfn do_schtuff(k: &amp;[Vec&lt;i32&gt;]) {  // Note it is more idiomatic to use a slice.\n    println!(\"{:?}\", k);\n}\n</code></pre>\n"}], "owner": {"reputation": 49, "user_id": 11848982, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YojeZ.png?s=128&g=1", "display_name": "Lugges991", "link": "https://stackoverflow.com/users/11848982/lugges991"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 342, "favorite_count": 0, "accepted_answer_id": 57244342, "answer_count": 1, "score": -1, "last_activity_date": 1564574138, "creation_date": 1564341943, "question_id": 57244266, "link": "https://stackoverflow.com/questions/57244266/how-to-pass-a-2-dimensional-vector-to-a-function-in-rust", "title": "How to pass a 2-dimensional Vector to a function in rust?", "body": "<p>I'm trying to pass a 2-d array to a function but I cant figure out how to specify the expected type of the function.</p>\n\n<p>My code looks like this</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let ker = vec![[-1, -1, -1], [-1, 8, -1], [-1, -1, -1]];\n\n    do_schtuff(ker);\n}\n\nfn do_schtuff(k: Vec&lt;Vec&lt;i32&gt;&gt;) {\n    println!(\"{:?}\", k);\n}\n</code></pre>\n\n<p>P.S.: I'm new to rust so any advice would be really appreciated! Thanks!</p>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "answers": [{"tags": [], "owner": {"reputation": 1686, "user_id": 2998414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/541072f1542f014d831f0f2e68f6daee?s=128&d=identicon&r=PG", "display_name": "snek", "link": "https://stackoverflow.com/users/2998414/snek"}, "is_accepted": false, "score": 0, "last_activity_date": 1566866049, "creation_date": 1566866049, "answer_id": 57666361, "question_id": 57242851, "link": "https://stackoverflow.com/questions/57242851/store-rusts-struct-instantiated-in-js-in-rusts-vector-on-the-wasm-side/57666361#57666361", "title": "Store Rust&#39;s struct instantiated in JS in Rust&#39;s vector on the wasm side", "body": "<p>When you run <code>add_body</code>, it passes ownership of the value to your World, which immediately moves it into the vec. If you imagine this same code in rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut world = World::new();\nlet body = Body::new();\n\nprintln!(\"body: {:?}\", body);\nworld.add_body(body);\nprintln!(\"body added: {:?}\", body);\n</code></pre>\n\n<p>It would fail to compile on the second println, because it was moved in the <code>add_body</code> call.</p>\n\n<p>If your objects live primarily in JS land, you should work with them in rust land as JsValue references. Here's an example for the binding of the Array global that you can use as a reference: <a href=\"https://rustwasm.github.io/wasm-bindgen/api/src/js_sys/lib.rs.html#127\" rel=\"nofollow noreferrer\">https://rustwasm.github.io/wasm-bindgen/api/src/js_sys/lib.rs.html#127</a></p>\n"}], "owner": {"reputation": 560, "user_id": 5185634, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/0b3e9cedcae45f8ddf6cbd3ebfff58f5?s=128&d=identicon&r=PG&f=1", "display_name": "Darkowic", "link": "https://stackoverflow.com/users/5185634/darkowic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 239, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1566866049, "creation_date": 1564331463, "question_id": 57242851, "link": "https://stackoverflow.com/questions/57242851/store-rusts-struct-instantiated-in-js-in-rusts-vector-on-the-wasm-side", "title": "Store Rust&#39;s struct instantiated in JS in Rust&#39;s vector on the wasm side", "body": "<p>How can I store JS instantiated object in Rust's struct and make computations on it?</p>\n\n<p>I created an example based on <a href=\"https://rustwasm.github.io/docs/book/game-of-life/implementing.html\" rel=\"nofollow noreferrer\">tutorial</a>.</p>\n\n<p>The rust part:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[wasm_bindgen]\npub struct Body {\n    position: f32\n}\n\n#[wasm_bindgen]\nimpl Body {\n    pub fn new() -&gt; Body {\n        Body {\n            position: 0.\n        }\n    }\n}\n\n#[wasm_bindgen]\npub struct World {\n    bodies: Vec&lt;Body&gt;,\n}\n\n#[wasm_bindgen]\nimpl World {\n    // .. new etc\n    pub fn add_body(&amp;mut self, object: Body) {\n        self.bodies.push(Body);\n    }\n\n    pub fn step(&amp;mut step) {\n        // do something with bodies\n    }\n}\n\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>const world = World.new();\nconst body = Body.new()\n\nconsole.log('body', body);\nworld.add_body(body);\nconsole.log('after added', body);\n</code></pre>\n\n<p>Immediately after <code>body</code> is added to the world it loses its reference.</p>\n\n<p>Console.log result:</p>\n\n<pre><code>body Body\u00a0{ptr: 1118264}\nindex.js:28 after added Body\u00a0{ptr: 0}\n</code></pre>\n\n<p>Is it possible to store the reference in JS? My use case: I handle all interaction etc on JS side and to only heavy calculations on wasm side.</p>\n"}, {"tags": ["memory", "memory-management", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564327290, "post_id": 57242198, "comment_id": 100985563, "body": "for what value of <code>n</code>, what are the spec of your machine, &quot;is this caused by a system limit of memory&quot; obviously - -"}, {"owner": {"reputation": 92118, "user_id": 1217358, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2aafb97833979e3668c61d36e697bfc?s=128&d=identicon&r=PG", "display_name": "Warren Weckesser", "link": "https://stackoverflow.com/users/1217358/warren-weckesser"}, "edited": false, "score": 4, "creation_date": 1564328939, "post_id": 57242198, "comment_id": 100985967, "body": "Suppose <code>n = 25</code>, so your inner vectors require 100 bytes each.  The outer vector has length <code>2**25</code>, so the total size is <code>(2**25)*100</code> which is more than 3 gigabytes.  How much memory do you have in your DO droplet?"}, {"owner": {"reputation": 171, "user_id": 4181689, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3QTrP.jpg?s=128&g=1", "display_name": "Thomas C", "link": "https://stackoverflow.com/users/4181689/thomas-c"}, "reply_to_user": {"reputation": 92118, "user_id": 1217358, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d2aafb97833979e3668c61d36e697bfc?s=128&d=identicon&r=PG", "display_name": "Warren Weckesser", "link": "https://stackoverflow.com/users/1217358/warren-weckesser"}, "edited": false, "score": 0, "creation_date": 1564331763, "post_id": 57242198, "comment_id": 100986653, "body": "@WarrenWeckesser that makes sense, I have 3GB and I can run examples of <code>n=20</code> but fail for <code>n=25</code> I will increase the memory limits on my droplet and see what happens"}, {"owner": {"reputation": 138, "user_id": 1144858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3cba17cd5c6e976d2a58ff135587aec?s=128&d=identicon&r=PG", "display_name": "David Brown", "link": "https://stackoverflow.com/users/1144858/david-brown"}, "edited": false, "score": 3, "creation_date": 1564339778, "post_id": 57242198, "comment_id": 100988650, "body": "Aside from the memory issues, you should use 1 &lt;&lt; n, as the outer size. Aside from being more efficient (it is a shift rather than a general power), no casts are needed, as everything works as a usize."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1564396441, "post_id": 57242198, "comment_id": 101003858, "body": "If you are willing to use the nightly Rust and unsafe code, you could use the <a href=\"https://doc.rust-lang.org/std/alloc/struct.System.html\" rel=\"nofollow noreferrer\">System allocator</a>, that will let you have more control about your memory."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 138, "user_id": 1144858, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3cba17cd5c6e976d2a58ff135587aec?s=128&d=identicon&r=PG", "display_name": "David Brown", "link": "https://stackoverflow.com/users/1144858/david-brown"}, "edited": false, "score": 1, "creation_date": 1564408044, "post_id": 57242198, "comment_id": 101010122, "body": "@DavidBrown: Actually, I find <code>pow</code> more readable. It could be written better though, since <code>usize</code> also has <a href=\"https://doc.rust-lang.org/std/primitive.usize.html#method.pow\" rel=\"nofollow noreferrer\">pow</a>: <code>2_usize.pow(n as u32)</code>. I guess the OP following the compiler suggestion to add <code>_i32</code> and then was stuck with a cast."}, {"owner": {"reputation": 171, "user_id": 4181689, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3QTrP.jpg?s=128&g=1", "display_name": "Thomas C", "link": "https://stackoverflow.com/users/4181689/thomas-c"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1564408529, "post_id": 57242198, "comment_id": 101010403, "body": "@MatthieuM. yeah you are right, I was following the compiler suggestion, still new to rust and learning about the number types, I&#39;ll try out your suggestion!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1564408817, "post_id": 57242198, "comment_id": 101010560, "body": "@ThomasC: Nothing wrong in following the suggestions, they&#39;re specifically here to be followed. I am more disappointed in the poor suggestion here :/"}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 0, "last_activity_date": 1566557017, "creation_date": 1566557017, "answer_id": 57624670, "question_id": 57242198, "link": "https://stackoverflow.com/questions/57242198/memory-allocation-of-100-bytes-failed/57624670#57624670", "title": "memory allocation of 100 bytes failed", "body": "<p>You've requested a Vec that's too large and ran out of memory. When this happens, Rust will abort the program.</p>\n\n<p>The failure to allocate 100 bytes, rather than >3GB is surprising, but it's probably because behavior of memory allocation on Linux is very unintuitive. Linux pretends to have an infinite amount of memory available, and will allow overly large allocations (overcommit) until it can't bluff any more.</p>\n"}], "owner": {"reputation": 171, "user_id": 4181689, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3QTrP.jpg?s=128&g=1", "display_name": "Thomas C", "link": "https://stackoverflow.com/users/4181689/thomas-c"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1014, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1566557017, "creation_date": 1564326846, "last_edit_date": 1564331869, "question_id": 57242198, "link": "https://stackoverflow.com/questions/57242198/memory-allocation-of-100-bytes-failed", "title": "memory allocation of 100 bytes failed", "body": "<p>I have some code that needs to create a large array. \nOn my local computer (OSX) the program runs ok. \nHowever when I try to run the program on Ubuntu DigitalOcean droplet I get the following error:</p>\n\n<pre><code>memory allocation of 100 bytes failedAborted\n</code></pre>\n\n<p>There isn't any other information provided in the output, but I think it has to do with initializing the vector.</p>\n\n<pre><code>fn example() {\n    let n = 25;\n    let mut dp: Vec&lt;Vec&lt;f32&gt;&gt; = vec![vec![-1.0; n]; 2i32.pow(n as u32) as usize];\n}\n</code></pre>\n\n<p>The size of that vector can get quite large in some instances. Is there a better way to create this large vector or is this caused by a system limit of memory? </p>\n"}, {"tags": ["rust", "output"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1564319129, "post_id": 57241021, "comment_id": 100983558, "body": "It&#39;s unclear what you are asking. When I run your code, I see a progress bar counting to 100_000. After it completes, I see numbers printed from 0 to about 120, before the process exits with <code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;cannot access stdout during shutdown&#39;</code>."}], "answers": [{"comments": [{"owner": {"reputation": 79, "user_id": 10335637, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pnstP.jpg?s=128&g=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/10335637/j-doe"}, "edited": false, "score": 0, "creation_date": 1564332941, "post_id": 57241502, "comment_id": 100986911, "body": "Yes, good idea, but I want to show some info After the progress bar will shown."}], "tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": false, "score": 0, "last_activity_date": 1564321538, "creation_date": 1564321538, "answer_id": 57241502, "question_id": 57241021, "link": "https://stackoverflow.com/questions/57241021/how-not-to-mix-progress-bar-data-with-other-output/57241502#57241502", "title": "How Not to mix progress bar data with other output?", "body": "<p>Using the standard <code>println!</code> with the progress bars isn't going to work, since they're going to overwrite eachother. Instead, use <a href=\"https://docs.rs/indicatif/0.11.0/indicatif/struct.ProgressBar.html#method.println\" rel=\"nofollow noreferrer\">ProgressBar::println</a>, which prints the message above the progress bar without overwriting it.</p>\n"}], "owner": {"reputation": 79, "user_id": 10335637, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pnstP.jpg?s=128&g=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/10335637/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 172, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1564321538, "creation_date": 1564317821, "question_id": 57241021, "link": "https://stackoverflow.com/questions/57241021/how-not-to-mix-progress-bar-data-with-other-output", "title": "How Not to mix progress bar data with other output?", "body": "<p>I have a little stacked with a progress bars.</p>\n\n<p>This is a example program:</p>\n\n<pre><code>use indicatif::*;\nuse std::{sync::mpsc, sync::mpsc::*, thread};\n\npub enum Output {\n    Finish,\n    Tick,\n}\n\nfn main() {\n    let (tx, rx) = mpsc::channel::&lt;Output&gt;();\n\n    let join_handle = thread::spawn(move || {\n        handle_output_messages(100_000, rx);\n    });\n\n    (0..100_000).for_each(|_| tx.send(Output::Tick).unwrap());\n\n    tx.send(Output::Finish).unwrap();\n\n    join_handle.join().unwrap();\n}\n\npub fn handle_output_messages(total_things: u64, rx: Receiver&lt;Output&gt;) {\n    let multi_bar = MultiProgress::new();\n    let progress_bar = multi_bar.add(ProgressBar::new(total_things));\n\n    thread::spawn(move || {\n        for output in rx {\n            match output {\n                Output::Tick =&gt; progress_bar.inc(1),\n                Output::Finish =&gt; {\n                    progress_bar.finish();\n                    (0..600).for_each(|x| println!(\"{:?}\", x));\n                }\n            }\n        }\n    });\n\n    multi_bar.join_and_clear().unwrap();\n}\n</code></pre>\n\n<p>if you try to run it, you will see, that progress bar messages will be mixed with iterated numbers. This it not good for me, but I have no any idea, how to fix this behavior.</p>\n\n<p>Maybe anybody can help me?</p>\n"}, {"tags": ["enums", "rust", "mutable"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1564310263, "post_id": 57239949, "comment_id": 100981474, "body": "Writing to a file in a <code>Display</code> impl seems very wrong. It will be unexpected to anyone using your code and likely to cause problems. It probably indicates that you are approaching something from the wrong angle, or trying to solve the wrong problem."}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 1, "creation_date": 1564311392, "post_id": 57239949, "comment_id": 100981692, "body": "It is not possible to mutate state inside a <code>&amp;self</code> receiver, you best bet might be a static variable that uses some sync strategy."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1564385270, "post_id": 57239949, "comment_id": 100998129, "body": "@Caio: It is possible, actually, using Cells. It&#39;s also unexpected, so warrants a very good reason."}], "owner": {"reputation": 109, "user_id": 6531041, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/9608949f5389592ff98140d22a63367a?s=128&d=identicon&r=PG&f=1", "display_name": "justan0therlurker", "link": "https://stackoverflow.com/users/6531041/justan0therlurker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1564310137, "creation_date": 1564309369, "last_edit_date": 1564310137, "question_id": 57239949, "link": "https://stackoverflow.com/questions/57239949/is-there-a-way-to-share-mutable-state-amongst-enum-variants", "title": "Is there a way to share mutable state amongst enum variants?", "body": "<p>I'm currently using enums in my Rust code and I implemented the Display trait for them. However, whenever I call to_string() on this enum, I want the fmt function in the Display trait to access some shared string that can be seen by all enum variants. Once I have that string, I will write it to a file. Currently I am just opening a file and writing to it for every to_string call instead. Here is what I have:</p>\n\n<pre><code>use std::fmt;\nuse std::fs;\n\npub enum Ast {\n    A,\n    B,\n    C,\n}\n\nimpl fmt::Display for Ast {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        match self {\n            Ast::A =&gt; {\n                foo();\n                write!(f, \" ... \")\n            }\n            Ast::B =&gt; {\n                foo();\n                write!(f, \"...\")\n            }\n            Ast::C =&gt; {\n                foo();\n                write!(f, \"...\")\n            }\n        }\n    }\n}\n\nfn foo() {\n    let data: String = String::from(\"This is data\");\n    fs::write(\"src/file.txt\", data).expect(\"Could not open file\");\n}\n</code></pre>\n\n<p>Instead I would like to declare a String variable at the top of the file that foo would be able to access and mutate. Is there any way to do this? Thank you</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 1587, "user_id": 956856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64eec6ff41ec4774fa9db39daf8c386b?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner-Hall", "link": "https://stackoverflow.com/users/956856/daniel-wagner-hall"}, "edited": false, "score": 1, "creation_date": 1564435146, "post_id": 57239042, "comment_id": 101022153, "body": "Here is some code which does something similar; hopefully it&#39;s useful! <a href=\"https://github.com/pantsbuild/pants/blob/0234eceb2b3f215174a31cc47a36cccceddb8593/src/rust/engine/process_execution/src/local.rs#L90-L210\" rel=\"nofollow noreferrer\">github.com/pantsbuild/pants/blob/&hellip;</a>"}, {"owner": {"reputation": 430, "user_id": 149026, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/95f0b91b4553d548d8429e1bb5c70018?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/149026/michael"}, "reply_to_user": {"reputation": 1587, "user_id": 956856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64eec6ff41ec4774fa9db39daf8c386b?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner-Hall", "link": "https://stackoverflow.com/users/956856/daniel-wagner-hall"}, "edited": false, "score": 0, "creation_date": 1566003678, "post_id": 57239042, "comment_id": 101530778, "body": "@DanielWagner-Hall thanks for the pointer! Does that code read the output stream repeatedly, or does it buffer it all up and read it at once still?"}, {"owner": {"reputation": 1587, "user_id": 956856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64eec6ff41ec4774fa9db39daf8c386b?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner-Hall", "link": "https://stackoverflow.com/users/956856/daniel-wagner-hall"}, "edited": false, "score": 1, "creation_date": 1566035161, "post_id": 57239042, "comment_id": 101535161, "body": "It does both: <code>StreamedHermeticCommand::stream</code> produces a stream of output, and then <code>ChildResults::collect_from</code> uses <code>fold</code> on that stream to read each chunk, waiting until the end, and join them together into single buffers per stream."}], "owner": {"reputation": 430, "user_id": 149026, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/95f0b91b4553d548d8429e1bb5c70018?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/149026/michael"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 332, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1564301307, "creation_date": 1564301307, "question_id": 57239042, "link": "https://stackoverflow.com/questions/57239042/repeatedly-read-subprocess-output-with-tokio-process", "title": "Repeatedly read subprocess output with tokio-process", "body": "<p>For a GUI tool I'm writing in Rust I'd like to kick off long-lived subprocesses and then repeatedly poll them for output. I don't want to block indefinitely waiting for output from any given one, so I'm using <code>tokio</code> and <code>tokio-process</code> to run the process and timeout the output reading. I need to store the subprocess in a struct as well.</p>\n\n<p>I'm running into problems because it seems I need to consume the subprocess's output stream in order to read from it, so after a single read I'm unable to access it again.</p>\n\n<p>I've included a simplified reproduction of my problem below. It prints actual output for the first invocation of <code>print_output</code>, but then prints <code>No process_output_fut</code> for the second invocation since I had to <code>take</code> the output future out of the <code>Plugin</code> struct and consume it in order to read from it.</p>\n\n<p>Any suggestions for how to refactor this code to avoid consuming the process output future with each attempt to fetch the output?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate tokio;\n\nuse std::process::{Command, Stdio};\nuse std::time::Duration;\n\nuse tokio::prelude::*;\nuse tokio::codec::{FramedRead, LinesCodec};\nuse tokio::prelude::stream::StreamFuture;\nuse tokio::timer::Timeout;\nuse tokio_process::{Child, ChildStdout, CommandExt};\n\npub struct Plugin {\n    process: Option&lt;Child&gt;,\n    process_output_fut: Option&lt;Timeout&lt;StreamFuture&lt;FramedRead&lt;ChildStdout, LinesCodec&gt;&gt;&gt;&gt;,\n    tokio_runtime: tokio::runtime::Runtime,\n}\n\nimpl Plugin {\n    pub fn new() -&gt; Self {\n        return Plugin {\n            process: None,\n            process_output_fut: None,\n            tokio_runtime: tokio::runtime::Runtime::new().expect(\n                \"Could not create tokio runtime\"\n            ),\n        }\n    }\n\n    pub fn spawn(&amp;mut self, arg: String) {\n        let mut process = Command::new(\"/bin/ls\")\n            .arg(arg)\n            .stdout(Stdio::piped())\n            .spawn_async()\n            .expect(\"Failed to spawn command\");\n\n        if let Some(plugin_output) = process.stdout().take() {\n            let lines_codec = LinesCodec::new();\n            self.process_output_fut = Some(FramedRead::new(plugin_output, lines_codec)\n                .into_future()\n                .timeout(Duration::from_millis(3000)));\n        }\n        self.process = Some(process);\n    }\n\n    pub fn print_output(&amp;mut self) {\n        if let Some(process_output_fut) = self.process_output_fut.take() {\n            let result = self.tokio_runtime.block_on(process_output_fut).unwrap();\n            if let Some(output) = result.0 {\n                    println!(\"{:?}\", output);\n            };\n        } else {\n            println!(\"No process_output_fut\");\n        }\n    }\n}\n\n\nfn main() {\n    let mut p = Plugin::new();\n    p.spawn(\"/\");\n    p.print_output();\n    p.print_output();\n}\n</code></pre>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1564309978, "creation_date": 1564309978, "answer_id": 57240029, "question_id": 57238860, "link": "https://stackoverflow.com/questions/57238860/rust-from-trait-errors-reference-vs-box-and-operator/57240029#57240029", "title": "Rust `From` trait, errors, reference vs Box and `?` operator", "body": "<p>Look at this function signature:</p>\n\n<pre><code>fn bar(s: &amp;str) -&gt; Result&lt;&amp;str, &amp;dyn error::Error&gt; {\n</code></pre>\n\n<p>The error type is a reference, but a reference to what? Who owns the value being referenced? The value cannot be owned by the function itself because it would go out of scope and Rust, quite rightly, won't allow you to return the dangling reference. So the only alternative is that the error is the input string slice <code>s</code>, or some sub-slice of it. This is definitely not what you wanted.</p>\n\n<p>Now, the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `std::convert::From&lt;std::io::Error&gt;` is not implemented for `&amp;dyn std::error::Error`\n</code></pre>\n\n<p>The trait isn't implemented, and it can't be. To see why, try to implement it by hand:</p>\n\n<pre><code>impl&lt;'a&gt; From&lt;io::Error&gt; for &amp;'a dyn error::Error {\n    fn from(e: io::Error) -&gt; &amp;'a dyn error::Error {\n        // what can go here?\n    }\n}\n</code></pre>\n\n<p>This method is impossible to implement, for exactly the same reason.</p>\n\n<hr>\n\n<p>Why does it work for <code>Box&lt;dyn Error&gt;</code>? A <code>Box</code> allocates its data on the heap, but also <em>owns</em> that data and deallocates it when the box goes out of scope. This is completely different from references, where the owner is separate, and the reference is prevented from outliving the data by lifetime parameters in the types.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/a/32683309/493729\">Is there any way to return a reference to a variable created in a function?\n</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 1, "last_activity_date": 1564311007, "creation_date": 1564311007, "answer_id": 57240137, "question_id": 57238860, "link": "https://stackoverflow.com/questions/57238860/rust-from-trait-errors-reference-vs-box-and-operator/57240137#57240137", "title": "Rust `From` trait, errors, reference vs Box and `?` operator", "body": "<p>Although it is possible to cast the concrete type <code>std::io::Error</code> into <code>dyn Error</code>, it is not possible to return it as a reference because the \"owned\" value is being dropped/erased/removed at the end of the function, same goes to your <code>String</code> -> <code>&amp;str</code>. The <code>Box&lt;error::Error&gt;</code> example works because an owned <code>Error</code> is created in the heap (<code>Box&lt;std::io::Error&gt;</code>) and the std has an implementation of <code>Error</code> for <code>Box&lt;T&gt;</code> (<code>impl&lt;T: Error&gt; Error for Box&lt;T&gt;</code>).</p>\n\n<p>If you want to erase the concrete type and only work with the available methods of a trait, it is possible to use <code>impl Trait</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{error, fs};\n\nfn foo(s: &amp;str) -&gt; Result&lt;String, Box&lt;dyn error::Error&gt;&gt; {\n    let result = fs::read_to_string(s)?;\n    Ok(result)\n}\n\nfn bar(s: &amp;str) -&gt; Result&lt;String, impl error::Error&gt; {\n    let result = match fs::read_to_string(s) {\n        Ok(x) =&gt; x,\n        Err(x) =&gt; return Err(x),\n    };\n    Ok(result)\n}\n\nfn main() {\n    println!(\"{}\", foo(\"foo.txt\").unwrap());\n    println!(\"{}\", bar(\"bar.txt\").unwrap());\n}\n</code></pre>\n"}], "owner": {"reputation": 892, "user_id": 3331931, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/667d26246734ae54783faeebf84ced20?s=128&d=identicon&r=PG", "display_name": "fcracker79", "link": "https://stackoverflow.com/users/3331931/fcracker79"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 469, "favorite_count": 1, "closed_date": 1564315604, "answer_count": 2, "score": 1, "last_activity_date": 1564311007, "creation_date": 1564299422, "last_edit_date": 1564310315, "question_id": 57238860, "link": "https://stackoverflow.com/questions/57238860/rust-from-trait-errors-reference-vs-box-and-operator", "closed_reason": "Duplicate", "title": "Rust `From` trait, errors, reference vs Box and `?` operator", "body": "<p>I am pretty confused on the <code>?</code> operator in functions that return <code>Result&lt;T, E&gt;</code>.</p>\n\n<p>I have the following snippet of code:</p>\n\n<pre><code>use std::error;\nuse std::fs;\n\n\nfn foo(s: &amp;str) -&gt; Result&lt;&amp;str, Box&lt;error::Error&gt;&gt; {\n    let result = fs::read_to_string(s)?;\n    return Ok(&amp;result);\n}\n\nfn bar(s: &amp;str) -&gt; Result&lt;&amp;str, &amp;dyn error::Error&gt; {\n    // the trait `std::convert::From&lt;std::io::Error&gt;` is not implemented for `&amp;dyn std::error::Error` (1)\n    let result = fs::read_to_string(s)?;\n    return Ok(&amp;result);\n}\n\nfn main() {\n    println!(\"{}\", foo(\"foo.txt\").unwrap());\n    println!(\"{}\", bar(\"bar.txt\").unwrap());\n}\n</code></pre>\n\n<p>As you might see from the above snippet, the <code>?</code> operator works pretty well with the returned boxed error, but not with dynamic error references (error at <code>(1)</code>).</p>\n\n<p>Is there any specific reason why it does not work? In my limited knowledge of Rust, it is more natural to return an error reference, rather than a boxed object: in the end, after returning rom the <code>foo</code> function, I expect deref coercion to work with it, so why not returning the error reference itself?</p>\n"}, {"tags": ["arrays", "rust", "macros"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1564267377, "post_id": 57236327, "comment_id": 100975446, "body": "Is there any reason you need <code>audio</code> to be a fixed-size array rather than a<code>&amp;[u32]</code> slice? The latter could be easily built from your byte array without any copying or dynamic allocation."}, {"owner": {"reputation": 5689, "user_id": 898783, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/mI7pa.jpg?s=128&g=1", "display_name": "balping", "link": "https://stackoverflow.com/users/898783/balping"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1564268724, "post_id": 57236327, "comment_id": 100975631, "body": "@SvenMarnach Slices should be fine, but how to do it?"}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1564269011, "post_id": 57236327, "comment_id": 100975691, "body": "let slice = &amp;bytes[..];"}, {"owner": {"reputation": 5689, "user_id": 898783, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/mI7pa.jpg?s=128&g=1", "display_name": "balping", "link": "https://stackoverflow.com/users/898783/balping"}, "edited": false, "score": 0, "creation_date": 1564270963, "post_id": 57236327, "comment_id": 100975919, "body": "How does <code>let slice = &amp;bytes[..];</code> convert from <code>[u8]</code> to <code>[u32]</code>?"}, {"owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "edited": false, "score": 0, "creation_date": 1564271324, "post_id": 57236327, "comment_id": 100975946, "body": "By explicit declaring them in the <code>transmute</code> parameters, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=21f624c30d8a46ed289a569b0a21046a\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 5689, "user_id": 898783, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/mI7pa.jpg?s=128&g=1", "display_name": "balping", "link": "https://stackoverflow.com/users/898783/balping"}, "edited": false, "score": 0, "creation_date": 1564271763, "post_id": 57236327, "comment_id": 100975993, "body": "This sets the first two elements correctly, but doesn&#39;t reduce the size, the rest of the elements are random values from memory that shouldn&#39;t be accessed. Try <code>println!(&quot;{:?}&quot;, audio);</code> to see the whole array."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564274608, "post_id": 57236327, "comment_id": 100976287, "body": "I think transmute <code>u8</code> to <code>u32</code> in this context is UB anyway."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1564274812, "post_id": 57236327, "comment_id": 100976317, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/33968870/temporarily-transmute-u8-to-u16\">Temporarily transmute &#91;u8&#93; to &#91;u16&#93;</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1564339742, "post_id": 57236327, "comment_id": 100988641, "body": "@balping I was wrong in my first comment \u2013 a byte array can&#39;t be converted to an <code>&amp;[u32]</code> slice, since you don&#39;t have any guarantees about the alignment. See my answer for more details."}], "answers": [{"comments": [{"owner": {"reputation": 5689, "user_id": 898783, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/mI7pa.jpg?s=128&g=1", "display_name": "balping", "link": "https://stackoverflow.com/users/898783/balping"}, "edited": false, "score": 0, "creation_date": 1564270753, "post_id": 57236715, "comment_id": 100975900, "body": "Thanks. I could get your stable example running, I haven&#39;t tried the nightly one. The stable example is not very viable though, because it needs a long list of integers that can be divided by 4. It certainly gets problematic with larger files like 63kB. I&#39;ll have to stick with hardcoded values for now, it seems."}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": false, "score": 2, "last_activity_date": 1577229927, "last_edit_date": 1577229927, "creation_date": 1564268832, "answer_id": 57236715, "question_id": 57236327, "link": "https://stackoverflow.com/questions/57236327/rust-macro-for-the-length-of-an-array/57236715#57236715", "title": "Rust: macro for the length of an array", "body": "<p><code>array</code> implements <code>Deref&lt;[T]&gt;</code> (slice) and its <code>len</code> method is not constant.</p>\n\n<p>To get a constant value that represents the length of an array, a trait helper may fit your needs.</p>\n\n<p><strong>Stable</strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait ArrayLen {\n    const SIZE: usize;\n}\n\nmacro_rules! impl_array(\n    ($($size:expr),+) =&gt; {\n        $(\n            impl&lt;'a, T&gt; ArrayLen for &amp;'a [T; $size] {\n                const SIZE: usize = $size;\n            }\n        )+\n    }\n);\n\nimpl_array!(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 24, 32, 36,\n            0x40, 0x80, 0x100, 0x200, 0x400, 0x800, 0x1000, 0x2000, 0x4000, 0x8000,\n            0x10000, 0x20000, 0x40000, 0x80000, 0x100000);\n\nfn print&lt;T&gt;(_: T)\nwhere\n    T: ArrayLen\n{\n    println!(\"{}\", T::SIZE);\n}\n\nfn main() {\n    let bytes = include_bytes!(\"four_bytes_file.something\");\n    // The length of `bytes` must match one of the implementations\n    print(bytes);\n}\n</code></pre>\n\n<p><strong>Nightly</strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(const_generics)]\n\ntrait ArrayLen {\n    const SIZE: usize;\n}\n\nimpl&lt;'a, T, const N: usize&gt; ArrayLen for &amp;'a [T; N] {\n    const SIZE: usize = N;\n}\n\nfn print&lt;T&gt;(_: T)\nwhere\n    T: ArrayLen\n{\n    println!(\"{}\", T::SIZE);\n}\n\nfn main() {\n    let bytes = include_bytes!(\"any_file.something\");\n    print(bytes);\n}\n</code></pre>\n\n<p>Nevertheless, <code>[T; CONST_PARAMETER / 4]</code> is not possible at the moment but things might change with <a href=\"https://github.com/rust-lang/rust/issues/60471\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/60471</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564367369, "post_id": 57239289, "comment_id": 100993767, "body": "Why coding this yourself when there is <a href=\"https://doc.rust-lang.org/src/core/slice/mod.rs.html#2336-2357\" rel=\"nofollow noreferrer\">doc.rust-lang.org/src/core/slice/mod.rs.html#2336-2357</a>."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564437102, "post_id": 57239289, "comment_id": 101022791, "body": "@Stargateur That function is not useful here. The data is supposed to be converted starting from the first byte. You can&#39;t just skip a few bytes if the alignment is wrong -- this would render the audio data completely meaningless."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564437802, "post_id": 57239289, "comment_id": 101022969, "body": "And ? just throw an error if the the conversion is not complete, your code probably invoke UB, whereas this function is more safe."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564439127, "post_id": 57239289, "comment_id": 101023285, "body": "@Stargateur I don&#39;t think the code in this answer is undefined behaviour. The main reason I included it is as an illustration why doing this is a bad idea. While you are right that I <i>could</i> rewrite it using <code>align_to()</code>, I believe it would be less illustrative that way, and it wouldn&#39;t even become conceptually simpler, since you would still have to manually check all three conditions I mentioned."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 2, "last_activity_date": 1564326048, "last_edit_date": 1564326048, "creation_date": 1564303627, "answer_id": 57239289, "question_id": 57236327, "link": "https://stackoverflow.com/questions/57236327/rust-macro-for-the-length-of-an-array/57239289#57239289", "title": "Rust: macro for the length of an array", "body": "<p>In general, it is not possible to transform an array of <code>u8</code> to an array of <code>u32</code> without copying.</p>\n\n<p>This transformation would only be valid under the following conditions:</p>\n\n<ol>\n<li><p><strong>Alignment.</strong> The array needs to be aligned to hold <code>u32</code>, which usually means it needs to start at an address that is a multiple of four. For a byte array created using the <code>include_bytes!()</code> macro, there is no guarantee for a suitable alignment. This can be illustrated using this code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c5fa0926ad17d2c121138e6f51f06f8d\" rel=\"nofollow noreferrer\">playgorund</a>:</p>\n\n<pre><code>let bytes: [u8; 5] = [1, 2, 3, 4, 5];\ndbg!(bytes.as_ptr().align_offset(std::mem::align_of::&lt;u32&gt;()));\n</code></pre>\n\n<p>When I tried to run this on the playground, the result was 1, meaning the byte array isn't aligned to hold <code>u32</code>, but there is no guarantee about the result.</p></li>\n<li><p><strong>Endianness.</strong> The bytes in the array must represent 32-bit integers in an endianness that matches the target architecture endianness. If the data you load from the file is in little endian, any code that interprets the data as 32-bit integers without any transformation will only work on little-endian platforms.</p></li>\n<li><p><strong>Length.</strong> The length of the byte array needs to be a multiple of the size of <code>u32</code>, i.e. a multiple of 4.</p></li>\n</ol>\n\n<p>If these conditions are met, you could theoretically convert the byte array to a slice of <code>u32</code> using this code:</p>\n\n<pre><code>let audio = unsafe {\n    let ptr = bytes.as_ptr() as *const u32;\n    let factor = std::mem::size_of::&lt;u32&gt;() / std::mem::size_of::&lt;u8&gt;();\n    let len = bytes.len() / factor;\n    if ptr.align_offset(std::mem::align_of::&lt;u32&gt;()) == 0\n        &amp;&amp; bytes.len() % factor == 0\n        &amp;&amp; cfg!(target_endian = \"little\")\n    {\n        std::slice::from_raw_parts(ptr, len)\n    } else {\n        // Perform proper conversion.\n    }\n};\n</code></pre>\n\n<p>However, this seems hardly worth the trouble \u2013 you need to implement the real conversion code anyway.</p>\n\n<p>My recommendation is to use an actual audio file format, and load it using a library \u2013 this will save you all sorts of trouble.</p>\n"}], "owner": {"reputation": 5689, "user_id": 898783, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/mI7pa.jpg?s=128&g=1", "display_name": "balping", "link": "https://stackoverflow.com/users/898783/balping"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 620, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1577229927, "creation_date": 1564264181, "last_edit_date": 1564268403, "question_id": 57236327, "link": "https://stackoverflow.com/questions/57236327/rust-macro-for-the-length-of-an-array", "title": "Rust: macro for the length of an array", "body": "<p>I've got a file containing raw binary data, that I would like to load to an array of 4 byte long <code>u32</code> words.</p>\n\n<p>It's possible to do by including the contents of the file at compile time:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let bytes = include_bytes!(\"audio.raw\");\n</code></pre>\n\n<p>Then, I can convert it to an array of <code>u32</code> words using <code>transmute</code>. The length of the new array should be obviously 1/4 of the original byte array.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let audio = unsafe { std::mem::transmute::&lt;[u8; 63504], [u32; 15876]&gt;(*bytes) };\n// works\n</code></pre>\n\n<p>As you can see above, I had to hardcode the lengthes of the input and output arrays. However when trying to avoid hardcoding these numbers, it doesn't work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let audio = unsafe { std::mem::transmute::&lt;[u8; bytes.len()], [u32; bytes.len()/4]&gt;(*bytes) };\n// error: non-constant value\n</code></pre>\n\n<p>It seems that <code>.len()</code> is called at runtime, and since dynamic arrays cannot be allocated in Rust, it yields an error. However in theory, there should be a way to calculate the necessary length at compilation stage, as the length of the <code>bytes</code> array is fixed. So my question is: is there a macro that gives back the length of a static array?</p>\n\n<p>(I'm perfectly aware that dynamic allocation is possible with vectors, my question is explicitly about fixed-sized arrays.)</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cef399e1a97f8ec15eb3533bf64253ef\" rel=\"nofollow noreferrer\">Sample code</a> (<code>include_bytes</code> replaced with hard-coded array):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    // let bytes = include_bytes!(\"audio.raw\");\n    let bytes = [1, 0, 0, 0, 2, 0, 0, 0];\n\n    // works:\n    let audio = unsafe { std::mem::transmute::&lt;[u8; 8], [u32; 2]&gt;(bytes) };\n\n    // error:\n    let audio = unsafe { std::mem::transmute::&lt;[u8; bytes.len()], [u32; bytes.len() / 4]&gt;(bytes) };\n\n    println!(\"{}\", audio[1]);\n}\n</code></pre>\n"}, {"tags": ["unit-testing", "error-handling", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2131, "user_id": 2343935, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/li569.png?s=128&g=1", "display_name": "grooveplex", "link": "https://stackoverflow.com/users/2343935/grooveplex"}, "edited": false, "score": 0, "creation_date": 1565460987, "post_id": 57236366, "comment_id": 101365259, "body": "I have a function returning <code>Result&lt;String, ParseError&gt;</code>, I added <code>#[derive(PartialEq)]</code> to <code>ParseError</code> and it worked!"}, {"owner": {"reputation": 153, "user_id": 5601507, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh3.googleusercontent.com/-mtKGbXYV5Ls/AAAAAAAAAAI/AAAAAAAAD74/9GwLPwx3xIg/photo.jpg?sz=128", "display_name": "BenSmith", "link": "https://stackoverflow.com/users/5601507/bensmith"}, "edited": false, "score": 0, "creation_date": 1578423129, "post_id": 57236366, "comment_id": 105430981, "body": "I found this post very helpful, although I have just a small nit that the expected and result should be swapped in the assertion [i.e. assert_eq!(result, expected);]. I believe this varies between different programming languages!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 153, "user_id": 5601507, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh3.googleusercontent.com/-mtKGbXYV5Ls/AAAAAAAAAAI/AAAAAAAAD74/9GwLPwx3xIg/photo.jpg?sz=128", "display_name": "BenSmith", "link": "https://stackoverflow.com/users/5601507/bensmith"}, "edited": false, "score": 2, "creation_date": 1578426005, "post_id": 57236366, "comment_id": 105432182, "body": "@BenSmith Rust specifically does <i>not</i> ascribe meaning to the first or second argument of <code>assert_eq!</code>. That&#39;s why the failure text refers to them as <code>left</code> and <code>right</code>."}, {"owner": {"reputation": 153, "user_id": 5601507, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh3.googleusercontent.com/-mtKGbXYV5Ls/AAAAAAAAAAI/AAAAAAAAD74/9GwLPwx3xIg/photo.jpg?sz=128", "display_name": "BenSmith", "link": "https://stackoverflow.com/users/5601507/bensmith"}, "edited": false, "score": 0, "creation_date": 1578514073, "post_id": 57236366, "comment_id": 105467500, "body": "Touch&#233;! After double checking, it was the IntelliJ IDE returning Expected and Actual in failing tests when run via the \u201cplay button\u201d. Indeed one would see left and right when executing the standard (intended) cargo run."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 17, "last_activity_date": 1564283093, "last_edit_date": 1564283093, "creation_date": 1564264644, "answer_id": 57236366, "question_id": 57234140, "link": "https://stackoverflow.com/questions/57234140/how-to-assert-errors-in-rust/57236366#57236366", "title": "How to assert errors in Rust?", "body": "<p><a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"noreferrer\"><code>Result&lt;T, E&gt;</code></a> only implements <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#impl-PartialEq%3CResult%3CT%2C%20E%3E%3E\" rel=\"noreferrer\"><code>PartialEq</code></a> when <code>T</code> and <code>E</code> also implement <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"noreferrer\"><code>PartialEq</code></a>, but <a href=\"https://doc.rust-lang.org/std/io/struct.Error.html\" rel=\"noreferrer\"><code>io::Error</code></a> doesn't. I don't know the exact details but <code>io::Error</code> takes an extra error that implements <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html\" rel=\"noreferrer\"><code>dyn Error</code></a>, this allows the user to add extra information. This must have led std to not implement <code>PartialEq</code>.</p>\n\n<p>Anyway, the solution that you probably want in that case is just to compare the <a href=\"https://doc.rust-lang.org/std/io/enum.ErrorKind.html\" rel=\"noreferrer\"><code>ErrorKind</code></a> value. As <code>ErrorKind</code> implements <code>PartialEq</code> this will compile with <a href=\"https://doc.rust-lang.org/std/macro.assert_eq.html\" rel=\"noreferrer\"><code>assert_eq()</code></a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io;\n\nfn parse_data(input: i32) -&gt; Result&lt;i32, io::Error&gt; {\n    match input {\n        0 =&gt; Ok(0),\n        x =&gt; Err(io::Error::new(\n            io::ErrorKind::InvalidData,\n            format!(\"unexpected number {}\", x),\n        )),\n    }\n}\n\n#[test]\nfn test_parsing_wrong_data() {\n    let result = parse_data(1).map_err(|e| e.kind());\n    let expected = Err(io::ErrorKind::InvalidData);\n    assert_eq!(expected, result);\n}\n</code></pre>\n"}], "owner": {"reputation": 2750, "user_id": 661598, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/BVAlk.png?s=128&g=1", "display_name": "wst", "link": "https://stackoverflow.com/users/661598/wst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8418, "favorite_count": 0, "accepted_answer_id": 57236366, "answer_count": 1, "score": 17, "last_activity_date": 1564283093, "creation_date": 1564245691, "last_edit_date": 1564263870, "question_id": 57234140, "link": "https://stackoverflow.com/questions/57234140/how-to-assert-errors-in-rust", "title": "How to assert errors in Rust?", "body": "<p>There are plenty of tutorials showing how to write unit tests in Rust. I've read dozen and all of them focuses on asserting values in case of success. Situation doesn't seem so straight forward in case of an <code>error</code>. Errors do not implement <code>PartialEq</code> trait by default so you can't use <code>assert_eq!</code> macro. Also, some functions may return multiple variants of error depending on what kind of issue occurred (ex. <code>io::Error</code> which may be of different kind.) I could just check if error occurred or not but it doesn't seem enough.</p>\n\n<p>Example below.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn parse_data(input: i32) -&gt; Result&lt;i32, io::Error&gt; {\n    match input {\n        0 =&gt; Ok(0),\n        _ =&gt; Err(io::Error::new(io::ErrorKind::InvalidData, \"unexpected number\"))\n    }\n}\n\n#[test]\nfn test_parsing_wrong_data() {\n    let result = parse_data(1);\n    assert!(result.is_err());\n    let got = result.unwrap_err();\n    let want = io::Error::new(io::ErrorKind::InvalidData, \"unexpected number\");\n\n    // compilation error here: binary operation `==` cannot be applied to type `std::io::Error`\n    assert_eq!(want, got);\n}\n</code></pre>\n\n<p>I assume this is not idiomatic approach, since it's not compiling. Hence the question - what is a proper and idiomatic approach in similar situation?</p>\n"}, {"tags": ["rust", "future", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "edited": false, "score": 1, "creation_date": 1564283661, "post_id": 57234148, "comment_id": 100977195, "body": "Futures (as of version 0.1) don&#39;t work well with borrowed data for exactly the reason you ran into here. Any references inside a future have to be static because the lifetime of a borrow inside a future can&#39;t be tracked by the compiler statically. This is one of the major motivations of the upcoming async/await syntax, and in particular the concept of &quot;pinning&quot; which enables borrows that can live across await points. Until async/await is stable, the easiest workaround is to do what you have done: make sure futures own their data by copying/cloning."}, {"owner": {"reputation": 113, "user_id": 9333242, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PfgJG.gif?s=128&g=1", "display_name": "Jonathon Orsi", "link": "https://stackoverflow.com/users/9333242/jonathon-orsi"}, "reply_to_user": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "edited": false, "score": 0, "creation_date": 1564366709, "post_id": 57234148, "comment_id": 100993653, "body": "So by using address.to_owned(), I am copying the string, however I don&#39;t quite understand why this would mean the Future can all of a sudden &#39;own&#39; the data.  Is it because address is used once in resolve_address(), and therefore that future now &#39;owns&#39; it, and then using it again in the chain is throwing it off?"}, {"owner": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "edited": false, "score": 1, "creation_date": 1564442809, "post_id": 57234148, "comment_id": 101024071, "body": "I&#39;m not totally clear what the type of the local variable <code>address</code> is, but assuming it&#39;s a reference, calling <code>to_owned</code> on it will give you an owned version of the same data, usually by copying/cloning it. When you use <code>address</code> inside a closure annotated with <code>move</code>, the value gets moved from the containing scope to the closure itself. However, if <code>address</code> is itself a reference, then the closure contains borrowed data, which the borrow checker can&#39;t deal with in stable Rust as of today."}, {"owner": {"reputation": 31241, "user_id": 242493, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8893e2e206c0377ff776d2535887d23f?s=128&d=identicon&r=PG", "display_name": "Jimmy Cuadra", "link": "https://stackoverflow.com/users/242493/jimmy-cuadra"}, "edited": false, "score": 1, "creation_date": 1564442948, "post_id": 57234148, "comment_id": 101024114, "body": "It may also help to understand that closures are &quot;desugared&quot; by the compiler into a struct that contains all the values that it captures from its environment. So in this case, you had something like <code>struct Closure123&lt;&#39;a&gt; { address: &amp;&#39;a Thing, ... }</code> which is what the borrow checker has trouble with in async code. By converting <code>address</code> to an owned value, the closure instead desugars to <code>struct Closure123 { address: Thing, ... }</code> which the borrow checker has no problem with."}], "tags": [], "owner": {"reputation": 113, "user_id": 9333242, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PfgJG.gif?s=128&g=1", "display_name": "Jonathon Orsi", "link": "https://stackoverflow.com/users/9333242/jonathon-orsi"}, "is_accepted": true, "score": 0, "last_activity_date": 1564245803, "creation_date": 1564245803, "answer_id": 57234148, "question_id": 57233754, "link": "https://stackoverflow.com/questions/57233754/how-to-give-ownership-inside-rust-future/57234148#57234148", "title": "How to give ownership inside Rust future", "body": "<p>I seem to have gotten it to work by basically cloning the <code>address</code> variable with <code>address.to_owned()</code> like so:</p>\n\n<pre><code>let address = inner.address().unwrap();\nlet domain = address.to_owned();\n\nstate.check_net(&amp;address)?;\n\nlet op = resolve_addr(&amp;address)\n    .and_then(move |socket_address| {\n      TcpStream::connect(&amp;socket_address)\n        .map_err(ErrBox::from)\n    })\n    .and_then(move |socket| {\n      let mut config = ClientConfig::new();\n      config\n        .root_store\n        .add_server_trust_anchors(&amp;webpki_roots::TLS_SERVER_ROOTS);\n      let config = TlsConnector::from(Arc::new(config));\n      let domain = DNSNameRef::try_from_ascii_str(&amp;domain).unwrap();\n      config.connect(domain, socket)\n        .map_err(ErrBox::from)\n    })\n    .and_then(move |tls_stream| new_tls_conn(cmd_id, tls_stream));\nif base.sync() {\n    let buf = op.wait()?;\n    Ok(Op::Sync(buf))\n} else {\n    Ok(Op::Async(Box::new(op)))\n}\n</code></pre>\n\n<p>I'm not too sure why this works though. If anyone could explain that would be greatly appreciated!</p>\n"}], "owner": {"reputation": 113, "user_id": 9333242, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PfgJG.gif?s=128&g=1", "display_name": "Jonathon Orsi", "link": "https://stackoverflow.com/users/9333242/jonathon-orsi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 320, "favorite_count": 0, "accepted_answer_id": 57234148, "answer_count": 1, "score": 0, "last_activity_date": 1564245803, "creation_date": 1564242914, "question_id": 57233754, "link": "https://stackoverflow.com/questions/57233754/how-to-give-ownership-inside-rust-future", "title": "How to give ownership inside Rust future", "body": "<p>I have a chain of Rust futures which needs to take ownership of a variable outside of the future, however, I don't understand how I can pass the ownership of the variable into one of the chains.</p>\n\n<p>The issue seems to be on the 'address' variable being used by 'let domain = DNSNameRef::try_from_ascii_str(&amp;address).unwrap()', as replacing &amp;address with a string will make it work.</p>\n\n<p>I have looked up putting the variable into a Arc/Mutex and Rc/RefCell, but they don't seem to help (maybe I'm just doing it wrong). I feel like I understand that I need to basically give ownership of all the variable to future closures, since they are going to outlive the current function, but I don't have a clue how to do that...</p>\n\n<pre><code>let address = inner.address().unwrap();\n\nstate.check_net(&amp;address)?;\n\nlet op = resolve_addr(&amp;address)\n    .and_then(move |socket_address| {\n      TcpStream::connect(&amp;socket_address)\n        .map_err(ErrBox::from)\n    })\n    .and_then(move |socket| {\n      let mut config = ClientConfig::new();\n      config\n        .root_store\n        .add_server_trust_anchors(&amp;webpki_roots::TLS_SERVER_ROOTS);\n      let config = TlsConnector::from(Arc::new(config));\n      let domain = DNSNameRef::try_from_ascii_str(&amp;address).unwrap();\n      config.connect(domain, socket)\n        .map_err(ErrBox::from)\n    })\n    .and_then(move |tls_stream| new_tls_conn(cmd_id, tls_stream));\n  if base.sync() {\n    let buf = op.wait()?;\n    Ok(Op::Sync(buf))\n  } else {\n    Ok(Op::Async(Box::new(op)))\n  }\n</code></pre>\n\n<p>And the error I get:</p>\n\n<pre><code>error[E0621]: explicit lifetime required in the type of `base`\n    --&gt; ../../cli/ops.rs:1748:18\n     |\n1716 |   base: &amp;msg::Base&lt;'_&gt;,\n     |         -------------- help: add explicit lifetime `'static` to the type of `base`: `&amp;msg::Base&lt;'static&gt;`\n...\n1748 |     Ok(Op::Async(Box::new(op)))\n     |                  ^^^^^^^^^^^^ lifetime `'static` required\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1564252207, "post_id": 57232745, "comment_id": 100972317, "body": "Very nice explanation! It is worth noting that when writing a generic function that takes a <code>Read</code> or <code>Write</code> you should always take it by value, not by reference, just like <code>serde</code> does."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1564252431, "post_id": 57232745, "comment_id": 100972370, "body": "Yep - the <a href=\"https://stackoverflow.com/questions/51809603/why-does-serde-jsonfrom-reader-take-ownership-of-the-reader\">original question</a> that the asker linked has that as an answer as well :)"}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 7, "last_activity_date": 1564235445, "creation_date": 1564235445, "answer_id": 57232745, "question_id": 57232515, "link": "https://stackoverflow.com/questions/57232515/why-does-serde-jsonto-writer-not-require-its-argument-to-be-mut/57232745#57232745", "title": "Why does serde_json::to_writer not require its argument to be `mut`?", "body": "<p><code>serde_json::to_writer</code>'s first parameter accepts any type that implements <code>Write</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#impl-Write-10\" rel=\"noreferrer\">One such value is <code>&amp;File</code></a>.</p>\n\n<p>This may be surprising, but the docs for <code>File</code> explicitly state that the mutability of the <em>reference</em> to a file has no bearing on whether the file will change or not:</p>\n\n<blockquote>\n  <p>Note that, although read and write methods require a <code>&amp;mut File</code>, because of the interfaces for <code>Read</code> and <code>Write</code>, the holder of a <code>&amp;File</code> can still modify the file, either through methods that take <code>&amp;File</code> or by retrieving the underlying OS object and modifying the file that way. Additionally, many operating systems allow concurrent modification of files by different processes. Avoid assuming that holding a <code>&amp;File</code> means that the file will not change.</p>\n</blockquote>\n\n<p>This might have you asking - wait, I thought the methods on <code>Write</code> took <code>&amp;mut self</code>? And they do! But in this case, <code>Write</code> is implemented for <code>&amp;File</code>, so the type passed to <code>Write</code> is, somewhat confusingly, <code>&amp;mut &amp;File</code> (a mutable reference to an immutable reference).</p>\n\n<p>This explains why your second example doesn't compile - you need to be able to take a mutable reference to <code>&amp;file</code>, and you can't do that without the binding being mutable. This is an important thing to realize - the mutablilty of a binding and the mutability of the bound value are not necessarily the same.</p>\n\n<p>This is hinted at in the error message when you run your code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0596]: cannot borrow `file_ref` as mutable, as it is not declared as mutable\n  --&gt; src/lib.rs:11:5\n   |\n10 |     let file_ref = &amp;file;\n   |         -------- help: consider changing this to be mutable: `mut file_ref`\n11 |     file_ref.write(&amp;[1,2,3])?;\n   |     ^^^^^^^^ cannot borrow as mutable\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>If you change <code>let file_ref = &amp;file;</code> to <code>let mut file_ref = &amp;file;</code>, your code compiles.</p>\n"}], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 745, "favorite_count": 0, "accepted_answer_id": 57232745, "answer_count": 1, "score": 1, "last_activity_date": 1564235445, "creation_date": 1564233472, "question_id": 57232515, "link": "https://stackoverflow.com/questions/57232515/why-does-serde-jsonto-writer-not-require-its-argument-to-be-mut", "title": "Why does serde_json::to_writer not require its argument to be `mut`?", "body": "<p>So I've seen <a href=\"https://stackoverflow.com/questions/51809603/why-does-serde-jsonfrom-reader-take-ownership-of-the-reader\">this</a> question which explains how <code>serde_json</code> can both take Readers/Writers by reference or alternatively take ownership of them. Fair enough.</p>\n\n<p>But I don't get how this works for <code>Write</code> - all of <code>Write</code> methods require a <code>&amp;mut self</code>, so I'd think that if I pass a method that only knows its argument is a reference to something that is <code>Write</code> it can't do anything with it. But this example compiles and works just fine, even though I'm passing a non-mut ref to a method that, one way or another, ends up writing to the referenced file:</p>\n\n<pre><code>extern crate serde_json;\n\nuse std::fs::OpenOptions;\nuse std::error::Error;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let file = OpenOptions::new()\n        .create(true)\n        .write(true)\n        .truncate(true)\n        .open(\"/tmp/serde.json\")?;\n    // why does this work?\n    serde_json::to_writer(&amp;file, &amp;10)?;\n    Ok(())\n}\n</code></pre>\n\n<p>I'm passing a <code>&amp;File</code> - as expected, if I were to directly call any of <code>Write</code>'s methods on a <code>File</code> it doesn't work:</p>\n\n<pre><code>use std::io::{self, Write};\nuse std::fs::OpenOptions;\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let file = OpenOptions::new()\n        .create(true)\n        .write(true)\n        .truncate(true)\n        .open(\"/tmp/wtf\")?;\n    let file_ref = &amp;file;\n    // this complains about not having a mutable ref as expected\n    file_ref.write(&amp;[1,2,3])?;\n    Ok(())\n}\n</code></pre>\n\n<pre><code>error[E0596]: cannot borrow `file_ref` as mutable, as it is not declared as mutable\n  --&gt; test.rs:12:5\n   |\n10 |     let file_ref = &amp;file;\n   |         -------- help: consider changing this to be mutable: `mut file_ref`\n11 |     // this complains about not having a mutable ref as expected\n12 |     file_ref.write(&amp;[1,2,3])?;\n   |     ^^^^^^^^ cannot borrow as mutable\n</code></pre>\n\n<p>So what gives? Is <code>serde_json</code> breaking the type system somehow, or is this an intentional feature of the type system? If it's the latter, how does it work and why does it work like that?</p>\n"}, {"tags": ["rust", "embedded", "stm32"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564311096, "post_id": 57232061, "comment_id": 100981619, "body": "The <a href=\"https://docs.rs/stm32f1xx-hal/0.3.0/stm32f1xx_hal/rcc/trait.RccExt.html#tymethod.constrain\" rel=\"nofollow noreferrer\">constrain method</a> consumes <code>self</code>. <code>dp</code> is no longer usable because part of its value has been moved into the <code>rcc</code> variable."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564311159, "post_id": 57232061, "comment_id": 100981633, "body": "I&#39;m not at all familiar with this crate, so I can&#39;t offer a solution. But can&#39;t you just create a new copy of <code>dp</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 51, "user_id": 8369834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f68a737eeec0ede6f6fdb2c02b9a3d18?s=128&d=identicon&r=PG&f=1", "display_name": "Hanno Braun", "link": "https://stackoverflow.com/users/8369834/hanno-braun"}, "is_accepted": true, "score": 1, "last_activity_date": 1564380543, "creation_date": 1564380543, "answer_id": 57248008, "question_id": 57232061, "link": "https://stackoverflow.com/questions/57232061/borrow-of-moved-value-error-when-using-the-stm32f1xx-hal-crate/57248008#57248008", "title": "Borrow of moved value error when using the STM32f1xx_hal crate", "body": "<p>The problem here is that <code>dp.RCC</code> refers to the RCC API from the peripheral access crate (PAC), basically the raw register interface. By calling <code>dp.RCC.constrain()</code>, you take that raw API and transform it into a hardware abstraction layer (HAL) API, which is supposed to provide a safer, more convenient API layer on top of the raw register interface.</p>\n\n<p>Doing this <em>moves</em> the PAC-level API, thereby making it unusable. This is intentional, as the HAL API could not uphold its correctness guarantee, if the user were allowed to just modify bits as they please.</p>\n\n<p>As far as I can see, you have three options of solving this problem:</p>\n\n<ol>\n<li>Never call <code>dp.RCC.constrain()</code>.</li>\n<li>Use the HAL API for DMA.</li>\n<li>Get the PAC-level RCC API back after calling <code>dp.RCC.constrain()</code>.</li>\n</ol>\n\n<p>If you choose option 1, you need to do the clock setup that the HAL API does for you manually. Maybe that's what you want, but it's certainly more work, and depending on the complexity of the microcontroller, might be error prone. I'd go for another option.</p>\n\n<p>Option 2, using the HAL API for DMA: Whether this is an option depends on whether the HAL you're using supports that capability. You seem to be using <a href=\"https://crates.io/crates/stm32f1xx-hal\" rel=\"nofollow noreferrer\"><code>stm32f1xx-hal</code></a>, which does have a <a href=\"https://docs.rs/stm32f1xx-hal/0.3.0/stm32f1xx_hal/dma/index.html\" rel=\"nofollow noreferrer\">DMA API</a>. There are various <a href=\"https://github.com/stm32-rs/stm32f1xx-hal/tree/master/examples\" rel=\"nofollow noreferrer\">examples that use it</a> in the project's repository.</p>\n\n<p>As for option 3, many HAL APIs provide means to get back the PAC-level API (destroying the HAL API in the process). So you could use the HAL API for initialization, then get back the PAC API for lower-level access. <code>stm32f1xx-hal</code> doesn't seem to support that, unfortunately. If you know what you're doing, you could use unsafe means, like <a href=\"https://doc.rust-lang.org/core/mem/fn.transmute.html\" rel=\"nofollow noreferrer\"><code>transmute</code></a> to get back that PAC API, but it's probably better to just send a pull request to the HAL, adding a method that gives you back the PAC API.</p>\n"}], "owner": {"reputation": 1711, "user_id": 2852788, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/8f5053520d3df4a36f27b21ffc816fb8?s=128&d=identicon&r=PG&f=1", "display_name": "Justace Clutter", "link": "https://stackoverflow.com/users/2852788/justace-clutter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 267, "favorite_count": 0, "accepted_answer_id": 57248008, "answer_count": 1, "score": 0, "last_activity_date": 1564380543, "creation_date": 1564229766, "last_edit_date": 1564310409, "question_id": 57232061, "link": "https://stackoverflow.com/questions/57232061/borrow-of-moved-value-error-when-using-the-stm32f1xx-hal-crate", "title": "Borrow of moved value error when using the STM32f1xx_hal crate", "body": "<p>I am trying to enable the DMA peripheral on my STM32 bluepill and am getting the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: borrow of moved value: `dp.RCC`\n  --&gt; src/main.rs:74:5\n   |\n36 |     let mut rcc = dp.RCC.constrain();   // RCC = Reset and Clock Control\n   |                   ------ value moved here\n...\n74 |     dp.RCC.ahbenr.modify(|_, w| w.dma2en().set_bit());\n   |     ^^^^^^ value borrowed here after move\n   |\n   = note: move occurs because `dp.RCC` has type `stm32f1::stm32f103::RCC`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I know this is a common issue when beginning to learn Rust.  I have read into the docs on this and am still a bit confused as to what I need to do here to make this work.</p>\n\n<p>Here is the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![no_std]\n#![no_main]\n\nextern crate panic_halt; // you can put a breakpoint on `rust_begin_unwind` to catch panics\n\nuse cortex_m::asm;\nuse cortex_m_rt::entry;\nuse cortex_m_semihosting::hprintln;\nuse embedded_hal::spi::{Mode, Phase, Polarity};\nuse stm32f1xx_hal::{\n    prelude::*,\n    pac,\n    spi::Spi,\n    dma,\n    stm32\n};\n\n\n#[entry]\nfn main() -&gt; ! {\n    let dp = pac::Peripherals::take().unwrap();\n    let mut rcc = dp.RCC.constrain();   // RCC = Reset and Clock Control\n    dp.RCC.ahbenr.modify(|_, w| w.dma2en().set_bit());\n}\n</code></pre>\n\n<p>I also attempted to use <code>rcc.ahbenr.modify....</code> but that fails as the return from the <code>RCC.constrain</code> method is not the full <code>AHBENR</code> struct.  Again, I know that this is something simple that I am just misunderstanding.  Can anybody give me a point in the right direction for this?  Thanks.</p>\n"}, {"tags": ["rust", "embedded", "stm32"], "answers": [{"tags": [], "owner": {"reputation": 51, "user_id": 8369834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f68a737eeec0ede6f6fdb2c02b9a3d18?s=128&d=identicon&r=PG&f=1", "display_name": "Hanno Braun", "link": "https://stackoverflow.com/users/8369834/hanno-braun"}, "is_accepted": false, "score": 0, "last_activity_date": 1564382054, "creation_date": 1564382054, "answer_id": 57248303, "question_id": 57231946, "link": "https://stackoverflow.com/questions/57231946/how-to-reference-the-spi1-data-register-in-plain-english-for-dma-setup-in-rust/57248303#57248303", "title": "How to reference the SPI1 Data Register in plain english for DMA setup in Rust", "body": "<p>First, you're using the PAC (peripheral access crate) API here, which is powerful, but low-level and error-prone. <a href=\"https://crates.io/crates/stm32f1xx-hal\" rel=\"nofollow noreferrer\"><code>stm32f1xx-hal</code></a> has a <a href=\"https://docs.rs/stm32f1xx-hal/0.3.0/stm32f1xx_hal/dma/index.html\" rel=\"nofollow noreferrer\">DMA API</a>. The repository has a number of <a href=\"https://github.com/stm32-rs/stm32f1xx-hal/tree/master/examples\" rel=\"nofollow noreferrer\">examples that use it</a>.</p>\n\n<p>If that HAL API suits your needs, then I'd just use that instead.</p>\n\n<p>As for your actual question, you're on the right track, but not quite there.</p>\n\n<p>First, the approach that you're using to write to the register is wrong:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>dp.DMA1.ch3.par.write(|w| &amp;dp.SPI1.dr as *const _);\n</code></pre>\n\n<p>The <code>write</code> method takes a closure, which gives you the <code>w</code> argument and expects you to return the same <code>w</code>. The <code>w</code> argument is of type <a href=\"https://docs.rs/stm32f1/0.7.1/stm32f1/stm32f103/dma1/ch/par/struct.W.html\" rel=\"nofollow noreferrer\"><code>&amp;mut dma1::ch::par::W</code></a>, and the closure expects you to return the same thing. What you've written returns your <code>const</code> pointer instead, which is what the error message complains about.</p>\n\n<p>What you need to do is to use the API provided by the <a href=\"https://docs.rs/stm32f1/0.7.1/stm32f1/stm32f103/dma1/ch/par/struct.W.html\" rel=\"nofollow noreferrer\"><code>W</code></a> type to write to the register. I haven't tested the following, but based on the documentation, it (or something close to it) should work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>dp.DMA1.ch3.par.write(|w| w.pa().bits(&amp;dp.SPI1.dr as *const _ as u32));\n</code></pre>\n\n<blockquote>\n  <p>I also totally realize that this may be the incorrect forum. If so, let me know and I will shift my question over there.</p>\n</blockquote>\n\n<p>I don't think this is the <em>incorrect</em> forum, but there might be a few better ones. A lot of people hang out on the <code>rust-embedded</code> channel on Matrix. Off the top of my head, I don't know of a good link to point beginners to, but here's <a href=\"https://riot.im/app/#/room/#rust-embedded:matrix.org\" rel=\"nofollow noreferrer\">a direct link to the channel</a>. You can probably figure it out :-)</p>\n\n<p>Another good possibility is the <a href=\"https://users.rust-lang.org/c/embedded\" rel=\"nofollow noreferrer\">embedded category on the Rust Users forum</a>.</p>\n"}], "owner": {"reputation": 1711, "user_id": 2852788, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/8f5053520d3df4a36f27b21ffc816fb8?s=128&d=identicon&r=PG&f=1", "display_name": "Justace Clutter", "link": "https://stackoverflow.com/users/2852788/justace-clutter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 112, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1564382054, "creation_date": 1564228878, "question_id": 57231946, "link": "https://stackoverflow.com/questions/57231946/how-to-reference-the-spi1-data-register-in-plain-english-for-dma-setup-in-rust", "title": "How to reference the SPI1 Data Register in plain english for DMA setup in Rust", "body": "<p>I am trying to use the Rust language to code for an STM32 bluepill.  I am using the <code>STM32f1xx_hal</code> crate which subsequently calls the <code>STM32f1</code> crate for the peripherals. What I would like to do is use more natural language to specify the peripheral address for the DMA target memory location vice hardcode the address.</p>\n\n<p>This is what is looks like to hard code the address:</p>\n\n<p><code>dp.DMA1.ch3.par.write(|w| unsafe { w.bits(0x4001_3000 + 0x0c) } );</code></p>\n\n<p>This is what I wanted to do:</p>\n\n<p><code>dp.DMA1.ch3.par.write(|w| &amp;dp.SPI1.dr as *const _);</code></p>\n\n<p>I of course get errors for this.</p>\n\n<p><code>expected mutable reference, found *-ptr</code></p>\n\n<p>I am very new to this (both embedded programming and using Rust) and am most likely getting something totally wrong.  Is there somebody here who can point me in the right direction.  Thanks in advance.  I also totally realize that this may be the incorrect forum.  If so, let me know and I will shift my question over there.</p>\n"}, {"tags": ["rust", "generic-programming"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564192528, "post_id": 57228420, "comment_id": 100961177, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ecb2e679afd00a00bdba3a840d14e32b\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>, but I don&#39;t think you can make this compile your code don&#39;t make much sense specially <code>X</code> does not appear in <code>Apply</code> I&#39;m surprise this trait definition compile. You are trying something very advanced."}, {"owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564193190, "post_id": 57228420, "comment_id": 100961241, "body": "Yeah, the X requirement in the trait is just a hint that the implementation of the function might use some X::functions .  Actually I managed to make it compile by adding a X parameter to apply, as type can be then infered, but I dislike this solution as the X parameter is not truly needed. I want a solution without other parameters than T data"}, {"owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564193437, "post_id": 57228420, "comment_id": 100961273, "body": "My philosophy here is to try to write generic contract based code, on functions that manipulate objects. where functions and objects live independently from each other."}], "answers": [{"comments": [{"owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "edited": false, "score": 0, "creation_date": 1564248623, "post_id": 57232207, "comment_id": 100971427, "body": "This works. You can also just write <code>&lt;Namespace as Apply&lt;_, Namespace&gt;&gt;::</code> This way you have Obj1 in one place only."}], "tags": [], "owner": {"reputation": 2920, "user_id": 210304, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/3c70d1833ed67198b6e364834b13c770?s=128&d=identicon&r=PG", "display_name": "Caio", "link": "https://stackoverflow.com/users/210304/caio"}, "is_accepted": true, "score": 0, "last_activity_date": 1564231869, "last_edit_date": 1564231869, "creation_date": 1564230967, "answer_id": 57232207, "question_id": 57228420, "link": "https://stackoverflow.com/questions/57228420/rust-how-to-resolve-type-annotations-in-a-static-function-call-of-some-struct/57232207#57232207", "title": "Rust how to resolve type annotations in a static function call of some struct", "body": "<p>The <code>X</code> type isn't declared in a function signature or struct parameter, therefore, the compiler is unable to infer the appropriated type.</p>\n\n<p>To circumvent this problem, you need to explicit tell the desired <code>X</code> and since the trait function has no receiver (<code>self</code>, <code>&amp;self</code>, <code>&amp;mut self</code>, <code>self: Pin&lt;Self&gt;</code>), it is possible to \"cast\" the concrete type.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>&lt;Namespace as Apply&lt;Obj1, Namespace&gt;&gt;::apply(&amp;mut Obj1 { v: vec![1, 2, 3] });\n</code></pre>\n"}], "owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 683, "favorite_count": 0, "accepted_answer_id": 57232207, "answer_count": 1, "score": 1, "last_activity_date": 1564231869, "creation_date": 1564189672, "question_id": 57228420, "link": "https://stackoverflow.com/questions/57228420/rust-how-to-resolve-type-annotations-in-a-static-function-call-of-some-struct", "title": "Rust how to resolve type annotations in a static function call of some struct", "body": "<p>In general I know how to resolve types by using <code>::&lt;T&gt;</code> syntax or <code>&lt;T as X&gt;::</code> syntax. But not in this particular example.\nHow can I get the following code to compile? </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    Namespace::apply(&amp;mut Obj1 { v: vec![1, 2, 3] });\n}\n\npub trait Func&lt;T&gt; {\n    fn func(data: &amp;mut T);\n}\n\npub trait Apply&lt;T, X: Func&lt;T&gt;&gt; {\n    fn apply(data: &amp;mut T);\n}\n\npub struct Namespace {}\n\npub struct Obj1 {\n    v: Vec&lt;i32&gt;,\n}\npub struct Obj2 {\n    v: Vec&lt;i32&gt;,\n}\n\nimpl Func&lt;Obj1&gt; for Namespace {\n    fn func(data: &amp;mut Obj1) {\n        println!(\"FuncA()\");\n        data.v.clear(); // do stuff with data\n        println!(\"{:?}\", data.v);\n    }\n}\nimpl Func&lt;Obj2&gt; for Namespace {\n    fn func(data: &amp;mut Obj2) {\n        println!(\"FuncB()\");\n        data.v.push(4); // do stuff with data\n        println!(\"{:?}\", data.v);\n    }\n}\nimpl&lt;T, X: Func&lt;T&gt;&gt; Apply&lt;T, X&gt; for Namespace {\n    fn apply(data: &amp;mut T) {\n        println!(\"apply()\");\n        X::func(data);\n    }\n}\n\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre><code>error[E0282]: type annotations needed\n  --&gt; src\\lib.rs:18:9\n   |\n18 |         Namespace::apply(&amp;mut Obj1 { v: vec![1, 2, 3] });\n   |         ^^^^^^^^^^^^^^^^ cannot infer type for `X`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0282`.\n</code></pre>\n\n<p>I tried the <code>::&lt;Obj1, Func&lt;Obj1&gt;&gt;::</code> syntax in various places around <code>apply</code> but keep getting errors.</p>\n\n<p>Context:\nThis is mostly an abstract question, I'm not trying to achieve anything concrete behind the scenes. In answering, please assume that I am just a weird person who thinks OOP is evil and does not want to use self/&amp;self in the trait. My idea was first to define some method as a function <code>func</code> in some placeholder <code>Namespace</code> structure, implement it for different objects, then I wanted to define an <code>apply</code> function that uses the <code>func</code> method in an abstract generic way. If you have better suggestions on how to achieve this goal, I'm happy to hear them.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1564166722, "creation_date": 1564166722, "answer_id": 57225541, "question_id": 57225401, "link": "https://stackoverflow.com/questions/57225401/why-do-dbg-and-println-show-different-outputs/57225541#57225541", "title": "Why do dbg! and println!(&quot;{:?}&quot;) show different outputs?", "body": "<p><a href=\"https://github.com/rust-lang/rust/blob/1a563362865e6051d4c350544131228e8eff5138/src/libstd/macros.rs#L347\" rel=\"noreferrer\"><code>dbg!</code> does not use <code>{:?}</code> but <code>{:#?}</code></a>.</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/fmt/index.html#sign0\" rel=\"noreferrer\">extra <code>#</code></a> means that <code>dbg!</code> will use the alternate formatting, which uses more spaces and newlines, while the regular formatting is more dense.</p>\n"}], "owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 57225541, "answer_count": 1, "score": 2, "last_activity_date": 1564177428, "creation_date": 1564165945, "last_edit_date": 1564177428, "question_id": 57225401, "link": "https://stackoverflow.com/questions/57225401/why-do-dbg-and-println-show-different-outputs", "title": "Why do dbg! and println!(&quot;{:?}&quot;) show different outputs?", "body": "<p>I had thought that <code>dbg!(x)</code> and <code>println!(\"{:?}\", x)</code> would both print the same string, since <code>{:?}</code> is used for debug output, right?</p>\n\n<p>If I'm not mistaken, why do we see this result, with one showing the list on a single line, and one showing the list on multiple lines?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let x: Vec&lt;u32&gt; = (0..10).collect();\n    println!(\"{:?}\", x[0..1].to_vec());\n    dbg!(x[0..1].to_vec());\n}\n</code></pre>\n\n<pre><code>[src/main.rs:4] x[0..1].to_vec() = [\n    0,\n]\n[0]\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e52aa2408885d5fc9ea970c4a145962a\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}, {"tags": ["c", "rust", "ffi", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 3, "last_activity_date": 1564189093, "last_edit_date": 1564189093, "creation_date": 1564184057, "answer_id": 57227992, "question_id": 57225328, "link": "https://stackoverflow.com/questions/57225328/how-to-take-ownership-of-a-c-pointer-in-rust-and-drop-it-appropriately/57227992#57227992", "title": "How to take ownership of a C pointer in Rust and drop it appropriately?", "body": "<blockquote>\n  <p>Is it appropriate to use Box::from_raw to wrap the pointer and take ownership of it?</p>\n</blockquote>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.from_raw\" rel=\"nofollow noreferrer\">documentation for <code>from_raw</code></a> answers this for you:</p>\n\n<blockquote>\n  <p>Since the way Box allocates and releases memory is unspecified, the only valid pointer to pass to this function is the one taken from another Box via the <code>Box::into_raw</code> function.</p>\n</blockquote>\n\n<p>which means that your current usage is unspecified.</p>\n\n<blockquote>\n  <p>I also want to implement the Drop Trait on the Key, such that the destructor function keyDel is automatically called</p>\n</blockquote>\n\n<p>You should not implement <code>Drop</code> for <code>Key</code> because <code>Key</code> is not allocated by Rust. You would ideally make your own wrapper type that uses its <em>own</em> drop to call <code>keyDel</code> with the pointer. For instance:</p>\n\n<pre><code>struct KeyWrapper {\n  ptr: NonNull&lt;Key&gt;\n}\nimpl Drop for KeyWrapper {\n  fn drop(&amp;mut self) {\n    keyDel(self.ptr.as_ptr())\n  }\n}\nimpl KeyWrapper {\n  fn new() {\n    KeyWrapper {\n      ptr: NonNull::new(keyNew(0 as *const i8))\n    }\n  }\n\n  fn someUtil(&amp;self) {\n    // As an example, you could call through to some C function.\n    keySomeUtil(self.ptr.as_ptr())\n  }\n}\n</code></pre>\n\n<p>This way on the Rust side you are only interacting with the type that wraps the pointer, and it will call <code>keyDel</code> when it is dropped. It is your job to make sure this wrapper type only performs safe operations via the C API so as not to invalidate Rust's safety guarantees.</p>\n\n<p>Related:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/54849928/how-can-one-force-rust-to-take-ownership-of-memory-allocated-other-than-by-its-s/54858033#54858033\">How can one force Rust to take ownership of memory allocated other than by its safe methods?</a></li>\n</ul>\n"}], "owner": {"reputation": 33, "user_id": 11842862, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e0abf16a5f8f7c04d83d46245951283?s=128&d=identicon&r=PG&f=1", "display_name": "pgackst", "link": "https://stackoverflow.com/users/11842862/pgackst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1092, "favorite_count": 1, "accepted_answer_id": 57227992, "answer_count": 1, "score": 3, "last_activity_date": 1564189093, "creation_date": 1564165604, "question_id": 57225328, "link": "https://stackoverflow.com/questions/57225328/how-to-take-ownership-of-a-c-pointer-in-rust-and-drop-it-appropriately", "title": "How to take ownership of a C pointer in Rust and drop it appropriately?", "body": "<p>I'm calling a C constructor function <code>keyNew</code> that allocates memory for a <code>Key</code> struct and returns a <code>*mut Key</code> to the Rust side. Is it appropriate to use <code>Box::from_raw</code> to wrap the pointer and take ownership of it?</p>\n\n<p>I could also return the raw pointer directly, but this makes for a very ugly API and is not idiomatic to Rust.</p>\n\n<p>I also want to implement the Drop Trait on the Key, such that the destructor function <code>keyDel</code> is automatically called, which would be an improvement over the manual calls in C. This is a much nicer API in my opinion. However implementing the Drop Trait requires that the Copy Trait is not implemented, so dereferencing the raw pointer is no longer possible due to \"move out of dereferenced content\".</p>\n\n<p>They Key was generated by rust-bindgen</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C)]\n#[derive(Debug, Clone)]\npub struct Key {\n    _unused: [u8; 0],\n}\n</code></pre>\n\n<p>The constructor for <code>Key</code> is implemented like this</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn new() -&gt; Box&lt;Key&gt; {\n    unsafe { Box::from_raw(keyNew(0 as *const i8)) }\n}\n</code></pre>\n\n<p>And the destructor</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Drop for Key {\n    fn drop(&amp;mut self) {\n        unsafe { keyDel(self) };\n    }\n}\n</code></pre>\n\n<p>It all works wonderfully, I can use a <code>Box&lt;Key</code> like a <code>Key</code> due to Deref and <code>keyDel</code> is automatically called when the <code>Box&lt;Key</code> goes out of scpe. However I am not sure if it's appropriate, since the Rust documentation has this to say about <code>Box::from_raw</code></p>\n\n<blockquote>\n  <p>After calling this function, the raw pointer is owned by the resulting Box. Specifically, the Box destructor will call the destructor of T and free the allocated memory. Since the way Box allocates and releases memory is unspecified, the only valid pointer to pass to this function is the one taken from another Box via the Box::into_raw function.</p>\n</blockquote>\n\n<p>I am not calling <code>Box::into_raw</code> later, so is this all still valid memory-wise? And if not, what is an alternative way to take ownership of the returned <code>*mut Key</code>?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1564311857, "post_id": 57225155, "comment_id": 100981797, "body": "Please consider adding a link to more complete code, or creating a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. There are too many unknown types etc in this code snippet."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1564311958, "post_id": 57225155, "comment_id": 100981824, "body": "I expect that you can use <code>_</code> to elide <i>parts</i> of this type, even if you can&#39;t elide all of it. You may also find that you don&#39;t need to specify all of the associated types - OR you can specify the implementation of the trait instead of writing the trait and all of the constraints on its associated types - those would be fixed if you just gave a concrete type instead."}], "owner": {"reputation": 803, "user_id": 767440, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/d845c11a24e2e78133885a0927affc6b?s=128&d=identicon&r=PG", "display_name": "carlos.baez", "link": "https://stackoverflow.com/users/767440/carlos-baez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 197, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1564593710, "creation_date": 1564164719, "last_edit_date": 1564593710, "question_id": 57225155, "link": "https://stackoverflow.com/questions/57225155/type-deduction-in-rust-how-to-do-it-brief", "title": "Type deduction in Rust, how to do it brief", "body": "<p>I am developing with rust-libp2p and I want to reuse a variable. for this reason, I am testing something like this:</p>\n\n<pre><code>let mut swarm =  {\n    let mut behaviour = MyBehaviour {\n        floodsub: libp2p::floodsub::Floodsub::new(self.local_peer_id.clone()),\n        mdns: libp2p::mdns::Mdns::new().expect(\"Failed to create mDNS service\"),\n        node_manager: self.rc_node.clone(),\n    };\n\n    let floodsub_topic = libp2p::floodsub::TopicBuilder::new(\"chat\").build();\n    behaviour.floodsub.subscribe(floodsub_topic.clone());\n\n    let transport = libp2p::build_development_transport(self.local_key.clone());\n    libp2p::Swarm::new(transport, behaviour,self.local_peer_id.clone())\n};\nself.my_swarm: Swarm&lt;_ , _&gt; = swarm;\n</code></pre>\n\n<p>The problem of this is how to fill the <code>_</code> with the type classes definition... It seems simple, but these types has a large hierarchy to do this and the result is too complex:</p>\n\n<pre><code>self.my_swarm = Swarm&lt;Transport&lt;Output = (PeerId, impl core::muxing::StreamMuxer&lt;OutboundSubstream = impl Send, Substream = impl Send, Error = impl Into&lt;io::Error&gt;&gt; + Send + Sync), Error = impl error::Error + Send, Listener = impl Send, Dial = impl Send, ListenerUpgrade = impl Send&gt; + Clone, NetworkBehaviour&gt; = swarm;\n</code></pre>\n\n<p>It is not scalable and practical, does it exist some method to do it brief or to apply dynamic typing....??</p>\n\n<p><strong>UPDATED</strong></p>\n\n<p>My minimum example could be something like this:</p>\n\n<pre><code>struct InfoValue&lt;V&gt; {\n    value: V,\n    info: &amp;'static str,\n}\n\npub trait Info {\n    fn get_info(&amp;self) -&gt; &amp;'static str;\n}\n\nimpl Info for InfoValue&lt;u32&gt;  {\n    fn get_info(&amp;self) -&gt; &amp;'static str {\n        self.info\n    }\n}\n\nstruct ImprovedPoint&lt;T: Info&gt; {\n    x: T,\n    y: T,\n}\n\nstruct ContainerEx {\n    improved_integer: ImprovedPoint&lt;InfoValue&lt;u32&gt;&gt;\n}\n\n\nfn main() {\n    let impr_x = InfoValue{value: 5, info: \"is a 5\"};\n    let impr_y = InfoValue{value: 10, info: \"is a 10\"};\n    let improved_integer = ImprovedPoint{x: impr_x, y: impr_y};\n    let container = ContainerEx{improved_integer: improved_integer};\n\n}\n</code></pre>\n\n<p>The problem is here:    </p>\n\n<pre><code>improved_integer: ImprovedPoint&lt;InfoValue&lt;u32&gt;&gt; \n</code></pre>\n\n<p>As far as I know, we must specify all the types. In this case, it is simple, two levels <em>InfoValue -> u32</em> but in real use cases, where we work with complex hierarchies, I would be great some dynamic type deduction.</p>\n"}, {"tags": ["string", "reference", "rust", "string-literals", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1564177979, "post_id": 57225381, "comment_id": 100958947, "body": "One could add: <code>&amp;str</code> is a type in itself. This type implement <code>Copy</code> which means that it does not follow move semantics, but copy semantics (@mellow-yellow you will read about that trait in the book as well). And you can also say that <code>y</code> is indeed the owner, but not of the actual string (as this is in the <code>.rodata</code> section), but of the reference to it. <code>y</code> is the owner of the reference (pointer) of type <code>&amp;str</code>. I hope these additions make some sense."}], "tags": [], "owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "is_accepted": true, "score": 5, "last_activity_date": 1565098636, "last_edit_date": 1565098636, "creation_date": 1564165812, "answer_id": 57225381, "question_id": 57225055, "link": "https://stackoverflow.com/questions/57225055/in-rust-can-you-own-a-string-literal/57225381#57225381", "title": "In Rust, can you own a string literal?", "body": "<p>A string slice reference (<code>&amp;str</code>) does not own the string slice that it points to, it borrows it. You can have several immutable references to an object, that's why your second code sample is correct and the borrow checker is happy to accept it.</p>\n\n<p>I think you can say that types with the <code>'static</code> lifetime have no owner, or that something outside of the <code>main</code> function owns it. The owner only matters when the lifetime of the owning object ends (if you own it, you need to free resources). For references only lifetimes matter.</p>\n"}], "owner": {"reputation": 1251, "user_id": 1231693, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/35c6f42e8ab6e0e8b8f5c673696c36a0?s=128&d=identicon&r=PG", "display_name": "mellow-yellow", "link": "https://stackoverflow.com/users/1231693/mellow-yellow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1364, "favorite_count": 2, "accepted_answer_id": 57225381, "answer_count": 1, "score": 8, "last_activity_date": 1565098636, "creation_date": 1564164205, "last_edit_date": 1565098154, "question_id": 57225055, "link": "https://stackoverflow.com/questions/57225055/in-rust-can-you-own-a-string-literal", "title": "In Rust, can you own a string literal?", "body": "<p>According to <a href=\"https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html\" rel=\"noreferrer\">The Rust book</a>:</p>\n\n<blockquote>\n  <p>Each value in Rust has a variable that\u2019s called its owner. There can be only one owner at a time. When the owner goes out of scope, the value will be dropped.</p>\n</blockquote>\n\n<p>According to <a href=\"https://doc.rust-lang.org/reference/items/static-items.html\" rel=\"noreferrer\">rust-lang.org</a>:</p>\n\n<blockquote>\n  <p>Static items do not call drop at the end of the program.</p>\n</blockquote>\n\n<p>After reading <a href=\"https://stackoverflow.com/a/24159933/1231693\">this SO post</a>, and given the code below, I understand that <code>foo</code> is a value whose variable <code>y</code>, equivalent to <code>&amp;y</code> since <a href=\"https://doc.rust-lang.org/std/primitive.str.html\" rel=\"noreferrer\">\"string literals are string slices\"</a>, is called its <code>owner</code>. Is that correct? Or do static items have no owner?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x = String::from(\"foo\");  // heap allocated, mutable, owned\nlet y = \"foo\" // statically allocated to rust executable, immutable\n</code></pre>\n\n<p>I'm wondering because unlike an owned <code>String</code>, string literals are not moved, presumably because they're <a href=\"https://en.wikipedia.org/wiki/Data_segment\" rel=\"noreferrer\">stored in <code>.rodata</code> in the executable</a>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n  let s1 = \"foo\"; // as opposed to String::from(\"foo\")\n  let s2 = s1; // not moved\n  let s3 = s2; // no error, unlike String::from(\"foo\")\n}\n</code></pre>\n\n<p>UPDATE: According to <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\" rel=\"noreferrer\">The Rust book</a>:</p>\n\n<blockquote>\n  <p>These ampersands are references, and they allow you to refer to some value without taking ownership of it...Another data type that does not have ownership is the slice.</p>\n</blockquote>\n\n<p>Since string literals are string slices (<code>&amp;str</code>) (see citation above), they, logically, do not have ownership. The rationale seems to be that the compiler requires a data structure with a known size: a reference:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let s1: str = \"foo\"; // [rustc E0277] the size for values of type `str` cannot be known at compilation time [E]\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3467, "user_id": 3393308, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a3f30f7c191e8d556c70c951fe3d9af?s=128&d=identicon&r=PG", "display_name": "yorodm", "link": "https://stackoverflow.com/users/3393308/yorodm"}, "edited": false, "score": 2, "creation_date": 1564160740, "post_id": 57224310, "comment_id": 100953109, "body": "I think windows console has poor support for ANSI codes, cargo must be doing some kind of emulation tho"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1564171257, "post_id": 57224310, "comment_id": 100956919, "body": "Don&#39;t hardcode terminal control sequences. They don&#39;t always work, as you have just discovered."}, {"owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1564186393, "post_id": 57224310, "comment_id": 100960595, "body": "@n.m. well what do I do then?"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1564204682, "post_id": 57224310, "comment_id": 100962466, "body": "There are libraries. <a href=\"https://users.rust-lang.org/t/colored-terminal-output/24604/3\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/colored-terminal-output/24604/3</a>"}], "answers": [{"tags": [], "owner": {"reputation": 422, "user_id": 1075818, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/41d073d49af5afc12fe3b5ff6a1bd515?s=128&d=identicon&r=PG", "display_name": "athre0z", "link": "https://stackoverflow.com/users/1075818/athre0z"}, "is_accepted": false, "score": 3, "last_activity_date": 1564201920, "creation_date": 1564201920, "answer_id": 57229143, "question_id": 57224310, "link": "https://stackoverflow.com/questions/57224310/when-i-run-my-rust-application-on-windows-the-coloring-works-with-cargo-run-but/57229143#57229143", "title": "When I run my rust application on windows the coloring works with cargo run but it compeltely breaks when directly using the binary. Why?", "body": "<p>Windows support for VT100 escape sequences (your color codes) was only added with some rather recent update of Windows 10 and must be enabled explicitly for each app, via native API. This is done via the <a href=\"https://docs.microsoft.com/en-us/windows/console/setconsolemode\" rel=\"nofollow noreferrer\"><code>SetConsoleMode</code></a> function with the <code>ENABLE_VIRTUAL_TERMINAL_INPUT</code> argument. An alternative way is using the <a href=\"https://docs.microsoft.com/en-us/windows/console/setconsoletextattribute\" rel=\"nofollow noreferrer\"><code>SetConsoleTextAttribute</code></a> function to set the terminal color directly -- this variant also works on older Windows versions. Obviously, both of these require unsafe code.</p>\n\n<p>Generally speaking, I wouldn't recommend rejecting libraries simply based on the fact that they contain unsafe code. As demonstrated with this very example, some things simply can't be achieved without it. Also, the Rust standard library makes heavy use of <code>unsafe</code> as well.</p>\n"}], "owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 602, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1564201920, "creation_date": 1564160386, "last_edit_date": 1564161308, "question_id": 57224310, "link": "https://stackoverflow.com/questions/57224310/when-i-run-my-rust-application-on-windows-the-coloring-works-with-cargo-run-but", "title": "When I run my rust application on windows the coloring works with cargo run but it compeltely breaks when directly using the binary. Why?", "body": "<p>On mac the coloring is perfect regardless it only breaks on windows and in a very very weird way. When running the application with cargo run or cargo run --release the coloring is perfect (As seen in picture)</p>\n\n<p><a href=\"https://i.stack.imgur.com/WRJ1z.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/WRJ1z.png\" alt=\"Terminal text with working colors\"></a></p>\n\n<p>but when just running the binary directly on windows coloring completely breaks (As seen in picture)!</p>\n\n<p><a href=\"https://i.stack.imgur.com/VNIwA.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/VNIwA.png\" alt=\"Terminal text with broken colors\"></a></p>\n\n<p>The code for the help menu is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>        //NovusCLI Help\n        println!(\"\\n[1mNovusCLI Help[0m\\n\");\n        //nvs search &lt;query&gt;\n        println!(\"[1;35mnvs [0m[1;33msearch &lt;query&gt;[0m\\t\\t\\tSearches for specified query\");\n        //nvs list [--flag(s)] &lt;package(s)&gt;\n        println!(\"[1;35mnvs [0m[1;33mlist [--flag(s)] &lt;package(s)&gt;[0m\\tLists specified packages\");\n        //nvs info &lt;package(s)&gt;\n        println!(\"[1;35mnvs [0m[1;33minfo &lt;package(s)&gt;[0m\\t\\t\\tDisplay info on specified package(s)\");\n        //nvs install &lt;package(s)&gt;\n        println!(\"[1;35mnvs [0m[1;33minstall &lt;package(s)&gt;[0m\\t\\tInstalls specified package(s)\");\n        //nvs reinstall &lt;package(s)&gt;\n        println!(\"[1;35mnvs [0m[1;33mreinstall &lt;package(s)&gt;[0m\\t\\tReinstalls specified package(s)\");\n        //nvs remove &lt;package(s)&gt;\n        println!(\"[1;35mnvs [0m[1;33mremove &lt;package(s)&gt;[0m\\t\\t\\tRemoves specified package(s)\");\n        //nvs add-key &lt;filepath&gt;\n        println!(\"[1;35mnvs [0m[1;33madd-key &lt;filepath&gt;[0m\\t\\t\\tAdds a key to the list of trusted keys\");\n        //nvs edit-sources\n        println!(\"[1;35mnvs [0m[1;33medit-sources[0m\\t\\t\\tOpens the APT repo editor\");\n        //nvs autoremove\n        println!(\"[1;35mnvs [0m[1;33mautoremove[0m\\t\\t\\t\\tRemoves unneeded packages (orphans)\");\n        //nvs update\n        println!(\"[1;35mnvs [0m[1;33mupdate[0m\\t\\t\\t\\tUpdates the repository lists\");\n        //nvs upgrade &lt;package(s)&gt;\n        println!(\"[1;35mnvs [0m[1;33mupgrade &lt;package(s)&gt;[0m\\t\\tUpgrades specified packages\");\n        //nvs full-upgrade &lt;package(s)&gt;\n        println!(\"[1;35mnvs [0m[1;33mfull-upgrade &lt;package(s)&gt;[0m\\t\\tUpgrades the system (or package(s))\");\n        //nvs version\n        println!(\"[1;35mnvs [0m[1;33mversion[0m\\t\\t\\t\\tDisplay APT, DPKG, and NovusCLI versions\");\n        //nvs clean\n        println!(\"[1;35mnvs [0m[1;33mclean[0m\\t\\t\\t\\tClears the download cache\");\n        //nvs help &lt;command&gt;\n        println!(\"[1;35mnvs [0m[1;33mhelp &lt;command&gt;[0m\\t\\t\\tOpens help menu for specified commands\");\n        //nvs about\n        println!(\"[1;35mnvs [0m[1;33mabout[0m\\t\\t\\t\\tView legal information and credits\\n\");\n</code></pre>\n\n<p>I know I could just use a rust crate to handle the coloring for me but all coloring crates that support windows that I could find either use libc or winapi which are both unsafe which is why I refuse to use any of these crates for coloring. Does anybody know why using the bin directly on windows breaks all coloring? I tried on both Command Prompt and Windows PowerShell and both have the exact same problem.</p>\n\n<p>I entered all the code for the help menu but stackoverflow seems to be hiding the special characters so here's a pastebin link to the code:</p>\n\n<p><a href=\"https://pastebin.com/Gz2GwunR\" rel=\"nofollow noreferrer\">https://pastebin.com/Gz2GwunR</a></p>\n\n<p>and here's a picture of the code:</p>\n\n<p><a href=\"https://i.stack.imgur.com/qT2n2.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/qT2n2.png\" alt=\"Picture of help menu code with special characters\"></a></p>\n"}, {"tags": ["string", "generics", "vector", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564157436, "post_id": 57223508, "comment_id": 100951717, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/54225766/how-to-write-a-trait-method-taking-an-iterator-of-strings-avoiding-monomorphiza\">How to write a trait method taking an iterator of strings, avoiding monomorphization (static dispatch)?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1564158341, "post_id": 57223508, "comment_id": 100952098, "body": "I have retract my vote, the other question is probably too confusing for newbie, sorry for that."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1564209020, "post_id": 57223508, "comment_id": 100963066, "body": "Using <code>AsRef&lt;str&gt;</code> might be more useful than <code>Into&lt;String&gt;</code>. Also note that by converting into String, you&#39;re probably unnecessarily allocating strings into the heap."}], "answers": [{"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 127, "user_id": 1575782, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d9c8f6d84fce740063ac17baea379415?s=128&d=identicon&r=PG", "display_name": "Martin Sotirov", "link": "https://stackoverflow.com/users/1575782/martin-sotirov"}, "edited": false, "score": 0, "creation_date": 1564158037, "post_id": 57223705, "comment_id": 100951981, "body": "@MartinSotirov I added a link to the playground. Did I miss something ?"}, {"owner": {"reputation": 127, "user_id": 1575782, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d9c8f6d84fce740063ac17baea379415?s=128&d=identicon&r=PG", "display_name": "Martin Sotirov", "link": "https://stackoverflow.com/users/1575782/martin-sotirov"}, "edited": false, "score": 0, "creation_date": 1564158393, "post_id": 57223705, "comment_id": 100952133, "body": "Sorry, I missed the link. That&#39;s exactly what I need. Thanks."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 5, "last_activity_date": 1564158020, "last_edit_date": 1564158020, "creation_date": 1564157653, "answer_id": 57223705, "question_id": 57223508, "link": "https://stackoverflow.com/questions/57223508/how-to-accept-both-vecstring-and-vecstr-as-function-arg-in-rust/57223705#57223705", "title": "How to accept both Vec&lt;String&gt; and Vec&lt;str&gt; as function arg in Rust", "body": "<p>This doesn't work because your iteration doesn't give you <code>S</code> but <code>&amp;S</code>.</p>\n\n<p>If you want to <em>move</em> the strings out of the vector, you must make it mutable and drain it:</p>\n\n<pre><code>fn foo_many&lt;S: Into&lt;String&gt;&gt;(mut strings: Vec&lt;S&gt;) -&gt; Vec&lt;String&gt; {\n    strings.drain(..).map(|s| s.into()).collect()\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1dbec3e0047be6fb3785547721af60f1\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 127, "user_id": 1575782, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d9c8f6d84fce740063ac17baea379415?s=128&d=identicon&r=PG", "display_name": "Martin Sotirov", "link": "https://stackoverflow.com/users/1575782/martin-sotirov"}, "edited": false, "score": 0, "creation_date": 1564159183, "post_id": 57223845, "comment_id": 100952454, "body": "I haven&#39;t even thought about allowing other iterable structures but that&#39;s definitely an even more flexible solution! Thanks."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 6, "last_activity_date": 1564158258, "creation_date": 1564158258, "answer_id": 57223845, "question_id": 57223508, "link": "https://stackoverflow.com/questions/57223508/how-to-accept-both-vecstring-and-vecstr-as-function-arg-in-rust/57223845#57223845", "title": "How to accept both Vec&lt;String&gt; and Vec&lt;str&gt; as function arg in Rust", "body": "<p>You can go for full generic, you don't need to force user to use a <code>Vec</code>, better you can take a generic type that implement <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"noreferrer\"><code>IntoIterator</code></a> that you just have to write that <code>Item</code> implement <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"noreferrer\"><code>Into&lt;String&gt;</code></a>, the syntax is somehow strange and logic. You need a second generic type to do it. I call <code>I</code> the type that will be the iterator and T the Item type.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo&lt;S: Into&lt;String&gt;&gt;(string: S) -&gt; String {\n    string.into()\n}\n\nfn foo_many&lt;I, T&gt;(iter: I) -&gt; Vec&lt;String&gt;\nwhere\n    I: IntoIterator&lt;Item = T&gt;,\n    T: Into&lt;String&gt;,\n{\n    iter.into_iter().map(Into::into).collect()\n}\n\nfn main() {\n    println!(\"{}\", foo(String::from(\"bar\")));\n    println!(\"{}\", foo(\"baz\"));\n\n    for string in foo_many(vec![\"foo\", \"bar\"]) {\n        println!(\"{}\", string);\n    }\n\n    for string in foo_many(vec![foo(\"foo\"), foo(\"baz\")]) {\n        println!(\"{}\", string);\n    }\n}\n</code></pre>\n\n<p>This solve your problem and make your function even more generic.</p>\n"}], "owner": {"reputation": 127, "user_id": 1575782, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d9c8f6d84fce740063ac17baea379415?s=128&d=identicon&r=PG", "display_name": "Martin Sotirov", "link": "https://stackoverflow.com/users/1575782/martin-sotirov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1211, "favorite_count": 1, "accepted_answer_id": 57223845, "answer_count": 2, "score": 7, "last_activity_date": 1564158258, "creation_date": 1564156863, "last_edit_date": 1564157782, "question_id": 57223508, "link": "https://stackoverflow.com/questions/57223508/how-to-accept-both-vecstring-and-vecstr-as-function-arg-in-rust", "title": "How to accept both Vec&lt;String&gt; and Vec&lt;str&gt; as function arg in Rust", "body": "<p>I'm working on my first Rust crate and I wanted to make my API a bit more user friendly by allowing both <code>foo(vec![\"bar\", \"baz\"])</code> and <code>foo(vec![String::from(\"foo\"), String::from(\"baz\")])</code>.</p>\n\n<p>So far I've managed to accept both <code>String</code> and <code>&amp;str</code> but I'm struggling to do the same for <code>Vec&lt;T&gt;</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo&lt;S: Into&lt;String&gt;&gt;(string: S) -&gt; String {\n    string.into()\n}\n\nfn foo_many&lt;S: Into&lt;String&gt;&gt;(strings: Vec&lt;S&gt;) -&gt; Vec&lt;String&gt; {\n    strings.iter().map(|s| s.into()).collect()\n}\n\nfn main() {\n    println!(\"{}\", foo(String::from(\"bar\")));\n    println!(\"{}\", foo(\"baz\"));\n\n    for string in foo_many(vec![\"foo\", \"bar\"]) {\n        println!(\"{}\", string);\n    }\n}\n</code></pre>\n\n<p>The compiler error I get is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::string::String: std::convert::From&lt;&amp;S&gt;` is not satisfied\n --&gt; src/main.rs:6:30\n  |\n6 |     strings.iter().map(|s| s.into()).collect()\n  |                              ^^^^ the trait `std::convert::From&lt;&amp;S&gt;` is not implemented for `std::string::String`\n  |\n  = help: consider adding a `where std::string::String: std::convert::From&lt;&amp;S&gt;` bound\n  = note: required because of the requirements on the impl of `std::convert::Into&lt;std::string::String&gt;` for `&amp;S`\n</code></pre>\n"}, {"tags": ["lua", "rust"], "comments": [{"owner": {"reputation": 1170, "user_id": 5682416, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/eca9557bc24253c2921579ad1644f234?s=128&d=identicon&r=PG&f=1", "display_name": "Hugal31", "link": "https://stackoverflow.com/users/5682416/hugal31"}, "edited": false, "score": 0, "creation_date": 1564154571, "post_id": 57222523, "comment_id": 100950353, "body": "You cannot store <code>Table</code> in an external HashMap, because the table is bound to the lua context (The real type is <code>Table&lt;&#39;lua&gt;</code>). I advise you tu use <code>Context::create_registry_value</code> to store the table, so <code>Entities</code> becomes <code>HashMap&lt;String, RegistryKey&gt;</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564154839, "post_id": 57222523, "comment_id": 100950510, "body": "Your question is about compile error please do a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1170, "user_id": 5682416, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/eca9557bc24253c2921579ad1644f234?s=128&d=identicon&r=PG&f=1", "display_name": "Hugal31", "link": "https://stackoverflow.com/users/5682416/hugal31"}, "is_accepted": true, "score": 1, "last_activity_date": 1564166733, "creation_date": 1564166733, "answer_id": 57225544, "question_id": 57222523, "link": "https://stackoverflow.com/questions/57222523/how-to-retrieve-lua-table-from-context-in-rust/57225544#57225544", "title": "How to retrieve lua table from context in Rust?", "body": "<p>You cannot store reference to <code>lua_ctx</code> outside the call to <code>Lua::context</code>. The <code>rlua::Table</code> you store in entities is bound to the lifetime of <code>lua_ctx</code>.</p>\n\n<p>rlua provides a way to store reference to Lua objects outside of context calls, with <code>Context::create_registry_value</code>. It returns a <code>Regsitry</code> key that you can safely store in your HashMap, and use it afterwards in another call to <code>Lua::context</code>. Check the following code for an example :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\nuse std::sync::{Arc, Mutex};\n\nuse rlua::{Lua, RegistryKey, Table};\n\nconst LUA_SOURCE: &amp;str = r#\"\nGoblin = {\n  glyph = \"2\"\n}\n\nregister_entity(\"Goblin\", Goblin)\n\"#;\n\nfn setup_register_entity(lua: &amp;Lua) -&gt; Arc&lt;Mutex&lt;HashMap&lt;String, RegistryKey&gt;&gt;&gt; {\n    let entities = Arc::new(Mutex::new(HashMap::new()));\n\n    lua.context(|lua_ctx| {\n        let entities = entities.clone();\n\n        let register_entity = lua_ctx.create_function(\n            move |ctx, (name, table): (String, Table)| {\n                // Store a refenrence to the object as a RegistryKey\n                let key = ctx.create_registry_value(table)\n                    .expect(\"should have inserted in registry\");\n                entities.lock().unwrap().insert(name, key);\n\n                Ok(())\n            })\n            .unwrap();\n\n        lua_ctx.globals().set(\"register_entity\", register_entity).unwrap();\n    });\n\n    entities\n}\n\nfn main() {\n    let lua = Lua::new();\n\n    let entities = setup_register_entity(&amp;lua);\n\n    lua.context(|lua_ctx| {\n        // Load lua code\n        lua_ctx.load(LUA_SOURCE)\n            .exec()\n            .expect(\"should load\");\n\n        for (name, key) in entities.lock().unwrap().iter() {\n            // Retreive table\n            let table: Table = lua_ctx.registry_value(key).unwrap();\n\n            // Use it\n            let glyph: String = table.get(\"glyph\").unwrap();\n            println!(\"{}.glyph = {}\", name, glyph);\n        }\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 74, "user_id": 8425705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56fd9a57bc850ef8418002af11ca0c26?s=128&d=identicon&r=PG&f=1", "display_name": "Dowon Cha", "link": "https://stackoverflow.com/users/8425705/dowon-cha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "accepted_answer_id": 57225544, "answer_count": 1, "score": 0, "last_activity_date": 1564166733, "creation_date": 1564152792, "last_edit_date": 1564154736, "question_id": 57222523, "link": "https://stackoverflow.com/questions/57222523/how-to-retrieve-lua-table-from-context-in-rust", "title": "How to retrieve lua table from context in Rust?", "body": "<p>I'm trying to retrieve tables from lua files in Rust. I'm registering a <code>register_entity</code> function in the lua global context for data files to register their tables. When the lua file is executed and it calls the <code>register_entity</code> function, the registered callback is called in Rust. The callback should add the passed table into a <code>HashMap</code> to maintain a collection of all entities.</p>\n\n<p>Here's an example lua file that is being read.</p>\n\n<pre class=\"lang-lua prettyprint-override\"><code>Goblin = {\n  glyph: \"2\"\n}\n\nregister_entity(\"Goblin\", Goblin)\n</code></pre>\n\n<p>Rust Code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn load_lua_globals(&amp;self) {\n    let entities = Arc::new(Mutex::new(HashMap::new()));\n\n        self.lua.context(|lua_ctx| {\n            let register_entity = {\n                let entities = Arc::clone(&amp;entities);\n\n                let register_entity = lua_ctx.create_function(\n                    move |_, (name, table): (String, Table)| {\n                        entities.lock().unwrap().insert(name, table);\n\n                    Ok(())\n                }).unwrap();\n            };\n\n            lua_ctx.globals().set(\"register_entity\", register_entity).unwrap();\n        });\n    }\n}\n</code></pre>\n\n<p>This is the error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `*mut rlua::ffi::lua_State` cannot be sent between threads safely\n   --&gt; src/bin/main.rs:106:47\n    |\n106 |                 let register_entity = lua_ctx.create_function(\n    |                                               ^^^^^^^^^^^^^^^ `*mut rlua::ffi::lua_State` cannot be sent between threads safely\n    |\n    = help: within `(std::string::String, rlua::Table&lt;'_&gt;)`, the trait `std::marker::Send` is not implemented for `*mut rlua::ffi::lua_State`\n    = note: required because it appears within the type `rlua::Context&lt;'_&gt;`\n    = note: required because it appears within the type `rlua::types::LuaRef&lt;'_&gt;`\n    = note: required because it appears within the type `rlua::Table&lt;'_&gt;`\n    = note: required because it appears within the type `(std::string::String, rlua::Table&lt;'_&gt;)`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `hashbrown::raw::RawTable&lt;(std::string::String, rlua::Table&lt;'_&gt;)&gt;`\n    = note: required because it appears within the type `hashbrown::map::HashMap&lt;std::string::String, rlua::Table&lt;'_&gt;, std::collections::hash_map::RandomState&gt;`\n    = note: required because it appears within the type `std::collections::HashMap&lt;std::string::String, rlua::Table&lt;'_&gt;&gt;`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Mutex&lt;std::collections::HashMap&lt;std::string::String, rlua::Table&lt;'_&gt;&gt;&gt;`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;std::sync::Mutex&lt;std::collections::HashMap&lt;std::string::String, rlua::Table&lt;'_&gt;&gt;&gt;&gt;`\n    = note: required because it appears within the type `[closure@src/bin/main.rs:107:21: 112:18 entities:std::sync::Arc&lt;std::sync::Mutex&lt;std::collections::HashMap&lt;std::string::String, rlua::Table&lt;'_&gt;&gt;&gt;&gt;]\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564153215, "post_id": 57222130, "comment_id": 100949640, "body": "<a href=\"https://www.youtube.com/watch?v=yNY6ZstdUdY\" rel=\"nofollow noreferrer\">Are you sure?</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1564154798, "post_id": 57222130, "comment_id": 100950485, "body": "Your code looks fine and such a bug in std.net would be strange. Browsers, though, have a limited number of network threads. Are you sure the limit you observed wasn&#39;t the browser&#39;s one ? A browser doesn&#39;t seem to be the best solution to benchmark server parallelism."}, {"owner": {"reputation": 31, "user_id": 3830169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8caa3815ee88814f75089fb14cb9ea4e?s=128&d=identicon&r=PG&f=1", "display_name": "user3830169", "link": "https://stackoverflow.com/users/3830169/user3830169"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1564165307, "post_id": 57222130, "comment_id": 100954900, "body": "Thank you @DenysS&#233;guret As you suggest making the requests via curl in the terminal they do seem to run in parallel. I did not know this about browsers!"}, {"owner": {"reputation": 31, "user_id": 3830169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8caa3815ee88814f75089fb14cb9ea4e?s=128&d=identicon&r=PG&f=1", "display_name": "user3830169", "link": "https://stackoverflow.com/users/3830169/user3830169"}, "edited": false, "score": 0, "creation_date": 1564217151, "post_id": 57222130, "comment_id": 100964437, "body": "The documentation does actually mention this at the bottom of <a href=\"https://doc.rust-lang.org/book/ch20-02-multithreaded.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch20-02-multithreaded.html</a> in the blue box!"}], "owner": {"reputation": 31, "user_id": 3830169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8caa3815ee88814f75089fb14cb9ea4e?s=128&d=identicon&r=PG&f=1", "display_name": "user3830169", "link": "https://stackoverflow.com/users/3830169/user3830169"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 73, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1564151371, "creation_date": 1564151371, "question_id": 57222130, "link": "https://stackoverflow.com/questions/57222130/why-does-function-block-even-though-it-is-moved-into-new-thread", "title": "Why does function block even though it is moved into new thread", "body": "<p>I have been following the guide <a href=\"https://doc.rust-lang.org/book/ch20-02-multithreaded.html#simulating-a-slow-request-in-the-current-server-implementation\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch20-02-multithreaded.html#simulating-a-slow-request-in-the-current-server-implementation</a></p>\n\n<p>The guide states that a call to '/sleep' will block and calls to '/' will not block. However I don't understand why additional calls made to '/sleep' are also blocked? Surely as each connection is moved into a new thread with thread::spawn there is no reason for 2 separate  calls to '/sleep' to block each other? How does the thread even know which endpoint is being called?</p>\n\n<p>I have stripped down the code from the tutorial and I found that if you move the thread::sleep line above stream.read() it will not block. If that line is after stream.read() then each connection seems to be on the same thread and is blocked despite being in a new thread created with thread::spawn().</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::net::TcpStream;\nuse std::net::TcpListener;\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let listener = TcpListener::bind(\"127.0.0.1:7878\").unwrap();\n\n    for stream in listener.incoming() {\n        let stream = stream.unwrap();\n\n        thread::spawn(move || {\n          handle_connection(stream);\n        });\n    }\n}\n\nfn handle_connection(mut stream: TcpStream) {\n    let mut buffer = [0; 512];\n\n    // thread::sleep(Duration::from_secs(5)); // Doesn't block here (before steam.read())\n\n    stream.read(&amp;mut buffer).unwrap();\n\n    thread::sleep(Duration::from_secs(5)); // Blocks here (after steam.read())\n\n    let response = \"HTTP/1.1 200 OK\\r\\n\\r\\n\";\n\n    stream.write(response.as_bytes()).unwrap();\n    stream.flush().unwrap();\n}\n</code></pre>\n\n<p>If you run the above code and open up a few browser tabs to localhost:7878 each connection is blocked and has to wait for the earlier one to resolve.</p>\n\n<p>If you move the thread::sleep() line to be above stream.read() it will no longer block. So it seems to be something with the stream.read line but I cannot understand why. Can anyone help me to understand please?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1564150718, "post_id": 57221727, "comment_id": 100948074, "body": "The closest language to C++ is C++ itself. If you want to keep all your idioms, just keep using C++."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1564151180, "post_id": 57221727, "comment_id": 100948379, "body": "Not related, but I&#39;d prefer that style that better expresses the intent: <code>a.into_iter().zip(b).map(|p| p.0 * p.1).sum()</code>"}, {"owner": {"reputation": 1029, "user_id": 7878485, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/15dabd902549f21699b86daa04ecaeed?s=128&d=identicon&r=PG&f=1", "display_name": "nitronoid", "link": "https://stackoverflow.com/users/7878485/nitronoid"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1564151312, "post_id": 57221727, "comment_id": 100948462, "body": "@FrenchBoiethios I wouldn&#39;t call it much of an idiom... and certainly not a C++ specific one. Infact I find it highly abnormal to use something like <code>number.log()</code> instead of <code>log(number)</code>. Thank you for your snippet, that does look better to me, I have largely based my code on what I find in the book."}, {"owner": {"reputation": 1029, "user_id": 7878485, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/15dabd902549f21699b86daa04ecaeed?s=128&d=identicon&r=PG&f=1", "display_name": "nitronoid", "link": "https://stackoverflow.com/users/7878485/nitronoid"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1564151496, "post_id": 57221727, "comment_id": 100948598, "body": "@FrenchBoiethios Was superfluous info, I removed it."}, {"owner": {"reputation": 1029, "user_id": 7878485, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/15dabd902549f21699b86daa04ecaeed?s=128&d=identicon&r=PG&f=1", "display_name": "nitronoid", "link": "https://stackoverflow.com/users/7878485/nitronoid"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1564151636, "post_id": 57221727, "comment_id": 100948696, "body": "Also your example would look much nicer to me as: <code>sum(map(zip(into_iter(a), into_iter(b)), |(x, y)| x * y))</code>. I find it much easier to read this, hence my question."}], "answers": [{"comments": [{"owner": {"reputation": 1029, "user_id": 7878485, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/15dabd902549f21699b86daa04ecaeed?s=128&d=identicon&r=PG&f=1", "display_name": "nitronoid", "link": "https://stackoverflow.com/users/7878485/nitronoid"}, "edited": false, "score": 0, "creation_date": 1564155309, "post_id": 57222589, "comment_id": 100950736, "body": "Thanks for your answer! I did play with this and it does seem like my best option right now. I would still prefer to omit the qualifier entirely if possible though."}, {"owner": {"reputation": 2923, "user_id": 783912, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/98e9b626cf9e9e74ae50c190da325a5e?s=128&d=identicon&r=PG&f=1", "display_name": "FlyingFoX", "link": "https://stackoverflow.com/users/783912/flyingfox"}, "reply_to_user": {"reputation": 1029, "user_id": 7878485, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/15dabd902549f21699b86daa04ecaeed?s=128&d=identicon&r=PG&f=1", "display_name": "nitronoid", "link": "https://stackoverflow.com/users/7878485/nitronoid"}, "edited": false, "score": 0, "creation_date": 1564156818, "post_id": 57222589, "comment_id": 100951438, "body": "You are right. I agree that it still looks clunky in this style with the qualifiers.   Maybe have a second look at the method chaining syntax and let <code>rustfmt</code> format it for you. It usually produces nicely readable code."}], "tags": [], "owner": {"reputation": 2923, "user_id": 783912, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/98e9b626cf9e9e74ae50c190da325a5e?s=128&d=identicon&r=PG&f=1", "display_name": "FlyingFoX", "link": "https://stackoverflow.com/users/783912/flyingfox"}, "is_accepted": false, "score": 2, "last_activity_date": 1564153051, "creation_date": 1564153051, "answer_id": 57222589, "question_id": 57221727, "link": "https://stackoverflow.com/questions/57221727/rust-import-trait-for-unqualified-usage/57222589#57222589", "title": "Rust import trait for unqualified usage", "body": "<p>You can get closer to what you want with <a href=\"https://doc.rust-lang.org/reference/items/use-declarations.html\" rel=\"nofollow noreferrer\">use declarations</a></p>\n\n<pre><code>use std::iter::IntoIterator as ito;\nuse std::iter::Iterator as it;\n\nfn main() {\n    let a = vec![2.3, 4.0];\n    let b = vec![5.6, 7.0];\n    //let result = a\n    //    .into_iter()\n    //    .zip(b.into_iter())\n    //    .fold(0.0, |sum, (x, y)| sum + x * y);\n    let result = it::fold(\n        it::zip(ito::into_iter(a), ito::into_iter(b)),\n        0.0,\n        |sum, (x, y)| sum + x * y,\n    );\n    println!(\"result {}\", result);!\");\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 3, "last_activity_date": 1564158494, "creation_date": 1564158494, "answer_id": 57223902, "question_id": 57221727, "link": "https://stackoverflow.com/questions/57221727/rust-import-trait-for-unqualified-usage/57223902#57223902", "title": "Rust import trait for unqualified usage", "body": "<p>You can't.</p>\n\n<p>As the compiler very explicitly tells you, methods cannot be imported directly:</p>\n\n<pre><code>error[E0253]: `fold` is not directly importable\n --&gt; src/lib.rs:1:5\n1 | use std::iter::Iterator::fold;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot be imported directly\n</code></pre>\n\n<p>or</p>\n\n<pre><code>error: items in traits are not importable.\n --&gt; src/lib.rs:1:5\n  |\n1 | use std::iter::Iterator::*;\n  |     ^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bcf5cbe068afb3b0473408f5529591a9\" rel=\"nofollow noreferrer\">(Permalink to the playground)</a></p>\n\n<p>Note that your comparison with <code>using namespace</code> is not correct. <code>Iterator</code> is a trait, not a module (Rust's equivalent of namespaces). In C++, you wouldn't try to import <code>std::string::size</code> and then use <code>size(my_string)</code>.</p>\n\n<hr>\n\n<p>As for why you can't:</p>\n\n<p>Your way requires a lot of nesting (which most will argue <em>reduces</em> readability), prevents autocompletion and is not idiomatic in Rust. Method syntax is <em>the</em> way to go in Rust. Do not fight idioms of one language because they are different from idioms of languages you are more familiar with.</p>\n\n<p>Method syntax does have advantages.</p>\n\n<p>It is true that in C++, free functions are usually preferred over methods, but this is mostly because method are necessarily tied to the implementation of a \nclass. They must be declared within the class declaration, which provides tight coupling. Rust does not have this issue, as methods can belong to traits, and anyone can add methods to any type (including built-in types, which C++ cannot do at all).</p>\n\n<p>Finally, note that even C++ has had proposal to have method syntax everywhere (see <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4174.pdf\" rel=\"nofollow noreferrer\">N4174</a> by Bjarne Stroustrup and <a href=\"https://isocpp.org/files/papers/N4165.pdf\" rel=\"nofollow noreferrer\">N4165</a> by Herb Sutter). This shows that this syntax has advantages.</p>\n"}], "owner": {"reputation": 1029, "user_id": 7878485, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/15dabd902549f21699b86daa04ecaeed?s=128&d=identicon&r=PG&f=1", "display_name": "nitronoid", "link": "https://stackoverflow.com/users/7878485/nitronoid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1564158494, "creation_date": 1564149937, "last_edit_date": 1564151468, "question_id": 57221727, "link": "https://stackoverflow.com/questions/57221727/rust-import-trait-for-unqualified-usage", "title": "Rust import trait for unqualified usage", "body": "<p>I've been learning Rust recently and I prefer the syntax of calling functions rather than methods. I just discovered the Universal function call syntax, and it offers what I was looking for.</p>\n\n<p>I can turn this chain:</p>\n\n<pre><code>a.into_iter().zip(b.into_iter()).fold(0.0, |sum, (x, y)| sum + x * y)\n</code></pre>\n\n<p>Into:</p>\n\n<pre><code>Iterator::fold(\n    Iterator::zip(IntoIterator::into_iter(a), IntoIterator::into_iter(b)), \n    0.0, |sum, (x, y)| sum + x * y)\n</code></pre>\n\n<p>However I would really like to get rid of the verbosity of this statement, what I want to write is:</p>\n\n<pre><code>fold(zip(into_iter(a), into_iter(b)), 0.0, |sum, (x, y)| sum + x * y)\n</code></pre>\n\n<p>I can't seem to find a way to do this, in C++ I would have <code>using namespace ...</code> to get rid of these qualified calls, but I can't find a rust equivalent (if there is one).</p>\n\n<p><em>Minimal Example</em></p>\n\n<pre><code>fn main() {\n    let a = vec![1.0, 2.0, 3.0];\n    let b = vec![4.0, 5.0, 6.0];\n\n    // I want to change this line\n    let result = a.into_iter().zip(b).fold(0, |sum, (x, y)| sum + x * y);\n\n    println!(\"{}\", result);\n }\n</code></pre>\n"}, {"tags": ["rust", "storage", "substrate", "merkle-tree"], "comments": [{"owner": {"reputation": 8871, "user_id": 1260906, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/aPM5A.png?s=128&g=1", "display_name": "Afr", "link": "https://stackoverflow.com/users/1260906/afr"}, "edited": false, "score": 0, "creation_date": 1564311453, "post_id": 57219226, "comment_id": 100981703, "body": "You tagged your question with <code>substrate</code>, would you be interested in a dedicated Stack Exchange Q&amp;A site for Substrate, Polkadot, et al. -- check out the <a href=\"https://area51.stackexchange.com/proposals/122626/substrate?referrer=NTUwMTkxYjJjOTJiNjE0YzMxYjgwMGNkZmFlYzdhZTczYjk1ZWY3ZGI4NzJmODUwN2RlYTQ2MTNjZTdkOTZhMAzuL-zybtPN9CHzwE-WUdvBC8WxvPG46b4ayadke6kG0\">Area51 Substrate Proposal</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1009, "user_id": 540128, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/62054833895a3df695f9854d8dee6a9f?s=128&d=identicon&r=PG", "display_name": "vim", "link": "https://stackoverflow.com/users/540128/vim"}, "edited": false, "score": 0, "creation_date": 1564143847, "post_id": 57219571, "comment_id": 100944179, "body": "how do I obtain a proof for a leaf of a child trie? I see the above API do not have such a function."}], "tags": [], "owner": {"reputation": 176, "user_id": 8058332, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e4be7b7419bbe35d91dd57972cde6e28?s=128&d=identicon&r=PG&f=1", "display_name": "thiolliere", "link": "https://stackoverflow.com/users/8058332/thiolliere"}, "is_accepted": false, "score": 4, "last_activity_date": 1564142383, "last_edit_date": 1564142383, "creation_date": 1564142149, "answer_id": 57219571, "question_id": 57219226, "link": "https://stackoverflow.com/questions/57219226/how-to-get-the-roothash-or-a-proof-from-a-child-trie-in-substrate/57219571#57219571", "title": "How to get the roothash or a proof from a child trie in substrate?", "body": "<p>The <code>srml_support::storage::child</code> API make use of <a href=\"https://substrate.dev/rustdocs/v1.0/sr_io/\" rel=\"nofollow noreferrer\"><code>sr_io</code></a> API.</p>\n\n<p><code>sr_io</code> provides more functionality, for example <a href=\"https://substrate.dev/rustdocs/v1.0/sr_io/fn.child_storage_root.html\" rel=\"nofollow noreferrer\">sr_io::child_storage_root</a> which is the function you are looking for.</p>\n"}, {"tags": [], "owner": {"reputation": 238, "user_id": 4737839, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/38e2332cf448b64ced7498653324adcd?s=128&d=identicon&r=PG&f=1", "display_name": "cheme", "link": "https://stackoverflow.com/users/4737839/cheme"}, "is_accepted": false, "score": 2, "last_activity_date": 1564144750, "last_edit_date": 1564144750, "creation_date": 1564142634, "answer_id": 57219696, "question_id": 57219226, "link": "https://stackoverflow.com/questions/57219226/how-to-get-the-roothash-or-a-proof-from-a-child-trie-in-substrate/57219696#57219696", "title": "How to get the roothash or a proof from a child trie in substrate?", "body": "<p>An alternative is to directly query the parent trie node containing the root. For the linked exemple it will be something like this (child_storage_root is doing calculation of ongoing change whereas querying directly the root get the state at the start of the block processing or the latest stored state calculation):</p>\n\n<pre><code>let id = Self::id_from_index(index);\nlet child_root = storage::unhashed::get_raw(id.as_ref());\n</code></pre>\n"}], "owner": {"reputation": 1009, "user_id": 540128, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/62054833895a3df695f9854d8dee6a9f?s=128&d=identicon&r=PG", "display_name": "vim", "link": "https://stackoverflow.com/users/540128/vim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "answer_count": 2, "score": 5, "last_activity_date": 1564144750, "creation_date": 1564140840, "question_id": 57219226, "link": "https://stackoverflow.com/questions/57219226/how-to-get-the-roothash-or-a-proof-from-a-child-trie-in-substrate", "title": "How to get the roothash or a proof from a child trie in substrate?", "body": "<p>According to the example <a href=\"https://github.com/paritytech/polkadot/blob/d5f18844cef2f2a0c218c7778a81b4328c16f40e/runtime/src/crowdfund.rs#L447\" rel=\"noreferrer\">here</a>, I see one could use the <code>srml_support::storage::child</code> API to create a merkle sub trie out of arbitrary data. But how can we get the merkle root or a proof for a particular leaf using this? I see the <a href=\"https://substrate.dev/rustdocs/v1.0/srml_support/storage/child/index.html\" rel=\"noreferrer\">API</a> doesn't provide any functions named as such. </p>\n"}, {"tags": ["math", "syntax", "rust"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 1, "creation_date": 1564139377, "post_id": 57218777, "comment_id": 100941888, "body": "Typically the way to cope with that is to break the expression into smaller parts. This is also important because computers don&#39;t solve those like humans do. Numerical computations are a complex topic, and trying to &quot;abstract&quot; the programming language away will end up in problems sooner or later."}, {"owner": {"reputation": 73919, "user_id": 44309, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iL4TW.png?s=128&g=1", "display_name": "High Performance Mark", "link": "https://stackoverflow.com/users/44309/high-performance-mark"}, "edited": false, "score": 1, "creation_date": 1564146696, "post_id": 57218777, "comment_id": 100945806, "body": "<i>I thought of putting the math in a LaTeX file and converting it to actual code during compilation, is that something which has been done before?</i>. Yes, actually, it has.  Point your favourite search engine at <i>literate programming</i>."}], "answers": [{"comments": [{"owner": {"reputation": 69264, "user_id": 256138, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ed9e8c0ff767e38f8fade11f5af00a45?s=128&d=identicon&r=PG", "display_name": "rubenvb", "link": "https://stackoverflow.com/users/256138/rubenvb"}, "edited": false, "score": 0, "creation_date": 1564140846, "post_id": 57218963, "comment_id": 100942677, "body": "This does not answer the question, which asks about translating (formatted) mathematical equations into compilable/compiled code"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 69264, "user_id": 256138, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ed9e8c0ff767e38f8fade11f5af00a45?s=128&d=identicon&r=PG", "display_name": "rubenvb", "link": "https://stackoverflow.com/users/256138/rubenvb"}, "edited": false, "score": 0, "creation_date": 1564141079, "post_id": 57218963, "comment_id": 100942803, "body": "@rubenvb while I partially agrre, the title says <i>&quot;How to put mathematical equations in source code without making it unreadable?&quot;</i> and using doc comments is one way to go. So I see this as an adequate answer."}, {"owner": {"reputation": 69264, "user_id": 256138, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ed9e8c0ff767e38f8fade11f5af00a45?s=128&d=identicon&r=PG", "display_name": "rubenvb", "link": "https://stackoverflow.com/users/256138/rubenvb"}, "edited": false, "score": 1, "creation_date": 1564141208, "post_id": 57218963, "comment_id": 100942873, "body": "I understand your sentiment, but if the straightforward linearized format as shown by the OP is already unreadable, I doubt adding a layer of obscure markup which takes it even further from the mathematical expression is what is sought."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 0, "last_activity_date": 1564140652, "last_edit_date": 1564140652, "creation_date": 1564139847, "answer_id": 57218963, "question_id": 57218777, "link": "https://stackoverflow.com/questions/57218777/how-to-put-mathematical-equations-in-source-code-without-making-it-unreadable/57218963#57218963", "title": "How to put mathematical equations in source code without making it unreadable?", "body": "<p>After digging through the internet  I came across a <a href=\"https://github.com/rust-num/num/pull/226/files\" rel=\"nofollow noreferrer\">Pull Request</a> at the rust-num crate.</p>\n\n<p>You can use the <code>RUSTDOCFLAGS</code> environment variable to embed html pages which can contain javascript. In this case <a href=\"https://katex.org/\" rel=\"nofollow noreferrer\">kaTeX</a> is used. (the following is a summary of the PR).</p>\n\n<ol>\n<li>Add <code>--html-in-header doc/header.html --html-after-content doc/after.html</code> to the <code>RUSTDOCFLAGS</code> environment variable</li>\n<li>Put your formula into your doc comment, e.g. <code>$s' = \\frac{2 \\cdot s \\cdot \\sin \\left( \\frac{180 - \\alpha}{2} \\right) }{\\sin \\left( \\alpha \\right) } $</code></li>\n<li>Content of doc/after.html:\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;script&gt;renderMathInElement(document.body, {\n  delimiters: [\n    {left: \"$$\", right: \"$$\", display: true},\n    {left: \"\\\\[\", right: \"\\\\]\", display: true},\n    {left: \"\\\\(\", right: \"\\\\)\", display: false},\n    {left: \"$\", right: \"$\", display: false}\n  ]\n});&lt;/script&gt;\n</code></pre></li>\n<li>Content of doc/header.html\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css\"&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/contrib/auto-render.min.js\"&gt;&lt;/script&gt;\n</code></pre></li>\n</ol>\n\n<p>Of course you can alter the links to use a local katex resource instead of a cdn.</p>\n"}], "owner": {"reputation": 349, "user_id": 6336988, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4af92b77ea977b9f3eb75cbbe009138e?s=128&d=identicon&r=PG&f=1", "display_name": "NyxMC", "link": "https://stackoverflow.com/users/6336988/nyxmc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 109, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1564140652, "creation_date": 1564139141, "question_id": 57218777, "link": "https://stackoverflow.com/questions/57218777/how-to-put-mathematical-equations-in-source-code-without-making-it-unreadable", "title": "How to put mathematical equations in source code without making it unreadable?", "body": "<p>When implementing complex calculations, I found that readability suffered a lot. For example, this formula is absolutely unreadable when translated to code (I chose Rust since the strong typing makes it even worse):</p>\n\n<p><img src=\"https://latex.codecogs.com/gif.latex?s%27&space;=&space;%5Cfrac&space;%7B2%5Ccdot&space;s%5Ccdot&space;sin%5Cleft&space;(&space;%5Cfrac%7B180%C2%B0&space;-&space;%5Calpha&space;%7D%7B2%7D&space;%5Cright&space;)%7D%7Bsin(%5Calpha)%7D\"></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let s2 = (2.0 * (s as f64) * ((180.0 - a) / 2.0).sin()) / a.sin();\n</code></pre>\n\n<p>How do you deal with math in your code? I thought of putting the math in a LaTeX file and converting it to actual code during compilation, is that something which has been done before?</p>\n"}, {"tags": ["casting", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564134723, "post_id": 57217247, "comment_id": 100939404, "body": "And the other way around: <a href=\"https://stackoverflow.com/questions/29307474/how-can-i-convert-a-buffer-of-a-slice-of-bytes-u8-to-an-integer\" title=\"how can i convert a buffer of a slice of bytes u8 to an integer\">stackoverflow.com/questions/29307474/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1564135009, "post_id": 57217247, "comment_id": 100939583, "body": "Note to the newcomers: you should use <a href=\"https://stackoverflow.com/a/55581990/4498831\">this answer</a>"}, {"owner": {"reputation": 15750, "user_id": 2894974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/L31Cn.jpg?s=128&g=1", "display_name": "Konrad Kokosa", "link": "https://stackoverflow.com/users/2894974/konrad-kokosa"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564135111, "post_id": 57217247, "comment_id": 100939648, "body": "Great, thanks @hellow! Somehow I&#39;ve overlooked <code>to_le_bytes</code>..."}], "owner": {"reputation": 15750, "user_id": 2894974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/L31Cn.jpg?s=128&g=1", "display_name": "Konrad Kokosa", "link": "https://stackoverflow.com/users/2894974/konrad-kokosa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 757, "favorite_count": 1, "closed_date": 1564135114, "answer_count": 0, "score": 1, "last_activity_date": 1564137818, "creation_date": 1564133946, "question_id": 57217247, "link": "https://stackoverflow.com/questions/57217247/reainterpreting-u32-as-array-of-four-u8", "closed_reason": "Duplicate", "title": "Reainterpreting u32 as array of four u8", "body": "<p>Assume I have an array of four <code>u8</code>, let's say - as a field of a struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C, packed)]\n#[derive(Debug)]\nstruct SomeStruct&lt;'a&gt; {\n    header: [u8; 4],\n    // ... other fields ...\n}\n</code></pre>\n\n<p>I would like to efficiently read it as <code>u32</code> and then reinterpret into such an array - instead of calling four successive <code>read_u8</code>. Currently, I'm using <a href=\"https://crates.io/crates/byteorder\" rel=\"nofollow noreferrer\">byteorder</a> crate and <code>transmute</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>unsafe {\n   let input = metadata_bytes.read_u32::&lt;LittleEndian&gt;().unwrap();\n   data.header = std::mem::transmute::&lt;u32, [u8; 4]&gt;(input);\n}\n</code></pre>\n\n<p>It works but I'm completely not sure whether it is not miserably convoluted approach. So the questions are:</p>\n\n<ol>\n<li>is my approach ok? Can it be done better/faster/more idiomatic?</li>\n<li>in the current approach, does <code>transmute</code> copy those 4 bytes or just reinterprets it?</li>\n</ol>\n\n<p>PS. I can't use <code>slice::from_raw_parts_mut</code> for the whole struct as it contains dynamically sized fields inside.</p>\n"}, {"tags": ["multithreading", "rust", "lifetime"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564126211, "post_id": 57214992, "comment_id": 100935193, "body": "Why exactly do you want test to hold a reference and not move v ? The real solution depends on your real problem, which isn&#39;t shown here. The solution might be moving, using static, using crossbeam&#39;s scope, etc."}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 1, "last_activity_date": 1564127435, "creation_date": 1564127435, "answer_id": 57215484, "question_id": 57214992, "link": "https://stackoverflow.com/questions/57214992/lifetime-issues-in-rust-borrowed-value-does-not-live-long-enough/57215484#57215484", "title": "Lifetime issues in rust: borrowed value does not live long enough", "body": "<p>The obvious solution would be to have Test own the vector instead of just have a reference.</p>\n\n<p>But if you really need to borrow the value in the thread (probably because you want to use it after end of execution), then you may use <a href=\"https://docs.rs/crossbeam/0.7.2/crossbeam/fn.scope.html\" rel=\"nofollow noreferrer\">crossbeam's scope</a>:</p>\n\n<pre><code>let v = vec![0, 1];\nlet test = Test { v: &amp;v }; //inner_thread\ncrossbeam::thread::scope(|scope| {\n    scope.spawn(|_| test.print());\n}).unwrap();\n</code></pre>\n"}], "owner": {"reputation": 149, "user_id": 803072, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8251dd695e902a214c1f0dc9f94a57a8?s=128&d=identicon&r=PG", "display_name": "Vivek Bagaria", "link": "https://stackoverflow.com/users/803072/vivek-bagaria"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 610, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1564127435, "creation_date": 1564125606, "last_edit_date": 1564125654, "question_id": 57214992, "link": "https://stackoverflow.com/questions/57214992/lifetime-issues-in-rust-borrowed-value-does-not-live-long-enough", "title": "Lifetime issues in rust: borrowed value does not live long enough", "body": "<p>I have reproduced my problem in the short code below. </p>\n\n<p><em>Problem</em>: The <code>inner thread</code> uses reference of variable <code>v</code> from the <code>outer thread</code>. The rust compiler throws an error because \"technically\" the <code>outer thread</code> could terminate before the <code>inner thread</code> and hence <code>inner thread</code> could loose access to variable <code>v</code>. However in the code below that clearly cannot happen. </p>\n\n<p><em>Question</em>: How shall I change this code so that it complies while maintaining the same functionality?</p>\n\n<pre><code>fn main() { //outer thread\n    let v = vec![0, 1];\n    let test = Test { v: &amp;v }; //inner_thread\n    std::thread::spawn(move || test.print());\n    loop {\n        // this thread will never die because it will never leave this loop\n    }\n}\n\npub struct Test&lt;'a&gt; {\n    v: &amp;'a Vec&lt;u32&gt;,\n}\n\nimpl&lt;'a&gt; Test&lt;'a&gt; {\n    fn print(&amp;self) {\n        println!(\"{:?}\", self.v);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `v` does not live long enough\n --&gt; src/main.rs:3:26\n  |\n3 |     let test = Test { v: &amp;v }; //inner_thread\n  |                          ^^ borrowed value does not live long enough\n4 |     std::thread::spawn(move || test.print());\n  |     ---------------------------------------- argument requires that `v` is borrowed for `'static`\n...\n8 | }\n  | - `v` dropped here while still borrowed\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1564125417, "post_id": 57214902, "comment_id": 100934853, "body": "Please see <a href=\"https://stackoverflow.com/posts/57203009/revisions\">my edit</a> on your other question and try to avoid the same thing again. In this case: don&#39;t put the programming language into the title. That&#39;s what tags are for."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564125774, "post_id": 57214902, "comment_id": 100935015, "body": "What about <code>let mut v = vec![0; 100]; f.read_exact(&amp;mut v[..n])</code>? Passing a <code>n</code> is IMHO very unrusty, because the slice knows how big it is. So why bothering and passing a dedicated <code>n</code> to the function?"}], "owner": {"reputation": 2337, "user_id": 930169, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/be36a036900e8c4a2d810db772e43280?s=128&d=identicon&r=PG", "display_name": "JACK M", "link": "https://stackoverflow.com/users/930169/jack-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 1, "closed_date": 1564133941, "answer_count": 0, "score": 2, "last_activity_date": 1564125364, "creation_date": 1564125247, "last_edit_date": 1564125364, "question_id": 57214902, "link": "https://stackoverflow.com/questions/57214902/read-up-to-n-bytes-from-file", "closed_reason": "Duplicate", "title": "Read up to n bytes from file", "body": "<p>The only way I know reading up to n bytes from file is <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\" rel=\"nofollow noreferrer\">this</a>:</p>\n\n<pre><code>use std::fs::File;\nuse std::io;\nuse std::io::prelude::*;\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let mut f = File::open(\"foo.txt\")?;\n    let mut buffer = [0; 10];\n\n    // read exactly 10 bytes\n    f.read_exact(&amp;mut buffer)?;\n    Ok(())\n}\n</code></pre>\n\n<p>What I would like to implement is: user gives a buffer and the parameter <code>n</code>, I put up to <code>n</code> bytes into that buffer.</p>\n\n<pre><code>fn read_n_bytes(f: &amp;File, n: usize, dst: &amp;mut Vec&lt;u8&gt;) {\n    let mut buffer = [0; n]; // error here, n isn't a constant\n    f.read_exact(&amp;mut buffer);\n    // concat content of buffer to dst...\n}\n</code></pre>\n\n<p>How to I tell read_exact to read up to n bytes into <code>dst</code> directly?</p>\n\n<pre><code>fn read_n_bytes(f: &amp;File, n: usize, dst: &amp;mut Vec&lt;u8&gt;) {\n    f.read_exact(dst, n);\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1564094389, "post_id": 57210634, "comment_id": 100928108, "body": "<code>for_each()</code> is not very idiomatic in my opinion, you should use a for loop."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1564109877, "post_id": 57210653, "comment_id": 100930672, "body": "... But it would be silly to write that when <code>for x in chars.clone() { dbg!(x); }</code> is shorter, idiomatic and perfectly clear."}], "tags": [], "owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "is_accepted": false, "score": 3, "last_activity_date": 1564092015, "creation_date": 1564092015, "answer_id": 57210653, "question_id": 57210634, "link": "https://stackoverflow.com/questions/57210634/why-doesnt-dbg-seem-to-work-within-a-for-each-loop/57210653#57210653", "title": "Why doesn&#39;t Dbg seem to work within a for_each loop?", "body": "<p><code>dbg!</code> returns the value you passed in, while <code>for_each</code> requires a unit type to be returned. <code>println!</code> returns a unit type.</p>\n\n<p>We can make this work by adding <code>;</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    chars.clone().for_each(|x| {dbg!(x);});\n</code></pre>\n"}], "owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1564092015, "creation_date": 1564091905, "question_id": 57210634, "link": "https://stackoverflow.com/questions/57210634/why-doesnt-dbg-seem-to-work-within-a-for-each-loop", "title": "Why doesn&#39;t Dbg seem to work within a for_each loop?", "body": "<p>Why doesn't <code>dbg!</code> work in this <code>for_each</code> loop? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fafdd99c792ad653f0ea534b92187188\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let chars = \"hello\".chars();\n    chars.clone().for_each(|x| dbg!(x));\n}\n</code></pre>\n\n<p>I get this compile error:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:4:32\n  |\n4 |     chars.clone().for_each(|x| dbg!(x));\n  |                                ^^^^^^^ expected (), found char\n  |\n  = note: expected type `()`\n             found type `char`\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>I've tried passing in a reference to <code>x</code> too.</p>\n\n<p><code>println</code> works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let chars = \"hello\".chars();\n    chars.clone().for_each(|x| println!(\"{:?}\", x));\n}\n</code></pre>\n"}, {"tags": ["rust", "deserialization", "serde"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564094111, "post_id": 57210361, "comment_id": 100928054, "body": "The answer is simple but <code>serde-xml-rs</code> have <a href=\"https://github.com/RReverser/serde-xml-rs/issues/107\" rel=\"nofollow noreferrer\">bugs</a>"}], "answers": [{"tags": [], "owner": {"reputation": 511, "user_id": 1927976, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/59a9cb96b87e3e41394f4104f509c163?s=128&d=identicon&r=PG", "display_name": "Josh Leeb-du Toit", "link": "https://stackoverflow.com/users/1927976/josh-leeb-du-toit"}, "is_accepted": false, "score": 0, "last_activity_date": 1564142363, "creation_date": 1564142363, "answer_id": 57219626, "question_id": 57210361, "link": "https://stackoverflow.com/questions/57210361/deserialize-xml-with-multiple-schema-structures/57219626#57219626", "title": "Deserialize XML with multiple schema structures", "body": "<p>Take a look at some of the <a href=\"https://serde.rs/enum-representations.html\" rel=\"nofollow noreferrer\">serde examples</a> which might be able to help you here. Specifically the examples/docs on untagged enums which allow you to define many ways to deserialize into a single enum type. </p>\n"}], "owner": {"reputation": 421, "user_id": 2755165, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8aead22df0304f5632dcb7d053c76a6e?s=128&d=identicon&r=PG", "display_name": "rideron89", "link": "https://stackoverflow.com/users/2755165/rideron89"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 116, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1564142363, "creation_date": 1564090175, "last_edit_date": 1564091993, "question_id": 57210361, "link": "https://stackoverflow.com/questions/57210361/deserialize-xml-with-multiple-schema-structures", "title": "Deserialize XML with multiple schema structures", "body": "<p>How can I deserialize an XML-string (using serde derive) returned by an API that might have different children?</p>\n\n<p>If I call an API it might return one of the following result sets:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::Deserialize;\nuse serde_xml_rs::from_str;\n\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Error {\n    code: u32,\n    message: String,\n}\n\n#[derive(Debug, Deserialize)]\nstruct Item {\n}\n\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct DataSet {\n    error: Option&lt;Error&gt;,\n\n    data: Option&lt;Vec&lt;Item&gt;&gt;\n}\n\nfn main() {\n    let error = r#\"\n    &lt;DataSet&gt;\n        &lt;Error&gt;\n            &lt;Code&gt;0&lt;/Code&gt;\n            &lt;Message&gt;error&lt;/Message&gt;\n        &lt;/Error&gt;\n    &lt;/DataSet&gt;\n    \"#;\n\n    let dataset: DataSet = from_str(error).unwrap();\n    println!(\"{:#?}\", dataset);\n\n    let items = r#\"\n    &lt;DataSet&gt;\n        &lt;Item&gt;..&lt;/Item&gt;\n        &lt;Item&gt;..&lt;/Item&gt;\n    &lt;/DataSet&gt;\n\"#;\n\n    let dataset: DataSet = from_str(items).unwrap();\n    println!(\"{:#?}\", dataset);\n}\n</code></pre>\n\n<pre><code>[package]\nname = \"dataset\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nserde = { version = \"1\", features = [\"derive\"] }\nserde-xml-rs = \"0.3\"\n</code></pre>\n\n<p>But I feel like there should be a more idiomatic way of achieving this. Especially since it would make matching off the data a lot easier.</p>\n\n<p>I've tried using <code>#[serde(flatten)]</code>, and I've tried setting <code>ApiResponse</code> to a tuple-struct and a struct with a single tuple parameter. No luck.</p>\n\n<p>Is this possible without having to build a custom deserializer?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 4, "creation_date": 1564081321, "post_id": 57208497, "comment_id": 100923703, "body": "here the type of the <code>impl</code> is <code>&amp;mut I</code>, so <code>&amp;mut self</code> is really an <code>&amp;mut &amp;mut I</code>"}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1564081572, "post_id": 57208497, "comment_id": 100923820, "body": "I think the important thing to note is that sure an <code>&amp;mut I</code> should be able to be used as an Iterator, <i>but thats only due to this exact impl</i>"}, {"owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1564082610, "post_id": 57208497, "comment_id": 100924248, "body": "@turbulencetoo great - it&#39;s two <code>mut</code> - that&#39;s v clear now"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1564087910, "post_id": 57208497, "comment_id": 100926311, "body": "For method calls you can often omit the <code>*</code>, since Rust will automatically dereference the receiver until it finds a matching method. In this case, however, you need to make sure that you don&#39;t recurse into the current method, which would cause an infinite loop, so you need to be explicit."}], "owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 451, "favorite_count": 1, "closed_date": 1582138938, "answer_count": 0, "score": 0, "last_activity_date": 1582138946, "creation_date": 1564080714, "question_id": 57208497, "link": "https://stackoverflow.com/questions/57208497/meaning-of-double-asterisk-in-rust", "closed_reason": "Duplicate", "title": "Meaning of ** (double asterisk) in Rust", "body": "<p>The <a href=\"https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2607\" rel=\"nofollow noreferrer\">Iterator implementation</a> for a mutable reference of an Iterator is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;I: Iterator + ?Sized&gt; Iterator for &amp;mut I {\n    type Item = I::Item;\n    fn next(&amp;mut self) -&gt; Option&lt;I::Item&gt; { (**self).next() }\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) { (**self).size_hint() }\n    fn nth(&amp;mut self, n: usize) -&gt; Option&lt;Self::Item&gt; {\n        (**self).nth(n)\n    }\n}\n</code></pre>\n\n<p>What does the <code>**</code> mean? Dereferencing twice? </p>\n\n<p>I had thought that a single <code>*</code> would be enough to dereference <code>self</code>, and then you'd call <code>.next()</code> on <code>self</code>, which is an iterator? Where am I mistaken?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 5, "creation_date": 1564068259, "post_id": 57205379, "comment_id": 100917753, "body": "To iterate, you <b>must</b> modify the iterator. You have to clone it."}], "answers": [{"comments": [{"owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "edited": false, "score": 0, "creation_date": 1564069740, "post_id": 57205888, "comment_id": 100918574, "body": "Great! But then why the error message <code>&amp;std::str::Chars&lt;&#39;_&gt; is not an iterator</code>? Why doesn&#39;t it say something like &quot;Requires mutation and holds immutable reference&quot;?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "edited": false, "score": 0, "creation_date": 1564069916, "post_id": 57205888, "comment_id": 100918651, "body": "@Maximilian That could be an improvement for the future, but that not easy to detect this kind of situation."}, {"owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "edited": false, "score": 0, "creation_date": 1564070213, "post_id": 57205888, "comment_id": 100918795, "body": "Thanks @stargateur. I&#39;m more asking what that means; totally understand that it can be difficult to detect. i.e. is it that <code>&amp;mut std::str::Chars&lt;&#39;_&gt;</code> is an iterator? Or that <code>&amp;mut Chars</code> dereferences to the iterator?"}, {"owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "edited": false, "score": 0, "creation_date": 1564080191, "post_id": 57205888, "comment_id": 100923205, "body": "Ah great @Stargatour, I see your response more clearly now, thanks for the link to the <code>Impl</code>"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 1, "last_activity_date": 1564069643, "creation_date": 1564069643, "answer_id": 57205888, "question_id": 57205379, "link": "https://stackoverflow.com/questions/57205379/iterate-over-a-reference-to-chars/57205888#57205888", "title": "Iterate over a reference to Chars", "body": "<p>The problem is that you hold a immutable reference to <code>Chars</code> you are not free to mutate it and <code>Iterator</code> is only auto implemented for mutable reference <a href=\"https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2605\" rel=\"nofollow noreferrer\"><code>impl&lt;I: Iterator + ?Sized&gt; Iterator for &amp;mut I</code></a>. For the very good reason then <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow noreferrer\"><code>next()</code></a> require <code>&amp;mut self</code>.</p>\n\n<p>You have many solutions: take it as mutable reference, clone it or take it by value:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::str::Chars;\n\nfn main() {\n    let s = \"aoeuaoeu\".to_string();\n    my_func(&amp;mut s.chars())\n}\n\nfn my_func(chars: &amp;mut Chars) {\n    for x in chars {\n        dbg!(x);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::str::Chars;\n\nfn main() {\n    let s = \"aoeuaoeu\".to_string();\n    my_func(&amp;s.chars())\n}\n\nfn my_func(chars: &amp;Chars) {\n    for x in chars.clone() {\n        dbg!(x);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::str::Chars;\n\nfn main() {\n    let s = \"aoeuaoeu\".to_string();\n    my_func(s.chars())\n}\n\nfn my_func(chars: Chars) {\n    for x in chars {\n        dbg!(x);\n    }\n}\n</code></pre>\n\n<p>Take by value is probably what the want.</p>\n"}], "owner": {"reputation": 4534, "user_id": 3064736, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/wuMUa.jpg?s=128&g=1", "display_name": "Maximilian", "link": "https://stackoverflow.com/users/3064736/maximilian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 57205888, "answer_count": 1, "score": 1, "last_activity_date": 1564069643, "creation_date": 1564067922, "question_id": 57205379, "link": "https://stackoverflow.com/questions/57205379/iterate-over-a-reference-to-chars", "title": "Iterate over a reference to Chars", "body": "<p>I have a function that receives a reference to <code>Chars</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::str::Chars;\n\nfn main() {\n    let s = \"aoeuaoeu\".to_string();\n    my_func(&amp;s.chars())\n}\n\nfn my_func(chars: &amp;Chars) {\n    for x in chars {\n        dbg!(x);\n    }\n}\n</code></pre>\n\n<p>This doesn't compile, because <code>chars</code> on line 9 is the reference rather than the iterator:</p>\n\n<pre><code>error[E0277]: `&amp;std::str::Chars&lt;'_&gt;` is not an iterator\n --&gt; src/main.rs:9:14\n  |\n9 |     for x in chars {\n  |              ^^^^^ `&amp;std::str::Chars&lt;'_&gt;` is not an iterator\n  |\n  = help: the trait `std::iter::Iterator` is not implemented for `&amp;std::str::Chars&lt;'_&gt;`\n  = note: required by `std::iter::IntoIterator::into_iter`\n</code></pre>\n\n<p>I've tried whack-a-mole with <code>&amp;</code> and <code>*</code> etc, to no avail. Is there any way of iterating over it without an additional allocation?</p>\n\n<p>I'm not in control of the calling function, so the function does need to take a reference (i.e. can't change the caller to <code>my_func(s.chars()</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1564064810, "post_id": 57204201, "comment_id": 100915784, "body": "@DenysS&#233;guret: I guess the book was not updated."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1564064974, "post_id": 57204201, "comment_id": 100915890, "body": "This is explained in detail in the subsection <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">Validating References with Lifetimes</a> of the book. I suggest skipping forward to that section to get an understanding of how lifetimes in Rust work."}, {"owner": {"reputation": 41, "user_id": 8040576, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xpY94.jpg?s=128&g=1", "display_name": "Lancern", "link": "https://stackoverflow.com/users/8040576/lancern"}, "edited": false, "score": 0, "creation_date": 1564065732, "post_id": 57204201, "comment_id": 100916382, "body": "Thanks for your response. I just tried to modify the code to return string literals directly from the <code>first_word</code> function and the complain stills. It seems like that the borrow checker makes its decisions on the lifetime you just mentioned. I&#39;ll read about it, thanks."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1564065880, "post_id": 57204201, "comment_id": 100916466, "body": "@Lancern The borrow checker only looks at the function prototype (i.e. the argument and return types) to determine the relationship between input and output references. Changing the implementation of the function does not change anything about how the function is treated at the call site."}, {"owner": {"reputation": 11225, "user_id": 471129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cec5a6cce700294c7c564becb11fa3c1?s=128&d=identicon&r=PG", "display_name": "Erik Eidt", "link": "https://stackoverflow.com/users/471129/erik-eidt"}, "edited": false, "score": 0, "creation_date": 1564068792, "post_id": 57204201, "comment_id": 100918040, "body": "In order to return a reference you have to relate that reference to one of the inputs.  Then the caller can be responsible for providing an input that lives long enough to use the returned reference.  You simply cannot return an arbitrary reference; in order to return something unconnected to an input you would have to return an (owned) item not a reference."}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 2, "last_activity_date": 1608055420, "last_edit_date": 1608055420, "creation_date": 1564064938, "answer_id": 57204386, "question_id": 57204201, "link": "https://stackoverflow.com/questions/57204201/how-does-the-borrow-checker-deal-with-a-reference-returned-from-a-function/57204386#57204386", "title": "How does the borrow checker deal with a reference returned from a function?", "body": "<p>When you have</p>\n<pre><code>fn first_word(s: &amp;String) -&gt; &amp;str {\n</code></pre>\n<p>it really means</p>\n<pre><code>fn first_word&lt;'a&gt;(s: &amp;'a String) -&gt; &amp;'a str {\n</code></pre>\n<p>(see <a href=\"https://doc.rust-lang.org/nomicon/lifetime-elision.html\" rel=\"nofollow noreferrer\">lifetime elision</a>).</p>\n<p>That is, the lifetime of the output is the one of the input.</p>\n<p>That's how the borrow checker can deduce that <code>word</code>, which is returned by the <code>first_word</code> function, refers to <code>s</code>.</p>\n"}], "owner": {"reputation": 41, "user_id": 8040576, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xpY94.jpg?s=128&g=1", "display_name": "Lancern", "link": "https://stackoverflow.com/users/8040576/lancern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 1, "closed_date": 1564108882, "answer_count": 1, "score": 2, "last_activity_date": 1608055420, "creation_date": 1564064385, "last_edit_date": 1564065781, "question_id": 57204201, "link": "https://stackoverflow.com/questions/57204201/how-does-the-borrow-checker-deal-with-a-reference-returned-from-a-function", "closed_reason": "Duplicate", "title": "How does the borrow checker deal with a reference returned from a function?", "body": "<p>I'm new to Rust and I'm reading the <em>The Rust Programming Language</em> online book. I'm now stuck on a problem about the Rust's borrow check, the code example is shown below:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn first_word(s: &amp;String) -&gt; &amp;str {\n    let bytes = s.as_bytes();\n    for (i, &amp;b) in bytes.iter().enumerate() {\n        if b == b' ' {\n            return &amp;s[..i];\n        }\n    }\n\n    &amp;s[..]\n}\n\nfn main() {\n    let mut s = String::from(\"hello world\");\n\n    let word = first_word(&amp;s);\n    s.clear();\n\n    println!(\"word = {}\", word);\n}\n\n</code></pre>\n\n<p>Rust compiler complains about the code with the following error message:</p>\n\n<pre><code>error[E0502]: cannot borrow `s` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:16:5\n   |\n15 |     let word = first_word(&amp;s);\n   |                           -- immutable borrow occurs here\n16 |     s.clear();\n   |     ^^^^^^^^^ mutable borrow occurs here\n17 | \n18 |     println!(\"word = {}\", word);\n   |                           ---- immutable borrow later used here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0502`.\nerror: Could not compile `demo`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>The online book explains that when executing <code>s.clear()</code>, a new mutable reference to <code>s</code> is created and conflicted with the existing immutable reference <code>word</code> because <code>word</code> is not out of its scope until the last <code>println!</code> statement. It seems like that somehow, Rust's borrow checker figured out that <code>word</code>, which is returned by the <code>first_word</code> function, refers to <code>s</code>. How does it achieve that?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 1, "last_activity_date": 1564127840, "last_edit_date": 1564127840, "creation_date": 1564063611, "answer_id": 57203959, "question_id": 57203834, "link": "https://stackoverflow.com/questions/57203834/is-there-a-way-to-reassign-a-variable-to-a-different-trait-implemetation/57203959#57203959", "title": "Is there a way to reassign a variable to a different trait implemetation?", "body": "<p>You want a variable whose value can be an option of an implementation of a trait.</p>\n\n<p>You can define your variable as having type <code>Option&lt;Box&lt;dyn Node&gt;&gt;</code>.</p>\n\n<p>The boxing is needed because the size isn't known at this point.</p>\n\n<p>And you can create a value like this:</p>\n\n<pre><code>let mut node: Option&lt;Box&lt;dyn Node&gt;&gt; = Some(Box::new(Edge::new()));\n</code></pre>\n\n<p><strong>Note:</strong></p>\n\n<p>As the <code>dyn</code> keyword makes it clear, the functions to call are dynamically found which impacts performances. And the heap allocated box content can also be a (small) burden to your performances. Of course the impact is usually negligible.</p>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 1, "accepted_answer_id": 57203959, "answer_count": 1, "score": 2, "last_activity_date": 1564127840, "creation_date": 1564063237, "question_id": 57203834, "link": "https://stackoverflow.com/questions/57203834/is-there-a-way-to-reassign-a-variable-to-a-different-trait-implemetation", "title": "Is there a way to reassign a variable to a different trait implemetation?", "body": "<p>Can I have a variable that I can assign to 2 structs that implement the same trait? </p>\n\n<p>Simple example</p>\n\n<pre><code>trait Node {\n    fn some_function(&amp;self);\n}\nstruct Edge {\n    begin: bool,\n}\nstruct Repeat {\n    bar: usize,\n}\n\nimpl Node for Edge {\n    fn some_function(&amp;self) { /*...*/ }\n}\n\nimpl Node for Repeat {\n    fn some_function(&amp;self) { /*...*/ }\n}\n\nimpl Edge {\n    fn new() -&gt; Self {\n        Edge { begin: true }\n    }\n}\n\nimpl Repeat {\n    fn new(ch: u8) -&gt; Repeat\n    {\n       Repeat { bar: 100 }\n    }\n}\n\nfn process_seq&lt;'a&gt;(bytes: &amp;'a [u8]) -&gt; Option&lt;impl Node&gt; {\n    let mut node = None;\n    // These both implement the same trait\n    node = Some(as_node(Edge::new()));\n    node = Some(as_node(Repeat::new()));\n    //\n    node\n}\n</code></pre>\n\n<p>This is what I've tried so far</p>\n\n<p>// A function to cast back to node</p>\n\n<pre><code>fn as_node&lt;T: Node&gt;(t: T) -&gt; impl Node {\n    t\n}\n\nerror[E0308]: mismatched types\nnote: expected type `regexgen::Edge`\n      found type `regexgen::Repeat`\n</code></pre>\n\n<p>// Change new() constructors to return impl Node</p>\n\n<pre><code>impl Edge {\n    fn new() -&gt; impl Node {\n        Edge { begin: true }\n    }\n}\n\nimpl Repeat {\n    fn new(ch: u8) -&gt; impl Node\n    {\n       Repeat { bar: 100 }\n    }\n}\n</code></pre>\n\n<p>but that gives 2 similar but opaque types which might look the same but I know Rust treats those differently.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 960, "user_id": 2171273, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SIVz5.jpg?s=128&g=1", "display_name": "Myk Melez", "link": "https://stackoverflow.com/users/2171273/myk-melez"}, "edited": false, "score": 0, "creation_date": 1585453395, "post_id": 57203324, "comment_id": 107762454, "body": "What if you also want an implementation of Index that returns a u8? Adding an impl like this results in a &quot;conflicting implementation for <code>Test</code>&quot; error:  ``` impl std::ops::Index&lt;usize&gt; for Test {     type Output = u8;      fn index(&amp;self, index: usize) -&gt; &amp;Self::Output {         &amp;self.data[index]     } } ```"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 960, "user_id": 2171273, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SIVz5.jpg?s=128&g=1", "display_name": "Myk Melez", "link": "https://stackoverflow.com/users/2171273/myk-melez"}, "edited": false, "score": 0, "creation_date": 1585471420, "post_id": 57203324, "comment_id": 107765737, "body": "@MykMelez I&#39;ve updated my code. <code>SliceIndex</code> is already implemented for <code>usize</code>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1585471380, "last_edit_date": 1585471380, "creation_date": 1564061951, "answer_id": 57203324, "question_id": 57203009, "link": "https://stackoverflow.com/questions/57203009/implementing-slice-for-custom-type/57203324#57203324", "title": "Implementing slice for custom type", "body": "<p>You can do that by implementing the <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\"><code>Index</code></a> trait, and bounding the index to <a href=\"https://doc.rust-lang.org/std/slice/trait.SliceIndex.html\" rel=\"nofollow noreferrer\"><code>SliceIndex</code></a>:</p>\n\n<pre><code>struct Test {\n    data: Vec&lt;u8&gt;,\n}\n\nimpl Test {\n    fn new(data: Vec&lt;u8&gt;) -&gt; Self {\n        Test { data }\n    }\n}\n\nimpl&lt;Idx&gt; std::ops::Index&lt;Idx&gt; for Test\nwhere\n    Idx: std::slice::SliceIndex&lt;[u8]&gt;,\n{\n    type Output = Idx::Output;\n\n    fn index(&amp;self, index: Idx) -&gt; &amp;Self::Output {\n        &amp;self.data[index]\n    }\n}\n\nfn main() {\n    let test = Test::new(vec![1, 2, 3]);\n\n    let slice = &amp;test[1..];\n    assert_eq!(slice, [2, 3]);\n\n    let first = &amp;test[0];\n    assert_eq!(first, &amp;1);\n}\n</code></pre>\n"}], "owner": {"reputation": 2337, "user_id": 930169, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/be36a036900e8c4a2d810db772e43280?s=128&d=identicon&r=PG", "display_name": "JACK M", "link": "https://stackoverflow.com/users/930169/jack-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1401, "favorite_count": 1, "accepted_answer_id": 57203324, "answer_count": 1, "score": 7, "last_activity_date": 1585471380, "creation_date": 1564060993, "last_edit_date": 1564061145, "question_id": 57203009, "link": "https://stackoverflow.com/questions/57203009/implementing-slice-for-custom-type", "title": "Implementing slice for custom type", "body": "<p>I have this struct:</p>\n\n<pre><code>struct Test {\n    data: Vec&lt;u8&gt;,\n}\n\nimpl Test {\n    fn new() -&gt; Self {\n        return Test { data: Vec::new() };\n    }\n}\n\nlet a = Test::new();\n// populate something into a...\n</code></pre>\n\n<p>I would like to implement slice for this type, when doing e.g. <code>&amp;a[2..5]</code>, it returns a slice pointing to <code>2..5</code> of its internal <code>data</code>. Is it possible to do this in Rust?</p>\n"}, {"tags": ["struct", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564059407, "post_id": 57202410, "comment_id": 100912538, "body": "Welcome to Stackoverflow. Please always include the error you get when compiling your program and/or the expected result (e.g. in this case it should compile :) ). Take yourself some time to view the edit I made to your post and try to understand why and what I did. Also note that variables in rust are immutable by default, so you need to pass a mutable reference (or by value) to the function. Please edit your code, update your question by <a href=\"https://stackoverflow.com/posts/57202410/edit\">edit</a>ing it and don&#39;t forget to update the error message as well. Also the compiler will almost always tell you what to do. Just listen to it :)"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1564060135, "post_id": 57202410, "comment_id": 100912988, "body": "Just like the compiler suggests, add a few <code>mut</code>: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2db538b587840c3c7f1c6102e16e7b32\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> . Looking at the compiler suggestion is usually a good idea."}, {"owner": {"reputation": 43, "user_id": 11836252, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68a88bee7c05075b355e2f97114dfe58?s=128&d=identicon&r=PG&f=1", "display_name": "owl", "link": "https://stackoverflow.com/users/11836252/owl"}, "edited": false, "score": 0, "creation_date": 1564067108, "post_id": 57202410, "comment_id": 100917153, "body": "Thank you, hellow for your editing and kind suggestions. Now the question&#39;s body looks great and organized. Denys seguret thanks a lot, now it is working. That was a silly mistake. I got the answer. do i need to close/delete the question."}], "owner": {"reputation": 43, "user_id": 11836252, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68a88bee7c05075b355e2f97114dfe58?s=128&d=identicon&r=PG&f=1", "display_name": "owl", "link": "https://stackoverflow.com/users/11836252/owl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1564067423, "creation_date": 1564059028, "last_edit_date": 1564067423, "question_id": 57202410, "link": "https://stackoverflow.com/questions/57202410/transfer-struct-to-two-different-impl-functions", "title": "Transfer Struct to two different impl functions", "body": "<p>The variable <code>screen</code> is an instance of the <code>Display</code> struct which contains the size of a screen. And <code>point</code> is an instance of another struct which contains a point in XY field. I have implemented two functions.</p>\n\n<ol>\n<li><code>is_point_inside_display</code> will return <code>true</code> if the point is inside of the screen, <code>false</code> otherwise.</li>\n<li><code>make_valid_point</code> will modify the \"point\" if the first function returns <code>false</code>.</li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct Display {\n    x: i32,\n    y: i32,\n}\n\nimpl Display {\n    fn is_point_inside_display(&amp;self, point: &amp;Display) -&gt; bool {\n        self.x &gt; point.x &amp;&amp; self.y &gt; point.y\n    }\n\n    fn make_valid_point(&amp;self, point: &amp;Display) {\n        if !self.is_point_inside_display(point) {\n            let x = point.x % self.x as i32;\n            let y = point.y % self.y as i32;\n            point.x = x;\n            point.y = y;\n        }\n    }\n}\n\nfn main() {\n    let screen = Display {\n        //the size of the display\n        x: 1960,\n        y: 1080,\n    };\n    let point = Display {\n        //point in xy\n        x: 450,\n        y: 1230,\n    };\n\n    screen.make_valid_point(&amp;point);\n    println!(\"point in {:?}\", point);\n}\n</code></pre>\n\n<p>The problem is that I cannot modify <code>point</code> because it is not mutable, but if I make it mutable the compiler shows lots of error, which I do not understand.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0594]: cannot assign to `point.x` which is behind a `&amp;` reference\n  --&gt; src/main.rs:16:13\n   |\n12 |     fn make_valid_point(&amp;self, point: &amp;Display) {\n   |                                       -------- help: consider changing this to be a mutable reference: `&amp;mut Display`\n...\n16 |             point.x = x;\n   |             ^^^^^^^^^^^ `point` is a `&amp;` reference, so the data it refers to cannot be written\n\nerror[E0594]: cannot assign to `point.y` which is behind a `&amp;` reference\n  --&gt; src/main.rs:17:13\n   |\n12 |     fn make_valid_point(&amp;self, point: &amp;Display) {\n   |                                       -------- help: consider changing this to be a mutable reference: `&amp;mut Display`\n...\n17 |             point.y = y;\n   |             ^^^^^^^^^^^ `point` is a `&amp;` reference, so the data it refers to cannot be written\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564056895, "post_id": 57201720, "comment_id": 100910984, "body": "How does this differ from <a href=\"https://stackoverflow.com/questions/57201043/crate-cannot-find-path\">your other question</a>?"}, {"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564056952, "post_id": 57201720, "comment_id": 100911017, "body": "Not using the home now, using a file path works with home i.e. ` ~ ` but not file path.  i.e. <code>&quot;Users&#47;Documents&#47;Code&#47;Thor&#47;thor&#47;parity&#47;keys&quot;</code>"}, {"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "edited": false, "score": 0, "creation_date": 1564057050, "post_id": 57201720, "comment_id": 100911075, "body": "Are using vscode?  If so, right click on the function (<code>load_or_generate</code>) and go to the source for that function and start reading to determine what that function is requiring.  That will help you understand the error message that is being generated by the Serde crate which is being included to parse this."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564057098, "post_id": 57201720, "comment_id": 100911102, "body": "But if I understand the error, ethkey complains that <code>...&#47;parity&#47;keys</code> is a directory, instead of a file. The documentaion also says: <code>pub fn load_or_generate&lt;P, W&gt;(file_path: P, password: W) </code> so it should be a file, instead of a directory?"}, {"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 0, "creation_date": 1564057179, "post_id": 57201720, "comment_id": 100911159, "body": "thats for the ok(()) leg .. on err it is meant to create a new key file let (secret, log_msg) = match File::open(&amp;file_path) {             Ok(file) =&gt; {                 let key_file: KeyFile = serde_json::from_reader(file)?;                 let secret = SecretKey::from_crypto(&amp;key_file.crypto, &amp;pwd)?;                 (secret, &quot;loaded&quot;)             }             Err(_e) =&gt; {                 let secret = SecretKey::from_raw(&amp;random_bytes())?;                 save_key(&amp;secret, &amp;file_path, pwd)?;                 (secret, &quot;generated and saved&quot;)"}], "answers": [{"comments": [{"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 0, "creation_date": 1564057338, "post_id": 57201817, "comment_id": 100911259, "body": "dont think it works.. i have even gone into the directory to <code>pwd</code>  i.e. <code>&quot;&#47;Users&#47;samueldare&#47;Documents&#47;Code&#47;Thor&#47;thor&#47;parity&#47;keys&quot;</code> i get the foillowing error: <code>thread &#39;main&#39; panicked at &#39;should load or generate new eth key: Error(SerdeJsonError(Error(&quot;Is a directory (os error 21)&quot;, line: 0, column: 0)), State { next_error: None, backtrace: InternalBacktrace { backtrace: None } })&#39;, src&#47;libcore&#47;result.rs:999:5 note: run with </code>RUST_BACKTRACE=1` environment variable to display a backtrace. `"}, {"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "reply_to_user": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 1, "creation_date": 1564057845, "post_id": 57201817, "comment_id": 100911567, "body": "<code>SerdeJsonError(Error(&quot;Is a directory (os error 21))</code> is the underlying error message that you should google now.  The first problem was the missing opening slash.  This is a new error message that relates to passing a directory when a filename was expected (or vice versa).  Of course the function wants a directory when no key exists and a filename when the key file does exist, so you&#39;ll have to figure out if the directory exists and why it is confused."}, {"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 0, "creation_date": 1564060339, "post_id": 57201817, "comment_id": 100913100, "body": "if you saw my last comment i take that back and thank you. Figured it out"}], "tags": [], "owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "is_accepted": true, "score": 0, "last_activity_date": 1564057390, "last_edit_date": 1564057390, "creation_date": 1564057157, "answer_id": 57201817, "question_id": 57201720, "link": "https://stackoverflow.com/questions/57201720/cannot-write-keyfile-with-crate/57201817#57201817", "title": "Cannot write keyfile with crate", "body": "<p>Add a '/' to the beginnning of your file path.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/path/struct.Path.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/path/struct.Path.html</a></p>\n\n<p>e.g.:</p>\n\n<pre><code>let key = EthAccount::load_or_generate(\"/Users/Documents/Code/Thor/thor/parity/keys\", \"passwd\")\n        .expect(\"should load or generate new eth key\");\n</code></pre>\n\n<p>In your first question, this was not necessary because you were using '~' as your path, which is a valid path by itself.  This time, you are starting with '/Users...' which requires an initial slash '/'.</p>\n"}], "owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 57201817, "answer_count": 1, "score": 0, "last_activity_date": 1564057538, "creation_date": 1564056789, "last_edit_date": 1592644375, "question_id": 57201720, "link": "https://stackoverflow.com/questions/57201720/cannot-write-keyfile-with-crate", "title": "Cannot write keyfile with crate", "body": "<p>I am trying to use the function here  <a href=\"https://docs.rs/ethkey/0.2.5/ethkey/\" rel=\"nofollow noreferrer\">https://docs.rs/ethkey/0.2.5/ethkey/</a> to write a keyfile for ethereum :</p>\n<pre><code>let key = EthAccount::load_or_generate(&quot;Users/Documents/Code/Thor/thor/parity/keys&quot;, &quot;passwd&quot;)\n        .expect(&quot;should load or generate new eth key&quot;);\n\n    println!(&quot;{:?}&quot;, key.address());\n</code></pre>\n<p>unfortunately, it doesnt work and it get the following error:</p>\n<pre><code>thread 'main' panicked at 'should load or generate new eth key: Error(SerdeJsonError(Error(&quot;Is a directory (os error 21)&quot;, line: 0, column: 0)), State { next_error: None, backtrace: InternalBacktrace { backtrace: None } })', src/libcore/result.rs:999:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n<h1>Update</h1>\n<p><code>load_or_generate</code> works when i enter the <code>~</code> as the first argument but not the file path where i actually want my keys i.e <code>Users/Documents/Code/Thor/thor/parity/keys</code></p>\n<h2>Update</h2>\n<p>I am now using the full path with a slash infront but still doenst work. i.e.</p>\n<pre><code>let key = EthAccount::load_or_generate(&quot;./Users/samueldare/Documents/Code/Thor/thor/parity/keys&quot;, &quot;passwd&quot;)\n        .expect(&quot;should load or generate new eth key&quot;);\n\n    println!(&quot;{:?}&quot;, key.address());\n</code></pre>\n<p>I will apprciate pointers on this</p>\n"}, {"tags": ["rust", "rust-cargo", "rust-crates"], "answers": [{"comments": [{"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 0, "creation_date": 1564055974, "post_id": 57201340, "comment_id": 100910505, "body": "Thanks! that works for the home, but when i try to put it in a file like : <code>&#47;Users&#47;Documents&#47;Code&#47;Thor&#47;thor&#47;parity&#47;keys</code> i get the following error: <code>thread &#39;main&#39; panicked at &#39;should load or generate new eth key: Error(SerdeJsonError(Error(&quot;Is a directory (os error 21)&quot;, line: 0, column: 0)), State { next_error: None, backtrace: InternalBacktrace { backtrace: None } })&#39;, src&#47;libcore&#47;result.rs:999:5 note: run with </code>RUST_BACKTRACE=1` environment variable to display a backtrace` thanks for your help!"}, {"owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "reply_to_user": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 0, "creation_date": 1564056489, "post_id": 57201340, "comment_id": 100910768, "body": "Looks like a new question :-).  Your first question is a great <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>.  The comment, is really a brand new question.  Please present it with its own <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> in a new question, after accepting the answer in this question."}, {"owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "edited": false, "score": 0, "creation_date": 1564056824, "post_id": 57201340, "comment_id": 100910936, "body": "I have written a new question here: <a href=\"https://stackoverflow.com/questions/57201720/cannot-write-keyfile-with-crate\" title=\"cannot write keyfile with crate\">stackoverflow.com/questions/57201720/&hellip;</a> thanks for your help!!"}], "tags": [], "owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "is_accepted": true, "score": 1, "last_activity_date": 1564056916, "last_edit_date": 1564056916, "creation_date": 1564055489, "answer_id": 57201340, "question_id": 57201043, "link": "https://stackoverflow.com/questions/57201043/crate-cannot-find-path/57201340#57201340", "title": "Crate cannot find path", "body": "<p>The first argument to <code>load_or_generate()</code> takes a <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html\" rel=\"nofollow noreferrer\">std::path::Path</a> with no closing slash ( '/' ).  Remove the slash:</p>\n\n<pre><code>fn main() {\n    let key = EthAccount::load_or_generate(\"~\", \"passwd\")\n        .expect(\"should load or generate new eth key\");\n\n    println!(\"{:?}\", key.address())\n}\n</code></pre>\n\n<p>Sample output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>05:47 ethtest (master) \u2717 cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.04s\n     Running `target/debug/ethtest`\nAddress(0x8248af6d1765e559509060b88e540a3567c42d20)\n05:47 ethtest (master) \u2717 \n</code></pre>\n"}], "owner": {"reputation": 2066, "user_id": 6363050, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f9db389fc3801b8ecef05ed3074e2f03?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Dare", "link": "https://stackoverflow.com/users/6363050/samuel-dare"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 57201340, "answer_count": 1, "score": 0, "last_activity_date": 1564056916, "creation_date": 1564054521, "question_id": 57201043, "link": "https://stackoverflow.com/questions/57201043/crate-cannot-find-path", "title": "Crate cannot find path", "body": "<p>I am trying to use this crate to generate an ethereum address: <a href=\"https://docs.rs/ethkey/0.2.5/ethkey/\" rel=\"nofollow noreferrer\">https://docs.rs/ethkey/0.2.5/ethkey/</a></p>\n\n<pre><code>use ethkey::prelude::*;\n\nfn main() {\n    let key = EthAccount::load_or_generate(\"~/\", \"passwd\")\n        .expect(\"should load or generate new eth key\");\n\n    println!(\"{:?}\", key.address())\n}\n</code></pre>\n\n<p>This is the example from the documentation and it doesnt seem to work. \nI get the error below:</p>\n\n<blockquote>\n  <p>cargo run    Compiling ethkey v0.1.0\n  (/Users/samueldare/Documents/Code/Thor/ethkey)\n      Finished dev [unoptimized + debuginfo] target(s) in 1.34s\n       Running <code>target/debug/ethkey</code> thread 'main' panicked at 'should load or generate new eth key: Error(IoError(Os { code: 2, kind:\n  NotFound, message: \"No such file or directory\" }), State { next_error:\n  None, backtrace: InternalBacktrace { backtrace: None } })',\n  src/libcore/result.rs:999:5 note: run with <code>RUST_BACKTRACE=1</code>\n  environment variable to display a backtrace.</p>\n</blockquote>\n\n<p>Ive use <code>~/</code> as a last attempt to generate the key file in rust, but it still doesnt seem to work.</p>\n\n<p>I will appreciate any pointers with this</p>\n"}, {"tags": ["arrays", "rust", "arithmetic-expressions"], "answers": [{"tags": [], "owner": {"reputation": 1251, "user_id": 2603925, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/92e0bd82c3fbfeeef3996f83b7ed76f4?s=128&d=identicon&r=PG", "display_name": "Luke Skywalker", "link": "https://stackoverflow.com/users/2603925/luke-skywalker"}, "is_accepted": true, "score": 1, "last_activity_date": 1564049375, "last_edit_date": 1564049375, "creation_date": 1564039666, "answer_id": 57196505, "question_id": 57195251, "link": "https://stackoverflow.com/questions/57195251/rust-ndarray-arithmetic-operation-unexpected-type-mismatch/57196505#57196505", "title": "Rust ndarray arithmetic operation unexpected type mismatch", "body": "<p>I should have read the <a href=\"https://docs.rs/ndarray/0.12.1/ndarray/struct.ArrayBase.html#arithmetic-operations\" rel=\"nofollow noreferrer\">documentation</a> more carefully:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&amp;A @ &amp;A which produces a new Array\nB @ A which consumes B, updates it with the result, and returns it\nB @ &amp;A which consumes B, updates it with the result, and returns it\nC @= &amp;A which performs an arithmetic operation in place\n</code></pre>\n\n<p>There is no <code>&amp;A @ B</code> situation for some reason. The second argument cannot be consumed. Either none is, or only the first one. As I don't want <code>a</code> to be consumed here, that is why I need to reference the return value of the <code>array!</code> macro.</p>\n\n<p>So the solution is:</p>\n\n<pre><code>let baz = &amp;a - &amp;array![1, 2, 3];\n</code></pre>\n\n<p>The compiler error is not really helping here though...</p>\n"}], "owner": {"reputation": 1251, "user_id": 2603925, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/92e0bd82c3fbfeeef3996f83b7ed76f4?s=128&d=identicon&r=PG", "display_name": "Luke Skywalker", "link": "https://stackoverflow.com/users/2603925/luke-skywalker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 57196505, "answer_count": 1, "score": 2, "last_activity_date": 1564049375, "creation_date": 1564034418, "last_edit_date": 1564039432, "question_id": 57195251, "link": "https://stackoverflow.com/questions/57195251/rust-ndarray-arithmetic-operation-unexpected-type-mismatch", "title": "Rust ndarray arithmetic operation unexpected type mismatch", "body": "<p>I'm having a problem when trying to perform an arithmetic operation on two <code>Array1</code>s of the <a href=\"https://crates.io/crates/ndarray\" rel=\"nofollow noreferrer\">ndarray crate</a>.</p>\n\n<p>I have tried to reduce my problem to a the following reprex:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use(array)]\nextern crate ndarray;\n\nuse ndarray::Array1;\n\nfn main() {\n  let a: Array1&lt;i8&gt; = array![1, 2, 3];\n  let baz = &amp;a - array![1, 2, 3];\n  println!(\"{:#?}\", baz);\n}\n</code></pre>\n\n<p>It fails with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>  |\n8 |   let baz = &amp;a - array![1, 2, 3];\n  |                ^ expected struct `ndarray::ArrayBase`, found i8\n  |\n</code></pre>\n\n<p>According to the <a href=\"https://docs.rs/ndarray/0.12.1/ndarray/struct.ArrayBase.html#arithmetic-operations\" rel=\"nofollow noreferrer\">documentation</a> I should be able to subtract two <code>Array1</code>s and <code>array!</code> creates an <code>Array1</code>.</p>\n\n<p>What I am doing wrong?</p>\n"}, {"tags": ["android", "c", "rust", "rust-cargo", "lmdb"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564033284, "post_id": 57193895, "comment_id": 100898651, "body": "It seems, that you are using the cc crate. It would be good to see your code that compiles the library, e.g. your <code>build.rs</code>."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564052149, "post_id": 57196443, "comment_id": 100908537, "body": "Despite asking for getting rewarded is pretty rude: what is <i>linex-android</i>? Your post needs to be extended. <i>A lot</i>. So many crucial information are missing, e.g. how to include the rust code into Android Studio or Flutter."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564120888, "post_id": 57196443, "comment_id": 100933076, "body": "Pardon? What exactly are you trying to tell me?"}], "tags": [], "owner": {"reputation": 27, "user_id": 11773659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c95b2a6d9ae29d17848c70e1251282e?s=128&d=identicon&r=PG&f=1", "display_name": "Kipli Antonio Carle Mene", "link": "https://stackoverflow.com/users/11773659/kipli-antonio-carle-mene"}, "is_accepted": false, "score": -2, "last_activity_date": 1564039454, "creation_date": 1564039454, "answer_id": 57196443, "question_id": 57193895, "link": "https://stackoverflow.com/questions/57193895/error-use-of-undeclared-identifier-pthread-mutex-robust-cargo-build-liblmdb-s/57196443#57196443", "title": "Error: use of undeclared identifier &#39;PTHREAD_MUTEX_ROBUST&#39; cargo build liblmdb-sys for aarch64-linux-android target", "body": "<p>You can't just build and targeting to linex-android, another way to do this is develop your app via Android Studio or with Flutter</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 12307802, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1181ef88fd8d094bf55660f26937434?s=128&d=identicon&r=PG&f=1", "display_name": "Strider", "link": "https://stackoverflow.com/users/12307802/strider"}, "is_accepted": false, "score": 0, "last_activity_date": 1572623462, "last_edit_date": 1572623462, "creation_date": 1572617269, "answer_id": 58660610, "question_id": 57193895, "link": "https://stackoverflow.com/questions/57193895/error-use-of-undeclared-identifier-pthread-mutex-robust-cargo-build-liblmdb-s/58660610#58660610", "title": "Error: use of undeclared identifier &#39;PTHREAD_MUTEX_ROBUST&#39; cargo build liblmdb-sys for aarch64-linux-android target", "body": "<p>First, make sure you have all the android build targets installed:</p>\n\n<pre><code>rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android\n</code></pre>\n\n<p>Then <code>install cargo-ndk</code></p>\n\n<pre><code>cargo install cargo-ndk\n</code></pre>\n\n<p>Now you need to export a number of variables in the terminal that will be used by the build.</p>\n\n<p>If you are using pkg-config then</p>\n\n<pre><code>export PKG_CONFIG_ALLOW_CROSS=1\n</code></pre>\n\n<p>The root directory of the NDK</p>\n\n<pre><code>export NDK_HOME=the_path_to_the_ndk\n</code></pre>\n\n<p>The platform version</p>\n\n<pre><code>export NDK_API_LEVEL=the_api_level\n</code></pre>\n\n<p>Note that the compilers must be specified as clang for newer versions of the NDK since GCC was deprecated in the android toolchain and is no longer present (some projects try to reference GCC by default)</p>\n\n<pre><code>export CC=$NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android$NDK_API_LEVEL-clang\nexport CXX=$NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android$NDK_API_LEVEL-clang++\n</code></pre>\n\n<p>Then the rest of the variables</p>\n\n<pre><code>export AR=$NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android-ar\nexport AS=$NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android-as\nexport LD=$NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android-ld\nexport RANLIB=$NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android-ranlib\nexport STRIP=$NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android-strip\n</code></pre>\n\n<p>You were on the right track in thinking -DMDB_USE_ROBUST=0, it just needed to be passed to the compiler flags</p>\n\n<pre><code>export CFLAGS=-DMDB_USE_ROBUST=0\n</code></pre>\n\n<p>Then in your rust project, you will need to create a .config directory in the same directory as your .toml file. Within the .config directory, you will need to create a config file.</p>\n\n<p>In the config file you will need to specify the relevant build targets for each target you need built (replace NDK_HOME and NDK_API_LEVEL with their respective values)</p>\n\n<pre><code>[target.aarch64-linux-android]\nar = \"&lt;NDK_HOME&gt;/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android-ar\"\nlinker = \"&lt;NDK_HOME&gt;/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android&lt;NDK_API_LEVEL&gt;-clang\"\n</code></pre>\n\n<p>You should then be able to build successfully with</p>\n\n<pre><code>cargo ndk --target aarch64-linux-android --android-platform $NDK_API_LEVEL -- build --release\n</code></pre>\n"}], "owner": {"reputation": 80, "user_id": 6267487, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-I74l6LwxTV0/AAAAAAAAAAI/AAAAAAAAAX8/1d_jdIQinz0/photo.jpg?sz=128", "display_name": "Daniel Wang", "link": "https://stackoverflow.com/users/6267487/daniel-wang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 520, "favorite_count": 1, "answer_count": 2, "score": 0, "last_activity_date": 1572623462, "creation_date": 1564025547, "last_edit_date": 1565619635, "question_id": 57193895, "link": "https://stackoverflow.com/questions/57193895/error-use-of-undeclared-identifier-pthread-mutex-robust-cargo-build-liblmdb-s", "title": "Error: use of undeclared identifier &#39;PTHREAD_MUTEX_ROBUST&#39; cargo build liblmdb-sys for aarch64-linux-android target", "body": "<p>I am trying to compile a <a href=\"https://github.com/mimblewimble/grin-wallet/tree/master/libwallet\" rel=\"nofollow noreferrer\">rust project</a> into an Android target (aarch64-linux-android).</p>\n\n<p>From the comments in the <a href=\"https://github.com/LMDB/lmdb/blob/ad8488cfac644d7a289e428ab3c403c859d844cb/libraries/liblmdb/mdb.c#L246\" rel=\"nofollow noreferrer\">lmdb code</a>, it seems to need to run the compilation </p>\n\n<blockquote>\n  <p><code>\"aarch64-linux-android-gcc\" \"-O2\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-Wall\" \"-Wextra\" \"-o\" \"/Users/username/grin-wallet/target/aarch64-linux-android/release/build/liblmdb-sys-7a2d430dc3c9f3e3/out/mdb/libraries/liblmdb/mdb.o\" \"-c\" \"mdb/libraries/liblmdb/mdb.c\"</code></p>\n</blockquote>\n\n<p>with an additional <code>-DMDB_USE_ROBUST=0</code> flag. Is this configurable from either the <code>cargo build</code> command or adding something to Cargo.toml?</p>\n\n<p>The error I am getting is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: failed to run custom build command for `liblmdb-sys v0.2.2`\n\nCaused by:\n  process didn't exit successfully: `/Users/username/grin-wallet/target/release/build/liblmdb-sys-b6bfc7b665736f9b/build-script-build` (exit code: 101)\n--- stdout\nTARGET = Some(\"aarch64-linux-android\")\nTARGET = Some(\"aarch64-linux-android\")\nHOST = Some(\"x86_64-apple-darwin\")\nTARGET = Some(\"aarch64-linux-android\")\nTARGET = Some(\"aarch64-linux-android\")\nHOST = Some(\"x86_64-apple-darwin\")\nCC_aarch64-linux-android = None\nCC_aarch64_linux_android = None\nTARGET_CC = None\nCC = None\nTARGET = Some(\"aarch64-linux-android\")\nHOST = Some(\"x86_64-apple-darwin\")\nCFLAGS_aarch64-linux-android = None\nCFLAGS_aarch64_linux_android = None\nTARGET_CFLAGS = None\nCFLAGS = None\nDEBUG = Some(\"false\")\nrunning: \"aarch64-linux-android-gcc\" \"-O2\" \"-ffunction-sections\" \"-fdata-sections\" \"-fPIC\" \"-Wall\" \"-Wextra\" \"-o\" \"/Users/username/grin-wallet/target/aarch64-linux-android/release/build/liblmdb-sys-7a2d430dc3c9f3e3/out/mdb/libraries/liblmdb/mdb.o\" \"-c\" \"mdb/libraries/liblmdb/mdb.c\"\ncargo:warning=mdb/libraries/liblmdb/mdb.c:4625:13: warning: implicit declaration of function 'pthread_mutexattr_setrobust' is invalid in C99 [-Wimplicit-function-declaration]\ncargo:warning=                        || (rc = pthread_mutexattr_setrobust(&amp;mattr, PTHREAD_MUTEX_ROBUST))\ncargo:warning=                                 ^\ncargo:warning=mdb/libraries/liblmdb/mdb.c:4625:49: error: use of undeclared identifier 'PTHREAD_MUTEX_ROBUST'\ncargo:warning=                        || (rc = pthread_mutexattr_setrobust(&amp;mattr, PTHREAD_MUTEX_ROBUST))\ncargo:warning=                                                                     ^\ncargo:warning=mdb/libraries/liblmdb/mdb.c:9821:33: warning: unused parameter 'env' [-Wunused-parameter]\ncargo:warning=mdb_env_get_maxkeysize(MDB_env *env)\ncargo:warning=                                ^\ncargo:warning=mdb/libraries/liblmdb/mdb.c:10002:10: warning: implicit declaration of function 'pthread_mutex_consistent' is invalid in C99 [-Wimplicit-function-declaration]\ncargo:warning=                        rc2 = mdb_mutex_consistent(mutex);\ncargo:warning=                              ^\ncargo:warning=mdb/libraries/liblmdb/mdb.c:351:37: note: expanded from macro 'mdb_mutex_consistent'\ncargo:warning=#define mdb_mutex_consistent(mutex)     pthread_mutex_consistent(mutex)\ncargo:warning=                                        ^\ncargo:warning=3 warnings and 1 error generated.\nexit code: 1\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1410, "user_id": 5827450, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-r3ocQbM_fgs/AAAAAAAAAAI/AAAAAAAAAAw/R48S5OAnokw/photo.jpg?sz=128", "display_name": "Charlie \u6728\u5320", "link": "https://stackoverflow.com/users/5827450/charlie-%e6%9c%a8%e5%8c%a0"}, "edited": false, "score": 0, "creation_date": 1590190860, "post_id": 57193489, "comment_id": 109597134, "body": "Whis is the meaning of &quot;This ensures Post can\u2019t use the old state value after we\u2019ve transformed it into a new state.&quot; ?"}, {"owner": {"reputation": 1410, "user_id": 5827450, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-r3ocQbM_fgs/AAAAAAAAAAI/AAAAAAAAAAw/R48S5OAnokw/photo.jpg?sz=128", "display_name": "Charlie \u6728\u5320", "link": "https://stackoverflow.com/users/5827450/charlie-%e6%9c%a8%e5%8c%a0"}, "edited": false, "score": 0, "creation_date": 1590190983, "post_id": 57193489, "comment_id": 109597163, "body": "Can we do this ? ``` self.state = Some( self.state.take().expect(&quot;abc&quot;).request_review()); ```"}], "answers": [{"comments": [{"owner": {"reputation": 85, "user_id": 5148337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8340fe94455284267a8b38f448fd8d5?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad gorgan mohammadi", "link": "https://stackoverflow.com/users/5148337/mohammad-gorgan-mohammadi"}, "edited": false, "score": 2, "creation_date": 1564128307, "post_id": 57197431, "comment_id": 100936167, "body": "the book said it is possible that if we set the state directly Post might use old state value, I questioned how it is possible?"}, {"owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "reply_to_user": {"reputation": 85, "user_id": 5148337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8340fe94455284267a8b38f448fd8d5?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad gorgan mohammadi", "link": "https://stackoverflow.com/users/5148337/mohammad-gorgan-mohammadi"}, "edited": false, "score": 0, "creation_date": 1564129362, "post_id": 57197431, "comment_id": 100936613, "body": "@Mohammadgorganmohammadi I don&#39;t get what you mean, could you point me where and in which book did you find this ?"}, {"owner": {"reputation": 85, "user_id": 5148337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8340fe94455284267a8b38f448fd8d5?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad gorgan mohammadi", "link": "https://stackoverflow.com/users/5148337/mohammad-gorgan-mohammadi"}, "edited": false, "score": 1, "creation_date": 1564167950, "post_id": 57197431, "comment_id": 100955815, "body": "We need to set state to None temporarily rather than setting it directly with code like self.state = self.state.request_review(); to get ownership of the state value. This ensures Post can\u2019t use the old state value after we\u2019ve transformed it into a new state. page 501 rust official book:<a href=\"https://doc.rust-lang.org/beta/book/\" rel=\"nofollow noreferrer\">doc.rust-lang.org/beta/book</a>"}, {"owner": {"reputation": 1410, "user_id": 5827450, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-r3ocQbM_fgs/AAAAAAAAAAI/AAAAAAAAAAw/R48S5OAnokw/photo.jpg?sz=128", "display_name": "Charlie \u6728\u5320", "link": "https://stackoverflow.com/users/5827450/charlie-%e6%9c%a8%e5%8c%a0"}, "edited": false, "score": 0, "creation_date": 1590191287, "post_id": 57197431, "comment_id": 109597248, "body": "page link, <a href=\"https://doc.rust-lang.org/book/ch17-03-oo-design-patterns.html#requesting-a-review-of-the-post-changes-its-state\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>"}], "tags": [], "owner": {"reputation": 838, "user_id": 3613212, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NfaGR.png?s=128&g=1", "display_name": "Gr&#233;gory OBANOS", "link": "https://stackoverflow.com/users/3613212/gr%c3%a9gory-obanos"}, "is_accepted": false, "score": 0, "last_activity_date": 1564043042, "creation_date": 1564043042, "answer_id": 57197431, "question_id": 57193489, "link": "https://stackoverflow.com/questions/57193489/why-do-we-need-to-call-take-for-optiont-variable/57197431#57197431", "title": "why do we need to call take() for Option&lt;T&gt; variable", "body": "<p>If <code>request_review</code> panic, it will lead to free the <code>Box</code> twice, first in <code>request_review</code> and then when the <code>Option</code> is freed.</p>\n"}, {"comments": [{"owner": {"reputation": 1410, "user_id": 5827450, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-r3ocQbM_fgs/AAAAAAAAAAI/AAAAAAAAAAw/R48S5OAnokw/photo.jpg?sz=128", "display_name": "Charlie \u6728\u5320", "link": "https://stackoverflow.com/users/5827450/charlie-%e6%9c%a8%e5%8c%a0"}, "edited": false, "score": 0, "creation_date": 1590191189, "post_id": 57862198, "comment_id": 109597221, "body": "Can we do this ?  self.state = Some( self.state.take().expect(&quot;abc&quot;).request_review());"}, {"owner": {"reputation": 1410, "user_id": 5827450, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-r3ocQbM_fgs/AAAAAAAAAAI/AAAAAAAAAAw/R48S5OAnokw/photo.jpg?sz=128", "display_name": "Charlie \u6728\u5320", "link": "https://stackoverflow.com/users/5827450/charlie-%e6%9c%a8%e5%8c%a0"}, "edited": false, "score": 0, "creation_date": 1590191605, "post_id": 57862198, "comment_id": 109597315, "body": "Thanks for explaining it from a new angle.   What is the meaning of &quot;This ensures Post can\u2019t use the old state value after we\u2019ve transformed it into a new state.&quot; ?"}, {"owner": {"reputation": 1410, "user_id": 5827450, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-r3ocQbM_fgs/AAAAAAAAAAI/AAAAAAAAAAw/R48S5OAnokw/photo.jpg?sz=128", "display_name": "Charlie \u6728\u5320", "link": "https://stackoverflow.com/users/5827450/charlie-%e6%9c%a8%e5%8c%a0"}, "edited": false, "score": 0, "creation_date": 1590191756, "post_id": 57862198, "comment_id": 109597341, "body": "pub struct Post {     state: Option&lt;Box&lt;dyn State&gt;&gt;,     content: String, }  It was Option&lt;Box&lt;.&gt;&gt;, not Box&lt;.&gt;."}], "tags": [], "owner": {"reputation": 66, "user_id": 8004740, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/543fbfd80042749fea2eaf9dee4f3c84?s=128&d=identicon&r=PG&f=1", "display_name": "Xiang Zhou", "link": "https://stackoverflow.com/users/8004740/xiang-zhou"}, "is_accepted": true, "score": 5, "last_activity_date": 1593025225, "last_edit_date": 1593025225, "creation_date": 1568070817, "answer_id": 57862198, "question_id": 57193489, "link": "https://stackoverflow.com/questions/57193489/why-do-we-need-to-call-take-for-optiont-variable/57862198#57862198", "title": "why do we need to call take() for Option&lt;T&gt; variable", "body": "<p>If you code like this:</p>\n<pre><code>pub struct Post {\n    state: Box&lt;dyn State&gt;,\n    content: String,\n}\n\ntrait State {\n    fn request_review(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt;; \n}\n\nimpl Post {\n    // ... \n    pub fn request_review(&amp;mut self) {\n        self.state = self.state.request_review();\n    }\n    // ... \n}\n</code></pre>\n<p>You will get a compiler error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>self.state = self.state.request_review();\n             ^^^^^^ move occurs because `self.state` has type `std::boxed::Box&lt;dyn State&gt;`, which does not implement the `Copy` trait'.\n</code></pre>\n<p>This is because calling <code>State::request_review</code> will move <code>Box&lt;self&gt;</code>, which is allocated on heap, and Rust doesn't allow you to just move values away from heap unless you implement <code>Copy</code>, otherwise what's left there?  The book uses <code>Option::take()</code> to move ownership out and leave <code>None</code> on the place.</p>\n"}], "owner": {"reputation": 85, "user_id": 5148337, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8340fe94455284267a8b38f448fd8d5?s=128&d=identicon&r=PG&f=1", "display_name": "Mohammad gorgan mohammadi", "link": "https://stackoverflow.com/users/5148337/mohammad-gorgan-mohammadi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 664, "favorite_count": 1, "accepted_answer_id": 57862198, "answer_count": 2, "score": 8, "last_activity_date": 1593025225, "creation_date": 1564021772, "last_edit_date": 1592644375, "question_id": 57193489, "link": "https://stackoverflow.com/questions/57193489/why-do-we-need-to-call-take-for-optiont-variable", "title": "why do we need to call take() for Option&lt;T&gt; variable", "body": "<p>In this piece of code:</p>\n<pre><code>pub struct Post {\n    state: Option&lt;Box&lt;dyn State&gt;&gt;,\n    content: String,\n}\n\nimpl Post {\n    pub fn new() -&gt; Post {\n        Post {\n            state: Some(Box::new(Draft {})),\n            content: String::new(),\n        }\n    }\n    \n    pub fn add_text(&amp;mut self, text: &amp;str) {\n        self.content.push_str(text);\n    }\n    \n    pub fn content(&amp;self) -&gt; &amp;str {\n        &quot;&quot;\n    }\n\n    pub fn request_review(&amp;mut self) {\n        if let Some(s) = self.state.take() {\n            self.state = Some(s.request_review())\n        }\n    }\n}\n\ntrait State {\n    fn request_review(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt;; \n}\n\nstruct Draft {}\n\nimpl State for Draft {\n    fn request_review(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt; {\n        Box::new(PendingReview {})\n    }\n}\n\nstruct PendingReview {\n    fn request_review(self: Box&lt;Self&gt;) -&gt; Box&lt;dyn State&gt; {\n        self\n    }\n}\n</code></pre>\n<p>there is a  call to <code>take()</code>; the book says:</p>\n<blockquote>\n<p>To consume the old state, the request_review method needs to take ownership of the state value. This is where the Option in the state field of Post comes in: we call the take method to take the Some value out of the state field and leave a None in its place.</p>\n<p>We need to set state to None temporarily rather than setting it directly with code like <code>self.state = self.state.request_review();</code> to get ownership of the state value. This ensures Post can\u2019t use the old state value after we\u2019ve transformed it into a new state.</p>\n</blockquote>\n<p>How is it possible that <code>Post</code> uses its old state if we set it directly?</p>\n"}]